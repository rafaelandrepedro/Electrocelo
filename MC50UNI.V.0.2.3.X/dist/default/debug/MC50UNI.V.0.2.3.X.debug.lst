

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Mon Jul 18 15:58:44 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og9 
     1                           	processor	18F46K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     9                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    10                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    12                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    13                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    19                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    21                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    23                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    24                           	psect	text0,global,reloc=2,class=CODE,delta=1
    25                           	psect	text1,global,reloc=2,class=CODE,delta=1
    26                           	psect	text2,global,reloc=2,class=CODE,delta=1
    27                           	psect	text3,global,reloc=2,class=CODE,delta=1
    28                           	psect	text4,global,reloc=2,class=CODE,delta=1
    29                           	psect	text5,global,reloc=2,class=CODE,delta=1
    30                           	psect	text6,global,reloc=2,class=CODE,delta=1
    31                           	psect	text7,global,reloc=2,class=CODE,delta=1
    32                           	psect	text8,global,reloc=2,class=CODE,delta=1
    33                           	psect	text9,global,reloc=2,class=CODE,delta=1
    34                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text12,global,reloc=2,class=CODE,delta=1
    37                           	psect	text13,global,reloc=2,class=CODE,delta=1
    38                           	psect	text14,global,reloc=2,class=CODE,delta=1
    39                           	psect	text15,global,reloc=2,class=CODE,delta=1
    40                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text17,global,reloc=2,class=CODE,delta=1
    42                           	psect	text18,global,reloc=2,class=CODE,delta=1
    43                           	psect	text19,global,reloc=2,class=CODE,delta=1
    44                           	psect	text20,global,reloc=2,class=CODE,delta=1
    45                           	psect	text21,global,reloc=2,class=CODE,delta=1
    46                           	psect	text22,global,reloc=2,class=CODE,delta=1
    47                           	psect	text23,global,reloc=2,class=CODE,delta=1
    48                           	psect	text24,global,reloc=2,class=CODE,delta=1
    49                           	psect	text25,global,reloc=2,class=CODE,delta=1
    50                           	psect	text26,global,reloc=2,class=CODE,delta=1
    51                           	psect	text27,global,reloc=2,class=CODE,delta=1
    52                           	psect	text28,global,reloc=2,class=CODE,delta=1
    53                           	psect	text29,global,reloc=2,class=CODE,delta=1
    54                           	psect	text30,global,reloc=2,class=CODE,delta=1
    55                           	psect	text31,global,reloc=2,class=CODE,delta=1
    56                           	psect	text32,global,reloc=2,class=CODE,delta=1
    57                           	psect	text33,global,reloc=2,class=CODE,delta=1
    58                           	psect	text34,global,reloc=2,class=CODE,delta=1
    59                           	psect	text35,global,reloc=2,class=CODE,delta=1
    60                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text37,global,reloc=2,class=CODE,delta=1
    62                           	psect	text38,global,reloc=2,class=CODE,delta=1
    63                           	psect	text39,global,reloc=2,class=CODE,delta=1
    64                           	psect	text40,global,reloc=2,class=CODE,delta=1
    65                           	psect	text41,global,reloc=2,class=CODE,delta=1
    66                           	psect	text42,global,reloc=2,class=CODE,delta=1
    67                           	psect	text43,global,reloc=2,class=CODE,delta=1
    68                           	psect	text44,global,reloc=2,class=CODE,delta=1
    69                           	psect	text45,global,reloc=2,class=CODE,delta=1
    70                           	psect	text46,global,reloc=2,class=CODE,delta=1
    71                           	psect	text47,global,reloc=2,class=CODE,delta=1
    72                           	psect	text48,global,reloc=2,class=CODE,delta=1
    73                           	psect	text49,global,reloc=2,class=CODE,delta=1
    74                           	psect	text50,global,reloc=2,class=CODE,delta=1
    75                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text52,global,reloc=2,class=CODE,delta=1
    77                           	psect	text53,global,reloc=2,class=CODE,delta=1
    78                           	psect	text54,global,reloc=2,class=CODE,delta=1
    79                           	psect	text55,global,reloc=2,class=CODE,delta=1
    80                           	psect	text56,global,reloc=2,class=CODE,delta=1
    81                           	psect	text57,global,reloc=2,class=CODE,delta=1
    82                           	psect	text58,global,reloc=2,class=CODE,delta=1
    83                           	psect	text59,global,reloc=2,class=CODE,delta=1
    84                           	psect	text60,global,reloc=2,class=CODE,delta=1
    85                           	psect	text61,global,reloc=2,class=CODE,delta=1
    86                           	psect	text62,global,reloc=2,class=CODE,delta=1
    87                           	psect	text63,global,reloc=2,class=CODE,delta=1
    88                           	psect	text64,global,reloc=2,class=CODE,delta=1
    89                           	psect	text65,global,reloc=2,class=CODE,delta=1
    90                           	psect	text66,global,reloc=2,class=CODE,delta=1
    91                           	psect	text67,global,reloc=2,class=CODE,delta=1
    92                           	psect	text68,global,reloc=2,class=CODE,delta=1
    93                           	psect	text69,global,reloc=2,class=CODE,delta=1
    94                           	psect	text70,global,reloc=2,class=CODE,delta=1
    95                           	psect	text71,global,reloc=2,class=CODE,delta=1
    96                           	psect	text72,global,reloc=2,class=CODE,delta=1
    97                           	psect	text73,global,reloc=2,class=CODE,delta=1
    98                           	psect	text74,global,reloc=2,class=CODE,delta=1
    99                           	psect	text75,global,reloc=2,class=CODE,delta=1
   100                           	psect	text76,global,reloc=2,class=CODE,delta=1
   101                           	psect	text77,global,reloc=2,class=CODE,delta=1
   102                           	psect	text78,global,reloc=2,class=CODE,delta=1
   103                           	psect	text79,global,reloc=2,class=CODE,delta=1
   104                           	psect	text80,global,reloc=2,class=CODE,delta=1
   105                           	psect	text81,global,reloc=2,class=CODE,delta=1
   106                           	psect	text82,global,reloc=2,class=CODE,delta=1
   107                           	psect	text83,global,reloc=2,class=CODE,delta=1
   108                           	psect	text84,global,reloc=2,class=CODE,delta=1
   109                           	psect	text85,global,reloc=2,class=CODE,delta=1
   110                           	psect	text86,global,reloc=2,class=CODE,delta=1
   111                           	psect	text87,global,reloc=2,class=CODE,delta=1
   112                           	psect	text88,global,reloc=2,class=CODE,delta=1
   113                           	psect	text89,global,reloc=2,class=CODE,delta=1
   114                           	psect	text90,global,reloc=2,class=CODE,delta=1
   115                           	psect	text91,global,reloc=2,class=CODE,delta=1
   116                           	psect	text92,global,reloc=2,class=CODE,delta=1
   117                           	psect	text93,global,reloc=2,class=CODE,delta=1
   118                           	psect	text94,global,reloc=2,class=CODE,delta=1
   119                           	psect	text95,global,reloc=2,class=CODE,delta=1
   120                           	psect	text96,global,reloc=2,class=CODE,delta=1
   121                           	psect	text97,global,reloc=2,class=CODE,delta=1
   122                           	psect	text98,global,reloc=2,class=CODE,delta=1
   123                           	psect	text99,global,reloc=2,class=CODE,delta=1
   124                           	psect	text100,global,reloc=2,class=CODE,delta=1
   125                           	psect	text101,global,reloc=2,class=CODE,delta=1
   126                           	psect	text102,global,reloc=2,class=CODE,delta=1
   127                           	psect	text103,global,reloc=2,class=CODE,delta=1
   128                           	psect	text104,global,reloc=2,class=CODE,delta=1
   129                           	psect	text105,global,reloc=2,class=CODE,delta=1
   130                           	psect	text106,global,reloc=2,class=CODE,delta=1
   131                           	psect	text107,global,reloc=2,class=CODE,delta=1
   132                           	psect	text108,global,reloc=2,class=CODE,delta=1
   133                           	psect	text109,global,reloc=2,class=CODE,delta=1
   134                           	psect	text110,global,reloc=2,class=CODE,delta=1
   135                           	psect	text111,global,reloc=2,class=CODE,delta=1
   136                           	psect	text112,global,reloc=2,class=CODE,delta=1
   137                           	psect	text113,global,reloc=2,class=CODE,delta=1
   138                           	psect	text114,global,reloc=2,class=CODE,delta=1
   139                           	psect	text115,global,reloc=2,class=CODE,delta=1
   140                           	psect	text116,global,reloc=2,class=CODE,delta=1
   141                           	psect	text117,global,reloc=2,class=CODE,delta=1
   142                           	psect	text118,global,reloc=2,class=CODE,delta=1
   143                           	psect	text119,global,reloc=2,class=CODE,delta=1
   144                           	psect	text120,global,reloc=2,class=CODE,delta=1
   145                           	psect	text121,global,reloc=2,class=CODE,delta=1
   146                           	psect	text122,global,reloc=2,class=CODE,delta=1
   147                           	psect	text123,global,reloc=2,class=CODE,delta=1
   148                           	psect	text124,global,reloc=2,class=CODE,delta=1
   149                           	psect	text125,global,reloc=2,class=CODE,delta=1,group=1
   150                           	psect	text126,global,reloc=2,class=CODE,delta=1
   151                           	psect	text127,global,reloc=2,class=CODE,delta=1,group=1
   152                           	psect	text128,global,reloc=2,class=CODE,delta=1
   153                           	psect	text129,global,reloc=2,class=CODE,delta=1
   154                           	psect	text130,global,reloc=2,class=CODE,delta=1
   155                           	psect	text131,global,reloc=2,class=CODE,delta=1
   156                           	psect	text132,global,reloc=2,class=CODE,delta=1,group=2
   157                           	psect	text133,global,reloc=2,class=CODE,delta=1
   158                           	psect	text134,global,reloc=2,class=CODE,delta=1
   159                           	psect	text135,global,reloc=2,class=CODE,delta=1,inline
   160                           	psect	text136,global,reloc=2,class=CODE,delta=1
   161                           	psect	text137,global,reloc=2,class=CODE,delta=1
   162                           	psect	text138,global,reloc=2,class=CODE,delta=1
   163                           	psect	text139,global,reloc=2,class=CODE,delta=1,inline
   164                           	psect	text140,global,reloc=2,class=CODE,delta=1,inline
   165                           	psect	text141,global,reloc=2,class=CODE,delta=1
   166                           	psect	text142,global,reloc=2,class=CODE,delta=1
   167                           	psect	text143,global,reloc=2,class=CODE,delta=1
   168                           	psect	text144,global,reloc=2,class=CODE,delta=1
   169                           	psect	text145,global,reloc=2,class=CODE,delta=1
   170                           	psect	text146,global,reloc=2,class=CODE,delta=1
   171                           	psect	text147,global,reloc=2,class=CODE,delta=1
   172                           	psect	text148,global,reloc=2,class=CODE,delta=1
   173                           	psect	text149,global,reloc=2,class=CODE,delta=1
   174                           	psect	text150,global,reloc=2,class=CODE,delta=1
   175                           	psect	text151,global,reloc=2,class=CODE,delta=1
   176                           	psect	text152,global,reloc=2,class=CODE,delta=1
   177                           	psect	text153,global,reloc=2,class=CODE,delta=1
   178                           	psect	text154,global,reloc=2,class=CODE,delta=1
   179                           	psect	text155,global,reloc=2,class=CODE,delta=1
   180                           	psect	text156,global,reloc=2,class=CODE,delta=1
   181                           	psect	text157,global,reloc=2,class=CODE,delta=1,inline
   182                           	psect	text158,global,reloc=2,class=CODE,delta=1,inline
   183                           	psect	text159,global,reloc=2,class=CODE,delta=1,inline
   184                           	psect	text160,global,reloc=2,class=CODE,delta=1,inline
   185                           	psect	text161,global,reloc=2,class=CODE,delta=1,inline
   186                           	psect	text162,global,reloc=2,class=CODE,delta=1,inline
   187                           	psect	text163,global,reloc=2,class=CODE,delta=1,inline
   188                           	psect	text164,global,reloc=2,class=CODE,delta=1
   189                           	psect	text165,global,reloc=2,class=CODE,delta=1
   190                           	psect	text166,global,reloc=2,class=CODE,delta=1
   191                           	psect	text167,global,reloc=2,class=CODE,delta=1
   192                           	psect	text168,global,reloc=2,class=CODE,delta=1
   193                           	psect	text169,global,reloc=2,class=CODE,delta=1
   194                           	psect	text170,global,reloc=2,class=CODE,delta=1
   195                           	psect	text171,global,reloc=2,class=CODE,delta=1
   196                           	psect	text172,global,reloc=2,class=CODE,delta=1
   197                           	psect	text173,global,reloc=2,class=CODE,delta=1
   198                           	psect	text174,global,reloc=2,class=CODE,delta=1
   199                           	psect	text175,global,reloc=2,class=CODE,delta=1
   200                           	psect	text176,global,reloc=2,class=CODE,delta=1
   201                           	psect	text177,global,reloc=2,class=CODE,delta=1
   202                           	psect	text178,global,reloc=2,class=CODE,delta=1
   203                           	psect	text179,global,reloc=2,class=CODE,delta=1,inline
   204                           	psect	text180,global,reloc=2,class=CODE,delta=1,inline
   205                           	psect	text181,global,reloc=2,class=CODE,delta=1,inline
   206                           	psect	text182,global,reloc=2,class=CODE,delta=1
   207                           	psect	text183,global,reloc=2,class=CODE,delta=1,inline
   208                           	psect	text184,global,reloc=2,class=CODE,delta=1,inline
   209                           	psect	text185,global,reloc=2,class=CODE,delta=1,inline
   210                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   211                           	psect	text187,global,reloc=2,class=CODE,delta=1
   212                           	psect	text188,global,reloc=2,class=CODE,delta=1
   213                           	psect	text189,global,reloc=2,class=CODE,delta=1
   214                           	psect	text190,global,reloc=2,class=CODE,delta=1
   215                           	psect	text191,global,reloc=2,class=CODE,delta=1
   216                           	psect	text192,global,reloc=2,class=CODE,delta=1
   217                           	psect	text193,global,reloc=2,class=CODE,delta=1
   218                           	psect	text194,global,reloc=2,class=CODE,delta=1
   219                           	psect	text195,global,reloc=2,class=CODE,delta=1
   220                           	psect	text196,global,reloc=2,class=CODE,delta=1
   221                           	psect	text197,global,reloc=2,class=CODE,delta=1
   222                           	psect	text198,global,reloc=2,class=CODE,delta=1
   223                           	psect	text199,global,reloc=2,class=CODE,delta=1
   224                           	psect	text200,global,reloc=2,class=CODE,delta=1
   225                           	psect	text201,global,reloc=2,class=CODE,delta=1
   226                           	psect	text202,global,reloc=2,class=CODE,delta=1
   227                           	psect	text203,global,reloc=2,class=CODE,delta=1
   228                           	psect	text204,global,reloc=2,class=CODE,delta=1
   229                           	psect	text205,global,reloc=2,class=CODE,delta=1
   230                           	psect	text206,global,reloc=2,class=CODE,delta=1
   231                           	psect	text207,global,reloc=2,class=CODE,delta=1
   232                           	psect	text208,global,reloc=2,class=CODE,delta=1
   233                           	psect	text209,global,reloc=2,class=CODE,delta=1
   234                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   235                           	psect	text210,global,reloc=2,class=CODE,delta=1
   236                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   237                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   238                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   239                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   240  0000                     
   241                           ; Version 2.36
   242                           ; Generated 28/01/2022 GMT
   243                           ; 
   244                           ; Copyright © 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
   245                           ; All rights reserved.
   246                           ; 
   247                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   248                           ; 
   249                           ; Redistribution and use in source and binary forms, with or without modification, are
   250                           ; permitted provided that the following conditions are met:
   251                           ; 
   252                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   253                           ;        conditions and the following disclaimer.
   254                           ; 
   255                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   256                           ;        of conditions and the following disclaimer in the documentation and/or other
   257                           ;        materials provided with the distribution. Publication is not required when
   258                           ;        this file is used in an embedded application.
   259                           ; 
   260                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   261                           ;        software without specific prior written permission.
   262                           ; 
   263                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   264                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   265                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   266                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   267                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   268                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   269                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   270                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   271                           ; 
   272                           ; 
   273                           ; Code-generator required, PIC18F46K40 Definitions
   274                           ; 
   275                           ; SFR Addresses
   276  0000                     
   277                           	psect	idataBANK0
   278  009836                     __pidataBANK0:
   279                           	callstack 0
   280                           
   281                           ;initializer for _auxCounter
   282  009836  03E8               	dw	1000
   283                           
   284                           	psect	idataBANK1
   285  009804                     __pidataBANK1:
   286                           	callstack 0
   287                           
   288                           ;initializer for _tempCounter
   289  009804  3DDD               	dw	15837
   290  009806  000F               	dw	15
   291                           
   292                           ;initializer for _firstselectflag
   293  009808  01                 	db	1
   294                           
   295                           	psect	idataBANK2
   296  009838                     __pidataBANK2:
   297                           	callstack 0
   298                           
   299                           ;initializer for _zeroCrossingWaitTime
   300  009838  19                 	db	25
   301  009839  19                 	db	25
   302                           
   303                           	psect	idataBANK3
   304  0093DC                     __pidataBANK3:
   305                           	callstack 0
   306                           
   307                           ;initializer for _DispTable
   308  0093DC  6F                 	db	111
   309  0093DD  21                 	db	33
   310  0093DE  76                 	db	118
   311  0093DF  73                 	db	115
   312  0093E0  39                 	db	57
   313  0093E1  5B                 	db	91
   314  0093E2  5F                 	db	95
   315  0093E3  61                 	db	97
   316  0093E4  7F                 	db	127
   317  0093E5  7B                 	db	123
   318  0093E6  7D                 	db	125
   319  0093E7  7F                 	db	127
   320  0093E8  4E                 	db	78
   321  0093E9  37                 	db	55
   322  0093EA  5E                 	db	94
   323  0093EB  5C                 	db	92
   324  0093EC  7C                 	db	124
   325  0093ED  3D                 	db	61
   326  0093EE  0E                 	db	14
   327  0093EF  2F                 	db	47
   328  0093F0  14                 	db	20
   329  0093F1  1E                 	db	30
   330  0093F2  07                 	db	7
   331  0093F3  45                 	db	69
   332  0093F4  10                 	db	16
   333  0093F5  0C                 	db	12
   334  0093F6  40                 	db	64
   335  0093F7  20                 	db	32
   336  0093F8  01                 	db	1
   337  0093F9  02                 	db	2
   338  0093FA  04                 	db	4
   339  0093FB  08                 	db	8
   340  0093FC  00                 	db	0
   341  0093FD  3B                 	db	59
   342  0093FE  1F                 	db	31
   343  0093FF  16                 	db	22
   344  009400  17                 	db	23
   345                           
   346                           	psect	smallconst
   347  000F00                     __psmallconst:
   348                           	callstack 0
   349  000F00  00                 	db	0
   350  000F01                     _i2c1_fsmStateTable:
   351                           	callstack 0
   352  000F01  7A                 	db	low _I2C1_DO_IDLE
   353  000F02  97                 	db	high _I2C1_DO_IDLE
   354  000F03  E6                 	db	low _I2C1_DO_SEND_ADR_READ
   355  000F04  96                 	db	high _I2C1_DO_SEND_ADR_READ
   356  000F05  D8                 	db	low _I2C1_DO_SEND_ADR_WRITE
   357  000F06  96                 	db	high _I2C1_DO_SEND_ADR_WRITE
   358  000F07  34                 	db	low _I2C1_DO_TX
   359  000F08  7C                 	db	high _I2C1_DO_TX
   360  000F09  D4                 	db	low _I2C1_DO_RX
   361  000F0A  80                 	db	high _I2C1_DO_RX
   362  000F0B  70                 	db	low _I2C1_DO_RCEN
   363  000F0C  97                 	db	high _I2C1_DO_RCEN
   364  000F0D  F0                 	db	low _I2C1_DO_TX_EMPTY
   365  000F0E  86                 	db	high _I2C1_DO_TX_EMPTY
   366  000F0F  C4                 	db	low _I2C1_DO_SEND_RESTART_READ
   367  000F10  97                 	db	high _I2C1_DO_SEND_RESTART_READ
   368  000F11  BC                 	db	low _I2C1_DO_SEND_RESTART_WRITE
   369  000F12  97                 	db	high _I2C1_DO_SEND_RESTART_WRITE
   370  000F13  B4                 	db	low _I2C1_DO_SEND_RESTART
   371  000F14  97                 	db	high _I2C1_DO_SEND_RESTART
   372  000F15  AC                 	db	low _I2C1_DO_SEND_STOP
   373  000F16  97                 	db	high _I2C1_DO_SEND_STOP
   374  000F17  A4                 	db	low _I2C1_DO_RX_ACK
   375  000F18  97                 	db	high _I2C1_DO_RX_ACK
   376  000F19  9C                 	db	low _I2C1_DO_RX_NACK_STOP
   377  000F1A  97                 	db	high _I2C1_DO_RX_NACK_STOP
   378  000F1B  94                 	db	low _I2C1_DO_RX_NACK_RESTART
   379  000F1C  97                 	db	high _I2C1_DO_RX_NACK_RESTART
   380  000F1D  66                 	db	low _I2C1_DO_RESET
   381  000F1E  97                 	db	high _I2C1_DO_RESET
   382  000F1F  F8                 	db	low _I2C1_DO_ADDRESS_NACK
   383  000F20  8B                 	db	high _I2C1_DO_ADDRESS_NACK
   384  000F21                     __end_of_i2c1_fsmStateTable:
   385                           	callstack 0
   386  0000                     _T2CON	set	4029
   387  0000                     _T1CON	set	4047
   388  0000                     _T1CLK	set	4050
   389  0000                     _T1GATE	set	4049
   390  0000                     _T0CON0	set	4053
   391  0000                     _INLVLD	set	3874
   392  0000                     _SLRCOND	set	3875
   393  0000                     _ODCOND	set	3876
   394  0000                     _WPUD	set	3877
   395  0000                     _TRISD	set	3979
   396  0000                     _TRISC	set	3978
   397  0000                     _TRISB	set	3977
   398  0000                     _TRISA	set	3976
   399  0000                     _TRISE	set	3980
   400  0000                     _LATC	set	3973
   401  0000                     _LATB	set	3972
   402  0000                     _OSCTUNE	set	3805
   403  0000                     _OSCFRQ	set	3806
   404  0000                     _ADERRL	set	3950
   405  0000                     _ADERRH	set	3951
   406  0000                     _ADPREVL	set	3937
   407  0000                     _ADPREVH	set	3938
   408  0000                     _ADFLTRL	set	3954
   409  0000                     _ADFLTRH	set	3955
   410  0000                     _ADACCL	set	3952
   411  0000                     _ADACCH	set	3953
   412  0000                     _ADCNT	set	3943
   413  0000                     _ADRESL	set	3939
   414  0000                     _ADRESH	set	3940
   415  0000                     _ADACQ	set	3932
   416  0000                     _ADCON0	set	3936
   417  0000                     _ADCLK	set	3927
   418  0000                     _ADSTAT	set	3941
   419  0000                     _ADCON3	set	3931
   420  0000                     _ADCON2	set	3930
   421  0000                     _ADPRE	set	3934
   422  0000                     _ADSTPTH	set	3945
   423  0000                     _ADUTHH	set	3949
   424  0000                     _ADUTHL	set	3948
   425  0000                     _ADLTHH	set	3947
   426  0000                     _SP1BRGH	set	3996
   427  0000                     _TX1STA	set	3998
   428  000F21  00                 	db	0	; dummy byte at the end
   429  0000                     
   430                           	psect	nvBANK1
   431  0001FF                     __pnvBANK1:
   432                           	callstack 0
   433  0001FF                     _eusart1TxBufferRemaining:
   434                           	callstack 0
   435  0001FF                     	ds	1
   436                           
   437                           	psect	nvBANK2
   438  0002DF                     __pnvBANK2:
   439                           	callstack 0
   440  0002DF                     _TMR2_InterruptHandler:
   441                           	callstack 0
   442  0002DF                     	ds	2
   443  0002E1                     _TMR1_InterruptHandler:
   444                           	callstack 0
   445  0002E1                     	ds	2
   446  0002E3                     _timer1ReloadVal:
   447                           	callstack 0
   448  0002E3                     	ds	2
   449  0002E5                     _TMR0_InterruptHandler:
   450                           	callstack 0
   451  0002E5                     	ds	2
   452  0002E7                     _EUSART1_ErrorHandler:
   453                           	callstack 0
   454  0002E7                     	ds	2
   455  0002E9                     _EUSART1_OverrunErrorHandler:
   456                           	callstack 0
   457  0002E9                     	ds	2
   458  0002EB                     _EUSART1_FramingErrorHandler:
   459                           	callstack 0
   460  0002EB                     	ds	2
   461  0002ED                     _EUSART1_RxDefaultInterruptHandler:
   462                           	callstack 0
   463  0002ED                     	ds	2
   464  0002EF                     _EUSART1_TxDefaultInterruptHandler:
   465                           	callstack 0
   466  0002EF                     	ds	2
   467  0000                     _WDTCON0bits	set	3794
   468  0000                     _TMR0IE	set	30229
   469  0000                     _TMR0IF	set	30293
   470  0000                     _LATEbits	set	3975
   471  0000                     _LATDbits	set	3974
   472  0000                     _LATAbits	set	3971
   473  0000                     _LATCbits	set	3973
   474  0000                     _PORTB	set	3982
   475  0000                     _T1CONbits	set	4047
   476  0000                     _SSP1CON2bits	set	3991
   477  0000                     _SSP1CON1bits	set	3990
   478  0000                     _ADCON0bits	set	3936
   479  0000                     _RC1STAbits	set	3997
   480  0000                     _GIE	set	32663
   481  0000                     _RX1PPS	set	3765
   482  0000                     _SSP1CLKPPS	set	3767
   483  0000                     _PIE0bits	set	3778
   484  0000                     _PIE3bits	set	3781
   485  0000                     _PIE4bits	set	3782
   486  0000                     _PIR0bits	set	3786
   487  0000                     _PIR3bits	set	3789
   488  0000                     _ADACT	set	3926
   489  0000                     _ADREF	set	3928
   490  0000                     _ADCON1	set	3929
   491  0000                     _ADCAP	set	3933
   492  0000                     _ADPCH	set	3935
   493  0000                     _ADRPT	set	3942
   494  0000                     _ADSTPTL	set	3944
   495  0000                     _ADLTHL	set	3946
   496  0000                     _RC1REG	set	3993
   497  0000                     _TX1REG	set	3994
   498  0000                     _SP1BRGL	set	3995
   499  0000                     _RC1STA	set	3997
   500  0000                     _BAUD1CON	set	3999
   501  0000                     _T2TMR	set	4027
   502  0000                     _T2PR	set	4028
   503  0000                     _T2HLT	set	4030
   504  0000                     _T2CLKCON	set	4031
   505  0000                     _TMR1L	set	4045
   506  0000                     _TMR1H	set	4046
   507  0000                     _T1GCON	set	4048
   508  0000                     _TMR0L	set	4051
   509  0000                     _TMR0H	set	4052
   510  0000                     _T0CON1	set	4054
   511  0000                     _PCON0bits	set	4055
   512  0000                     _INTCONbits	set	4082
   513  0000                     _LATA	set	3971
   514  0000                     _LATD	set	3974
   515  0000                     _LATE	set	3975
   516  0000                     _SSP1BUF	set	3986
   517  0000                     _SSP1ADD	set	3987
   518  0000                     _SSP1STAT	set	3989
   519  0000                     _SSP1CON2	set	3991
   520  0000                     _SSP1CON1	set	3990
   521  0000                     _WDTCON0	set	3794
   522  0000                     _OSCCON1	set	3800
   523  0000                     _PIR4bits	set	3790
   524  0000                     _OSCCON3	set	3802
   525  0000                     _OSCEN	set	3804
   526  0000                     _PMD0	set	3809
   527  0000                     _RC3PPS	set	3834
   528  0000                     _INLVLA	set	3853
   529  0000                     _SLRCONA	set	3854
   530  0000                     _ODCONA	set	3855
   531  0000                     _WPUA	set	3856
   532  0000                     _ANSELA	set	3857
   533  0000                     _ANSELB	set	3865
   534  0000                     _ANSELC	set	3873
   535  0000                     _ANSELD	set	3878
   536  0000                     _PMD5	set	3814
   537  0000                     _PMD4	set	3813
   538  0000                     _PMD3	set	3812
   539  0000                     _PMD2	set	3811
   540  0000                     _PMD1	set	3810
   541  0000                     _WDTCON1	set	3795
   542  0000                     _PORTEbits	set	3985
   543  0000                     _PORTBbits	set	3982
   544  0000                     _PORTAbits	set	3981
   545  0000                     _INLVLE	set	3882
   546  0000                     _SLRCONE	set	3883
   547  0000                     _ODCONE	set	3884
   548  0000                     _WPUE	set	3885
   549  0000                     _ANSELE	set	3886
   550  0000                     _INLVLC	set	3869
   551  0000                     _SLRCONC	set	3870
   552  0000                     _ODCONC	set	3871
   553  0000                     _WPUC	set	3872
   554  0000                     _INLVLB	set	3861
   555  0000                     _SLRCONB	set	3862
   556  0000                     _ODCONB	set	3863
   557  0000                     _WPUB	set	3864
   558  0000                     _IOCBN3	set	30875
   559  0000                     _IOCBP3	set	30883
   560  0000                     _SSP1DATPPS	set	3768
   561  0000                     _RC7PPS	set	3838
   562  0000                     _RC4PPS	set	3835
   563  0000                     _T2RST	set	4032
   564                           
   565                           ; #config settings
   566                           
   567                           	psect	cinit
   568  007568                     __pcinit:
   569                           	callstack 0
   570  007568                     start_initialization:
   571                           	callstack 0
   572  007568                     __initialization:
   573                           	callstack 0
   574                           
   575                           ; Initialize objects allocated to BANK3 (37 bytes)
   576                           ; load TBLPTR registers with __pidataBANK3
   577  007568  0EDC               	movlw	low __pidataBANK3
   578  00756A  6EF6               	movwf	tblptrl,c
   579  00756C  0E93               	movlw	high __pidataBANK3
   580  00756E  6EF7               	movwf	tblptrh,c
   581  007570  0E00               	movlw	low (__pidataBANK3 shr (0+16))
   582  007572  6EF8               	movwf	tblptru,c
   583  007574  EE03  F0D2         	lfsr	0,__pdataBANK3
   584  007578  EE10 F025          	lfsr	1,37
   585  00757C                     copy_data0:
   586  00757C  0009               	tblrd		*+
   587  00757E  CFF5 FFEE          	movff	tablat,postinc0
   588  007582  50E5               	movf	postdec1,w,c
   589  007584  50E1               	movf	fsr1l,w,c
   590  007586  E1FA               	bnz	copy_data0
   591                           
   592                           ; Initialize objects allocated to BANK2 (2 bytes)
   593                           ; load TBLPTR registers with __pidataBANK2
   594  007588  0E38               	movlw	low __pidataBANK2
   595  00758A  6EF6               	movwf	tblptrl,c
   596  00758C  0E98               	movlw	high __pidataBANK2
   597  00758E  6EF7               	movwf	tblptrh,c
   598  007590  0E00               	movlw	low (__pidataBANK2 shr (0+16))
   599  007592  6EF8               	movwf	tblptru,c
   600  007594  0009               	tblrd		*+	;fetch initializer
   601  007596  CFF5 F2F1          	movff	tablat,__pdataBANK2
   602  00759A  0009               	tblrd		*+	;fetch initializer
   603  00759C  CFF5 F2F2          	movff	tablat,__pdataBANK2+1
   604                           
   605                           ; Initialize objects allocated to BANK1 (5 bytes)
   606                           ; load TBLPTR registers with __pidataBANK1
   607  0075A0  0E04               	movlw	low __pidataBANK1
   608  0075A2  6EF6               	movwf	tblptrl,c
   609  0075A4  0E98               	movlw	high __pidataBANK1
   610  0075A6  6EF7               	movwf	tblptrh,c
   611  0075A8  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   612  0075AA  6EF8               	movwf	tblptru,c
   613  0075AC  EE01  F0FA         	lfsr	0,__pdataBANK1
   614  0075B0  EE10 F005          	lfsr	1,5
   615  0075B4                     copy_data1:
   616  0075B4  0009               	tblrd		*+
   617  0075B6  CFF5 FFEE          	movff	tablat,postinc0
   618  0075BA  50E5               	movf	postdec1,w,c
   619  0075BC  50E1               	movf	fsr1l,w,c
   620  0075BE  E1FA               	bnz	copy_data1
   621                           
   622                           ; Initialize objects allocated to BANK0 (2 bytes)
   623                           ; load TBLPTR registers with __pidataBANK0
   624  0075C0  0E36               	movlw	low __pidataBANK0
   625  0075C2  6EF6               	movwf	tblptrl,c
   626  0075C4  0E98               	movlw	high __pidataBANK0
   627  0075C6  6EF7               	movwf	tblptrh,c
   628  0075C8  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   629  0075CA  6EF8               	movwf	tblptru,c
   630  0075CC  0009               	tblrd		*+	;fetch initializer
   631  0075CE  CFF5 F0FB          	movff	tablat,__pdataBANK0
   632  0075D2  0009               	tblrd		*+	;fetch initializer
   633  0075D4  CFF5 F0FC          	movff	tablat,__pdataBANK0+1
   634                           
   635                           ; Clear objects allocated to BANK3 (210 bytes)
   636  0075D8  EE03  F000         	lfsr	0,__pbssBANK3
   637  0075DC  0ED2               	movlw	210
   638  0075DE                     clear_0:
   639  0075DE  6AEE               	clrf	postinc0,c
   640  0075E0  06E8               	decf	wreg,f,c
   641  0075E2  E1FD               	bnz	clear_0
   642                           
   643                           ; Clear objects allocated to BANK2 (223 bytes)
   644  0075E4  EE02  F000         	lfsr	0,__pbssBANK2
   645  0075E8  0EDF               	movlw	223
   646  0075EA                     clear_1:
   647  0075EA  6AEE               	clrf	postinc0,c
   648  0075EC  06E8               	decf	wreg,f,c
   649  0075EE  E1FD               	bnz	clear_1
   650                           
   651                           ; Clear objects allocated to BANK1 (250 bytes)
   652  0075F0  EE01  F000         	lfsr	0,__pbssBANK1
   653  0075F4  0EFA               	movlw	250
   654  0075F6                     clear_2:
   655  0075F6  6AEE               	clrf	postinc0,c
   656  0075F8  06E8               	decf	wreg,f,c
   657  0075FA  E1FD               	bnz	clear_2
   658                           
   659                           ; Clear objects allocated to BANK0 (120 bytes)
   660  0075FC  EE00  F060         	lfsr	0,__pbssBANK0
   661  007600  0E78               	movlw	120
   662  007602                     clear_3:
   663  007602  6AEE               	clrf	postinc0,c
   664  007604  06E8               	decf	wreg,f,c
   665  007606  E1FD               	bnz	clear_3
   666                           
   667                           ; Clear objects allocated to COMRAM (21 bytes)
   668  007608  EE00  F03B         	lfsr	0,__pbssCOMRAM
   669  00760C  0E15               	movlw	21
   670  00760E                     clear_4:
   671  00760E  6AEE               	clrf	postinc0,c
   672  007610  06E8               	decf	wreg,f,c
   673  007612  E1FD               	bnz	clear_4
   674  007614                     end_of_initialization:
   675                           	callstack 0
   676  007614                     __end_of__initialization:
   677                           	callstack 0
   678  007614  9050               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   679  007616  9250               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   680  007618  0100               	movlb	0
   681  00761A  EF22  F031         	goto	_main	;jump to C main() function
   682                           
   683                           	psect	bssCOMRAM
   684  00003B                     __pbssCOMRAM:
   685                           	callstack 0
   686  00003B                     _rfCMD:
   687                           	callstack 0
   688  00003B                     	ds	11
   689  000046                     _edit_Param:
   690                           	callstack 0
   691  000046                     	ds	6
   692  00004C                     _button_struct:
   693                           	callstack 0
   694  00004C                     	ds	4
   695                           
   696                           	psect	bssBANK0
   697  000060                     __pbssBANK0:
   698                           	callstack 0
   699  000060                     _learn_st:
   700                           	callstack 0
   701  000060                     	ds	18
   702  000072                     _dispStruct:
   703                           	callstack 0
   704  000072                     	ds	6
   705  000078                     _brakeElectric_st:
   706                           	callstack 0
   707  000078                     	ds	2
   708  00007A                     _pointSync:
   709                           	callstack 0
   710  00007A                     	ds	2
   711  00007C                     _Hop:
   712                           	callstack 0
   713  00007C                     	ds	2
   714  00007E                     _RFcount:
   715                           	callstack 0
   716  00007E                     	ds	2
   717  000080                     _temp:
   718                           	callstack 0
   719  000080                     	ds	1
   720  000081                     _control_limit_switch:
   721                           	callstack 0
   722  000081                     	ds	1
   723  000082                     _fullmotorPower:
   724                           	callstack 0
   725  000082                     	ds	1
   726  000083                     _stateMotor:
   727                           	callstack 0
   728  000083                     	ds	1
   729  000084                     _zeroCrossingWaitTimeIdx:
   730                           	callstack 0
   731  000084                     	ds	1
   732  000085                     _programmer_enable:
   733                           	callstack 0
   734  000085                     	ds	1
   735  000086                     readbutton@key1:
   736                           	callstack 0
   737  000086                     	ds	1
   738  000087                     readRFButtons@keyType:
   739                           	callstack 0
   740  000087                     	ds	1
   741  000088                     readRFButtons@key1:
   742                           	callstack 0
   743  000088                     	ds	1
   744  000089                     _RFBit:
   745                           	callstack 0
   746  000089                     	ds	1
   747  00008A                     _RFFull_12BIT:
   748                           	callstack 0
   749  00008A                     	ds	1
   750  00008B                     _RFFull:
   751                           	callstack 0
   752  00008B                     	ds	1
   753  00008C                     _BitCount:
   754                           	callstack 0
   755  00008C                     	ds	1
   756  00008D                     _Bptr:
   757                           	callstack 0
   758  00008D                     	ds	1
   759  00008E                     _numberOfErrorCurrent:
   760                           	callstack 0
   761  00008E                     	ds	1
   762  00008F                     _idxAdcZeroAquisition:
   763                           	callstack 0
   764  00008F                     	ds	1
   765  000090                     _idxSaveEnergyADCHist:
   766                           	callstack 0
   767  000090                     	ds	1
   768  000091                     _idxAdcAquisition:
   769                           	callstack 0
   770  000091                     	ds	1
   771  000092                     _Counterchoose:
   772                           	callstack 0
   773  000092                     	ds	1
   774  000093                     _eusart1RxCount:
   775                           	callstack 0
   776  000093                     	ds	1
   777  000094                     _eusart1RxTail:
   778                           	callstack 0
   779  000094                     	ds	1
   780  000095                     _eusart1RxHead:
   781                           	callstack 0
   782  000095                     	ds	1
   783  000096                     _eusart1TxTail:
   784                           	callstack 0
   785  000096                     	ds	1
   786  000097                     _eusart1TxHead:
   787                           	callstack 0
   788  000097                     	ds	1
   789  000098                     _var_sys_NVM:
   790                           	callstack 0
   791  000098                     	ds	64
   792                           
   793                           	psect	dataBANK0
   794  0000FB                     __pdataBANK0:
   795                           	callstack 0
   796  0000FB                     _auxCounter:
   797                           	callstack 0
   798  0000FB                     	ds	2
   799                           
   800                           	psect	bssBANK1
   801  000100                     __pbssBANK1:
   802                           	callstack 0
   803  000100                     _var_sys:
   804                           	callstack 0
   805  000100                     	ds	81
   806  000151                     _menu_st:
   807                           	callstack 0
   808  000151                     	ds	25
   809  00016A                     _security:
   810                           	callstack 0
   811  00016A                     	ds	11
   812  000175                     _fimdecurso:
   813                           	callstack 0
   814  000175                     	ds	6
   815  00017B                     _powerControl_st:
   816                           	callstack 0
   817  00017B                     	ds	6
   818  000181                     readRFButtons@serial:
   819                           	callstack 0
   820  000181                     	ds	4
   821  000185                     readRFButtons@rollingCode:
   822                           	callstack 0
   823  000185                     	ds	2
   824  000187                     _BufferRF_12BIT:
   825                           	callstack 0
   826  000187                     	ds	2
   827  000189                     _erroranterior:
   828                           	callstack 0
   829  000189                     	ds	2
   830  00018B                     eusartparser@save_f:
   831                           	callstack 0
   832  00018B                     	ds	1
   833  00018C                     _aux_in_auto_close:
   834                           	callstack 0
   835  00018C                     	ds	1
   836  00018D                     _aux_i:
   837                           	callstack 0
   838  00018D                     	ds	1
   839  00018E                     _Abertura_pedonal:
   840                           	callstack 0
   841  00018E                     	ds	1
   842  00018F                     _temppower:
   843                           	callstack 0
   844  00018F                     	ds	1
   845  000190                     _difTime:
   846                           	callstack 0
   847  000190                     	ds	1
   848  000191                     _StateTRIAC:
   849                           	callstack 0
   850  000191                     	ds	1
   851  000192                     _waitZeroPeak:
   852                           	callstack 0
   853  000192                     	ds	1
   854  000193                     _zeroCrossing:
   855                           	callstack 0
   856  000193                     	ds	1
   857  000194                     _zeroCrossingLength:
   858                           	callstack 0
   859  000194                     	ds	1
   860  000195                     _lastKey:
   861                           	callstack 0
   862  000195                     	ds	1
   863  000196                     _F2Chance:
   864                           	callstack 0
   865  000196                     	ds	1
   866  000197                     readbutton@key2:
   867                           	callstack 0
   868  000197                     	ds	1
   869  000198                     readRFButtons@typeRemote:
   870                           	callstack 0
   871  000198                     	ds	1
   872  000199                     _RFstate:
   873                           	callstack 0
   874  000199                     	ds	1
   875  00019A                     _eusart1RxLastError:
   876                           	callstack 0
   877  00019A                     	ds	1
   878  00019B                     _ts_system:
   879                           	callstack 0
   880  00019B                     	ds	72
   881  0001E3                     _controlGate_stateMachine:
   882                           	callstack 0
   883  0001E3                     	ds	11
   884  0001EE                     _main_stateMachine:
   885                           	callstack 0
   886  0001EE                     	ds	11
   887  0001F9                     setValueToEdit@value:
   888                           	callstack 0
   889  0001F9                     	ds	1
   890                           
   891                           	psect	dataBANK1
   892  0001FA                     __pdataBANK1:
   893                           	callstack 0
   894  0001FA                     _tempCounter:
   895                           	callstack 0
   896  0001FA                     	ds	4
   897  0001FE                     _firstselectflag:
   898                           	callstack 0
   899  0001FE                     	ds	1
   900                           
   901                           	psect	bssBANK2
   902  000200                     __pbssBANK2:
   903                           	callstack 0
   904  000200                     _ADC_array:
   905                           	callstack 0
   906  000200                     	ds	60
   907  00023C                     _I2C1_Status:
   908                           	callstack 0
   909  00023C                     	ds	36
   910  000260                     _SumEnergyADCHist_array:
   911                           	callstack 0
   912  000260                     	ds	20
   913  000274                     _eusart1RxStatusBuffer:
   914                           	callstack 0
   915  000274                     	ds	8
   916  00027C                     _eusart1RxBuffer:
   917                           	callstack 0
   918  00027C                     	ds	8
   919  000284                     _eusart1TxBuffer:
   920                           	callstack 0
   921  000284                     	ds	8
   922  00028C                     eusartparser@buffer:
   923                           	callstack 0
   924  00028C                     	ds	2
   925  00028E                     _EHop:
   926                           	callstack 0
   927  00028E                     	ds	2
   928  000290                     _NextHop:
   929                           	callstack 0
   930  000290                     	ds	2
   931  000292                     _timer0ReloadVal16bit:
   932                           	callstack 0
   933  000292                     	ds	2
   934  000294                     _classic_data:
   935                           	callstack 0
   936  000294                     	ds	16
   937  0002A4                     _memoryTEMP:
   938                           	callstack 0
   939  0002A4                     	ds	16
   940  0002B4                     _controlLearning_stateMachine:
   941                           	callstack 0
   942  0002B4                     	ds	11
   943  0002BF                     _menuConfiguration_stateMachine:
   944                           	callstack 0
   945  0002BF                     	ds	11
   946  0002CA                     _BufferRF:
   947                           	callstack 0
   948  0002CA                     	ds	9
   949  0002D3                     _DKEY:
   950                           	callstack 0
   951  0002D3                     	ds	8
   952  0002DB                     NormalKeyGen@SEED:
   953                           	callstack 0
   954  0002DB                     	ds	4
   955                           
   956                           	psect	dataBANK2
   957  0002F1                     __pdataBANK2:
   958                           	callstack 0
   959  0002F1                     _zeroCrossingWaitTime:
   960                           	callstack 0
   961  0002F1                     	ds	2
   962                           
   963                           	psect	bssBANK3
   964  000300                     __pbssBANK3:
   965                           	callstack 0
   966  000300                     _listSyncValues:
   967                           	callstack 0
   968  000300                     	ds	150
   969  000396                     _ADC_zero_array:
   970                           	callstack 0
   971  000396                     	ds	60
   972                           
   973                           	psect	dataBANK3
   974  0003D2                     __pdataBANK3:
   975                           	callstack 0
   976  0003D2                     _DispTable:
   977                           	callstack 0
   978  0003D2                     	ds	37
   979                           
   980                           	psect	cstackBANK0
   981  0000D8                     __pcstackBANK0:
   982                           	callstack 0
   983  0000D8                     ??_keeloq_classic_decrypt_packet:
   984  0000D8                     ??_setPositionInvertionInClosing:
   985  0000D8                     ??_validateRemoteSerialNumber:
   986  0000D8                     ??_RemoveSerial:
   987  0000D8                     SaveNVM_VarSystem@page:
   988                           	callstack 0
   989  0000D8                     getStateOpenPosition@state:
   990                           	callstack 0
   991  0000D8                     saveNewSerial@tempSerial:
   992                           	callstack 0
   993                           
   994                           ; 4 bytes @ 0x0
   995  0000D8                     	ds	1
   996  0000D9                     getStateOpenPosition@stateMotor:
   997                           	callstack 0
   998  0000D9                     SaveNVM_VarSystem@tempAdd:
   999                           	callstack 0
  1000                           
  1001                           ; 2 bytes @ 0x1
  1002  0000D9                     	ds	1
  1003  0000DA                     ??_controlVelocity:
  1004  0000DA                     RemoveSerial@cmdType:
  1005                           	callstack 0
  1006                           
  1007                           ; 1 bytes @ 0x2
  1008  0000DA                     	ds	1
  1009  0000DB                     SaveNVM_VarSystem@point:
  1010                           	callstack 0
  1011  0000DB                     RemoveSerial@tempSerial:
  1012                           	callstack 0
  1013                           
  1014                           ; 4 bytes @ 0x3
  1015  0000DB                     	ds	1
  1016  0000DC                     ??_setValueToEdit:
  1017  0000DC                     saveNewSerial@position:
  1018                           	callstack 0
  1019  0000DC                     sm_execute_ControlLearning@psm:
  1020                           	callstack 0
  1021                           
  1022                           ; 2 bytes @ 0x4
  1023  0000DC                     	ds	1
  1024  0000DD                     ??_saveNewSerial:
  1025                           
  1026                           ; 1 bytes @ 0x5
  1027  0000DD                     	ds	1
  1028  0000DE                     ??_sm_execute_ControlLearning:
  1029  0000DE                     setValueToEdit@menuType:
  1030                           	callstack 0
  1031                           
  1032                           ; 1 bytes @ 0x6
  1033  0000DE                     	ds	1
  1034  0000DF                     setValueToEdit@posindex:
  1035                           	callstack 0
  1036                           
  1037                           ; 1 bytes @ 0x7
  1038  0000DF                     	ds	1
  1039  0000E0                     ??_controlSelectRemote:
  1040  0000E0                     setValueToEdit@haveValueToEdit:
  1041                           	callstack 0
  1042  0000E0                     eusartparser@package:
  1043                           	callstack 0
  1044  0000E0                     keeloqDecryptPacket@data:
  1045                           	callstack 0
  1046  0000E0                     DecryptPacket_12BIT@data:
  1047                           	callstack 0
  1048                           
  1049                           ; 2 bytes @ 0x8
  1050  0000E0                     	ds	1
  1051  0000E1                     ??_eusartparser:
  1052  0000E1                     controlSelectRemote@validSerial:
  1053                           	callstack 0
  1054                           
  1055                           ; 1 bytes @ 0x9
  1056  0000E1                     	ds	1
  1057  0000E2                     controlSelectRemote@pos:
  1058                           	callstack 0
  1059  0000E2                     keeloqDecryptPacket@classic_data:
  1060                           	callstack 0
  1061  0000E2                     DecryptPacket_12BIT@classic_data:
  1062                           	callstack 0
  1063                           
  1064                           ; 2 bytes @ 0xA
  1065  0000E2                     	ds	1
  1066  0000E3                     controlSelectRemote@typeRemote:
  1067                           	callstack 0
  1068                           
  1069                           ; 1 bytes @ 0xB
  1070  0000E3                     	ds	1
  1071  0000E4                     ??_keeloqDecryptPacket:
  1072  0000E4                     DecryptPacket_12BIT@commandType:
  1073                           	callstack 0
  1074  0000E4                     actionZone_Opening@securityClosing:
  1075                           	callstack 0
  1076  0000E4                     controlSelectRemote@tempSerial:
  1077                           	callstack 0
  1078                           
  1079                           ; 4 bytes @ 0xC
  1080  0000E4                     	ds	1
  1081  0000E5                     actionZone_Opening@securityOpening:
  1082                           	callstack 0
  1083                           
  1084                           ; 1 bytes @ 0xD
  1085  0000E5                     	ds	1
  1086  0000E6                     actionZone_Opening@typeOpenOrder:
  1087                           	callstack 0
  1088                           
  1089                           ; 1 bytes @ 0xE
  1090  0000E6                     	ds	1
  1091  0000E7                     eusartparser@pos:
  1092                           	callstack 0
  1093  0000E7                     sm_execute_ControlGate@psm:
  1094                           	callstack 0
  1095                           
  1096                           ; 2 bytes @ 0xF
  1097  0000E7                     	ds	1
  1098  0000E8                     keeloqDecryptPacket@hop_error:
  1099                           	callstack 0
  1100  0000E8                     controlSelectRemote@temp:
  1101                           	callstack 0
  1102  0000E8                     eusartparser@i:
  1103                           	callstack 0
  1104                           
  1105                           ; 1 bytes @ 0x10
  1106  0000E8                     	ds	1
  1107  0000E9                     ??_sm_execute_ControlGate:
  1108  0000E9                     keeloqDecryptPacket@commandType:
  1109                           	callstack 0
  1110  0000E9                     eusartparser@i_7280:
  1111                           	callstack 0
  1112  0000E9                     sm_execute_menuConfiguration@psm:
  1113                           	callstack 0
  1114                           
  1115                           ; 2 bytes @ 0x11
  1116  0000E9                     	ds	1
  1117  0000EA                     eusartparser@relcounter:
  1118                           	callstack 0
  1119                           
  1120                           ; 1 bytes @ 0x12
  1121  0000EA                     	ds	1
  1122  0000EB                     ??_sm_execute_menuConfiguration:
  1123  0000EB                     sm_execute_ControlGate@typeOpenOrder:
  1124                           	callstack 0
  1125  0000EB                     eusartparser@i_7281:
  1126                           	callstack 0
  1127                           
  1128                           ; 1 bytes @ 0x13
  1129  0000EB                     	ds	1
  1130  0000EC                     eusartparser@i_7282:
  1131                           	callstack 0
  1132                           
  1133                           ; 1 bytes @ 0x14
  1134  0000EC                     	ds	1
  1135  0000ED                     eusartparser@i_7283:
  1136                           	callstack 0
  1137  0000ED                     sm_execute_main@psm:
  1138                           	callstack 0
  1139                           
  1140                           ; 2 bytes @ 0x15
  1141  0000ED                     	ds	1
  1142  0000EE                     eusartparser@i_7284:
  1143                           	callstack 0
  1144                           
  1145                           ; 1 bytes @ 0x16
  1146  0000EE                     	ds	1
  1147  0000EF                     ??_sm_execute_main:
  1148  0000EF                     eusartparser@i_7285:
  1149                           	callstack 0
  1150                           
  1151                           ; 1 bytes @ 0x17
  1152  0000EF                     	ds	1
  1153  0000F0                     eusartparser@serial:
  1154                           	callstack 0
  1155                           
  1156                           ; 4 bytes @ 0x18
  1157  0000F0                     	ds	4
  1158  0000F4                     main@package:
  1159                           	callstack 0
  1160                           
  1161                           ; 7 bytes @ 0x1C
  1162  0000F4                     	ds	7
  1163                           
  1164                           	psect	cstackCOMRAM
  1165  000001                     __pcstackCOMRAM:
  1166                           	callstack 0
  1167  000001                     ??_rxi:
  1168  000001                     ??i2_GetMotorPower:
  1169  000001                     ADCC_GetSingleConversion@channel:
  1170                           	callstack 0
  1171  000001                     Segments_Set@value:
  1172                           	callstack 0
  1173  000001                     i2VerifyElectricalBrake@tempState:
  1174                           	callstack 0
  1175  000001                     TMR1_WriteTimer@timerVal:
  1176                           	callstack 0
  1177  000001                     decrementTimeslot@ts:
  1178                           	callstack 0
  1179                           
  1180                           ; 2 bytes @ 0x0
  1181  000001                     	ds	1
  1182  000002                     ??_ReadADC:
  1183  000002                     i2VerifyElectricalBrake@actualState:
  1184                           	callstack 0
  1185                           
  1186                           ; 1 bytes @ 0x1
  1187  000002                     	ds	1
  1188  000003                     
  1189                           ; 1 bytes @ 0x2
  1190  000003                     	ds	1
  1191  000004                     i2GetMotorPower@defineatraso:
  1192                           	callstack 0
  1193                           
  1194                           ; 1 bytes @ 0x3
  1195  000004                     	ds	1
  1196  000005                     ??_controlMotorForce:
  1197  000005                     
  1198                           ; 1 bytes @ 0x4
  1199  000005                     	ds	5
  1200  00000A                     ??_INTERRUPT_InterruptManager:
  1201                           
  1202                           ; 1 bytes @ 0x9
  1203  00000A                     	ds	6
  1204  000010                     ??_GetMotorPower:
  1205  000010                     ??_SetSegmentValueLearn:
  1206  000010                     ?_sumEnergyADC:
  1207                           	callstack 0
  1208  000010                     ?_sm_get_current_state:
  1209                           	callstack 0
  1210  000010                     ?___wmul:
  1211                           	callstack 0
  1212  000010                     ?___lwdiv:
  1213                           	callstack 0
  1214  000010                     ?_calculateMean:
  1215                           	callstack 0
  1216  000010                     ?_sumHIST:
  1217                           	callstack 0
  1218  000010                     ?___lldiv:
  1219                           	callstack 0
  1220  000010                     EUSART1_Read@readValue:
  1221                           	callstack 0
  1222  000010                     EUSART1_Write@txData:
  1223                           	callstack 0
  1224  000010                     I2C1_Open@address:
  1225                           	callstack 0
  1226  000010                     I2C1_Close@returnValue:
  1227                           	callstack 0
  1228  000010                     I2C1_MasterSendTxData@data:
  1229                           	callstack 0
  1230  000010                     WWDT_TimerClear@state:
  1231                           	callstack 0
  1232  000010                     getKeyPressed@temp:
  1233                           	callstack 0
  1234  000010                     RGB_Set@value:
  1235                           	callstack 0
  1236  000010                     SetSegmentValueIntermitent@d2:
  1237                           	callstack 0
  1238  000010                     VerifyElectricalBrake@tempState:
  1239                           	callstack 0
  1240  000010                     VerifyFollowMe@securityClose:
  1241                           	callstack 0
  1242  000010                     init_package@package:
  1243                           	callstack 0
  1244  000010                     ___lbdiv@divisor:
  1245                           	callstack 0
  1246  000010                     ___lbmod@divisor:
  1247                           	callstack 0
  1248  000010                     EUSART1_SetFramingErrorHandler@interruptHandler:
  1249                           	callstack 0
  1250  000010                     EUSART1_SetOverrunErrorHandler@interruptHandler:
  1251                           	callstack 0
  1252  000010                     EUSART1_SetErrorHandler@interruptHandler:
  1253                           	callstack 0
  1254  000010                     EUSART1_SetTxInterruptHandler@interruptHandler:
  1255                           	callstack 0
  1256  000010                     EUSART1_SetRxInterruptHandler@interruptHandler:
  1257                           	callstack 0
  1258  000010                     I2C1_SetBuffer@buffer:
  1259                           	callstack 0
  1260  000010                     I2C1_SetCallback@cb:
  1261                           	callstack 0
  1262  000010                     TMR0_SetInterruptHandler@InterruptHandler:
  1263                           	callstack 0
  1264  000010                     TMR1_SetInterruptHandler@InterruptHandler:
  1265                           	callstack 0
  1266  000010                     TMR2_SetInterruptHandler@InterruptHandler:
  1267                           	callstack 0
  1268  000010                     saveEnergyADCHist@valueToSave:
  1269                           	callstack 0
  1270  000010                     DecCHK@data:
  1271                           	callstack 0
  1272  000010                     ReqResync@CurrentHop:
  1273                           	callstack 0
  1274  000010                     verifyProgramingMode@classic_data:
  1275                           	callstack 0
  1276  000010                     setFlashLigth_ON@Freq:
  1277                           	callstack 0
  1278  000010                     sm_restart@psm:
  1279                           	callstack 0
  1280  000010                     sm_get_current_state@psm:
  1281                           	callstack 0
  1282  000010                     ___wmul@multiplier:
  1283                           	callstack 0
  1284  000010                     ___lwdiv@dividend:
  1285                           	callstack 0
  1286  000010                     memcpy@d1:
  1287                           	callstack 0
  1288  000010                     calculateMean@meanValue:
  1289                           	callstack 0
  1290  000010                     ___lldiv@dividend:
  1291                           	callstack 0
  1292  000010                     write_eusartparser@package:
  1293                           	callstack 0
  1294                           
  1295                           ; 7 bytes @ 0xF
  1296  000010                     	ds	1
  1297  000011                     ?_read_package:
  1298                           	callstack 0
  1299  000011                     I2C1_Open@returnValue:
  1300                           	callstack 0
  1301  000011                     VerifyElectricalBrake@actualState:
  1302                           	callstack 0
  1303  000011                     confirmpackage@package:
  1304                           	callstack 0
  1305  000011                     ___lbdiv@dividend:
  1306                           	callstack 0
  1307  000011                     ___lbmod@dividend:
  1308                           	callstack 0
  1309  000011                     SetSegmentValueIntermitent@time:
  1310                           	callstack 0
  1311  000011                     setRGB_ON@Freq:
  1312                           	callstack 0
  1313  000011                     write_package@package:
  1314                           	callstack 0
  1315                           
  1316                           ; 7 bytes @ 0x10
  1317  000011                     	ds	1
  1318  000012                     ??_TMR1_Initialize:
  1319  000012                     ??_ControlMotor:
  1320  000012                     ??_sumEnergyADC:
  1321  000012                     ??_DecCHK:
  1322  000012                     SetSegmentValueLearn@direction:
  1323                           	callstack 0
  1324  000012                     confirmpackage@confirm:
  1325                           	callstack 0
  1326  000012                     ___lbdiv@counter:
  1327                           	callstack 0
  1328  000012                     ___lbmod@counter:
  1329                           	callstack 0
  1330  000012                     I2C1_SetBuffer@bufferSize:
  1331                           	callstack 0
  1332  000012                     I2C1_SetCallback@ptr:
  1333                           	callstack 0
  1334  000012                     sm_init@psm:
  1335                           	callstack 0
  1336  000012                     sm_send_event@psm:
  1337                           	callstack 0
  1338  000012                     ___wmul@multiplicand:
  1339                           	callstack 0
  1340  000012                     ___lwdiv@divisor:
  1341                           	callstack 0
  1342  000012                     memcpy@s1:
  1343                           	callstack 0
  1344                           
  1345                           ; 2 bytes @ 0x11
  1346  000012                     	ds	1
  1347  000013                     ??_setRGB_ON:
  1348  000013                     SetSegmentValueIntermitent@d1:
  1349                           	callstack 0
  1350  000013                     GetMotorPower@defineatraso:
  1351                           	callstack 0
  1352  000013                     ___lbdiv@quotient:
  1353                           	callstack 0
  1354  000013                     ___lbmod@rem:
  1355                           	callstack 0
  1356                           
  1357                           ; 1 bytes @ 0x12
  1358  000013                     	ds	1
  1359  000014                     ??_InitSoftStop:
  1360  000014                     ??_InitSoftStart:
  1361  000014                     ??_sumHIST:
  1362  000014                     ?___awdiv:
  1363                           	callstack 0
  1364  000014                     I2C1_SetCallback@idx:
  1365                           	callstack 0
  1366  000014                     sumEnergyADC@sumE:
  1367                           	callstack 0
  1368  000014                     sm_init@initial_state:
  1369                           	callstack 0
  1370  000014                     sm_send_event@event:
  1371                           	callstack 0
  1372  000014                     ___wmul@product:
  1373                           	callstack 0
  1374  000014                     ___awdiv@dividend:
  1375                           	callstack 0
  1376  000014                     ___lwdiv@quotient:
  1377                           	callstack 0
  1378  000014                     memcpy@n:
  1379                           	callstack 0
  1380  000014                     calculateMean@newValue:
  1381                           	callstack 0
  1382  000014                     ___lldiv@divisor:
  1383                           	callstack 0
  1384                           
  1385                           ; 4 bytes @ 0x13
  1386  000014                     	ds	1
  1387  000015                     setRGB_ON@RGBLigth:
  1388                           	callstack 0
  1389  000015                     I2C1_SetDataCompleteCallback@cb:
  1390                           	callstack 0
  1391  000015                     I2C1_SetAddressNackCallback@cb:
  1392                           	callstack 0
  1393                           
  1394                           ; 2 bytes @ 0x14
  1395  000015                     	ds	1
  1396  000016                     ?_getHopCode:
  1397                           	callstack 0
  1398  000016                     ?_getCurrentComparator:
  1399                           	callstack 0
  1400  000016                     sm_init@hist_mode:
  1401                           	callstack 0
  1402  000016                     ___lwdiv@counter:
  1403                           	callstack 0
  1404  000016                     memcpy@tmp:
  1405                           	callstack 0
  1406  000016                     sumEnergyADC@auxValue:
  1407                           	callstack 0
  1408  000016                     getHopCode@data:
  1409                           	callstack 0
  1410  000016                     ___awdiv@divisor:
  1411                           	callstack 0
  1412                           
  1413                           ; 2 bytes @ 0x15
  1414  000016                     	ds	1
  1415  000017                     ??_write_eusartparser:
  1416  000017                     refreshADCZeroOffset@i:
  1417                           	callstack 0
  1418  000017                     I2C1_SetDataCompleteCallback@ptr:
  1419                           	callstack 0
  1420  000017                     I2C1_SetAddressNackCallback@ptr:
  1421                           	callstack 0
  1422  000017                     memcpy@d:
  1423                           	callstack 0
  1424                           
  1425                           ; 2 bytes @ 0x16
  1426  000017                     	ds	1
  1427  000018                     ??_getHopCode:
  1428  000018                     ??_calculateMean:
  1429  000018                     ??_OpenWalkOrder:
  1430  000018                     sumEnergyADC@i:
  1431                           	callstack 0
  1432  000018                     ControlMotor@stateMotor:
  1433                           	callstack 0
  1434  000018                     read_eusartparser@package:
  1435                           	callstack 0
  1436  000018                     ___awdiv@counter:
  1437                           	callstack 0
  1438  000018                     refreshADCZeroOffset@media:
  1439                           	callstack 0
  1440  000018                     sumHIST@max:
  1441                           	callstack 0
  1442  000018                     ___lldiv@quotient:
  1443                           	callstack 0
  1444  000018                     read_package@package:
  1445                           	callstack 0
  1446                           
  1447                           ; 7 bytes @ 0x17
  1448  000018                     	ds	1
  1449  000019                     ??_read_eusartparser:
  1450  000019                     ___awdiv@sign:
  1451                           	callstack 0
  1452  000019                     wr1RegCompleteHandler@p:
  1453                           	callstack 0
  1454  000019                     rd1RegCompleteHandler@p:
  1455                           	callstack 0
  1456  000019                     rd2RegCompleteHandler@p:
  1457                           	callstack 0
  1458  000019                     wr2RegCompleteHandler@p:
  1459                           	callstack 0
  1460  000019                     rdBlkRegCompleteHandler@p:
  1461                           	callstack 0
  1462  000019                     rd1RegCompleteHandler@i2c1_master_example$F500@ptr:
  1463                           	callstack 0
  1464  000019                     rd2RegCompleteHandler@i2c1_master_example$F511@ptr:
  1465                           	callstack 0
  1466  000019                     wr1RegCompleteHandler@i2c1_master_example$F517@ptr:
  1467                           	callstack 0
  1468  000019                     wr2RegCompleteHandler@i2c1_master_example$F523@ptr:
  1469                           	callstack 0
  1470  000019                     rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr:
  1471                           	callstack 0
  1472  000019                     I2C1_CallbackReturnReset@funPtr:
  1473                           	callstack 0
  1474  000019                     memcpy@s:
  1475                           	callstack 0
  1476                           
  1477                           ; 2 bytes @ 0x18
  1478  000019                     	ds	1
  1479  00001A                     ??_getCurrentComparator:
  1480  00001A                     sumHIST@min:
  1481                           	callstack 0
  1482  00001A                     OpenWalkOrder@diffTime:
  1483                           	callstack 0
  1484  00001A                     ___awdiv@quotient:
  1485                           	callstack 0
  1486                           
  1487                           ; 2 bytes @ 0x19
  1488  00001A                     	ds	1
  1489  00001B                     ??_I2C1_DO_TX:
  1490  00001B                     ??_I2C1_DO_RX:
  1491  00001B                     ??_I2C1_DO_TX_EMPTY:
  1492  00001B                     ??_I2C1_DO_ADDRESS_NACK:
  1493  00001B                     getSerialCmd@serial:
  1494                           	callstack 0
  1495  00001B                     Decrypt@packet:
  1496                           	callstack 0
  1497                           
  1498                           ; 2 bytes @ 0x1A
  1499  00001B                     	ds	1
  1500  00001C                     getSerialCmd@temp:
  1501                           	callstack 0
  1502  00001C                     SetSegmentValueMain@d2:
  1503                           	callstack 0
  1504  00001C                     SetSegmentValue@d2:
  1505                           	callstack 0
  1506  00001C                     SetSegmentValueIntermitentMain@d2:
  1507                           	callstack 0
  1508  00001C                     ___lldiv@counter:
  1509                           	callstack 0
  1510  00001C                     sumHIST@sumH:
  1511                           	callstack 0
  1512                           
  1513                           ; 4 bytes @ 0x1B
  1514  00001C                     	ds	1
  1515  00001D                     ??_I2C1_MasterFsm:
  1516  00001D                     ?___lmul:
  1517                           	callstack 0
  1518  00001D                     Decrypt@key:
  1519                           	callstack 0
  1520  00001D                     SetSegmentValueMain@d1:
  1521                           	callstack 0
  1522  00001D                     SetSegmentValue@d1:
  1523                           	callstack 0
  1524  00001D                     SetSegmentValueIntermitentMain@time:
  1525                           	callstack 0
  1526  00001D                     ___lmul@multiplier:
  1527                           	callstack 0
  1528                           
  1529                           ; 4 bytes @ 0x1C
  1530  00001D                     	ds	1
  1531  00001E                     Decrypt@i:
  1532                           	callstack 0
  1533                           
  1534                           ; 1 bytes @ 0x1D
  1535  00001E                     	ds	1
  1536  00001F                     Decrypt@j:
  1537                           	callstack 0
  1538  00001F                     SetSegmentValueIntermitentMain@d1:
  1539                           	callstack 0
  1540  00001F                     write_eusartparser@debug:
  1541                           	callstack 0
  1542                           
  1543                           ; 2 bytes @ 0x1E
  1544  00001F                     	ds	1
  1545  000020                     ??_load_New_Menu:
  1546  000020                     ??_controlSaveRemote:
  1547  000020                     I2C1_MasterOperation@read:
  1548                           	callstack 0
  1549  000020                     sumHIST@i:
  1550                           	callstack 0
  1551  000020                     Decrypt@p:
  1552                           	callstack 0
  1553  000020                     actionZone_Closed@securityOpening:
  1554                           	callstack 0
  1555  000020                     actionZone_Opened@securityClosing:
  1556                           	callstack 0
  1557  000020                     getCurrentComparator@tempOffset:
  1558                           	callstack 0
  1559  000020                     getHopCode@tempHop:
  1560                           	callstack 0
  1561                           
  1562                           ; 2 bytes @ 0x1F
  1563  000020                     	ds	1
  1564  000021                     I2C1_MasterOperation@returnValue:
  1565                           	callstack 0
  1566  000021                     Decrypt@aux:
  1567                           	callstack 0
  1568  000021                     actionZone_Closed@typeOpenOrder:
  1569                           	callstack 0
  1570  000021                     actionZone_Opened@typeOpenOrder:
  1571                           	callstack 0
  1572  000021                     write_eusartparser@debug2:
  1573                           	callstack 0
  1574  000021                     ___lmul@multiplicand:
  1575                           	callstack 0
  1576                           
  1577                           ; 4 bytes @ 0x20
  1578  000021                     	ds	1
  1579  000022                     I2C1_Read1ByteRegister@reg:
  1580                           	callstack 0
  1581  000022                     getCurrentComparator@x:
  1582                           	callstack 0
  1583  000022                     getHopCode@tempPos:
  1584                           	callstack 0
  1585  000022                     load_New_Menu@Menu:
  1586                           	callstack 0
  1587  000022                     i2c_writeNBytes@reg:
  1588                           	callstack 0
  1589  000022                     i2c_readDataBlock@reg:
  1590                           	callstack 0
  1591  000022                     Decrypt@Buffer:
  1592                           	callstack 0
  1593                           
  1594                           ; 4 bytes @ 0x21
  1595  000022                     	ds	1
  1596  000023                     ??_ControlCurrent:
  1597  000023                     I2C1_Read1ByteRegister@address:
  1598                           	callstack 0
  1599  000023                     getHopCode@i:
  1600                           	callstack 0
  1601  000023                     load_New_Menu@i:
  1602                           	callstack 0
  1603                           
  1604                           ; 1 bytes @ 0x22
  1605  000023                     	ds	1
  1606  000024                     i2c_writeNBytes@data:
  1607                           	callstack 0
  1608  000024                     I2C1_Read1ByteRegister@returnValue:
  1609                           	callstack 0
  1610  000024                     i2c_readDataBlock@data:
  1611                           	callstack 0
  1612  000024                     HopCHK@data:
  1613                           	callstack 0
  1614                           
  1615                           ; 2 bytes @ 0x23
  1616  000024                     	ds	1
  1617  000025                     i2c_writeNBytes@len:
  1618                           	callstack 0
  1619  000025                     ___lmul@product:
  1620                           	callstack 0
  1621                           
  1622                           ; 4 bytes @ 0x24
  1623  000025                     	ds	1
  1624  000026                     i2c_readDataBlock@len:
  1625                           	callstack 0
  1626  000026                     NormalKeyGen@serial:
  1627                           	callstack 0
  1628  000026                     HopCHK@hopDiff:
  1629                           	callstack 0
  1630                           
  1631                           ; 2 bytes @ 0x25
  1632  000026                     	ds	1
  1633  000027                     ??_i2c_writeNBytes:
  1634                           
  1635                           ; 1 bytes @ 0x26
  1636  000027                     	ds	1
  1637  000028                     ??_i2c_readDataBlock:
  1638  000028                     NormalKeyGen@HOPtemp:
  1639                           	callstack 0
  1640  000028                     i2c_writeNBytes@dat:
  1641                           	callstack 0
  1642                           
  1643                           ; 17 bytes @ 0x27
  1644  000028                     	ds	1
  1645  000029                     ?_getTimeDecelaration:
  1646                           	callstack 0
  1647  000029                     i2c_readDataBlock@address:
  1648                           	callstack 0
  1649                           
  1650                           ; 1 bytes @ 0x28
  1651  000029                     	ds	1
  1652  00002A                     i2c_readDataBlock@d:
  1653                           	callstack 0
  1654                           
  1655                           ; 4 bytes @ 0x29
  1656  00002A                     	ds	2
  1657  00002C                     NormalKeyGen@SKEYtemp:
  1658                           	callstack 0
  1659                           
  1660                           ; 4 bytes @ 0x2B
  1661  00002C                     	ds	1
  1662  00002D                     ??_getTimeDecelaration:
  1663                           
  1664                           ; 1 bytes @ 0x2C
  1665  00002D                     	ds	1
  1666  00002E                     ReadSerial@tempSerial:
  1667                           	callstack 0
  1668  00002E                     cmdMemoryIsEmpty@position:
  1669                           	callstack 0
  1670  00002E                     validateRemoteSerialNumber@serial:
  1671                           	callstack 0
  1672                           
  1673                           ; 4 bytes @ 0x2D
  1674  00002E                     	ds	1
  1675  00002F                     ??_cmdMemoryIsEmpty:
  1676  00002F                     ReadSerial@position:
  1677                           	callstack 0
  1678                           
  1679                           ; 1 bytes @ 0x2E
  1680  00002F                     	ds	1
  1681  000030                     ??_ReadSerial:
  1682  000030                     NormalKeyGen@Buffer:
  1683                           	callstack 0
  1684                           
  1685                           ; 8 bytes @ 0x2F
  1686  000030                     	ds	1
  1687  000031                     cmdMemoryIsEmpty@cmdType:
  1688                           	callstack 0
  1689  000031                     getTimeDecelaration@state:
  1690                           	callstack 0
  1691                           
  1692                           ; 1 bytes @ 0x30
  1693  000031                     	ds	1
  1694  000032                     ??_setPositionInvertionInOpening:
  1695  000032                     ??_getStateOpenPosition:
  1696  000032                     validateRemoteSerialNumber@VerifyOnlySerial:
  1697                           	callstack 0
  1698  000032                     ReadSerial@cmdType:
  1699                           	callstack 0
  1700  000032                     actionZone_Closing@securityClosing:
  1701                           	callstack 0
  1702  000032                     cmdMemoryIsEmpty@tempSerial:
  1703                           	callstack 0
  1704                           
  1705                           ; 4 bytes @ 0x31
  1706  000032                     	ds	1
  1707  000033                     actionZone_Closing@typeOpenOrder:
  1708                           	callstack 0
  1709  000033                     validateRemoteSerialNumber@position:
  1710                           	callstack 0
  1711                           
  1712                           ; 2 bytes @ 0x32
  1713  000033                     	ds	2
  1714  000035                     validateRemoteSerialNumber@mask:
  1715                           	callstack 0
  1716                           
  1717                           ; 4 bytes @ 0x34
  1718  000035                     	ds	3
  1719  000038                     keeloq_classic_decrypt_packet@data:
  1720                           	callstack 0
  1721                           
  1722                           ; 2 bytes @ 0x37
  1723  000038                     	ds	1
  1724  000039                     i2c_writeNBytes@address:
  1725                           	callstack 0
  1726  000039                     validateRemoteSerialNumber@j:
  1727                           	callstack 0
  1728                           
  1729                           ; 1 bytes @ 0x38
  1730  000039                     	ds	1
  1731  00003A                     validateRemoteSerialNumber@i:
  1732                           	callstack 0
  1733  00003A                     saveNewSerial@cmdType:
  1734                           	callstack 0
  1735  00003A                     RemoveSerial@position:
  1736                           	callstack 0
  1737  00003A                     ResetDefaultMemory@type:
  1738                           	callstack 0
  1739  00003A                     checkNVM_VarSystem@saveParam:
  1740                           	callstack 0
  1741  00003A                     sm_execute_ControlLearning@typeOpenOrder:
  1742                           	callstack 0
  1743  00003A                     setValueToEdit@ParameterSelected:
  1744                           	callstack 0
  1745                           
  1746                           ; 1 bytes @ 0x39
  1747  00003A                     	ds	1
  1748  00003B                     
  1749                           ; 1 bytes @ 0x3A
  1750 ;;
  1751 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1752 ;;
  1753 ;; *************** function _main *****************
  1754 ;; Defined at:
  1755 ;;		line 63 in file "main_MC50.c"
  1756 ;; Parameters:    Size  Location     Type
  1757 ;;		None
  1758 ;; Auto vars:     Size  Location     Type
  1759 ;;  package         7   28[BANK0 ] struct package_t
  1760 ;; Return value:  Size  Location     Type
  1761 ;;                  1    wreg      void 
  1762 ;; Registers used:
  1763 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  1764 ;; Tracked objects:
  1765 ;;		On entry : 0/0
  1766 ;;		On exit  : 3F/1
  1767 ;;		Unchanged: 0/0
  1768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1770 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1772 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1773 ;;Total ram usage:        7 bytes
  1774 ;; Hardware stack levels required when called: 17
  1775 ;; This function calls:
  1776 ;;		_ControlCounterMoves
  1777 ;;		_ControlCurrent
  1778 ;;		_ControlInputs
  1779 ;;		_ControlLights
  1780 ;;		_ControlMotor
  1781 ;;		_EUSART1_is_rx_ready
  1782 ;;		_InitReceiver
  1783 ;;		_SYSTEM_Initialize
  1784 ;;		_SetSegmentValue
  1785 ;;		_ShowVersion
  1786 ;;		_WWDT_SoftEnable
  1787 ;;		_WWDT_TimerClear
  1788 ;;		_controlVelocity
  1789 ;;		_eusartparser
  1790 ;;		_getKeyPressed
  1791 ;;		_loadNVM_VarSystem
  1792 ;;		_readInputs
  1793 ;;		_readRFButtons
  1794 ;;		_read_package
  1795 ;;		_readbutton
  1796 ;;		_sm_execute_ControlGate
  1797 ;;		_sm_execute_main
  1798 ;;		_sm_init
  1799 ;; This function is called by:
  1800 ;;		Startup code after reset
  1801 ;; This function uses a non-reentrant model
  1802 ;;
  1803                           
  1804                           	psect	text0
  1805  006244                     __ptext0:
  1806                           	callstack 0
  1807  006244                     _main:
  1808                           	callstack 14
  1809                           
  1810                           ;main_MC50.c: 70:     dispStruct.display_grp.value_display1=dMinus;
  1811                           
  1812                           ;incstack = 0
  1813  006244  0E18               	movlw	24
  1814  006246  0100               	movlb	0	; () banked
  1815  006248  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  1816                           
  1817                           ;main_MC50.c: 71:     dispStruct.display_grp.value_display1=dMinus;
  1818  00624A  0E18               	movlw	24
  1819  00624C  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  1820                           
  1821                           ;main_MC50.c: 72:     dispStruct.intermitentFreq=0;
  1822  00624E  0E00               	movlw	0
  1823  006250  6F76               	movwf	(_dispStruct+4)& (0+255),b	;volatile
  1824  006252  0E00               	movlw	0
  1825  006254  6F75               	movwf	(_dispStruct+3)& (0+255),b	;volatile
  1826                           
  1827                           ;main_MC50.c: 73:     dispStruct.upFase=1;
  1828  006256  0E01               	movlw	1
  1829  006258  6F77               	movwf	(_dispStruct+5)& (0+255),b	;volatile
  1830                           
  1831                           ; BSR set to: 0
  1832                           ;main_MC50.c: 76:     SYSTEM_Initialize();
  1833  00625A  EC2F  F048         	call	_SYSTEM_Initialize	;wreg free
  1834                           
  1835                           ; BSR set to: 14
  1836                           ;main_MC50.c: 77:     WWDT_SoftEnable();
  1837  00625E  EC05  F04C         	call	_WWDT_SoftEnable	;wreg free
  1838                           
  1839                           ; BSR set to: 14
  1840                           ;main_MC50.c: 80:       (INTCONbits.GIE = 1);
  1841  006262  8EF2               	bsf	242,7,c	;volatile
  1842                           
  1843                           ; BSR set to: 14
  1844                           ;main_MC50.c: 83:      (INTCONbits.PEIE = 1);
  1845  006264  8CF2               	bsf	242,6,c	;volatile
  1846                           
  1847                           ; BSR set to: 14
  1848                           ;main_MC50.c: 86:     IOCBP3=1;
  1849  006266  010F               	movlb	15	; () banked
  1850  006268  8714               	bsf	20,3,b	;volatile
  1851                           
  1852                           ; BSR set to: 15
  1853                           ;main_MC50.c: 87:     IOCBN3=1;
  1854  00626A  8713               	bsf	19,3,b	;volatile
  1855                           
  1856                           ; BSR set to: 15
  1857                           ;main_MC50.c: 94:     InitReceiver();
  1858  00626C  EC8F  F04A         	call	_InitReceiver	;wreg free
  1859                           
  1860                           ; BSR set to: 0
  1861                           ;main_MC50.c: 95:     loadNVM_VarSystem();
  1862  006270  ECDC  F033         	call	_loadNVM_VarSystem	;wreg free
  1863                           
  1864                           ;main_MC50.c: 97:     WWDT_TimerClear();
  1865  006274  EC65  F04A         	call	_WWDT_TimerClear	;wreg free
  1866                           
  1867                           ;main_MC50.c: 99:     SetSegmentValue(dMinus,dMinus);
  1868  006278  0E18               	movlw	24
  1869  00627A  6E1C               	movwf	SetSegmentValue@d2^0,c
  1870  00627C  0E18               	movlw	24
  1871  00627E  ECB6  F04A         	call	_SetSegmentValue
  1872                           
  1873                           ; BSR set to: 0
  1874                           ;main_MC50.c: 100:     ts_system.ts_TimeSlot1ms = ( 100/50);
  1875  006282  0E02               	movlw	2
  1876  006284  0101               	movlb	1	; () banked
  1877  006286  6F9D               	movwf	(_ts_system+2)& (0+255),b	;volatile
  1878                           
  1879                           ;main_MC50.c: 101:     while ( ts_system.ts_TimeSlot1ms > 0 )
  1880  006288  D00B               	goto	l24073
  1881  00628A                     l24063:
  1882                           
  1883                           ; BSR set to: 1
  1884                           ;main_MC50.c: 102:     {;main_MC50.c: 103:         if ( ts_system.ts_TimeSlotMain<=0 )
  1885  00628A  519E               	movf	(_ts_system+3)& (0+255),w,b	;volatile
  1886  00628C  A4D8               	btfss	status,2,c
  1887  00628E  D008               	goto	l24073
  1888                           
  1889                           ; BSR set to: 1
  1890                           ;main_MC50.c: 104:         {;main_MC50.c: 105:             WWDT_TimerClear();
  1891  006290  EC65  F04A         	call	_WWDT_TimerClear	;wreg free
  1892                           
  1893                           ;main_MC50.c: 106:             ts_system.ts_TimeSlotMain = 50;
  1894  006294  0E32               	movlw	50
  1895  006296  0101               	movlb	1	; () banked
  1896  006298  6F9E               	movwf	(_ts_system+3)& (0+255),b	;volatile
  1897                           
  1898                           ; BSR set to: 1
  1899                           ;main_MC50.c: 108:             ts_system.ts_TimeSlot1ms--;
  1900  00629A  079D               	decf	(_ts_system+2)& (0+255),f,b	;volatile
  1901                           
  1902                           ; BSR set to: 1
  1903                           ;main_MC50.c: 109:             readInputs();
  1904  00629C  ECA8  F036         	call	_readInputs	;wreg free
  1905  0062A0                     l24073:
  1906                           
  1907                           ;main_MC50.c: 101:     while ( ts_system.ts_TimeSlot1ms > 0 )
  1908  0062A0  0101               	movlb	1	; () banked
  1909  0062A2  519D               	movf	(_ts_system+2)& (0+255),w,b	;volatile
  1910  0062A4  A4D8               	btfss	status,2,c
  1911  0062A6  D7F1               	goto	l24063
  1912                           
  1913                           ; BSR set to: 1
  1914                           ;main_MC50.c: 117:     sm_init(&menuConfiguration_stateMachine,st_MainMenu,HIST_NONE);
  1915  0062A8  0EBF               	movlw	low _menuConfiguration_stateMachine
  1916  0062AA  6E12               	movwf	sm_init@psm^0,c
  1917  0062AC  0E02               	movlw	high _menuConfiguration_stateMachine
  1918  0062AE  6E13               	movwf	(sm_init@psm+1)^0,c
  1919  0062B0  0E00               	movlw	0
  1920  0062B2  6E15               	movwf	(sm_init@initial_state+1)^0,c
  1921  0062B4  0E00               	movlw	0
  1922  0062B6  6E14               	movwf	sm_init@initial_state^0,c
  1923  0062B8  0E00               	movlw	0
  1924  0062BA  6E16               	movwf	sm_init@hist_mode^0,c
  1925  0062BC  EC8A  F044         	call	_sm_init	;wreg free
  1926                           
  1927                           ;main_MC50.c: 118:     sm_init(&main_stateMachine,st_standBy,HIST_NONE);
  1928  0062C0  0EEE               	movlw	low _main_stateMachine
  1929  0062C2  6E12               	movwf	sm_init@psm^0,c
  1930  0062C4  0E01               	movlw	high _main_stateMachine
  1931  0062C6  6E13               	movwf	(sm_init@psm+1)^0,c
  1932  0062C8  0E00               	movlw	0
  1933  0062CA  6E15               	movwf	(sm_init@initial_state+1)^0,c
  1934  0062CC  0E00               	movlw	0
  1935  0062CE  6E14               	movwf	sm_init@initial_state^0,c
  1936  0062D0  0E00               	movlw	0
  1937  0062D2  6E16               	movwf	sm_init@hist_mode^0,c
  1938  0062D4  EC8A  F044         	call	_sm_init	;wreg free
  1939                           
  1940                           ;main_MC50.c: 119:     sm_init(&controlGate_stateMachine,st_Idle,HIST_NONE);
  1941  0062D8  0EE3               	movlw	low _controlGate_stateMachine
  1942  0062DA  6E12               	movwf	sm_init@psm^0,c
  1943  0062DC  0E01               	movlw	high _controlGate_stateMachine
  1944  0062DE  6E13               	movwf	(sm_init@psm+1)^0,c
  1945  0062E0  0E00               	movlw	0
  1946  0062E2  6E15               	movwf	(sm_init@initial_state+1)^0,c
  1947  0062E4  0E00               	movlw	0
  1948  0062E6  6E14               	movwf	sm_init@initial_state^0,c
  1949  0062E8  0E00               	movlw	0
  1950  0062EA  6E16               	movwf	sm_init@hist_mode^0,c
  1951  0062EC  EC8A  F044         	call	_sm_init	;wreg free
  1952                           
  1953                           ;main_MC50.c: 120:     sm_init(&controlLearning_stateMachine,st_InitLearning,HIST_NONE);
  1954  0062F0  0EB4               	movlw	low _controlLearning_stateMachine
  1955  0062F2  6E12               	movwf	sm_init@psm^0,c
  1956  0062F4  0E02               	movlw	high _controlLearning_stateMachine
  1957  0062F6  6E13               	movwf	(sm_init@psm+1)^0,c
  1958  0062F8  0E00               	movlw	0
  1959  0062FA  6E15               	movwf	(sm_init@initial_state+1)^0,c
  1960  0062FC  0E00               	movlw	0
  1961  0062FE  6E14               	movwf	sm_init@initial_state^0,c
  1962  006300  0E00               	movlw	0
  1963  006302  6E16               	movwf	sm_init@hist_mode^0,c
  1964  006304  EC8A  F044         	call	_sm_init	;wreg free
  1965                           
  1966                           ;main_MC50.c: 122:     ts_system.Debug_TS=(1000/50);
  1967  006308  0E00               	movlw	0
  1968  00630A  0101               	movlb	1	; () banked
  1969  00630C  6FA4               	movwf	(_ts_system+9)& (0+255),b	;volatile
  1970  00630E  0E14               	movlw	20
  1971  006310  6FA3               	movwf	(_ts_system+8)& (0+255),b	;volatile
  1972                           
  1973                           ; BSR set to: 1
  1974                           ;main_MC50.c: 124:     var_sys.ADCZeroOffset = 510;
  1975  006312  0E01               	movlw	1
  1976  006314  6F4C               	movwf	(_var_sys+76)& (0+255),b	;volatile
  1977  006316  0EFE               	movlw	254
  1978  006318  6F4B               	movwf	(_var_sys+75)& (0+255),b	;volatile
  1979                           
  1980                           ; BSR set to: 1
  1981                           ;main_MC50.c: 125:     ts_system.TimeStopADCZeroOffsetCalc = (5*(1000/50));
  1982  00631A  0E00               	movlw	0
  1983  00631C  6FDA               	movwf	(_ts_system+63)& (0+255),b	;volatile
  1984  00631E  0E64               	movlw	100
  1985  006320  6FD9               	movwf	(_ts_system+62)& (0+255),b	;volatile
  1986                           
  1987                           ; BSR set to: 1
  1988                           ;main_MC50.c: 126:     ts_system.TimeStopElectricBrake = 0;
  1989  006322  0E00               	movlw	0
  1990  006324  6FDC               	movwf	(_ts_system+65)& (0+255),b	;volatile
  1991  006326  0E00               	movlw	0
  1992  006328  6FDB               	movwf	(_ts_system+64)& (0+255),b	;volatile
  1993                           
  1994                           ; BSR set to: 1
  1995                           ;main_MC50.c: 129:     var_sys.StateMotor = Stopped;
  1996  00632A  0E00               	movlw	0
  1997  00632C  6F00               	movwf	_var_sys& (0+255),b	;volatile
  1998  00632E                     l24087:
  1999                           
  2000                           ;main_MC50.c: 136:     {;main_MC50.c: 140:         struct package_t package;;main_MC50.c
      +                          : 141:         if(EUSART1_is_rx_ready()){
  2001  00632E  EC55  F04B         	call	_EUSART1_is_rx_ready	;wreg free
  2002  006332  0900               	iorlw	0
  2003  006334  B4D8               	btfsc	status,2,c
  2004  006336  D00E               	goto	l24093
  2005                           
  2006                           ; BSR set to: 0
  2007                           ;main_MC50.c: 142:             package=read_package();
  2008  006338  EC5E  F045         	call	_read_package	;wreg free
  2009  00633C  EE20  F0F4         	lfsr	2,main@package
  2010  006340  0E06               	movlw	6
  2011  006342                     u29771:
  2012  006342  CFEB FFDB          	movff	plusw0,plusw2
  2013  006346  06E8               	decf	wreg,f,c
  2014  006348  E2FC               	bc	u29771
  2015                           
  2016                           ; BSR set to: 14
  2017                           ;main_MC50.c: 143:             eusartparser(&package);
  2018  00634A  0EF4               	movlw	low main@package
  2019  00634C  0100               	movlb	0	; () banked
  2020  00634E  6FE0               	movwf	eusartparser@package& (0+255),b
  2021  006350  ECCA  F00F         	call	_eusartparser	;wreg free
  2022  006354                     l24093:
  2023                           
  2024                           ;main_MC50.c: 147:         if ( ts_system.ts_TimeSlotMain<=0 )
  2025  006354  0101               	movlb	1	; () banked
  2026  006356  519E               	movf	(_ts_system+3)& (0+255),w,b	;volatile
  2027  006358  A4D8               	btfss	status,2,c
  2028  00635A  D7E9               	goto	l24087
  2029                           
  2030                           ; BSR set to: 1
  2031                           ;main_MC50.c: 148:         {;main_MC50.c: 149:              ts_system.ts_TimeSlotMain = 
      +                          50;
  2032  00635C  0E32               	movlw	50
  2033  00635E  6F9E               	movwf	(_ts_system+3)& (0+255),b	;volatile
  2034                           
  2035                           ; BSR set to: 1
  2036                           ;main_MC50.c: 150:             WWDT_TimerClear();
  2037  006360  EC65  F04A         	call	_WWDT_TimerClear	;wreg free
  2038                           
  2039                           ;main_MC50.c: 152:             if(var_sys.StateVersion<4)
  2040  006364  0E04               	movlw	4
  2041  006366  0101               	movlb	1	; () banked
  2042  006368  6149               	cpfslt	(_var_sys+73)& (0+255),b	;volatile
  2043  00636A  D003               	goto	l24103
  2044                           
  2045                           ; BSR set to: 1
  2046                           ;main_MC50.c: 154:             {;main_MC50.c: 155:                 ShowVersion();
  2047  00636C  EC14  F043         	call	_ShowVersion	;wreg free
  2048                           
  2049                           ;main_MC50.c: 156:             }
  2050  006370  D7DE               	goto	l24087
  2051  006372                     l24103:
  2052                           
  2053                           ; BSR set to: 1
  2054                           ;main_MC50.c: 158:             {;main_MC50.c: 160:                 readbutton();
  2055  006372  ECAA  F042         	call	_readbutton	;wreg free
  2056                           
  2057                           ; BSR set to: 1
  2058                           ;main_MC50.c: 162:                 readRFButtons();
  2059  006376  EC92  F02F         	call	_readRFButtons	;wreg free
  2060                           
  2061                           ;main_MC50.c: 163:                lastKey=getKeyPressed();
  2062  00637A  ECE8  F04A         	call	_getKeyPressed	;wreg free
  2063  00637E  0101               	movlb	1	; () banked
  2064  006380  6F95               	movwf	_lastKey& (0+255),b
  2065                           
  2066                           ; BSR set to: 1
  2067                           ;main_MC50.c: 165:                 readInputs();
  2068  006382  ECA8  F036         	call	_readInputs	;wreg free
  2069                           
  2070                           ;main_MC50.c: 166:                 ControlInputs();
  2071  006386  EC07  F035         	call	_ControlInputs	;wreg free
  2072                           
  2073                           ;main_MC50.c: 167:                 ControlCurrent();
  2074  00638A  ECE4  F031         	call	_ControlCurrent	;wreg free
  2075                           
  2076                           ;main_MC50.c: 168:                 controlVelocity();
  2077  00638E  EC87  F028         	call	_controlVelocity	;wreg free
  2078                           
  2079                           ;main_MC50.c: 169:                 ControlMotor();
  2080  006392  EC51  F026         	call	_ControlMotor	;wreg free
  2081                           
  2082                           ;main_MC50.c: 170:                 ControlLights();
  2083  006396  EC99  F01F         	call	_ControlLights	;wreg free
  2084                           
  2085                           ;main_MC50.c: 171:                 ControlCounterMoves();
  2086  00639A  EC31  F044         	call	_ControlCounterMoves	;wreg free
  2087                           
  2088                           ;main_MC50.c: 173:                 sm_execute_main(&main_stateMachine);
  2089  00639E  0EEE               	movlw	low _main_stateMachine
  2090  0063A0  0100               	movlb	0	; () banked
  2091  0063A2  6FED               	movwf	sm_execute_main@psm& (0+255),b
  2092  0063A4  0E01               	movlw	high _main_stateMachine
  2093  0063A6  6FEE               	movwf	(sm_execute_main@psm+1)& (0+255),b
  2094  0063A8  ECFA  F014         	call	_sm_execute_main	;wreg free
  2095                           
  2096                           ;main_MC50.c: 174:                 sm_execute_ControlGate(&controlGate_stateMachine);
  2097  0063AC  0EE3               	movlw	low _controlGate_stateMachine
  2098  0063AE  0100               	movlb	0	; () banked
  2099  0063B0  6FE7               	movwf	sm_execute_ControlGate@psm& (0+255),b
  2100  0063B2  0E01               	movlw	high _controlGate_stateMachine
  2101  0063B4  6FE8               	movwf	(sm_execute_ControlGate@psm+1)& (0+255),b
  2102  0063B6  ECF4  F01D         	call	_sm_execute_ControlGate	;wreg free
  2103                           
  2104                           ;main_MC50.c: 177:                 if(lastKey!=0xff)
  2105  0063BA  0101               	movlb	1	; () banked
  2106  0063BC  2995               	incf	_lastKey& (0+255),w,b
  2107  0063BE  B4D8               	btfsc	status,2,c
  2108  0063C0  D7B6               	goto	l24087
  2109                           
  2110                           ; BSR set to: 1
  2111                           ;main_MC50.c: 178:                 {;main_MC50.c: 180:                       InitReceive
      +                          r();
  2112  0063C2  EC8F  F04A         	call	_InitReceiver	;wreg free
  2113                           
  2114                           ; BSR set to: 1
  2115                           
  2116                           ;main_MC50.c: 185:         }
  2117  0063C6  D7B3               	goto	l24087
  2118  0063C8                     __end_of_main:
  2119                           	callstack 0
  2120                           
  2121 ;; *************** function _sm_execute_main *****************
  2122 ;; Defined at:
  2123 ;;		line 26 in file "sm_Main_MC50.c"
  2124 ;; Parameters:    Size  Location     Type
  2125 ;;  psm             2   21[BANK0 ] PTR struct .
  2126 ;;		 -> main_stateMachine(11), 
  2127 ;; Auto vars:     Size  Location     Type
  2128 ;;		None
  2129 ;; Return value:  Size  Location     Type
  2130 ;;                  1    wreg      void 
  2131 ;; Registers used:
  2132 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2133 ;; Tracked objects:
  2134 ;;		On entry : 3F/0
  2135 ;;		On exit  : 0/0
  2136 ;;		Unchanged: 0/0
  2137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2138 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2140 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2141 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2142 ;;Total ram usage:        4 bytes
  2143 ;; Hardware stack levels used: 1
  2144 ;; Hardware stack levels required when called: 16
  2145 ;; This function calls:
  2146 ;;		_SetSegmentValueIntermitentMain
  2147 ;;		_SetSegmentValueMain
  2148 ;;		_load_New_Menu
  2149 ;;		_sm_execute_menuConfiguration
  2150 ;;		_sm_send_event
  2151 ;; This function is called by:
  2152 ;;		_main
  2153 ;; This function uses a non-reentrant model
  2154 ;;
  2155                           
  2156                           	psect	text1
  2157  0029F4                     __ptext1:
  2158                           	callstack 0
  2159  0029F4                     _sm_execute_main:
  2160                           	callstack 14
  2161                           
  2162                           ; BSR set to: 0
  2163                           ;sm_Main_MC50.c: 29:     switch((sm_state_Main_t) psm->current_state)
  2164                           
  2165                           ; BSR set to: 1
  2166                           ;incstack = 0
  2167  0029F4  D053               	goto	l23589
  2168  0029F6                     l23565:
  2169                           
  2170                           ; BSR set to: 0
  2171                           ;sm_Main_MC50.c: 32:         {;sm_Main_MC50.c: 33:             if(programmer_enable==0)
  2172  0029F6  5185               	movf	_programmer_enable& (0+255),w,b
  2173  0029F8  A4D8               	btfss	status,2,c
  2174  0029FA  D066               	goto	l23591
  2175                           
  2176                           ; BSR set to: 0
  2177                           ;sm_Main_MC50.c: 34:                 if(psm->last_event==ev_goto_MenuConfig)
  2178  0029FC  EE20 F004          	lfsr	2,4
  2179  002A00  51ED               	movf	sm_execute_main@psm& (0+255),w,b
  2180  002A02  26D9               	addwf	fsr2l,f,c
  2181  002A04  51EE               	movf	(sm_execute_main@psm+1)& (0+255),w,b
  2182  002A06  22DA               	addwfc	fsr2h,f,c
  2183  002A08  0E06               	movlw	6
  2184  002A0A  18DE               	xorwf	postinc2,w,c
  2185  002A0C  10DE               	iorwf	postinc2,w,c
  2186  002A0E  A4D8               	btfss	status,2,c
  2187  002A10  D006               	goto	l23571
  2188  002A12                     u28770:
  2189                           
  2190                           ; BSR set to: 0
  2191                           ;sm_Main_MC50.c: 35:                 {;sm_Main_MC50.c: 37:                     psm->curr
      +                          ent_state = st_MenuConfiguration;
  2192  002A12  C0ED  FFD9         	movff	sm_execute_main@psm,fsr2l
  2193  002A16  C0EE  FFDA         	movff	sm_execute_main@psm+1,fsr2h
  2194  002A1A  0E01               	movlw	1
  2195  002A1C  D01D               	goto	L2
  2196  002A1E                     l23571:
  2197                           
  2198                           ; BSR set to: 0
  2199  002A1E  EE20 F004          	lfsr	2,4
  2200  002A22  51ED               	movf	sm_execute_main@psm& (0+255),w,b
  2201  002A24  26D9               	addwf	fsr2l,f,c
  2202  002A26  51EE               	movf	(sm_execute_main@psm+1)& (0+255),w,b
  2203  002A28  22DA               	addwfc	fsr2h,f,c
  2204  002A2A  0E11               	movlw	17
  2205  002A2C  18DE               	xorwf	postinc2,w,c
  2206  002A2E  10DE               	iorwf	postinc2,w,c
  2207  002A30  A4D8               	btfss	status,2,c
  2208  002A32  D04A               	goto	l23591
  2209                           
  2210                           ; BSR set to: 0
  2211                           ;sm_Main_MC50.c: 40:                 {;sm_Main_MC50.c: 41:                     psm->curr
      +                          ent_state = st_MotorON;
  2212  002A34  C0ED  FFD9         	movff	sm_execute_main@psm,fsr2l
  2213  002A38  C0EE  FFDA         	movff	sm_execute_main@psm+1,fsr2h
  2214  002A3C  0E02               	movlw	2
  2215  002A3E  D00C               	goto	L2
  2216  002A40                     l23575:
  2217                           
  2218                           ; BSR set to: 0
  2219                           ;sm_Main_MC50.c: 46:         {;sm_Main_MC50.c: 47:             if(psm->last_event==ev_go
      +                          to_StandBy)
  2220  002A40  EE20 F004          	lfsr	2,4
  2221  002A44  51ED               	movf	sm_execute_main@psm& (0+255),w,b
  2222  002A46  26D9               	addwf	fsr2l,f,c
  2223  002A48  51EE               	movf	(sm_execute_main@psm+1)& (0+255),w,b
  2224  002A4A  22DA               	addwfc	fsr2h,f,c
  2225  002A4C  0E07               	movlw	7
  2226  002A4E  18DE               	xorwf	postinc2,w,c
  2227  002A50  10DE               	iorwf	postinc2,w,c
  2228  002A52  A4D8               	btfss	status,2,c
  2229  002A54  D039               	goto	l23591
  2230  002A56  D00F               	goto	u28800
  2231  002A58                     L2:
  2232  002A58  6EDE               	movwf	postinc2,c
  2233  002A5A  0E00               	movlw	0
  2234  002A5C  6EDD               	movwf	postdec2,c
  2235  002A5E  D034               	goto	l23591
  2236  002A60                     l23579:
  2237                           
  2238                           ; BSR set to: 0
  2239                           ;sm_Main_MC50.c: 54:         {;sm_Main_MC50.c: 55:             if(psm->last_event==ev_go
      +                          to_StandBy)
  2240  002A60  EE20 F004          	lfsr	2,4
  2241  002A64  51ED               	movf	sm_execute_main@psm& (0+255),w,b
  2242  002A66  26D9               	addwf	fsr2l,f,c
  2243  002A68  51EE               	movf	(sm_execute_main@psm+1)& (0+255),w,b
  2244  002A6A  22DA               	addwfc	fsr2h,f,c
  2245  002A6C  0E07               	movlw	7
  2246  002A6E  18DE               	xorwf	postinc2,w,c
  2247  002A70  10DE               	iorwf	postinc2,w,c
  2248  002A72  A4D8               	btfss	status,2,c
  2249  002A74  D006               	goto	l23583
  2250  002A76                     u28800:
  2251                           
  2252                           ; BSR set to: 0
  2253                           ;sm_Main_MC50.c: 56:             {;sm_Main_MC50.c: 57:                 psm->current_stat
      +                          e = st_standBy;
  2254  002A76  C0ED  FFD9         	movff	sm_execute_main@psm,fsr2l
  2255  002A7A  C0EE  FFDA         	movff	sm_execute_main@psm+1,fsr2h
  2256  002A7E  0E00               	movlw	0
  2257  002A80  D7EB               	goto	L2
  2258  002A82                     l23583:
  2259                           
  2260                           ; BSR set to: 0
  2261  002A82  EE20 F004          	lfsr	2,4
  2262  002A86  51ED               	movf	sm_execute_main@psm& (0+255),w,b
  2263  002A88  26D9               	addwf	fsr2l,f,c
  2264  002A8A  51EE               	movf	(sm_execute_main@psm+1)& (0+255),w,b
  2265  002A8C  22DA               	addwfc	fsr2h,f,c
  2266  002A8E  0E06               	movlw	6
  2267  002A90  18DE               	xorwf	postinc2,w,c
  2268  002A92  10DE               	iorwf	postinc2,w,c
  2269  002A94  A4D8               	btfss	status,2,c
  2270  002A96  D018               	goto	l23591
  2271  002A98  D7BC               	goto	u28770
  2272  002A9A                     l3053:
  2273                           
  2274                           ; BSR set to: 0
  2275  002A9A  D7FF               	goto	l3053
  2276  002A9C                     l23589:
  2277                           
  2278                           ; BSR set to: 0
  2279  002A9C  C0ED  FFD9         	movff	sm_execute_main@psm,fsr2l
  2280  002AA0  C0EE  FFDA         	movff	sm_execute_main@psm+1,fsr2h
  2281  002AA4  50DF               	movf	indf2,w,c
  2282  002AA6  6FEF               	movwf	??_sm_execute_main& (0+255),b
  2283  002AA8  6BF0               	clrf	(??_sm_execute_main+1)& (0+255),b
  2284                           
  2285                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2286                           ; Switch size 1, requested type "simple"
  2287                           ; Number of cases is 1, Range of values is 0 to 0
  2288                           ; switch strategies available:
  2289                           ; Name         Instructions Cycles
  2290                           ; simple_byte            4     3 (average)
  2291                           ;	Chosen strategy is simple_byte
  2292  002AAA  51F0               	movf	(??_sm_execute_main+1)& (0+255),w,b
  2293  002AAC  0A00               	xorlw	0	; case 0
  2294  002AAE  A4D8               	btfss	status,2,c
  2295  002AB0  D7F4               	goto	l3053
  2296                           
  2297                           ; BSR set to: 0
  2298                           ; Switch size 1, requested type "simple"
  2299                           ; Number of cases is 3, Range of values is 0 to 2
  2300                           ; switch strategies available:
  2301                           ; Name         Instructions Cycles
  2302                           ; simple_byte           10     6 (average)
  2303                           ;	Chosen strategy is simple_byte
  2304  002AB2  51EF               	movf	??_sm_execute_main& (0+255),w,b
  2305  002AB4  0A00               	xorlw	0	; case 0
  2306  002AB6  B4D8               	btfsc	status,2,c
  2307  002AB8  D79E               	goto	l23565
  2308  002ABA  0A01               	xorlw	1	; case 1
  2309  002ABC  B4D8               	btfsc	status,2,c
  2310  002ABE  D7C0               	goto	l23575
  2311  002AC0  0A03               	xorlw	3	; case 2
  2312  002AC2  B4D8               	btfsc	status,2,c
  2313  002AC4  D7CD               	goto	l23579
  2314  002AC6  D7E9               	goto	l3053
  2315  002AC8                     l23591:
  2316                           
  2317                           ; BSR set to: 0
  2318                           ;sm_Main_MC50.c: 77:     sm_send_event(&main_stateMachine, ev_NULL);
  2319  002AC8  0EEE               	movlw	low _main_stateMachine
  2320  002ACA  6E12               	movwf	sm_send_event@psm^0,c
  2321  002ACC  0E01               	movlw	high _main_stateMachine
  2322  002ACE  6E13               	movwf	(sm_send_event@psm+1)^0,c
  2323  002AD0  0E00               	movlw	0
  2324  002AD2  6E15               	movwf	(sm_send_event@event+1)^0,c
  2325  002AD4  0E00               	movlw	0
  2326  002AD6  6E14               	movwf	sm_send_event@event^0,c
  2327  002AD8  ECA7  F043         	call	_sm_send_event	;wreg free
  2328                           
  2329                           ;sm_Main_MC50.c: 82:     switch((sm_state_Main_t) psm->current_state)
  2330  002ADC  D1F8               	goto	l23869
  2331  002ADE                     l23593:
  2332                           
  2333                           ; BSR set to: 0
  2334                           ;sm_Main_MC50.c: 85:         {;sm_Main_MC50.c: 86:             if (button_struct.current
      +                          ==0 && button_struct.timer>((1000/50)*5))
  2335  002ADE  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  2336  002AE0  A4D8               	btfss	status,2,c
  2337  002AE2  D016               	goto	l23605
  2338                           
  2339                           ; BSR set to: 0
  2340  002AE4  0E64               	movlw	100
  2341  002AE6  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2342  002AE8  D013               	goto	l23605
  2343                           
  2344                           ; BSR set to: 0
  2345                           ;sm_Main_MC50.c: 87:             {;sm_Main_MC50.c: 88:                 load_New_Menu(E_M
      +                          enu);
  2346  002AEA  0E01               	movlw	1
  2347  002AEC  EC2B  F021         	call	_load_New_Menu
  2348  002AF0                     l23599:
  2349                           
  2350                           ;sm_Main_MC50.c: 89:                 sm_send_event(&main_stateMachine, ev_goto_MenuConfi
      +                          g);
  2351  002AF0  0EEE               	movlw	low _main_stateMachine
  2352  002AF2  6E12               	movwf	sm_send_event@psm^0,c
  2353  002AF4  0E01               	movlw	high _main_stateMachine
  2354  002AF6  6E13               	movwf	(sm_send_event@psm+1)^0,c
  2355  002AF8  0E00               	movlw	0
  2356  002AFA  6E15               	movwf	(sm_send_event@event+1)^0,c
  2357  002AFC  0E06               	movlw	6
  2358  002AFE  6E14               	movwf	sm_send_event@event^0,c
  2359  002B00  ECA7  F043         	call	_sm_send_event	;wreg free
  2360                           
  2361                           ;sm_Main_MC50.c: 90:                 button_struct.processed=1;
  2362  002B04  0E01               	movlw	1
  2363  002B06  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  2364                           
  2365                           ;sm_Main_MC50.c: 91:                 temp=0;
  2366  002B08  0E00               	movlw	0
  2367  002B0A  0100               	movlb	0	; () banked
  2368  002B0C  6F80               	movwf	_temp& (0+255),b
  2369                           
  2370                           ;sm_Main_MC50.c: 92:             }
  2371  002B0E  0012               	return	
  2372  002B10                     l23605:
  2373                           
  2374                           ; BSR set to: 0
  2375  002B10  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  2376  002B12  A4D8               	btfss	status,2,c
  2377  002B14  D00B               	goto	l23613
  2378                           
  2379                           ; BSR set to: 0
  2380  002B16  0E14               	movlw	20
  2381  002B18  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2382  002B1A  D008               	goto	l23613
  2383                           
  2384                           ; BSR set to: 0
  2385                           ;sm_Main_MC50.c: 94:             {;sm_Main_MC50.c: 97:                 SetSegmentValueMa
      +                          in(dP,d0);
  2386  002B1C  0E00               	movlw	0
  2387  002B1E  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  2388  002B20  0E10               	movlw	16
  2389  002B22  EC9C  F04A         	call	_SetSegmentValueMain
  2390                           
  2391                           ; BSR set to: 0
  2392                           ;sm_Main_MC50.c: 98:                 temp=1;
  2393  002B26  0E01               	movlw	1
  2394  002B28  6F80               	movwf	_temp& (0+255),b
  2395                           
  2396                           ;sm_Main_MC50.c: 99:             }
  2397  002B2A  0012               	return	
  2398  002B2C                     l23613:
  2399                           
  2400                           ; BSR set to: 0
  2401  002B2C  0580               	decf	_temp& (0+255),w,b
  2402  002B2E  A4D8               	btfss	status,2,c
  2403  002B30  D004               	goto	l23623
  2404                           
  2405                           ; BSR set to: 0
  2406                           ;sm_Main_MC50.c: 101:             {;sm_Main_MC50.c: 102:                 load_New_Menu(P
      +                          _Menu);
  2407  002B32  0E00               	movlw	0
  2408  002B34  EC2B  F021         	call	_load_New_Menu
  2409  002B38  D7DB               	goto	l23599
  2410  002B3A                     l23623:
  2411                           
  2412                           ; BSR set to: 0
  2413  002B3A  0E27               	movlw	39
  2414  002B3C  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2415  002B3E  A4D8               	btfss	status,2,c
  2416  002B40  D007               	goto	l23635
  2417                           
  2418                           ; BSR set to: 0
  2419  002B42  0E78               	movlw	120
  2420  002B44  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2421  002B46  D004               	goto	l23635
  2422                           
  2423                           ; BSR set to: 0
  2424                           ;sm_Main_MC50.c: 108:             {;sm_Main_MC50.c: 110:                 load_New_Menu(D
      +                          el_Menu);
  2425  002B48  0E0D               	movlw	13
  2426  002B4A  EC2B  F021         	call	_load_New_Menu
  2427  002B4E  D7D0               	goto	l23599
  2428  002B50                     l23635:
  2429                           
  2430                           ; BSR set to: 0
  2431  002B50  0E27               	movlw	39
  2432  002B52  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2433  002B54  A4D8               	btfss	status,2,c
  2434  002B56  D00B               	goto	l23643
  2435                           
  2436                           ; BSR set to: 0
  2437  002B58  0E14               	movlw	20
  2438  002B5A  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2439  002B5C  D008               	goto	l23643
  2440                           
  2441                           ; BSR set to: 0
  2442                           ;sm_Main_MC50.c: 116:             {;sm_Main_MC50.c: 118:                 SetSegmentValue
      +                          Main(d5,dU);
  2443  002B5E  0E13               	movlw	19
  2444  002B60  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  2445  002B62  0E05               	movlw	5
  2446  002B64  EC9C  F04A         	call	_SetSegmentValueMain
  2447                           
  2448                           ; BSR set to: 0
  2449                           ;sm_Main_MC50.c: 119:                 temp=2;
  2450  002B68  0E02               	movlw	2
  2451  002B6A  6F80               	movwf	_temp& (0+255),b
  2452                           
  2453                           ;sm_Main_MC50.c: 120:             }
  2454  002B6C  0012               	return	
  2455  002B6E                     l23643:
  2456                           
  2457                           ; BSR set to: 0
  2458  002B6E  0E02               	movlw	2
  2459  002B70  1980               	xorwf	_temp& (0+255),w,b
  2460  002B72  A4D8               	btfss	status,2,c
  2461  002B74  D004               	goto	l23653
  2462                           
  2463                           ; BSR set to: 0
  2464                           ;sm_Main_MC50.c: 122:             {;sm_Main_MC50.c: 123:                 load_New_Menu(S
      +                          _Menu);
  2465  002B76  0E0C               	movlw	12
  2466  002B78  EC2B  F021         	call	_load_New_Menu
  2467  002B7C  D7B9               	goto	l23599
  2468  002B7E                     l23653:
  2469                           
  2470                           ; BSR set to: 0
  2471  002B7E  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  2472  002B80  A4D8               	btfss	status,2,c
  2473  002B82  D009               	goto	l23659
  2474                           
  2475                           ; BSR set to: 0
  2476  002B84  0101               	movlb	1	; () banked
  2477  002B86  5103               	movf	(_var_sys+3)& (0+255),w,b	;volatile
  2478  002B88  A4D8               	btfss	status,2,c
  2479  002B8A  D005               	goto	l23659
  2480                           
  2481                           ; BSR set to: 1
  2482                           ;sm_Main_MC50.c: 129:             {;sm_Main_MC50.c: 130:                 var_sys.StartFr
      +                          omButton=YES;
  2483  002B8C  0E01               	movlw	1
  2484  002B8E  6F09               	movwf	(_var_sys+9)& (0+255),b	;volatile
  2485                           
  2486                           ;sm_Main_MC50.c: 131:                 var_sys.StateMotor=InClose;
  2487  002B90  0E03               	movlw	3
  2488  002B92  6F00               	movwf	_var_sys& (0+255),b	;volatile
  2489                           
  2490                           ;sm_Main_MC50.c: 132:             }
  2491  002B94  0012               	return	
  2492  002B96                     l23659:
  2493  002B96  0E17               	movlw	23
  2494  002B98  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2495  002B9A  A4D8               	btfss	status,2,c
  2496  002B9C  D009               	goto	l23665
  2497  002B9E  0101               	movlb	1	; () banked
  2498  002BA0  5104               	movf	(_var_sys+4)& (0+255),w,b	;volatile
  2499  002BA2  A4D8               	btfss	status,2,c
  2500  002BA4  D005               	goto	l23665
  2501                           
  2502                           ; BSR set to: 1
  2503                           ;sm_Main_MC50.c: 134:             {;sm_Main_MC50.c: 135:                 var_sys.StartFr
      +                          omButton=YES;
  2504  002BA6  0E01               	movlw	1
  2505  002BA8  6F09               	movwf	(_var_sys+9)& (0+255),b	;volatile
  2506                           
  2507                           ;sm_Main_MC50.c: 136:                 var_sys.StateMotor=InOpenFull;
  2508  002BAA  0E01               	movlw	1
  2509  002BAC  6F00               	movwf	_var_sys& (0+255),b	;volatile
  2510                           
  2511                           ;sm_Main_MC50.c: 137:             }
  2512  002BAE  0012               	return	
  2513  002BB0                     l23665:
  2514  002BB0  0101               	movlb	1	; () banked
  2515  002BB2  0509               	decf	(_var_sys+9)& (0+255),w,b	;volatile
  2516  002BB4  A4D8               	btfss	status,2,c
  2517  002BB6  D005               	goto	l23669
  2518                           
  2519                           ; BSR set to: 1
  2520                           ;sm_Main_MC50.c: 139:             {;sm_Main_MC50.c: 140:                 var_sys.StartFr
      +                          omButton=NO;
  2521  002BB8  0E00               	movlw	0
  2522  002BBA  6F09               	movwf	(_var_sys+9)& (0+255),b	;volatile
  2523                           
  2524                           ;sm_Main_MC50.c: 141:                 var_sys.StateMotor = Stopped;
  2525  002BBC  0E00               	movlw	0
  2526  002BBE  6F00               	movwf	_var_sys& (0+255),b	;volatile
  2527                           
  2528                           ;sm_Main_MC50.c: 142:             }
  2529  002BC0  0012               	return	
  2530  002BC2                     l23669:
  2531                           
  2532                           ; BSR set to: 1
  2533  002BC2  0E06               	movlw	6
  2534  002BC4  183B               	xorwf	_rfCMD^0,w,c	;volatile
  2535  002BC6  B4D8               	btfsc	status,2,c
  2536  002BC8  D004               	goto	u28980
  2537                           
  2538                           ; BSR set to: 1
  2539  002BCA  0E05               	movlw	5
  2540  002BCC  183B               	xorwf	_rfCMD^0,w,c	;volatile
  2541  002BCE  A4D8               	btfss	status,2,c
  2542  002BD0  D015               	goto	l23683
  2543  002BD2                     u28980:
  2544                           
  2545                           ; BSR set to: 1
  2546  002BD2  0E63               	movlw	99
  2547  002BD4  6444               	cpfsgt	(_rfCMD+9)^0,c	;volatile
  2548  002BD6  D012               	goto	l23683
  2549                           
  2550                           ; BSR set to: 1
  2551                           ;sm_Main_MC50.c: 144:             {;sm_Main_MC50.c: 145:                 load_New_Menu(S
      +                          _Menu);
  2552  002BD8  0E0C               	movlw	12
  2553  002BDA  EC2B  F021         	call	_load_New_Menu
  2554                           
  2555                           ;sm_Main_MC50.c: 146:                 sm_send_event(&main_stateMachine, ev_goto_MenuConf
      +                          ig);
  2556  002BDE  0EEE               	movlw	low _main_stateMachine
  2557  002BE0  6E12               	movwf	sm_send_event@psm^0,c
  2558  002BE2  0E01               	movlw	high _main_stateMachine
  2559  002BE4  6E13               	movwf	(sm_send_event@psm+1)^0,c
  2560  002BE6  0E00               	movlw	0
  2561  002BE8  6E15               	movwf	(sm_send_event@event+1)^0,c
  2562  002BEA  0E06               	movlw	6
  2563  002BEC  6E14               	movwf	sm_send_event@event^0,c
  2564  002BEE  ECA7  F043         	call	_sm_send_event	;wreg free
  2565                           
  2566                           ;sm_Main_MC50.c: 147:                 var_sys.ProgrammingDistanceIs=rfCMD.currentType;
  2567  002BF2  C03B  F13B         	movff	_rfCMD,_var_sys+59	;volatile
  2568                           
  2569                           ;sm_Main_MC50.c: 148:                 rfCMD.processed=1;
  2570  002BF6  0E01               	movlw	1
  2571  002BF8  6E45               	movwf	(_rfCMD+10)^0,c	;volatile
  2572                           
  2573                           ;sm_Main_MC50.c: 149:             }
  2574  002BFA  0012               	return	
  2575  002BFC                     l23683:
  2576                           
  2577                           ; BSR set to: 1
  2578  002BFC  BFA8               	btfsc	(_ts_system+13)& (0+255),7,b	;volatile
  2579  002BFE  D005               	goto	u29000
  2580  002C00  51A8               	movf	(_ts_system+13)& (0+255),w,b	;volatile
  2581  002C02  E111               	bnz	l3065
  2582  002C04  05A7               	decf	(_ts_system+12)& (0+255),w,b	;volatile
  2583  002C06  B0D8               	btfsc	status,0,c
  2584  002C08  0012               	return	
  2585  002C0A                     u29000:
  2586                           
  2587                           ; BSR set to: 1
  2588                           ;sm_Main_MC50.c: 151:             {;sm_Main_MC50.c: 152:                 if(var_sys.FimC
      +                          urso_CloseIsEnabled == YES)
  2589  002C0A  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
  2590  002C0C  A4D8               	btfss	status,2,c
  2591  002C0E  D006               	goto	l23689
  2592                           
  2593                           ; BSR set to: 1
  2594                           ;sm_Main_MC50.c: 154:                     {;sm_Main_MC50.c: 156:                        
      +                           SetSegmentValueMain(dF,dC);
  2595  002C10  0E0C               	movlw	12
  2596  002C12  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  2597  002C14  0E0F               	movlw	15
  2598  002C16  EC9C  F04A         	call	_SetSegmentValueMain
  2599                           
  2600                           ;sm_Main_MC50.c: 157:                     }
  2601  002C1A  0012               	return	
  2602  002C1C                     l23689:
  2603                           
  2604                           ; BSR set to: 1
  2605                           ;sm_Main_MC50.c: 160:                 SetSegmentValueMain(dMinus,dMinus);
  2606  002C1C  0E18               	movlw	24
  2607  002C1E  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  2608  002C20  0E18               	movlw	24
  2609  002C22  EC9C  F04A         	call	_SetSegmentValueMain
  2610  002C26                     l3065:
  2611                           
  2612                           ; BSR set to: 1
  2613  002C26  0012               	return	
  2614  002C28                     l23691:
  2615                           
  2616                           ; BSR set to: 0
  2617                           ;sm_Main_MC50.c: 167:         {;sm_Main_MC50.c: 168:             sm_execute_menuConfigur
      +                          ation(&menuConfiguration_stateMachine);
  2618  002C28  0EBF               	movlw	low _menuConfiguration_stateMachine
  2619  002C2A  6FE9               	movwf	sm_execute_menuConfiguration@psm& (0+255),b
  2620  002C2C  0E02               	movlw	high _menuConfiguration_stateMachine
  2621  002C2E  6FEA               	movwf	(sm_execute_menuConfiguration@psm+1)& (0+255),b
  2622  002C30  EC91  F007         	call	_sm_execute_menuConfiguration	;wreg free
  2623                           
  2624                           ;sm_Main_MC50.c: 169:         };sm_Main_MC50.c: 170:         break;
  2625  002C34  0012               	return	
  2626  002C36                     l23693:
  2627                           
  2628                           ; BSR set to: 0
  2629                           ;sm_Main_MC50.c: 172:         {;sm_Main_MC50.c: 175:             aux_in_auto_close = NO;
  2630  002C36  0E00               	movlw	0
  2631  002C38  0101               	movlb	1	; () banked
  2632  002C3A  6F8C               	movwf	_aux_in_auto_close& (0+255),b
  2633                           
  2634                           ; BSR set to: 1
  2635                           ;sm_Main_MC50.c: 176:             if ( controlGate_stateMachine.current_state == st_Open
      +                          ed )
  2636  002C3C  0E04               	movlw	4
  2637  002C3E  19E3               	xorwf	_controlGate_stateMachine& (0+255),w,b
  2638  002C40  11E4               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
  2639  002C42  A4D8               	btfss	status,2,c
  2640  002C44  D013               	goto	l3088
  2641                           
  2642                           ; BSR set to: 1
  2643                           ;sm_Main_MC50.c: 177:             {;sm_Main_MC50.c: 179:                 if ( var_sys_NV
      +                          M.operationMode == ModoPassoPasso && var_sys.passoAPassoAutoClose == YES )
  2644  002C46  0100               	movlb	0	; () banked
  2645  002C48  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
  2646  002C4A  A4D8               	btfss	status,2,c
  2647  002C4C  D007               	goto	l23703
  2648                           
  2649                           ; BSR set to: 0
  2650  002C4E  0101               	movlb	1	; () banked
  2651  002C50  0550               	decf	(_var_sys+80)& (0+255),w,b	;volatile
  2652  002C52  A4D8               	btfss	status,2,c
  2653  002C54  D003               	goto	l23703
  2654  002C56                     u29040:
  2655                           
  2656                           ; BSR set to: 1
  2657                           ;sm_Main_MC50.c: 180:                 {;sm_Main_MC50.c: 181:                     aux_in_
      +                          auto_close = YES;
  2658  002C56  0E01               	movlw	1
  2659  002C58  6F8C               	movwf	_aux_in_auto_close& (0+255),b
  2660                           
  2661                           ;sm_Main_MC50.c: 182:                 }
  2662  002C5A  D008               	goto	l3088
  2663  002C5C                     l23703:
  2664  002C5C  0100               	movlb	0	; () banked
  2665  002C5E  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
  2666  002C60  B4D8               	btfsc	status,2,c
  2667  002C62  D004               	goto	l3088
  2668                           
  2669                           ; BSR set to: 0
  2670  002C64  0101               	movlb	1	; () banked
  2671  002C66  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
  2672  002C68  A4D8               	btfss	status,2,c
  2673  002C6A  D7F5               	goto	u29040
  2674  002C6C                     l3088:
  2675                           
  2676                           ;sm_Main_MC50.c: 193:             if(var_sys.StateMotor==Stopped && ( (controlGate_state
      +                          Machine.current_state==st_Opened && aux_in_auto_close==NO) || controlGate_stateMachine.c
      +                          urrent_state==st_Closed || controlGate_stateMachine.current_state==st_Idle ) )
  2677  002C6C  0101               	movlb	1	; () banked
  2678  002C6E  5100               	movf	_var_sys& (0+255),w,b	;volatile
  2679  002C70  A4D8               	btfss	status,2,c
  2680  002C72  D069               	goto	l3102
  2681                           
  2682                           ; BSR set to: 1
  2683  002C74  0E04               	movlw	4
  2684  002C76  19E3               	xorwf	_controlGate_stateMachine& (0+255),w,b
  2685  002C78  11E4               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
  2686  002C7A  A4D8               	btfss	status,2,c
  2687  002C7C  D003               	goto	u29090
  2688                           
  2689                           ; BSR set to: 1
  2690  002C7E  518C               	movf	_aux_in_auto_close& (0+255),w,b
  2691  002C80  B4D8               	btfsc	status,2,c
  2692  002C82  D008               	goto	u29110
  2693  002C84                     u29090:
  2694                           
  2695                           ; BSR set to: 1
  2696  002C84  05E3               	decf	_controlGate_stateMachine& (0+255),w,b
  2697  002C86  11E4               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
  2698  002C88  B4D8               	btfsc	status,2,c
  2699  002C8A  D004               	goto	u29110
  2700                           
  2701                           ; BSR set to: 1
  2702  002C8C  51E3               	movf	_controlGate_stateMachine& (0+255),w,b
  2703  002C8E  11E4               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
  2704  002C90  A4D8               	btfss	status,2,c
  2705  002C92  D059               	goto	l3102
  2706  002C94                     u29110:
  2707                           
  2708                           ; BSR set to: 1
  2709                           ;sm_Main_MC50.c: 194:             {;sm_Main_MC50.c: 195:                 if (button_stru
      +                          ct.current==0 && button_struct.timer>((1000/50)*5))
  2710  002C94  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  2711  002C96  A4D8               	btfss	status,2,c
  2712  002C98  D015               	goto	l23731
  2713                           
  2714                           ; BSR set to: 1
  2715  002C9A  0E64               	movlw	100
  2716  002C9C  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2717  002C9E  D012               	goto	l23731
  2718                           
  2719                           ; BSR set to: 1
  2720                           ;sm_Main_MC50.c: 196:                 {;sm_Main_MC50.c: 197:                     load_Ne
      +                          w_Menu(E_Menu);
  2721  002CA0  0E01               	movlw	1
  2722  002CA2  EC2B  F021         	call	_load_New_Menu
  2723  002CA6                     l23725:
  2724                           
  2725                           ;sm_Main_MC50.c: 198:                     sm_send_event(&main_stateMachine, ev_goto_Menu
      +                          Config);
  2726  002CA6  0EEE               	movlw	low _main_stateMachine
  2727  002CA8  6E12               	movwf	sm_send_event@psm^0,c
  2728  002CAA  0E01               	movlw	high _main_stateMachine
  2729  002CAC  6E13               	movwf	(sm_send_event@psm+1)^0,c
  2730  002CAE  0E00               	movlw	0
  2731  002CB0  6E15               	movwf	(sm_send_event@event+1)^0,c
  2732  002CB2  0E06               	movlw	6
  2733  002CB4  6E14               	movwf	sm_send_event@event^0,c
  2734  002CB6  ECA7  F043         	call	_sm_send_event	;wreg free
  2735                           
  2736                           ;sm_Main_MC50.c: 199:                     button_struct.processed=1;
  2737  002CBA  0E01               	movlw	1
  2738  002CBC  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  2739                           
  2740                           ;sm_Main_MC50.c: 200:                     temp=0;
  2741  002CBE  0E00               	movlw	0
  2742  002CC0  0100               	movlb	0	; () banked
  2743  002CC2  D037               	goto	L4
  2744  002CC4                     l23731:
  2745                           
  2746                           ; BSR set to: 1
  2747  002CC4  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  2748  002CC6  A4D8               	btfss	status,2,c
  2749  002CC8  D00A               	goto	l23739
  2750                           
  2751                           ; BSR set to: 1
  2752  002CCA  0E14               	movlw	20
  2753  002CCC  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2754  002CCE  D007               	goto	l23739
  2755                           
  2756                           ; BSR set to: 1
  2757                           ;sm_Main_MC50.c: 203:                 {;sm_Main_MC50.c: 205:                     SetSegm
      +                          entValueMain(dP,d0);
  2758  002CD0  0E00               	movlw	0
  2759  002CD2  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  2760  002CD4  0E10               	movlw	16
  2761  002CD6  EC9C  F04A         	call	_SetSegmentValueMain
  2762                           
  2763                           ; BSR set to: 0
  2764                           ;sm_Main_MC50.c: 206:                     temp=1;
  2765  002CDA  0E01               	movlw	1
  2766  002CDC  D02A               	goto	L4
  2767  002CDE                     l23739:
  2768                           
  2769                           ; BSR set to: 1
  2770  002CDE  0100               	movlb	0	; () banked
  2771  002CE0  0580               	decf	_temp& (0+255),w,b
  2772  002CE2  A4D8               	btfss	status,2,c
  2773  002CE4  D00E               	goto	l23753
  2774                           
  2775                           ; BSR set to: 0
  2776                           ;sm_Main_MC50.c: 209:                 {;sm_Main_MC50.c: 210:                     load_Ne
      +                          w_Menu(P_Menu);
  2777  002CE6  0E00               	movlw	0
  2778  002CE8  EC2B  F021         	call	_load_New_Menu
  2779                           
  2780                           ;sm_Main_MC50.c: 212:                     button_struct.processed=1;
  2781  002CEC  0E01               	movlw	1
  2782  002CEE  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  2783                           
  2784                           ;sm_Main_MC50.c: 213:                     temp=0;
  2785  002CF0  0E00               	movlw	0
  2786  002CF2  0100               	movlb	0	; () banked
  2787  002CF4  6F80               	movwf	_temp& (0+255),b
  2788                           
  2789                           ; BSR set to: 0
  2790                           ;sm_Main_MC50.c: 214:                     main_stateMachine.current_state = st_MenuConfi
      +                          guration;
  2791  002CF6  0E00               	movlw	0
  2792  002CF8  0101               	movlb	1	; () banked
  2793  002CFA  6FEF               	movwf	(_main_stateMachine+1)& (0+255),b
  2794  002CFC  0E01               	movlw	1
  2795  002CFE  6FEE               	movwf	_main_stateMachine& (0+255),b
  2796  002D00  0012               	return	
  2797  002D02                     l23753:
  2798                           
  2799                           ; BSR set to: 0
  2800  002D02  0E27               	movlw	39
  2801  002D04  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2802  002D06  A4D8               	btfss	status,2,c
  2803  002D08  D007               	goto	l23765
  2804                           
  2805                           ; BSR set to: 0
  2806  002D0A  0E78               	movlw	120
  2807  002D0C  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2808  002D0E  D004               	goto	l23765
  2809                           
  2810                           ; BSR set to: 0
  2811                           ;sm_Main_MC50.c: 218:             {;sm_Main_MC50.c: 220:                 load_New_Menu(D
      +                          el_Menu);
  2812  002D10  0E0D               	movlw	13
  2813  002D12  EC2B  F021         	call	_load_New_Menu
  2814  002D16  D7C7               	goto	l23725
  2815  002D18                     l23765:
  2816                           
  2817                           ; BSR set to: 0
  2818  002D18  0E27               	movlw	39
  2819  002D1A  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2820  002D1C  A4D8               	btfss	status,2,c
  2821  002D1E  D00B               	goto	l23773
  2822                           
  2823                           ; BSR set to: 0
  2824  002D20  0E14               	movlw	20
  2825  002D22  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2826  002D24  D008               	goto	l23773
  2827                           
  2828                           ; BSR set to: 0
  2829                           ;sm_Main_MC50.c: 226:             {;sm_Main_MC50.c: 228:                 SetSegmentValue
      +                          Main(d5,dU);
  2830  002D26  0E13               	movlw	19
  2831  002D28  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  2832  002D2A  0E05               	movlw	5
  2833  002D2C  EC9C  F04A         	call	_SetSegmentValueMain
  2834                           
  2835                           ; BSR set to: 0
  2836                           ;sm_Main_MC50.c: 229:                 temp=2;
  2837  002D30  0E02               	movlw	2
  2838  002D32                     L4:
  2839  002D32  6F80               	movwf	_temp& (0+255),b
  2840                           
  2841                           ;sm_Main_MC50.c: 230:             }
  2842  002D34  D008               	goto	l3102
  2843  002D36                     l23773:
  2844                           
  2845                           ; BSR set to: 0
  2846  002D36  0E02               	movlw	2
  2847  002D38  1980               	xorwf	_temp& (0+255),w,b
  2848  002D3A  A4D8               	btfss	status,2,c
  2849  002D3C  D004               	goto	l3102
  2850                           
  2851                           ; BSR set to: 0
  2852                           ;sm_Main_MC50.c: 232:             {;sm_Main_MC50.c: 233:                 load_New_Menu(S
      +                          _Menu);
  2853  002D3E  0E0C               	movlw	12
  2854  002D40  EC2B  F021         	call	_load_New_Menu
  2855  002D44  D6D5               	goto	l23599
  2856  002D46                     l3102:
  2857                           
  2858                           ;sm_Main_MC50.c: 243:             if( ts_system.timeSinalizationDigit<=0 && (button_stru
      +                          ct.current!=0 && button_struct.current!=0x27) )
  2859                           
  2860                           ; BSR set to: 0
  2861  002D46  0101               	movlb	1	; () banked
  2862  002D48  BFA8               	btfsc	(_ts_system+13)& (0+255),7,b	;volatile
  2863  002D4A  D005               	goto	u29220
  2864  002D4C  51A8               	movf	(_ts_system+13)& (0+255),w,b	;volatile
  2865  002D4E  E102               	bnz	u29221
  2866  002D50  05A7               	decf	(_ts_system+12)& (0+255),w,b	;volatile
  2867  002D52  B0D8               	btfsc	status,0,c
  2868  002D54                     u29221:
  2869  002D54  0012               	return	
  2870  002D56                     u29220:
  2871                           
  2872                           ; BSR set to: 1
  2873  002D56  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  2874  002D58  B4D8               	btfsc	status,2,c
  2875  002D5A  0012               	return	
  2876                           
  2877                           ; BSR set to: 1
  2878  002D5C  0E27               	movlw	39
  2879  002D5E  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2880  002D60  B4D8               	btfsc	status,2,c
  2881  002D62  0012               	return	
  2882                           
  2883                           ; BSR set to: 1
  2884                           ;sm_Main_MC50.c: 244:             {;sm_Main_MC50.c: 245:                 if(var_sys.Stat
      +                          eMotor==InClose )
  2885  002D64  0E03               	movlw	3
  2886  002D66  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
  2887  002D68  A4D8               	btfss	status,2,c
  2888  002D6A  D011               	goto	l23799
  2889                           
  2890                           ; BSR set to: 1
  2891                           ;sm_Main_MC50.c: 246:                 {;sm_Main_MC50.c: 248:                    SetSegme
      +                          ntValueIntermitentMain(dC,dL,( 500/50));
  2892  002D6C  0E12               	movlw	18
  2893  002D6E  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  2894  002D70  0E00               	movlw	0
  2895  002D72  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  2896  002D74  0E0A               	movlw	10
  2897  002D76  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  2898  002D78  0E0C               	movlw	12
  2899  002D7A  EC38  F04B         	call	_SetSegmentValueIntermitentMain
  2900  002D7E                     l23795:
  2901                           
  2902                           ;sm_Main_MC50.c: 249:                    ts_system.timeSinalizationDigit=( 200/50);
  2903  002D7E  0E00               	movlw	0
  2904  002D80  0101               	movlb	1	; () banked
  2905  002D82  6FA8               	movwf	(_ts_system+13)& (0+255),b	;volatile
  2906  002D84  0E04               	movlw	4
  2907  002D86  6FA7               	movwf	(_ts_system+12)& (0+255),b	;volatile
  2908                           
  2909                           ; BSR set to: 1
  2910                           ;sm_Main_MC50.c: 251:                     var_sys.showAP = NO;
  2911  002D88  0E00               	movlw	0
  2912  002D8A  6F4F               	movwf	(_var_sys+79)& (0+255),b	;volatile
  2913                           
  2914                           ;sm_Main_MC50.c: 252:                 }
  2915  002D8C  0012               	return	
  2916  002D8E                     l23799:
  2917                           
  2918                           ; BSR set to: 1
  2919  002D8E  0E02               	movlw	2
  2920  002D90  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
  2921  002D92  B4D8               	btfsc	status,2,c
  2922  002D94  D003               	goto	u29270
  2923                           
  2924                           ; BSR set to: 1
  2925  002D96  0500               	decf	_var_sys& (0+255),w,b	;volatile
  2926  002D98  A4D8               	btfss	status,2,c
  2927  002D9A  D00A               	goto	l23809
  2928  002D9C                     u29270:
  2929                           
  2930                           ; BSR set to: 1
  2931                           ;sm_Main_MC50.c: 254:                 {;sm_Main_MC50.c: 256:                     SetSegm
      +                          entValueIntermitentMain(d0,dP,( 500/50));
  2932  002D9C  0E10               	movlw	16
  2933  002D9E  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  2934  002DA0  0E00               	movlw	0
  2935  002DA2  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  2936  002DA4  0E0A               	movlw	10
  2937  002DA6  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  2938  002DA8  0E00               	movlw	0
  2939  002DAA  EC38  F04B         	call	_SetSegmentValueIntermitentMain
  2940  002DAE  D7E7               	goto	l23795
  2941  002DB0                     l23809:
  2942                           
  2943                           ; BSR set to: 1
  2944  002DB0  5100               	movf	_var_sys& (0+255),w,b	;volatile
  2945  002DB2  A4D8               	btfss	status,2,c
  2946  002DB4  D00F               	goto	l23815
  2947                           
  2948                           ; BSR set to: 1
  2949  002DB6  05E3               	decf	_controlGate_stateMachine& (0+255),w,b
  2950  002DB8  11E4               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
  2951  002DBA  A4D8               	btfss	status,2,c
  2952  002DBC  D00B               	goto	l23815
  2953                           
  2954                           ; BSR set to: 1
  2955                           ;sm_Main_MC50.c: 262:                 {;sm_Main_MC50.c: 263:                     sm_send
      +                          _event(&main_stateMachine, ev_goto_StandBy);
  2956  002DBE  0EEE               	movlw	low _main_stateMachine
  2957  002DC0  6E12               	movwf	sm_send_event@psm^0,c
  2958  002DC2  0E01               	movlw	high _main_stateMachine
  2959  002DC4  6E13               	movwf	(sm_send_event@psm+1)^0,c
  2960  002DC6  0E00               	movlw	0
  2961  002DC8  6E15               	movwf	(sm_send_event@event+1)^0,c
  2962  002DCA  0E07               	movlw	7
  2963  002DCC  6E14               	movwf	sm_send_event@event^0,c
  2964  002DCE  ECA7  F043         	call	_sm_send_event	;wreg free
  2965                           
  2966                           ;sm_Main_MC50.c: 264:                 }
  2967  002DD2  0012               	return	
  2968  002DD4                     l23815:
  2969                           
  2970                           ; BSR set to: 1
  2971  002DD4  5100               	movf	_var_sys& (0+255),w,b	;volatile
  2972  002DD6  A4D8               	btfss	status,2,c
  2973  002DD8  D074               	goto	l23865
  2974                           
  2975                           ; BSR set to: 1
  2976  002DDA  0E04               	movlw	4
  2977  002DDC  19E3               	xorwf	_controlGate_stateMachine& (0+255),w,b
  2978  002DDE  11E4               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
  2979  002DE0  A4D8               	btfss	status,2,c
  2980  002DE2  D06F               	goto	l23865
  2981                           
  2982                           ; BSR set to: 1
  2983                           ;sm_Main_MC50.c: 266:                 {;sm_Main_MC50.c: 268:                     if
  2984  002DE4  0100               	movlb	0	; () banked
  2985  002DE6  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
  2986  002DE8  B4D8               	btfsc	status,2,c
  2987  002DEA  D00B               	goto	u29350
  2988                           
  2989                           ; BSR set to: 0
  2990  002DEC  0101               	movlb	1	; () banked
  2991  002DEE  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
  2992  002DF0  B4D8               	btfsc	status,2,c
  2993  002DF2  D007               	goto	u29350
  2994                           
  2995                           ; BSR set to: 1
  2996  002DF4  050B               	decf	(_var_sys+11)& (0+255),w,b	;volatile
  2997  002DF6  B4D8               	btfsc	status,2,c
  2998  002DF8  D013               	goto	u29390
  2999                           
  3000                           ; BSR set to: 1
  3001  002DFA  0E03               	movlw	3
  3002  002DFC  190B               	xorwf	(_var_sys+11)& (0+255),w,b	;volatile
  3003  002DFE  B4D8               	btfsc	status,2,c
  3004  002E00  D00F               	goto	u29390
  3005  002E02                     u29350:
  3006  002E02  0100               	movlb	0	; () banked
  3007  002E04  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
  3008  002E06  A4D8               	btfss	status,2,c
  3009  002E08  D026               	goto	l23843
  3010                           
  3011                           ; BSR set to: 0
  3012  002E0A  0101               	movlb	1	; () banked
  3013  002E0C  0550               	decf	(_var_sys+80)& (0+255),w,b	;volatile
  3014  002E0E  A4D8               	btfss	status,2,c
  3015  002E10  D022               	goto	l23843
  3016                           
  3017                           ; BSR set to: 1
  3018  002E12  0E02               	movlw	2
  3019  002E14  190B               	xorwf	(_var_sys+11)& (0+255),w,b	;volatile
  3020  002E16  B4D8               	btfsc	status,2,c
  3021  002E18  D01E               	goto	l23843
  3022                           
  3023                           ; BSR set to: 1
  3024  002E1A  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
  3025  002E1C  B4D8               	btfsc	status,2,c
  3026  002E1E  D01B               	goto	l23843
  3027  002E20                     u29390:
  3028                           
  3029                           ; BSR set to: 1
  3030                           ;sm_Main_MC50.c: 273:                     {;sm_Main_MC50.c: 274:                        
      +                           ts_system.timeSinalizationDigit=( 500/50);
  3031  002E20  0E00               	movlw	0
  3032  002E22  6FA8               	movwf	(_ts_system+13)& (0+255),b	;volatile
  3033  002E24  0E0A               	movlw	10
  3034  002E26  6FA7               	movwf	(_ts_system+12)& (0+255),b	;volatile
  3035                           
  3036                           ; BSR set to: 1
  3037                           ;sm_Main_MC50.c: 279:                         if ( var_sys.showAP == YES )
  3038  002E28  054F               	decf	(_var_sys+79)& (0+255),w,b	;volatile
  3039  002E2A  A4D8               	btfss	status,2,c
  3040  002E2C  D00A               	goto	l23841
  3041                           
  3042                           ; BSR set to: 1
  3043                           ;sm_Main_MC50.c: 280:                         {;sm_Main_MC50.c: 281:                    
      +                                   SetSegmentValueIntermitentMain(dA,dP,( 500/50));
  3044  002E2E  0E10               	movlw	16
  3045  002E30  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  3046  002E32  0E00               	movlw	0
  3047  002E34  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  3048  002E36  0E0A               	movlw	10
  3049  002E38  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  3050  002E3A  0E0A               	movlw	10
  3051  002E3C  EC38  F04B         	call	_SetSegmentValueIntermitentMain
  3052                           
  3053                           ;sm_Main_MC50.c: 282:                         }
  3054  002E40  0012               	return	
  3055  002E42                     l23841:
  3056                           
  3057                           ; BSR set to: 1
  3058                           ;sm_Main_MC50.c: 284:                         {;sm_Main_MC50.c: 285:                    
      +                                   SetSegmentValueIntermitentMain(dA,dF,( 500/50));
  3059  002E42  0E0F               	movlw	15
  3060  002E44  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  3061  002E46  0E00               	movlw	0
  3062  002E48  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  3063  002E4A  0E0A               	movlw	10
  3064  002E4C  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  3065  002E4E  0E0A               	movlw	10
  3066  002E50  EC38  F04B         	call	_SetSegmentValueIntermitentMain
  3067  002E54  0012               	return	
  3068  002E56                     l23843:
  3069  002E56  0100               	movlb	0	; () banked
  3070  002E58  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
  3071  002E5A  B4D8               	btfsc	status,2,c
  3072  002E5C  D008               	goto	u29430
  3073                           
  3074                           ; BSR set to: 0
  3075  002E5E  0101               	movlb	1	; () banked
  3076  002E60  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
  3077  002E62  B4D8               	btfsc	status,2,c
  3078  002E64  D004               	goto	u29430
  3079                           
  3080                           ; BSR set to: 1
  3081  002E66  0E02               	movlw	2
  3082  002E68  190B               	xorwf	(_var_sys+11)& (0+255),w,b	;volatile
  3083  002E6A  B4D8               	btfsc	status,2,c
  3084  002E6C  D00C               	goto	u29460
  3085  002E6E                     u29430:
  3086  002E6E  0100               	movlb	0	; () banked
  3087  002E70  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
  3088  002E72  A4D8               	btfss	status,2,c
  3089  002E74  D016               	goto	l23859
  3090                           
  3091                           ; BSR set to: 0
  3092  002E76  0101               	movlb	1	; () banked
  3093  002E78  0550               	decf	(_var_sys+80)& (0+255),w,b	;volatile
  3094  002E7A  A4D8               	btfss	status,2,c
  3095  002E7C  D012               	goto	l23859
  3096                           
  3097                           ; BSR set to: 1
  3098  002E7E  0E02               	movlw	2
  3099  002E80  190B               	xorwf	(_var_sys+11)& (0+255),w,b	;volatile
  3100  002E82  A4D8               	btfss	status,2,c
  3101  002E84  D00E               	goto	l23859
  3102  002E86                     u29460:
  3103                           
  3104                           ; BSR set to: 1
  3105                           ;sm_Main_MC50.c: 294:                     {;sm_Main_MC50.c: 295:                        
      +                           ts_system.timeSinalizationDigit=( 500/50);
  3106  002E86  0E00               	movlw	0
  3107  002E88  6FA8               	movwf	(_ts_system+13)& (0+255),b	;volatile
  3108  002E8A  0E0A               	movlw	10
  3109  002E8C  6FA7               	movwf	(_ts_system+12)& (0+255),b	;volatile
  3110                           
  3111                           ; BSR set to: 1
  3112                           ;sm_Main_MC50.c: 297:                         SetSegmentValueIntermitentMain(dA,dP,( 500
      +                          /50));
  3113  002E8E  0E10               	movlw	16
  3114  002E90  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  3115  002E92  0E00               	movlw	0
  3116  002E94  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  3117  002E96  0E0A               	movlw	10
  3118  002E98  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  3119  002E9A  0E0A               	movlw	10
  3120  002E9C  EC38  F04B         	call	_SetSegmentValueIntermitentMain
  3121                           
  3122                           ;sm_Main_MC50.c: 298:                     }
  3123  002EA0  0012               	return	
  3124  002EA2                     l23859:
  3125  002EA2  0101               	movlb	1	; () banked
  3126  002EA4  0504               	decf	(_var_sys+4)& (0+255),w,b	;volatile
  3127  002EA6  A4D8               	btfss	status,2,c
  3128  002EA8  D006               	goto	l23863
  3129                           
  3130                           ; BSR set to: 1
  3131                           ;sm_Main_MC50.c: 301:                     {;sm_Main_MC50.c: 303:                        
      +                           SetSegmentValueMain(dF,d0);
  3132  002EAA  0E00               	movlw	0
  3133  002EAC  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3134  002EAE  0E0F               	movlw	15
  3135  002EB0  EC9C  F04A         	call	_SetSegmentValueMain
  3136                           
  3137                           ;sm_Main_MC50.c: 304:                     }
  3138  002EB4  0012               	return	
  3139  002EB6                     l23863:
  3140                           
  3141                           ; BSR set to: 1
  3142                           ;sm_Main_MC50.c: 306:                     {;sm_Main_MC50.c: 307:                       S
      +                          etSegmentValueMain(dMinus,dMinus);
  3143  002EB6  0E18               	movlw	24
  3144  002EB8  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3145  002EBA  0E18               	movlw	24
  3146  002EBC  EC9C  F04A         	call	_SetSegmentValueMain
  3147  002EC0  0012               	return	
  3148  002EC2                     l23865:
  3149                           
  3150                           ; BSR set to: 1
  3151                           ;sm_Main_MC50.c: 311:                 {;sm_Main_MC50.c: 313:                     SetSegm
      +                          entValueMain(dMinus,dMinus);
  3152  002EC2  0E18               	movlw	24
  3153  002EC4  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3154  002EC6  0E18               	movlw	24
  3155  002EC8  EC9C  F04A         	call	_SetSegmentValueMain
  3156  002ECC  0012               	return	
  3157  002ECE                     l23869:
  3158  002ECE  C0ED  FFD9         	movff	sm_execute_main@psm,fsr2l
  3159  002ED2  C0EE  FFDA         	movff	sm_execute_main@psm+1,fsr2h
  3160  002ED6  50DF               	movf	indf2,w,c
  3161  002ED8  0100               	movlb	0	; () banked
  3162  002EDA  6FEF               	movwf	??_sm_execute_main& (0+255),b
  3163  002EDC  6BF0               	clrf	(??_sm_execute_main+1)& (0+255),b
  3164                           
  3165                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3166                           ; Switch size 1, requested type "simple"
  3167                           ; Number of cases is 1, Range of values is 0 to 0
  3168                           ; switch strategies available:
  3169                           ; Name         Instructions Cycles
  3170                           ; simple_byte            4     3 (average)
  3171                           ;	Chosen strategy is simple_byte
  3172  002EDE  51F0               	movf	(??_sm_execute_main+1)& (0+255),w,b
  3173  002EE0  0A00               	xorlw	0	; case 0
  3174  002EE2  A4D8               	btfss	status,2,c
  3175  002EE4  0012               	return	
  3176                           
  3177                           ; BSR set to: 0
  3178                           ; Switch size 1, requested type "simple"
  3179                           ; Number of cases is 3, Range of values is 0 to 2
  3180                           ; switch strategies available:
  3181                           ; Name         Instructions Cycles
  3182                           ; simple_byte           10     6 (average)
  3183                           ;	Chosen strategy is simple_byte
  3184  002EE6  51EF               	movf	??_sm_execute_main& (0+255),w,b
  3185  002EE8  0A00               	xorlw	0	; case 0
  3186  002EEA  B4D8               	btfsc	status,2,c
  3187  002EEC  D5F8               	goto	l23593
  3188  002EEE  0A01               	xorlw	1	; case 1
  3189  002EF0  B4D8               	btfsc	status,2,c
  3190  002EF2  D69A               	goto	l23691
  3191  002EF4  0A03               	xorlw	3	; case 2
  3192  002EF6  A4D8               	btfss	status,2,c
  3193  002EF8  0012               	return	
  3194  002EFA  D69D               	goto	l23693
  3195  002EFC                     __end_of_sm_execute_main:
  3196                           	callstack 0
  3197                           
  3198 ;; *************** function _sm_execute_menuConfiguration *****************
  3199 ;; Defined at:
  3200 ;;		line 33 in file "sm_MenuConfiguration_MC50.c"
  3201 ;; Parameters:    Size  Location     Type
  3202 ;;  psm             2   17[BANK0 ] PTR struct .
  3203 ;;		 -> menuConfiguration_stateMachine(11), 
  3204 ;; Auto vars:     Size  Location     Type
  3205 ;;		None
  3206 ;; Return value:  Size  Location     Type
  3207 ;;                  1    wreg      void 
  3208 ;; Registers used:
  3209 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3210 ;; Tracked objects:
  3211 ;;		On entry : 3F/0
  3212 ;;		On exit  : 0/0
  3213 ;;		Unchanged: 0/0
  3214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3215 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3217 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3218 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3219 ;;Total ram usage:        4 bytes
  3220 ;; Hardware stack levels used: 1
  3221 ;; Hardware stack levels required when called: 15
  3222 ;; This function calls:
  3223 ;;		_ClearFlag_rfCMD
  3224 ;;		_ResetDefaultMemory
  3225 ;;		_SaveNVM_VarSystem
  3226 ;;		_SetSegmentValueIntermitentMain
  3227 ;;		_SetSegmentValueMain
  3228 ;;		___lbdiv
  3229 ;;		___lldiv
  3230 ;;		___lmul
  3231 ;;		___lwdiv
  3232 ;;		_controlLearnDigit
  3233 ;;		_controlSaveRemote
  3234 ;;		_controlSelectRemote
  3235 ;;		_load_New_Menu
  3236 ;;		_setValueToEdit
  3237 ;;		_sm_send_event
  3238 ;; This function is called by:
  3239 ;;		_sm_execute_main
  3240 ;; This function uses a non-reentrant model
  3241 ;;
  3242                           
  3243                           	psect	text2
  3244  000F22                     __ptext2:
  3245                           	callstack 0
  3246  000F22                     _sm_execute_menuConfiguration:
  3247                           	callstack 14
  3248                           
  3249                           ; BSR set to: 0
  3250                           ;sm_MenuConfiguration_MC50.c: 36:     switch((sm_state_Menu_t) psm->current_state)
  3251                           
  3252                           ;incstack = 0
  3253  000F22  D0A2               	goto	l22803
  3254  000F24                     l22745:
  3255                           
  3256                           ; BSR set to: 0
  3257                           ;sm_MenuConfiguration_MC50.c: 39:         {;sm_MenuConfiguration_MC50.c: 40:            
      +                           if(psm->last_event==ev_ParameterIsSelected)
  3258  000F24  EE20 F004          	lfsr	2,4
  3259  000F28  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3260  000F2A  26D9               	addwf	fsr2l,f,c
  3261  000F2C  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3262  000F2E  22DA               	addwfc	fsr2h,f,c
  3263  000F30  04DE               	decf	postinc2,w,c
  3264  000F32  10DE               	iorwf	postinc2,w,c
  3265  000F34  A4D8               	btfss	status,2,c
  3266  000F36  D006               	goto	l22749
  3267                           
  3268                           ; BSR set to: 0
  3269                           ;sm_MenuConfiguration_MC50.c: 41:             {;sm_MenuConfiguration_MC50.c: 42:        
      +                                   psm->current_state = st_EditParameter;
  3270  000F38  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3271  000F3C  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3272  000F40  0E01               	movlw	1
  3273  000F42  D04C               	goto	L9
  3274  000F44                     l22749:
  3275                           
  3276                           ; BSR set to: 0
  3277  000F44  EE20 F004          	lfsr	2,4
  3278  000F48  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3279  000F4A  26D9               	addwf	fsr2l,f,c
  3280  000F4C  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3281  000F4E  22DA               	addwfc	fsr2h,f,c
  3282  000F50  0E05               	movlw	5
  3283  000F52  18DE               	xorwf	postinc2,w,c
  3284  000F54  10DE               	iorwf	postinc2,w,c
  3285  000F56  A4D8               	btfss	status,2,c
  3286  000F58  D006               	goto	l22753
  3287                           
  3288                           ; BSR set to: 0
  3289                           ;sm_MenuConfiguration_MC50.c: 45:             {;sm_MenuConfiguration_MC50.c: 46:        
      +                                   psm->current_state = st_Counter;
  3290  000F5A  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3291  000F5E  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3292  000F62  0E03               	movlw	3
  3293  000F64  D03B               	goto	L9
  3294  000F66                     l22753:
  3295                           
  3296                           ; BSR set to: 0
  3297  000F66  EE20 F004          	lfsr	2,4
  3298  000F6A  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3299  000F6C  26D9               	addwf	fsr2l,f,c
  3300  000F6E  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3301  000F70  22DA               	addwfc	fsr2h,f,c
  3302  000F72  0E08               	movlw	8
  3303  000F74  18DE               	xorwf	postinc2,w,c
  3304  000F76  10DE               	iorwf	postinc2,w,c
  3305  000F78  A4D8               	btfss	status,2,c
  3306  000F7A  D006               	goto	l22757
  3307                           
  3308                           ; BSR set to: 0
  3309                           ;sm_MenuConfiguration_MC50.c: 49:             {;sm_MenuConfiguration_MC50.c: 50:        
      +                                   psm->current_state = st_SelectRemote;
  3310  000F7C  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3311  000F80  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3312  000F84  0E04               	movlw	4
  3313  000F86  D02A               	goto	L9
  3314  000F88                     l22757:
  3315                           
  3316                           ; BSR set to: 0
  3317  000F88  EE20 F004          	lfsr	2,4
  3318  000F8C  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3319  000F8E  26D9               	addwf	fsr2l,f,c
  3320  000F90  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3321  000F92  22DA               	addwfc	fsr2h,f,c
  3322  000F94  0E14               	movlw	20
  3323  000F96  18DE               	xorwf	postinc2,w,c
  3324  000F98  10DE               	iorwf	postinc2,w,c
  3325  000F9A  A4D8               	btfss	status,2,c
  3326  000F9C  D087               	goto	l22805
  3327                           
  3328                           ; BSR set to: 0
  3329                           ;sm_MenuConfiguration_MC50.c: 53:             {;sm_MenuConfiguration_MC50.c: 55:        
      +                                   psm->current_state = st_LearningMode;
  3330  000F9E  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3331  000FA2  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3332  000FA6  0E06               	movlw	6
  3333  000FA8  D019               	goto	L9
  3334  000FAA                     l22761:
  3335                           
  3336                           ; BSR set to: 0
  3337                           ;sm_MenuConfiguration_MC50.c: 65:         {;sm_MenuConfiguration_MC50.c: 66:            
      +                           if(psm->last_event==ev_ParameterIsEdited)
  3338  000FAA  EE20 F004          	lfsr	2,4
  3339  000FAE  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3340  000FB0  26D9               	addwf	fsr2l,f,c
  3341  000FB2  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3342  000FB4  22DA               	addwfc	fsr2h,f,c
  3343  000FB6  0E02               	movlw	2
  3344  000FB8  18DE               	xorwf	postinc2,w,c
  3345  000FBA  10DE               	iorwf	postinc2,w,c
  3346  000FBC  A4D8               	btfss	status,2,c
  3347  000FBE  D006               	goto	l22765
  3348                           
  3349                           ; BSR set to: 0
  3350                           ;sm_MenuConfiguration_MC50.c: 67:             {;sm_MenuConfiguration_MC50.c: 68:        
      +                                   psm->current_state = st_SaveParameter;
  3351  000FC0  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3352  000FC4  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3353  000FC8  0E02               	movlw	2
  3354  000FCA  D008               	goto	L9
  3355  000FCC                     l22765:
  3356                           
  3357                           ; BSR set to: 0
  3358  000FCC  EE20 F004          	lfsr	2,4
  3359  000FD0  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3360  000FD2  26D9               	addwf	fsr2l,f,c
  3361  000FD4  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3362  000FD6  22DA               	addwfc	fsr2h,f,c
  3363  000FD8  0E03               	movlw	3
  3364  000FDA  D03B               	goto	L123
  3365  000FDC                     L9:
  3366  000FDC  6EDE               	movwf	postinc2,c
  3367  000FDE  0E00               	movlw	0
  3368  000FE0  6EDD               	movwf	postdec2,c
  3369  000FE2  D064               	goto	l22805
  3370  000FE4                     l22773:
  3371                           
  3372                           ; BSR set to: 0
  3373                           ;sm_MenuConfiguration_MC50.c: 85:         {;sm_MenuConfiguration_MC50.c: 86:            
      +                           if(psm->last_event==ev_ParameterIsSaved)
  3374  000FE4  EE20 F004          	lfsr	2,4
  3375  000FE8  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3376  000FEA  26D9               	addwf	fsr2l,f,c
  3377  000FEC  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3378  000FEE  22DA               	addwfc	fsr2h,f,c
  3379  000FF0  0E04               	movlw	4
  3380  000FF2  18DE               	xorwf	postinc2,w,c
  3381  000FF4  10DE               	iorwf	postinc2,w,c
  3382  000FF6  A4D8               	btfss	status,2,c
  3383  000FF8  D7E9               	goto	l22765
  3384  000FFA  D02F               	goto	u27420
  3385  000FFC                     l22781:
  3386                           
  3387                           ; BSR set to: 0
  3388                           ;sm_MenuConfiguration_MC50.c: 97:         {;sm_MenuConfiguration_MC50.c: 98:            
      +                           if(psm->last_event==ev_addRemotes)
  3389  000FFC  EE20 F004          	lfsr	2,4
  3390  001000  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3391  001002  26D9               	addwf	fsr2l,f,c
  3392  001004  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3393  001006  22DA               	addwfc	fsr2h,f,c
  3394  001008  0E08               	movlw	8
  3395  00100A  18DE               	xorwf	postinc2,w,c
  3396  00100C  10DE               	iorwf	postinc2,w,c
  3397  00100E  A4D8               	btfss	status,2,c
  3398  001010  D7DD               	goto	l22765
  3399                           
  3400                           ; BSR set to: 0
  3401                           ;sm_MenuConfiguration_MC50.c: 99:             {;sm_MenuConfiguration_MC50.c: 100:       
      +                                    psm->current_state = st_SaveRemotes;
  3402  001012  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3403  001016  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3404  00101A  0E05               	movlw	5
  3405  00101C  D7DF               	goto	L9
  3406  00101E                     l22789:
  3407                           
  3408                           ; BSR set to: 0
  3409                           ;sm_MenuConfiguration_MC50.c: 109:         {;sm_MenuConfiguration_MC50.c: 110:          
      +                             if(psm->last_event==ev_NextRemote)
  3410  00101E  EE20 F004          	lfsr	2,4
  3411  001022  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3412  001024  26D9               	addwf	fsr2l,f,c
  3413  001026  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3414  001028  22DA               	addwfc	fsr2h,f,c
  3415  00102A  0E09               	movlw	9
  3416  00102C  18DE               	xorwf	postinc2,w,c
  3417  00102E  10DE               	iorwf	postinc2,w,c
  3418  001030  A4D8               	btfss	status,2,c
  3419  001032  D008               	goto	l22797
  3420                           
  3421                           ; BSR set to: 0
  3422                           ;sm_MenuConfiguration_MC50.c: 111:             {;sm_MenuConfiguration_MC50.c: 112:      
      +                                     psm->current_state = st_SelectRemote;
  3423  001034  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3424  001038  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3425  00103C  0E04               	movlw	4
  3426  00103E  6EDE               	movwf	postinc2,c
  3427  001040  0E00               	movlw	0
  3428  001042  6EDD               	movwf	postdec2,c
  3429  001044                     l22797:
  3430                           
  3431                           ; BSR set to: 0
  3432                           ;sm_MenuConfiguration_MC50.c: 121:         {;sm_MenuConfiguration_MC50.c: 122:          
      +                             if(psm->last_event==ev_ParameterIsSaved)
  3433  001044  EE20 F004          	lfsr	2,4
  3434  001048  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3435  00104A  26D9               	addwf	fsr2l,f,c
  3436  00104C  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3437  00104E  22DA               	addwfc	fsr2h,f,c
  3438  001050  0E04               	movlw	4
  3439  001052                     L123:
  3440  001052  18DE               	xorwf	postinc2,w,c
  3441  001054  10DE               	iorwf	postinc2,w,c
  3442  001056  A4D8               	btfss	status,2,c
  3443  001058  D029               	goto	l22805
  3444  00105A                     u27420:
  3445                           
  3446                           ; BSR set to: 0
  3447                           ;sm_MenuConfiguration_MC50.c: 123:             {;sm_MenuConfiguration_MC50.c: 124:      
      +                                     psm->current_state = st_MainMenu;
  3448  00105A  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3449  00105E  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3450  001062  0E00               	movlw	0
  3451  001064  D7BB               	goto	L9
  3452  001066                     l3233:
  3453                           
  3454                           ; BSR set to: 0
  3455  001066  D7FF               	goto	l3233
  3456  001068                     l22803:
  3457                           
  3458                           ; BSR set to: 0
  3459  001068  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3460  00106C  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3461  001070  50DF               	movf	indf2,w,c
  3462  001072  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  3463  001074  6BEC               	clrf	(??_sm_execute_menuConfiguration+1)& (0+255),b
  3464                           
  3465                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3466                           ; Switch size 1, requested type "simple"
  3467                           ; Number of cases is 1, Range of values is 0 to 0
  3468                           ; switch strategies available:
  3469                           ; Name         Instructions Cycles
  3470                           ; simple_byte            4     3 (average)
  3471                           ;	Chosen strategy is simple_byte
  3472  001076  51EC               	movf	(??_sm_execute_menuConfiguration+1)& (0+255),w,b
  3473  001078  0A00               	xorlw	0	; case 0
  3474  00107A  A4D8               	btfss	status,2,c
  3475  00107C  D7F4               	goto	l3233
  3476                           
  3477                           ; BSR set to: 0
  3478                           ; Switch size 1, requested type "simple"
  3479                           ; Number of cases is 7, Range of values is 0 to 6
  3480                           ; switch strategies available:
  3481                           ; Name         Instructions Cycles
  3482                           ; simple_byte           22    12 (average)
  3483                           ;	Chosen strategy is simple_byte
  3484  00107E  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  3485  001080  0A00               	xorlw	0	; case 0
  3486  001082  B4D8               	btfsc	status,2,c
  3487  001084  D74F               	goto	l22745
  3488  001086  0A01               	xorlw	1	; case 1
  3489  001088  B4D8               	btfsc	status,2,c
  3490  00108A  D78F               	goto	l22761
  3491  00108C  0A03               	xorlw	3	; case 2
  3492  00108E  B4D8               	btfsc	status,2,c
  3493  001090  D7D9               	goto	l22797
  3494  001092  0A01               	xorlw	1	; case 3
  3495  001094  B4D8               	btfsc	status,2,c
  3496  001096  D7A6               	goto	l22773
  3497  001098  0A07               	xorlw	7	; case 4
  3498  00109A  B4D8               	btfsc	status,2,c
  3499  00109C  D7AF               	goto	l22781
  3500  00109E  0A01               	xorlw	1	; case 5
  3501  0010A0  B4D8               	btfsc	status,2,c
  3502  0010A2  D7BD               	goto	l22789
  3503  0010A4  0A03               	xorlw	3	; case 6
  3504  0010A6  B4D8               	btfsc	status,2,c
  3505  0010A8  D7CD               	goto	l22797
  3506  0010AA  D7DD               	goto	l3233
  3507  0010AC                     l22805:
  3508                           
  3509                           ; BSR set to: 0
  3510                           ;sm_MenuConfiguration_MC50.c: 137:     sm_send_event(&menuConfiguration_stateMachine, ev
      +                          _NULL);
  3511  0010AC  0EBF               	movlw	low _menuConfiguration_stateMachine
  3512  0010AE  6E12               	movwf	sm_send_event@psm^0,c
  3513  0010B0  0E02               	movlw	high _menuConfiguration_stateMachine
  3514  0010B2  6E13               	movwf	(sm_send_event@psm+1)^0,c
  3515  0010B4  0E00               	movlw	0
  3516  0010B6  6E15               	movwf	(sm_send_event@event+1)^0,c
  3517  0010B8  0E00               	movlw	0
  3518  0010BA  6E14               	movwf	sm_send_event@event^0,c
  3519  0010BC  ECA7  F043         	call	_sm_send_event	;wreg free
  3520                           
  3521                           ;sm_MenuConfiguration_MC50.c: 142:     switch((sm_state_Menu_t) psm->current_state)
  3522  0010C0  D3BF               	goto	l23117
  3523  0010C2                     l22807:
  3524                           
  3525                           ; BSR set to: 0
  3526                           ;sm_MenuConfiguration_MC50.c: 145:         {;sm_MenuConfiguration_MC50.c: 146:          
      +                             if(var_sys.ProgrammingDistanceIs==TypeProgrammingModeFull)
  3527  0010C2  0E06               	movlw	6
  3528  0010C4  0101               	movlb	1	; () banked
  3529  0010C6  193B               	xorwf	(_var_sys+59)& (0+255),w,b	;volatile
  3530  0010C8  A4D8               	btfss	status,2,c
  3531  0010CA  D02F               	goto	l22817
  3532                           
  3533                           ; BSR set to: 1
  3534                           ;sm_MenuConfiguration_MC50.c: 147:             {;sm_MenuConfiguration_MC50.c: 148:      
      +                                     ts_system.timeoutMenu=10*(1000/50);
  3535  0010CC  0E00               	movlw	0
  3536  0010CE  6FAA               	movwf	(_ts_system+15)& (0+255),b	;volatile
  3537  0010D0  0EC8               	movlw	200
  3538  0010D2  6FA9               	movwf	(_ts_system+14)& (0+255),b	;volatile
  3539                           
  3540                           ;sm_MenuConfiguration_MC50.c: 149:                 var_sys.DistanceProgrammingActive=YES
      +                          ;
  3541  0010D4  0E01               	movlw	1
  3542  0010D6  6F40               	movwf	(_var_sys+64)& (0+255),b	;volatile
  3543                           
  3544                           ;sm_MenuConfiguration_MC50.c: 150:                 menu_st.parameterSelected=0;
  3545  0010D8  0E00               	movlw	0
  3546  0010DA  6F68               	movwf	(_menu_st+23)& (0+255),b
  3547                           
  3548                           ; BSR set to: 1
  3549                           ;sm_MenuConfiguration_MC50.c: 151:                 if (setValueToEdit(menu_st.actualMenu
      +                          ,menu_st.parameterSelected)) {
  3550  0010DC  C168  F03A         	movff	_menu_st+23,setValueToEdit@ParameterSelected
  3551  0010E0  5166               	movf	(_menu_st+21)& (0+255),w,b
  3552  0010E2  EC74  F012         	call	_setValueToEdit
  3553  0010E6  0900               	iorlw	0
  3554  0010E8  B4D8               	btfsc	status,2,c
  3555  0010EA  0012               	return	
  3556                           
  3557                           ; BSR set to: 0
  3558                           ;sm_MenuConfiguration_MC50.c: 153:                      sm_send_event(&menuConfiguration
      +                          _stateMachine, ev_addRemotes);
  3559  0010EC  0EBF               	movlw	low _menuConfiguration_stateMachine
  3560  0010EE  6E12               	movwf	sm_send_event@psm^0,c
  3561  0010F0  0E02               	movlw	high _menuConfiguration_stateMachine
  3562  0010F2  6E13               	movwf	(sm_send_event@psm+1)^0,c
  3563  0010F4  0E00               	movlw	0
  3564  0010F6  6E15               	movwf	(sm_send_event@event+1)^0,c
  3565  0010F8  0E08               	movlw	8
  3566  0010FA  6E14               	movwf	sm_send_event@event^0,c
  3567  0010FC  ECA7  F043         	call	_sm_send_event	;wreg free
  3568                           
  3569                           ;sm_MenuConfiguration_MC50.c: 154:                      SetSegmentValueIntermitentMain(e
      +                          dit_Param.tempValue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10),(1000/50));
  3570  001100  0E0A               	movlw	10
  3571  001102  6E10               	movwf	___lbdiv@divisor^0,c
  3572  001104  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3573  001106  EC92  F047         	call	___lbdiv
  3574  00110A  0DF6               	mullw	246
  3575  00110C  50F3               	movf	243,w,c
  3576  00110E  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  3577  001110  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  3578  001112  0E00               	movlw	0
  3579  001114  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  3580  001116  0E14               	movlw	20
  3581  001118  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  3582  00111A  0E0A               	movlw	10
  3583  00111C  6E10               	movwf	___lbdiv@divisor^0,c
  3584  00111E  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3585  001120  EC92  F047         	call	___lbdiv
  3586  001124  EC38  F04B         	call	_SetSegmentValueIntermitentMain
  3587  001128  0012               	return	
  3588  00112A                     l22817:
  3589                           
  3590                           ; BSR set to: 1
  3591  00112A  0E05               	movlw	5
  3592  00112C  193B               	xorwf	(_var_sys+59)& (0+255),w,b	;volatile
  3593  00112E  A4D8               	btfss	status,2,c
  3594  001130  D02F               	goto	l22827
  3595                           
  3596                           ; BSR set to: 1
  3597                           ;sm_MenuConfiguration_MC50.c: 158:             {;sm_MenuConfiguration_MC50.c: 159:      
      +                                     ts_system.timeoutMenu=10*(1000/50);
  3598  001132  0E00               	movlw	0
  3599  001134  6FAA               	movwf	(_ts_system+15)& (0+255),b	;volatile
  3600  001136  0EC8               	movlw	200
  3601  001138  6FA9               	movwf	(_ts_system+14)& (0+255),b	;volatile
  3602                           
  3603                           ;sm_MenuConfiguration_MC50.c: 160:                 var_sys.DistanceProgrammingActive=YES
      +                          ;
  3604  00113A  0E01               	movlw	1
  3605  00113C  6F40               	movwf	(_var_sys+64)& (0+255),b	;volatile
  3606                           
  3607                           ;sm_MenuConfiguration_MC50.c: 161:                 menu_st.parameterSelected=1;
  3608  00113E  0E01               	movlw	1
  3609  001140  6F68               	movwf	(_menu_st+23)& (0+255),b
  3610                           
  3611                           ; BSR set to: 1
  3612                           ;sm_MenuConfiguration_MC50.c: 162:                 if (setValueToEdit(menu_st.actualMenu
      +                          ,menu_st.parameterSelected)) {
  3613  001142  C168  F03A         	movff	_menu_st+23,setValueToEdit@ParameterSelected
  3614  001146  5166               	movf	(_menu_st+21)& (0+255),w,b
  3615  001148  EC74  F012         	call	_setValueToEdit
  3616  00114C  0900               	iorlw	0
  3617  00114E  B4D8               	btfsc	status,2,c
  3618  001150  0012               	return	
  3619                           
  3620                           ; BSR set to: 0
  3621                           ;sm_MenuConfiguration_MC50.c: 164:                      sm_send_event(&menuConfiguration
      +                          _stateMachine, ev_addRemotes);
  3622  001152  0EBF               	movlw	low _menuConfiguration_stateMachine
  3623  001154  6E12               	movwf	sm_send_event@psm^0,c
  3624  001156  0E02               	movlw	high _menuConfiguration_stateMachine
  3625  001158  6E13               	movwf	(sm_send_event@psm+1)^0,c
  3626  00115A  0E00               	movlw	0
  3627  00115C  6E15               	movwf	(sm_send_event@event+1)^0,c
  3628  00115E  0E08               	movlw	8
  3629  001160  6E14               	movwf	sm_send_event@event^0,c
  3630  001162  ECA7  F043         	call	_sm_send_event	;wreg free
  3631                           
  3632                           ;sm_MenuConfiguration_MC50.c: 165:                      SetSegmentValueIntermitentMain(e
      +                          dit_Param.tempValue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10),(1000/50));
  3633  001166  0E0A               	movlw	10
  3634  001168  6E10               	movwf	___lbdiv@divisor^0,c
  3635  00116A  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3636  00116C  EC92  F047         	call	___lbdiv
  3637  001170  0DF6               	mullw	246
  3638  001172  50F3               	movf	243,w,c
  3639  001174  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  3640  001176  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  3641  001178  0E00               	movlw	0
  3642  00117A  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  3643  00117C  0E14               	movlw	20
  3644  00117E  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  3645  001180  0E0A               	movlw	10
  3646  001182  6E10               	movwf	___lbdiv@divisor^0,c
  3647  001184  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3648  001186  EC92  F047         	call	___lbdiv
  3649  00118A  EC38  F04B         	call	_SetSegmentValueIntermitentMain
  3650                           
  3651                           ; BSR set to: 1
  3652                           ;sm_MenuConfiguration_MC50.c: 167:             }
  3653                           
  3654                           ;sm_MenuConfiguration_MC50.c: 166:                 }
  3655  00118E  0012               	return	
  3656  001190                     l22827:
  3657                           
  3658                           ; BSR set to: 1
  3659  001190  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  3660  001192  A4D8               	btfss	status,2,c
  3661  001194  D023               	goto	l22839
  3662                           
  3663                           ; BSR set to: 1
  3664                           ;sm_MenuConfiguration_MC50.c: 169:             {;sm_MenuConfiguration_MC50.c: 170:      
      +                                     ts_system.timeoutMenu= ((1000/50)*5) ;
  3665  001196  0E00               	movlw	0
  3666  001198  6FAA               	movwf	(_ts_system+15)& (0+255),b	;volatile
  3667  00119A  0E64               	movlw	100
  3668  00119C  6FA9               	movwf	(_ts_system+14)& (0+255),b	;volatile
  3669                           
  3670                           ;sm_MenuConfiguration_MC50.c: 171:                 if(menu_st.parameterSelected==0)
  3671  00119E  5168               	movf	(_menu_st+23)& (0+255),w,b
  3672  0011A0  A4D8               	btfss	status,2,c
  3673  0011A2  D003               	goto	l22833
  3674                           
  3675                           ; BSR set to: 1
  3676                           ;sm_MenuConfiguration_MC50.c: 172:                 {;sm_MenuConfiguration_MC50.c: 173:  
      +                                             menu_st.parameterSelected=menu_st.menuSize-1;
  3677  0011A4  0567               	decf	(_menu_st+22)& (0+255),w,b
  3678  0011A6  6F68               	movwf	(_menu_st+23)& (0+255),b
  3679                           
  3680                           ;sm_MenuConfiguration_MC50.c: 174:                 }
  3681  0011A8  D001               	goto	l22835
  3682  0011AA                     l22833:
  3683                           
  3684                           ; BSR set to: 1
  3685                           ;sm_MenuConfiguration_MC50.c: 176:                 {;sm_MenuConfiguration_MC50.c: 177:  
      +                                             menu_st.parameterSelected--;
  3686  0011AA  0768               	decf	(_menu_st+23)& (0+255),f,b
  3687  0011AC                     l22835:
  3688                           
  3689                           ; BSR set to: 1
  3690                           ;sm_MenuConfiguration_MC50.c: 179:                 SetSegmentValueMain(menu_st.menuList[
      +                          menu_st.parameterSelected].value_display1, menu_st.menuList[menu_st.parameterSelected].v
      +                          alue_display2);
  3691  0011AC  5168               	movf	(_menu_st+23)& (0+255),w,b
  3692  0011AE  0D02               	mullw	2
  3693  0011B0  0E52               	movlw	low (_menu_st+1)
  3694  0011B2  24F3               	addwf	243,w,c
  3695  0011B4  6ED9               	movwf	fsr2l,c
  3696  0011B6  0E01               	movlw	high (_menu_st+1)
  3697  0011B8  20F4               	addwfc	prodh,w,c
  3698  0011BA  6EDA               	movwf	fsr2h,c
  3699  0011BC  50DF               	movf	indf2,w,c
  3700  0011BE  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3701  0011C0  5168               	movf	(_menu_st+23)& (0+255),w,b
  3702  0011C2  0D02               	mullw	2
  3703  0011C4  0E51               	movlw	low _menu_st
  3704  0011C6  24F3               	addwf	243,w,c
  3705  0011C8  6ED9               	movwf	fsr2l,c
  3706  0011CA  0E01               	movlw	high _menu_st
  3707  0011CC  20F4               	addwfc	prodh,w,c
  3708  0011CE  6EDA               	movwf	fsr2h,c
  3709  0011D0  50DF               	movf	indf2,w,c
  3710  0011D2  EC9C  F04A         	call	_SetSegmentValueMain
  3711  0011D6                     l22837:
  3712                           
  3713                           ;sm_MenuConfiguration_MC50.c: 180:                 button_struct.processed=1;
  3714  0011D6  0E01               	movlw	1
  3715  0011D8  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  3716                           
  3717                           ;sm_MenuConfiguration_MC50.c: 181:             }
  3718  0011DA  0012               	return	
  3719  0011DC                     l22839:
  3720                           
  3721                           ; BSR set to: 1
  3722  0011DC  0E17               	movlw	23
  3723  0011DE  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  3724  0011E0  A4D8               	btfss	status,2,c
  3725  0011E2  D021               	goto	l22853
  3726                           
  3727                           ; BSR set to: 1
  3728                           ;sm_MenuConfiguration_MC50.c: 183:             {;sm_MenuConfiguration_MC50.c: 184:      
      +                                     ts_system.timeoutMenu=((1000/50)*5) ;
  3729  0011E4  0E00               	movlw	0
  3730  0011E6  6FAA               	movwf	(_ts_system+15)& (0+255),b	;volatile
  3731  0011E8  0E64               	movlw	100
  3732  0011EA  6FA9               	movwf	(_ts_system+14)& (0+255),b	;volatile
  3733                           
  3734                           ; BSR set to: 1
  3735                           ;sm_MenuConfiguration_MC50.c: 185:                 menu_st.parameterSelected++;
  3736  0011EC  2B68               	incf	(_menu_st+23)& (0+255),f,b
  3737                           
  3738                           ; BSR set to: 1
  3739                           ;sm_MenuConfiguration_MC50.c: 186:                 if(menu_st.parameterSelected>=menu_st
      +                          .menuSize)
  3740  0011EE  5167               	movf	(_menu_st+22)& (0+255),w,b
  3741  0011F0  5D68               	subwf	(_menu_st+23)& (0+255),w,b
  3742  0011F2  A0D8               	btfss	status,0,c
  3743  0011F4  D002               	goto	l22849
  3744                           
  3745                           ; BSR set to: 1
  3746                           ;sm_MenuConfiguration_MC50.c: 187:                 {;sm_MenuConfiguration_MC50.c: 188:  
      +                                             menu_st.parameterSelected=0;
  3747  0011F6  0E00               	movlw	0
  3748  0011F8  6F68               	movwf	(_menu_st+23)& (0+255),b
  3749  0011FA                     l22849:
  3750                           
  3751                           ; BSR set to: 1
  3752                           ;sm_MenuConfiguration_MC50.c: 190:                 SetSegmentValueMain(menu_st.menuList[
      +                          menu_st.parameterSelected].value_display1, menu_st.menuList[menu_st.parameterSelected].v
      +                          alue_display2);
  3753  0011FA  5168               	movf	(_menu_st+23)& (0+255),w,b
  3754  0011FC  0D02               	mullw	2
  3755  0011FE  0E52               	movlw	low (_menu_st+1)
  3756  001200  24F3               	addwf	243,w,c
  3757  001202  6ED9               	movwf	fsr2l,c
  3758  001204  0E01               	movlw	high (_menu_st+1)
  3759  001206  20F4               	addwfc	prodh,w,c
  3760  001208  6EDA               	movwf	fsr2h,c
  3761  00120A  50DF               	movf	indf2,w,c
  3762  00120C  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3763  00120E  5168               	movf	(_menu_st+23)& (0+255),w,b
  3764  001210  0D02               	mullw	2
  3765  001212  0E51               	movlw	low _menu_st
  3766  001214  24F3               	addwf	243,w,c
  3767  001216  6ED9               	movwf	fsr2l,c
  3768  001218  0E01               	movlw	high _menu_st
  3769  00121A  20F4               	addwfc	prodh,w,c
  3770  00121C  6EDA               	movwf	fsr2h,c
  3771  00121E  50DF               	movf	indf2,w,c
  3772  001220  EC9C  F04A         	call	_SetSegmentValueMain
  3773  001224  D7D8               	goto	l22837
  3774  001226                     l22853:
  3775                           
  3776                           ; BSR set to: 1
  3777  001226  0E0C               	movlw	12
  3778  001228  6166               	cpfslt	(_menu_st+21)& (0+255),b
  3779  00122A  D09A               	goto	l22909
  3780                           
  3781                           ; BSR set to: 1
  3782                           ;sm_MenuConfiguration_MC50.c: 194:             {;sm_MenuConfiguration_MC50.c: 195:      
      +                                     if (button_struct.current==0 && button_struct.timer>(( 500/50)) )
  3783  00122C  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  3784  00122E  A4D8               	btfss	status,2,c
  3785  001230  D053               	goto	l22875
  3786                           
  3787                           ; BSR set to: 1
  3788  001232  0E0A               	movlw	10
  3789  001234  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  3790  001236  D050               	goto	l22875
  3791                           
  3792                           ; BSR set to: 1
  3793                           ;sm_MenuConfiguration_MC50.c: 196:                 {;sm_MenuConfiguration_MC50.c: 197:  
      +                                             ts_system.timeoutMenu=((1000/50)*5) ;
  3794  001238  0E00               	movlw	0
  3795  00123A  6FAA               	movwf	(_ts_system+15)& (0+255),b	;volatile
  3796  00123C  0E64               	movlw	100
  3797  00123E  6FA9               	movwf	(_ts_system+14)& (0+255),b	;volatile
  3798                           
  3799                           ; BSR set to: 1
  3800                           ;sm_MenuConfiguration_MC50.c: 199:                     if (setValueToEdit(menu_st.actual
      +                          Menu,menu_st.parameterSelected))
  3801  001240  C168  F03A         	movff	_menu_st+23,setValueToEdit@ParameterSelected
  3802  001244  5166               	movf	(_menu_st+21)& (0+255),w,b
  3803  001246  EC74  F012         	call	_setValueToEdit
  3804  00124A  0900               	iorlw	0
  3805  00124C  B4D8               	btfsc	status,2,c
  3806  00124E  D7C3               	goto	l22837
  3807                           
  3808                           ; BSR set to: 0
  3809                           ;sm_MenuConfiguration_MC50.c: 200:                     {;sm_MenuConfiguration_MC50.c: 20
      +                          2:                          sm_send_event(&menuConfiguration_stateMachine, ev_ParameterI
      +                          sSelected);
  3810  001250  0EBF               	movlw	low _menuConfiguration_stateMachine
  3811  001252  6E12               	movwf	sm_send_event@psm^0,c
  3812  001254  0E02               	movlw	high _menuConfiguration_stateMachine
  3813  001256  6E13               	movwf	(sm_send_event@psm+1)^0,c
  3814  001258  0E00               	movlw	0
  3815  00125A  6E15               	movwf	(sm_send_event@event+1)^0,c
  3816  00125C  0E01               	movlw	1
  3817  00125E  6E14               	movwf	sm_send_event@event^0,c
  3818  001260  ECA7  F043         	call	_sm_send_event	;wreg free
  3819                           
  3820                           ;sm_MenuConfiguration_MC50.c: 203:                          if((edit_Param.Value==(unsig
      +                          ned char*)&var_sys_NVM.TypeofMotor)||(edit_Param.Value==(unsigned char*)&var_sys_NVM.Dir
      +                          ection_motor)){
  3821  001264  0E98               	movlw	_var_sys_NVM& (0+255)
  3822  001266  0F1C               	addlw	28
  3823  001268  0100               	movlb	0	; () banked
  3824  00126A  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  3825  00126C  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  3826  00126E  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  3827  001270  E101               	bnz	u27555
  3828  001272  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  3829  001274                     u27555:
  3830  001274  B4D8               	btfsc	status,2,c
  3831  001276  D009               	goto	u27560
  3832                           
  3833                           ; BSR set to: 0
  3834  001278  0E98               	movlw	_var_sys_NVM& (0+255)
  3835  00127A  0F1B               	addlw	27
  3836  00127C  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  3837  00127E  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  3838  001280  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  3839  001282  E101               	bnz	u27565
  3840  001284  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  3841  001286                     u27565:
  3842  001286  A4D8               	btfss	status,2,c
  3843  001288  D016               	goto	l22871
  3844  00128A                     u27560:
  3845                           
  3846                           ; BSR set to: 0
  3847                           ;sm_MenuConfiguration_MC50.c: 204:                            SetSegmentValueMain(menu_s
      +                          t.menuList[edit_Param.tempValue].value_display1, menu_st.menuList[edit_Param.tempValue].
      +                          value_display2);
  3848  00128A  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3849  00128C  0D02               	mullw	2
  3850  00128E  0E52               	movlw	low (_menu_st+1)
  3851  001290  24F3               	addwf	243,w,c
  3852  001292  6ED9               	movwf	fsr2l,c
  3853  001294  0E01               	movlw	high (_menu_st+1)
  3854  001296  20F4               	addwfc	prodh,w,c
  3855  001298  6EDA               	movwf	fsr2h,c
  3856  00129A  50DF               	movf	indf2,w,c
  3857  00129C  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3858  00129E  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3859  0012A0  0D02               	mullw	2
  3860  0012A2  0E51               	movlw	low _menu_st
  3861  0012A4  24F3               	addwf	243,w,c
  3862  0012A6  6ED9               	movwf	fsr2l,c
  3863  0012A8  0E01               	movlw	high _menu_st
  3864  0012AA  20F4               	addwfc	prodh,w,c
  3865  0012AC  6EDA               	movwf	fsr2h,c
  3866  0012AE  50DF               	movf	indf2,w,c
  3867  0012B0  EC9C  F04A         	call	_SetSegmentValueMain
  3868                           
  3869                           ;sm_MenuConfiguration_MC50.c: 206:                          }
  3870  0012B4  D790               	goto	l22837
  3871  0012B6                     l22871:
  3872                           
  3873                           ; BSR set to: 0
  3874                           ;sm_MenuConfiguration_MC50.c: 208:                          SetSegmentValueMain(edit_Par
      +                          am.tempValue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10));
  3875  0012B6  0E0A               	movlw	10
  3876  0012B8  6E10               	movwf	___lbdiv@divisor^0,c
  3877  0012BA  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3878  0012BC  EC92  F047         	call	___lbdiv
  3879  0012C0  0DF6               	mullw	246
  3880  0012C2  50F3               	movf	243,w,c
  3881  0012C4  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  3882  0012C6  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3883  0012C8  0E0A               	movlw	10
  3884  0012CA  6E10               	movwf	___lbdiv@divisor^0,c
  3885  0012CC  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3886  0012CE  EC92  F047         	call	___lbdiv
  3887  0012D2  EC9C  F04A         	call	_SetSegmentValueMain
  3888  0012D6  D77F               	goto	l22837
  3889  0012D8                     l22875:
  3890                           
  3891                           ; BSR set to: 1
  3892  0012D8  BFAA               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  3893  0012DA  D008               	goto	u27580
  3894  0012DC  51AA               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  3895  0012DE  E103               	bnz	u27570
  3896  0012E0  05A9               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  3897  0012E2  A0D8               	btfss	status,0,c
  3898  0012E4  D003               	goto	u27580
  3899  0012E6                     u27570:
  3900                           
  3901                           ; BSR set to: 1
  3902  0012E6  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  3903  0012E8  A4D8               	btfss	status,2,c
  3904  0012EA  D01E               	goto	l22893
  3905  0012EC                     u27580:
  3906                           
  3907                           ; BSR set to: 1
  3908  0012EC  0E02               	movlw	2
  3909  0012EE  6166               	cpfslt	(_menu_st+21)& (0+255),b
  3910  0012F0  D01B               	goto	l22893
  3911                           
  3912                           ; BSR set to: 1
  3913                           ;sm_MenuConfiguration_MC50.c: 216:                 {;sm_MenuConfiguration_MC50.c: 217:  
      +                                             ts_system.timeoutMenu=0;
  3914  0012F2  0E00               	movlw	0
  3915  0012F4  6FAA               	movwf	(_ts_system+15)& (0+255),b	;volatile
  3916  0012F6  0E00               	movlw	0
  3917  0012F8  6FA9               	movwf	(_ts_system+14)& (0+255),b	;volatile
  3918                           
  3919                           ; BSR set to: 1
  3920                           ;sm_MenuConfiguration_MC50.c: 218:                     sm_send_event(&main_stateMachine,
      +                           ev_goto_StandBy);
  3921  0012FA  0EEE               	movlw	low _main_stateMachine
  3922  0012FC  6E12               	movwf	sm_send_event@psm^0,c
  3923  0012FE  0E01               	movlw	high _main_stateMachine
  3924  001300  6E13               	movwf	(sm_send_event@psm+1)^0,c
  3925  001302  0E00               	movlw	0
  3926  001304  6E15               	movwf	(sm_send_event@event+1)^0,c
  3927  001306  0E07               	movlw	7
  3928  001308  6E14               	movwf	sm_send_event@event^0,c
  3929  00130A  ECA7  F043         	call	_sm_send_event	;wreg free
  3930                           
  3931                           ;sm_MenuConfiguration_MC50.c: 219:                     SetSegmentValueMain(dMinus,dMinus
      +                          );
  3932  00130E  0E18               	movlw	24
  3933  001310  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3934  001312  0E18               	movlw	24
  3935  001314  EC9C  F04A         	call	_SetSegmentValueMain
  3936                           
  3937                           ; BSR set to: 0
  3938                           ;sm_MenuConfiguration_MC50.c: 220:                     menu_st.lastMainParameterSelected
      +                           = 0;
  3939  001318  0E00               	movlw	0
  3940  00131A  0101               	movlb	1	; () banked
  3941  00131C  6F69               	movwf	(_menu_st+24)& (0+255),b
  3942                           
  3943                           ; BSR set to: 1
  3944                           ;sm_MenuConfiguration_MC50.c: 221:                     button_struct.processed=1;
  3945  00131E  0E01               	movlw	1
  3946  001320  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  3947                           
  3948                           ; BSR set to: 1
  3949                           ;sm_MenuConfiguration_MC50.c: 222:                     ClearFlag_rfCMD();
  3950  001322  ECED  F04B         	call	_ClearFlag_rfCMD	;wreg free
  3951                           
  3952                           ;sm_MenuConfiguration_MC50.c: 224:                 }
  3953  001326  0012               	return	
  3954  001328                     l22893:
  3955                           
  3956                           ; BSR set to: 1
  3957  001328  BFAA               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  3958  00132A  D008               	goto	u27610
  3959  00132C  51AA               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  3960  00132E  E103               	bnz	u27600
  3961  001330  05A9               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  3962  001332  A0D8               	btfss	status,0,c
  3963  001334  D003               	goto	u27610
  3964  001336                     u27600:
  3965                           
  3966                           ; BSR set to: 1
  3967  001336  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  3968  001338  A4D8               	btfss	status,2,c
  3969  00133A  D004               	goto	l22901
  3970  00133C                     u27610:
  3971                           
  3972                           ; BSR set to: 1
  3973                           ;sm_MenuConfiguration_MC50.c: 226:                 {;sm_MenuConfiguration_MC50.c: 228:  
      +                                             load_New_Menu(menu_st.lastMenu);
  3974  00133C  5165               	movf	(_menu_st+20)& (0+255),w,b
  3975  00133E  EC2B  F021         	call	_load_New_Menu
  3976  001342  D749               	goto	l22837
  3977  001344                     l22901:
  3978                           
  3979                           ; BSR set to: 1
  3980  001344  BFAA               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  3981  001346  D005               	goto	u27620
  3982  001348  51AA               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  3983  00134A  E102               	bnz	u27621
  3984  00134C  05A9               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  3985  00134E  B0D8               	btfsc	status,0,c
  3986  001350                     u27621:
  3987  001350  0012               	return	
  3988  001352                     u27620:
  3989                           
  3990                           ; BSR set to: 1
  3991  001352  0E01               	movlw	1
  3992  001354  6566               	cpfsgt	(_menu_st+21)& (0+255),b
  3993  001356  0012               	return	
  3994                           
  3995                           ; BSR set to: 1
  3996                           ;sm_MenuConfiguration_MC50.c: 232:                 {;sm_MenuConfiguration_MC50.c: 234:  
      +                                             load_New_Menu(menu_st.lastMenu);
  3997  001358  5165               	movf	(_menu_st+20)& (0+255),w,b
  3998  00135A  EC2B  F021         	call	_load_New_Menu
  3999  00135E  D73B               	goto	l22837
  4000  001360                     l22909:
  4001                           
  4002                           ; BSR set to: 1
  4003  001360  0E27               	movlw	39
  4004  001362  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  4005  001364  A4D8               	btfss	status,2,c
  4006  001366  D032               	goto	l22925
  4007                           
  4008                           ; BSR set to: 1
  4009  001368  0E0A               	movlw	10
  4010  00136A  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  4011  00136C  D02F               	goto	l22925
  4012                           
  4013                           ; BSR set to: 1
  4014  00136E  0E0D               	movlw	13
  4015  001370  1966               	xorwf	(_menu_st+21)& (0+255),w,b
  4016  001372  B4D8               	btfsc	status,2,c
  4017  001374  D02B               	goto	l22925
  4018                           
  4019                           ; BSR set to: 1
  4020                           ;sm_MenuConfiguration_MC50.c: 239:             {;sm_MenuConfiguration_MC50.c: 240:      
      +                                         ts_system.timeoutMenu=((1000/50)*5);
  4021  001376  0E00               	movlw	0
  4022  001378  6FAA               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4023  00137A  0E64               	movlw	100
  4024  00137C  6FA9               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4025                           
  4026                           ; BSR set to: 1
  4027                           ;sm_MenuConfiguration_MC50.c: 241:                     if (setValueToEdit(menu_st.actual
      +                          Menu,menu_st.parameterSelected))
  4028  00137E  C168  F03A         	movff	_menu_st+23,setValueToEdit@ParameterSelected
  4029  001382  5166               	movf	(_menu_st+21)& (0+255),w,b
  4030  001384  EC74  F012         	call	_setValueToEdit
  4031  001388  0900               	iorlw	0
  4032  00138A  B4D8               	btfsc	status,2,c
  4033  00138C  D724               	goto	l22837
  4034                           
  4035                           ; BSR set to: 0
  4036                           ;sm_MenuConfiguration_MC50.c: 243:                     {;sm_MenuConfiguration_MC50.c: 24
      +                          4:                         sm_send_event(&menuConfiguration_stateMachine, ev_addRemotes)
      +                          ;
  4037  00138E  0EBF               	movlw	low _menuConfiguration_stateMachine
  4038  001390  6E12               	movwf	sm_send_event@psm^0,c
  4039  001392  0E02               	movlw	high _menuConfiguration_stateMachine
  4040  001394  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4041  001396  0E00               	movlw	0
  4042  001398  6E15               	movwf	(sm_send_event@event+1)^0,c
  4043  00139A  0E08               	movlw	8
  4044  00139C  6E14               	movwf	sm_send_event@event^0,c
  4045  00139E  ECA7  F043         	call	_sm_send_event	;wreg free
  4046                           
  4047                           ;sm_MenuConfiguration_MC50.c: 245:                         SetSegmentValueIntermitentMai
      +                          n(edit_Param.tempValue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10),(1000/50)
      +                          );
  4048  0013A2  0E0A               	movlw	10
  4049  0013A4  6E10               	movwf	___lbdiv@divisor^0,c
  4050  0013A6  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4051  0013A8  EC92  F047         	call	___lbdiv
  4052  0013AC  0DF6               	mullw	246
  4053  0013AE  50F3               	movf	243,w,c
  4054  0013B0  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  4055  0013B2  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  4056  0013B4  0E00               	movlw	0
  4057  0013B6  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  4058  0013B8  0E14               	movlw	20
  4059  0013BA  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  4060  0013BC  0E0A               	movlw	10
  4061  0013BE  6E10               	movwf	___lbdiv@divisor^0,c
  4062  0013C0  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4063  0013C2  EC92  F047         	call	___lbdiv
  4064  0013C6  EC38  F04B         	call	_SetSegmentValueIntermitentMain
  4065  0013CA  D705               	goto	l22837
  4066  0013CC                     l22925:
  4067                           
  4068                           ; BSR set to: 1
  4069  0013CC  0E0D               	movlw	13
  4070  0013CE  1966               	xorwf	(_menu_st+21)& (0+255),w,b
  4071  0013D0  A4D8               	btfss	status,2,c
  4072  0013D2  D027               	goto	l22943
  4073                           
  4074                           ; BSR set to: 1
  4075  0013D4  51A7               	movf	(_ts_system+12)& (0+255),w,b	;volatile
  4076  0013D6  11A8               	iorwf	(_ts_system+13)& (0+255),w,b	;volatile
  4077  0013D8  A4D8               	btfss	status,2,c
  4078  0013DA  D023               	goto	l22943
  4079                           
  4080                           ; BSR set to: 1
  4081                           ;sm_MenuConfiguration_MC50.c: 250:             {;sm_MenuConfiguration_MC50.c: 251:      
      +                                     var_sys_NVM.positionRemotesFull=0;
  4082  0013DC  0E00               	movlw	0
  4083  0013DE  0100               	movlb	0	; () banked
  4084  0013E0  6FB8               	movwf	(_var_sys_NVM+32)& (0+255),b	;volatile
  4085                           
  4086                           ;sm_MenuConfiguration_MC50.c: 252:                 var_sys_NVM.positionRemotesWalk=0;
  4087  0013E2  0E00               	movlw	0
  4088  0013E4  6FB9               	movwf	(_var_sys_NVM+33)& (0+255),b	;volatile
  4089                           
  4090                           ;sm_MenuConfiguration_MC50.c: 253:                 var_sys_NVM.OnlyRollingCode=NO;
  4091  0013E6  0E00               	movlw	0
  4092  0013E8  6FBE               	movwf	(_var_sys_NVM+38)& (0+255),b	;volatile
  4093                           
  4094                           ; BSR set to: 0
  4095                           ;sm_MenuConfiguration_MC50.c: 254:                 SaveNVM_VarSystem(pageMemoryCounters)
      +                          ;
  4096  0013EA  0E02               	movlw	2
  4097  0013EC  ECAF  F047         	call	_SaveNVM_VarSystem
  4098                           
  4099                           ;sm_MenuConfiguration_MC50.c: 255:                 sm_send_event(&main_stateMachine, ev_
      +                          goto_StandBy);
  4100  0013F0  0EEE               	movlw	low _main_stateMachine
  4101  0013F2  6E12               	movwf	sm_send_event@psm^0,c
  4102  0013F4  0E01               	movlw	high _main_stateMachine
  4103  0013F6  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4104  0013F8  0E00               	movlw	0
  4105  0013FA  6E15               	movwf	(sm_send_event@event+1)^0,c
  4106  0013FC  0E07               	movlw	7
  4107  0013FE  6E14               	movwf	sm_send_event@event^0,c
  4108  001400  ECA7  F043         	call	_sm_send_event	;wreg free
  4109                           
  4110                           ;sm_MenuConfiguration_MC50.c: 256:                 SetSegmentValueMain(dMinus,dMinus);
  4111  001404  0E18               	movlw	24
  4112  001406  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4113  001408  0E18               	movlw	24
  4114  00140A  EC9C  F04A         	call	_SetSegmentValueMain
  4115                           
  4116                           ; BSR set to: 0
  4117                           ;sm_MenuConfiguration_MC50.c: 257:                 button_struct.processed=1;
  4118  00140E  0E01               	movlw	1
  4119  001410  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  4120  001412                     l22939:
  4121                           
  4122                           ;sm_MenuConfiguration_MC50.c: 258:                 ClearFlag_rfCMD();
  4123  001412  ECED  F04B         	call	_ClearFlag_rfCMD	;wreg free
  4124  001416                     l22941:
  4125                           
  4126                           ;sm_MenuConfiguration_MC50.c: 259:                  ts_system.timeoutMenu=0;
  4127  001416  0E00               	movlw	0
  4128  001418  0101               	movlb	1	; () banked
  4129  00141A  6FAA               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4130  00141C  0E00               	movlw	0
  4131  00141E  6FA9               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4132                           
  4133                           ;sm_MenuConfiguration_MC50.c: 260:             }
  4134  001420  0012               	return	
  4135  001422                     l22943:
  4136                           
  4137                           ; BSR set to: 1
  4138  001422  BFAA               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  4139  001424  D008               	goto	u27710
  4140  001426  51AA               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  4141  001428  E103               	bnz	u27700
  4142  00142A  05A9               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  4143  00142C  A0D8               	btfss	status,0,c
  4144  00142E  D003               	goto	u27710
  4145  001430                     u27700:
  4146                           
  4147                           ; BSR set to: 1
  4148  001430  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  4149  001432  A4D8               	btfss	status,2,c
  4150  001434  0012               	return	
  4151  001436                     u27710:
  4152                           
  4153                           ; BSR set to: 1
  4154                           ;sm_MenuConfiguration_MC50.c: 262:             {;sm_MenuConfiguration_MC50.c: 263:      
      +                                      sm_send_event(&main_stateMachine, ev_goto_StandBy);
  4155  001436  0EEE               	movlw	low _main_stateMachine
  4156  001438  6E12               	movwf	sm_send_event@psm^0,c
  4157  00143A  0E01               	movlw	high _main_stateMachine
  4158  00143C  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4159  00143E  0E00               	movlw	0
  4160  001440  6E15               	movwf	(sm_send_event@event+1)^0,c
  4161  001442  0E07               	movlw	7
  4162  001444  6E14               	movwf	sm_send_event@event^0,c
  4163  001446  ECA7  F043         	call	_sm_send_event	;wreg free
  4164                           
  4165                           ;sm_MenuConfiguration_MC50.c: 264:                  SetSegmentValueMain(dMinus,dMinus);
  4166  00144A  0E18               	movlw	24
  4167  00144C  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4168  00144E  0E18               	movlw	24
  4169  001450  EC9C  F04A         	call	_SetSegmentValueMain
  4170                           
  4171                           ; BSR set to: 0
  4172                           ;sm_MenuConfiguration_MC50.c: 265:                  ClearFlag_rfCMD();
  4173  001454  ECED  F04B         	call	_ClearFlag_rfCMD	;wreg free
  4174                           
  4175                           ;sm_MenuConfiguration_MC50.c: 266:                  button_struct.processed=1;
  4176  001458  0E01               	movlw	1
  4177  00145A  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  4178  00145C  D7DC               	goto	l22941
  4179  00145E                     l22957:
  4180                           
  4181                           ; BSR set to: 0
  4182                           ;sm_MenuConfiguration_MC50.c: 272:         {;sm_MenuConfiguration_MC50.c: 273:          
      +                             if (button_struct.current==0x00)
  4183  00145E  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  4184  001460  A4D8               	btfss	status,2,c
  4185  001462  D047               	goto	l22977
  4186                           
  4187                           ; BSR set to: 0
  4188                           ;sm_MenuConfiguration_MC50.c: 274:             {;sm_MenuConfiguration_MC50.c: 275:      
      +                                     ts_system.timeoutMenu=((1000/50)*5);
  4189  001464  0E00               	movlw	0
  4190  001466  0101               	movlb	1	; () banked
  4191  001468  6FAA               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4192  00146A  0E64               	movlw	100
  4193  00146C  6FA9               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4194                           
  4195                           ; BSR set to: 1
  4196                           ;sm_MenuConfiguration_MC50.c: 276:                 if(edit_Param.tempValue<=edit_Param.M
      +                          in)
  4197  00146E  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4198  001470  5C4B               	subwf	(_edit_Param+5)^0,w,c	;volatile
  4199  001472  A0D8               	btfss	status,0,c
  4200  001474  D003               	goto	l22965
  4201                           
  4202                           ; BSR set to: 1
  4203                           ;sm_MenuConfiguration_MC50.c: 277:                 {;sm_MenuConfiguration_MC50.c: 278:  
      +                                             edit_Param.tempValue=edit_Param.Max;
  4204  001476  C04A  F049         	movff	_edit_Param+4,_edit_Param+3	;volatile
  4205                           
  4206                           ;sm_MenuConfiguration_MC50.c: 279:                 }
  4207  00147A  D001               	goto	l22967
  4208  00147C                     l22965:
  4209                           
  4210                           ; BSR set to: 1
  4211                           ;sm_MenuConfiguration_MC50.c: 281:                 {;sm_MenuConfiguration_MC50.c: 282:  
      +                                             edit_Param.tempValue--;
  4212  00147C  0649               	decf	(_edit_Param+3)^0,f,c	;volatile
  4213  00147E                     l22967:
  4214                           
  4215                           ; BSR set to: 1
  4216                           ;sm_MenuConfiguration_MC50.c: 284:                 if ((edit_Param.Value==(unsigned char
      +                          *)&var_sys_NVM.TypeofMotor)||(edit_Param.Value==(unsigned char*)&var_sys_NVM.Direction_m
      +                          otor)){
  4217  00147E  0E98               	movlw	_var_sys_NVM& (0+255)
  4218  001480  0F1C               	addlw	28
  4219  001482  0100               	movlb	0	; () banked
  4220  001484  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  4221  001486  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  4222  001488  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  4223  00148A  E101               	bnz	u27745
  4224  00148C  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  4225  00148E                     u27745:
  4226  00148E  B4D8               	btfsc	status,2,c
  4227  001490  D009               	goto	u27750
  4228                           
  4229                           ; BSR set to: 0
  4230  001492  0E98               	movlw	_var_sys_NVM& (0+255)
  4231  001494  0F1B               	addlw	27
  4232  001496  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  4233  001498  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  4234  00149A  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  4235  00149C  E101               	bnz	u27755
  4236  00149E  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  4237  0014A0                     u27755:
  4238  0014A0  A4D8               	btfss	status,2,c
  4239  0014A2  D016               	goto	l22973
  4240  0014A4                     u27750:
  4241                           
  4242                           ; BSR set to: 0
  4243                           ;sm_MenuConfiguration_MC50.c: 285:                 SetSegmentValueMain(menu_st.menuList[
      +                          edit_Param.tempValue].value_display1, menu_st.menuList[edit_Param.tempValue].value_displ
      +                          ay2);
  4244  0014A4  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4245  0014A6  0D02               	mullw	2
  4246  0014A8  0E52               	movlw	low (_menu_st+1)
  4247  0014AA  24F3               	addwf	243,w,c
  4248  0014AC  6ED9               	movwf	fsr2l,c
  4249  0014AE  0E01               	movlw	high (_menu_st+1)
  4250  0014B0  20F4               	addwfc	prodh,w,c
  4251  0014B2  6EDA               	movwf	fsr2h,c
  4252  0014B4  50DF               	movf	indf2,w,c
  4253  0014B6  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4254  0014B8  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4255  0014BA  0D02               	mullw	2
  4256  0014BC  0E51               	movlw	low _menu_st
  4257  0014BE  24F3               	addwf	243,w,c
  4258  0014C0  6ED9               	movwf	fsr2l,c
  4259  0014C2  0E01               	movlw	high _menu_st
  4260  0014C4  20F4               	addwfc	prodh,w,c
  4261  0014C6  6EDA               	movwf	fsr2h,c
  4262  0014C8  50DF               	movf	indf2,w,c
  4263  0014CA  EC9C  F04A         	call	_SetSegmentValueMain
  4264                           
  4265                           ;sm_MenuConfiguration_MC50.c: 286:                 }
  4266  0014CE  D683               	goto	l22837
  4267  0014D0                     l22973:
  4268                           
  4269                           ; BSR set to: 0
  4270                           ;sm_MenuConfiguration_MC50.c: 289:                 SetSegmentValueMain(edit_Param.tempVa
      +                          lue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10));
  4271  0014D0  0E0A               	movlw	10
  4272  0014D2  6E10               	movwf	___lbdiv@divisor^0,c
  4273  0014D4  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4274  0014D6  EC92  F047         	call	___lbdiv
  4275  0014DA  0DF6               	mullw	246
  4276  0014DC  50F3               	movf	243,w,c
  4277  0014DE  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  4278  0014E0  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4279  0014E2  0E0A               	movlw	10
  4280  0014E4  6E10               	movwf	___lbdiv@divisor^0,c
  4281  0014E6  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4282  0014E8  EC92  F047         	call	___lbdiv
  4283  0014EC  EC9C  F04A         	call	_SetSegmentValueMain
  4284  0014F0  D672               	goto	l22837
  4285  0014F2                     l22977:
  4286                           
  4287                           ; BSR set to: 0
  4288  0014F2  0E17               	movlw	23
  4289  0014F4  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  4290  0014F6  A4D8               	btfss	status,2,c
  4291  0014F8  D045               	goto	l22997
  4292                           
  4293                           ; BSR set to: 0
  4294                           ;sm_MenuConfiguration_MC50.c: 294:             {;sm_MenuConfiguration_MC50.c: 295:      
      +                                     ts_system.timeoutMenu=((1000/50)*5) ;
  4295  0014FA  0E00               	movlw	0
  4296  0014FC  0101               	movlb	1	; () banked
  4297  0014FE  6FAA               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4298  001500  0E64               	movlw	100
  4299  001502  6FA9               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4300                           
  4301                           ; BSR set to: 1
  4302                           ;sm_MenuConfiguration_MC50.c: 296:                 edit_Param.tempValue++;
  4303  001504  2A49               	incf	(_edit_Param+3)^0,f,c	;volatile
  4304                           
  4305                           ; BSR set to: 1
  4306                           ;sm_MenuConfiguration_MC50.c: 297:                 if(edit_Param.tempValue>edit_Param.Ma
      +                          x)
  4307  001506  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4308  001508  5C4A               	subwf	(_edit_Param+4)^0,w,c	;volatile
  4309  00150A  A0D8               	btfss	status,0,c
  4310                           
  4311                           ; BSR set to: 1
  4312                           ;sm_MenuConfiguration_MC50.c: 298:                 {;sm_MenuConfiguration_MC50.c: 299:  
      +                                              edit_Param.tempValue=edit_Param.Min;
  4313  00150C  C04B  F049         	movff	_edit_Param+5,_edit_Param+3	;volatile
  4314                           
  4315                           ; BSR set to: 1
  4316                           ;sm_MenuConfiguration_MC50.c: 301:                 if ((edit_Param.Value==(unsigned char
      +                          *)&var_sys_NVM.TypeofMotor)||(edit_Param.Value==(unsigned char*)&var_sys_NVM.Direction_m
      +                          otor)){
  4317  001510  0E98               	movlw	_var_sys_NVM& (0+255)
  4318  001512  0F1C               	addlw	28
  4319  001514  0100               	movlb	0	; () banked
  4320  001516  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  4321  001518  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  4322  00151A  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  4323  00151C  E101               	bnz	u27785
  4324  00151E  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  4325  001520                     u27785:
  4326  001520  B4D8               	btfsc	status,2,c
  4327  001522  D009               	goto	u27790
  4328                           
  4329                           ; BSR set to: 0
  4330  001524  0E98               	movlw	_var_sys_NVM& (0+255)
  4331  001526  0F1B               	addlw	27
  4332  001528  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  4333  00152A  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  4334  00152C  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  4335  00152E  E101               	bnz	u27795
  4336  001530  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  4337  001532                     u27795:
  4338  001532  A4D8               	btfss	status,2,c
  4339  001534  D016               	goto	l22993
  4340  001536                     u27790:
  4341                           
  4342                           ; BSR set to: 0
  4343                           ;sm_MenuConfiguration_MC50.c: 302:                     SetSegmentValueMain(menu_st.menuL
      +                          ist[edit_Param.tempValue].value_display1, menu_st.menuList[edit_Param.tempValue].value_d
      +                          isplay2);
  4344  001536  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4345  001538  0D02               	mullw	2
  4346  00153A  0E52               	movlw	low (_menu_st+1)
  4347  00153C  24F3               	addwf	243,w,c
  4348  00153E  6ED9               	movwf	fsr2l,c
  4349  001540  0E01               	movlw	high (_menu_st+1)
  4350  001542  20F4               	addwfc	prodh,w,c
  4351  001544  6EDA               	movwf	fsr2h,c
  4352  001546  50DF               	movf	indf2,w,c
  4353  001548  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4354  00154A  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4355  00154C  0D02               	mullw	2
  4356  00154E  0E51               	movlw	low _menu_st
  4357  001550  24F3               	addwf	243,w,c
  4358  001552  6ED9               	movwf	fsr2l,c
  4359  001554  0E01               	movlw	high _menu_st
  4360  001556  20F4               	addwfc	prodh,w,c
  4361  001558  6EDA               	movwf	fsr2h,c
  4362  00155A  50DF               	movf	indf2,w,c
  4363  00155C  EC9C  F04A         	call	_SetSegmentValueMain
  4364                           
  4365                           ;sm_MenuConfiguration_MC50.c: 303:                 }
  4366  001560  D63A               	goto	l22837
  4367  001562                     l22993:
  4368                           
  4369                           ; BSR set to: 0
  4370                           ;sm_MenuConfiguration_MC50.c: 306:                 SetSegmentValueMain(edit_Param.tempVa
      +                          lue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10));
  4371  001562  0E0A               	movlw	10
  4372  001564  6E10               	movwf	___lbdiv@divisor^0,c
  4373  001566  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4374  001568  EC92  F047         	call	___lbdiv
  4375  00156C  0DF6               	mullw	246
  4376  00156E  50F3               	movf	243,w,c
  4377  001570  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  4378  001572  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4379  001574  0E0A               	movlw	10
  4380  001576  6E10               	movwf	___lbdiv@divisor^0,c
  4381  001578  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4382  00157A  EC92  F047         	call	___lbdiv
  4383  00157E  EC9C  F04A         	call	_SetSegmentValueMain
  4384  001582  D629               	goto	l22837
  4385  001584                     l22997:
  4386                           
  4387                           ; BSR set to: 0
  4388  001584  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  4389  001586  A4D8               	btfss	status,2,c
  4390  001588  D023               	goto	l23013
  4391                           
  4392                           ; BSR set to: 0
  4393  00158A  0E09               	movlw	9
  4394  00158C  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  4395  00158E  D020               	goto	l23013
  4396                           
  4397                           ; BSR set to: 0
  4398                           ;sm_MenuConfiguration_MC50.c: 312:             {;sm_MenuConfiguration_MC50.c: 313:      
      +                                     ts_system.timeoutMenu=((1000/50)*5) ;
  4399  001590  0E00               	movlw	0
  4400  001592  0101               	movlb	1	; () banked
  4401  001594  6FAA               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4402  001596  0E64               	movlw	100
  4403  001598  6FA9               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4404                           
  4405                           ; BSR set to: 1
  4406                           ;sm_MenuConfiguration_MC50.c: 315:                 edit_Param.Value[0]=edit_Param.tempVa
      +                          lue;
  4407  00159A  C047  FFD9         	movff	_edit_Param+1,fsr2l	;volatile
  4408  00159E  C048  FFDA         	movff	_edit_Param+2,fsr2h	;volatile
  4409  0015A2  C049  FFDF         	movff	_edit_Param+3,indf2	;volatile
  4410                           
  4411                           ; BSR set to: 1
  4412                           ;sm_MenuConfiguration_MC50.c: 316:                 sm_send_event(&menuConfiguration_stat
      +                          eMachine, ev_ParameterIsEdited);
  4413  0015A6  0EBF               	movlw	low _menuConfiguration_stateMachine
  4414  0015A8  6E12               	movwf	sm_send_event@psm^0,c
  4415  0015AA  0E02               	movlw	high _menuConfiguration_stateMachine
  4416  0015AC  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4417  0015AE  0E00               	movlw	0
  4418  0015B0  6E15               	movwf	(sm_send_event@event+1)^0,c
  4419  0015B2  0E02               	movlw	2
  4420  0015B4  6E14               	movwf	sm_send_event@event^0,c
  4421  0015B6  ECA7  F043         	call	_sm_send_event	;wreg free
  4422                           
  4423                           ;sm_MenuConfiguration_MC50.c: 317:                 SetSegmentValueMain(dBar,d1);
  4424  0015BA  0E01               	movlw	1
  4425  0015BC  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4426  0015BE  0E19               	movlw	25
  4427  0015C0  EC9C  F04A         	call	_SetSegmentValueMain
  4428                           
  4429                           ; BSR set to: 0
  4430                           ;sm_MenuConfiguration_MC50.c: 318:                 ts_system.timeSinalizationDigit=((100
      +                          0/50)*2);
  4431  0015C4  0E00               	movlw	0
  4432  0015C6  0101               	movlb	1	; () banked
  4433  0015C8  6FA8               	movwf	(_ts_system+13)& (0+255),b	;volatile
  4434  0015CA  0E28               	movlw	40
  4435  0015CC  6FA7               	movwf	(_ts_system+12)& (0+255),b	;volatile
  4436  0015CE  D603               	goto	l22837
  4437  0015D0                     l23013:
  4438                           
  4439                           ; BSR set to: 0
  4440  0015D0  0101               	movlb	1	; () banked
  4441  0015D2  BFAA               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  4442  0015D4  D008               	goto	u27830
  4443  0015D6  51AA               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  4444  0015D8  E103               	bnz	u27820
  4445  0015DA  05A9               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  4446  0015DC  A0D8               	btfss	status,0,c
  4447  0015DE  D003               	goto	u27830
  4448  0015E0                     u27820:
  4449                           
  4450                           ; BSR set to: 1
  4451  0015E0  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  4452  0015E2  A4D8               	btfss	status,2,c
  4453  0015E4  0012               	return	
  4454  0015E6                     u27830:
  4455                           
  4456                           ; BSR set to: 1
  4457                           ;sm_MenuConfiguration_MC50.c: 323:             {;sm_MenuConfiguration_MC50.c: 324:      
      +                                     ts_system.timeoutMenu=((1000/50)*5) ;
  4458  0015E6  0E00               	movlw	0
  4459  0015E8  6FAA               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4460  0015EA  0E64               	movlw	100
  4461  0015EC  6FA9               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4462                           
  4463                           ; BSR set to: 1
  4464                           ;sm_MenuConfiguration_MC50.c: 325:                 load_New_Menu(menu_st.actualMenu);
  4465  0015EE  5166               	movf	(_menu_st+21)& (0+255),w,b
  4466  0015F0  EC2B  F021         	call	_load_New_Menu
  4467                           
  4468                           ;sm_MenuConfiguration_MC50.c: 326:                 sm_send_event(&menuConfiguration_stat
      +                          eMachine, ev_CancelEdition);
  4469  0015F4  0EBF               	movlw	low _menuConfiguration_stateMachine
  4470  0015F6  6E12               	movwf	sm_send_event@psm^0,c
  4471  0015F8  0E02               	movlw	high _menuConfiguration_stateMachine
  4472  0015FA  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4473  0015FC  0E00               	movlw	0
  4474  0015FE  6E15               	movwf	(sm_send_event@event+1)^0,c
  4475  001600  0E03               	movlw	3
  4476  001602  6E14               	movwf	sm_send_event@event^0,c
  4477  001604  ECA7  F043         	call	_sm_send_event	;wreg free
  4478  001608  D5E6               	goto	l22837
  4479  00160A                     l23025:
  4480                           
  4481                           ; BSR set to: 0
  4482                           ;sm_MenuConfiguration_MC50.c: 332:         {;sm_MenuConfiguration_MC50.c: 333:          
      +                             if (ts_system.timeSinalizationDigit<=0)
  4483  00160A  0101               	movlb	1	; () banked
  4484  00160C  BFA8               	btfsc	(_ts_system+13)& (0+255),7,b	;volatile
  4485  00160E  D005               	goto	u27840
  4486  001610  51A8               	movf	(_ts_system+13)& (0+255),w,b	;volatile
  4487  001612  E102               	bnz	u27841
  4488  001614  05A7               	decf	(_ts_system+12)& (0+255),w,b	;volatile
  4489  001616  B0D8               	btfsc	status,0,c
  4490  001618                     u27841:
  4491  001618  0012               	return	
  4492  00161A                     u27840:
  4493                           
  4494                           ; BSR set to: 1
  4495                           ;sm_MenuConfiguration_MC50.c: 334:             {;sm_MenuConfiguration_MC50.c: 335:      
      +                                     ts_system.timeoutMenu=((1000/50)*5) ;
  4496  00161A  0E00               	movlw	0
  4497  00161C  6FAA               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4498  00161E  0E64               	movlw	100
  4499  001620  6FA9               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4500                           
  4501                           ; BSR set to: 1
  4502                           ;sm_MenuConfiguration_MC50.c: 337:                 if((menu_st.actualMenu==E_Menu && men
      +                          u_st.parameterSelected==8)||(edit_Param.Value==(unsigned char*)&var_sys_NVM.TypeofMotor)
      +                          )
  4503  001622  0566               	decf	(_menu_st+21)& (0+255),w,b
  4504  001624  A4D8               	btfss	status,2,c
  4505  001626  D004               	goto	u27860
  4506                           
  4507                           ; BSR set to: 1
  4508  001628  0E08               	movlw	8
  4509  00162A  1968               	xorwf	(_menu_st+23)& (0+255),w,b
  4510  00162C  B4D8               	btfsc	status,2,c
  4511  00162E  D00A               	goto	u27870
  4512  001630                     u27860:
  4513                           
  4514                           ; BSR set to: 1
  4515  001630  0E98               	movlw	_var_sys_NVM& (0+255)
  4516  001632  0F1C               	addlw	28
  4517  001634  0100               	movlb	0	; () banked
  4518  001636  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  4519  001638  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  4520  00163A  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  4521  00163C  E101               	bnz	u27875
  4522  00163E  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  4523  001640                     u27875:
  4524  001640  A4D8               	btfss	status,2,c
  4525  001642  D005               	goto	l23037
  4526  001644                     u27870:
  4527                           
  4528                           ;sm_MenuConfiguration_MC50.c: 338:                 {;sm_MenuConfiguration_MC50.c: 341:  
      +                                             ResetDefaultMemory(var_sys_NVM.TypeofMotor);
  4529  001644  0100               	movlb	0	; () banked
  4530  001646  51B4               	movf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
  4531  001648  EC5D  F030         	call	_ResetDefaultMemory
  4532                           
  4533                           ;sm_MenuConfiguration_MC50.c: 343:                 }
  4534  00164C  D023               	goto	l23055
  4535  00164E                     l23037:
  4536                           
  4537                           ; BSR set to: 0
  4538  00164E  0101               	movlb	1	; () banked
  4539  001650  0566               	decf	(_menu_st+21)& (0+255),w,b
  4540  001652  B4D8               	btfsc	status,2,c
  4541  001654  D004               	goto	u27890
  4542                           
  4543                           ; BSR set to: 1
  4544  001656  0E0A               	movlw	10
  4545  001658  1966               	xorwf	(_menu_st+21)& (0+255),w,b
  4546  00165A  A4D8               	btfss	status,2,c
  4547  00165C  D004               	goto	l23043
  4548  00165E                     u27890:
  4549                           
  4550                           ; BSR set to: 1
  4551                           ;sm_MenuConfiguration_MC50.c: 345:                 {;sm_MenuConfiguration_MC50.c: 346:  
      +                                             SaveNVM_VarSystem(pageMemoryE);
  4552  00165E  0E01               	movlw	1
  4553  001660  ECAF  F047         	call	_SaveNVM_VarSystem
  4554                           
  4555                           ;sm_MenuConfiguration_MC50.c: 347:                 }
  4556  001664  D017               	goto	l23055
  4557  001666                     l23043:
  4558                           
  4559                           ; BSR set to: 1
  4560                           ;sm_MenuConfiguration_MC50.c: 349:                 {;sm_MenuConfiguration_MC50.c: 350:  
      +                                             if (menu_st.parameterSelected == 1 && edit_Param.Value[0] >=1 && menu
      +                          _st.actualMenu == P2_SMenu )
  4561  001666  0568               	decf	(_menu_st+23)& (0+255),w,b
  4562  001668  A4D8               	btfss	status,2,c
  4563  00166A  D00E               	goto	l23051
  4564                           
  4565                           ; BSR set to: 1
  4566  00166C  C047  FFD9         	movff	_edit_Param+1,fsr2l	;volatile
  4567  001670  C048  FFDA         	movff	_edit_Param+2,fsr2h	;volatile
  4568  001674  50DF               	movf	indf2,w,c
  4569  001676  B4D8               	btfsc	status,2,c
  4570  001678  D007               	goto	l23051
  4571                           
  4572                           ; BSR set to: 1
  4573  00167A  0E06               	movlw	6
  4574  00167C  1966               	xorwf	(_menu_st+21)& (0+255),w,b
  4575  00167E  A4D8               	btfss	status,2,c
  4576  001680  D003               	goto	l23051
  4577                           
  4578                           ; BSR set to: 1
  4579                           ;sm_MenuConfiguration_MC50.c: 351:                     {;sm_MenuConfiguration_MC50.c: 35
      +                          2:                       var_sys_NVM.motorPower = 9;
  4580  001682  0E09               	movlw	9
  4581  001684  0100               	movlb	0	; () banked
  4582  001686  6F9A               	movwf	(_var_sys_NVM+2)& (0+255),b	;volatile
  4583  001688                     l23051:
  4584                           
  4585                           ;sm_MenuConfiguration_MC50.c: 355:                       SaveNVM_VarSystem(pageMemoryE);
  4586  001688  0E01               	movlw	1
  4587  00168A  ECAF  F047         	call	_SaveNVM_VarSystem
  4588                           
  4589                           ;sm_MenuConfiguration_MC50.c: 356:                       SaveNVM_VarSystem(pageMemoryP);
  4590  00168E  0E00               	movlw	0
  4591  001690  ECAF  F047         	call	_SaveNVM_VarSystem
  4592  001694                     l23055:
  4593                           
  4594                           ;sm_MenuConfiguration_MC50.c: 360:                 sm_send_event(&menuConfiguration_stat
      +                          eMachine, ev_ParameterIsSaved);
  4595  001694  0EBF               	movlw	low _menuConfiguration_stateMachine
  4596  001696  6E12               	movwf	sm_send_event@psm^0,c
  4597  001698  0E02               	movlw	high _menuConfiguration_stateMachine
  4598  00169A  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4599  00169C  0E00               	movlw	0
  4600  00169E  6E15               	movwf	(sm_send_event@event+1)^0,c
  4601  0016A0  0E04               	movlw	4
  4602  0016A2  6E14               	movwf	sm_send_event@event^0,c
  4603  0016A4  ECA7  F043         	call	_sm_send_event	;wreg free
  4604                           
  4605                           ;sm_MenuConfiguration_MC50.c: 363:                 menu_st.parameterSelected++;
  4606  0016A8  0101               	movlb	1	; () banked
  4607  0016AA  2B68               	incf	(_menu_st+23)& (0+255),f,b
  4608                           
  4609                           ; BSR set to: 1
  4610                           ;sm_MenuConfiguration_MC50.c: 364:                 if(menu_st.actualMenu<=E_Menu)
  4611  0016AC  0E02               	movlw	2
  4612  0016AE  6166               	cpfslt	(_menu_st+21)& (0+255),b
  4613  0016B0  D005               	goto	l23065
  4614                           
  4615                           ; BSR set to: 1
  4616                           ;sm_MenuConfiguration_MC50.c: 365:                 {;sm_MenuConfiguration_MC50.c: 366:  
      +                                             menu_st.lastMainParameterSelected++;
  4617  0016B2  2B69               	incf	(_menu_st+24)& (0+255),f,b
  4618                           
  4619                           ; BSR set to: 1
  4620                           ;sm_MenuConfiguration_MC50.c: 367:                     load_New_Menu(menu_st.actualMenu)
      +                          ;
  4621  0016B4  5166               	movf	(_menu_st+21)& (0+255),w,b
  4622  0016B6  EC2B  F021         	call	_load_New_Menu
  4623                           
  4624                           ;sm_MenuConfiguration_MC50.c: 368:                 }
  4625  0016BA  0012               	return	
  4626  0016BC                     l23065:
  4627                           
  4628                           ; BSR set to: 1
  4629  0016BC  5167               	movf	(_menu_st+22)& (0+255),w,b
  4630  0016BE  5D68               	subwf	(_menu_st+23)& (0+255),w,b
  4631  0016C0  A0D8               	btfss	status,0,c
  4632  0016C2  D005               	goto	l23071
  4633                           
  4634                           ; BSR set to: 1
  4635                           ;sm_MenuConfiguration_MC50.c: 370:                 {;sm_MenuConfiguration_MC50.c: 371:  
      +                                             menu_st.lastMainParameterSelected++;
  4636  0016C4  2B69               	incf	(_menu_st+24)& (0+255),f,b
  4637                           
  4638                           ; BSR set to: 1
  4639                           ;sm_MenuConfiguration_MC50.c: 372:                     load_New_Menu(menu_st.lastMenu);
  4640  0016C6  5165               	movf	(_menu_st+20)& (0+255),w,b
  4641  0016C8  EC2B  F021         	call	_load_New_Menu
  4642                           
  4643                           ;sm_MenuConfiguration_MC50.c: 373:                 }
  4644  0016CC  0012               	return	
  4645  0016CE                     l23071:
  4646                           
  4647                           ; BSR set to: 1
  4648                           ;sm_MenuConfiguration_MC50.c: 375:                 {;sm_MenuConfiguration_MC50.c: 376:  
      +                                             load_New_Menu(menu_st.actualMenu);
  4649  0016CE  5166               	movf	(_menu_st+21)& (0+255),w,b
  4650  0016D0  EC2B  F021         	call	_load_New_Menu
  4651  0016D4  0012               	return	
  4652  0016D6                     l23073:
  4653                           
  4654                           ; BSR set to: 0
  4655                           ;sm_MenuConfiguration_MC50.c: 382:         {;sm_MenuConfiguration_MC50.c: 383:          
      +                             if(ts_system.timeoutMenu<=0)
  4656  0016D6  0101               	movlb	1	; () banked
  4657  0016D8  BFAA               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  4658  0016DA  D005               	goto	u27950
  4659  0016DC  51AA               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  4660  0016DE  E102               	bnz	u27951
  4661  0016E0  05A9               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  4662  0016E2  B0D8               	btfsc	status,0,c
  4663  0016E4                     u27951:
  4664  0016E4  0012               	return	
  4665  0016E6                     u27950:
  4666                           
  4667                           ; BSR set to: 1
  4668                           ;sm_MenuConfiguration_MC50.c: 384:             {;sm_MenuConfiguration_MC50.c: 386:      
      +                                     if(auxCounter<=0){
  4669  0016E6  0100               	movlb	0	; () banked
  4670  0016E8  51FB               	movf	_auxCounter& (0+255),w,b
  4671  0016EA  11FC               	iorwf	(_auxCounter+1)& (0+255),w,b
  4672  0016EC  A4D8               	btfss	status,2,c
  4673  0016EE  D010               	goto	l23083
  4674                           
  4675                           ; BSR set to: 0
  4676                           ;sm_MenuConfiguration_MC50.c: 387:                     menu_st.lastMainParameterSelected
      +                          ++;
  4677  0016F0  0101               	movlb	1	; () banked
  4678  0016F2  2B69               	incf	(_menu_st+24)& (0+255),f,b
  4679                           
  4680                           ; BSR set to: 1
  4681                           ;sm_MenuConfiguration_MC50.c: 388:                     load_New_Menu(menu_st.actualMenu)
      +                          ;
  4682  0016F4  5166               	movf	(_menu_st+21)& (0+255),w,b
  4683  0016F6  EC2B  F021         	call	_load_New_Menu
  4684                           
  4685                           ;sm_MenuConfiguration_MC50.c: 389:                     sm_send_event(&menuConfiguration_
      +                          stateMachine, ev_ParameterIsSaved);
  4686  0016FA  0EBF               	movlw	low _menuConfiguration_stateMachine
  4687  0016FC  6E12               	movwf	sm_send_event@psm^0,c
  4688  0016FE  0E02               	movlw	high _menuConfiguration_stateMachine
  4689  001700  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4690  001702  0E00               	movlw	0
  4691  001704  6E15               	movwf	(sm_send_event@event+1)^0,c
  4692  001706  0E04               	movlw	4
  4693  001708  6E14               	movwf	sm_send_event@event^0,c
  4694  00170A  ECA7  F043         	call	_sm_send_event	;wreg free
  4695                           
  4696                           ;sm_MenuConfiguration_MC50.c: 390:                 }
  4697  00170E  0012               	return	
  4698  001710                     l23083:
  4699                           
  4700                           ; BSR set to: 0
  4701                           ;sm_MenuConfiguration_MC50.c: 392:                 {;sm_MenuConfiguration_MC50.c: 393:  
      +                                             ts_system.timeoutMenu=(1000/50)*3;
  4702  001710  0E00               	movlw	0
  4703  001712  0101               	movlb	1	; () banked
  4704  001714  6FAA               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4705  001716  0E3C               	movlw	60
  4706  001718  6FA9               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4707                           
  4708                           ; BSR set to: 1
  4709                           ;sm_MenuConfiguration_MC50.c: 394:                     edit_Param.tempValue=(unsigned ch
      +                          ar)(tempCounter/auxCounter);
  4710  00171A  C1FA  F010         	movff	_tempCounter,___lldiv@dividend
  4711  00171E  C1FB  F011         	movff	_tempCounter+1,___lldiv@dividend+1
  4712  001722  C1FC  F012         	movff	_tempCounter+2,___lldiv@dividend+2
  4713  001726  C1FD  F013         	movff	_tempCounter+3,___lldiv@dividend+3
  4714  00172A  C0FB  F014         	movff	_auxCounter,___lldiv@divisor
  4715  00172E  C0FC  F015         	movff	_auxCounter+1,___lldiv@divisor+1
  4716  001732  6A16               	clrf	(___lldiv@divisor+2)^0,c
  4717  001734  6A17               	clrf	(___lldiv@divisor+3)^0,c
  4718  001736  EC6C  F03F         	call	___lldiv	;wreg free
  4719  00173A  5010               	movf	?___lldiv^0,w,c
  4720  00173C  6E49               	movwf	(_edit_Param+3)^0,c	;volatile
  4721                           
  4722                           ;sm_MenuConfiguration_MC50.c: 395:                     tempCounter=tempCounter-(tempCoun
      +                          ter/auxCounter*auxCounter);
  4723  00173E  C0FB  F014         	movff	_auxCounter,___lldiv@divisor
  4724  001742  C0FC  F015         	movff	_auxCounter+1,___lldiv@divisor+1
  4725  001746  6A16               	clrf	(___lldiv@divisor+2)^0,c
  4726  001748  6A17               	clrf	(___lldiv@divisor+3)^0,c
  4727  00174A  C1FA  F010         	movff	_tempCounter,___lldiv@dividend
  4728  00174E  C1FB  F011         	movff	_tempCounter+1,___lldiv@dividend+1
  4729  001752  C1FC  F012         	movff	_tempCounter+2,___lldiv@dividend+2
  4730  001756  C1FD  F013         	movff	_tempCounter+3,___lldiv@dividend+3
  4731  00175A  EC6C  F03F         	call	___lldiv	;wreg free
  4732  00175E  C010  F01D         	movff	?___lldiv,___lmul@multiplier
  4733  001762  C011  F01E         	movff	?___lldiv+1,___lmul@multiplier+1
  4734  001766  C012  F01F         	movff	?___lldiv+2,___lmul@multiplier+2
  4735  00176A  C013  F020         	movff	?___lldiv+3,___lmul@multiplier+3
  4736  00176E  C0FB  F021         	movff	_auxCounter,___lmul@multiplicand
  4737  001772  C0FC  F022         	movff	_auxCounter+1,___lmul@multiplicand+1
  4738  001776  6A23               	clrf	(___lmul@multiplicand+2)^0,c
  4739  001778  6A24               	clrf	(___lmul@multiplicand+3)^0,c
  4740  00177A  ECB5  F044         	call	___lmul	;wreg free
  4741  00177E  501D               	movf	?___lmul^0,w,c
  4742  001780  0101               	movlb	1	; () banked
  4743  001782  5DFA               	subwf	_tempCounter& (0+255),w,b
  4744  001784  6FFA               	movwf	_tempCounter& (0+255),b
  4745  001786  501E               	movf	(?___lmul+1)^0,w,c
  4746  001788  59FB               	subwfb	(_tempCounter+1)& (0+255),w,b
  4747  00178A  6FFB               	movwf	(_tempCounter+1)& (0+255),b
  4748  00178C  501F               	movf	(?___lmul+2)^0,w,c
  4749  00178E  59FC               	subwfb	(_tempCounter+2)& (0+255),w,b
  4750  001790  6FFC               	movwf	(_tempCounter+2)& (0+255),b
  4751  001792  5020               	movf	(?___lmul+3)^0,w,c
  4752  001794  59FD               	subwfb	(_tempCounter+3)& (0+255),w,b
  4753  001796  6FFD               	movwf	(_tempCounter+3)& (0+255),b
  4754                           
  4755                           ; BSR set to: 1
  4756                           ;sm_MenuConfiguration_MC50.c: 396:                     auxCounter=auxCounter/100;
  4757  001798  C0FB  F010         	movff	_auxCounter,___lwdiv@dividend
  4758  00179C  C0FC  F011         	movff	_auxCounter+1,___lwdiv@dividend+1
  4759  0017A0  0E00               	movlw	0
  4760  0017A2  6E13               	movwf	(___lwdiv@divisor+1)^0,c
  4761  0017A4  0E64               	movlw	100
  4762  0017A6  6E12               	movwf	___lwdiv@divisor^0,c
  4763  0017A8  EC35  F045         	call	___lwdiv	;wreg free
  4764  0017AC  C010  F0FB         	movff	?___lwdiv,_auxCounter
  4765  0017B0  C011  F0FC         	movff	?___lwdiv+1,_auxCounter+1
  4766                           
  4767                           ;sm_MenuConfiguration_MC50.c: 397:                     SetSegmentValueIntermitentMain(ed
      +                          it_Param.tempValue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10),( 500/50));
  4768  0017B4  0E0A               	movlw	10
  4769  0017B6  6E10               	movwf	___lbdiv@divisor^0,c
  4770  0017B8  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4771  0017BA  EC92  F047         	call	___lbdiv
  4772  0017BE  0DF6               	mullw	246
  4773  0017C0  50F3               	movf	243,w,c
  4774  0017C2  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  4775  0017C4  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  4776  0017C6  0E00               	movlw	0
  4777  0017C8  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  4778  0017CA  0E0A               	movlw	10
  4779  0017CC  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  4780  0017CE  0E0A               	movlw	10
  4781  0017D0  6E10               	movwf	___lbdiv@divisor^0,c
  4782  0017D2  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4783  0017D4  EC92  F047         	call	___lbdiv
  4784  0017D8  EC38  F04B         	call	_SetSegmentValueIntermitentMain
  4785  0017DC  0012               	return	
  4786  0017DE                     l23093:
  4787                           
  4788                           ; BSR set to: 0
  4789                           ;sm_MenuConfiguration_MC50.c: 403:         {;sm_MenuConfiguration_MC50.c: 404:          
      +                             if(firstselectflag==1){
  4790  0017DE  0101               	movlb	1	; () banked
  4791  0017E0  05FE               	decf	_firstselectflag& (0+255),w,b
  4792  0017E2  A4D8               	btfss	status,2,c
  4793  0017E4  D004               	goto	l23097
  4794                           
  4795                           ; BSR set to: 1
  4796                           ;sm_MenuConfiguration_MC50.c: 405:                 edit_Param.tempValue=0;
  4797  0017E6  0E00               	movlw	0
  4798  0017E8  6E49               	movwf	(_edit_Param+3)^0,c	;volatile
  4799                           
  4800                           ;sm_MenuConfiguration_MC50.c: 406:                 firstselectflag=0;
  4801  0017EA  0E00               	movlw	0
  4802  0017EC  6FFE               	movwf	_firstselectflag& (0+255),b
  4803  0017EE                     l23097:
  4804                           
  4805                           ; BSR set to: 1
  4806                           ;sm_MenuConfiguration_MC50.c: 408:             controlSelectRemote();
  4807  0017EE  EC14  F01C         	call	_controlSelectRemote	;wreg free
  4808                           
  4809                           ;sm_MenuConfiguration_MC50.c: 409:         };sm_MenuConfiguration_MC50.c: 410:         b
      +                          reak;
  4810  0017F2  0012               	return	
  4811  0017F4                     l23099:
  4812                           
  4813                           ; BSR set to: 0
  4814                           ;sm_MenuConfiguration_MC50.c: 412:         {;sm_MenuConfiguration_MC50.c: 413:          
      +                             controlSaveRemote();
  4815  0017F4  EC0F  F03B         	call	_controlSaveRemote	;wreg free
  4816                           
  4817                           ;sm_MenuConfiguration_MC50.c: 414:         };sm_MenuConfiguration_MC50.c: 415:         b
      +                          reak;
  4818  0017F8  0012               	return	
  4819  0017FA                     l23101:
  4820                           
  4821                           ; BSR set to: 0
  4822                           ;sm_MenuConfiguration_MC50.c: 417:         {;sm_MenuConfiguration_MC50.c: 418:          
      +                             controlLearnDigit();
  4823  0017FA  EC17  F048         	call	_controlLearnDigit	;wreg free
  4824                           
  4825                           ;sm_MenuConfiguration_MC50.c: 419:             if(var_sys.LearningIsEnabled==NO)
  4826  0017FE  0101               	movlb	1	; () banked
  4827  001800  5126               	movf	(_var_sys+38)& (0+255),w,b	;volatile
  4828  001802  A4D8               	btfss	status,2,c
  4829  001804  0012               	return	
  4830                           
  4831                           ; BSR set to: 1
  4832                           ;sm_MenuConfiguration_MC50.c: 420:             {;sm_MenuConfiguration_MC50.c: 421:      
      +                                     sm_send_event(&main_stateMachine, ev_goto_StandBy);
  4833  001806  0EEE               	movlw	low _main_stateMachine
  4834  001808  6E12               	movwf	sm_send_event@psm^0,c
  4835  00180A  0E01               	movlw	high _main_stateMachine
  4836  00180C  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4837  00180E  0E00               	movlw	0
  4838  001810  6E15               	movwf	(sm_send_event@event+1)^0,c
  4839  001812  0E07               	movlw	7
  4840  001814  6E14               	movwf	sm_send_event@event^0,c
  4841  001816  ECA7  F043         	call	_sm_send_event	;wreg free
  4842                           
  4843                           ;sm_MenuConfiguration_MC50.c: 422:                 sm_send_event(&menuConfiguration_stat
      +                          eMachine, ev_ParameterIsSaved);
  4844  00181A  0EBF               	movlw	low _menuConfiguration_stateMachine
  4845  00181C  6E12               	movwf	sm_send_event@psm^0,c
  4846  00181E  0E02               	movlw	high _menuConfiguration_stateMachine
  4847  001820  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4848  001822  0E00               	movlw	0
  4849  001824  6E15               	movwf	(sm_send_event@event+1)^0,c
  4850  001826  0E04               	movlw	4
  4851  001828  6E14               	movwf	sm_send_event@event^0,c
  4852  00182A  ECA7  F043         	call	_sm_send_event	;wreg free
  4853                           
  4854                           ;sm_MenuConfiguration_MC50.c: 423:                 SetSegmentValueMain(dMinus,dMinus);
  4855  00182E  0E18               	movlw	24
  4856  001830  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4857  001832  0E18               	movlw	24
  4858  001834  EC9C  F04A         	call	_SetSegmentValueMain
  4859                           
  4860                           ; BSR set to: 0
  4861                           ;sm_MenuConfiguration_MC50.c: 424:                 SaveNVM_VarSystem(pageMemoryCounters)
      +                          ;
  4862  001838  0E02               	movlw	2
  4863  00183A  ECAF  F047         	call	_SaveNVM_VarSystem
  4864  00183E  D5E9               	goto	l22939
  4865  001840                     l23117:
  4866  001840  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  4867  001844  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  4868  001848  50DF               	movf	indf2,w,c
  4869  00184A  0100               	movlb	0	; () banked
  4870  00184C  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  4871  00184E  6BEC               	clrf	(??_sm_execute_menuConfiguration+1)& (0+255),b
  4872                           
  4873                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4874                           ; Switch size 1, requested type "simple"
  4875                           ; Number of cases is 1, Range of values is 0 to 0
  4876                           ; switch strategies available:
  4877                           ; Name         Instructions Cycles
  4878                           ; simple_byte            4     3 (average)
  4879                           ;	Chosen strategy is simple_byte
  4880  001850  51EC               	movf	(??_sm_execute_menuConfiguration+1)& (0+255),w,b
  4881  001852  0A00               	xorlw	0	; case 0
  4882  001854  A4D8               	btfss	status,2,c
  4883  001856  0012               	return	
  4884                           
  4885                           ; BSR set to: 0
  4886                           ; Switch size 1, requested type "simple"
  4887                           ; Number of cases is 7, Range of values is 0 to 6
  4888                           ; switch strategies available:
  4889                           ; Name         Instructions Cycles
  4890                           ; simple_byte           22    12 (average)
  4891                           ;	Chosen strategy is simple_byte
  4892  001858  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  4893  00185A  0A00               	xorlw	0	; case 0
  4894  00185C  B4D8               	btfsc	status,2,c
  4895  00185E  D431               	goto	l22807
  4896  001860  0A01               	xorlw	1	; case 1
  4897  001862  B4D8               	btfsc	status,2,c
  4898  001864  D5FC               	goto	l22957
  4899  001866  0A03               	xorlw	3	; case 2
  4900  001868  B4D8               	btfsc	status,2,c
  4901  00186A  D6CF               	goto	l23025
  4902  00186C  0A01               	xorlw	1	; case 3
  4903  00186E  B4D8               	btfsc	status,2,c
  4904  001870  D732               	goto	l23073
  4905  001872  0A07               	xorlw	7	; case 4
  4906  001874  B4D8               	btfsc	status,2,c
  4907  001876  D7B3               	goto	l23093
  4908  001878  0A01               	xorlw	1	; case 5
  4909  00187A  B4D8               	btfsc	status,2,c
  4910  00187C  D7BB               	goto	l23099
  4911  00187E  0A03               	xorlw	3	; case 6
  4912  001880  A4D8               	btfss	status,2,c
  4913  001882  0012               	return	
  4914  001884  D7BA               	goto	l23101
  4915  001886                     __end_of_sm_execute_menuConfiguration:
  4916                           	callstack 0
  4917                           
  4918 ;; *************** function _setValueToEdit *****************
  4919 ;; Defined at:
  4920 ;;		line 648 in file "sm_MenuConfiguration_MC50.c"
  4921 ;; Parameters:    Size  Location     Type
  4922 ;;  menuType        1    wreg     enum E10813
  4923 ;;  ParameterSel    1   57[COMRAM] unsigned char 
  4924 ;; Auto vars:     Size  Location     Type
  4925 ;;  menuType        1    6[BANK0 ] enum E10813
  4926 ;;  posindex        1    7[BANK0 ] unsigned char 
  4927 ;;  haveValueToE    1    8[BANK0 ] unsigned char 
  4928 ;; Return value:  Size  Location     Type
  4929 ;;                  1    wreg      unsigned char 
  4930 ;; Registers used:
  4931 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4932 ;; Tracked objects:
  4933 ;;		On entry : 3F/1
  4934 ;;		On exit  : 3F/0
  4935 ;;		Unchanged: 0/0
  4936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4937 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4938 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4939 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4940 ;;      Totals:         1       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4941 ;;Total ram usage:        6 bytes
  4942 ;; Hardware stack levels used: 1
  4943 ;; Hardware stack levels required when called: 14
  4944 ;; This function calls:
  4945 ;;		_InitReceiver
  4946 ;;		_SaveNVM_VarSystem
  4947 ;;		_cmdMemoryIsEmpty
  4948 ;;		_load_New_Menu
  4949 ;;		_sm_send_event
  4950 ;; This function is called by:
  4951 ;;		_sm_execute_menuConfiguration
  4952 ;; This function uses a non-reentrant model
  4953 ;;
  4954                           
  4955                           	psect	text3
  4956  0024E8                     __ptext3:
  4957                           	callstack 0
  4958  0024E8                     _setValueToEdit:
  4959                           	callstack 14
  4960                           
  4961                           ;incstack = 0
  4962                           ;setValueToEdit@menuType stored from wreg
  4963  0024E8  0100               	movlb	0	; () banked
  4964  0024EA  6FDE               	movwf	setValueToEdit@menuType& (0+255),b
  4965                           
  4966                           ;sm_MenuConfiguration_MC50.c: 649:     char haveValueToEdit=0;
  4967  0024EC  0E00               	movlw	0
  4968  0024EE  0100               	movlb	0	; () banked
  4969  0024F0  6FE0               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  4970                           
  4971                           ;sm_MenuConfiguration_MC50.c: 652:     switch (menuType)
  4972  0024F2  D254               	goto	l21353
  4973  0024F4                     l3358:
  4974                           
  4975                           ; BSR set to: 0
  4976                           ;sm_MenuConfiguration_MC50.c: 655:         {;sm_MenuConfiguration_MC50.c: 656:          
      +                             menu_st.lastMainParameterSelected= menu_st.parameterSelected;
  4977  0024F4  C168  F169         	movff	_menu_st+23,_menu_st+24
  4978                           
  4979                           ; BSR set to: 0
  4980                           ;sm_MenuConfiguration_MC50.c: 657:             edit_Param.Min=0;
  4981  0024F8  0E00               	movlw	0
  4982  0024FA  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  4983                           
  4984                           ;sm_MenuConfiguration_MC50.c: 658:             switch (ParameterSelected)
  4985  0024FC  D034               	goto	l21109
  4986  0024FE                     l21063:
  4987                           
  4988                           ; BSR set to: 0
  4989                           ;sm_MenuConfiguration_MC50.c: 661:                 {;sm_MenuConfiguration_MC50.c: 662:  
      +                                             load_New_Menu(P0_SMenu);
  4990  0024FE  0E04               	movlw	4
  4991  002500  EC2B  F021         	call	_load_New_Menu
  4992                           
  4993                           ;sm_MenuConfiguration_MC50.c: 664:                 };sm_MenuConfiguration_MC50.c: 665:  
      +                                         break;
  4994  002504  D274               	goto	l21355
  4995  002506                     l21065:
  4996                           
  4997                           ; BSR set to: 0
  4998                           ;sm_MenuConfiguration_MC50.c: 667:                 {;sm_MenuConfiguration_MC50.c: 668:  
      +                                             load_New_Menu(P1_SMenu);
  4999  002506  0E05               	movlw	5
  5000  002508  EC2B  F021         	call	_load_New_Menu
  5001                           
  5002                           ;sm_MenuConfiguration_MC50.c: 669:                 };sm_MenuConfiguration_MC50.c: 670:  
      +                                         break;
  5003  00250C  D270               	goto	l21355
  5004  00250E                     l21067:
  5005                           
  5006                           ; BSR set to: 0
  5007                           ;sm_MenuConfiguration_MC50.c: 672:                 {;sm_MenuConfiguration_MC50.c: 673:  
      +                                             load_New_Menu(P2_SMenu);
  5008  00250E  0E06               	movlw	6
  5009  002510  EC2B  F021         	call	_load_New_Menu
  5010                           
  5011                           ;sm_MenuConfiguration_MC50.c: 674:                 };sm_MenuConfiguration_MC50.c: 675:  
      +                                         break;
  5012  002514  D26C               	goto	l21355
  5013  002516                     l21069:
  5014                           
  5015                           ; BSR set to: 0
  5016                           ;sm_MenuConfiguration_MC50.c: 677:                 {;sm_MenuConfiguration_MC50.c: 678:  
      +                                             edit_Param.Max=99;
  5017  002516  0E63               	movlw	99
  5018  002518  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5019                           
  5020                           ; BSR set to: 0
  5021                           ;sm_MenuConfiguration_MC50.c: 680:                     edit_Param.tempValue=var_sys_NVM.
      +                          walkTime;
  5022  00251A  C09C  F049         	movff	_var_sys_NVM+4,_edit_Param+3	;volatile
  5023                           
  5024                           ; BSR set to: 0
  5025                           ;sm_MenuConfiguration_MC50.c: 681:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.walkTime;
  5026  00251E  0E9C               	movlw	low (_var_sys_NVM+4)
  5027  002520                     L13:
  5028  002520  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5029  002522  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5030                           
  5031                           ; BSR set to: 0
  5032                           ;sm_MenuConfiguration_MC50.c: 682:                     haveValueToEdit=1;
  5033  002524  0E01               	movlw	1
  5034  002526  6FE0               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  5035                           
  5036                           ;sm_MenuConfiguration_MC50.c: 683:                 };sm_MenuConfiguration_MC50.c: 684:  
      +                                         break;
  5037  002528  D262               	goto	l21355
  5038  00252A                     l21077:
  5039                           
  5040                           ; BSR set to: 0
  5041                           ;sm_MenuConfiguration_MC50.c: 686:                 {;sm_MenuConfiguration_MC50.c: 687:  
      +                                             load_New_Menu(P4_SMenu);
  5042  00252A  0E07               	movlw	7
  5043  00252C  EC2B  F021         	call	_load_New_Menu
  5044                           
  5045                           ;sm_MenuConfiguration_MC50.c: 688:                 };sm_MenuConfiguration_MC50.c: 689:  
      +                                         break;
  5046  002530  D25E               	goto	l21355
  5047  002532                     l21079:
  5048                           
  5049                           ; BSR set to: 0
  5050                           ;sm_MenuConfiguration_MC50.c: 691:                 {;sm_MenuConfiguration_MC50.c: 692:  
      +                                             load_New_Menu(P5_SMenu);
  5051  002532  0E08               	movlw	8
  5052  002534  EC2B  F021         	call	_load_New_Menu
  5053                           
  5054                           ;sm_MenuConfiguration_MC50.c: 693:                 };sm_MenuConfiguration_MC50.c: 694:  
      +                                         break;
  5055  002538  D25A               	goto	l21355
  5056  00253A                     l21081:
  5057                           
  5058                           ; BSR set to: 0
  5059                           ;sm_MenuConfiguration_MC50.c: 696:                 {;sm_MenuConfiguration_MC50.c: 697:  
      +                                             load_New_Menu(P6_SMenu);
  5060  00253A  0E09               	movlw	9
  5061  00253C  EC2B  F021         	call	_load_New_Menu
  5062                           
  5063                           ;sm_MenuConfiguration_MC50.c: 698:                 };sm_MenuConfiguration_MC50.c: 699:  
      +                                         break;
  5064  002540  D256               	goto	l21355
  5065  002542                     l21083:
  5066                           
  5067                           ; BSR set to: 0
  5068                           ;sm_MenuConfiguration_MC50.c: 701:                 {;sm_MenuConfiguration_MC50.c: 702:  
      +                                             edit_Param.Max=2;
  5069  002542  0E02               	movlw	2
  5070  002544  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5071                           
  5072                           ; BSR set to: 0
  5073                           ;sm_MenuConfiguration_MC50.c: 704:                     edit_Param.tempValue=var_sys_NVM.
      +                          operationMode;
  5074  002546  C0A4  F049         	movff	_var_sys_NVM+12,_edit_Param+3	;volatile
  5075                           
  5076                           ; BSR set to: 0
  5077                           ;sm_MenuConfiguration_MC50.c: 705:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.operationMode;
  5078  00254A  0EA4               	movlw	low (_var_sys_NVM+12)
  5079  00254C  D7E9               	goto	L13
  5080  00254E                     l21091:
  5081                           
  5082                           ; BSR set to: 0
  5083                           ;sm_MenuConfiguration_MC50.c: 710:                 {;sm_MenuConfiguration_MC50.c: 711:  
      +                                             edit_Param.Max=3;
  5084  00254E  0E03               	movlw	3
  5085  002550  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5086                           
  5087                           ; BSR set to: 0
  5088                           ;sm_MenuConfiguration_MC50.c: 713:                     edit_Param.tempValue=var_sys_NVM.
      +                          flashLightMode;
  5089  002552  C0A5  F049         	movff	_var_sys_NVM+13,_edit_Param+3	;volatile
  5090                           
  5091                           ; BSR set to: 0
  5092                           ;sm_MenuConfiguration_MC50.c: 714:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.flashLightMode;
  5093  002556  0EA5               	movlw	low (_var_sys_NVM+13)
  5094  002558  D7E3               	goto	L13
  5095  00255A                     l21099:
  5096                           
  5097                           ; BSR set to: 0
  5098                           ;sm_MenuConfiguration_MC50.c: 719:                 {;sm_MenuConfiguration_MC50.c: 720:  
      +                                             edit_Param.Max=1;
  5099  00255A  0E01               	movlw	1
  5100  00255C  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5101                           
  5102                           ; BSR set to: 0
  5103                           ;sm_MenuConfiguration_MC50.c: 722:                     edit_Param.tempValue=var_sys_NVM.
      +                          programmingDistance;
  5104  00255E  C0A6  F049         	movff	_var_sys_NVM+14,_edit_Param+3	;volatile
  5105                           
  5106                           ; BSR set to: 0
  5107                           ;sm_MenuConfiguration_MC50.c: 723:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.programmingDistance;
  5108  002562  0EA6               	movlw	low (_var_sys_NVM+14)
  5109  002564  D7DD               	goto	L13
  5110  002566                     l21109:
  5111                           
  5112                           ; BSR set to: 0
  5113  002566  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5114  002568  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5115  00256A  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5116                           
  5117                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5118                           ; Switch size 1, requested type "simple"
  5119                           ; Number of cases is 1, Range of values is 0 to 0
  5120                           ; switch strategies available:
  5121                           ; Name         Instructions Cycles
  5122                           ; simple_byte            4     3 (average)
  5123                           ;	Chosen strategy is simple_byte
  5124  00256C  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5125  00256E  0A00               	xorlw	0	; case 0
  5126  002570  A4D8               	btfss	status,2,c
  5127  002572  D23D               	goto	l21355
  5128                           
  5129                           ; BSR set to: 0
  5130                           ; Switch size 1, requested type "simple"
  5131                           ; Number of cases is 10, Range of values is 0 to 9
  5132                           ; switch strategies available:
  5133                           ; Name         Instructions Cycles
  5134                           ; simple_byte           31    16 (average)
  5135                           ;	Chosen strategy is simple_byte
  5136  002574  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5137  002576  0A00               	xorlw	0	; case 0
  5138  002578  B4D8               	btfsc	status,2,c
  5139  00257A  D7C1               	goto	l21063
  5140  00257C  0A01               	xorlw	1	; case 1
  5141  00257E  B4D8               	btfsc	status,2,c
  5142  002580  D7C2               	goto	l21065
  5143  002582  0A03               	xorlw	3	; case 2
  5144  002584  B4D8               	btfsc	status,2,c
  5145  002586  D7C3               	goto	l21067
  5146  002588  0A01               	xorlw	1	; case 3
  5147  00258A  B4D8               	btfsc	status,2,c
  5148  00258C  D7C4               	goto	l21069
  5149  00258E  0A07               	xorlw	7	; case 4
  5150  002590  B4D8               	btfsc	status,2,c
  5151  002592  D7CB               	goto	l21077
  5152  002594  0A01               	xorlw	1	; case 5
  5153  002596  B4D8               	btfsc	status,2,c
  5154  002598  D7CC               	goto	l21079
  5155  00259A  0A03               	xorlw	3	; case 6
  5156  00259C  B4D8               	btfsc	status,2,c
  5157  00259E  D7CD               	goto	l21081
  5158  0025A0  0A01               	xorlw	1	; case 7
  5159  0025A2  B4D8               	btfsc	status,2,c
  5160  0025A4  D7CE               	goto	l21083
  5161  0025A6  0A0F               	xorlw	15	; case 8
  5162  0025A8  B4D8               	btfsc	status,2,c
  5163  0025AA  D7D1               	goto	l21091
  5164  0025AC  0A01               	xorlw	1	; case 9
  5165  0025AE  B4D8               	btfsc	status,2,c
  5166  0025B0  D7D4               	goto	l21099
  5167  0025B2  D21D               	goto	l21355
  5168  0025B4                     l3372:
  5169                           
  5170                           ; BSR set to: 0
  5171                           ;sm_MenuConfiguration_MC50.c: 733:         {;sm_MenuConfiguration_MC50.c: 734:          
      +                             menu_st.lastMainParameterSelected= menu_st.parameterSelected;
  5172  0025B4  C168  F169         	movff	_menu_st+23,_menu_st+24
  5173                           
  5174                           ; BSR set to: 0
  5175                           ;sm_MenuConfiguration_MC50.c: 735:             edit_Param.Max=1;
  5176  0025B8  0E01               	movlw	1
  5177  0025BA  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5178                           
  5179                           ;sm_MenuConfiguration_MC50.c: 736:             edit_Param.Min=0;
  5180  0025BC  0E00               	movlw	0
  5181  0025BE  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5182                           
  5183                           ;sm_MenuConfiguration_MC50.c: 737:             switch (ParameterSelected)
  5184  0025C0  D057               	goto	l21165
  5185  0025C2                     l21113:
  5186                           
  5187                           ; BSR set to: 0
  5188                           ;sm_MenuConfiguration_MC50.c: 740:                 {;sm_MenuConfiguration_MC50.c: 741:  
      +                                             load_New_Menu(E0_SMenu);
  5189  0025C2  0E0A               	movlw	10
  5190  0025C4  EC2B  F021         	call	_load_New_Menu
  5191                           
  5192                           ;sm_MenuConfiguration_MC50.c: 742:                 };sm_MenuConfiguration_MC50.c: 743:  
      +                                         break;
  5193  0025C8  D212               	goto	l21355
  5194  0025CA                     l21115:
  5195                           
  5196                           ; BSR set to: 0
  5197                           ;sm_MenuConfiguration_MC50.c: 745:                 {;sm_MenuConfiguration_MC50.c: 748:  
      +                                             load_New_Menu(E1_SMenu);
  5198  0025CA  0E0B               	movlw	11
  5199  0025CC  EC2B  F021         	call	_load_New_Menu
  5200                           
  5201                           ;sm_MenuConfiguration_MC50.c: 750:                 };sm_MenuConfiguration_MC50.c: 751:  
      +                                         break;
  5202  0025D0  D20E               	goto	l21355
  5203  0025D2                     l21117:
  5204                           
  5205                           ; BSR set to: 0
  5206                           ;sm_MenuConfiguration_MC50.c: 753:                 {;sm_MenuConfiguration_MC50.c: 754:  
      +                                             edit_Param.Max=99;
  5207  0025D2  0E63               	movlw	99
  5208  0025D4  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5209                           
  5210                           ; BSR set to: 0
  5211                           ;sm_MenuConfiguration_MC50.c: 756:                     edit_Param.tempValue=var_sys_NVM.
      +                          ligthTime;
  5212  0025D6  C0AC  F049         	movff	_var_sys_NVM+20,_edit_Param+3	;volatile
  5213                           
  5214                           ; BSR set to: 0
  5215                           ;sm_MenuConfiguration_MC50.c: 757:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.ligthTime;
  5216  0025DA  0EAC               	movlw	low (_var_sys_NVM+20)
  5217  0025DC  D7A1               	goto	L13
  5218  0025DE                     l21125:
  5219                           
  5220                           ; BSR set to: 0
  5221                           ;sm_MenuConfiguration_MC50.c: 762:                 {;sm_MenuConfiguration_MC50.c: 763:  
      +                                            edit_Param.Max=9;
  5222  0025DE  0E09               	movlw	9
  5223  0025E0  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5224                           
  5225                           ;sm_MenuConfiguration_MC50.c: 764:                    edit_Param.Min=1;
  5226  0025E2  0E01               	movlw	1
  5227  0025E4  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5228                           
  5229                           ; BSR set to: 0
  5230                           ;sm_MenuConfiguration_MC50.c: 765:                    edit_Param.tempValue=var_sys_NVM.f
      +                          olow_me;
  5231  0025E6  C0AD  F049         	movff	_var_sys_NVM+21,_edit_Param+3	;volatile
  5232                           
  5233                           ; BSR set to: 0
  5234                           ;sm_MenuConfiguration_MC50.c: 766:                    edit_Param.Value=(unsigned char*)&
      +                          var_sys_NVM.folow_me;
  5235  0025EA  0EAD               	movlw	low (_var_sys_NVM+21)
  5236  0025EC  D799               	goto	L13
  5237  0025EE                     l3380:
  5238                           
  5239                           ; BSR set to: 0
  5240                           ;sm_MenuConfiguration_MC50.c: 778:                 {;sm_MenuConfiguration_MC50.c: 779:  
      +                                            edit_Param.tempValue=var_sys_NVM.electricBrake;
  5241  0025EE  C0AF  F049         	movff	_var_sys_NVM+23,_edit_Param+3	;volatile
  5242                           
  5243                           ; BSR set to: 0
  5244                           ;sm_MenuConfiguration_MC50.c: 780:                    edit_Param.Value=(unsigned char*)&
      +                          var_sys_NVM.electricBrake;
  5245  0025F2  0EAF               	movlw	low (_var_sys_NVM+23)
  5246  0025F4  D795               	goto	L13
  5247  0025F6                     l21137:
  5248                           
  5249                           ; BSR set to: 0
  5250                           ;sm_MenuConfiguration_MC50.c: 785:                 {;sm_MenuConfiguration_MC50.c: 786:  
      +                                             edit_Param.Max=9;
  5251  0025F6  0E09               	movlw	9
  5252  0025F8  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5253                           
  5254                           ;sm_MenuConfiguration_MC50.c: 787:                     edit_Param.Min=1;
  5255  0025FA  0E01               	movlw	1
  5256  0025FC  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5257                           
  5258                           ; BSR set to: 0
  5259                           ;sm_MenuConfiguration_MC50.c: 788:                     edit_Param.tempValue=var_sys_NVM.
      +                          velocityDecelaration;
  5260  0025FE  C0B0  F049         	movff	_var_sys_NVM+24,_edit_Param+3	;volatile
  5261                           
  5262                           ; BSR set to: 0
  5263                           ;sm_MenuConfiguration_MC50.c: 789:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.velocityDecelaration;
  5264  002602  0EB0               	movlw	low (_var_sys_NVM+24)
  5265  002604  D78D               	goto	L13
  5266  002606                     l21145:
  5267                           
  5268                           ; BSR set to: 0
  5269                           ;sm_MenuConfiguration_MC50.c: 794:                 {;sm_MenuConfiguration_MC50.c: 795:  
      +                                             edit_Param.tempValue=0;
  5270  002606  0E00               	movlw	0
  5271  002608  6E49               	movwf	(_edit_Param+3)^0,c	;volatile
  5272                           
  5273                           ;sm_MenuConfiguration_MC50.c: 796:                     ts_system.timeoutMenu=0;
  5274  00260A  0E00               	movlw	0
  5275  00260C  0101               	movlb	1	; () banked
  5276  00260E  6FAA               	movwf	(_ts_system+15)& (0+255),b	;volatile
  5277  002610  0E00               	movlw	0
  5278  002612  6FA9               	movwf	(_ts_system+14)& (0+255),b	;volatile
  5279                           
  5280                           ;sm_MenuConfiguration_MC50.c: 798:                     auxCounter=10000;
  5281  002614  0E27               	movlw	39
  5282  002616  0100               	movlb	0	; () banked
  5283  002618  6FFC               	movwf	(_auxCounter+1)& (0+255),b
  5284  00261A  0E10               	movlw	16
  5285  00261C  6FFB               	movwf	_auxCounter& (0+255),b
  5286                           
  5287                           ;sm_MenuConfiguration_MC50.c: 799:                     ts_system.timeBetweenSaveCounters
      +                          =0;
  5288  00261E  0E00               	movlw	0
  5289  002620  0101               	movlb	1	; () banked
  5290  002622  6FC2               	movwf	(_ts_system+39)& (0+255),b	;volatile
  5291  002624  0E00               	movlw	0
  5292  002626  6FC1               	movwf	(_ts_system+38)& (0+255),b	;volatile
  5293                           
  5294                           ; BSR set to: 1
  5295                           ;sm_MenuConfiguration_MC50.c: 800:                     tempCounter=var_sys.actualCounter
      +                          Moves;
  5296  002628  C13C  F1FA         	movff	_var_sys+60,_tempCounter	;volatile
  5297  00262C  C13D  F1FB         	movff	_var_sys+61,_tempCounter+1	;volatile
  5298  002630  C13E  F1FC         	movff	_var_sys+62,_tempCounter+2	;volatile
  5299  002634  C13F  F1FD         	movff	_var_sys+63,_tempCounter+3	;volatile
  5300                           
  5301                           ; BSR set to: 1
  5302                           ;sm_MenuConfiguration_MC50.c: 801:                     sm_send_event(&menuConfiguration_
      +                          stateMachine, ev_showCounter);
  5303  002638  0EBF               	movlw	low _menuConfiguration_stateMachine
  5304  00263A  6E12               	movwf	sm_send_event@psm^0,c
  5305  00263C  0E02               	movlw	high _menuConfiguration_stateMachine
  5306  00263E  6E13               	movwf	(sm_send_event@psm+1)^0,c
  5307  002640  0E00               	movlw	0
  5308  002642  6E15               	movwf	(sm_send_event@event+1)^0,c
  5309  002644  0E05               	movlw	5
  5310  002646  6E14               	movwf	sm_send_event@event^0,c
  5311  002648  ECA7  F043         	call	_sm_send_event	;wreg free
  5312                           
  5313                           ;sm_MenuConfiguration_MC50.c: 802:                 };sm_MenuConfiguration_MC50.c: 803:  
      +                                         break;
  5314  00264C  D1D0               	goto	l21355
  5315  00264E                     l21151:
  5316                           
  5317                           ; BSR set to: 0
  5318                           ;sm_MenuConfiguration_MC50.c: 805:                 {;sm_MenuConfiguration_MC50.c: 806:  
      +                                             edit_Param.tempValue=0;
  5319  00264E  0E00               	movlw	0
  5320  002650  6E49               	movwf	(_edit_Param+3)^0,c	;volatile
  5321                           
  5322                           ;sm_MenuConfiguration_MC50.c: 807:                     haveValueToEdit=1;
  5323  002652  0E01               	movlw	1
  5324  002654  6FE0               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  5325                           
  5326                           ; BSR set to: 0
  5327                           ;sm_MenuConfiguration_MC50.c: 808:                     edit_Param.Value = 0;
  5328  002656  0E00               	movlw	0
  5329  002658  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5330  00265A  0E00               	movlw	0
  5331  00265C  6E48               	movwf	(_edit_Param+2)^0,c	;volatile
  5332                           
  5333                           ;sm_MenuConfiguration_MC50.c: 809:                 };sm_MenuConfiguration_MC50.c: 810:  
      +                                         break;
  5334  00265E  D1C7               	goto	l21355
  5335  002660                     l21155:
  5336                           
  5337                           ; BSR set to: 0
  5338                           ;sm_MenuConfiguration_MC50.c: 812:                 {;sm_MenuConfiguration_MC50.c: 813:  
      +                                             edit_Param.Max=3;
  5339  002660  0E03               	movlw	3
  5340  002662  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5341                           
  5342                           ;sm_MenuConfiguration_MC50.c: 814:                     edit_Param.Min=0;
  5343  002664  0E00               	movlw	0
  5344  002666  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5345                           
  5346                           ; BSR set to: 0
  5347                           ;sm_MenuConfiguration_MC50.c: 815:                     edit_Param.tempValue=var_sys_NVM.
      +                          flashRGBMode;
  5348  002668  C0B1  F049         	movff	_var_sys_NVM+25,_edit_Param+3	;volatile
  5349                           
  5350                           ; BSR set to: 0
  5351                           ;sm_MenuConfiguration_MC50.c: 816:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.flashRGBMode;
  5352  00266C  0EB1               	movlw	low (_var_sys_NVM+25)
  5353  00266E  D758               	goto	L13
  5354  002670                     l21165:
  5355                           
  5356                           ; BSR set to: 0
  5357  002670  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5358  002672  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5359  002674  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5360                           
  5361                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5362                           ; Switch size 1, requested type "simple"
  5363                           ; Number of cases is 1, Range of values is 0 to 0
  5364                           ; switch strategies available:
  5365                           ; Name         Instructions Cycles
  5366                           ; simple_byte            4     3 (average)
  5367                           ;	Chosen strategy is simple_byte
  5368  002676  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5369  002678  0A00               	xorlw	0	; case 0
  5370  00267A  A4D8               	btfss	status,2,c
  5371  00267C  D1B8               	goto	l21355
  5372                           
  5373                           ; BSR set to: 0
  5374                           ; Switch size 1, requested type "simple"
  5375                           ; Number of cases is 10, Range of values is 0 to 9
  5376                           ; switch strategies available:
  5377                           ; Name         Instructions Cycles
  5378                           ; simple_byte           31    16 (average)
  5379                           ;	Chosen strategy is simple_byte
  5380  00267E  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5381  002680  0A00               	xorlw	0	; case 0
  5382  002682  B4D8               	btfsc	status,2,c
  5383  002684  D79E               	goto	l21113
  5384  002686  0A01               	xorlw	1	; case 1
  5385  002688  B4D8               	btfsc	status,2,c
  5386  00268A  D79F               	goto	l21115
  5387  00268C  0A03               	xorlw	3	; case 2
  5388  00268E  B4D8               	btfsc	status,2,c
  5389  002690  D7A0               	goto	l21117
  5390  002692  0A01               	xorlw	1	; case 3
  5391  002694  B4D8               	btfsc	status,2,c
  5392  002696  D7A3               	goto	l21125
  5393  002698  0A07               	xorlw	7	; case 4
  5394  00269A  B4D8               	btfsc	status,2,c
  5395  00269C  D1A8               	goto	l21355
  5396  00269E  0A01               	xorlw	1	; case 5
  5397  0026A0  B4D8               	btfsc	status,2,c
  5398  0026A2  D7A5               	goto	l3380
  5399  0026A4  0A03               	xorlw	3	; case 6
  5400  0026A6  B4D8               	btfsc	status,2,c
  5401  0026A8  D7A6               	goto	l21137
  5402  0026AA  0A01               	xorlw	1	; case 7
  5403  0026AC  B4D8               	btfsc	status,2,c
  5404  0026AE  D7AB               	goto	l21145
  5405  0026B0  0A0F               	xorlw	15	; case 8
  5406  0026B2  B4D8               	btfsc	status,2,c
  5407  0026B4  D7CC               	goto	l21151
  5408  0026B6  0A01               	xorlw	1	; case 9
  5409  0026B8  B4D8               	btfsc	status,2,c
  5410  0026BA  D7D2               	goto	l21155
  5411  0026BC  D198               	goto	l21355
  5412  0026BE                     l21167:
  5413                           
  5414                           ; BSR set to: 0
  5415                           ;sm_MenuConfiguration_MC50.c: 829:                 {;sm_MenuConfiguration_MC50.c: 830:  
      +                                          sm_send_event(&menuConfiguration_stateMachine, ev_SartLearning);
  5416  0026BE  0EBF               	movlw	low _menuConfiguration_stateMachine
  5417  0026C0  6E12               	movwf	sm_send_event@psm^0,c
  5418  0026C2  0E02               	movlw	high _menuConfiguration_stateMachine
  5419  0026C4  6E13               	movwf	(sm_send_event@psm+1)^0,c
  5420  0026C6  0E00               	movlw	0
  5421  0026C8  6E15               	movwf	(sm_send_event@event+1)^0,c
  5422  0026CA  0E14               	movlw	20
  5423  0026CC  6E14               	movwf	sm_send_event@event^0,c
  5424  0026CE  ECA7  F043         	call	_sm_send_event	;wreg free
  5425                           
  5426                           ;sm_MenuConfiguration_MC50.c: 831:                  sm_send_event(&controlGate_stateMach
      +                          ine,ev_SartLearning );
  5427  0026D2  0EE3               	movlw	low _controlGate_stateMachine
  5428  0026D4  6E12               	movwf	sm_send_event@psm^0,c
  5429  0026D6  0E01               	movlw	high _controlGate_stateMachine
  5430  0026D8  6E13               	movwf	(sm_send_event@psm+1)^0,c
  5431  0026DA  0E00               	movlw	0
  5432  0026DC  6E15               	movwf	(sm_send_event@event+1)^0,c
  5433  0026DE  0E14               	movlw	20
  5434  0026E0  6E14               	movwf	sm_send_event@event^0,c
  5435  0026E2  ECA7  F043         	call	_sm_send_event	;wreg free
  5436                           
  5437                           ;sm_MenuConfiguration_MC50.c: 832:                  var_sys.LearningIsEnabled=YES;
  5438  0026E6  0E01               	movlw	1
  5439  0026E8  0101               	movlb	1	; () banked
  5440  0026EA  6F26               	movwf	(_var_sys+38)& (0+255),b	;volatile
  5441                           
  5442                           ; BSR set to: 1
  5443                           ;sm_MenuConfiguration_MC50.c: 833:                  var_sys.programinAutomatic = Automat
      +                          ic;
  5444  0026EC  0E00               	movlw	0
  5445  0026EE  6F2A               	movwf	(_var_sys+42)& (0+255),b	;volatile
  5446                           
  5447                           ; BSR set to: 1
  5448                           ;sm_MenuConfiguration_MC50.c: 834:                  SaveNVM_VarSystem(pageMemoryE);
  5449  0026F0  0E01               	movlw	1
  5450  0026F2  ECAF  F047         	call	_SaveNVM_VarSystem
  5451                           
  5452                           ;sm_MenuConfiguration_MC50.c: 837:                 };sm_MenuConfiguration_MC50.c: 838:  
      +                                         break;
  5453  0026F6  D17B               	goto	l21355
  5454  0026F8                     l21175:
  5455                           
  5456                           ; BSR set to: 0
  5457                           ;sm_MenuConfiguration_MC50.c: 840:                 {;sm_MenuConfiguration_MC50.c: 841:  
      +                                          sm_send_event(&menuConfiguration_stateMachine, ev_SartLearning);
  5458  0026F8  0EBF               	movlw	low _menuConfiguration_stateMachine
  5459  0026FA  6E12               	movwf	sm_send_event@psm^0,c
  5460  0026FC  0E02               	movlw	high _menuConfiguration_stateMachine
  5461  0026FE  6E13               	movwf	(sm_send_event@psm+1)^0,c
  5462  002700  0E00               	movlw	0
  5463  002702  6E15               	movwf	(sm_send_event@event+1)^0,c
  5464  002704  0E14               	movlw	20
  5465  002706  6E14               	movwf	sm_send_event@event^0,c
  5466  002708  ECA7  F043         	call	_sm_send_event	;wreg free
  5467                           
  5468                           ;sm_MenuConfiguration_MC50.c: 842:                  sm_send_event(&controlGate_stateMach
      +                          ine, ev_SartLearning);
  5469  00270C  0EE3               	movlw	low _controlGate_stateMachine
  5470  00270E  6E12               	movwf	sm_send_event@psm^0,c
  5471  002710  0E01               	movlw	high _controlGate_stateMachine
  5472  002712  6E13               	movwf	(sm_send_event@psm+1)^0,c
  5473  002714  0E00               	movlw	0
  5474  002716  6E15               	movwf	(sm_send_event@event+1)^0,c
  5475  002718  0E14               	movlw	20
  5476  00271A  6E14               	movwf	sm_send_event@event^0,c
  5477  00271C  ECA7  F043         	call	_sm_send_event	;wreg free
  5478                           
  5479                           ;sm_MenuConfiguration_MC50.c: 843:                  var_sys.LearningIsEnabled=YES;
  5480  002720  0E01               	movlw	1
  5481  002722  0101               	movlb	1	; () banked
  5482  002724  6F26               	movwf	(_var_sys+38)& (0+255),b	;volatile
  5483                           
  5484                           ; BSR set to: 1
  5485                           ;sm_MenuConfiguration_MC50.c: 844:                  var_sys.programinAutomatic = Manual;
  5486  002726  0E01               	movlw	1
  5487  002728  6F2A               	movwf	(_var_sys+42)& (0+255),b	;volatile
  5488                           
  5489                           ; BSR set to: 1
  5490                           ;sm_MenuConfiguration_MC50.c: 845:                  SaveNVM_VarSystem(pageMemoryE);
  5491  00272A  0E01               	movlw	1
  5492  00272C  ECAF  F047         	call	_SaveNVM_VarSystem
  5493                           
  5494                           ;sm_MenuConfiguration_MC50.c: 848:                 };sm_MenuConfiguration_MC50.c: 849:  
      +                                         break;
  5495  002730  D15E               	goto	l21355
  5496  002732                     l3390:
  5497                           
  5498                           ; BSR set to: 0
  5499                           ;sm_MenuConfiguration_MC50.c: 851:                 {;sm_MenuConfiguration_MC50.c: 852:  
      +                                          edit_Param.tempValue=var_sys_NVM.TypeofMotor;
  5500  002732  C0B4  F049         	movff	_var_sys_NVM+28,_edit_Param+3	;volatile
  5501                           
  5502                           ; BSR set to: 0
  5503                           ;sm_MenuConfiguration_MC50.c: 853:                  load_New_Menu(TypeMotor_Menu);
  5504  002736  0E03               	movlw	3
  5505  002738  EC2B  F021         	call	_load_New_Menu
  5506                           
  5507                           ;sm_MenuConfiguration_MC50.c: 854:                  edit_Param.Value=(unsigned char*)&va
      +                          r_sys_NVM.TypeofMotor;
  5508  00273C  0EB4               	movlw	low (_var_sys_NVM+28)
  5509  00273E  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5510  002740  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5511                           
  5512                           ;sm_MenuConfiguration_MC50.c: 855:                  haveValueToEdit=1;
  5513  002742  0E01               	movlw	1
  5514  002744  0100               	movlb	0	; () banked
  5515  002746  6FE0               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  5516                           
  5517                           ; BSR set to: 0
  5518                           ;sm_MenuConfiguration_MC50.c: 856:                  edit_Param.Max=2;
  5519  002748  0E02               	movlw	2
  5520  00274A  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5521                           
  5522                           ; BSR set to: 0
  5523                           ;sm_MenuConfiguration_MC50.c: 857:                  edit_Param.Min=0;
  5524  00274C  0E00               	movlw	0
  5525  00274E  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5526                           
  5527                           ;sm_MenuConfiguration_MC50.c: 859:                 };sm_MenuConfiguration_MC50.c: 860:  
      +                                         break;
  5528  002750  D14E               	goto	l21355
  5529  002752                     l3391:
  5530                           
  5531                           ; BSR set to: 0
  5532                           ;sm_MenuConfiguration_MC50.c: 862:                 {;sm_MenuConfiguration_MC50.c: 863:  
      +                                          edit_Param.tempValue=var_sys_NVM.Direction_motor;
  5533  002752  C0B3  F049         	movff	_var_sys_NVM+27,_edit_Param+3	;volatile
  5534                           
  5535                           ; BSR set to: 0
  5536                           ;sm_MenuConfiguration_MC50.c: 864:                  load_New_Menu(Direction_Menu);
  5537  002756  0E02               	movlw	2
  5538  002758  EC2B  F021         	call	_load_New_Menu
  5539                           
  5540                           ;sm_MenuConfiguration_MC50.c: 865:                  edit_Param.Value=(unsigned char*)&va
      +                          r_sys_NVM.Direction_motor;
  5541  00275C  0EB3               	movlw	low (_var_sys_NVM+27)
  5542  00275E  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5543  002760  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5544                           
  5545                           ;sm_MenuConfiguration_MC50.c: 866:                  haveValueToEdit=1;
  5546  002762  0E01               	movlw	1
  5547  002764  0100               	movlb	0	; () banked
  5548  002766  6FE0               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  5549                           
  5550                           ; BSR set to: 0
  5551                           ;sm_MenuConfiguration_MC50.c: 867:                  edit_Param.Max=1;
  5552  002768  0E01               	movlw	1
  5553  00276A  D7EF               	goto	L14
  5554  00276C                     l21205:
  5555                           
  5556                           ; BSR set to: 0
  5557  00276C  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5558  00276E  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5559  002770  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5560                           
  5561                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5562                           ; Switch size 1, requested type "simple"
  5563                           ; Number of cases is 1, Range of values is 0 to 0
  5564                           ; switch strategies available:
  5565                           ; Name         Instructions Cycles
  5566                           ; simple_byte            4     3 (average)
  5567                           ;	Chosen strategy is simple_byte
  5568  002772  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5569  002774  0A00               	xorlw	0	; case 0
  5570  002776  A4D8               	btfss	status,2,c
  5571  002778  D13A               	goto	l21355
  5572                           
  5573                           ; BSR set to: 0
  5574                           ; Switch size 1, requested type "simple"
  5575                           ; Number of cases is 4, Range of values is 0 to 3
  5576                           ; switch strategies available:
  5577                           ; Name         Instructions Cycles
  5578                           ; simple_byte           13     7 (average)
  5579                           ;	Chosen strategy is simple_byte
  5580  00277A  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5581  00277C  0A00               	xorlw	0	; case 0
  5582  00277E  B4D8               	btfsc	status,2,c
  5583  002780  D79E               	goto	l21167
  5584  002782  0A01               	xorlw	1	; case 1
  5585  002784  B4D8               	btfsc	status,2,c
  5586  002786  D7B8               	goto	l21175
  5587  002788  0A03               	xorlw	3	; case 2
  5588  00278A  B4D8               	btfsc	status,2,c
  5589  00278C  D7D2               	goto	l3390
  5590  00278E  0A01               	xorlw	1	; case 3
  5591  002790  B4D8               	btfsc	status,2,c
  5592  002792  D7DF               	goto	l3391
  5593  002794  D12C               	goto	l21355
  5594  002796                     l21207:
  5595                           
  5596                           ; BSR set to: 0
  5597                           ;sm_MenuConfiguration_MC50.c: 883:                 {;sm_MenuConfiguration_MC50.c: 884:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.decelarationOpen;
  5598  002796  0E98               	movlw	low _var_sys_NVM
  5599  002798  D001               	goto	L15
  5600  00279A                     l21209:
  5601                           
  5602                           ; BSR set to: 0
  5603                           ;sm_MenuConfiguration_MC50.c: 888:                 {;sm_MenuConfiguration_MC50.c: 889:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.decelarationClose;
  5604  00279A  0E99               	movlw	low (_var_sys_NVM+1)
  5605  00279C                     L15:
  5606  00279C  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5607  00279E  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5608                           
  5609                           ;sm_MenuConfiguration_MC50.c: 890:                 };sm_MenuConfiguration_MC50.c: 891:  
      +                                         break;
  5610  0027A0  D00E               	goto	l21215
  5611  0027A2                     l21213:
  5612                           
  5613                           ; BSR set to: 0
  5614  0027A2  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5615  0027A4  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5616  0027A6  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5617                           
  5618                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5619                           ; Switch size 1, requested type "simple"
  5620                           ; Number of cases is 1, Range of values is 0 to 0
  5621                           ; switch strategies available:
  5622                           ; Name         Instructions Cycles
  5623                           ; simple_byte            4     3 (average)
  5624                           ;	Chosen strategy is simple_byte
  5625  0027A8  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5626  0027AA  0A00               	xorlw	0	; case 0
  5627  0027AC  A4D8               	btfss	status,2,c
  5628  0027AE  D007               	goto	l21215
  5629                           
  5630                           ; BSR set to: 0
  5631                           ; Switch size 1, requested type "simple"
  5632                           ; Number of cases is 2, Range of values is 0 to 1
  5633                           ; switch strategies available:
  5634                           ; Name         Instructions Cycles
  5635                           ; simple_byte            7     4 (average)
  5636                           ;	Chosen strategy is simple_byte
  5637  0027B0  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5638  0027B2  0A00               	xorlw	0	; case 0
  5639  0027B4  B4D8               	btfsc	status,2,c
  5640  0027B6  D7EF               	goto	l21207
  5641  0027B8  0A01               	xorlw	1	; case 1
  5642  0027BA  B4D8               	btfsc	status,2,c
  5643  0027BC  D7EE               	goto	l21209
  5644  0027BE                     l21215:
  5645                           
  5646                           ; BSR set to: 0
  5647                           ;sm_MenuConfiguration_MC50.c: 895:                 edit_Param.Max=45;
  5648  0027BE  0E2D               	movlw	45
  5649  0027C0                     L29:
  5650  0027C0  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5651                           
  5652                           ;sm_MenuConfiguration_MC50.c: 896:                 edit_Param.Min=0;
  5653  0027C2  0E00               	movlw	0
  5654  0027C4  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5655  0027C6                     L19:
  5656                           
  5657                           ;sm_MenuConfiguration_MC50.c: 899:             haveValueToEdit=1;
  5658  0027C6  0E01               	movlw	1
  5659  0027C8  6FE0               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  5660                           
  5661                           ; BSR set to: 0
  5662                           ;sm_MenuConfiguration_MC50.c: 900:             edit_Param.tempValue= edit_Param.Value[0]
      +                          ;
  5663  0027CA  C047  FFD9         	movff	_edit_Param+1,fsr2l	;volatile
  5664  0027CE  C048  FFDA         	movff	_edit_Param+2,fsr2h	;volatile
  5665  0027D2  50DF               	movf	indf2,w,c
  5666  0027D4  6E49               	movwf	(_edit_Param+3)^0,c	;volatile
  5667                           
  5668                           ;sm_MenuConfiguration_MC50.c: 901:         };sm_MenuConfiguration_MC50.c: 902:         b
      +                          reak;
  5669  0027D6  D10B               	goto	l21355
  5670  0027D8                     l21219:
  5671                           
  5672                           ; BSR set to: 0
  5673                           ;sm_MenuConfiguration_MC50.c: 904:         {;sm_MenuConfiguration_MC50.c: 905:          
      +                             edit_Param.Max=9;
  5674  0027D8  0E09               	movlw	9
  5675  0027DA  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5676                           
  5677                           ;sm_MenuConfiguration_MC50.c: 906:             edit_Param.Min=0;
  5678  0027DC  0E00               	movlw	0
  5679  0027DE  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5680                           
  5681                           ;sm_MenuConfiguration_MC50.c: 907:             switch (ParameterSelected)
  5682  0027E0  D00F               	goto	l21235
  5683  0027E2                     l21221:
  5684                           
  5685                           ; BSR set to: 0
  5686                           ;sm_MenuConfiguration_MC50.c: 910:                 {;sm_MenuConfiguration_MC50.c: 911:  
      +                                               if (var_sys_NVM.motorSensitivity <2)
  5687  0027E2  0E02               	movlw	2
  5688  0027E4  619B               	cpfslt	(_var_sys_NVM+3)& (0+255),b	;volatile
  5689  0027E6  D002               	goto	l21225
  5690                           
  5691                           ; BSR set to: 0
  5692                           ;sm_MenuConfiguration_MC50.c: 912:                       {;sm_MenuConfiguration_MC50.c: 
      +                          913:                         edit_Param.Min=0;
  5693  0027E8  0E00               	movlw	0
  5694  0027EA  D001               	goto	L16
  5695  0027EC                     l21225:
  5696                           
  5697                           ; BSR set to: 0
  5698                           ;sm_MenuConfiguration_MC50.c: 916:                       {;sm_MenuConfiguration_MC50.c: 
      +                          917:                         edit_Param.Min=9;
  5699  0027EC  0E09               	movlw	9
  5700  0027EE                     L16:
  5701  0027EE  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5702                           
  5703                           ; BSR set to: 0
  5704                           ;sm_MenuConfiguration_MC50.c: 919:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.motorPower;
  5705  0027F0  0E9A               	movlw	low (_var_sys_NVM+2)
  5706  0027F2  D003               	goto	L18
  5707  0027F4                     l21229:
  5708                           
  5709                           ; BSR set to: 0
  5710                           ;sm_MenuConfiguration_MC50.c: 923:                 {;sm_MenuConfiguration_MC50.c: 924:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.motorSensitivity;
  5711  0027F4  0E9B               	movlw	low (_var_sys_NVM+3)
  5712  0027F6  D001               	goto	L18
  5713  0027F8                     l21231:
  5714                           
  5715                           ; BSR set to: 0
  5716                           ;sm_MenuConfiguration_MC50.c: 928:                 {;sm_MenuConfiguration_MC50.c: 929:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.decelarationSensivity;
  5717  0027F8  0EA7               	movlw	low (_var_sys_NVM+15)
  5718  0027FA                     L18:
  5719  0027FA  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5720  0027FC  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5721                           
  5722                           ;sm_MenuConfiguration_MC50.c: 930:                 };sm_MenuConfiguration_MC50.c: 931:  
      +                                         break;
  5723  0027FE  D7E3               	goto	L19
  5724  002800                     l21235:
  5725                           
  5726                           ; BSR set to: 0
  5727  002800  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5728  002802  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5729  002804  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5730                           
  5731                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5732                           ; Switch size 1, requested type "simple"
  5733                           ; Number of cases is 1, Range of values is 0 to 0
  5734                           ; switch strategies available:
  5735                           ; Name         Instructions Cycles
  5736                           ; simple_byte            4     3 (average)
  5737                           ;	Chosen strategy is simple_byte
  5738  002806  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5739  002808  0A00               	xorlw	0	; case 0
  5740  00280A  A4D8               	btfss	status,2,c
  5741  00280C  D7DC               	goto	L19
  5742                           
  5743                           ; BSR set to: 0
  5744                           ; Switch size 1, requested type "simple"
  5745                           ; Number of cases is 3, Range of values is 0 to 2
  5746                           ; switch strategies available:
  5747                           ; Name         Instructions Cycles
  5748                           ; simple_byte           10     6 (average)
  5749                           ;	Chosen strategy is simple_byte
  5750  00280E  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5751  002810  0A00               	xorlw	0	; case 0
  5752  002812  B4D8               	btfsc	status,2,c
  5753  002814  D7E6               	goto	l21221
  5754  002816  0A01               	xorlw	1	; case 1
  5755  002818  B4D8               	btfsc	status,2,c
  5756  00281A  D7EC               	goto	l21229
  5757  00281C  0A03               	xorlw	3	; case 2
  5758  00281E  B4D8               	btfsc	status,2,c
  5759  002820  D7EB               	goto	l21231
  5760  002822  D7D1               	goto	L19
  5761  002824                     l21241:
  5762                           
  5763                           ; BSR set to: 0
  5764                           ;sm_MenuConfiguration_MC50.c: 942:                 {;sm_MenuConfiguration_MC50.c: 943:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.autoTimeFullClose;
  5765  002824  0E9D               	movlw	low (_var_sys_NVM+5)
  5766  002826  D001               	goto	L20
  5767  002828                     l21243:
  5768                           
  5769                           ; BSR set to: 0
  5770                           ;sm_MenuConfiguration_MC50.c: 947:                 {;sm_MenuConfiguration_MC50.c: 948:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.autoTimeWalkClose;
  5771  002828  0E9E               	movlw	low (_var_sys_NVM+6)
  5772  00282A                     L20:
  5773  00282A  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5774  00282C  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5775                           
  5776                           ;sm_MenuConfiguration_MC50.c: 949:                 };sm_MenuConfiguration_MC50.c: 950:  
      +                                         break;
  5777  00282E  D00E               	goto	l21249
  5778  002830                     l21247:
  5779                           
  5780                           ; BSR set to: 0
  5781  002830  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5782  002832  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5783  002834  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5784                           
  5785                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5786                           ; Switch size 1, requested type "simple"
  5787                           ; Number of cases is 1, Range of values is 0 to 0
  5788                           ; switch strategies available:
  5789                           ; Name         Instructions Cycles
  5790                           ; simple_byte            4     3 (average)
  5791                           ;	Chosen strategy is simple_byte
  5792  002836  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5793  002838  0A00               	xorlw	0	; case 0
  5794  00283A  A4D8               	btfss	status,2,c
  5795  00283C  D007               	goto	l21249
  5796                           
  5797                           ; BSR set to: 0
  5798                           ; Switch size 1, requested type "simple"
  5799                           ; Number of cases is 2, Range of values is 0 to 1
  5800                           ; switch strategies available:
  5801                           ; Name         Instructions Cycles
  5802                           ; simple_byte            7     4 (average)
  5803                           ;	Chosen strategy is simple_byte
  5804  00283E  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5805  002840  0A00               	xorlw	0	; case 0
  5806  002842  B4D8               	btfsc	status,2,c
  5807  002844  D7EF               	goto	l21241
  5808  002846  0A01               	xorlw	1	; case 1
  5809  002848  B4D8               	btfsc	status,2,c
  5810  00284A  D7EE               	goto	l21243
  5811  00284C                     l21249:
  5812                           
  5813                           ; BSR set to: 0
  5814                           ;sm_MenuConfiguration_MC50.c: 952:             edit_Param.Max=99;
  5815  00284C  0E63               	movlw	99
  5816  00284E  D7B8               	goto	L29
  5817  002850                     l21253:
  5818                           
  5819                           ; BSR set to: 0
  5820                           ;sm_MenuConfiguration_MC50.c: 963:                 {;sm_MenuConfiguration_MC50.c: 964:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.photoCellIsON;
  5821  002850  0E9F               	movlw	low (_var_sys_NVM+7)
  5822  002852  D034               	goto	L125
  5823  002854                     l21255:
  5824                           
  5825                           ; BSR set to: 0
  5826                           ;sm_MenuConfiguration_MC50.c: 968:                 {;sm_MenuConfiguration_MC50.c: 969:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.photoCellInOpen;
  5827  002854  0EA0               	movlw	low (_var_sys_NVM+8)
  5828  002856  D032               	goto	L125
  5829  002858                     l21259:
  5830                           
  5831                           ; BSR set to: 0
  5832  002858  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5833  00285A  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5834  00285C  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5835                           
  5836                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5837                           ; Switch size 1, requested type "simple"
  5838                           ; Number of cases is 1, Range of values is 0 to 0
  5839                           ; switch strategies available:
  5840                           ; Name         Instructions Cycles
  5841                           ; simple_byte            4     3 (average)
  5842                           ;	Chosen strategy is simple_byte
  5843  00285E  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5844  002860  0A00               	xorlw	0	; case 0
  5845  002862  A4D8               	btfss	status,2,c
  5846  002864  D02D               	goto	L124
  5847                           
  5848                           ; BSR set to: 0
  5849                           ; Switch size 1, requested type "simple"
  5850                           ; Number of cases is 2, Range of values is 0 to 1
  5851                           ; switch strategies available:
  5852                           ; Name         Instructions Cycles
  5853                           ; simple_byte            7     4 (average)
  5854                           ;	Chosen strategy is simple_byte
  5855  002866  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5856  002868  0A00               	xorlw	0	; case 0
  5857  00286A  B4D8               	btfsc	status,2,c
  5858  00286C  D7F1               	goto	l21253
  5859  00286E  0A01               	xorlw	1	; case 1
  5860  002870  B4D8               	btfsc	status,2,c
  5861  002872  D7F0               	goto	l21255
  5862  002874  D025               	goto	L124
  5863  002876                     l21265:
  5864                           
  5865                           ; BSR set to: 0
  5866                           ;sm_MenuConfiguration_MC50.c: 984:                 {;sm_MenuConfiguration_MC50.c: 985:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.securityBandIsON;
  5867  002876  0EA1               	movlw	low (_var_sys_NVM+9)
  5868  002878  D021               	goto	L125
  5869  00287A                     l21267:
  5870                           
  5871                           ; BSR set to: 0
  5872                           ;sm_MenuConfiguration_MC50.c: 989:                 {;sm_MenuConfiguration_MC50.c: 990:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.securityBandType;
  5873  00287A  0EA2               	movlw	low (_var_sys_NVM+10)
  5874  00287C  D01F               	goto	L125
  5875  00287E                     l21269:
  5876                           
  5877                           ; BSR set to: 0
  5878                           ;sm_MenuConfiguration_MC50.c: 994:                 {;sm_MenuConfiguration_MC50.c: 995:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.securityBandInOpen;
  5879  00287E  0EA3               	movlw	low (_var_sys_NVM+11)
  5880  002880  D01D               	goto	L125
  5881  002882                     l21271:
  5882                           
  5883                           ; BSR set to: 0
  5884                           ;sm_MenuConfiguration_MC50.c: 999:                 {;sm_MenuConfiguration_MC50.c: 1000: 
      +                                              edit_Param.Value=(unsigned char*)&var_sys_NVM.Stopboton;
  5885  002882  0EAE               	movlw	low (_var_sys_NVM+22)
  5886  002884  D01B               	goto	L125
  5887  002886                     l21275:
  5888                           
  5889                           ; BSR set to: 0
  5890  002886  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5891  002888  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5892  00288A  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5893                           
  5894                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5895                           ; Switch size 1, requested type "simple"
  5896                           ; Number of cases is 1, Range of values is 0 to 0
  5897                           ; switch strategies available:
  5898                           ; Name         Instructions Cycles
  5899                           ; simple_byte            4     3 (average)
  5900                           ;	Chosen strategy is simple_byte
  5901  00288C  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5902  00288E  0A00               	xorlw	0	; case 0
  5903  002890  A4D8               	btfss	status,2,c
  5904  002892  D016               	goto	L124
  5905                           
  5906                           ; BSR set to: 0
  5907                           ; Switch size 1, requested type "simple"
  5908                           ; Number of cases is 4, Range of values is 0 to 3
  5909                           ; switch strategies available:
  5910                           ; Name         Instructions Cycles
  5911                           ; simple_byte           13     7 (average)
  5912                           ;	Chosen strategy is simple_byte
  5913  002894  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5914  002896  0A00               	xorlw	0	; case 0
  5915  002898  B4D8               	btfsc	status,2,c
  5916  00289A  D7ED               	goto	l21265
  5917  00289C  0A01               	xorlw	1	; case 1
  5918  00289E  B4D8               	btfsc	status,2,c
  5919  0028A0  D7EC               	goto	l21267
  5920  0028A2  0A03               	xorlw	3	; case 2
  5921  0028A4  B4D8               	btfsc	status,2,c
  5922  0028A6  D7EB               	goto	l21269
  5923  0028A8  0A01               	xorlw	1	; case 3
  5924  0028AA  B4D8               	btfsc	status,2,c
  5925  0028AC  D7EA               	goto	l21271
  5926  0028AE  D008               	goto	L124
  5927  0028B0                     l21281:
  5928                           
  5929                           ; BSR set to: 0
  5930                           ;sm_MenuConfiguration_MC50.c: 1018:                 {;sm_MenuConfiguration_MC50.c: 1019:
      +                                               edit_Param.Value=(unsigned char*)&var_sys_NVM.homemPresente;
  5931  0028B0  0EA8               	movlw	low (_var_sys_NVM+16)
  5932  0028B2  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5933  0028B4  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5934                           
  5935                           ; BSR set to: 0
  5936                           ;sm_MenuConfiguration_MC50.c: 1020:                       edit_Param.Max=2;
  5937  0028B6  0E02               	movlw	2
  5938  0028B8  D783               	goto	L29
  5939  0028BA                     l21287:
  5940                           
  5941                           ; BSR set to: 0
  5942                           ;sm_MenuConfiguration_MC50.c: 1025:                 {;sm_MenuConfiguration_MC50.c: 1026:
      +                                               edit_Param.Value=(unsigned char*)&var_sys_NVM.logicDigital;
  5943  0028BA  0EA9               	movlw	low (_var_sys_NVM+17)
  5944  0028BC                     L125:
  5945  0028BC  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5946  0028BE  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5947  0028C0                     L124:
  5948                           
  5949                           ; BSR set to: 0
  5950                           ;sm_MenuConfiguration_MC50.c: 1027:                     edit_Param.Max=1;
  5951  0028C0  0E01               	movlw	1
  5952  0028C2  D77E               	goto	L29
  5953  0028C4                     l21295:
  5954                           
  5955                           ; BSR set to: 0
  5956  0028C4  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5957  0028C6  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5958  0028C8  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5959                           
  5960                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5961                           ; Switch size 1, requested type "simple"
  5962                           ; Number of cases is 1, Range of values is 0 to 0
  5963                           ; switch strategies available:
  5964                           ; Name         Instructions Cycles
  5965                           ; simple_byte            4     3 (average)
  5966                           ;	Chosen strategy is simple_byte
  5967  0028CA  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5968  0028CC  0A00               	xorlw	0	; case 0
  5969  0028CE  A4D8               	btfss	status,2,c
  5970  0028D0  D77A               	goto	L19
  5971                           
  5972                           ; BSR set to: 0
  5973                           ; Switch size 1, requested type "simple"
  5974                           ; Number of cases is 2, Range of values is 0 to 1
  5975                           ; switch strategies available:
  5976                           ; Name         Instructions Cycles
  5977                           ; simple_byte            7     4 (average)
  5978                           ;	Chosen strategy is simple_byte
  5979  0028D2  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5980  0028D4  0A00               	xorlw	0	; case 0
  5981  0028D6  B4D8               	btfsc	status,2,c
  5982  0028D8  D7EB               	goto	l21281
  5983  0028DA  0A01               	xorlw	1	; case 1
  5984  0028DC  B4D8               	btfsc	status,2,c
  5985  0028DE  D7ED               	goto	l21287
  5986  0028E0  D772               	goto	L19
  5987  0028E2                     l21301:
  5988                           
  5989                           ; BSR set to: 0
  5990                           ;sm_MenuConfiguration_MC50.c: 1042:                 {;sm_MenuConfiguration_MC50.c: 1043:
      +                                               edit_Param.Value=(unsigned char*)&var_sys_NVM.softStart;
  5991  0028E2  0EAA               	movlw	low (_var_sys_NVM+18)
  5992  0028E4  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5993  0028E6  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5994                           
  5995                           ; BSR set to: 0
  5996                           ;sm_MenuConfiguration_MC50.c: 1044:                      edit_Param.Max=9;
  5997  0028E8  0E09               	movlw	9
  5998  0028EA  D76A               	goto	L29
  5999  0028EC                     l21307:
  6000                           
  6001                           ; BSR set to: 0
  6002                           ;sm_MenuConfiguration_MC50.c: 1049:                 {;sm_MenuConfiguration_MC50.c: 1050:
      +                                               edit_Param.Value=(unsigned char*)&var_sys_NVM.softstop;
  6003  0028EC  0EAB               	movlw	low (_var_sys_NVM+19)
  6004  0028EE  D7FA               	goto	L27
  6005  0028F0                     l21315:
  6006                           
  6007                           ; BSR set to: 0
  6008  0028F0  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  6009  0028F2  6FDC               	movwf	??_setValueToEdit& (0+255),b
  6010  0028F4  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  6011                           
  6012                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6013                           ; Switch size 1, requested type "simple"
  6014                           ; Number of cases is 1, Range of values is 0 to 0
  6015                           ; switch strategies available:
  6016                           ; Name         Instructions Cycles
  6017                           ; simple_byte            4     3 (average)
  6018                           ;	Chosen strategy is simple_byte
  6019  0028F6  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  6020  0028F8  0A00               	xorlw	0	; case 0
  6021  0028FA  A4D8               	btfss	status,2,c
  6022  0028FC  D764               	goto	L19
  6023                           
  6024                           ; BSR set to: 0
  6025                           ; Switch size 1, requested type "simple"
  6026                           ; Number of cases is 2, Range of values is 0 to 1
  6027                           ; switch strategies available:
  6028                           ; Name         Instructions Cycles
  6029                           ; simple_byte            7     4 (average)
  6030                           ;	Chosen strategy is simple_byte
  6031  0028FE  51DC               	movf	??_setValueToEdit& (0+255),w,b
  6032  002900  0A00               	xorlw	0	; case 0
  6033  002902  B4D8               	btfsc	status,2,c
  6034  002904  D7EE               	goto	l21301
  6035  002906  0A01               	xorlw	1	; case 1
  6036  002908  B4D8               	btfsc	status,2,c
  6037  00290A  D7F0               	goto	l21307
  6038  00290C  D75C               	goto	L19
  6039  00290E                     l21321:
  6040                           
  6041                           ; BSR set to: 0
  6042                           ;sm_MenuConfiguration_MC50.c: 1068:                 {;sm_MenuConfiguration_MC50.c: 1069:
      +                                 edit_Param.Value=&value;
  6043  00290E  0EF9               	movlw	low setValueToEdit@value
  6044  002910  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  6045  002912  0E01               	movlw	high setValueToEdit@value
  6046  002914  6E48               	movwf	(_edit_Param+2)^0,c	;volatile
  6047                           
  6048                           ; BSR set to: 0
  6049                           ;sm_MenuConfiguration_MC50.c: 1070:                     for(unsigned char posindex=0; po
      +                          sindex <= *(unsigned char*)&var_sys_NVM.positionRemotesFull; posindex++)
  6050  002916  0E00               	movlw	0
  6051  002918  6FDF               	movwf	setValueToEdit@posindex& (0+255),b
  6052  00291A  D00D               	goto	l21331
  6053  00291C                     l3438:
  6054                           
  6055                           ; BSR set to: 0
  6056                           ;sm_MenuConfiguration_MC50.c: 1071:                     {;sm_MenuConfiguration_MC50.c: 1
      +                          072:                         value=posindex;
  6057  00291C  C0DF  F1F9         	movff	setValueToEdit@posindex,setValueToEdit@value
  6058                           
  6059                           ; BSR set to: 0
  6060                           ;sm_MenuConfiguration_MC50.c: 1073:                         if(cmdMemoryIsEmpty(menu_st.
      +                          parameterSelected, posindex))
  6061  002920  C0DF  F02E         	movff	setValueToEdit@posindex,cmdMemoryIsEmpty@position
  6062  002924  0101               	movlb	1	; () banked
  6063  002926  5168               	movf	(_menu_st+23)& (0+255),w,b
  6064  002928  ECFD  F03C         	call	_cmdMemoryIsEmpty
  6065  00292C  0900               	iorlw	0
  6066  00292E  A4D8               	btfss	status,2,c
  6067  002930  D008               	goto	u24520
  6068                           
  6069                           ;sm_MenuConfiguration_MC50.c: 1075:                     }
  6070  002932  0100               	movlb	0	; () banked
  6071  002934  2BDF               	incf	setValueToEdit@posindex& (0+255),f,b
  6072  002936                     l21331:
  6073                           
  6074                           ; BSR set to: 0
  6075  002936  EE20  F0B8         	lfsr	2,_var_sys_NVM+32
  6076  00293A  51DF               	movf	setValueToEdit@posindex& (0+255),w,b
  6077  00293C  5CDE               	subwf	postinc2,w,c
  6078  00293E  B0D8               	btfsc	status,0,c
  6079  002940  D7ED               	goto	l3438
  6080  002942                     u24520:
  6081                           
  6082                           ;sm_MenuConfiguration_MC50.c: 1076:                     edit_Param.Max=*(unsigned char*)
      +                          &var_sys_NVM.positionRemotesFull;
  6083  002942  EE20  F0B8         	lfsr	2,_var_sys_NVM+32
  6084  002946  D005               	goto	L28
  6085  002948                     l21335:
  6086                           
  6087                           ; BSR set to: 0
  6088                           ;sm_MenuConfiguration_MC50.c: 1080:                 {;sm_MenuConfiguration_MC50.c: 1081:
      +                                               edit_Param.Value=(unsigned char*)&var_sys_NVM.positionRemotesWalk;
  6089  002948  0EB9               	movlw	low (_var_sys_NVM+33)
  6090  00294A  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  6091  00294C  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  6092                           
  6093                           ; BSR set to: 0
  6094                           ;sm_MenuConfiguration_MC50.c: 1082:                     edit_Param.Max=*(unsigned char*)
      +                          &var_sys_NVM.positionRemotesWalk;
  6095  00294E  EE20  F0B9         	lfsr	2,_var_sys_NVM+33
  6096  002952                     L28:
  6097  002952  50DF               	movf	indf2,w,c
  6098  002954  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  6099                           
  6100                           ;sm_MenuConfiguration_MC50.c: 1083:                 };sm_MenuConfiguration_MC50.c: 1084:
      +                                           break;
  6101  002956  D00E               	goto	l21343
  6102  002958                     l21341:
  6103                           
  6104                           ; BSR set to: 0
  6105  002958  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  6106  00295A  6FDC               	movwf	??_setValueToEdit& (0+255),b
  6107  00295C  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  6108                           
  6109                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6110                           ; Switch size 1, requested type "simple"
  6111                           ; Number of cases is 1, Range of values is 0 to 0
  6112                           ; switch strategies available:
  6113                           ; Name         Instructions Cycles
  6114                           ; simple_byte            4     3 (average)
  6115                           ;	Chosen strategy is simple_byte
  6116  00295E  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  6117  002960  0A00               	xorlw	0	; case 0
  6118  002962  A4D8               	btfss	status,2,c
  6119  002964  D007               	goto	l21343
  6120                           
  6121                           ; BSR set to: 0
  6122                           ; Switch size 1, requested type "simple"
  6123                           ; Number of cases is 2, Range of values is 0 to 1
  6124                           ; switch strategies available:
  6125                           ; Name         Instructions Cycles
  6126                           ; simple_byte            7     4 (average)
  6127                           ;	Chosen strategy is simple_byte
  6128  002966  51DC               	movf	??_setValueToEdit& (0+255),w,b
  6129  002968  0A00               	xorlw	0	; case 0
  6130  00296A  B4D8               	btfsc	status,2,c
  6131  00296C  D7D0               	goto	l21321
  6132  00296E  0A01               	xorlw	1	; case 1
  6133  002970  B4D8               	btfsc	status,2,c
  6134  002972  D7EA               	goto	l21335
  6135  002974                     l21343:
  6136                           
  6137                           ;sm_MenuConfiguration_MC50.c: 1086:             edit_Param.position=*edit_Param.Value;
  6138  002974  C047  FFD9         	movff	_edit_Param+1,fsr2l	;volatile
  6139  002978  C048  FFDA         	movff	_edit_Param+2,fsr2h	;volatile
  6140  00297C  50DF               	movf	indf2,w,c
  6141  00297E  6E46               	movwf	_edit_Param^0,c	;volatile
  6142                           
  6143                           ;sm_MenuConfiguration_MC50.c: 1087:             edit_Param.Min=0;
  6144  002980  0E00               	movlw	0
  6145  002982  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  6146                           
  6147                           ;sm_MenuConfiguration_MC50.c: 1088:             haveValueToEdit=1;
  6148  002984  0E01               	movlw	1
  6149  002986  0100               	movlb	0	; () banked
  6150  002988  6FE0               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  6151                           
  6152                           ;sm_MenuConfiguration_MC50.c: 1089:             edit_Param.tempValue=*edit_Param.Value;
  6153  00298A  C047  FFD9         	movff	_edit_Param+1,fsr2l	;volatile
  6154  00298E  C048  FFDA         	movff	_edit_Param+2,fsr2h	;volatile
  6155  002992  50DF               	movf	indf2,w,c
  6156  002994  6E49               	movwf	(_edit_Param+3)^0,c	;volatile
  6157                           
  6158                           ; BSR set to: 0
  6159                           ;sm_MenuConfiguration_MC50.c: 1090:             InitReceiver();
  6160  002996  EC8F  F04A         	call	_InitReceiver	;wreg free
  6161                           
  6162                           ;sm_MenuConfiguration_MC50.c: 1091:         };sm_MenuConfiguration_MC50.c: 1092:        
      +                           break;
  6163  00299A  D029               	goto	l21355
  6164  00299C                     l21353:
  6165                           
  6166                           ; BSR set to: 0
  6167  00299C  51DE               	movf	setValueToEdit@menuType& (0+255),w,b
  6168  00299E  6FDC               	movwf	??_setValueToEdit& (0+255),b
  6169  0029A0  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  6170                           
  6171                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6172                           ; Switch size 1, requested type "simple"
  6173                           ; Number of cases is 1, Range of values is 0 to 0
  6174                           ; switch strategies available:
  6175                           ; Name         Instructions Cycles
  6176                           ; simple_byte            4     3 (average)
  6177                           ;	Chosen strategy is simple_byte
  6178  0029A2  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  6179  0029A4  0A00               	xorlw	0	; case 0
  6180  0029A6  A4D8               	btfss	status,2,c
  6181  0029A8  D022               	goto	l21355
  6182                           
  6183                           ; BSR set to: 0
  6184                           ; Switch size 1, requested type "simple"
  6185                           ; Number of cases is 11, Range of values is 0 to 12
  6186                           ; switch strategies available:
  6187                           ; Name         Instructions Cycles
  6188                           ; simple_byte           34    18 (average)
  6189                           ;	Chosen strategy is simple_byte
  6190  0029AA  51DC               	movf	??_setValueToEdit& (0+255),w,b
  6191  0029AC  0A00               	xorlw	0	; case 0
  6192  0029AE  B4D8               	btfsc	status,2,c
  6193  0029B0  D5A1               	goto	l3358
  6194  0029B2  0A01               	xorlw	1	; case 1
  6195  0029B4  B4D8               	btfsc	status,2,c
  6196  0029B6  D5FE               	goto	l3372
  6197  0029B8  0A05               	xorlw	5	; case 4
  6198  0029BA  B4D8               	btfsc	status,2,c
  6199  0029BC  D6D7               	goto	l21205
  6200  0029BE  0A01               	xorlw	1	; case 5
  6201  0029C0  B4D8               	btfsc	status,2,c
  6202  0029C2  D6EF               	goto	l21213
  6203  0029C4  0A03               	xorlw	3	; case 6
  6204  0029C6  B4D8               	btfsc	status,2,c
  6205  0029C8  D707               	goto	l21219
  6206  0029CA  0A01               	xorlw	1	; case 7
  6207  0029CC  B4D8               	btfsc	status,2,c
  6208  0029CE  D730               	goto	l21247
  6209  0029D0  0A0F               	xorlw	15	; case 8
  6210  0029D2  B4D8               	btfsc	status,2,c
  6211  0029D4  D741               	goto	l21259
  6212  0029D6  0A01               	xorlw	1	; case 9
  6213  0029D8  B4D8               	btfsc	status,2,c
  6214  0029DA  D755               	goto	l21275
  6215  0029DC  0A03               	xorlw	3	; case 10
  6216  0029DE  B4D8               	btfsc	status,2,c
  6217  0029E0  D771               	goto	l21295
  6218  0029E2  0A01               	xorlw	1	; case 11
  6219  0029E4  B4D8               	btfsc	status,2,c
  6220  0029E6  D784               	goto	l21315
  6221  0029E8  0A07               	xorlw	7	; case 12
  6222  0029EA  B4D8               	btfsc	status,2,c
  6223  0029EC  D7B5               	goto	l21341
  6224  0029EE                     l21355:
  6225                           
  6226                           ;sm_MenuConfiguration_MC50.c: 1095:     return haveValueToEdit;
  6227  0029EE  0100               	movlb	0	; () banked
  6228  0029F0  51E0               	movf	setValueToEdit@haveValueToEdit& (0+255),w,b
  6229                           
  6230                           ; BSR set to: 0
  6231  0029F2  0012               	return		;funcret
  6232  0029F4                     __end_of_setValueToEdit:
  6233                           	callstack 0
  6234                           
  6235 ;; *************** function _load_New_Menu *****************
  6236 ;; Defined at:
  6237 ;;		line 434 in file "sm_MenuConfiguration_MC50.c"
  6238 ;; Parameters:    Size  Location     Type
  6239 ;;  Menu            1    wreg     enum E10813
  6240 ;; Auto vars:     Size  Location     Type
  6241 ;;  Menu            1   33[COMRAM] enum E10813
  6242 ;;  i               1   34[COMRAM] unsigned char 
  6243 ;; Return value:  Size  Location     Type
  6244 ;;                  1    wreg      void 
  6245 ;; Registers used:
  6246 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6247 ;; Tracked objects:
  6248 ;;		On entry : 0/0
  6249 ;;		On exit  : 0/0
  6250 ;;		Unchanged: 0/0
  6251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6253 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6254 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6255 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6256 ;;Total ram usage:        4 bytes
  6257 ;; Hardware stack levels used: 1
  6258 ;; Hardware stack levels required when called: 5
  6259 ;; This function calls:
  6260 ;;		_SetSegmentValueIntermitentMain
  6261 ;;		_SetSegmentValueMain
  6262 ;; This function is called by:
  6263 ;;		_sm_execute_main
  6264 ;;		_sm_execute_menuConfiguration
  6265 ;;		_setValueToEdit
  6266 ;; This function uses a non-reentrant model
  6267 ;;
  6268                           
  6269                           	psect	text4
  6270  004256                     __ptext4:
  6271                           	callstack 0
  6272  004256                     _load_New_Menu:
  6273                           	callstack 22
  6274                           
  6275                           ; BSR set to: 0
  6276                           ;incstack = 0
  6277                           ;load_New_Menu@Menu stored from wreg
  6278  004256  6E22               	movwf	load_New_Menu@Menu^0,c
  6279                           
  6280                           ;sm_MenuConfiguration_MC50.c: 435:     ts_system.timeoutMenu=((1000/50)*5) ;
  6281  004258  0E00               	movlw	0
  6282  00425A  0101               	movlb	1	; () banked
  6283  00425C  6FAA               	movwf	(_ts_system+15)& (0+255),b	;volatile
  6284  00425E  0E64               	movlw	100
  6285  004260  6FA9               	movwf	(_ts_system+14)& (0+255),b	;volatile
  6286                           
  6287                           ; BSR set to: 1
  6288                           ;sm_MenuConfiguration_MC50.c: 439:     if(menu_st.actualMenu!=Menu && Menu>E_Menu)
  6289  004262  5022               	movf	load_New_Menu@Menu^0,w,c
  6290  004264  1966               	xorwf	(_menu_st+21)& (0+255),w,b
  6291  004266  B4D8               	btfsc	status,2,c
  6292  004268  D006               	goto	l20363
  6293                           
  6294                           ; BSR set to: 1
  6295  00426A  0E01               	movlw	1
  6296  00426C  6422               	cpfsgt	load_New_Menu@Menu^0,c
  6297  00426E  D003               	goto	l20363
  6298                           
  6299                           ; BSR set to: 1
  6300                           ;sm_MenuConfiguration_MC50.c: 440:     {;sm_MenuConfiguration_MC50.c: 441:         menu_
      +                          st.parameterSelected=0;
  6301  004270  0E00               	movlw	0
  6302  004272  6F68               	movwf	(_menu_st+23)& (0+255),b
  6303                           
  6304                           ;sm_MenuConfiguration_MC50.c: 442:     }
  6305  004274  D005               	goto	l20367
  6306  004276                     l20363:
  6307                           
  6308                           ; BSR set to: 1
  6309  004276  0E02               	movlw	2
  6310  004278  6022               	cpfslt	load_New_Menu@Menu^0,c
  6311  00427A  D002               	goto	l20367
  6312                           
  6313                           ; BSR set to: 1
  6314                           ;sm_MenuConfiguration_MC50.c: 444:     {;sm_MenuConfiguration_MC50.c: 445:        menu_s
      +                          t.parameterSelected = menu_st.lastMainParameterSelected;
  6315  00427C  C169  F168         	movff	_menu_st+24,_menu_st+23
  6316  004280                     l20367:
  6317                           
  6318                           ; BSR set to: 1
  6319                           ;sm_MenuConfiguration_MC50.c: 449:     menu_st.lastMenu=((void*)0);
  6320  004280  0E00               	movlw	0
  6321  004282  6F65               	movwf	(_menu_st+20)& (0+255),b
  6322                           
  6323                           ;sm_MenuConfiguration_MC50.c: 450:     switch (Menu)
  6324  004284  D0F6               	goto	l20419
  6325  004286                     l20369:
  6326                           
  6327                           ; BSR set to: 1
  6328                           ;sm_MenuConfiguration_MC50.c: 453:         {;sm_MenuConfiguration_MC50.c: 455:          
      +                             menu_st.actualMenu=P_Menu;
  6329  004286  0E00               	movlw	0
  6330  004288  6F66               	movwf	(_menu_st+21)& (0+255),b
  6331                           
  6332                           ;sm_MenuConfiguration_MC50.c: 456:             menu_st.menuSize=10;
  6333  00428A  0E0A               	movlw	10
  6334  00428C  6F67               	movwf	(_menu_st+22)& (0+255),b
  6335                           
  6336                           ;sm_MenuConfiguration_MC50.c: 457:             menu_st.lastMainParameterSelected=0;
  6337  00428E  0E00               	movlw	0
  6338  004290  6F69               	movwf	(_menu_st+24)& (0+255),b
  6339                           
  6340                           ;sm_MenuConfiguration_MC50.c: 458:             for (i=0;i<(10);i++)
  6341  004292  0E00               	movlw	0
  6342  004294  6E23               	movwf	load_New_Menu@i^0,c
  6343  004296                     l20375:
  6344                           
  6345                           ;sm_MenuConfiguration_MC50.c: 459:             {;sm_MenuConfiguration_MC50.c: 460:      
      +                                    menu_st.menuList[i].value_display1=dP;
  6346  004296  5023               	movf	load_New_Menu@i^0,w,c
  6347  004298  0D02               	mullw	2
  6348  00429A  0E51               	movlw	low _menu_st
  6349  00429C  24F3               	addwf	243,w,c
  6350  00429E  6ED9               	movwf	fsr2l,c
  6351  0042A0  0E01               	movlw	high _menu_st
  6352  0042A2  20F4               	addwfc	prodh,w,c
  6353  0042A4  6EDA               	movwf	fsr2h,c
  6354  0042A6  0E10               	movlw	16
  6355  0042A8  6EDF               	movwf	indf2,c
  6356                           
  6357                           ;sm_MenuConfiguration_MC50.c: 461:                menu_st.menuList[i].value_display2=i;
  6358  0042AA  5023               	movf	load_New_Menu@i^0,w,c
  6359  0042AC  0D02               	mullw	2
  6360  0042AE  0E52               	movlw	low (_menu_st+1)
  6361  0042B0  24F3               	addwf	243,w,c
  6362  0042B2  6ED9               	movwf	fsr2l,c
  6363  0042B4  0E01               	movlw	high (_menu_st+1)
  6364  0042B6  20F4               	addwfc	prodh,w,c
  6365  0042B8  6EDA               	movwf	fsr2h,c
  6366  0042BA  C023  FFDF         	movff	load_New_Menu@i,indf2
  6367                           
  6368                           ;sm_MenuConfiguration_MC50.c: 462:             }
  6369  0042BE  2A23               	incf	load_New_Menu@i^0,f,c
  6370  0042C0  0E09               	movlw	9
  6371  0042C2  6423               	cpfsgt	load_New_Menu@i^0,c
  6372  0042C4  D7E8               	goto	l20375
  6373  0042C6  D107               	goto	l20421
  6374  0042C8                     l20381:
  6375                           
  6376                           ; BSR set to: 1
  6377                           ;sm_MenuConfiguration_MC50.c: 466:         {;sm_MenuConfiguration_MC50.c: 468:          
      +                             menu_st.actualMenu=E_Menu;
  6378  0042C8  0E01               	movlw	1
  6379  0042CA  6F66               	movwf	(_menu_st+21)& (0+255),b
  6380                           
  6381                           ;sm_MenuConfiguration_MC50.c: 469:             menu_st.menuSize=10;
  6382  0042CC  0E0A               	movlw	10
  6383  0042CE  6F67               	movwf	(_menu_st+22)& (0+255),b
  6384                           
  6385                           ;sm_MenuConfiguration_MC50.c: 470:             menu_st.lastMainParameterSelected=0;
  6386  0042D0  0E00               	movlw	0
  6387  0042D2  6F69               	movwf	(_menu_st+24)& (0+255),b
  6388                           
  6389                           ;sm_MenuConfiguration_MC50.c: 471:             for (i=0;i<(10);i++)
  6390  0042D4  0E00               	movlw	0
  6391  0042D6  6E23               	movwf	load_New_Menu@i^0,c
  6392  0042D8                     l20387:
  6393                           
  6394                           ;sm_MenuConfiguration_MC50.c: 472:             {;sm_MenuConfiguration_MC50.c: 473:      
      +                                    menu_st.menuList[i].value_display1=dE;
  6395  0042D8  5023               	movf	load_New_Menu@i^0,w,c
  6396  0042DA  0D02               	mullw	2
  6397  0042DC  0E51               	movlw	low _menu_st
  6398  0042DE  24F3               	addwf	243,w,c
  6399  0042E0  6ED9               	movwf	fsr2l,c
  6400  0042E2  0E01               	movlw	high _menu_st
  6401  0042E4  20F4               	addwfc	prodh,w,c
  6402  0042E6  6EDA               	movwf	fsr2h,c
  6403  0042E8  0E0E               	movlw	14
  6404  0042EA  6EDF               	movwf	indf2,c
  6405                           
  6406                           ;sm_MenuConfiguration_MC50.c: 474:                menu_st.menuList[i].value_display2=i;
  6407  0042EC  5023               	movf	load_New_Menu@i^0,w,c
  6408  0042EE  0D02               	mullw	2
  6409  0042F0  0E52               	movlw	low (_menu_st+1)
  6410  0042F2  24F3               	addwf	243,w,c
  6411  0042F4  6ED9               	movwf	fsr2l,c
  6412  0042F6  0E01               	movlw	high (_menu_st+1)
  6413  0042F8  20F4               	addwfc	prodh,w,c
  6414  0042FA  6EDA               	movwf	fsr2h,c
  6415  0042FC  C023  FFDF         	movff	load_New_Menu@i,indf2
  6416                           
  6417                           ;sm_MenuConfiguration_MC50.c: 475:             }
  6418  004300  2A23               	incf	load_New_Menu@i^0,f,c
  6419  004302  0E09               	movlw	9
  6420  004304  6423               	cpfsgt	load_New_Menu@i^0,c
  6421  004306  D7E8               	goto	l20387
  6422  004308  D0E6               	goto	l20421
  6423  00430A                     l20393:
  6424                           
  6425                           ; BSR set to: 1
  6426                           ;sm_MenuConfiguration_MC50.c: 479:         {;sm_MenuConfiguration_MC50.c: 480:          
      +                             menu_st.lastMenu=P_Menu;
  6427  00430A  0E00               	movlw	0
  6428  00430C  6F65               	movwf	(_menu_st+20)& (0+255),b
  6429                           
  6430                           ;sm_MenuConfiguration_MC50.c: 481:             menu_st.actualMenu=P0_SMenu;
  6431  00430E  0E04               	movlw	4
  6432  004310  6F66               	movwf	(_menu_st+21)& (0+255),b
  6433                           
  6434                           ;sm_MenuConfiguration_MC50.c: 482:             menu_st.menuSize=4;
  6435  004312  0E04               	movlw	4
  6436  004314  6F67               	movwf	(_menu_st+22)& (0+255),b
  6437                           
  6438                           ;sm_MenuConfiguration_MC50.c: 483:             menu_st.menuList[0].value_display1=dA;
  6439  004316  0E0A               	movlw	10
  6440  004318  6F51               	movwf	_menu_st& (0+255),b
  6441                           
  6442                           ;sm_MenuConfiguration_MC50.c: 484:             menu_st.menuList[0].value_display2=dU;
  6443  00431A  0E13               	movlw	19
  6444  00431C  6F52               	movwf	(_menu_st+1)& (0+255),b
  6445                           
  6446                           ;sm_MenuConfiguration_MC50.c: 485:             menu_st.menuList[1].value_display1=dM;
  6447  00431E  0E17               	movlw	23
  6448  004320  6F53               	movwf	(_menu_st+2)& (0+255),b
  6449                           
  6450                           ;sm_MenuConfiguration_MC50.c: 486:             menu_st.menuList[1].value_display2=dA;
  6451  004322  0E0A               	movlw	10
  6452  004324  6F54               	movwf	(_menu_st+3)& (0+255),b
  6453                           
  6454                           ;sm_MenuConfiguration_MC50.c: 487:             menu_st.menuList[2].value_display1=d5;
  6455  004326  0E05               	movlw	5
  6456  004328  6F55               	movwf	(_menu_st+4)& (0+255),b
  6457                           
  6458                           ;sm_MenuConfiguration_MC50.c: 488:             menu_st.menuList[2].value_display2=dy;
  6459  00432A  0E21               	movlw	33
  6460  00432C  6F56               	movwf	(_menu_st+5)& (0+255),b
  6461                           
  6462                           ;sm_MenuConfiguration_MC50.c: 489:             menu_st.menuList[3].value_display1=dd;
  6463  00432E  0E0D               	movlw	13
  6464  004330  6F57               	movwf	(_menu_st+6)& (0+255),b
  6465                           
  6466                           ;sm_MenuConfiguration_MC50.c: 490:             menu_st.menuList[3].value_display2=d1;
  6467  004332  0E01               	movlw	1
  6468  004334  D051               	goto	L31
  6469  004336                     l20395:
  6470                           
  6471                           ; BSR set to: 1
  6472                           ;sm_MenuConfiguration_MC50.c: 494:         {;sm_MenuConfiguration_MC50.c: 495:          
      +                             menu_st.lastMenu=P_Menu;
  6473  004336  0E00               	movlw	0
  6474  004338  6F65               	movwf	(_menu_st+20)& (0+255),b
  6475                           
  6476                           ;sm_MenuConfiguration_MC50.c: 496:             menu_st.actualMenu=P1_SMenu;
  6477  00433A  0E05               	movlw	5
  6478  00433C  6F66               	movwf	(_menu_st+21)& (0+255),b
  6479                           
  6480                           ;sm_MenuConfiguration_MC50.c: 497:             menu_st.menuSize=2;
  6481  00433E  0E02               	movlw	2
  6482  004340  6F67               	movwf	(_menu_st+22)& (0+255),b
  6483                           
  6484                           ;sm_MenuConfiguration_MC50.c: 498:             menu_st.menuList[0].value_display1=dd;
  6485  004342  0E0D               	movlw	13
  6486  004344  6F51               	movwf	_menu_st& (0+255),b
  6487                           
  6488                           ;sm_MenuConfiguration_MC50.c: 499:             menu_st.menuList[0].value_display2=dA;
  6489  004346  0E0A               	movlw	10
  6490  004348  6F52               	movwf	(_menu_st+1)& (0+255),b
  6491                           
  6492                           ;sm_MenuConfiguration_MC50.c: 500:             menu_st.menuList[1].value_display1=dd;
  6493  00434A  0E0D               	movlw	13
  6494  00434C  6F53               	movwf	(_menu_st+2)& (0+255),b
  6495                           
  6496                           ;sm_MenuConfiguration_MC50.c: 501:             menu_st.menuList[1].value_display2=dF;
  6497  00434E  0E0F               	movlw	15
  6498  004350  D08E               	goto	L38
  6499  004352                     l20397:
  6500                           
  6501                           ; BSR set to: 1
  6502                           ;sm_MenuConfiguration_MC50.c: 508:         {;sm_MenuConfiguration_MC50.c: 509:          
      +                             menu_st.lastMenu=P_Menu;
  6503  004352  0E00               	movlw	0
  6504  004354  6F65               	movwf	(_menu_st+20)& (0+255),b
  6505                           
  6506                           ;sm_MenuConfiguration_MC50.c: 510:             menu_st.actualMenu=P2_SMenu;
  6507  004356  0E06               	movlw	6
  6508  004358  6F66               	movwf	(_menu_st+21)& (0+255),b
  6509                           
  6510                           ;sm_MenuConfiguration_MC50.c: 511:             menu_st.menuSize=3;
  6511  00435A  0E03               	movlw	3
  6512  00435C  6F67               	movwf	(_menu_st+22)& (0+255),b
  6513                           
  6514                           ;sm_MenuConfiguration_MC50.c: 512:             menu_st.menuList[0].value_display1=dF;
  6515  00435E  0E0F               	movlw	15
  6516  004360  6F51               	movwf	_menu_st& (0+255),b
  6517                           
  6518                           ;sm_MenuConfiguration_MC50.c: 513:             menu_st.menuList[0].value_display2=d0;
  6519  004362  0E00               	movlw	0
  6520  004364  6F52               	movwf	(_menu_st+1)& (0+255),b
  6521                           
  6522                           ;sm_MenuConfiguration_MC50.c: 514:             menu_st.menuList[1].value_display1=dF;
  6523  004366  0E0F               	movlw	15
  6524  004368  6F53               	movwf	(_menu_st+2)& (0+255),b
  6525                           
  6526                           ;sm_MenuConfiguration_MC50.c: 515:             menu_st.menuList[1].value_display2=d5;
  6527  00436A  0E05               	movlw	5
  6528  00436C  6F54               	movwf	(_menu_st+3)& (0+255),b
  6529                           
  6530                           ;sm_MenuConfiguration_MC50.c: 516:             menu_st.menuList[2].value_display1=dF;
  6531  00436E  0E0F               	movlw	15
  6532  004370  6F55               	movwf	(_menu_st+4)& (0+255),b
  6533                           
  6534                           ;sm_MenuConfiguration_MC50.c: 517:             menu_st.menuList[2].value_display2=dd;
  6535  004372  0E0D               	movlw	13
  6536  004374  D073               	goto	L33
  6537  004376                     l20399:
  6538                           
  6539                           ; BSR set to: 1
  6540                           ;sm_MenuConfiguration_MC50.c: 521:         {;sm_MenuConfiguration_MC50.c: 522:          
      +                             menu_st.lastMenu=P_Menu;
  6541  004376  0E00               	movlw	0
  6542  004378  6F65               	movwf	(_menu_st+20)& (0+255),b
  6543                           
  6544                           ;sm_MenuConfiguration_MC50.c: 523:             menu_st.actualMenu=P4_SMenu;
  6545  00437A  0E07               	movlw	7
  6546  00437C  6F66               	movwf	(_menu_st+21)& (0+255),b
  6547                           
  6548                           ;sm_MenuConfiguration_MC50.c: 524:             menu_st.menuSize=2;
  6549  00437E  0E02               	movlw	2
  6550  004380  6F67               	movwf	(_menu_st+22)& (0+255),b
  6551                           
  6552                           ;sm_MenuConfiguration_MC50.c: 525:             menu_st.menuList[0].value_display1=dA;
  6553  004382  0E0A               	movlw	10
  6554  004384  6F51               	movwf	_menu_st& (0+255),b
  6555                           
  6556                           ;sm_MenuConfiguration_MC50.c: 526:             menu_st.menuList[0].value_display2=dF;
  6557  004386  0E0F               	movlw	15
  6558  004388  6F52               	movwf	(_menu_st+1)& (0+255),b
  6559                           
  6560                           ;sm_MenuConfiguration_MC50.c: 527:             menu_st.menuList[1].value_display1=dA;
  6561  00438A  0E0A               	movlw	10
  6562  00438C  6F53               	movwf	(_menu_st+2)& (0+255),b
  6563                           
  6564                           ;sm_MenuConfiguration_MC50.c: 528:             menu_st.menuList[1].value_display2=dP;
  6565  00438E  0E10               	movlw	16
  6566  004390  D06E               	goto	L38
  6567  004392                     l20401:
  6568                           
  6569                           ; BSR set to: 1
  6570                           ;sm_MenuConfiguration_MC50.c: 532:         {;sm_MenuConfiguration_MC50.c: 533:          
      +                             menu_st.lastMenu=P_Menu;
  6571  004392  0E00               	movlw	0
  6572  004394  6F65               	movwf	(_menu_st+20)& (0+255),b
  6573                           
  6574                           ;sm_MenuConfiguration_MC50.c: 534:             menu_st.actualMenu=P5_SMenu;
  6575  004396  0E08               	movlw	8
  6576  004398  6F66               	movwf	(_menu_st+21)& (0+255),b
  6577                           
  6578                           ;sm_MenuConfiguration_MC50.c: 535:             menu_st.menuSize=2;
  6579  00439A  0E02               	movlw	2
  6580  00439C  6F67               	movwf	(_menu_st+22)& (0+255),b
  6581                           
  6582                           ;sm_MenuConfiguration_MC50.c: 536:             menu_st.menuList[0].value_display1=dL;
  6583  00439E  0E12               	movlw	18
  6584  0043A0  6F51               	movwf	_menu_st& (0+255),b
  6585                           
  6586                           ;sm_MenuConfiguration_MC50.c: 537:             menu_st.menuList[0].value_display2=dE;
  6587  0043A2  0E0E               	movlw	14
  6588  0043A4  6F52               	movwf	(_menu_st+1)& (0+255),b
  6589                           
  6590                           ;sm_MenuConfiguration_MC50.c: 538:             menu_st.menuList[1].value_display1=dH;
  6591  0043A6  0E11               	movlw	17
  6592  0043A8  6F53               	movwf	(_menu_st+2)& (0+255),b
  6593                           
  6594                           ;sm_MenuConfiguration_MC50.c: 539:             menu_st.menuList[1].value_display2=dC;
  6595  0043AA  0E0C               	movlw	12
  6596  0043AC  D060               	goto	L38
  6597  0043AE                     l20403:
  6598                           
  6599                           ; BSR set to: 1
  6600                           ;sm_MenuConfiguration_MC50.c: 543:         {;sm_MenuConfiguration_MC50.c: 544:          
      +                             menu_st.lastMenu=P_Menu;
  6601  0043AE  0E00               	movlw	0
  6602  0043B0  6F65               	movwf	(_menu_st+20)& (0+255),b
  6603                           
  6604                           ;sm_MenuConfiguration_MC50.c: 545:             menu_st.actualMenu=P6_SMenu;
  6605  0043B2  0E09               	movlw	9
  6606  0043B4  6F66               	movwf	(_menu_st+21)& (0+255),b
  6607                           
  6608                           ;sm_MenuConfiguration_MC50.c: 546:             menu_st.menuSize=4;
  6609  0043B6  0E04               	movlw	4
  6610  0043B8  6F67               	movwf	(_menu_st+22)& (0+255),b
  6611                           
  6612                           ;sm_MenuConfiguration_MC50.c: 547:             menu_st.menuList[0].value_display1=dL;
  6613  0043BA  0E12               	movlw	18
  6614  0043BC  6F51               	movwf	_menu_st& (0+255),b
  6615                           
  6616                           ;sm_MenuConfiguration_MC50.c: 548:             menu_st.menuList[0].value_display2=dA;
  6617  0043BE  0E0A               	movlw	10
  6618  0043C0  6F52               	movwf	(_menu_st+1)& (0+255),b
  6619                           
  6620                           ;sm_MenuConfiguration_MC50.c: 549:             menu_st.menuList[1].value_display1=dH;
  6621  0043C2  0E11               	movlw	17
  6622  0043C4  6F53               	movwf	(_menu_st+2)& (0+255),b
  6623                           
  6624                           ;sm_MenuConfiguration_MC50.c: 550:             menu_st.menuList[1].value_display2=dA;
  6625  0043C6  0E0A               	movlw	10
  6626  0043C8  6F54               	movwf	(_menu_st+3)& (0+255),b
  6627                           
  6628                           ;sm_MenuConfiguration_MC50.c: 551:             menu_st.menuList[2].value_display1=dH;
  6629  0043CA  0E11               	movlw	17
  6630  0043CC  6F55               	movwf	(_menu_st+4)& (0+255),b
  6631                           
  6632                           ;sm_MenuConfiguration_MC50.c: 552:             menu_st.menuList[2].value_display2=dL;
  6633  0043CE  0E12               	movlw	18
  6634  0043D0  6F56               	movwf	(_menu_st+5)& (0+255),b
  6635                           
  6636                           ;sm_MenuConfiguration_MC50.c: 553:             menu_st.menuList[3].value_display1=d5;
  6637  0043D2  0E05               	movlw	5
  6638  0043D4  6F57               	movwf	(_menu_st+6)& (0+255),b
  6639                           
  6640                           ;sm_MenuConfiguration_MC50.c: 554:             menu_st.menuList[3].value_display2=dt;
  6641  0043D6  0E15               	movlw	21
  6642  0043D8                     L31:
  6643  0043D8  6F58               	movwf	(_menu_st+7)& (0+255),b
  6644                           
  6645                           ;sm_MenuConfiguration_MC50.c: 556:         };sm_MenuConfiguration_MC50.c: 557:         b
      +                          reak;
  6646  0043DA  D07D               	goto	l20421
  6647  0043DC                     l20405:
  6648                           
  6649                           ; BSR set to: 1
  6650                           ;sm_MenuConfiguration_MC50.c: 559:         {;sm_MenuConfiguration_MC50.c: 560:          
      +                             menu_st.lastMenu=E_Menu;
  6651  0043DC  0E01               	movlw	1
  6652  0043DE  6F65               	movwf	(_menu_st+20)& (0+255),b
  6653                           
  6654                           ;sm_MenuConfiguration_MC50.c: 561:             menu_st.actualMenu=E0_SMenu;
  6655  0043E0  0E0A               	movlw	10
  6656  0043E2  6F66               	movwf	(_menu_st+21)& (0+255),b
  6657                           
  6658                           ;sm_MenuConfiguration_MC50.c: 562:             menu_st.menuSize=2;
  6659  0043E4  0E02               	movlw	2
  6660  0043E6  6F67               	movwf	(_menu_st+22)& (0+255),b
  6661                           
  6662                           ;sm_MenuConfiguration_MC50.c: 563:             menu_st.menuList[0].value_display1=dH;
  6663  0043E8  0E11               	movlw	17
  6664  0043EA  6F51               	movwf	_menu_st& (0+255),b
  6665                           
  6666                           ;sm_MenuConfiguration_MC50.c: 564:             menu_st.menuList[0].value_display2=dP;
  6667  0043EC  0E10               	movlw	16
  6668  0043EE  6F52               	movwf	(_menu_st+1)& (0+255),b
  6669                           
  6670                           ;sm_MenuConfiguration_MC50.c: 565:             menu_st.menuList[1].value_display1=dP;
  6671  0043F0  0E10               	movlw	16
  6672  0043F2  6F53               	movwf	(_menu_st+2)& (0+255),b
  6673                           
  6674                           ;sm_MenuConfiguration_MC50.c: 566:             menu_st.menuList[1].value_display2=dL;
  6675  0043F4  0E12               	movlw	18
  6676  0043F6  D03B               	goto	L38
  6677  0043F8                     l20407:
  6678                           
  6679                           ; BSR set to: 1
  6680                           ;sm_MenuConfiguration_MC50.c: 570:         {;sm_MenuConfiguration_MC50.c: 571:          
      +                             menu_st.lastMenu=E_Menu;
  6681  0043F8  0E01               	movlw	1
  6682  0043FA  6F65               	movwf	(_menu_st+20)& (0+255),b
  6683                           
  6684                           ;sm_MenuConfiguration_MC50.c: 572:             menu_st.actualMenu=E1_SMenu;
  6685  0043FC  0E0B               	movlw	11
  6686  0043FE  6F66               	movwf	(_menu_st+21)& (0+255),b
  6687                           
  6688                           ;sm_MenuConfiguration_MC50.c: 573:             menu_st.menuSize=2;
  6689  004400  0E02               	movlw	2
  6690  004402  6F67               	movwf	(_menu_st+22)& (0+255),b
  6691                           
  6692                           ;sm_MenuConfiguration_MC50.c: 574:             menu_st.menuList[0].value_display1=dr;
  6693  004404  0E14               	movlw	20
  6694  004406  6F51               	movwf	_menu_st& (0+255),b
  6695                           
  6696                           ;sm_MenuConfiguration_MC50.c: 575:             menu_st.menuList[0].value_display2=dq;
  6697  004408  0E24               	movlw	36
  6698  00440A  6F52               	movwf	(_menu_st+1)& (0+255),b
  6699                           
  6700                           ;sm_MenuConfiguration_MC50.c: 576:             menu_st.menuList[1].value_display1=dr;
  6701  00440C  0E14               	movlw	20
  6702  00440E  6F53               	movwf	(_menu_st+2)& (0+255),b
  6703                           
  6704                           ;sm_MenuConfiguration_MC50.c: 577:             menu_st.menuList[1].value_display2=dc;
  6705  004410  0E23               	movlw	35
  6706  004412  D02D               	goto	L38
  6707  004414                     l20409:
  6708                           
  6709                           ; BSR set to: 1
  6710                           ;sm_MenuConfiguration_MC50.c: 581:         {;sm_MenuConfiguration_MC50.c: 583:          
      +                             menu_st.actualMenu=S_Menu;
  6711  004414  0E0C               	movlw	12
  6712  004416  6F66               	movwf	(_menu_st+21)& (0+255),b
  6713                           
  6714                           ;sm_MenuConfiguration_MC50.c: 584:             menu_st.parameterSelected=0;
  6715  004418  0E00               	movlw	0
  6716  00441A  6F68               	movwf	(_menu_st+23)& (0+255),b
  6717                           
  6718                           ;sm_MenuConfiguration_MC50.c: 585:             menu_st.menuSize=2;
  6719  00441C  0E02               	movlw	2
  6720  00441E  6F67               	movwf	(_menu_st+22)& (0+255),b
  6721                           
  6722                           ;sm_MenuConfiguration_MC50.c: 586:             menu_st.menuList[0].value_display1=d5;
  6723  004420  0E05               	movlw	5
  6724  004422  6F51               	movwf	_menu_st& (0+255),b
  6725                           
  6726                           ;sm_MenuConfiguration_MC50.c: 587:             menu_st.menuList[0].value_display2=dU;
  6727  004424  0E13               	movlw	19
  6728  004426  6F52               	movwf	(_menu_st+1)& (0+255),b
  6729                           
  6730                           ;sm_MenuConfiguration_MC50.c: 588:             menu_st.menuList[1].value_display1=d5;
  6731  004428  0E05               	movlw	5
  6732  00442A  D7B0               	goto	L39
  6733  00442C                     l20411:
  6734                           
  6735                           ; BSR set to: 1
  6736                           ;sm_MenuConfiguration_MC50.c: 593:         {;sm_MenuConfiguration_MC50.c: 595:          
      +                             menu_st.actualMenu=Del_Menu;
  6737  00442C  0E0D               	movlw	13
  6738  00442E  6F66               	movwf	(_menu_st+21)& (0+255),b
  6739                           
  6740                           ;sm_MenuConfiguration_MC50.c: 596:             menu_st.menuSize=1;
  6741  004430  0E01               	movlw	1
  6742  004432  6F67               	movwf	(_menu_st+22)& (0+255),b
  6743                           
  6744                           ;sm_MenuConfiguration_MC50.c: 597:             menu_st.menuList[0].value_display1=dd;
  6745  004434  0E0D               	movlw	13
  6746  004436  6F51               	movwf	_menu_st& (0+255),b
  6747                           
  6748                           ;sm_MenuConfiguration_MC50.c: 598:             menu_st.menuList[0].value_display2=dL;
  6749  004438  0E12               	movlw	18
  6750  00443A  6F52               	movwf	(_menu_st+1)& (0+255),b
  6751                           
  6752                           ;sm_MenuConfiguration_MC50.c: 599:             ts_system.timeSinalizationDigit=(1000/50)
      +                          *3;
  6753  00443C  0E00               	movlw	0
  6754  00443E  6FA8               	movwf	(_ts_system+13)& (0+255),b	;volatile
  6755  004440  0E3C               	movlw	60
  6756  004442  6FA7               	movwf	(_ts_system+12)& (0+255),b	;volatile
  6757                           
  6758                           ;sm_MenuConfiguration_MC50.c: 600:         };sm_MenuConfiguration_MC50.c: 601:         b
      +                          reak;
  6759  004444  D048               	goto	l20421
  6760  004446                     l20413:
  6761                           
  6762                           ; BSR set to: 1
  6763                           ;sm_MenuConfiguration_MC50.c: 604:         {;sm_MenuConfiguration_MC50.c: 608:          
      +                             menu_st.menuList[0].value_display1=d5;
  6764  004446  0E05               	movlw	5
  6765  004448  6F51               	movwf	_menu_st& (0+255),b
  6766                           
  6767                           ;sm_MenuConfiguration_MC50.c: 609:             menu_st.menuList[0].value_display2=dC;
  6768  00444A  0E0C               	movlw	12
  6769  00444C  6F52               	movwf	(_menu_st+1)& (0+255),b
  6770                           
  6771                           ;sm_MenuConfiguration_MC50.c: 610:             menu_st.menuList[1].value_display1=d5;
  6772  00444E  0E05               	movlw	5
  6773  004450  6F53               	movwf	(_menu_st+2)& (0+255),b
  6774                           
  6775                           ;sm_MenuConfiguration_MC50.c: 611:             menu_st.menuList[1].value_display2=dE;
  6776  004452  0E0E               	movlw	14
  6777  004454  6F54               	movwf	(_menu_st+3)& (0+255),b
  6778                           
  6779                           ;sm_MenuConfiguration_MC50.c: 612:             menu_st.menuList[2].value_display1=db;
  6780  004456  0E22               	movlw	34
  6781  004458  6F55               	movwf	(_menu_st+4)& (0+255),b
  6782                           
  6783                           ;sm_MenuConfiguration_MC50.c: 613:             menu_st.menuList[2].value_display2=dr;
  6784  00445A  0E14               	movlw	20
  6785  00445C                     L33:
  6786  00445C  6F56               	movwf	(_menu_st+5)& (0+255),b
  6787                           
  6788                           ;sm_MenuConfiguration_MC50.c: 614:         };sm_MenuConfiguration_MC50.c: 615:         b
      +                          reak;
  6789  00445E  D03B               	goto	l20421
  6790  004460                     l20415:
  6791                           
  6792                           ; BSR set to: 1
  6793                           ;sm_MenuConfiguration_MC50.c: 617:         {;sm_MenuConfiguration_MC50.c: 621:          
      +                             menu_st.menuList[0].value_display1=dL;
  6794  004460  0E12               	movlw	18
  6795  004462  6F51               	movwf	_menu_st& (0+255),b
  6796                           
  6797                           ;sm_MenuConfiguration_MC50.c: 622:             menu_st.menuList[0].value_display2=dE;
  6798  004464  0E0E               	movlw	14
  6799  004466  6F52               	movwf	(_menu_st+1)& (0+255),b
  6800                           
  6801                           ;sm_MenuConfiguration_MC50.c: 623:             menu_st.menuList[1].value_display1=dr;
  6802  004468  0E14               	movlw	20
  6803  00446A  6F53               	movwf	(_menu_st+2)& (0+255),b
  6804                           
  6805                           ;sm_MenuConfiguration_MC50.c: 624:             menu_st.menuList[1].value_display2=dt;
  6806  00446C  0E15               	movlw	21
  6807  00446E                     L38:
  6808  00446E  6F54               	movwf	(_menu_st+3)& (0+255),b
  6809                           
  6810                           ;sm_MenuConfiguration_MC50.c: 626:         };sm_MenuConfiguration_MC50.c: 627:         b
      +                          reak;
  6811  004470  D032               	goto	l20421
  6812  004472                     l20419:
  6813                           
  6814                           ; BSR set to: 1
  6815  004472  5022               	movf	load_New_Menu@Menu^0,w,c
  6816  004474  6E20               	movwf	??_load_New_Menu^0,c
  6817  004476  6A21               	clrf	(??_load_New_Menu+1)^0,c
  6818                           
  6819                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6820                           ; Switch size 1, requested type "simple"
  6821                           ; Number of cases is 1, Range of values is 0 to 0
  6822                           ; switch strategies available:
  6823                           ; Name         Instructions Cycles
  6824                           ; simple_byte            4     3 (average)
  6825                           ;	Chosen strategy is simple_byte
  6826  004478  5021               	movf	(??_load_New_Menu+1)^0,w,c
  6827  00447A  0A00               	xorlw	0	; case 0
  6828  00447C  A4D8               	btfss	status,2,c
  6829  00447E  D02B               	goto	l20421
  6830                           
  6831                           ; BSR set to: 1
  6832                           ; Switch size 1, requested type "simple"
  6833                           ; Number of cases is 14, Range of values is 0 to 13
  6834                           ; switch strategies available:
  6835                           ; Name         Instructions Cycles
  6836                           ; simple_byte           43    22 (average)
  6837                           ;	Chosen strategy is simple_byte
  6838  004480  5020               	movf	??_load_New_Menu^0,w,c
  6839  004482  0A00               	xorlw	0	; case 0
  6840  004484  B4D8               	btfsc	status,2,c
  6841  004486  D6FF               	goto	l20369
  6842  004488  0A01               	xorlw	1	; case 1
  6843  00448A  B4D8               	btfsc	status,2,c
  6844  00448C  D71D               	goto	l20381
  6845  00448E  0A03               	xorlw	3	; case 2
  6846  004490  B4D8               	btfsc	status,2,c
  6847  004492  D7E6               	goto	l20415
  6848  004494  0A01               	xorlw	1	; case 3
  6849  004496  B4D8               	btfsc	status,2,c
  6850  004498  D7D6               	goto	l20413
  6851  00449A  0A07               	xorlw	7	; case 4
  6852  00449C  B4D8               	btfsc	status,2,c
  6853  00449E  D735               	goto	l20393
  6854  0044A0  0A01               	xorlw	1	; case 5
  6855  0044A2  B4D8               	btfsc	status,2,c
  6856  0044A4  D748               	goto	l20395
  6857  0044A6  0A03               	xorlw	3	; case 6
  6858  0044A8  B4D8               	btfsc	status,2,c
  6859  0044AA  D753               	goto	l20397
  6860  0044AC  0A01               	xorlw	1	; case 7
  6861  0044AE  B4D8               	btfsc	status,2,c
  6862  0044B0  D762               	goto	l20399
  6863  0044B2  0A0F               	xorlw	15	; case 8
  6864  0044B4  B4D8               	btfsc	status,2,c
  6865  0044B6  D76D               	goto	l20401
  6866  0044B8  0A01               	xorlw	1	; case 9
  6867  0044BA  B4D8               	btfsc	status,2,c
  6868  0044BC  D778               	goto	l20403
  6869  0044BE  0A03               	xorlw	3	; case 10
  6870  0044C0  B4D8               	btfsc	status,2,c
  6871  0044C2  D78C               	goto	l20405
  6872  0044C4  0A01               	xorlw	1	; case 11
  6873  0044C6  B4D8               	btfsc	status,2,c
  6874  0044C8  D797               	goto	l20407
  6875  0044CA  0A07               	xorlw	7	; case 12
  6876  0044CC  B4D8               	btfsc	status,2,c
  6877  0044CE  D7A2               	goto	l20409
  6878  0044D0  0A01               	xorlw	1	; case 13
  6879  0044D2  B4D8               	btfsc	status,2,c
  6880  0044D4  D7AB               	goto	l20411
  6881  0044D6                     l20421:
  6882                           
  6883                           ;sm_MenuConfiguration_MC50.c: 632:     if(menu_st.parameterSelected>=menu_st.menuSize)
  6884  0044D6  0101               	movlb	1	; () banked
  6885  0044D8  5167               	movf	(_menu_st+22)& (0+255),w,b
  6886  0044DA  5D68               	subwf	(_menu_st+23)& (0+255),w,b
  6887  0044DC  A0D8               	btfss	status,0,c
  6888  0044DE  D002               	goto	l20425
  6889                           
  6890                           ; BSR set to: 1
  6891                           ;sm_MenuConfiguration_MC50.c: 633:     {;sm_MenuConfiguration_MC50.c: 634:         menu_
      +                          st.parameterSelected=0;
  6892  0044E0  0E00               	movlw	0
  6893  0044E2  6F68               	movwf	(_menu_st+23)& (0+255),b
  6894  0044E4                     l20425:
  6895                           
  6896                           ; BSR set to: 1
  6897                           ;sm_MenuConfiguration_MC50.c: 637:     if(Menu==Del_Menu)
  6898  0044E4  0E0D               	movlw	13
  6899  0044E6  1822               	xorwf	load_New_Menu@Menu^0,w,c
  6900  0044E8  A4D8               	btfss	status,2,c
  6901  0044EA  D01A               	goto	l20429
  6902                           
  6903                           ; BSR set to: 1
  6904                           ;sm_MenuConfiguration_MC50.c: 638:     {;sm_MenuConfiguration_MC50.c: 639:         SetSe
      +                          gmentValueIntermitentMain(menu_st.menuList[ menu_st.parameterSelected].value_display1, m
      +                          enu_st.menuList[ menu_st.parameterSelected].value_display2,( 500/50));
  6905  0044EC  5168               	movf	(_menu_st+23)& (0+255),w,b
  6906  0044EE  0D02               	mullw	2
  6907  0044F0  0E52               	movlw	low (_menu_st+1)
  6908  0044F2  24F3               	addwf	243,w,c
  6909  0044F4  6ED9               	movwf	fsr2l,c
  6910  0044F6  0E01               	movlw	high (_menu_st+1)
  6911  0044F8  20F4               	addwfc	prodh,w,c
  6912  0044FA  6EDA               	movwf	fsr2h,c
  6913  0044FC  50DF               	movf	indf2,w,c
  6914  0044FE  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  6915  004500  0E00               	movlw	0
  6916  004502  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  6917  004504  0E0A               	movlw	10
  6918  004506  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  6919  004508  5168               	movf	(_menu_st+23)& (0+255),w,b
  6920  00450A  0D02               	mullw	2
  6921  00450C  0E51               	movlw	low _menu_st
  6922  00450E  24F3               	addwf	243,w,c
  6923  004510  6ED9               	movwf	fsr2l,c
  6924  004512  0E01               	movlw	high _menu_st
  6925  004514  20F4               	addwfc	prodh,w,c
  6926  004516  6EDA               	movwf	fsr2h,c
  6927  004518  50DF               	movf	indf2,w,c
  6928  00451A  EC38  F04B         	call	_SetSegmentValueIntermitentMain
  6929                           
  6930                           ;sm_MenuConfiguration_MC50.c: 640:     }
  6931  00451E  0012               	return	
  6932  004520                     l20429:
  6933                           
  6934                           ; BSR set to: 1
  6935                           ;sm_MenuConfiguration_MC50.c: 642:     {;sm_MenuConfiguration_MC50.c: 643:         SetSe
      +                          gmentValueMain(menu_st.menuList[ menu_st.parameterSelected].value_display1, menu_st.menu
      +                          List[ menu_st.parameterSelected].value_display2);
  6936  004520  5168               	movf	(_menu_st+23)& (0+255),w,b
  6937  004522  0D02               	mullw	2
  6938  004524  0E52               	movlw	low (_menu_st+1)
  6939  004526  24F3               	addwf	243,w,c
  6940  004528  6ED9               	movwf	fsr2l,c
  6941  00452A  0E01               	movlw	high (_menu_st+1)
  6942  00452C  20F4               	addwfc	prodh,w,c
  6943  00452E  6EDA               	movwf	fsr2h,c
  6944  004530  50DF               	movf	indf2,w,c
  6945  004532  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  6946  004534  5168               	movf	(_menu_st+23)& (0+255),w,b
  6947  004536  0D02               	mullw	2
  6948  004538  0E51               	movlw	low _menu_st
  6949  00453A  24F3               	addwf	243,w,c
  6950  00453C  6ED9               	movwf	fsr2l,c
  6951  00453E  0E01               	movlw	high _menu_st
  6952  004540  20F4               	addwfc	prodh,w,c
  6953  004542  6EDA               	movwf	fsr2h,c
  6954  004544  50DF               	movf	indf2,w,c
  6955  004546  EC9C  F04A         	call	_SetSegmentValueMain
  6956  00454A  0012               	return		;funcret
  6957  00454C                     __end_of_load_New_Menu:
  6958                           	callstack 0
  6959                           
  6960 ;; *************** function _InitReceiver *****************
  6961 ;; Defined at:
  6962 ;;		line 207 in file "inputs_MC50.c"
  6963 ;; Parameters:    Size  Location     Type
  6964 ;;		None
  6965 ;; Auto vars:     Size  Location     Type
  6966 ;;		None
  6967 ;; Return value:  Size  Location     Type
  6968 ;;                  1    wreg      void 
  6969 ;; Registers used:
  6970 ;;		wreg, status,2
  6971 ;; Tracked objects:
  6972 ;;		On entry : 30/F
  6973 ;;		On exit  : 3F/0
  6974 ;;		Unchanged: 0/0
  6975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6979 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6980 ;;Total ram usage:        0 bytes
  6981 ;; Hardware stack levels used: 1
  6982 ;; Hardware stack levels required when called: 4
  6983 ;; This function calls:
  6984 ;;		Nothing
  6985 ;; This function is called by:
  6986 ;;		_main
  6987 ;;		_setValueToEdit
  6988 ;; This function uses a non-reentrant model
  6989 ;;
  6990                           
  6991                           	psect	text5
  6992  00951E                     __ptext5:
  6993                           	callstack 0
  6994  00951E                     _InitReceiver:
  6995                           	callstack 23
  6996                           
  6997                           ;inputs_MC50.c: 208:     TMR0IF = 0;
  6998                           
  6999                           ;incstack = 0
  7000  00951E  010E               	movlb	14	; () banked
  7001  009520  9BCA               	bcf	202,5,b	;volatile
  7002                           
  7003                           ;inputs_MC50.c: 209:     TMR0IE = 1;
  7004  009522  8BC2               	bsf	194,5,b	;volatile
  7005                           
  7006                           ;inputs_MC50.c: 210:     GIE = 1;
  7007  009524  8EF2               	bsf	4082,7,c	;volatile
  7008                           
  7009                           ; BSR set to: 14
  7010                           ;inputs_MC50.c: 211:     RFstate = 0;
  7011  009526  0E00               	movlw	0
  7012  009528  0101               	movlb	1	; () banked
  7013  00952A  6F99               	movwf	_RFstate& (0+255),b
  7014                           
  7015                           ;inputs_MC50.c: 212:     RFFull_12BIT=0;
  7016  00952C  0E00               	movlw	0
  7017  00952E  0100               	movlb	0	; () banked
  7018  009530  6F8A               	movwf	_RFFull_12BIT& (0+255),b	;volatile
  7019                           
  7020                           ;inputs_MC50.c: 213:     RFFull = 0;
  7021  009532  0E00               	movlw	0
  7022  009534  6F8B               	movwf	_RFFull& (0+255),b	;volatile
  7023                           
  7024                           ; BSR set to: 0
  7025  009536  0012               	return		;funcret
  7026  009538                     __end_of_InitReceiver:
  7027                           	callstack 0
  7028                           
  7029 ;; *************** function _controlSelectRemote *****************
  7030 ;; Defined at:
  7031 ;;		line 1098 in file "sm_MenuConfiguration_MC50.c"
  7032 ;; Parameters:    Size  Location     Type
  7033 ;;		None
  7034 ;; Auto vars:     Size  Location     Type
  7035 ;;  typeRemote      1   11[BANK0 ] enum E10392
  7036 ;;  pos             1   10[BANK0 ] unsigned char 
  7037 ;;  tempSerial      4   12[BANK0 ] unsigned long 
  7038 ;;  temp            1   16[BANK0 ] unsigned char 
  7039 ;;  validSerial     1    9[BANK0 ] unsigned char 
  7040 ;; Return value:  Size  Location     Type
  7041 ;;                  1    wreg      void 
  7042 ;; Registers used:
  7043 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7044 ;; Tracked objects:
  7045 ;;		On entry : 3F/1
  7046 ;;		On exit  : 0/0
  7047 ;;		Unchanged: 0/0
  7048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7050 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7051 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7052 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7053 ;;Total ram usage:        9 bytes
  7054 ;; Hardware stack levels used: 1
  7055 ;; Hardware stack levels required when called: 14
  7056 ;; This function calls:
  7057 ;;		_ClearFlag_rfCMD
  7058 ;;		_RemoveSerial
  7059 ;;		_SaveNVM_VarSystem
  7060 ;;		_SetSegmentValue
  7061 ;;		_SetSegmentValueIntermitentMain
  7062 ;;		_SetSegmentValueMain
  7063 ;;		___awdiv
  7064 ;;		___lbmod
  7065 ;;		_cmdMemoryIsEmpty
  7066 ;;		_getSerialCmd
  7067 ;;		_getTypeRemote
  7068 ;;		_saveNewSerial
  7069 ;;		_sm_send_event
  7070 ;;		_validateRemoteSerialNumber
  7071 ;; This function is called by:
  7072 ;;		_sm_execute_menuConfiguration
  7073 ;; This function uses a non-reentrant model
  7074 ;;
  7075                           
  7076                           	psect	text6
  7077  003828                     __ptext6:
  7078                           	callstack 0
  7079  003828                     _controlSelectRemote:
  7080                           	callstack 14
  7081                           
  7082                           ; BSR set to: 1
  7083                           ;sm_MenuConfiguration_MC50.c: 1099:     unsigned long tempSerial;;sm_MenuConfiguration_M
      +                          C50.c: 1100:     char temp=getSerialCmd(&tempSerial);
  7084                           
  7085                           ; BSR set to: 0
  7086                           ;incstack = 0
  7087  003828  0EE4               	movlw	low controlSelectRemote@tempSerial
  7088  00382A  6E1B               	movwf	getSerialCmd@serial^0,c
  7089  00382C  ECAE  F045         	call	_getSerialCmd	;wreg free
  7090  003830  0100               	movlb	0	; () banked
  7091  003832  6FE8               	movwf	controlSelectRemote@temp& (0+255),b
  7092                           
  7093                           ; BSR set to: 0
  7094                           ;sm_MenuConfiguration_MC50.c: 1101:     char validSerial;;sm_MenuConfiguration_MC50.c: 1
      +                          102:     if(ts_system.timeoutMenu<=0 || button_struct.current==0x00)
  7095  003834  0101               	movlb	1	; () banked
  7096  003836  BFAA               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  7097  003838  D008               	goto	u24540
  7098  00383A  51AA               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  7099  00383C  E103               	bnz	u24530
  7100  00383E  05A9               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  7101  003840  A0D8               	btfss	status,0,c
  7102  003842  D003               	goto	u24540
  7103  003844                     u24530:
  7104                           
  7105                           ; BSR set to: 1
  7106  003844  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  7107  003846  A4D8               	btfss	status,2,c
  7108  003848  D028               	goto	l21499
  7109  00384A                     u24540:
  7110                           
  7111                           ; BSR set to: 1
  7112                           ;sm_MenuConfiguration_MC50.c: 1103:     {;sm_MenuConfiguration_MC50.c: 1104:         sm_
      +                          send_event(&main_stateMachine, ev_goto_StandBy);
  7113  00384A  0EEE               	movlw	low _main_stateMachine
  7114  00384C  6E12               	movwf	sm_send_event@psm^0,c
  7115  00384E  0E01               	movlw	high _main_stateMachine
  7116  003850  6E13               	movwf	(sm_send_event@psm+1)^0,c
  7117  003852  0E00               	movlw	0
  7118  003854  6E15               	movwf	(sm_send_event@event+1)^0,c
  7119  003856  0E07               	movlw	7
  7120  003858  6E14               	movwf	sm_send_event@event^0,c
  7121  00385A  ECA7  F043         	call	_sm_send_event	;wreg free
  7122                           
  7123                           ;sm_MenuConfiguration_MC50.c: 1105:         sm_send_event(&menuConfiguration_stateMachin
      +                          e, ev_CancelEdition);
  7124  00385E  0EBF               	movlw	low _menuConfiguration_stateMachine
  7125  003860  6E12               	movwf	sm_send_event@psm^0,c
  7126  003862  0E02               	movlw	high _menuConfiguration_stateMachine
  7127  003864  6E13               	movwf	(sm_send_event@psm+1)^0,c
  7128  003866  0E00               	movlw	0
  7129  003868  6E15               	movwf	(sm_send_event@event+1)^0,c
  7130  00386A  0E03               	movlw	3
  7131  00386C  6E14               	movwf	sm_send_event@event^0,c
  7132  00386E  ECA7  F043         	call	_sm_send_event	;wreg free
  7133                           
  7134                           ;sm_MenuConfiguration_MC50.c: 1106:         var_sys.DistanceProgrammingActive=NO;
  7135  003872  0E00               	movlw	0
  7136  003874  0101               	movlb	1	; () banked
  7137  003876  6F40               	movwf	(_var_sys+64)& (0+255),b	;volatile
  7138                           
  7139                           ; BSR set to: 1
  7140                           ;sm_MenuConfiguration_MC50.c: 1107:         var_sys.ProgrammingDistanceIs=NoCMD;
  7141  003878  0E00               	movlw	0
  7142  00387A  6F3B               	movwf	(_var_sys+59)& (0+255),b	;volatile
  7143                           
  7144                           ; BSR set to: 1
  7145                           ;sm_MenuConfiguration_MC50.c: 1108:         SetSegmentValueMain(dMinus,dMinus);
  7146  00387C  0E18               	movlw	24
  7147  00387E  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  7148  003880  0E18               	movlw	24
  7149  003882  EC9C  F04A         	call	_SetSegmentValueMain
  7150                           
  7151                           ; BSR set to: 0
  7152                           ;sm_MenuConfiguration_MC50.c: 1109:         ClearFlag_rfCMD();
  7153  003886  ECED  F04B         	call	_ClearFlag_rfCMD	;wreg free
  7154                           
  7155                           ;sm_MenuConfiguration_MC50.c: 1110:         button_struct.processed=1;
  7156  00388A  0E01               	movlw	1
  7157  00388C  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  7158                           
  7159                           ;sm_MenuConfiguration_MC50.c: 1111:         ts_system.timeoutMenu = 0;
  7160  00388E  0E00               	movlw	0
  7161  003890  0101               	movlb	1	; () banked
  7162  003892  6FAA               	movwf	(_ts_system+15)& (0+255),b	;volatile
  7163  003894  0E00               	movlw	0
  7164  003896  6FA9               	movwf	(_ts_system+14)& (0+255),b	;volatile
  7165                           
  7166                           ;sm_MenuConfiguration_MC50.c: 1113:     }
  7167  003898  0012               	return	
  7168  00389A                     l21499:
  7169                           
  7170                           ; BSR set to: 1
  7171  00389A  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  7172  00389C  A4D8               	btfss	status,2,c
  7173  00389E  D05B               	goto	l21521
  7174                           
  7175                           ; BSR set to: 1
  7176  0038A0  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  7177  0038A2  B4D8               	btfsc	status,2,c
  7178  0038A4  D058               	goto	l21521
  7179                           
  7180                           ; BSR set to: 1
  7181                           ;sm_MenuConfiguration_MC50.c: 1115:     {;sm_MenuConfiguration_MC50.c: 1116:         ts_
      +                          system.timeoutMenu=((1000/50)*5) ;
  7182  0038A6  0E00               	movlw	0
  7183  0038A8  6FAA               	movwf	(_ts_system+15)& (0+255),b	;volatile
  7184  0038AA  0E64               	movlw	100
  7185  0038AC  6FA9               	movwf	(_ts_system+14)& (0+255),b	;volatile
  7186                           
  7187                           ; BSR set to: 1
  7188                           ;sm_MenuConfiguration_MC50.c: 1117:         if(edit_Param.tempValue<=edit_Param.Min)
  7189  0038AE  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7190  0038B0  5C4B               	subwf	(_edit_Param+5)^0,w,c	;volatile
  7191  0038B2  A0D8               	btfss	status,0,c
  7192  0038B4  D003               	goto	l21509
  7193                           
  7194                           ; BSR set to: 1
  7195                           ;sm_MenuConfiguration_MC50.c: 1118:         {;sm_MenuConfiguration_MC50.c: 1119:        
      +                               edit_Param.tempValue=edit_Param.Max;
  7196  0038B6  C04A  F049         	movff	_edit_Param+4,_edit_Param+3	;volatile
  7197                           
  7198                           ;sm_MenuConfiguration_MC50.c: 1120:         }
  7199  0038BA  D001               	goto	l21511
  7200  0038BC                     l21509:
  7201                           
  7202                           ; BSR set to: 1
  7203                           ;sm_MenuConfiguration_MC50.c: 1122:         {;sm_MenuConfiguration_MC50.c: 1123:        
      +                               edit_Param.tempValue--;
  7204  0038BC  0649               	decf	(_edit_Param+3)^0,f,c	;volatile
  7205  0038BE                     l21511:
  7206                           
  7207                           ; BSR set to: 1
  7208                           ;sm_MenuConfiguration_MC50.c: 1125:         if(cmdMemoryIsEmpty(menu_st.parameterSelecte
      +                          d,edit_Param.tempValue)==1 || edit_Param.tempValue==edit_Param.Max)
  7209  0038BE  C049  F02E         	movff	_edit_Param+3,cmdMemoryIsEmpty@position	;volatile
  7210  0038C2  5168               	movf	(_menu_st+23)& (0+255),w,b
  7211  0038C4  ECFD  F03C         	call	_cmdMemoryIsEmpty
  7212  0038C8  06E8               	decf	wreg,f,c
  7213  0038CA  B4D8               	btfsc	status,2,c
  7214  0038CC  D004               	goto	u24590
  7215  0038CE  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  7216  0038D0  1849               	xorwf	(_edit_Param+3)^0,w,c	;volatile
  7217  0038D2  A4D8               	btfss	status,2,c
  7218  0038D4  D021               	goto	l21517
  7219  0038D6                     u24590:
  7220                           
  7221                           ;sm_MenuConfiguration_MC50.c: 1126:         {;sm_MenuConfiguration_MC50.c: 1127:        
      +                               SetSegmentValueIntermitentMain((edit_Param.tempValue-edit_Param.tempValue%10)/10, e
      +                          dit_Param.tempValue%10,(1000/50));
  7222  0038D6  0E0A               	movlw	10
  7223  0038D8  6E10               	movwf	___lbmod@divisor^0,c
  7224  0038DA  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7225  0038DC  EC64  F049         	call	___lbmod
  7226  0038E0  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  7227  0038E2  0E00               	movlw	0
  7228  0038E4  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  7229  0038E6  0E14               	movlw	20
  7230  0038E8  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  7231  0038EA  0E0A               	movlw	10
  7232  0038EC  6E10               	movwf	___lbmod@divisor^0,c
  7233  0038EE  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7234  0038F0  EC64  F049         	call	___lbmod
  7235  0038F4  0100               	movlb	0	; () banked
  7236  0038F6  6FE0               	movwf	??_controlSelectRemote& (0+255),b
  7237  0038F8  51E0               	movf	??_controlSelectRemote& (0+255),w,b
  7238  0038FA  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  7239  0038FC  6E14               	movwf	___awdiv@dividend^0,c
  7240  0038FE  6A15               	clrf	(___awdiv@dividend+1)^0,c
  7241  003900  A0D8               	btfss	status,0,c
  7242  003902  0615               	decf	(___awdiv@dividend+1)^0,f,c
  7243  003904  0E00               	movlw	0
  7244  003906  6E17               	movwf	(___awdiv@divisor+1)^0,c
  7245  003908  0E0A               	movlw	10
  7246  00390A  6E16               	movwf	___awdiv@divisor^0,c
  7247  00390C  ECE8  F03E         	call	___awdiv	;wreg free
  7248  003910  5014               	movf	?___awdiv^0,w,c
  7249  003912  EC38  F04B         	call	_SetSegmentValueIntermitentMain
  7250                           
  7251                           ;sm_MenuConfiguration_MC50.c: 1128:         }
  7252  003916  D01C               	goto	l21519
  7253  003918                     l21517:
  7254                           
  7255                           ;sm_MenuConfiguration_MC50.c: 1130:         {;sm_MenuConfiguration_MC50.c: 1131:        
      +                               SetSegmentValueMain((edit_Param.tempValue-edit_Param.tempValue%10)/10, edit_Param.t
      +                          empValue%10);
  7256  003918  0E0A               	movlw	10
  7257  00391A  6E10               	movwf	___lbmod@divisor^0,c
  7258  00391C  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7259  00391E  EC64  F049         	call	___lbmod
  7260  003922  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  7261  003924  0E0A               	movlw	10
  7262  003926  6E10               	movwf	___lbmod@divisor^0,c
  7263  003928  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7264  00392A  EC64  F049         	call	___lbmod
  7265  00392E  0100               	movlb	0	; () banked
  7266  003930  6FE0               	movwf	??_controlSelectRemote& (0+255),b
  7267  003932  51E0               	movf	??_controlSelectRemote& (0+255),w,b
  7268  003934  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  7269  003936  6E14               	movwf	___awdiv@dividend^0,c
  7270  003938  6A15               	clrf	(___awdiv@dividend+1)^0,c
  7271  00393A  A0D8               	btfss	status,0,c
  7272  00393C  0615               	decf	(___awdiv@dividend+1)^0,f,c
  7273  00393E  0E00               	movlw	0
  7274  003940  6E17               	movwf	(___awdiv@divisor+1)^0,c
  7275  003942  0E0A               	movlw	10
  7276  003944  6E16               	movwf	___awdiv@divisor^0,c
  7277  003946  ECE8  F03E         	call	___awdiv	;wreg free
  7278  00394A  5014               	movf	?___awdiv^0,w,c
  7279  00394C  EC9C  F04A         	call	_SetSegmentValueMain
  7280  003950                     l21519:
  7281                           
  7282                           ;sm_MenuConfiguration_MC50.c: 1133:         button_struct.processed=1;
  7283  003950  0E01               	movlw	1
  7284  003952  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  7285                           
  7286                           ;sm_MenuConfiguration_MC50.c: 1134:     }
  7287  003954  0012               	return	
  7288  003956                     l21521:
  7289                           
  7290                           ; BSR set to: 1
  7291  003956  0E17               	movlw	23
  7292  003958  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  7293  00395A  A4D8               	btfss	status,2,c
  7294  00395C  D057               	goto	l21543
  7295                           
  7296                           ; BSR set to: 1
  7297  00395E  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  7298  003960  B4D8               	btfsc	status,2,c
  7299  003962  D054               	goto	l21543
  7300                           
  7301                           ; BSR set to: 1
  7302                           ;sm_MenuConfiguration_MC50.c: 1136:     {;sm_MenuConfiguration_MC50.c: 1137:         ts_
      +                          system.timeoutMenu=((1000/50)*5) ;
  7303  003964  0E00               	movlw	0
  7304  003966  6FAA               	movwf	(_ts_system+15)& (0+255),b	;volatile
  7305  003968  0E64               	movlw	100
  7306  00396A  6FA9               	movwf	(_ts_system+14)& (0+255),b	;volatile
  7307                           
  7308                           ; BSR set to: 1
  7309                           ;sm_MenuConfiguration_MC50.c: 1138:         edit_Param.tempValue++;
  7310  00396C  2A49               	incf	(_edit_Param+3)^0,f,c	;volatile
  7311                           
  7312                           ; BSR set to: 1
  7313                           ;sm_MenuConfiguration_MC50.c: 1139:         if(edit_Param.tempValue>edit_Param.Max)
  7314  00396E  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7315  003970  5C4A               	subwf	(_edit_Param+4)^0,w,c	;volatile
  7316  003972  A0D8               	btfss	status,0,c
  7317                           
  7318                           ; BSR set to: 1
  7319                           ;sm_MenuConfiguration_MC50.c: 1140:         {;sm_MenuConfiguration_MC50.c: 1141:        
      +                                edit_Param.tempValue=edit_Param.Min;
  7320  003974  C04B  F049         	movff	_edit_Param+5,_edit_Param+3	;volatile
  7321                           
  7322                           ; BSR set to: 1
  7323                           ;sm_MenuConfiguration_MC50.c: 1143:         if(cmdMemoryIsEmpty(menu_st.parameterSelecte
      +                          d,edit_Param.tempValue)==1|| edit_Param.tempValue==edit_Param.Max)
  7324  003978  C049  F02E         	movff	_edit_Param+3,cmdMemoryIsEmpty@position	;volatile
  7325  00397C  5168               	movf	(_menu_st+23)& (0+255),w,b
  7326  00397E  ECFD  F03C         	call	_cmdMemoryIsEmpty
  7327  003982  06E8               	decf	wreg,f,c
  7328  003984  B4D8               	btfsc	status,2,c
  7329  003986  D004               	goto	u24640
  7330  003988  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  7331  00398A  1849               	xorwf	(_edit_Param+3)^0,w,c	;volatile
  7332  00398C  A4D8               	btfss	status,2,c
  7333  00398E  D021               	goto	l21539
  7334  003990                     u24640:
  7335                           
  7336                           ;sm_MenuConfiguration_MC50.c: 1144:         {;sm_MenuConfiguration_MC50.c: 1145:        
      +                               SetSegmentValueIntermitentMain((edit_Param.tempValue-edit_Param.tempValue%10)/10, e
      +                          dit_Param.tempValue%10,(1000/50));
  7337  003990  0E0A               	movlw	10
  7338  003992  6E10               	movwf	___lbmod@divisor^0,c
  7339  003994  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7340  003996  EC64  F049         	call	___lbmod
  7341  00399A  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  7342  00399C  0E00               	movlw	0
  7343  00399E  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  7344  0039A0  0E14               	movlw	20
  7345  0039A2  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  7346  0039A4  0E0A               	movlw	10
  7347  0039A6  6E10               	movwf	___lbmod@divisor^0,c
  7348  0039A8  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7349  0039AA  EC64  F049         	call	___lbmod
  7350  0039AE  0100               	movlb	0	; () banked
  7351  0039B0  6FE0               	movwf	??_controlSelectRemote& (0+255),b
  7352  0039B2  51E0               	movf	??_controlSelectRemote& (0+255),w,b
  7353  0039B4  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  7354  0039B6  6E14               	movwf	___awdiv@dividend^0,c
  7355  0039B8  6A15               	clrf	(___awdiv@dividend+1)^0,c
  7356  0039BA  A0D8               	btfss	status,0,c
  7357  0039BC  0615               	decf	(___awdiv@dividend+1)^0,f,c
  7358  0039BE  0E00               	movlw	0
  7359  0039C0  6E17               	movwf	(___awdiv@divisor+1)^0,c
  7360  0039C2  0E0A               	movlw	10
  7361  0039C4  6E16               	movwf	___awdiv@divisor^0,c
  7362  0039C6  ECE8  F03E         	call	___awdiv	;wreg free
  7363  0039CA  5014               	movf	?___awdiv^0,w,c
  7364  0039CC  EC38  F04B         	call	_SetSegmentValueIntermitentMain
  7365                           
  7366                           ;sm_MenuConfiguration_MC50.c: 1146:         }
  7367  0039D0  D7BF               	goto	l21519
  7368  0039D2                     l21539:
  7369                           
  7370                           ;sm_MenuConfiguration_MC50.c: 1148:         {;sm_MenuConfiguration_MC50.c: 1149:        
      +                               SetSegmentValue((edit_Param.tempValue-edit_Param.tempValue%10)/10, edit_Param.tempV
      +                          alue%10);
  7371  0039D2  0E0A               	movlw	10
  7372  0039D4  6E10               	movwf	___lbmod@divisor^0,c
  7373  0039D6  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7374  0039D8  EC64  F049         	call	___lbmod
  7375  0039DC  6E1C               	movwf	SetSegmentValue@d2^0,c
  7376  0039DE  0E0A               	movlw	10
  7377  0039E0  6E10               	movwf	___lbmod@divisor^0,c
  7378  0039E2  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7379  0039E4  EC64  F049         	call	___lbmod
  7380  0039E8  0100               	movlb	0	; () banked
  7381  0039EA  6FE0               	movwf	??_controlSelectRemote& (0+255),b
  7382  0039EC  51E0               	movf	??_controlSelectRemote& (0+255),w,b
  7383  0039EE  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  7384  0039F0  6E14               	movwf	___awdiv@dividend^0,c
  7385  0039F2  6A15               	clrf	(___awdiv@dividend+1)^0,c
  7386  0039F4  A0D8               	btfss	status,0,c
  7387  0039F6  0615               	decf	(___awdiv@dividend+1)^0,f,c
  7388  0039F8  0E00               	movlw	0
  7389  0039FA  6E17               	movwf	(___awdiv@divisor+1)^0,c
  7390  0039FC  0E0A               	movlw	10
  7391  0039FE  6E16               	movwf	___awdiv@divisor^0,c
  7392  003A00  ECE8  F03E         	call	___awdiv	;wreg free
  7393  003A04  5014               	movf	?___awdiv^0,w,c
  7394  003A06  ECB6  F04A         	call	_SetSegmentValue
  7395  003A0A  D7A2               	goto	l21519
  7396  003A0C                     l21543:
  7397                           
  7398                           ; BSR set to: 1
  7399  003A0C  0E63               	movlw	99
  7400  003A0E  644A               	cpfsgt	(_edit_Param+4)^0,c	;volatile
  7401  003A10  D01A               	goto	l21553
  7402                           
  7403                           ; BSR set to: 1
  7404  003A12  0E63               	movlw	99
  7405  003A14  6449               	cpfsgt	(_edit_Param+3)^0,c	;volatile
  7406  003A16  D017               	goto	l21553
  7407                           
  7408                           ; BSR set to: 1
  7409                           ;sm_MenuConfiguration_MC50.c: 1154:     {;sm_MenuConfiguration_MC50.c: 1155:         if(
      +                          menu_st.parameterSelected==0)
  7410  003A18  5168               	movf	(_menu_st+23)& (0+255),w,b
  7411  003A1A  A4D8               	btfss	status,2,c
  7412  003A1C  D00A               	goto	l21551
  7413                           
  7414                           ; BSR set to: 1
  7415                           ;sm_MenuConfiguration_MC50.c: 1156:         {;sm_MenuConfiguration_MC50.c: 1157:        
      +                               SetSegmentValueIntermitentMain(dL, dU,( 500/50));
  7416  003A1E  0E13               	movlw	19
  7417  003A20  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  7418  003A22  0E00               	movlw	0
  7419  003A24  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  7420  003A26  0E0A               	movlw	10
  7421  003A28  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  7422  003A2A  0E12               	movlw	18
  7423  003A2C  EC38  F04B         	call	_SetSegmentValueIntermitentMain
  7424                           
  7425                           ;sm_MenuConfiguration_MC50.c: 1158:         }
  7426  003A30  0012               	return	
  7427  003A32                     l21551:
  7428                           
  7429                           ; BSR set to: 1
  7430                           ;sm_MenuConfiguration_MC50.c: 1160:         {;sm_MenuConfiguration_MC50.c: 1161:        
      +                               SetSegmentValueIntermitentMain(dL, dP,( 500/50));
  7431  003A32  0E10               	movlw	16
  7432  003A34  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  7433  003A36  0E00               	movlw	0
  7434  003A38  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  7435  003A3A  0E0A               	movlw	10
  7436  003A3C  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  7437  003A3E  0E12               	movlw	18
  7438  003A40  EC38  F04B         	call	_SetSegmentValueIntermitentMain
  7439  003A44  0012               	return	
  7440  003A46                     l21553:
  7441                           
  7442                           ; BSR set to: 1
  7443  003A46  0100               	movlb	0	; () banked
  7444  003A48  29E8               	incf	controlSelectRemote@temp& (0+255),w,b
  7445  003A4A  B4D8               	btfsc	status,2,c
  7446  003A4C  D097               	goto	l21611
  7447                           
  7448                           ; BSR set to: 0
  7449  003A4E  51E8               	movf	controlSelectRemote@temp& (0+255),w,b
  7450  003A50  B4D8               	btfsc	status,2,c
  7451  003A52  D00F               	goto	u24730
  7452                           
  7453                           ; BSR set to: 0
  7454  003A54  05E8               	decf	controlSelectRemote@temp& (0+255),w,b
  7455  003A56  B4D8               	btfsc	status,2,c
  7456  003A58  D00C               	goto	u24730
  7457                           
  7458                           ; BSR set to: 0
  7459  003A5A  0E02               	movlw	2
  7460  003A5C  19E8               	xorwf	controlSelectRemote@temp& (0+255),w,b
  7461  003A5E  B4D8               	btfsc	status,2,c
  7462  003A60  D008               	goto	u24730
  7463                           
  7464                           ; BSR set to: 0
  7465  003A62  0E04               	movlw	4
  7466  003A64  19E8               	xorwf	controlSelectRemote@temp& (0+255),w,b
  7467  003A66  B4D8               	btfsc	status,2,c
  7468  003A68  D004               	goto	u24730
  7469                           
  7470                           ; BSR set to: 0
  7471  003A6A  0E08               	movlw	8
  7472  003A6C  19E8               	xorwf	controlSelectRemote@temp& (0+255),w,b
  7473  003A6E  A4D8               	btfss	status,2,c
  7474  003A70  D085               	goto	l21611
  7475  003A72                     u24730:
  7476                           
  7477                           ; BSR set to: 0
  7478                           ;sm_MenuConfiguration_MC50.c: 1165:     {;sm_MenuConfiguration_MC50.c: 1166:         cha
      +                          r pos;;sm_MenuConfiguration_MC50.c: 1167:         validSerial=validateRemoteSerialNumber
      +                          (tempSerial,NO,&pos);
  7479  003A72  C0E4  F02E         	movff	controlSelectRemote@tempSerial,validateRemoteSerialNumber@serial
  7480  003A76  C0E5  F02F         	movff	controlSelectRemote@tempSerial+1,validateRemoteSerialNumber@serial+1
  7481  003A7A  C0E6  F030         	movff	controlSelectRemote@tempSerial+2,validateRemoteSerialNumber@serial+2
  7482  003A7E  C0E7  F031         	movff	controlSelectRemote@tempSerial+3,validateRemoteSerialNumber@serial+3
  7483  003A82  0E00               	movlw	0
  7484  003A84  6E32               	movwf	validateRemoteSerialNumber@VerifyOnlySerial^0,c
  7485  003A86  0EE2               	movlw	low controlSelectRemote@pos
  7486  003A88  6E33               	movwf	validateRemoteSerialNumber@position^0,c
  7487  003A8A  6A34               	clrf	(validateRemoteSerialNumber@position+1)^0,c
  7488  003A8C  EC2A  F02D         	call	_validateRemoteSerialNumber	;wreg free
  7489  003A90  6FE1               	movwf	controlSelectRemote@validSerial& (0+255),b
  7490                           
  7491                           ; BSR set to: 0
  7492                           ;sm_MenuConfiguration_MC50.c: 1169:         TypeRemote_st typeRemote = getTypeRemote();
  7493  003A92  ECEA  F04B         	call	_getTypeRemote	;wreg free
  7494  003A96  0100               	movlb	0	; () banked
  7495  003A98  6FE3               	movwf	controlSelectRemote@typeRemote& (0+255),b
  7496                           
  7497                           ; BSR set to: 0
  7498                           ;sm_MenuConfiguration_MC50.c: 1170:         if(validSerial==0&&(typeRemote==Keeloq_Rolli
      +                          ngCode || (var_sys_NVM.OnlyRollingCode==NO)))
  7499  003A9A  51E1               	movf	controlSelectRemote@validSerial& (0+255),w,b
  7500  003A9C  A4D8               	btfss	status,2,c
  7501  003A9E  0012               	return	
  7502                           
  7503                           ; BSR set to: 0
  7504  003AA0  51E3               	movf	controlSelectRemote@typeRemote& (0+255),w,b
  7505  003AA2  B4D8               	btfsc	status,2,c
  7506  003AA4  D003               	goto	u24760
  7507                           
  7508                           ; BSR set to: 0
  7509  003AA6  51BE               	movf	(_var_sys_NVM+38)& (0+255),w,b	;volatile
  7510  003AA8  A4D8               	btfss	status,2,c
  7511  003AAA  0012               	return	
  7512  003AAC                     u24760:
  7513                           
  7514                           ; BSR set to: 0
  7515                           ;sm_MenuConfiguration_MC50.c: 1171:         {;sm_MenuConfiguration_MC50.c: 1172:        
      +                               saveNewSerial(menu_st.parameterSelected,tempSerial,edit_Param.tempValue);
  7516  003AAC  C0E4  F0D8         	movff	controlSelectRemote@tempSerial,saveNewSerial@tempSerial
  7517  003AB0  C0E5  F0D9         	movff	controlSelectRemote@tempSerial+1,saveNewSerial@tempSerial+1
  7518  003AB4  C0E6  F0DA         	movff	controlSelectRemote@tempSerial+2,saveNewSerial@tempSerial+2
  7519  003AB8  C0E7  F0DB         	movff	controlSelectRemote@tempSerial+3,saveNewSerial@tempSerial+3
  7520  003ABC  C049  F0DC         	movff	_edit_Param+3,saveNewSerial@position	;volatile
  7521  003AC0  0101               	movlb	1	; () banked
  7522  003AC2  5168               	movf	(_menu_st+23)& (0+255),w,b
  7523  003AC4  ECCC  F041         	call	_saveNewSerial
  7524                           
  7525                           ;sm_MenuConfiguration_MC50.c: 1173:             if(edit_Param.tempValue==var_sys_NVM.pos
      +                          itionRemotesFull&&var_sys_NVM.positionRemotesFull<99)
  7526  003AC8  0100               	movlb	0	; () banked
  7527  003ACA  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
  7528  003ACC  1849               	xorwf	(_edit_Param+3)^0,w,c	;volatile
  7529  003ACE  A4D8               	btfss	status,2,c
  7530  003AD0  D004               	goto	l21583
  7531                           
  7532                           ; BSR set to: 0
  7533  003AD2  0E63               	movlw	99
  7534  003AD4  61B8               	cpfslt	(_var_sys_NVM+32)& (0+255),b	;volatile
  7535  003AD6  D001               	goto	l21583
  7536                           
  7537                           ; BSR set to: 0
  7538                           ;sm_MenuConfiguration_MC50.c: 1174:                 var_sys_NVM.positionRemotesFull++;
  7539  003AD8  2BB8               	incf	(_var_sys_NVM+32)& (0+255),f,b	;volatile
  7540  003ADA                     l21583:
  7541                           
  7542                           ; BSR set to: 0
  7543                           ;sm_MenuConfiguration_MC50.c: 1175:             sm_send_event(&menuConfiguration_stateMa
      +                          chine, ev_addRemotes);
  7544  003ADA  0EBF               	movlw	low _menuConfiguration_stateMachine
  7545  003ADC  6E12               	movwf	sm_send_event@psm^0,c
  7546  003ADE  0E02               	movlw	high _menuConfiguration_stateMachine
  7547  003AE0  6E13               	movwf	(sm_send_event@psm+1)^0,c
  7548  003AE2  0E00               	movlw	0
  7549  003AE4  6E15               	movwf	(sm_send_event@event+1)^0,c
  7550  003AE6  0E08               	movlw	8
  7551  003AE8  6E14               	movwf	sm_send_event@event^0,c
  7552  003AEA  ECA7  F043         	call	_sm_send_event	;wreg free
  7553                           
  7554                           ;sm_MenuConfiguration_MC50.c: 1176:             var_sys.DistanceProgrammingActive=NO;
  7555  003AEE  0E00               	movlw	0
  7556  003AF0  0101               	movlb	1	; () banked
  7557  003AF2  6F40               	movwf	(_var_sys+64)& (0+255),b	;volatile
  7558                           
  7559                           ; BSR set to: 1
  7560                           ;sm_MenuConfiguration_MC50.c: 1177:             var_sys.ProgrammingDistanceIs=NoCMD;
  7561  003AF4  0E00               	movlw	0
  7562  003AF6  6F3B               	movwf	(_var_sys+59)& (0+255),b	;volatile
  7563                           
  7564                           ; BSR set to: 1
  7565                           ;sm_MenuConfiguration_MC50.c: 1178:             ts_system.timeSinalizationDigit=(1000/50
      +                          )*2;
  7566  003AF8  0E00               	movlw	0
  7567  003AFA  6FA8               	movwf	(_ts_system+13)& (0+255),b	;volatile
  7568  003AFC  0E28               	movlw	40
  7569  003AFE  6FA7               	movwf	(_ts_system+12)& (0+255),b	;volatile
  7570                           
  7571                           ; BSR set to: 1
  7572                           ;sm_MenuConfiguration_MC50.c: 1179:             SetSegmentValueIntermitentMain((edit_Par
      +                          am.tempValue-edit_Param.tempValue%10)/10, edit_Param.tempValue%10,( 200/50));
  7573  003B00  0E0A               	movlw	10
  7574  003B02  6E10               	movwf	___lbmod@divisor^0,c
  7575  003B04  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7576  003B06  EC64  F049         	call	___lbmod
  7577  003B0A  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  7578  003B0C  0E00               	movlw	0
  7579  003B0E  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  7580  003B10  0E04               	movlw	4
  7581  003B12  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  7582  003B14  0E0A               	movlw	10
  7583  003B16  6E10               	movwf	___lbmod@divisor^0,c
  7584  003B18  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7585  003B1A  EC64  F049         	call	___lbmod
  7586  003B1E  0100               	movlb	0	; () banked
  7587  003B20  6FE0               	movwf	??_controlSelectRemote& (0+255),b
  7588  003B22  51E0               	movf	??_controlSelectRemote& (0+255),w,b
  7589  003B24  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  7590  003B26  6E14               	movwf	___awdiv@dividend^0,c
  7591  003B28  6A15               	clrf	(___awdiv@dividend+1)^0,c
  7592  003B2A  A0D8               	btfss	status,0,c
  7593  003B2C  0615               	decf	(___awdiv@dividend+1)^0,f,c
  7594  003B2E  0E00               	movlw	0
  7595  003B30  6E17               	movwf	(___awdiv@divisor+1)^0,c
  7596  003B32  0E0A               	movlw	10
  7597  003B34  6E16               	movwf	___awdiv@divisor^0,c
  7598  003B36  ECE8  F03E         	call	___awdiv	;wreg free
  7599  003B3A  5014               	movf	?___awdiv^0,w,c
  7600  003B3C  EC38  F04B         	call	_SetSegmentValueIntermitentMain
  7601                           
  7602                           ;sm_MenuConfiguration_MC50.c: 1180:             if(edit_Param.Max==edit_Param.tempValue 
      +                          || edit_Param.Max==0 )
  7603  003B40  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7604  003B42  184A               	xorwf	(_edit_Param+4)^0,w,c	;volatile
  7605  003B44  B4D8               	btfsc	status,2,c
  7606  003B46  D003               	goto	u24800
  7607  003B48  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  7608  003B4A  A4D8               	btfss	status,2,c
  7609  003B4C  0012               	return	
  7610  003B4E                     u24800:
  7611                           
  7612                           ;sm_MenuConfiguration_MC50.c: 1181:             {;sm_MenuConfiguration_MC50.c: 1185:    
      +                                       if(var_sys_NVM.positionRemotesFull==0 && var_sys_NVM.positionRemotesFull==0
      +                           && typeRemote==Keeloq_RollingCode)
  7613  003B4E  0100               	movlb	0	; () banked
  7614  003B50  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
  7615  003B52  A4D8               	btfss	status,2,c
  7616  003B54  D008               	goto	l21605
  7617                           
  7618                           ; BSR set to: 0
  7619  003B56  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
  7620  003B58  A4D8               	btfss	status,2,c
  7621  003B5A  D005               	goto	l21605
  7622                           
  7623                           ; BSR set to: 0
  7624  003B5C  51E3               	movf	controlSelectRemote@typeRemote& (0+255),w,b
  7625  003B5E  A4D8               	btfss	status,2,c
  7626  003B60  D002               	goto	l21605
  7627                           
  7628                           ; BSR set to: 0
  7629                           ;sm_MenuConfiguration_MC50.c: 1186:                 {;sm_MenuConfiguration_MC50.c: 1188:
      +                                               var_sys_NVM.OnlyRollingCode=YES;
  7630  003B62  0E01               	movlw	1
  7631  003B64  6FBE               	movwf	(_var_sys_NVM+38)& (0+255),b	;volatile
  7632  003B66                     l21605:
  7633                           
  7634                           ; BSR set to: 0
  7635                           ;sm_MenuConfiguration_MC50.c: 1192:                 edit_Param.tempValue++;
  7636  003B66  2A49               	incf	(_edit_Param+3)^0,f,c	;volatile
  7637                           
  7638                           ; BSR set to: 0
  7639                           ;sm_MenuConfiguration_MC50.c: 1193:                 edit_Param.Value[0]=edit_Param.tempV
      +                          alue;
  7640  003B68  C047  FFD9         	movff	_edit_Param+1,fsr2l	;volatile
  7641  003B6C  C048  FFDA         	movff	_edit_Param+2,fsr2h	;volatile
  7642  003B70  C049  FFDF         	movff	_edit_Param+3,indf2	;volatile
  7643                           
  7644                           ; BSR set to: 0
  7645                           ;sm_MenuConfiguration_MC50.c: 1194:                 SaveNVM_VarSystem(pageMemoryCounters
      +                          );
  7646  003B74  0E02               	movlw	2
  7647  003B76  ECAF  F047         	call	_SaveNVM_VarSystem
  7648  003B7A  0012               	return	
  7649  003B7C                     l21611:
  7650                           
  7651                           ; BSR set to: 0
  7652  003B7C  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  7653  003B7E  1849               	xorwf	(_edit_Param+3)^0,w,c	;volatile
  7654  003B80  B4D8               	btfsc	status,2,c
  7655  003B82  0012               	return	
  7656                           
  7657                           ; BSR set to: 0
  7658  003B84  0E27               	movlw	39
  7659  003B86  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  7660  003B88  A4D8               	btfss	status,2,c
  7661  003B8A  0012               	return	
  7662                           
  7663                           ; BSR set to: 0
  7664  003B8C  0E27               	movlw	39
  7665  003B8E  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  7666  003B90  0012               	return	
  7667                           
  7668                           ; BSR set to: 0
  7669                           ;sm_MenuConfiguration_MC50.c: 1201:     {;sm_MenuConfiguration_MC50.c: 1202:         ts_
      +                          system.timeoutMenu=((1000/50)*5) ;
  7670  003B92  0E00               	movlw	0
  7671  003B94  0101               	movlb	1	; () banked
  7672  003B96  6FAA               	movwf	(_ts_system+15)& (0+255),b	;volatile
  7673  003B98  0E64               	movlw	100
  7674  003B9A  6FA9               	movwf	(_ts_system+14)& (0+255),b	;volatile
  7675                           
  7676                           ; BSR set to: 1
  7677                           ;sm_MenuConfiguration_MC50.c: 1203:         RemoveSerial(menu_st.parameterSelected,edit_
      +                          Param.tempValue);
  7678  003B9C  C049  F03A         	movff	_edit_Param+3,RemoveSerial@position	;volatile
  7679  003BA0  5168               	movf	(_menu_st+23)& (0+255),w,b
  7680  003BA2  ECAD  F03F         	call	_RemoveSerial
  7681                           
  7682                           ;sm_MenuConfiguration_MC50.c: 1204:         SetSegmentValueIntermitentMain((edit_Param.t
      +                          empValue-edit_Param.tempValue%10)/10, edit_Param.tempValue%10,(1000/50));
  7683  003BA6  0E0A               	movlw	10
  7684  003BA8  6E10               	movwf	___lbmod@divisor^0,c
  7685  003BAA  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7686  003BAC  EC64  F049         	call	___lbmod
  7687  003BB0  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  7688  003BB2  0E00               	movlw	0
  7689  003BB4  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  7690  003BB6  0E14               	movlw	20
  7691  003BB8  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  7692  003BBA  0E0A               	movlw	10
  7693  003BBC  6E10               	movwf	___lbmod@divisor^0,c
  7694  003BBE  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7695  003BC0  EC64  F049         	call	___lbmod
  7696  003BC4  0100               	movlb	0	; () banked
  7697  003BC6  6FE0               	movwf	??_controlSelectRemote& (0+255),b
  7698  003BC8  51E0               	movf	??_controlSelectRemote& (0+255),w,b
  7699  003BCA  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  7700  003BCC  6E14               	movwf	___awdiv@dividend^0,c
  7701  003BCE  6A15               	clrf	(___awdiv@dividend+1)^0,c
  7702  003BD0  A0D8               	btfss	status,0,c
  7703  003BD2  0615               	decf	(___awdiv@dividend+1)^0,f,c
  7704  003BD4  0E00               	movlw	0
  7705  003BD6  6E17               	movwf	(___awdiv@divisor+1)^0,c
  7706  003BD8  0E0A               	movlw	10
  7707  003BDA  6E16               	movwf	___awdiv@divisor^0,c
  7708  003BDC  ECE8  F03E         	call	___awdiv	;wreg free
  7709  003BE0  5014               	movf	?___awdiv^0,w,c
  7710  003BE2  EC38  F04B         	call	_SetSegmentValueIntermitentMain
  7711  003BE6  0012               	return	
  7712  003BE8                     __end_of_controlSelectRemote:
  7713                           	callstack 0
  7714                           
  7715 ;; *************** function _getTypeRemote *****************
  7716 ;; Defined at:
  7717 ;;		line 459 in file "inputs_MC50.c"
  7718 ;; Parameters:    Size  Location     Type
  7719 ;;		None
  7720 ;; Auto vars:     Size  Location     Type
  7721 ;;		None
  7722 ;; Return value:  Size  Location     Type
  7723 ;;                  1    wreg      enum E10559
  7724 ;; Registers used:
  7725 ;;		wreg, status,2
  7726 ;; Tracked objects:
  7727 ;;		On entry : 3F/0
  7728 ;;		On exit  : 3F/2
  7729 ;;		Unchanged: 0/0
  7730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7734 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7735 ;;Total ram usage:        0 bytes
  7736 ;; Hardware stack levels used: 1
  7737 ;; Hardware stack levels required when called: 4
  7738 ;; This function calls:
  7739 ;;		Nothing
  7740 ;; This function is called by:
  7741 ;;		_controlSelectRemote
  7742 ;; This function uses a non-reentrant model
  7743 ;;
  7744                           
  7745                           	psect	text7
  7746  0097D4                     __ptext7:
  7747                           	callstack 0
  7748  0097D4                     _getTypeRemote:
  7749                           	callstack 23
  7750                           
  7751                           ; BSR set to: 0
  7752                           ;inputs_MC50.c: 460:     return classic_data.type;
  7753                           
  7754                           ;incstack = 0
  7755  0097D4  0102               	movlb	2	; () banked
  7756  0097D6  51A2               	movf	(_classic_data+14)& (0+255),w,b
  7757                           
  7758                           ; BSR set to: 2
  7759  0097D8  0012               	return		;funcret
  7760  0097DA                     __end_of_getTypeRemote:
  7761                           	callstack 0
  7762                           
  7763 ;; *************** function _getSerialCmd *****************
  7764 ;; Defined at:
  7765 ;;		line 442 in file "inputs_MC50.c"
  7766 ;; Parameters:    Size  Location     Type
  7767 ;;  serial          1   26[COMRAM] PTR unsigned long 
  7768 ;;		 -> controlSelectRemote@tempSerial(4), 
  7769 ;; Auto vars:     Size  Location     Type
  7770 ;;  temp            1   27[COMRAM] char 
  7771 ;; Return value:  Size  Location     Type
  7772 ;;                  1    wreg      char 
  7773 ;; Registers used:
  7774 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7775 ;; Tracked objects:
  7776 ;;		On entry : 3F/1
  7777 ;;		On exit  : 0/0
  7778 ;;		Unchanged: 0/0
  7779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7780 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7781 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7783 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7784 ;;Total ram usage:        2 bytes
  7785 ;; Hardware stack levels used: 1
  7786 ;; Hardware stack levels required when called: 5
  7787 ;; This function calls:
  7788 ;;		_memcpy
  7789 ;; This function is called by:
  7790 ;;		_controlSelectRemote
  7791 ;; This function uses a non-reentrant model
  7792 ;;
  7793                           
  7794                           	psect	text8
  7795  008B5C                     __ptext8:
  7796                           	callstack 0
  7797  008B5C                     _getSerialCmd:
  7798                           	callstack 22
  7799                           
  7800                           ; BSR set to: 1
  7801                           ;inputs_MC50.c: 443:     signed char temp=-1;
  7802                           
  7803                           ; BSR set to: 2
  7804                           ;incstack = 0
  7805  008B5C  681C               	setf	getSerialCmd@temp^0,c
  7806                           
  7807                           ; BSR set to: 1
  7808                           ;inputs_MC50.c: 444:     if(RFFull)
  7809  008B5E  0100               	movlb	0	; () banked
  7810  008B60  518B               	movf	_RFFull& (0+255),w,b	;volatile
  7811  008B62  B4D8               	btfsc	status,2,c
  7812  008B64  D020               	goto	l20199
  7813                           
  7814                           ; BSR set to: 0
  7815                           ;inputs_MC50.c: 445:     {;inputs_MC50.c: 446:         if(RFFull_12BIT)
  7816  008B66  518A               	movf	_RFFull_12BIT& (0+255),w,b	;volatile
  7817  008B68  B4D8               	btfsc	status,2,c
  7818  008B6A  D00E               	goto	l20195
  7819                           
  7820                           ; BSR set to: 0
  7821                           ;inputs_MC50.c: 447:         {;inputs_MC50.c: 448:             memcpy((char*)serial,&cla
      +                          ssic_data.serialnumber,4);
  7822  008B6C  C01B  F010         	movff	getSerialCmd@serial,memcpy@d1
  7823  008B70  6A11               	clrf	(memcpy@d1+1)^0,c
  7824  008B72  0E98               	movlw	low (_classic_data+4)
  7825  008B74  6E12               	movwf	memcpy@s1^0,c
  7826  008B76  0E02               	movlw	high (_classic_data+4)
  7827  008B78  6E13               	movwf	(memcpy@s1+1)^0,c
  7828  008B7A  0E00               	movlw	0
  7829  008B7C  6E15               	movwf	(memcpy@n+1)^0,c
  7830  008B7E  0E04               	movlw	4
  7831  008B80  6E14               	movwf	memcpy@n^0,c
  7832  008B82  ECB1  F046         	call	_memcpy	;wreg free
  7833                           
  7834                           ;inputs_MC50.c: 449:         }
  7835  008B86  D00D               	goto	l20197
  7836  008B88                     l20195:
  7837                           
  7838                           ; BSR set to: 0
  7839                           ;inputs_MC50.c: 451:         {;inputs_MC50.c: 452:             memcpy((char*)serial,(cha
      +                          r*)BufferRF+4,4);
  7840  008B88  C01B  F010         	movff	getSerialCmd@serial,memcpy@d1
  7841  008B8C  6A11               	clrf	(memcpy@d1+1)^0,c
  7842  008B8E  0ECE               	movlw	low (_BufferRF+4)
  7843  008B90  6E12               	movwf	memcpy@s1^0,c
  7844  008B92  0E02               	movlw	high (_BufferRF+4)
  7845  008B94  6E13               	movwf	(memcpy@s1+1)^0,c
  7846  008B96  0E00               	movlw	0
  7847  008B98  6E15               	movwf	(memcpy@n+1)^0,c
  7848  008B9A  0E04               	movlw	4
  7849  008B9C  6E14               	movwf	memcpy@n^0,c
  7850  008B9E  ECB1  F046         	call	_memcpy	;wreg free
  7851  008BA2                     l20197:
  7852                           
  7853                           ;inputs_MC50.c: 454:         temp=classic_data.fcode1;
  7854  008BA2  C2A0  F01C         	movff	_classic_data+12,getSerialCmd@temp
  7855  008BA6                     l20199:
  7856                           
  7857                           ;inputs_MC50.c: 456:     return temp;
  7858  008BA6  501C               	movf	getSerialCmd@temp^0,w,c
  7859  008BA8  0012               	return		;funcret
  7860  008BAA                     __end_of_getSerialCmd:
  7861                           	callstack 0
  7862                           
  7863 ;; *************** function _controlSaveRemote *****************
  7864 ;; Defined at:
  7865 ;;		line 1209 in file "sm_MenuConfiguration_MC50.c"
  7866 ;; Parameters:    Size  Location     Type
  7867 ;;		None
  7868 ;; Auto vars:     Size  Location     Type
  7869 ;;		None
  7870 ;; Return value:  Size  Location     Type
  7871 ;;                  1    wreg      void 
  7872 ;; Registers used:
  7873 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7874 ;; Tracked objects:
  7875 ;;		On entry : 3F/0
  7876 ;;		On exit  : 0/0
  7877 ;;		Unchanged: 0/0
  7878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7879 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7880 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7881 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7882 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7883 ;;Total ram usage:        1 bytes
  7884 ;; Hardware stack levels used: 1
  7885 ;; Hardware stack levels required when called: 6
  7886 ;; This function calls:
  7887 ;;		_ClearFlag_rfCMD
  7888 ;;		_SetSegmentValueIntermitentMain
  7889 ;;		_SetSegmentValueMain
  7890 ;;		___awdiv
  7891 ;;		___lbmod
  7892 ;;		_sm_send_event
  7893 ;; This function is called by:
  7894 ;;		_sm_execute_menuConfiguration
  7895 ;; This function uses a non-reentrant model
  7896 ;;
  7897                           
  7898                           	psect	text9
  7899  00761E                     __ptext9:
  7900                           	callstack 0
  7901  00761E                     _controlSaveRemote:
  7902                           	callstack 22
  7903                           
  7904                           ; BSR set to: 0
  7905                           ;sm_MenuConfiguration_MC50.c: 1210:      if (ts_system.timeSinalizationDigit<=0)
  7906                           
  7907                           ;incstack = 0
  7908  00761E  0101               	movlb	1	; () banked
  7909  007620  BFA8               	btfsc	(_ts_system+13)& (0+255),7,b	;volatile
  7910  007622  D005               	goto	u24870
  7911  007624  51A8               	movf	(_ts_system+13)& (0+255),w,b	;volatile
  7912  007626  E154               	bnz	l3488
  7913  007628  05A7               	decf	(_ts_system+12)& (0+255),w,b	;volatile
  7914  00762A  B0D8               	btfsc	status,0,c
  7915  00762C  0012               	return	
  7916  00762E                     u24870:
  7917                           
  7918                           ; BSR set to: 1
  7919                           ;sm_MenuConfiguration_MC50.c: 1211:      {;sm_MenuConfiguration_MC50.c: 1212:          i
      +                          f(edit_Param.Max==0)
  7920  00762E  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  7921  007630  A4D8               	btfss	status,2,c
  7922  007632  D02E               	goto	l21633
  7923                           
  7924                           ; BSR set to: 1
  7925                           ;sm_MenuConfiguration_MC50.c: 1213:          {;sm_MenuConfiguration_MC50.c: 1214:       
      +                                 ts_system.timeoutMenu=10*(1000/50);
  7926  007634  0E00               	movlw	0
  7927  007636  6FAA               	movwf	(_ts_system+15)& (0+255),b	;volatile
  7928  007638  0EC8               	movlw	200
  7929  00763A  6FA9               	movwf	(_ts_system+14)& (0+255),b	;volatile
  7930                           
  7931                           ; BSR set to: 1
  7932                           ;sm_MenuConfiguration_MC50.c: 1215:              sm_send_event(&menuConfiguration_stateM
      +                          achine, ev_NextRemote);
  7933  00763C  0EBF               	movlw	low _menuConfiguration_stateMachine
  7934  00763E  6E12               	movwf	sm_send_event@psm^0,c
  7935  007640  0E02               	movlw	high _menuConfiguration_stateMachine
  7936  007642  6E13               	movwf	(sm_send_event@psm+1)^0,c
  7937  007644  0E00               	movlw	0
  7938  007646  6E15               	movwf	(sm_send_event@event+1)^0,c
  7939  007648  0E09               	movlw	9
  7940  00764A  6E14               	movwf	sm_send_event@event^0,c
  7941  00764C  ECA7  F043         	call	_sm_send_event	;wreg free
  7942                           
  7943                           ;sm_MenuConfiguration_MC50.c: 1216:              SetSegmentValueIntermitentMain((edit_Pa
      +                          ram.tempValue-edit_Param.tempValue%10)/10, edit_Param.tempValue%10,(1000/50));
  7944  007650  0E0A               	movlw	10
  7945  007652  6E10               	movwf	___lbmod@divisor^0,c
  7946  007654  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7947  007656  EC64  F049         	call	___lbmod
  7948  00765A  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  7949  00765C  0E00               	movlw	0
  7950  00765E  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  7951  007660  0E14               	movlw	20
  7952  007662  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  7953  007664  0E0A               	movlw	10
  7954  007666  6E10               	movwf	___lbmod@divisor^0,c
  7955  007668  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7956  00766A  EC64  F049         	call	___lbmod
  7957  00766E  6E20               	movwf	??_controlSaveRemote^0,c
  7958  007670  5020               	movf	??_controlSaveRemote^0,w,c
  7959  007672  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  7960  007674  6E14               	movwf	___awdiv@dividend^0,c
  7961  007676  6A15               	clrf	(___awdiv@dividend+1)^0,c
  7962  007678  A0D8               	btfss	status,0,c
  7963  00767A  0615               	decf	(___awdiv@dividend+1)^0,f,c
  7964  00767C  0E00               	movlw	0
  7965  00767E  6E17               	movwf	(___awdiv@divisor+1)^0,c
  7966  007680  0E0A               	movlw	10
  7967  007682  6E16               	movwf	___awdiv@divisor^0,c
  7968  007684  ECE8  F03E         	call	___awdiv	;wreg free
  7969  007688  5014               	movf	?___awdiv^0,w,c
  7970  00768A  EC38  F04B         	call	_SetSegmentValueIntermitentMain
  7971                           
  7972                           ;sm_MenuConfiguration_MC50.c: 1217:          }
  7973  00768E  0012               	return	
  7974  007690                     l21633:
  7975                           
  7976                           ; BSR set to: 1
  7977                           ;sm_MenuConfiguration_MC50.c: 1219:          {;sm_MenuConfiguration_MC50.c: 1220:       
      +                                sm_send_event(&main_stateMachine, ev_goto_StandBy);
  7978  007690  0EEE               	movlw	low _main_stateMachine
  7979  007692  6E12               	movwf	sm_send_event@psm^0,c
  7980  007694  0E01               	movlw	high _main_stateMachine
  7981  007696  6E13               	movwf	(sm_send_event@psm+1)^0,c
  7982  007698  0E00               	movlw	0
  7983  00769A  6E15               	movwf	(sm_send_event@event+1)^0,c
  7984  00769C  0E07               	movlw	7
  7985  00769E  6E14               	movwf	sm_send_event@event^0,c
  7986  0076A0  ECA7  F043         	call	_sm_send_event	;wreg free
  7987                           
  7988                           ;sm_MenuConfiguration_MC50.c: 1221:             sm_send_event(&menuConfiguration_stateMa
      +                          chine, ev_ParameterIsSaved);
  7989  0076A4  0EBF               	movlw	low _menuConfiguration_stateMachine
  7990  0076A6  6E12               	movwf	sm_send_event@psm^0,c
  7991  0076A8  0E02               	movlw	high _menuConfiguration_stateMachine
  7992  0076AA  6E13               	movwf	(sm_send_event@psm+1)^0,c
  7993  0076AC  0E00               	movlw	0
  7994  0076AE  6E15               	movwf	(sm_send_event@event+1)^0,c
  7995  0076B0  0E04               	movlw	4
  7996  0076B2  6E14               	movwf	sm_send_event@event^0,c
  7997  0076B4  ECA7  F043         	call	_sm_send_event	;wreg free
  7998                           
  7999                           ;sm_MenuConfiguration_MC50.c: 1222:             SetSegmentValueMain(dMinus,dMinus);
  8000  0076B8  0E18               	movlw	24
  8001  0076BA  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  8002  0076BC  0E18               	movlw	24
  8003  0076BE  EC9C  F04A         	call	_SetSegmentValueMain
  8004                           
  8005                           ; BSR set to: 0
  8006                           ;sm_MenuConfiguration_MC50.c: 1223:             ClearFlag_rfCMD();
  8007  0076C2  ECED  F04B         	call	_ClearFlag_rfCMD	;wreg free
  8008                           
  8009                           ;sm_MenuConfiguration_MC50.c: 1224:             ts_system.timeoutMenu = 0;
  8010  0076C6  0E00               	movlw	0
  8011  0076C8  0101               	movlb	1	; () banked
  8012  0076CA  6FAA               	movwf	(_ts_system+15)& (0+255),b	;volatile
  8013  0076CC  0E00               	movlw	0
  8014  0076CE  6FA9               	movwf	(_ts_system+14)& (0+255),b	;volatile
  8015  0076D0                     l3488:
  8016  0076D0  0012               	return		;funcret
  8017  0076D2                     __end_of_controlSaveRemote:
  8018                           	callstack 0
  8019                           
  8020 ;; *************** function ___lbmod *****************
  8021 ;; Defined at:
  8022 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\lbmod.c"
  8023 ;; Parameters:    Size  Location     Type
  8024 ;;  dividend        1    wreg     unsigned char 
  8025 ;;  divisor         1   15[COMRAM] unsigned char 
  8026 ;; Auto vars:     Size  Location     Type
  8027 ;;  dividend        1   16[COMRAM] unsigned char 
  8028 ;;  rem             1   18[COMRAM] unsigned char 
  8029 ;;  counter         1   17[COMRAM] unsigned char 
  8030 ;; Return value:  Size  Location     Type
  8031 ;;                  1    wreg      unsigned char 
  8032 ;; Registers used:
  8033 ;;		wreg, status,2, status,0
  8034 ;; Tracked objects:
  8035 ;;		On entry : 0/1
  8036 ;;		On exit  : 0/0
  8037 ;;		Unchanged: 0/0
  8038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8039 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8040 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8042 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8043 ;;Total ram usage:        4 bytes
  8044 ;; Hardware stack levels used: 1
  8045 ;; Hardware stack levels required when called: 4
  8046 ;; This function calls:
  8047 ;;		Nothing
  8048 ;; This function is called by:
  8049 ;;		_controlSelectRemote
  8050 ;;		_controlSaveRemote
  8051 ;; This function uses a non-reentrant model
  8052 ;;
  8053                           
  8054                           	psect	text10
  8055  0092C8                     __ptext10:
  8056                           	callstack 0
  8057  0092C8                     ___lbmod:
  8058                           	callstack 23
  8059                           
  8060                           ;incstack = 0
  8061                           ;___lbmod@dividend stored from wreg
  8062  0092C8  6E11               	movwf	___lbmod@dividend^0,c
  8063  0092CA  0E08               	movlw	8
  8064  0092CC  6E12               	movwf	___lbmod@counter^0,c
  8065  0092CE  0E00               	movlw	0
  8066  0092D0  6E13               	movwf	___lbmod@rem^0,c
  8067  0092D2                     l12829:
  8068  0092D2  90D8               	bcf	status,0,c
  8069  0092D4  3411               	rlcf	___lbmod@dividend^0,w,c
  8070  0092D6  3413               	rlcf	___lbmod@rem^0,w,c
  8071  0092D8  6E13               	movwf	___lbmod@rem^0,c
  8072  0092DA  90D8               	bcf	status,0,c
  8073  0092DC  3611               	rlcf	___lbmod@dividend^0,f,c
  8074  0092DE  5010               	movf	___lbmod@divisor^0,w,c
  8075  0092E0  5C13               	subwf	___lbmod@rem^0,w,c
  8076  0092E2  A0D8               	btfss	status,0,c
  8077  0092E4  D002               	goto	l12837
  8078  0092E6  5010               	movf	___lbmod@divisor^0,w,c
  8079  0092E8  5E13               	subwf	___lbmod@rem^0,f,c
  8080  0092EA                     l12837:
  8081  0092EA  2E12               	decfsz	___lbmod@counter^0,f,c
  8082  0092EC  D7F2               	goto	l12829
  8083  0092EE  5013               	movf	___lbmod@rem^0,w,c
  8084  0092F0  0012               	return		;funcret
  8085  0092F2                     __end_of___lbmod:
  8086                           	callstack 0
  8087                           
  8088 ;; *************** function ___awdiv *****************
  8089 ;; Defined at:
  8090 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awdiv.c"
  8091 ;; Parameters:    Size  Location     Type
  8092 ;;  dividend        2   19[COMRAM] int 
  8093 ;;  divisor         2   21[COMRAM] int 
  8094 ;; Auto vars:     Size  Location     Type
  8095 ;;  quotient        2   25[COMRAM] int 
  8096 ;;  sign            1   24[COMRAM] unsigned char 
  8097 ;;  counter         1   23[COMRAM] unsigned char 
  8098 ;; Return value:  Size  Location     Type
  8099 ;;                  2   19[COMRAM] int 
  8100 ;; Registers used:
  8101 ;;		wreg, status,2, status,0
  8102 ;; Tracked objects:
  8103 ;;		On entry : 0/0
  8104 ;;		On exit  : 0/0
  8105 ;;		Unchanged: 0/0
  8106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8107 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8108 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8110 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8111 ;;Total ram usage:        8 bytes
  8112 ;; Hardware stack levels used: 1
  8113 ;; Hardware stack levels required when called: 4
  8114 ;; This function calls:
  8115 ;;		Nothing
  8116 ;; This function is called by:
  8117 ;;		_controlSelectRemote
  8118 ;;		_controlSaveRemote
  8119 ;; This function uses a non-reentrant model
  8120 ;;
  8121                           
  8122                           	psect	text11
  8123  007DD0                     __ptext11:
  8124                           	callstack 0
  8125  007DD0                     ___awdiv:
  8126                           	callstack 23
  8127                           
  8128                           ;incstack = 0
  8129  007DD0  0E00               	movlw	0
  8130  007DD2  6E19               	movwf	___awdiv@sign^0,c
  8131  007DD4  AE17               	btfss	(___awdiv@divisor+1)^0,7,c
  8132  007DD6  D006               	goto	l12765
  8133  007DD8  6C16               	negf	___awdiv@divisor^0,c
  8134  007DDA  1E17               	comf	(___awdiv@divisor+1)^0,f,c
  8135  007DDC  B0D8               	btfsc	status,0,c
  8136  007DDE  2A17               	incf	(___awdiv@divisor+1)^0,f,c
  8137  007DE0  0E01               	movlw	1
  8138  007DE2  6E19               	movwf	___awdiv@sign^0,c
  8139  007DE4                     l12765:
  8140  007DE4  AE15               	btfss	(___awdiv@dividend+1)^0,7,c
  8141  007DE6  D006               	goto	l12771
  8142  007DE8  6C14               	negf	___awdiv@dividend^0,c
  8143  007DEA  1E15               	comf	(___awdiv@dividend+1)^0,f,c
  8144  007DEC  B0D8               	btfsc	status,0,c
  8145  007DEE  2A15               	incf	(___awdiv@dividend+1)^0,f,c
  8146  007DF0  0E01               	movlw	1
  8147  007DF2  1A19               	xorwf	___awdiv@sign^0,f,c
  8148  007DF4                     l12771:
  8149  007DF4  0E00               	movlw	0
  8150  007DF6  6E1B               	movwf	(___awdiv@quotient+1)^0,c
  8151  007DF8  0E00               	movlw	0
  8152  007DFA  6E1A               	movwf	___awdiv@quotient^0,c
  8153  007DFC  5016               	movf	___awdiv@divisor^0,w,c
  8154  007DFE  1017               	iorwf	(___awdiv@divisor+1)^0,w,c
  8155  007E00  B4D8               	btfsc	status,2,c
  8156  007E02  D01C               	goto	l12793
  8157  007E04  0E01               	movlw	1
  8158  007E06  6E18               	movwf	___awdiv@counter^0,c
  8159  007E08  D004               	goto	l12779
  8160  007E0A                     l12777:
  8161  007E0A  90D8               	bcf	status,0,c
  8162  007E0C  3616               	rlcf	___awdiv@divisor^0,f,c
  8163  007E0E  3617               	rlcf	(___awdiv@divisor+1)^0,f,c
  8164  007E10  2A18               	incf	___awdiv@counter^0,f,c
  8165  007E12                     l12779:
  8166  007E12  AE17               	btfss	(___awdiv@divisor+1)^0,7,c
  8167  007E14  D7FA               	goto	l12777
  8168  007E16                     u12410:
  8169  007E16  90D8               	bcf	status,0,c
  8170  007E18  361A               	rlcf	___awdiv@quotient^0,f,c
  8171  007E1A  361B               	rlcf	(___awdiv@quotient+1)^0,f,c
  8172  007E1C  5016               	movf	___awdiv@divisor^0,w,c
  8173  007E1E  5C14               	subwf	___awdiv@dividend^0,w,c
  8174  007E20  5017               	movf	(___awdiv@divisor+1)^0,w,c
  8175  007E22  5815               	subwfb	(___awdiv@dividend+1)^0,w,c
  8176  007E24  A0D8               	btfss	status,0,c
  8177  007E26  D005               	goto	l12789
  8178  007E28  5016               	movf	___awdiv@divisor^0,w,c
  8179  007E2A  5E14               	subwf	___awdiv@dividend^0,f,c
  8180  007E2C  5017               	movf	(___awdiv@divisor+1)^0,w,c
  8181  007E2E  5A15               	subwfb	(___awdiv@dividend+1)^0,f,c
  8182  007E30  801A               	bsf	___awdiv@quotient^0,0,c
  8183  007E32                     l12789:
  8184  007E32  90D8               	bcf	status,0,c
  8185  007E34  3217               	rrcf	(___awdiv@divisor+1)^0,f,c
  8186  007E36  3216               	rrcf	___awdiv@divisor^0,f,c
  8187  007E38  2E18               	decfsz	___awdiv@counter^0,f,c
  8188  007E3A  D7ED               	goto	u12410
  8189  007E3C                     l12793:
  8190  007E3C  5019               	movf	___awdiv@sign^0,w,c
  8191  007E3E  B4D8               	btfsc	status,2,c
  8192  007E40  D004               	goto	l12797
  8193  007E42  6C1A               	negf	___awdiv@quotient^0,c
  8194  007E44  1E1B               	comf	(___awdiv@quotient+1)^0,f,c
  8195  007E46  B0D8               	btfsc	status,0,c
  8196  007E48  2A1B               	incf	(___awdiv@quotient+1)^0,f,c
  8197  007E4A                     l12797:
  8198  007E4A  C01A  F014         	movff	___awdiv@quotient,?___awdiv
  8199  007E4E  C01B  F015         	movff	___awdiv@quotient+1,?___awdiv+1
  8200  007E52  0012               	return		;funcret
  8201  007E54                     __end_of___awdiv:
  8202                           	callstack 0
  8203                           
  8204 ;; *************** function _SetSegmentValueMain *****************
  8205 ;; Defined at:
  8206 ;;		line 104 in file "outputs_MC50.c"
  8207 ;; Parameters:    Size  Location     Type
  8208 ;;  d1              1    wreg     unsigned char 
  8209 ;;  d2              1   27[COMRAM] unsigned char 
  8210 ;; Auto vars:     Size  Location     Type
  8211 ;;  d1              1   28[COMRAM] unsigned char 
  8212 ;; Return value:  Size  Location     Type
  8213 ;;                  1    wreg      void 
  8214 ;; Registers used:
  8215 ;;		wreg, status,2
  8216 ;; Tracked objects:
  8217 ;;		On entry : 0/0
  8218 ;;		On exit  : 3F/0
  8219 ;;		Unchanged: 0/0
  8220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8221 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8222 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8224 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8225 ;;Total ram usage:        2 bytes
  8226 ;; Hardware stack levels used: 1
  8227 ;; Hardware stack levels required when called: 4
  8228 ;; This function calls:
  8229 ;;		Nothing
  8230 ;; This function is called by:
  8231 ;;		_sm_execute_main
  8232 ;;		_sm_execute_menuConfiguration
  8233 ;;		_load_New_Menu
  8234 ;;		_controlSelectRemote
  8235 ;;		_controlSaveRemote
  8236 ;; This function uses a non-reentrant model
  8237 ;;
  8238                           
  8239                           	psect	text12
  8240  009538                     __ptext12:
  8241                           	callstack 0
  8242  009538                     _SetSegmentValueMain:
  8243                           	callstack 22
  8244                           
  8245                           ;incstack = 0
  8246                           ;SetSegmentValueMain@d1 stored from wreg
  8247  009538  6E1D               	movwf	SetSegmentValueMain@d1^0,c
  8248                           
  8249                           ;outputs_MC50.c: 104: void SetSegmentValueMain(char d1, char d2);outputs_MC50.c: 105: {;
      +                          outputs_MC50.c: 106:     dispStruct.display_grp.value_display1=d1;
  8250  00953A  C01D  F072         	movff	SetSegmentValueMain@d1,_dispStruct	;volatile
  8251                           
  8252                           ;outputs_MC50.c: 107:     dispStruct.display_grp.value_display2=d2;
  8253  00953E  C01C  F073         	movff	SetSegmentValueMain@d2,_dispStruct+1	;volatile
  8254                           
  8255                           ;outputs_MC50.c: 108:     dispStruct.intermitentFreq=0;
  8256  009542  0E00               	movlw	0
  8257  009544  0100               	movlb	0	; () banked
  8258  009546  6F76               	movwf	(_dispStruct+4)& (0+255),b	;volatile
  8259  009548  0E00               	movlw	0
  8260  00954A  6F75               	movwf	(_dispStruct+3)& (0+255),b	;volatile
  8261                           
  8262                           ; BSR set to: 0
  8263                           ;outputs_MC50.c: 109:     dispStruct.upFase=0;
  8264  00954C  0E00               	movlw	0
  8265  00954E  6F77               	movwf	(_dispStruct+5)& (0+255),b	;volatile
  8266                           
  8267                           ; BSR set to: 0
  8268  009550  0012               	return		;funcret
  8269  009552                     __end_of_SetSegmentValueMain:
  8270                           	callstack 0
  8271                           
  8272 ;; *************** function _ClearFlag_rfCMD *****************
  8273 ;; Defined at:
  8274 ;;		line 463 in file "inputs_MC50.c"
  8275 ;; Parameters:    Size  Location     Type
  8276 ;;		None
  8277 ;; Auto vars:     Size  Location     Type
  8278 ;;		None
  8279 ;; Return value:  Size  Location     Type
  8280 ;;                  1    wreg      void 
  8281 ;; Registers used:
  8282 ;;		wreg, status,2
  8283 ;; Tracked objects:
  8284 ;;		On entry : 0/1
  8285 ;;		On exit  : 0/0
  8286 ;;		Unchanged: 0/0
  8287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8291 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8292 ;;Total ram usage:        0 bytes
  8293 ;; Hardware stack levels used: 1
  8294 ;; Hardware stack levels required when called: 4
  8295 ;; This function calls:
  8296 ;;		Nothing
  8297 ;; This function is called by:
  8298 ;;		_sm_execute_menuConfiguration
  8299 ;;		_controlSelectRemote
  8300 ;;		_controlSaveRemote
  8301 ;; This function uses a non-reentrant model
  8302 ;;
  8303                           
  8304                           	psect	text13
  8305  0097DA                     __ptext13:
  8306                           	callstack 0
  8307  0097DA                     _ClearFlag_rfCMD:
  8308                           	callstack 23
  8309                           
  8310                           ;inputs_MC50.c: 464:     rfCMD.processed=1;
  8311                           
  8312                           ; BSR set to: 0
  8313                           ;incstack = 0
  8314  0097DA  0E01               	movlw	1
  8315  0097DC  6E45               	movwf	(_rfCMD+10)^0,c	;volatile
  8316  0097DE  0012               	return		;funcret
  8317  0097E0                     __end_of_ClearFlag_rfCMD:
  8318                           	callstack 0
  8319                           
  8320 ;; *************** function _controlLearnDigit *****************
  8321 ;; Defined at:
  8322 ;;		line 1230 in file "sm_MenuConfiguration_MC50.c"
  8323 ;; Parameters:    Size  Location     Type
  8324 ;;		None
  8325 ;; Auto vars:     Size  Location     Type
  8326 ;;		None
  8327 ;; Return value:  Size  Location     Type
  8328 ;;                  1    wreg      void 
  8329 ;; Registers used:
  8330 ;;		wreg, status,2, status,0, cstack
  8331 ;; Tracked objects:
  8332 ;;		On entry : 3F/0
  8333 ;;		On exit  : 3E/0
  8334 ;;		Unchanged: 0/0
  8335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8339 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8340 ;;Total ram usage:        0 bytes
  8341 ;; Hardware stack levels used: 1
  8342 ;; Hardware stack levels required when called: 5
  8343 ;; This function calls:
  8344 ;;		_SetSegmentValueLearn
  8345 ;; This function is called by:
  8346 ;;		_sm_execute_menuConfiguration
  8347 ;; This function uses a non-reentrant model
  8348 ;;
  8349                           
  8350                           	psect	text14
  8351  00902E                     __ptext14:
  8352                           	callstack 0
  8353  00902E                     _controlLearnDigit:
  8354                           	callstack 23
  8355                           
  8356                           ; BSR set to: 0
  8357                           ;sm_MenuConfiguration_MC50.c: 1232:     if(ts_system.timeSinalizationDigit<=0 )
  8358                           
  8359                           ;incstack = 0
  8360  00902E  0101               	movlb	1	; () banked
  8361  009030  BFA8               	btfsc	(_ts_system+13)& (0+255),7,b	;volatile
  8362  009032  D005               	goto	u13970
  8363  009034  51A8               	movf	(_ts_system+13)& (0+255),w,b	;volatile
  8364  009036  E112               	bnz	l3494
  8365  009038  05A7               	decf	(_ts_system+12)& (0+255),w,b	;volatile
  8366  00903A  B0D8               	btfsc	status,0,c
  8367  00903C  0012               	return	
  8368  00903E                     u13970:
  8369                           
  8370                           ; BSR set to: 1
  8371                           ;sm_MenuConfiguration_MC50.c: 1233:     {;sm_MenuConfiguration_MC50.c: 1234:         ts_
      +                          system.timeSinalizationDigit=( 100/50);
  8372  00903E  0E00               	movlw	0
  8373  009040  6FA8               	movwf	(_ts_system+13)& (0+255),b	;volatile
  8374  009042  0E02               	movlw	2
  8375  009044  6FA7               	movwf	(_ts_system+12)& (0+255),b	;volatile
  8376                           
  8377                           ; BSR set to: 1
  8378                           ;sm_MenuConfiguration_MC50.c: 1235:         if(var_sys.StateMotor==InClose)
  8379  009046  0E03               	movlw	3
  8380  009048  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
  8381  00904A  A4D8               	btfss	status,2,c
  8382  00904C  D004               	goto	l14151
  8383                           
  8384                           ; BSR set to: 1
  8385                           ;sm_MenuConfiguration_MC50.c: 1236:         {;sm_MenuConfiguration_MC50.c: 1237:        
      +                               SetSegmentValueLearn(Left);
  8386  00904E  0E00               	movlw	0
  8387  009050  ECAB  F037         	call	_SetSegmentValueLearn
  8388                           
  8389                           ;sm_MenuConfiguration_MC50.c: 1238:         }
  8390  009054  0012               	return	
  8391  009056                     l14151:
  8392                           
  8393                           ; BSR set to: 1
  8394                           ;sm_MenuConfiguration_MC50.c: 1240:         {;sm_MenuConfiguration_MC50.c: 1241:        
      +                               SetSegmentValueLearn(Rigth);
  8395  009056  0E01               	movlw	1
  8396  009058  ECAB  F037         	call	_SetSegmentValueLearn
  8397  00905C                     l3494:
  8398  00905C  0012               	return		;funcret
  8399  00905E                     __end_of_controlLearnDigit:
  8400                           	callstack 0
  8401                           
  8402 ;; *************** function _SetSegmentValueLearn *****************
  8403 ;; Defined at:
  8404 ;;		line 124 in file "outputs_MC50.c"
  8405 ;; Parameters:    Size  Location     Type
  8406 ;;  direction       1    wreg     enum E10602
  8407 ;; Auto vars:     Size  Location     Type
  8408 ;;  direction       1   17[COMRAM] enum E10602
  8409 ;; Return value:  Size  Location     Type
  8410 ;;                  1    wreg      void 
  8411 ;; Registers used:
  8412 ;;		wreg, status,2, status,0
  8413 ;; Tracked objects:
  8414 ;;		On entry : 3F/1
  8415 ;;		On exit  : 3F/0
  8416 ;;		Unchanged: 0/0
  8417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8419 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8420 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8421 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8422 ;;Total ram usage:        3 bytes
  8423 ;; Hardware stack levels used: 1
  8424 ;; Hardware stack levels required when called: 4
  8425 ;; This function calls:
  8426 ;;		Nothing
  8427 ;; This function is called by:
  8428 ;;		_controlLearnDigit
  8429 ;; This function uses a non-reentrant model
  8430 ;;
  8431                           
  8432                           	psect	text15
  8433  006F56                     __ptext15:
  8434                           	callstack 0
  8435  006F56                     _SetSegmentValueLearn:
  8436                           	callstack 23
  8437                           
  8438                           ;incstack = 0
  8439                           ;SetSegmentValueLearn@direction stored from wreg
  8440  006F56  6E12               	movwf	SetSegmentValueLearn@direction^0,c
  8441                           
  8442                           ;outputs_MC50.c: 124: void SetSegmentValueLearn(Direction_en direction);outputs_MC50.c: 
      +                          125: {;outputs_MC50.c: 126:     dispStruct.intermitentFreq=0;
  8443  006F58  0E00               	movlw	0
  8444  006F5A  0100               	movlb	0	; () banked
  8445  006F5C  6F76               	movwf	(_dispStruct+4)& (0+255),b	;volatile
  8446  006F5E  0E00               	movlw	0
  8447  006F60  6F75               	movwf	(_dispStruct+3)& (0+255),b	;volatile
  8448                           
  8449                           ;outputs_MC50.c: 127:     dispStruct.upFase=0;
  8450  006F62  0E00               	movlw	0
  8451  006F64  6F77               	movwf	(_dispStruct+5)& (0+255),b	;volatile
  8452                           
  8453                           ;outputs_MC50.c: 128:     switch (direction)
  8454  006F66  D066               	goto	l12603
  8455  006F68                     l12549:
  8456                           
  8457                           ; BSR set to: 0
  8458                           ;outputs_MC50.c: 131:             if(dispStruct.display_grp.value_display1==sA && dispSt
      +                          ruct.display_grp.value_display2==dBlank)
  8459  006F68  0E1A               	movlw	26
  8460  006F6A  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8461  006F6C  A4D8               	btfss	status,2,c
  8462  006F6E  D009               	goto	l12555
  8463                           
  8464                           ; BSR set to: 0
  8465  006F70  0E20               	movlw	32
  8466  006F72  1973               	xorwf	(_dispStruct+1)& (0+255),w,b	;volatile
  8467  006F74  A4D8               	btfss	status,2,c
  8468  006F76  D005               	goto	l12555
  8469                           
  8470                           ; BSR set to: 0
  8471                           ;outputs_MC50.c: 132:             {;outputs_MC50.c: 133:                dispStruct.displ
      +                          ay_grp.value_display1=dBlank;
  8472  006F78  0E20               	movlw	32
  8473  006F7A  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8474                           
  8475                           ;outputs_MC50.c: 134:                dispStruct.display_grp.value_display2=sA;
  8476  006F7C  0E1A               	movlw	26
  8477  006F7E  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8478                           
  8479                           ;outputs_MC50.c: 135:             }
  8480  006F80  0012               	return	
  8481  006F82                     l12555:
  8482                           
  8483                           ; BSR set to: 0
  8484  006F82  0E20               	movlw	32
  8485  006F84  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8486  006F86  A4D8               	btfss	status,2,c
  8487  006F88  D009               	goto	l12561
  8488                           
  8489                           ; BSR set to: 0
  8490  006F8A  0E1D               	movlw	29
  8491  006F8C  1973               	xorwf	(_dispStruct+1)& (0+255),w,b	;volatile
  8492  006F8E  A4D8               	btfss	status,2,c
  8493  006F90  D005               	goto	l12561
  8494                           
  8495                           ; BSR set to: 0
  8496                           ;outputs_MC50.c: 137:             {;outputs_MC50.c: 138:                dispStruct.displ
      +                          ay_grp.value_display1=sD;
  8497  006F92  0E1D               	movlw	29
  8498  006F94  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8499                           
  8500                           ;outputs_MC50.c: 139:                dispStruct.display_grp.value_display2=dBlank;
  8501  006F96  0E20               	movlw	32
  8502  006F98  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8503                           
  8504                           ;outputs_MC50.c: 140:             }
  8505  006F9A  0012               	return	
  8506  006F9C                     l12561:
  8507                           
  8508                           ; BSR set to: 0
  8509  006F9C  0E1F               	movlw	31
  8510  006F9E  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8511  006FA0  A4D8               	btfss	status,2,c
  8512  006FA2  D005               	goto	l12565
  8513                           
  8514                           ; BSR set to: 0
  8515                           ;outputs_MC50.c: 142:             {;outputs_MC50.c: 143:                dispStruct.displ
      +                          ay_grp.value_display1=sA;
  8516  006FA4  0E1A               	movlw	26
  8517  006FA6  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8518                           
  8519                           ;outputs_MC50.c: 144:                dispStruct.display_grp.value_display2=dBlank;
  8520  006FA8  0E20               	movlw	32
  8521  006FAA  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8522                           
  8523                           ;outputs_MC50.c: 145:             }
  8524  006FAC  0012               	return	
  8525  006FAE                     l12565:
  8526                           
  8527                           ; BSR set to: 0
  8528  006FAE  0E20               	movlw	32
  8529  006FB0  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8530  006FB2  A4D8               	btfss	status,2,c
  8531  006FB4  D002               	goto	l12569
  8532                           
  8533                           ; BSR set to: 0
  8534                           ;outputs_MC50.c: 147:             {;outputs_MC50.c: 148:                dispStruct.displ
      +                          ay_grp.value_display2++;
  8535  006FB6  2B73               	incf	(_dispStruct+1)& (0+255),f,b	;volatile
  8536                           
  8537                           ;outputs_MC50.c: 149:             }
  8538  006FB8  0012               	return	
  8539  006FBA                     l12569:
  8540                           
  8541                           ; BSR set to: 0
  8542  006FBA  0E20               	movlw	32
  8543  006FBC  1973               	xorwf	(_dispStruct+1)& (0+255),w,b	;volatile
  8544  006FBE  A4D8               	btfss	status,2,c
  8545  006FC0  D002               	goto	l12573
  8546                           
  8547                           ; BSR set to: 0
  8548                           ;outputs_MC50.c: 151:             {;outputs_MC50.c: 152:                dispStruct.displ
      +                          ay_grp.value_display1++;
  8549  006FC2  2B72               	incf	_dispStruct& (0+255),f,b	;volatile
  8550                           
  8551                           ;outputs_MC50.c: 153:             }
  8552  006FC4  0012               	return	
  8553  006FC6                     l12573:
  8554                           
  8555                           ; BSR set to: 0
  8556                           ;outputs_MC50.c: 155:             {;outputs_MC50.c: 156:                dispStruct.displ
      +                          ay_grp.value_display1=sA;
  8557  006FC6  0E1A               	movlw	26
  8558  006FC8  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8559                           
  8560                           ;outputs_MC50.c: 157:                dispStruct.display_grp.value_display2=dBlank;
  8561  006FCA  0E20               	movlw	32
  8562  006FCC  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8563  006FCE  0012               	return	
  8564  006FD0                     l12575:
  8565                           
  8566                           ; BSR set to: 0
  8567                           ;outputs_MC50.c: 161:             if(dispStruct.display_grp.value_display2==sA && dispSt
      +                          ruct.display_grp.value_display1==dBlank)
  8568  006FD0  0E1A               	movlw	26
  8569  006FD2  1973               	xorwf	(_dispStruct+1)& (0+255),w,b	;volatile
  8570  006FD4  A4D8               	btfss	status,2,c
  8571  006FD6  D009               	goto	l12581
  8572                           
  8573                           ; BSR set to: 0
  8574  006FD8  0E20               	movlw	32
  8575  006FDA  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8576  006FDC  A4D8               	btfss	status,2,c
  8577  006FDE  D005               	goto	l12581
  8578                           
  8579                           ; BSR set to: 0
  8580                           ;outputs_MC50.c: 162:             {;outputs_MC50.c: 163:                dispStruct.displ
      +                          ay_grp.value_display1=sA;
  8581  006FE0  0E1A               	movlw	26
  8582  006FE2  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8583                           
  8584                           ;outputs_MC50.c: 164:                dispStruct.display_grp.value_display2=dBlank;
  8585  006FE4  0E20               	movlw	32
  8586  006FE6  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8587                           
  8588                           ;outputs_MC50.c: 165:             }
  8589  006FE8  0012               	return	
  8590  006FEA                     l12581:
  8591                           
  8592                           ; BSR set to: 0
  8593  006FEA  0E20               	movlw	32
  8594  006FEC  1973               	xorwf	(_dispStruct+1)& (0+255),w,b	;volatile
  8595  006FEE  A4D8               	btfss	status,2,c
  8596  006FF0  D009               	goto	l12587
  8597                           
  8598                           ; BSR set to: 0
  8599  006FF2  0E1D               	movlw	29
  8600  006FF4  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8601  006FF6  A4D8               	btfss	status,2,c
  8602  006FF8  D005               	goto	l12587
  8603                           
  8604                           ; BSR set to: 0
  8605                           ;outputs_MC50.c: 167:             {;outputs_MC50.c: 168:                dispStruct.displ
      +                          ay_grp.value_display1=dBlank;
  8606  006FFA  0E20               	movlw	32
  8607  006FFC  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8608                           
  8609                           ;outputs_MC50.c: 169:                dispStruct.display_grp.value_display2=sD;
  8610  006FFE  0E1D               	movlw	29
  8611  007000  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8612                           
  8613                           ;outputs_MC50.c: 170:             }
  8614  007002  0012               	return	
  8615  007004                     l12587:
  8616                           
  8617                           ; BSR set to: 0
  8618  007004  0E1A               	movlw	26
  8619  007006  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8620  007008  A4D8               	btfss	status,2,c
  8621  00700A  D003               	goto	l12591
  8622                           
  8623                           ; BSR set to: 0
  8624                           ;outputs_MC50.c: 172:             {;outputs_MC50.c: 173:                dispStruct.displ
      +                          ay_grp.value_display1=sF;
  8625  00700C  0E1F               	movlw	31
  8626  00700E  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8627                           
  8628                           ;outputs_MC50.c: 174:             }
  8629  007010  0012               	return	
  8630  007012                     l12591:
  8631                           
  8632                           ; BSR set to: 0
  8633  007012  0E20               	movlw	32
  8634  007014  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8635  007016  A4D8               	btfss	status,2,c
  8636  007018  D002               	goto	l12595
  8637                           
  8638                           ; BSR set to: 0
  8639                           ;outputs_MC50.c: 176:             {;outputs_MC50.c: 177:                dispStruct.displ
      +                          ay_grp.value_display2--;
  8640  00701A  0773               	decf	(_dispStruct+1)& (0+255),f,b	;volatile
  8641                           
  8642                           ;outputs_MC50.c: 178:             }
  8643  00701C  0012               	return	
  8644  00701E                     l12595:
  8645                           
  8646                           ; BSR set to: 0
  8647  00701E  0E20               	movlw	32
  8648  007020  1973               	xorwf	(_dispStruct+1)& (0+255),w,b	;volatile
  8649  007022  A4D8               	btfss	status,2,c
  8650  007024  D002               	goto	l12599
  8651                           
  8652                           ; BSR set to: 0
  8653                           ;outputs_MC50.c: 180:             {;outputs_MC50.c: 181:                dispStruct.displ
      +                          ay_grp.value_display1--;
  8654  007026  0772               	decf	_dispStruct& (0+255),f,b	;volatile
  8655                           
  8656                           ;outputs_MC50.c: 182:             }
  8657  007028  0012               	return	
  8658  00702A                     l12599:
  8659                           
  8660                           ; BSR set to: 0
  8661                           ;outputs_MC50.c: 184:             {;outputs_MC50.c: 185:                dispStruct.displ
      +                          ay_grp.value_display1=sA;
  8662  00702A  0E1A               	movlw	26
  8663  00702C  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8664                           
  8665                           ;outputs_MC50.c: 186:                dispStruct.display_grp.value_display2=dBlank;
  8666  00702E  0E20               	movlw	32
  8667  007030  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8668  007032  0012               	return	
  8669  007034                     l12603:
  8670                           
  8671                           ; BSR set to: 0
  8672  007034  5012               	movf	SetSegmentValueLearn@direction^0,w,c
  8673  007036  6E10               	movwf	??_SetSegmentValueLearn^0,c
  8674  007038  6A11               	clrf	(??_SetSegmentValueLearn+1)^0,c
  8675                           
  8676                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8677                           ; Switch size 1, requested type "simple"
  8678                           ; Number of cases is 1, Range of values is 0 to 0
  8679                           ; switch strategies available:
  8680                           ; Name         Instructions Cycles
  8681                           ; simple_byte            4     3 (average)
  8682                           ;	Chosen strategy is simple_byte
  8683  00703A  5011               	movf	(??_SetSegmentValueLearn+1)^0,w,c
  8684  00703C  0A00               	xorlw	0	; case 0
  8685  00703E  A4D8               	btfss	status,2,c
  8686  007040  0012               	return	
  8687                           
  8688                           ; BSR set to: 0
  8689                           ; Switch size 1, requested type "simple"
  8690                           ; Number of cases is 2, Range of values is 0 to 1
  8691                           ; switch strategies available:
  8692                           ; Name         Instructions Cycles
  8693                           ; simple_byte            7     4 (average)
  8694                           ;	Chosen strategy is simple_byte
  8695  007042  5010               	movf	??_SetSegmentValueLearn^0,w,c
  8696  007044  0A00               	xorlw	0	; case 0
  8697  007046  B4D8               	btfsc	status,2,c
  8698  007048  D7C3               	goto	l12575
  8699  00704A  0A01               	xorlw	1	; case 1
  8700  00704C  A4D8               	btfss	status,2,c
  8701  00704E  0012               	return	
  8702  007050  D78B               	goto	l12549
  8703  007052                     __end_of_SetSegmentValueLearn:
  8704                           	callstack 0
  8705                           
  8706 ;; *************** function ___lldiv *****************
  8707 ;; Defined at:
  8708 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\__lldiv.c"
  8709 ;; Parameters:    Size  Location     Type
  8710 ;;  dividend        4   15[COMRAM] unsigned long 
  8711 ;;  divisor         4   19[COMRAM] unsigned long 
  8712 ;; Auto vars:     Size  Location     Type
  8713 ;;  quotient        4   23[COMRAM] unsigned long 
  8714 ;;  counter         1   27[COMRAM] unsigned char 
  8715 ;; Return value:  Size  Location     Type
  8716 ;;                  4   15[COMRAM] unsigned long 
  8717 ;; Registers used:
  8718 ;;		wreg, status,2, status,0
  8719 ;; Tracked objects:
  8720 ;;		On entry : 0/1
  8721 ;;		On exit  : 0/0
  8722 ;;		Unchanged: 0/0
  8723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8724 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8725 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8727 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8728 ;;Total ram usage:       13 bytes
  8729 ;; Hardware stack levels used: 1
  8730 ;; Hardware stack levels required when called: 4
  8731 ;; This function calls:
  8732 ;;		Nothing
  8733 ;; This function is called by:
  8734 ;;		_sm_execute_menuConfiguration
  8735 ;; This function uses a non-reentrant model
  8736 ;;
  8737                           
  8738                           	psect	text16
  8739  007ED8                     __ptext16:
  8740                           	callstack 0
  8741  007ED8                     ___lldiv:
  8742                           	callstack 24
  8743                           
  8744                           ; BSR set to: 0
  8745                           ;incstack = 0
  8746  007ED8  0E00               	movlw	0
  8747  007EDA  6E18               	movwf	___lldiv@quotient^0,c
  8748  007EDC  0E00               	movlw	0
  8749  007EDE  6E19               	movwf	(___lldiv@quotient+1)^0,c
  8750  007EE0  0E00               	movlw	0
  8751  007EE2  6E1A               	movwf	(___lldiv@quotient+2)^0,c
  8752  007EE4  0E00               	movlw	0
  8753  007EE6  6E1B               	movwf	(___lldiv@quotient+3)^0,c
  8754  007EE8  5014               	movf	___lldiv@divisor^0,w,c
  8755  007EEA  1015               	iorwf	(___lldiv@divisor+1)^0,w,c
  8756  007EEC  1016               	iorwf	(___lldiv@divisor+2)^0,w,c
  8757  007EEE  1017               	iorwf	(___lldiv@divisor+3)^0,w,c
  8758  007EF0  B4D8               	btfsc	status,2,c
  8759  007EF2  D02A               	goto	l3751
  8760  007EF4  0E01               	movlw	1
  8761  007EF6  6E1C               	movwf	___lldiv@counter^0,c
  8762  007EF8  D006               	goto	l14171
  8763  007EFA                     l14169:
  8764  007EFA  90D8               	bcf	status,0,c
  8765  007EFC  3614               	rlcf	___lldiv@divisor^0,f,c
  8766  007EFE  3615               	rlcf	(___lldiv@divisor+1)^0,f,c
  8767  007F00  3616               	rlcf	(___lldiv@divisor+2)^0,f,c
  8768  007F02  3617               	rlcf	(___lldiv@divisor+3)^0,f,c
  8769  007F04  2A1C               	incf	___lldiv@counter^0,f,c
  8770  007F06                     l14171:
  8771  007F06  AE17               	btfss	(___lldiv@divisor+3)^0,7,c
  8772  007F08  D7F8               	goto	l14169
  8773  007F0A                     u14010:
  8774  007F0A  90D8               	bcf	status,0,c
  8775  007F0C  3618               	rlcf	___lldiv@quotient^0,f,c
  8776  007F0E  3619               	rlcf	(___lldiv@quotient+1)^0,f,c
  8777  007F10  361A               	rlcf	(___lldiv@quotient+2)^0,f,c
  8778  007F12  361B               	rlcf	(___lldiv@quotient+3)^0,f,c
  8779  007F14  5014               	movf	___lldiv@divisor^0,w,c
  8780  007F16  5C10               	subwf	___lldiv@dividend^0,w,c
  8781  007F18  5015               	movf	(___lldiv@divisor+1)^0,w,c
  8782  007F1A  5811               	subwfb	(___lldiv@dividend+1)^0,w,c
  8783  007F1C  5016               	movf	(___lldiv@divisor+2)^0,w,c
  8784  007F1E  5812               	subwfb	(___lldiv@dividend+2)^0,w,c
  8785  007F20  5017               	movf	(___lldiv@divisor+3)^0,w,c
  8786  007F22  5813               	subwfb	(___lldiv@dividend+3)^0,w,c
  8787  007F24  A0D8               	btfss	status,0,c
  8788  007F26  D009               	goto	l14181
  8789  007F28  5014               	movf	___lldiv@divisor^0,w,c
  8790  007F2A  5E10               	subwf	___lldiv@dividend^0,f,c
  8791  007F2C  5015               	movf	(___lldiv@divisor+1)^0,w,c
  8792  007F2E  5A11               	subwfb	(___lldiv@dividend+1)^0,f,c
  8793  007F30  5016               	movf	(___lldiv@divisor+2)^0,w,c
  8794  007F32  5A12               	subwfb	(___lldiv@dividend+2)^0,f,c
  8795  007F34  5017               	movf	(___lldiv@divisor+3)^0,w,c
  8796  007F36  5A13               	subwfb	(___lldiv@dividend+3)^0,f,c
  8797  007F38  8018               	bsf	___lldiv@quotient^0,0,c
  8798  007F3A                     l14181:
  8799  007F3A  90D8               	bcf	status,0,c
  8800  007F3C  3217               	rrcf	(___lldiv@divisor+3)^0,f,c
  8801  007F3E  3216               	rrcf	(___lldiv@divisor+2)^0,f,c
  8802  007F40  3215               	rrcf	(___lldiv@divisor+1)^0,f,c
  8803  007F42  3214               	rrcf	___lldiv@divisor^0,f,c
  8804  007F44  2E1C               	decfsz	___lldiv@counter^0,f,c
  8805  007F46  D7E1               	goto	u14010
  8806  007F48                     l3751:
  8807  007F48  C018  F010         	movff	___lldiv@quotient,?___lldiv
  8808  007F4C  C019  F011         	movff	___lldiv@quotient+1,?___lldiv+1
  8809  007F50  C01A  F012         	movff	___lldiv@quotient+2,?___lldiv+2
  8810  007F54  C01B  F013         	movff	___lldiv@quotient+3,?___lldiv+3
  8811  007F58  0012               	return		;funcret
  8812  007F5A                     __end_of___lldiv:
  8813                           	callstack 0
  8814                           
  8815 ;; *************** function _sm_execute_ControlGate *****************
  8816 ;; Defined at:
  8817 ;;		line 128 in file "sm_ControlGate_MC50.c"
  8818 ;; Parameters:    Size  Location     Type
  8819 ;;  psm             2   15[BANK0 ] PTR struct .
  8820 ;;		 -> controlGate_stateMachine(11), 
  8821 ;; Auto vars:     Size  Location     Type
  8822 ;;  typeOpenOrde    1   19[BANK0 ] enum E10372
  8823 ;; Return value:  Size  Location     Type
  8824 ;;                  1    wreg      void 
  8825 ;; Registers used:
  8826 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  8827 ;; Tracked objects:
  8828 ;;		On entry : 3F/0
  8829 ;;		On exit  : 0/0
  8830 ;;		Unchanged: 0/0
  8831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8832 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8833 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8834 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8835 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8836 ;;Total ram usage:        5 bytes
  8837 ;; Hardware stack levels used: 1
  8838 ;; Hardware stack levels required when called: 15
  8839 ;; This function calls:
  8840 ;;		_GetOpenOrder
  8841 ;;		_SetSegmentValueIntermitent
  8842 ;;		_WaitPreFlash
  8843 ;;		_actionZone_Closed
  8844 ;;		_actionZone_Closing
  8845 ;;		_actionZone_Opened
  8846 ;;		_actionZone_Opening
  8847 ;;		_sm_execute_ControlLearning
  8848 ;;		_sm_send_event
  8849 ;; This function is called by:
  8850 ;;		_main
  8851 ;; This function uses a non-reentrant model
  8852 ;;
  8853                           
  8854                           	psect	text17
  8855  003BE8                     __ptext17:
  8856                           	callstack 0
  8857  003BE8                     _sm_execute_ControlGate:
  8858                           	callstack 15
  8859                           
  8860                           ; BSR set to: 0
  8861                           ;sm_ControlGate_MC50.c: 129:     TypeCMD typeOpenOrder;;sm_ControlGate_MC50.c: 133:     
      +                          if ( (main_stateMachine.current_state == st_MenuConfiguration) && (menuConfiguration_sta
      +                          teMachine.current_state != st_LearningMode) )
  8862                           
  8863                           ;incstack = 0
  8864  003BE8  0101               	movlb	1	; () banked
  8865  003BEA  05EE               	decf	_main_stateMachine& (0+255),w,b
  8866  003BEC  11EF               	iorwf	(_main_stateMachine+1)& (0+255),w,b
  8867  003BEE  A4D8               	btfss	status,2,c
  8868  003BF0  D006               	goto	l23885
  8869                           
  8870                           ; BSR set to: 1
  8871  003BF2  0E06               	movlw	6
  8872  003BF4  0102               	movlb	2	; () banked
  8873  003BF6  19BF               	xorwf	_menuConfiguration_stateMachine& (0+255),w,b
  8874  003BF8  11C0               	iorwf	(_menuConfiguration_stateMachine+1)& (0+255),w,b
  8875  003BFA  A4D8               	btfss	status,2,c
  8876  003BFC  0012               	return	
  8877  003BFE                     l23885:
  8878                           
  8879                           ;sm_ControlGate_MC50.c: 137:         if (var_sys.preflashingcontrol == YES){
  8880  003BFE  0101               	movlb	1	; () banked
  8881  003C00  051D               	decf	(_var_sys+29)& (0+255),w,b	;volatile
  8882  003C02  A4D8               	btfss	status,2,c
  8883  003C04  D0CE               	goto	l23959
  8884                           
  8885                           ; BSR set to: 1
  8886                           ;sm_ControlGate_MC50.c: 139:         WaitPreFlash();
  8887  003C06  EC94  F041         	call	_WaitPreFlash	;wreg free
  8888  003C0A  D0CB               	goto	l23959
  8889  003C0C                     l23889:
  8890                           
  8891                           ; BSR set to: 0
  8892                           ;sm_ControlGate_MC50.c: 145:         {;sm_ControlGate_MC50.c: 148:             if (psm->
      +                          last_event == ev_GateClosed) {
  8893  003C0C  EE20 F004          	lfsr	2,4
  8894  003C10  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  8895  003C12  26D9               	addwf	fsr2l,f,c
  8896  003C14  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  8897  003C16  22DA               	addwfc	fsr2h,f,c
  8898  003C18  0E0A               	movlw	10
  8899  003C1A  18DE               	xorwf	postinc2,w,c
  8900  003C1C  10DE               	iorwf	postinc2,w,c
  8901  003C1E  A4D8               	btfss	status,2,c
  8902  003C20  D006               	goto	l23893
  8903  003C22                     u29510:
  8904                           
  8905                           ; BSR set to: 0
  8906                           ;sm_ControlGate_MC50.c: 149:                 psm->current_state = st_Closed;
  8907  003C22  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  8908  003C26  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  8909  003C2A  0E01               	movlw	1
  8910  003C2C  D0B5               	goto	L55
  8911  003C2E                     l23893:
  8912                           
  8913                           ; BSR set to: 0
  8914  003C2E  EE20 F004          	lfsr	2,4
  8915  003C32  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  8916  003C34  26D9               	addwf	fsr2l,f,c
  8917  003C36  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  8918  003C38  22DA               	addwfc	fsr2h,f,c
  8919  003C3A  0E0B               	movlw	11
  8920  003C3C  18DE               	xorwf	postinc2,w,c
  8921  003C3E  10DE               	iorwf	postinc2,w,c
  8922  003C40  A4D8               	btfss	status,2,c
  8923  003C42  D0CF               	goto	l23961
  8924  003C44  D038               	goto	u29580
  8925  003C46                     l23897:
  8926                           
  8927                           ; BSR set to: 0
  8928                           ;sm_ControlGate_MC50.c: 160:         {;sm_ControlGate_MC50.c: 161:             if (psm->
      +                          last_event == ev_OpenGate) {
  8929  003C46  EE20 F004          	lfsr	2,4
  8930  003C4A  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  8931  003C4C  26D9               	addwf	fsr2l,f,c
  8932  003C4E  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  8933  003C50  22DA               	addwfc	fsr2h,f,c
  8934  003C52  0E0C               	movlw	12
  8935  003C54  18DE               	xorwf	postinc2,w,c
  8936  003C56  10DE               	iorwf	postinc2,w,c
  8937  003C58  A4D8               	btfss	status,2,c
  8938  003C5A  D072               	goto	l23945
  8939  003C5C                     u29530:
  8940                           
  8941                           ; BSR set to: 0
  8942                           ;sm_ControlGate_MC50.c: 162:                 psm->current_state = st_Opening;
  8943  003C5C  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  8944  003C60  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  8945  003C64  0E02               	movlw	2
  8946  003C66  D098               	goto	L55
  8947  003C68                     l23905:
  8948                           
  8949                           ; BSR set to: 0
  8950                           ;sm_ControlGate_MC50.c: 169:         {;sm_ControlGate_MC50.c: 170:             if (psm->
      +                          last_event == ev_StopGate) {
  8951  003C68  EE20 F004          	lfsr	2,4
  8952  003C6C  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  8953  003C6E  26D9               	addwf	fsr2l,f,c
  8954  003C70  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  8955  003C72  22DA               	addwfc	fsr2h,f,c
  8956  003C74  0E0D               	movlw	13
  8957  003C76  18DE               	xorwf	postinc2,w,c
  8958  003C78  10DE               	iorwf	postinc2,w,c
  8959  003C7A  B4D8               	btfsc	status,2,c
  8960  003C7C  D01C               	goto	u29580
  8961                           
  8962                           ; BSR set to: 0
  8963                           
  8964                           ;sm_ControlGate_MC50.c: 172:             } else if (psm->last_event == ev_CloseGate) {
  8965                           
  8966                           ; BSR set to: 0
  8967                           ;sm_ControlGate_MC50.c: 171:                 psm->current_state = st_Opened;
  8968  003C7E  EE20 F004          	lfsr	2,4
  8969  003C82  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  8970  003C84  26D9               	addwf	fsr2l,f,c
  8971  003C86  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  8972  003C88  22DA               	addwfc	fsr2h,f,c
  8973  003C8A  0E0E               	movlw	14
  8974  003C8C  18DE               	xorwf	postinc2,w,c
  8975  003C8E  10DE               	iorwf	postinc2,w,c
  8976  003C90  A4D8               	btfss	status,2,c
  8977  003C92  D02D               	goto	L129
  8978  003C94                     u29560:
  8979                           
  8980                           ; BSR set to: 0
  8981                           ;sm_ControlGate_MC50.c: 173:                 psm->current_state = st_Closing;
  8982  003C94  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  8983  003C98  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  8984  003C9C  0E03               	movlw	3
  8985  003C9E  D07C               	goto	L55
  8986  003CA0                     l23917:
  8987                           
  8988                           ; BSR set to: 0
  8989                           ;sm_ControlGate_MC50.c: 180:         {;sm_ControlGate_MC50.c: 181:             if (psm->
      +                          last_event == ev_StopGate) {
  8990  003CA0  EE20 F004          	lfsr	2,4
  8991  003CA4  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  8992  003CA6  26D9               	addwf	fsr2l,f,c
  8993  003CA8  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  8994  003CAA  22DA               	addwfc	fsr2h,f,c
  8995  003CAC  0E0D               	movlw	13
  8996  003CAE  18DE               	xorwf	postinc2,w,c
  8997  003CB0  10DE               	iorwf	postinc2,w,c
  8998  003CB2  A4D8               	btfss	status,2,c
  8999  003CB4  D006               	goto	l23921
  9000  003CB6                     u29580:
  9001                           
  9002                           ; BSR set to: 0
  9003                           ;sm_ControlGate_MC50.c: 182:                 psm->current_state = st_Opened;
  9004  003CB6  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9005  003CBA  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9006  003CBE  0E04               	movlw	4
  9007  003CC0  D06B               	goto	L55
  9008  003CC2                     l23921:
  9009                           
  9010                           ; BSR set to: 0
  9011  003CC2  EE20 F004          	lfsr	2,4
  9012  003CC6  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9013  003CC8  26D9               	addwf	fsr2l,f,c
  9014  003CCA  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9015  003CCC  22DA               	addwfc	fsr2h,f,c
  9016  003CCE  0E0F               	movlw	15
  9017  003CD0  18DE               	xorwf	postinc2,w,c
  9018  003CD2  10DE               	iorwf	postinc2,w,c
  9019  003CD4  B4D8               	btfsc	status,2,c
  9020  003CD6  D7A5               	goto	u29510
  9021                           
  9022                           ; BSR set to: 0
  9023                           
  9024                           ;sm_ControlGate_MC50.c: 185:             } else if (psm->last_event == ev_OpenGate) {
  9025                           
  9026                           ; BSR set to: 0
  9027                           ;sm_ControlGate_MC50.c: 184:                 psm->current_state = st_Closed;
  9028  003CD8  EE20 F004          	lfsr	2,4
  9029  003CDC  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9030  003CDE  26D9               	addwf	fsr2l,f,c
  9031  003CE0  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9032  003CE2  22DA               	addwfc	fsr2h,f,c
  9033  003CE4  0E0C               	movlw	12
  9034  003CE6  18DE               	xorwf	postinc2,w,c
  9035  003CE8  10DE               	iorwf	postinc2,w,c
  9036  003CEA  B4D8               	btfsc	status,2,c
  9037  003CEC  D7B7               	goto	u29530
  9038  003CEE                     L129:
  9039                           
  9040                           ; BSR set to: 0
  9041                           
  9042                           ;sm_ControlGate_MC50.c: 187:             } else if (psm->last_event == ev_ErrorGate) {
  9043                           
  9044                           ; BSR set to: 0
  9045                           ;sm_ControlGate_MC50.c: 186:                 psm->current_state = st_Opening;
  9046  003CEE  EE20 F004          	lfsr	2,4
  9047  003CF2  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9048  003CF4  26D9               	addwf	fsr2l,f,c
  9049  003CF6  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9050  003CF8  22DA               	addwfc	fsr2h,f,c
  9051  003CFA  0E10               	movlw	16
  9052  003CFC  D044               	goto	L126
  9053  003CFE                     l23933:
  9054                           
  9055                           ; BSR set to: 0
  9056                           ;sm_ControlGate_MC50.c: 193:         {;sm_ControlGate_MC50.c: 194:             if (psm->
      +                          last_event == ev_CloseGate) {
  9057  003CFE  EE20 F004          	lfsr	2,4
  9058  003D02  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9059  003D04  26D9               	addwf	fsr2l,f,c
  9060  003D06  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9061  003D08  22DA               	addwfc	fsr2h,f,c
  9062  003D0A  0E0E               	movlw	14
  9063  003D0C  18DE               	xorwf	postinc2,w,c
  9064  003D0E  10DE               	iorwf	postinc2,w,c
  9065  003D10  B4D8               	btfsc	status,2,c
  9066  003D12  D7C0               	goto	u29560
  9067                           
  9068                           ; BSR set to: 0
  9069                           
  9070                           ;sm_ControlGate_MC50.c: 196:             } else if (psm->last_event == ev_OpenGate) {
  9071                           
  9072                           ; BSR set to: 0
  9073                           ;sm_ControlGate_MC50.c: 195:                 psm->current_state = st_Closing;
  9074  003D14  EE20 F004          	lfsr	2,4
  9075  003D18  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9076  003D1A  26D9               	addwf	fsr2l,f,c
  9077  003D1C  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9078  003D1E  22DA               	addwfc	fsr2h,f,c
  9079  003D20  0E0C               	movlw	12
  9080  003D22  18DE               	xorwf	postinc2,w,c
  9081  003D24  10DE               	iorwf	postinc2,w,c
  9082  003D26  B4D8               	btfsc	status,2,c
  9083  003D28  D799               	goto	u29530
  9084                           
  9085                           ; BSR set to: 0
  9086                           
  9087                           ;sm_ControlGate_MC50.c: 198:             } else if (psm->last_event == ev_ErrorGate) {
  9088                           
  9089                           ; BSR set to: 0
  9090                           ;sm_ControlGate_MC50.c: 197:                 psm->current_state = st_Opening;
  9091  003D2A  EE20 F004          	lfsr	2,4
  9092  003D2E  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9093  003D30  26D9               	addwf	fsr2l,f,c
  9094  003D32  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9095  003D34  22DA               	addwfc	fsr2h,f,c
  9096  003D36  0E10               	movlw	16
  9097  003D38  18DE               	xorwf	postinc2,w,c
  9098  003D3A  10DE               	iorwf	postinc2,w,c
  9099  003D3C  B4D8               	btfsc	status,2,c
  9100  003D3E  D027               	goto	L127
  9101  003D40                     l23945:
  9102                           
  9103                           ; BSR set to: 0
  9104  003D40  EE20 F004          	lfsr	2,4
  9105  003D44  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9106  003D46  26D9               	addwf	fsr2l,f,c
  9107  003D48  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9108  003D4A  22DA               	addwfc	fsr2h,f,c
  9109  003D4C  0E14               	movlw	20
  9110  003D4E  18DE               	xorwf	postinc2,w,c
  9111  003D50  10DE               	iorwf	postinc2,w,c
  9112  003D52  A4D8               	btfss	status,2,c
  9113  003D54  D046               	goto	l23961
  9114                           
  9115                           ; BSR set to: 0
  9116                           ;sm_ControlGate_MC50.c: 205:                 psm->current_state = st_Learning;
  9117  003D56  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9118  003D5A  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9119  003D5E  0E05               	movlw	5
  9120  003D60  D01B               	goto	L55
  9121  003D62                     l23949:
  9122                           
  9123                           ; BSR set to: 0
  9124                           ;sm_ControlGate_MC50.c: 217:         {;sm_ControlGate_MC50.c: 218:             if (psm->
      +                          last_event == ev_LearningComplete) {
  9125  003D62  EE20 F004          	lfsr	2,4
  9126  003D66  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9127  003D68  26D9               	addwf	fsr2l,f,c
  9128  003D6A  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9129  003D6C  22DA               	addwfc	fsr2h,f,c
  9130  003D6E  0E13               	movlw	19
  9131  003D70  18DE               	xorwf	postinc2,w,c
  9132  003D72  10DE               	iorwf	postinc2,w,c
  9133  003D74  B4D8               	btfsc	status,2,c
  9134  003D76  D755               	goto	u29510
  9135                           
  9136                           ; BSR set to: 0
  9137                           
  9138                           ;sm_ControlGate_MC50.c: 220:             } else if (psm->last_event == ev_ErrorLearning)
      +                           {
  9139                           
  9140                           ; BSR set to: 0
  9141                           ;sm_ControlGate_MC50.c: 219:                 psm->current_state = st_Closed;
  9142  003D78  EE20 F004          	lfsr	2,4
  9143  003D7C  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9144  003D7E  26D9               	addwf	fsr2l,f,c
  9145  003D80  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9146  003D82  22DA               	addwfc	fsr2h,f,c
  9147  003D84  0E12               	movlw	18
  9148  003D86                     L126:
  9149  003D86  18DE               	xorwf	postinc2,w,c
  9150  003D88  10DE               	iorwf	postinc2,w,c
  9151  003D8A  A4D8               	btfss	status,2,c
  9152  003D8C  D02A               	goto	l23961
  9153  003D8E                     L127:
  9154                           
  9155                           ; BSR set to: 0
  9156                           ;sm_ControlGate_MC50.c: 221:                 psm->current_state = st_Idle;
  9157  003D8E  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9158  003D92  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9159  003D96  0E00               	movlw	0
  9160  003D98                     L55:
  9161  003D98  6EDE               	movwf	postinc2,c
  9162  003D9A  0E00               	movlw	0
  9163  003D9C  6EDD               	movwf	postdec2,c
  9164  003D9E  D021               	goto	l23961
  9165  003DA0                     l2653:
  9166                           
  9167                           ; BSR set to: 0
  9168  003DA0  D7FF               	goto	l2653
  9169  003DA2                     l23959:
  9170                           
  9171                           ; BSR set to: 1
  9172  003DA2  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9173  003DA6  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9174  003DAA  50DF               	movf	indf2,w,c
  9175  003DAC  0100               	movlb	0	; () banked
  9176  003DAE  6FE9               	movwf	??_sm_execute_ControlGate& (0+255),b
  9177  003DB0  6BEA               	clrf	(??_sm_execute_ControlGate+1)& (0+255),b
  9178                           
  9179                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9180                           ; Switch size 1, requested type "simple"
  9181                           ; Number of cases is 1, Range of values is 0 to 0
  9182                           ; switch strategies available:
  9183                           ; Name         Instructions Cycles
  9184                           ; simple_byte            4     3 (average)
  9185                           ;	Chosen strategy is simple_byte
  9186  003DB2  51EA               	movf	(??_sm_execute_ControlGate+1)& (0+255),w,b
  9187  003DB4  0A00               	xorlw	0	; case 0
  9188  003DB6  A4D8               	btfss	status,2,c
  9189  003DB8  D7F3               	goto	l2653
  9190                           
  9191                           ; BSR set to: 0
  9192                           ; Switch size 1, requested type "simple"
  9193                           ; Number of cases is 6, Range of values is 0 to 5
  9194                           ; switch strategies available:
  9195                           ; Name         Instructions Cycles
  9196                           ; simple_byte           19    10 (average)
  9197                           ;	Chosen strategy is simple_byte
  9198  003DBA  51E9               	movf	??_sm_execute_ControlGate& (0+255),w,b
  9199  003DBC  0A00               	xorlw	0	; case 0
  9200  003DBE  B4D8               	btfsc	status,2,c
  9201  003DC0  D725               	goto	l23889
  9202  003DC2  0A01               	xorlw	1	; case 1
  9203  003DC4  B4D8               	btfsc	status,2,c
  9204  003DC6  D73F               	goto	l23897
  9205  003DC8  0A03               	xorlw	3	; case 2
  9206  003DCA  B4D8               	btfsc	status,2,c
  9207  003DCC  D74D               	goto	l23905
  9208  003DCE  0A01               	xorlw	1	; case 3
  9209  003DD0  B4D8               	btfsc	status,2,c
  9210  003DD2  D766               	goto	l23917
  9211  003DD4  0A07               	xorlw	7	; case 4
  9212  003DD6  B4D8               	btfsc	status,2,c
  9213  003DD8  D792               	goto	l23933
  9214  003DDA  0A01               	xorlw	1	; case 5
  9215  003DDC  B4D8               	btfsc	status,2,c
  9216  003DDE  D7C1               	goto	l23949
  9217  003DE0  D7DF               	goto	l2653
  9218  003DE2                     l23961:
  9219                           
  9220                           ; BSR set to: 0
  9221                           ;sm_ControlGate_MC50.c: 234:     sm_send_event(&controlGate_stateMachine, ev_NULL);
  9222  003DE2  0EE3               	movlw	low _controlGate_stateMachine
  9223  003DE4  6E12               	movwf	sm_send_event@psm^0,c
  9224  003DE6  0E01               	movlw	high _controlGate_stateMachine
  9225  003DE8  6E13               	movwf	(sm_send_event@psm+1)^0,c
  9226  003DEA  0E00               	movlw	0
  9227  003DEC  6E15               	movwf	(sm_send_event@event+1)^0,c
  9228  003DEE  0E00               	movlw	0
  9229  003DF0  6E14               	movwf	sm_send_event@event^0,c
  9230  003DF2  ECA7  F043         	call	_sm_send_event	;wreg free
  9231                           
  9232                           ;sm_ControlGate_MC50.c: 239:     switch ((sm_state_ControlGate_t) psm->current_state) {
  9233  003DF6  D07D               	goto	l24025
  9234  003DF8                     l23963:
  9235                           
  9236                           ; BSR set to: 0
  9237                           ;sm_ControlGate_MC50.c: 241:         {;sm_ControlGate_MC50.c: 244:             ts_system
      +                          .TimeStopADCZeroOffsetCalc = (5 * (1000/50));
  9238  003DF8  0E00               	movlw	0
  9239  003DFA  0101               	movlb	1	; () banked
  9240  003DFC  6FDA               	movwf	(_ts_system+63)& (0+255),b	;volatile
  9241  003DFE  0E64               	movlw	100
  9242  003E00  6FD9               	movwf	(_ts_system+62)& (0+255),b	;volatile
  9243                           
  9244                           ;sm_ControlGate_MC50.c: 247:             var_sys.PositionIsLost = YES;
  9245  003E02  0E01               	movlw	1
  9246  003E04  6F48               	movwf	(_var_sys+72)& (0+255),b	;volatile
  9247                           
  9248                           ; BSR set to: 1
  9249                           ;sm_ControlGate_MC50.c: 248:             if (var_sys.WorkTimeMaxAlarmState == EmAlarme |
      +                          | var_sys.NumberOffErrors > 3)
  9250  003E06  0E02               	movlw	2
  9251  003E08  1942               	xorwf	(_var_sys+66)& (0+255),w,b	;volatile
  9252  003E0A  B4D8               	btfsc	status,2,c
  9253  003E0C  D003               	goto	u29690
  9254                           
  9255                           ; BSR set to: 1
  9256  003E0E  0E03               	movlw	3
  9257  003E10  6543               	cpfsgt	(_var_sys+67)& (0+255),b	;volatile
  9258  003E12  D027               	goto	l23985
  9259  003E14                     u29690:
  9260                           
  9261                           ; BSR set to: 1
  9262                           ;sm_ControlGate_MC50.c: 249:             {;sm_ControlGate_MC50.c: 252:                 t
      +                          ypeOpenOrder = GetOpenOrder();
  9263  003E14  EC76  F02B         	call	_GetOpenOrder	;wreg free
  9264  003E18  0100               	movlb	0	; () banked
  9265  003E1A  6FEB               	movwf	sm_execute_ControlGate@typeOpenOrder& (0+255),b
  9266                           
  9267                           ; BSR set to: 0
  9268                           ;sm_ControlGate_MC50.c: 253:                 SetSegmentValueIntermitent(dE,dr, (1000/50)
      +                          );
  9269  003E1C  0E14               	movlw	20
  9270  003E1E  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
  9271  003E20  0E00               	movlw	0
  9272  003E22  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
  9273  003E24  0E14               	movlw	20
  9274  003E26  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
  9275  003E28  0E0E               	movlw	14
  9276  003E2A  EC46  F048         	call	_SetSegmentValueIntermitent
  9277                           
  9278                           ; BSR set to: 1
  9279                           ;sm_ControlGate_MC50.c: 254:                 ts_system.timeSinalizationDigit = ( 500/50)
      +                          ;
  9280  003E2E  0E00               	movlw	0
  9281  003E30  6FA8               	movwf	(_ts_system+13)& (0+255),b	;volatile
  9282  003E32  0E0A               	movlw	10
  9283  003E34  6FA7               	movwf	(_ts_system+12)& (0+255),b	;volatile
  9284                           
  9285                           ; BSR set to: 1
  9286                           ;sm_ControlGate_MC50.c: 255:                 if ((typeOpenOrder != NoCMD) ||(button_stru
      +                          ct.current==0 || button_struct.current==0x00 ||button_struct.current==0x17 ))
  9287  003E36  0100               	movlb	0	; () banked
  9288  003E38  51EB               	movf	sm_execute_ControlGate@typeOpenOrder& (0+255),w,b
  9289  003E3A  A4D8               	btfss	status,2,c
  9290  003E3C  D00A               	goto	u29730
  9291                           
  9292                           ; BSR set to: 0
  9293  003E3E  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  9294  003E40  B4D8               	btfsc	status,2,c
  9295  003E42  D007               	goto	u29730
  9296                           
  9297                           ; BSR set to: 0
  9298  003E44  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  9299  003E46  B4D8               	btfsc	status,2,c
  9300  003E48  D004               	goto	u29730
  9301                           
  9302                           ; BSR set to: 0
  9303  003E4A  0E17               	movlw	23
  9304  003E4C  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  9305  003E4E  A4D8               	btfss	status,2,c
  9306  003E50  0012               	return	
  9307  003E52                     u29730:
  9308                           
  9309                           ; BSR set to: 0
  9310                           ;sm_ControlGate_MC50.c: 256:                 {;sm_ControlGate_MC50.c: 257:              
      +                                 var_sys.WorkTimeMaxAlarmState = Clear;
  9311  003E52  0E00               	movlw	0
  9312  003E54  0101               	movlb	1	; () banked
  9313  003E56  6F42               	movwf	(_var_sys+66)& (0+255),b	;volatile
  9314                           
  9315                           ;sm_ControlGate_MC50.c: 258:                     var_sys.NumberOffErrors = 0;
  9316  003E58  0E00               	movlw	0
  9317  003E5A  6F43               	movwf	(_var_sys+67)& (0+255),b	;volatile
  9318                           
  9319                           ;sm_ControlGate_MC50.c: 259:                     button_struct.processed=1;
  9320  003E5C  0E01               	movlw	1
  9321  003E5E  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  9322  003E60  0012               	return	
  9323  003E62                     l23985:
  9324                           
  9325                           ; BSR set to: 1
  9326                           ;sm_ControlGate_MC50.c: 264:             {;sm_ControlGate_MC50.c: 267:                  
      +                             var_sys.Statedoorcontrol = st_Closed;
  9327  003E62  0E01               	movlw	1
  9328  003E64  6F1C               	movwf	(_var_sys+28)& (0+255),b	;volatile
  9329                           
  9330                           ; BSR set to: 1
  9331                           ;sm_ControlGate_MC50.c: 268:                     var_sys.actualCounterMoves++;
  9332  003E66  0E01               	movlw	1
  9333  003E68  273C               	addwf	(_var_sys+60)& (0+255),f,b	;volatile
  9334  003E6A  0E00               	movlw	0
  9335  003E6C  233D               	addwfc	(_var_sys+61)& (0+255),f,b	;volatile
  9336  003E6E  233E               	addwfc	(_var_sys+62)& (0+255),f,b	;volatile
  9337  003E70  233F               	addwfc	(_var_sys+63)& (0+255),f,b	;volatile
  9338                           
  9339                           ; BSR set to: 1
  9340                           ;sm_ControlGate_MC50.c: 269:                     var_sys.Timewalkisactived = 0;
  9341  003E72  0E00               	movlw	0
  9342  003E74  6F4A               	movwf	(_var_sys+74)& (0+255),b	;volatile
  9343                           
  9344                           ; BSR set to: 1
  9345                           ;sm_ControlGate_MC50.c: 270:                     var_sys.PositionActual = 0;
  9346  003E76  0E00               	movlw	0
  9347  003E78  6F1E               	movwf	(_var_sys+30)& (0+255),b	;volatile
  9348  003E7A  0E00               	movlw	0
  9349  003E7C  6F1F               	movwf	(_var_sys+31)& (0+255),b	;volatile
  9350  003E7E  0E00               	movlw	0
  9351  003E80  6F20               	movwf	(_var_sys+32)& (0+255),b	;volatile
  9352  003E82  0E00               	movlw	0
  9353  003E84  6F21               	movwf	(_var_sys+33)& (0+255),b	;volatile
  9354                           
  9355                           ; BSR set to: 1
  9356                           ;sm_ControlGate_MC50.c: 272:                     var_sys.PositionIsLost = NO;
  9357  003E86  0E00               	movlw	0
  9358  003E88  6F48               	movwf	(_var_sys+72)& (0+255),b	;volatile
  9359                           
  9360                           ; BSR set to: 1
  9361                           ;sm_ControlGate_MC50.c: 273:                     var_sys.NumberOffErrors = 0;
  9362  003E8A  0E00               	movlw	0
  9363  003E8C  6F43               	movwf	(_var_sys+67)& (0+255),b	;volatile
  9364                           
  9365                           ; BSR set to: 1
  9366                           ;sm_ControlGate_MC50.c: 274:                     var_sys.StateMotor = Stopped;
  9367  003E8E  0E00               	movlw	0
  9368  003E90  6F00               	movwf	_var_sys& (0+255),b	;volatile
  9369                           
  9370                           ; BSR set to: 1
  9371                           ;sm_ControlGate_MC50.c: 276:                     ts_system.timeSinalizationDigit = (1000
      +                          /50) * 2;
  9372  003E92  0E00               	movlw	0
  9373  003E94  6FA8               	movwf	(_ts_system+13)& (0+255),b	;volatile
  9374  003E96  0E28               	movlw	40
  9375  003E98  6FA7               	movwf	(_ts_system+12)& (0+255),b	;volatile
  9376                           
  9377                           ; BSR set to: 1
  9378                           ;sm_ControlGate_MC50.c: 277:                     SetSegmentValueIntermitent(dF, dC, ( 20
      +                          0/50));
  9379  003E9A  0E0C               	movlw	12
  9380  003E9C  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
  9381  003E9E  0E00               	movlw	0
  9382  003EA0  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
  9383  003EA2  0E04               	movlw	4
  9384  003EA4  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
  9385  003EA6  0E0F               	movlw	15
  9386  003EA8  EC46  F048         	call	_SetSegmentValueIntermitent
  9387                           
  9388                           ; BSR set to: 1
  9389                           ;sm_ControlGate_MC50.c: 278:                     sm_send_event(&controlGate_stateMachine
      +                          , ev_GateClosed);
  9390  003EAC  0EE3               	movlw	low _controlGate_stateMachine
  9391  003EAE  6E12               	movwf	sm_send_event@psm^0,c
  9392  003EB0  0E01               	movlw	high _controlGate_stateMachine
  9393  003EB2  6E13               	movwf	(sm_send_event@psm+1)^0,c
  9394  003EB4  0E00               	movlw	0
  9395  003EB6  6E15               	movwf	(sm_send_event@event+1)^0,c
  9396  003EB8  0E0A               	movlw	10
  9397  003EBA  6E14               	movwf	sm_send_event@event^0,c
  9398  003EBC  ECA7  F043         	call	_sm_send_event	;wreg free
  9399  003EC0  0012               	return	
  9400  003EC2                     l24005:
  9401                           
  9402                           ; BSR set to: 0
  9403                           ;sm_ControlGate_MC50.c: 285:         {;sm_ControlGate_MC50.c: 287:             actionZon
      +                          e_Closed();
  9404  003EC2  EC69  F03B         	call	_actionZone_Closed	;wreg free
  9405                           
  9406                           ;sm_ControlGate_MC50.c: 288:         };sm_ControlGate_MC50.c: 289:             break;
  9407  003EC6  0012               	return	
  9408  003EC8                     l24007:
  9409                           
  9410                           ; BSR set to: 0
  9411                           ;sm_ControlGate_MC50.c: 291:         {;sm_ControlGate_MC50.c: 293:             actionZon
      +                          e_Opening();
  9412  003EC8  EC27  F025         	call	_actionZone_Opening	;wreg free
  9413  003ECC                     l24009:
  9414                           
  9415                           ;sm_ControlGate_MC50.c: 295:             ts_system.TimeStopADCZeroOffsetCalc = (5 * (100
      +                          0/50));
  9416  003ECC  0E00               	movlw	0
  9417  003ECE  0101               	movlb	1	; () banked
  9418  003ED0  6FDA               	movwf	(_ts_system+63)& (0+255),b	;volatile
  9419  003ED2  0E64               	movlw	100
  9420  003ED4  6FD9               	movwf	(_ts_system+62)& (0+255),b	;volatile
  9421                           
  9422                           ;sm_ControlGate_MC50.c: 296:         };sm_ControlGate_MC50.c: 297:             break;
  9423  003ED6  0012               	return	
  9424  003ED8                     l24011:
  9425                           
  9426                           ; BSR set to: 0
  9427                           ;sm_ControlGate_MC50.c: 299:         {;sm_ControlGate_MC50.c: 301:             actionZon
      +                          e_Opened();
  9428  003ED8  EC96  F029         	call	_actionZone_Opened	;wreg free
  9429  003EDC  D7F7               	goto	l24009
  9430  003EDE                     l24015:
  9431                           
  9432                           ; BSR set to: 0
  9433                           ;sm_ControlGate_MC50.c: 307:         {;sm_ControlGate_MC50.c: 309:             actionZon
      +                          e_Closing();
  9434  003EDE  ECA6  F022         	call	_actionZone_Closing	;wreg free
  9435  003EE2  D7F4               	goto	l24009
  9436  003EE4                     l24019:
  9437                           
  9438                           ; BSR set to: 0
  9439                           ;sm_ControlGate_MC50.c: 315:         {;sm_ControlGate_MC50.c: 316:             sm_execut
      +                          e_ControlLearning(&controlLearning_stateMachine);
  9440  003EE4  0EB4               	movlw	low _controlLearning_stateMachine
  9441  003EE6  6FDC               	movwf	sm_execute_ControlLearning@psm& (0+255),b
  9442  003EE8  0E02               	movlw	high _controlLearning_stateMachine
  9443  003EEA  6FDD               	movwf	(sm_execute_ControlLearning@psm+1)& (0+255),b
  9444  003EEC  EC43  F00C         	call	_sm_execute_ControlLearning	;wreg free
  9445  003EF0  D7ED               	goto	l24009
  9446  003EF2                     l24025:
  9447  003EF2  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9448  003EF6  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9449  003EFA  50DF               	movf	indf2,w,c
  9450  003EFC  0100               	movlb	0	; () banked
  9451  003EFE  6FE9               	movwf	??_sm_execute_ControlGate& (0+255),b
  9452  003F00  6BEA               	clrf	(??_sm_execute_ControlGate+1)& (0+255),b
  9453                           
  9454                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9455                           ; Switch size 1, requested type "simple"
  9456                           ; Number of cases is 1, Range of values is 0 to 0
  9457                           ; switch strategies available:
  9458                           ; Name         Instructions Cycles
  9459                           ; simple_byte            4     3 (average)
  9460                           ;	Chosen strategy is simple_byte
  9461  003F02  51EA               	movf	(??_sm_execute_ControlGate+1)& (0+255),w,b
  9462  003F04  0A00               	xorlw	0	; case 0
  9463  003F06  A4D8               	btfss	status,2,c
  9464  003F08  0012               	return	
  9465                           
  9466                           ; BSR set to: 0
  9467                           ; Switch size 1, requested type "simple"
  9468                           ; Number of cases is 6, Range of values is 0 to 5
  9469                           ; switch strategies available:
  9470                           ; Name         Instructions Cycles
  9471                           ; simple_byte           19    10 (average)
  9472                           ;	Chosen strategy is simple_byte
  9473  003F0A  51E9               	movf	??_sm_execute_ControlGate& (0+255),w,b
  9474  003F0C  0A00               	xorlw	0	; case 0
  9475  003F0E  B4D8               	btfsc	status,2,c
  9476  003F10  D773               	goto	l23963
  9477  003F12  0A01               	xorlw	1	; case 1
  9478  003F14  B4D8               	btfsc	status,2,c
  9479  003F16  D7D5               	goto	l24005
  9480  003F18  0A03               	xorlw	3	; case 2
  9481  003F1A  B4D8               	btfsc	status,2,c
  9482  003F1C  D7D5               	goto	l24007
  9483  003F1E  0A01               	xorlw	1	; case 3
  9484  003F20  B4D8               	btfsc	status,2,c
  9485  003F22  D7DD               	goto	l24015
  9486  003F24  0A07               	xorlw	7	; case 4
  9487  003F26  B4D8               	btfsc	status,2,c
  9488  003F28  D7D7               	goto	l24011
  9489  003F2A  0A01               	xorlw	1	; case 5
  9490  003F2C  A4D8               	btfss	status,2,c
  9491  003F2E  0012               	return	
  9492  003F30  D7D9               	goto	l24019
  9493  003F32                     __end_of_sm_execute_ControlGate:
  9494                           	callstack 0
  9495                           
  9496 ;; *************** function _sm_execute_ControlLearning *****************
  9497 ;; Defined at:
  9498 ;;		line 29 in file "sm_ControlLearning_MC50.c"
  9499 ;; Parameters:    Size  Location     Type
  9500 ;;  psm             2    4[BANK0 ] PTR struct .
  9501 ;;		 -> controlLearning_stateMachine(11), 
  9502 ;; Auto vars:     Size  Location     Type
  9503 ;;  typeOpenOrde    1   57[COMRAM] enum E10372
  9504 ;; Return value:  Size  Location     Type
  9505 ;;                  1    wreg      void 
  9506 ;; Registers used:
  9507 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  9508 ;; Tracked objects:
  9509 ;;		On entry : 3F/0
  9510 ;;		On exit  : 0/0
  9511 ;;		Unchanged: 0/0
  9512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9513 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9514 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9515 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9516 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9517 ;;Total ram usage:        5 bytes
  9518 ;; Hardware stack levels used: 1
  9519 ;; Hardware stack levels required when called: 14
  9520 ;; This function calls:
  9521 ;;		_GetOpenOrder
  9522 ;;		_SaveNVM_VarSystem
  9523 ;;		_calculateMean
  9524 ;;		_clearLearningValue
  9525 ;;		_generateErrorLearnig
  9526 ;;		_sm_send_event
  9527 ;; This function is called by:
  9528 ;;		_sm_execute_ControlGate
  9529 ;; This function uses a non-reentrant model
  9530 ;;
  9531                           
  9532                           	psect	text18
  9533  001886                     __ptext18:
  9534                           	callstack 0
  9535  001886                     _sm_execute_ControlLearning:
  9536                           	callstack 15
  9537                           
  9538                           ; BSR set to: 0
  9539                           ;sm_ControlLearning_MC50.c: 31:    TypeCMD typeOpenOrder = GetOpenOrder();
  9540                           
  9541                           ;incstack = 0
  9542  001886  EC76  F02B         	call	_GetOpenOrder	;wreg free
  9543  00188A  6E3A               	movwf	sm_execute_ControlLearning@typeOpenOrder^0,c
  9544                           
  9545                           ;sm_ControlLearning_MC50.c: 33:     switch((sm_state_ControlLearning_t) psm->current_sta
      +                          te)
  9546  00188C  D0B8               	goto	l22471
  9547  00188E                     l22397:
  9548                           
  9549                           ; BSR set to: 0
  9550                           ;sm_ControlLearning_MC50.c: 36:         {;sm_ControlLearning_MC50.c: 37:              if
      +                          ((psm->last_event==ev_GateClosed)&&(var_sys_NVM.decelarationSensivity != 0)&& (var_sys.p
      +                          rograminAutomatic == 0))
  9551  00188E  EE20 F004          	lfsr	2,4
  9552  001892  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9553  001894  26D9               	addwf	fsr2l,f,c
  9554  001896  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9555  001898  22DA               	addwfc	fsr2h,f,c
  9556  00189A  0E0A               	movlw	10
  9557  00189C  18DE               	xorwf	postinc2,w,c
  9558  00189E  10DE               	iorwf	postinc2,w,c
  9559  0018A0  A4D8               	btfss	status,2,c
  9560  0018A2  D00D               	goto	l22405
  9561                           
  9562                           ; BSR set to: 0
  9563  0018A4  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
  9564  0018A6  B4D8               	btfsc	status,2,c
  9565  0018A8  D00A               	goto	l22405
  9566                           
  9567                           ; BSR set to: 0
  9568  0018AA  0101               	movlb	1	; () banked
  9569  0018AC  512A               	movf	(_var_sys+42)& (0+255),w,b	;volatile
  9570  0018AE  A4D8               	btfss	status,2,c
  9571  0018B0  D006               	goto	l22405
  9572  0018B2                     u26540:
  9573                           
  9574                           ; BSR set to: 1
  9575                           ;sm_ControlLearning_MC50.c: 38:             {;sm_ControlLearning_MC50.c: 39:            
      +                               psm->current_state = st_WaitLearnigOpen;
  9576  0018B2  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
  9577  0018B6  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
  9578  0018BA  0E02               	movlw	2
  9579  0018BC  D08A               	goto	L66
  9580  0018BE                     l22405:
  9581  0018BE  0100               	movlb	0	; () banked
  9582  0018C0  EE20 F004          	lfsr	2,4
  9583  0018C4  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9584  0018C6  26D9               	addwf	fsr2l,f,c
  9585  0018C8  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9586  0018CA  22DA               	addwfc	fsr2h,f,c
  9587  0018CC  0E0A               	movlw	10
  9588  0018CE  18DE               	xorwf	postinc2,w,c
  9589  0018D0  10DE               	iorwf	postinc2,w,c
  9590  0018D2  A4D8               	btfss	status,2,c
  9591  0018D4  D00D               	goto	l22413
  9592                           
  9593                           ; BSR set to: 0
  9594  0018D6  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
  9595  0018D8  B4D8               	btfsc	status,2,c
  9596  0018DA  D004               	goto	u26570
  9597                           
  9598                           ; BSR set to: 0
  9599  0018DC  0101               	movlb	1	; () banked
  9600  0018DE  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
  9601  0018E0  A4D8               	btfss	status,2,c
  9602  0018E2  D006               	goto	l22413
  9603  0018E4                     u26570:
  9604                           
  9605                           ;sm_ControlLearning_MC50.c: 43:             {;sm_ControlLearning_MC50.c: 44:            
      +                               psm->current_state = st_WaitForOpened;
  9606  0018E4  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
  9607  0018E8  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
  9608  0018EC  0E04               	movlw	4
  9609  0018EE  D071               	goto	L66
  9610  0018F0                     l22413:
  9611  0018F0  0100               	movlb	0	; () banked
  9612  0018F2  EE20 F004          	lfsr	2,4
  9613  0018F6  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9614  0018F8  26D9               	addwf	fsr2l,f,c
  9615  0018FA  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9616  0018FC  22DA               	addwfc	fsr2h,f,c
  9617  0018FE  0E0B               	movlw	11
  9618  001900  18DE               	xorwf	postinc2,w,c
  9619  001902  10DE               	iorwf	postinc2,w,c
  9620  001904  A4D8               	btfss	status,2,c
  9621  001906  D09B               	goto	l22473
  9622                           
  9623                           ; BSR set to: 0
  9624                           ;sm_ControlLearning_MC50.c: 47:             {;sm_ControlLearning_MC50.c: 48:            
      +                               psm->current_state = st_WaitForClosed;
  9625  001908  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
  9626  00190C  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
  9627  001910  0E01               	movlw	1
  9628  001912  D05F               	goto	L66
  9629  001914                     l22417:
  9630                           
  9631                           ; BSR set to: 0
  9632                           ;sm_ControlLearning_MC50.c: 53:         {;sm_ControlLearning_MC50.c: 54:             if(
      +                          (psm->last_event==ev_GateClosed)&&(var_sys_NVM.decelarationSensivity != 0) && (var_sys.p
      +                          rograminAutomatic == 0))
  9633  001914  EE20 F004          	lfsr	2,4
  9634  001918  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9635  00191A  26D9               	addwf	fsr2l,f,c
  9636  00191C  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9637  00191E  22DA               	addwfc	fsr2h,f,c
  9638  001920  0E0A               	movlw	10
  9639  001922  18DE               	xorwf	postinc2,w,c
  9640  001924  10DE               	iorwf	postinc2,w,c
  9641  001926  A4D8               	btfss	status,2,c
  9642  001928  D007               	goto	l22425
  9643                           
  9644                           ; BSR set to: 0
  9645  00192A  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
  9646  00192C  B4D8               	btfsc	status,2,c
  9647  00192E  D004               	goto	l22425
  9648                           
  9649                           ; BSR set to: 0
  9650  001930  0101               	movlb	1	; () banked
  9651  001932  512A               	movf	(_var_sys+42)& (0+255),w,b	;volatile
  9652  001934  B4D8               	btfsc	status,2,c
  9653  001936  D7BD               	goto	u26540
  9654  001938                     l22425:
  9655  001938  0100               	movlb	0	; () banked
  9656  00193A  EE20 F004          	lfsr	2,4
  9657  00193E  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9658  001940  26D9               	addwf	fsr2l,f,c
  9659  001942  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9660  001944  22DA               	addwfc	fsr2h,f,c
  9661  001946  0E0A               	movlw	10
  9662  001948  18DE               	xorwf	postinc2,w,c
  9663  00194A  10DE               	iorwf	postinc2,w,c
  9664  00194C  A4D8               	btfss	status,2,c
  9665  00194E  D007               	goto	l22433
  9666                           
  9667                           ; BSR set to: 0
  9668  001950  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
  9669  001952  B4D8               	btfsc	status,2,c
  9670  001954  D7C7               	goto	u26570
  9671                           
  9672                           ; BSR set to: 0
  9673  001956  0101               	movlb	1	; () banked
  9674  001958  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
  9675  00195A  B4D8               	btfsc	status,2,c
  9676  00195C  D7C3               	goto	u26570
  9677  00195E                     l22433:
  9678  00195E  0100               	movlb	0	; () banked
  9679  001960                     L68:
  9680  001960  EE20 F004          	lfsr	2,4
  9681  001964  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9682  001966  26D9               	addwf	fsr2l,f,c
  9683  001968  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9684  00196A  22DA               	addwfc	fsr2h,f,c
  9685  00196C  0E10               	movlw	16
  9686  00196E  18DE               	xorwf	postinc2,w,c
  9687  001970  10DE               	iorwf	postinc2,w,c
  9688  001972  A4D8               	btfss	status,2,c
  9689  001974  D064               	goto	l22473
  9690  001976  D03C               	goto	L128
  9691  001978                     l22437:
  9692                           
  9693                           ; BSR set to: 0
  9694                           ;sm_ControlLearning_MC50.c: 70:         {;sm_ControlLearning_MC50.c: 71:             if(
      +                          psm->last_event==ev_GateOpened)
  9695  001978  EE20 F004          	lfsr	2,4
  9696  00197C  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9697  00197E  26D9               	addwf	fsr2l,f,c
  9698  001980  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9699  001982  22DA               	addwfc	fsr2h,f,c
  9700  001984  0E0B               	movlw	11
  9701  001986  18DE               	xorwf	postinc2,w,c
  9702  001988  10DE               	iorwf	postinc2,w,c
  9703  00198A  A4D8               	btfss	status,2,c
  9704  00198C  D7E9               	goto	L68
  9705                           
  9706                           ; BSR set to: 0
  9707                           ;sm_ControlLearning_MC50.c: 72:             {;sm_ControlLearning_MC50.c: 73:            
      +                               psm->current_state = st_WaitLearnigClose;
  9708  00198E  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
  9709  001992  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
  9710  001996  0E03               	movlw	3
  9711  001998  D01C               	goto	L66
  9712  00199A                     l22445:
  9713                           
  9714                           ; BSR set to: 0
  9715                           ;sm_ControlLearning_MC50.c: 82:         {;sm_ControlLearning_MC50.c: 83:             if(
      +                          psm->last_event==ev_GateClosed)
  9716  00199A  EE20 F004          	lfsr	2,4
  9717  00199E  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9718  0019A0  26D9               	addwf	fsr2l,f,c
  9719  0019A2  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9720  0019A4  22DA               	addwfc	fsr2h,f,c
  9721  0019A6  0E0A               	movlw	10
  9722  0019A8  18DE               	xorwf	postinc2,w,c
  9723  0019AA  10DE               	iorwf	postinc2,w,c
  9724  0019AC  A4D8               	btfss	status,2,c
  9725  0019AE  D7D8               	goto	L68
  9726  0019B0  D799               	goto	u26570
  9727  0019B2                     l22453:
  9728                           
  9729                           ; BSR set to: 0
  9730                           ;sm_ControlLearning_MC50.c: 94:         {;sm_ControlLearning_MC50.c: 95:             if(
      +                          psm->last_event==ev_GateOpened)
  9731  0019B2  EE20 F004          	lfsr	2,4
  9732  0019B6  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9733  0019B8  26D9               	addwf	fsr2l,f,c
  9734  0019BA  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9735  0019BC  22DA               	addwfc	fsr2h,f,c
  9736  0019BE  0E0B               	movlw	11
  9737  0019C0  18DE               	xorwf	postinc2,w,c
  9738  0019C2  10DE               	iorwf	postinc2,w,c
  9739  0019C4  A4D8               	btfss	status,2,c
  9740  0019C6  D7CC               	goto	L68
  9741                           
  9742                           ; BSR set to: 0
  9743                           ;sm_ControlLearning_MC50.c: 96:             {;sm_ControlLearning_MC50.c: 97:            
      +                               psm->current_state = st_WaitForEndLearn;
  9744  0019C8  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
  9745  0019CC  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
  9746  0019D0  0E05               	movlw	5
  9747  0019D2                     L66:
  9748  0019D2  6EDE               	movwf	postinc2,c
  9749  0019D4  0E00               	movlw	0
  9750  0019D6  6EDD               	movwf	postdec2,c
  9751  0019D8  D032               	goto	l22473
  9752  0019DA                     l22461:
  9753                           
  9754                           ; BSR set to: 0
  9755                           ;sm_ControlLearning_MC50.c: 106:         {;sm_ControlLearning_MC50.c: 107:             i
      +                          f(psm->last_event==ev_GateClosed)
  9756  0019DA  EE20 F004          	lfsr	2,4
  9757  0019DE  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9758  0019E0  26D9               	addwf	fsr2l,f,c
  9759  0019E2  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9760  0019E4  22DA               	addwfc	fsr2h,f,c
  9761  0019E6  0E0A               	movlw	10
  9762  0019E8  18DE               	xorwf	postinc2,w,c
  9763  0019EA  10DE               	iorwf	postinc2,w,c
  9764  0019EC  A4D8               	btfss	status,2,c
  9765  0019EE  D7B8               	goto	L68
  9766  0019F0                     L128:
  9767                           
  9768                           ; BSR set to: 0
  9769                           ;sm_ControlLearning_MC50.c: 112:             {;sm_ControlLearning_MC50.c: 113:          
      +                                 psm->current_state = st_InitLearning;
  9770  0019F0  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
  9771  0019F4  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
  9772  0019F8  0E00               	movlw	0
  9773  0019FA  D7EB               	goto	L66
  9774  0019FC                     l2912:
  9775                           
  9776                           ; BSR set to: 0
  9777  0019FC  D7FF               	goto	l2912
  9778  0019FE                     l22471:
  9779  0019FE  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
  9780  001A02  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
  9781  001A06  50DF               	movf	indf2,w,c
  9782  001A08  0100               	movlb	0	; () banked
  9783  001A0A  6FDE               	movwf	??_sm_execute_ControlLearning& (0+255),b
  9784  001A0C  6BDF               	clrf	(??_sm_execute_ControlLearning+1)& (0+255),b
  9785                           
  9786                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9787                           ; Switch size 1, requested type "simple"
  9788                           ; Number of cases is 1, Range of values is 0 to 0
  9789                           ; switch strategies available:
  9790                           ; Name         Instructions Cycles
  9791                           ; simple_byte            4     3 (average)
  9792                           ;	Chosen strategy is simple_byte
  9793  001A0E  51DF               	movf	(??_sm_execute_ControlLearning+1)& (0+255),w,b
  9794  001A10  0A00               	xorlw	0	; case 0
  9795  001A12  A4D8               	btfss	status,2,c
  9796  001A14  D7F3               	goto	l2912
  9797                           
  9798                           ; BSR set to: 0
  9799                           ; Switch size 1, requested type "simple"
  9800                           ; Number of cases is 6, Range of values is 0 to 5
  9801                           ; switch strategies available:
  9802                           ; Name         Instructions Cycles
  9803                           ; simple_byte           19    10 (average)
  9804                           ;	Chosen strategy is simple_byte
  9805  001A16  51DE               	movf	??_sm_execute_ControlLearning& (0+255),w,b
  9806  001A18  0A00               	xorlw	0	; case 0
  9807  001A1A  B4D8               	btfsc	status,2,c
  9808  001A1C  D738               	goto	l22397
  9809  001A1E  0A01               	xorlw	1	; case 1
  9810  001A20  B4D8               	btfsc	status,2,c
  9811  001A22  D778               	goto	l22417
  9812  001A24  0A03               	xorlw	3	; case 2
  9813  001A26  B4D8               	btfsc	status,2,c
  9814  001A28  D7A7               	goto	l22437
  9815  001A2A  0A01               	xorlw	1	; case 3
  9816  001A2C  B4D8               	btfsc	status,2,c
  9817  001A2E  D7B5               	goto	l22445
  9818  001A30  0A07               	xorlw	7	; case 4
  9819  001A32  B4D8               	btfsc	status,2,c
  9820  001A34  D7BE               	goto	l22453
  9821  001A36  0A01               	xorlw	1	; case 5
  9822  001A38  B4D8               	btfsc	status,2,c
  9823  001A3A  D7CF               	goto	l22461
  9824  001A3C  D7DF               	goto	l2912
  9825  001A3E                     l22473:
  9826                           
  9827                           ;sm_ControlLearning_MC50.c: 126:     sm_send_event(&controlLearning_stateMachine, ev_NUL
      +                          L);
  9828  001A3E  0EB4               	movlw	low _controlLearning_stateMachine
  9829  001A40  6E12               	movwf	sm_send_event@psm^0,c
  9830  001A42  0E02               	movlw	high _controlLearning_stateMachine
  9831  001A44  6E13               	movwf	(sm_send_event@psm+1)^0,c
  9832  001A46  0E00               	movlw	0
  9833  001A48  6E15               	movwf	(sm_send_event@event+1)^0,c
  9834  001A4A  0E00               	movlw	0
  9835  001A4C  6E14               	movwf	sm_send_event@event^0,c
  9836  001A4E  ECA7  F043         	call	_sm_send_event	;wreg free
  9837                           
  9838                           ;sm_ControlLearning_MC50.c: 131:     switch((sm_state_ControlGate_t) psm->current_state)
  9839  001A52  D280               	goto	l22729
  9840  001A54                     l22475:
  9841                           
  9842                           ; BSR set to: 0
  9843                           ;sm_ControlLearning_MC50.c: 134:         {;sm_ControlLearning_MC50.c: 135:             i
      +                          f(var_sys.FimCurso_CloseIsEnabled==YES)
  9844  001A54  0101               	movlb	1	; () banked
  9845  001A56  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
  9846  001A58  A4D8               	btfss	status,2,c
  9847  001A5A  D03A               	goto	l22493
  9848                           
  9849                           ; BSR set to: 1
  9850                           ;sm_ControlLearning_MC50.c: 136:             {;sm_ControlLearning_MC50.c: 137:          
      +                                 control_limit_switch = 1;
  9851  001A5C  0E01               	movlw	1
  9852  001A5E  0100               	movlb	0	; () banked
  9853  001A60  6F81               	movwf	_control_limit_switch& (0+255),b
  9854                           
  9855                           ; BSR set to: 0
  9856                           ;sm_ControlLearning_MC50.c: 138:                 sm_send_event(&controlLearning_stateMac
      +                          hine, ev_GateClosed);
  9857  001A62  0EB4               	movlw	low _controlLearning_stateMachine
  9858  001A64  6E12               	movwf	sm_send_event@psm^0,c
  9859  001A66  0E02               	movlw	high _controlLearning_stateMachine
  9860  001A68  6E13               	movwf	(sm_send_event@psm+1)^0,c
  9861  001A6A  0E00               	movlw	0
  9862  001A6C  6E15               	movwf	(sm_send_event@event+1)^0,c
  9863  001A6E  0E0A               	movlw	10
  9864  001A70  6E14               	movwf	sm_send_event@event^0,c
  9865  001A72  ECA7  F043         	call	_sm_send_event	;wreg free
  9866                           
  9867                           ;sm_ControlLearning_MC50.c: 139:                 var_sys.StateMotor=InOpenFull;
  9868  001A76  0E01               	movlw	1
  9869  001A78  0101               	movlb	1	; () banked
  9870  001A7A  6F00               	movwf	_var_sys& (0+255),b	;volatile
  9871                           
  9872                           ; BSR set to: 1
  9873                           ;sm_ControlLearning_MC50.c: 140:                 clearLearningValue();
  9874  001A7C  EC2C  F040         	call	_clearLearningValue	;wreg free
  9875                           
  9876                           ; BSR set to: 0
  9877                           ;sm_ControlLearning_MC50.c: 141:                  if ((var_sys_NVM.decelarationSensivity
      +                           != 0) && (var_sys.programinAutomatic == 0))
  9878  001A80  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
  9879  001A82  B4D8               	btfsc	status,2,c
  9880  001A84  D016               	goto	l22491
  9881                           
  9882                           ; BSR set to: 0
  9883  001A86  0101               	movlb	1	; () banked
  9884  001A88  512A               	movf	(_var_sys+42)& (0+255),w,b	;volatile
  9885  001A8A  A4D8               	btfss	status,2,c
  9886  001A8C  D012               	goto	l22491
  9887  001A8E                     u26760:
  9888                           
  9889                           ; BSR set to: 1
  9890                           ;sm_ControlLearning_MC50.c: 142:                          {;sm_ControlLearning_MC50.c: 1
      +                          43:                 ts_system.TimeLearningDecelaration=(1000/50)*15;
  9891  001A8E  0E01               	movlw	1
  9892  001A90  6FD2               	movwf	(_ts_system+55)& (0+255),b	;volatile
  9893  001A92  0E2C               	movlw	44
  9894  001A94  6FD1               	movwf	(_ts_system+54)& (0+255),b	;volatile
  9895                           
  9896                           ;sm_ControlLearning_MC50.c: 144:                 ts_system.TimeWaitToGetCurrent=(1000/50
      +                          )*6;
  9897  001A96  0E00               	movlw	0
  9898  001A98  6FD0               	movwf	(_ts_system+53)& (0+255),b	;volatile
  9899  001A9A  0E78               	movlw	120
  9900  001A9C  6FCF               	movwf	(_ts_system+52)& (0+255),b	;volatile
  9901                           
  9902                           ;sm_ControlLearning_MC50.c: 145:                 ts_system.TimeWaitReleCapacitor = (1000
      +                          /50);
  9903  001A9E  0E00               	movlw	0
  9904  001AA0  6FE0               	movwf	(_ts_system+69)& (0+255),b	;volatile
  9905  001AA2  0E14               	movlw	20
  9906  001AA4  6FDF               	movwf	(_ts_system+68)& (0+255),b	;volatile
  9907                           
  9908                           ;sm_ControlLearning_MC50.c: 146:                 var_sys.LearningDecelaration=YES;
  9909  001AA6  0E01               	movlw	1
  9910  001AA8  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
  9911                           
  9912                           ;sm_ControlLearning_MC50.c: 147:                 control_limit_switch = 0;
  9913  001AAA  0E00               	movlw	0
  9914  001AAC  0100               	movlb	0	; () banked
  9915  001AAE  6F81               	movwf	_control_limit_switch& (0+255),b
  9916                           
  9917                           ;sm_ControlLearning_MC50.c: 148:                  }
  9918  001AB0  0012               	return	
  9919  001AB2                     l22491:
  9920                           
  9921                           ;sm_ControlLearning_MC50.c: 150:                 {;sm_ControlLearning_MC50.c: 151:      
      +                                     var_sys.LearningDecelaration=NO;
  9922  001AB2  0E00               	movlw	0
  9923  001AB4  0101               	movlb	1	; () banked
  9924  001AB6  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
  9925                           
  9926                           ;sm_ControlLearning_MC50.c: 152:                 ts_system.TimeWaitToGetCurrent=(1000/50
      +                          )*4;
  9927  001AB8  0E00               	movlw	0
  9928  001ABA  6FD0               	movwf	(_ts_system+53)& (0+255),b	;volatile
  9929  001ABC  0E50               	movlw	80
  9930  001ABE  6FCF               	movwf	(_ts_system+52)& (0+255),b	;volatile
  9931                           
  9932                           ;sm_ControlLearning_MC50.c: 153:                 ts_system.TimeWaitReleCapacitor = (1000
      +                          /50);
  9933  001AC0  0E00               	movlw	0
  9934  001AC2  6FE0               	movwf	(_ts_system+69)& (0+255),b	;volatile
  9935  001AC4  0E14               	movlw	20
  9936  001AC6  6FDF               	movwf	(_ts_system+68)& (0+255),b	;volatile
  9937                           
  9938                           ;sm_ControlLearning_MC50.c: 154:                 control_limit_switch = 0;
  9939  001AC8  0E00               	movlw	0
  9940  001ACA  0100               	movlb	0	; () banked
  9941  001ACC  6F81               	movwf	_control_limit_switch& (0+255),b
  9942  001ACE  0012               	return	
  9943  001AD0                     l22493:
  9944                           
  9945                           ; BSR set to: 1
  9946                           ;sm_ControlLearning_MC50.c: 159:             {;sm_ControlLearning_MC50.c: 160:          
      +                                 sm_send_event(&controlLearning_stateMachine, ev_GateOpened);
  9947  001AD0  0EB4               	movlw	low _controlLearning_stateMachine
  9948  001AD2  6E12               	movwf	sm_send_event@psm^0,c
  9949  001AD4  0E02               	movlw	high _controlLearning_stateMachine
  9950  001AD6  6E13               	movwf	(sm_send_event@psm+1)^0,c
  9951  001AD8  0E00               	movlw	0
  9952  001ADA  6E15               	movwf	(sm_send_event@event+1)^0,c
  9953  001ADC  0E0B               	movlw	11
  9954  001ADE  6E14               	movwf	sm_send_event@event^0,c
  9955  001AE0  ECA7  F043         	call	_sm_send_event	;wreg free
  9956                           
  9957                           ;sm_ControlLearning_MC50.c: 161:                 var_sys.StateMotor = InClose;
  9958  001AE4  0E03               	movlw	3
  9959  001AE6  0101               	movlb	1	; () banked
  9960  001AE8  6F00               	movwf	_var_sys& (0+255),b	;volatile
  9961                           
  9962                           ; BSR set to: 1
  9963                           ;sm_ControlLearning_MC50.c: 162:                 var_sys.LearningDecelaration= YES;
  9964  001AEA  0E01               	movlw	1
  9965  001AEC  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
  9966                           
  9967                           ; BSR set to: 1
  9968                           ;sm_ControlLearning_MC50.c: 164:         };sm_ControlLearning_MC50.c: 165:         break
      +                          ;
  9969                           
  9970                           ;sm_ControlLearning_MC50.c: 163:             }
  9971  001AEE  0012               	return	
  9972  001AF0                     l22499:
  9973                           
  9974                           ; BSR set to: 0
  9975                           ;sm_ControlLearning_MC50.c: 167:         {;sm_ControlLearning_MC50.c: 168:             i
      +                          f(((var_sys.FimCurso_CloseIsEnabled==YES)||(control_limit_switch == 1)) || ((button_stru
      +                          ct.current == 0 ||typeOpenOrder == TypeFull) && var_sys.programinAutomatic == 1))
  9976  001AF0  0101               	movlb	1	; () banked
  9977  001AF2  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
  9978  001AF4  B4D8               	btfsc	status,2,c
  9979  001AF6  D00E               	goto	u26810
  9980                           
  9981                           ; BSR set to: 1
  9982  001AF8  0100               	movlb	0	; () banked
  9983  001AFA  0581               	decf	_control_limit_switch& (0+255),w,b
  9984  001AFC  B4D8               	btfsc	status,2,c
  9985  001AFE  D00A               	goto	u26810
  9986                           
  9987                           ; BSR set to: 0
  9988  001B00  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  9989  001B02  B4D8               	btfsc	status,2,c
  9990  001B04  D003               	goto	u26800
  9991                           
  9992                           ; BSR set to: 0
  9993  001B06  043A               	decf	sm_execute_ControlLearning@typeOpenOrder^0,w,c
  9994  001B08  A4D8               	btfss	status,2,c
  9995  001B0A  D028               	goto	l22527
  9996  001B0C                     u26800:
  9997                           
  9998                           ; BSR set to: 0
  9999  001B0C  0101               	movlb	1	; () banked
 10000  001B0E  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 10001  001B10  A4D8               	btfss	status,2,c
 10002  001B12  D024               	goto	l22527
 10003  001B14                     u26810:
 10004                           
 10005                           ;sm_ControlLearning_MC50.c: 169:             {;sm_ControlLearning_MC50.c: 171:          
      +                                 control_limit_switch = 1;
 10006  001B14  0E01               	movlw	1
 10007  001B16  0100               	movlb	0	; () banked
 10008  001B18  6F81               	movwf	_control_limit_switch& (0+255),b
 10009                           
 10010                           ;sm_ControlLearning_MC50.c: 172:                 var_sys.StateMotor=Stopped;
 10011  001B1A  0E00               	movlw	0
 10012  001B1C  0101               	movlb	1	; () banked
 10013  001B1E  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10014                           
 10015                           ; BSR set to: 1
 10016                           ;sm_ControlLearning_MC50.c: 173:                 if(ts_system.TimeWaitToNextState<=0)
 10017  001B20  BFC0               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 10018  001B22  D005               	goto	u26820
 10019  001B24  51C0               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 10020  001B26  E102               	bnz	u26821
 10021  001B28  05BF               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 10022  001B2A  B0D8               	btfsc	status,0,c
 10023  001B2C                     u26821:
 10024  001B2C  0012               	return	
 10025  001B2E                     u26820:
 10026                           
 10027                           ; BSR set to: 1
 10028                           ;sm_ControlLearning_MC50.c: 174:                 {;sm_ControlLearning_MC50.c: 175:      
      +                                         sm_send_event(&controlLearning_stateMachine, ev_GateClosed);
 10029  001B2E  0EB4               	movlw	low _controlLearning_stateMachine
 10030  001B30  6E12               	movwf	sm_send_event@psm^0,c
 10031  001B32  0E02               	movlw	high _controlLearning_stateMachine
 10032  001B34  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10033  001B36  0E00               	movlw	0
 10034  001B38  6E15               	movwf	(sm_send_event@event+1)^0,c
 10035  001B3A  0E0A               	movlw	10
 10036  001B3C  6E14               	movwf	sm_send_event@event^0,c
 10037  001B3E  ECA7  F043         	call	_sm_send_event	;wreg free
 10038                           
 10039                           ;sm_ControlLearning_MC50.c: 176:                     var_sys.StateMotor=InOpenFull;
 10040  001B42  0E01               	movlw	1
 10041  001B44  0101               	movlb	1	; () banked
 10042  001B46  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10043                           
 10044                           ; BSR set to: 1
 10045                           ;sm_ControlLearning_MC50.c: 177:                     clearLearningValue();
 10046  001B48  EC2C  F040         	call	_clearLearningValue	;wreg free
 10047                           
 10048                           ; BSR set to: 0
 10049                           ;sm_ControlLearning_MC50.c: 178:                         if ((var_sys_NVM.decelarationSe
      +                          nsivity != 0) && (var_sys.programinAutomatic == 0))
 10050  001B4C  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
 10051  001B4E  B4D8               	btfsc	status,2,c
 10052  001B50  D7B0               	goto	l22491
 10053                           
 10054                           ; BSR set to: 0
 10055  001B52  0101               	movlb	1	; () banked
 10056  001B54  512A               	movf	(_var_sys+42)& (0+255),w,b	;volatile
 10057  001B56  B4D8               	btfsc	status,2,c
 10058  001B58  D79A               	goto	u26760
 10059  001B5A  D7AB               	goto	l22491
 10060  001B5C                     l22527:
 10061  001B5C  0101               	movlb	1	; () banked
 10062  001B5E  5100               	movf	_var_sys& (0+255),w,b	;volatile
 10063  001B60  A4D8               	btfss	status,2,c
 10064  001B62  D003               	goto	l22531
 10065  001B64                     u26850:
 10066                           
 10067                           ; BSR set to: 1
 10068                           ;sm_ControlLearning_MC50.c: 196:             {;sm_ControlLearning_MC50.c: 197:          
      +                                 generateErrorLearnig();
 10069  001B64  ECE0  F042         	call	_generateErrorLearnig	;wreg free
 10070                           
 10071                           ;sm_ControlLearning_MC50.c: 198:             }
 10072  001B68  0012               	return	
 10073  001B6A                     l22531:
 10074                           
 10075                           ; BSR set to: 1
 10076                           ;sm_ControlLearning_MC50.c: 200:             {;sm_ControlLearning_MC50.c: 201:          
      +                                 ts_system.TimeWaitToNextState=(2*(1000/50));
 10077  001B6A  0E00               	movlw	0
 10078  001B6C  6FC0               	movwf	(_ts_system+37)& (0+255),b	;volatile
 10079  001B6E  0E28               	movlw	40
 10080  001B70  6FBF               	movwf	(_ts_system+36)& (0+255),b	;volatile
 10081  001B72  0012               	return	
 10082  001B74                     l22533:
 10083                           
 10084                           ; BSR set to: 0
 10085                           ;sm_ControlLearning_MC50.c: 206:         {;sm_ControlLearning_MC50.c: 207:             i
      +                          f((var_sys.FimCurso_OpenIsEnabled==YES) || (ts_system.TimeLearningDecelaration<=0)||(con
      +                          trol_limit_switch == 1))
 10086  001B74  0101               	movlb	1	; () banked
 10087  001B76  0504               	decf	(_var_sys+4)& (0+255),w,b	;volatile
 10088  001B78  A4D8               	btfss	status,2,c
 10089                           
 10090                           ; BSR set to: 1
 10091  001B7A  BFD2               	btfsc	(_ts_system+55)& (0+255),7,b	;volatile
 10092  001B7C  D009               	goto	u26880
 10093  001B7E  51D2               	movf	(_ts_system+55)& (0+255),w,b	;volatile
 10094  001B80  E103               	bnz	u26870
 10095  001B82  05D1               	decf	(_ts_system+54)& (0+255),w,b	;volatile
 10096  001B84  A0D8               	btfss	status,0,c
 10097  001B86  D004               	goto	u26880
 10098  001B88                     u26870:
 10099                           
 10100                           ; BSR set to: 1
 10101  001B88  0100               	movlb	0	; () banked
 10102  001B8A  0581               	decf	_control_limit_switch& (0+255),w,b
 10103  001B8C  A4D8               	btfss	status,2,c
 10104  001B8E  D02A               	goto	l22555
 10105  001B90                     u26880:
 10106                           
 10107                           ;sm_ControlLearning_MC50.c: 209:             {;sm_ControlLearning_MC50.c: 210:          
      +                                  control_limit_switch = 1;
 10108  001B90  0E01               	movlw	1
 10109  001B92  0100               	movlb	0	; () banked
 10110  001B94  6F81               	movwf	_control_limit_switch& (0+255),b
 10111                           
 10112                           ;sm_ControlLearning_MC50.c: 211:                 var_sys.StateMotor=Stopped;
 10113  001B96  0E00               	movlw	0
 10114  001B98  0101               	movlb	1	; () banked
 10115  001B9A  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10116                           
 10117                           ; BSR set to: 1
 10118                           ;sm_ControlLearning_MC50.c: 212:             if(ts_system.TimeWaitToNextState<=0)
 10119  001B9C  BFC0               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 10120  001B9E  D005               	goto	u26890
 10121  001BA0  51C0               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 10122  001BA2  E102               	bnz	u26891
 10123  001BA4  05BF               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 10124  001BA6  B0D8               	btfsc	status,0,c
 10125  001BA8                     u26891:
 10126  001BA8  0012               	return	
 10127  001BAA                     u26890:
 10128                           
 10129                           ; BSR set to: 1
 10130                           ;sm_ControlLearning_MC50.c: 213:             {;sm_ControlLearning_MC50.c: 215:          
      +                                 sm_send_event(&controlLearning_stateMachine, ev_GateOpened);
 10131  001BAA  0EB4               	movlw	low _controlLearning_stateMachine
 10132  001BAC  6E12               	movwf	sm_send_event@psm^0,c
 10133  001BAE  0E02               	movlw	high _controlLearning_stateMachine
 10134  001BB0  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10135  001BB2  0E00               	movlw	0
 10136  001BB4  6E15               	movwf	(sm_send_event@event+1)^0,c
 10137  001BB6  0E0B               	movlw	11
 10138  001BB8  6E14               	movwf	sm_send_event@event^0,c
 10139  001BBA  ECA7  F043         	call	_sm_send_event	;wreg free
 10140                           
 10141                           ;sm_ControlLearning_MC50.c: 216:                 var_sys.StateMotor=InClose;
 10142  001BBE  0E03               	movlw	3
 10143  001BC0  0101               	movlb	1	; () banked
 10144  001BC2  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10145                           
 10146                           ; BSR set to: 1
 10147                           ;sm_ControlLearning_MC50.c: 217:                 ts_system.TimeLearningDecelaration=(100
      +                          0/50)*5;
 10148  001BC4  0E00               	movlw	0
 10149  001BC6  6FD2               	movwf	(_ts_system+55)& (0+255),b	;volatile
 10150  001BC8  0E64               	movlw	100
 10151  001BCA  6FD1               	movwf	(_ts_system+54)& (0+255),b	;volatile
 10152                           
 10153                           ; BSR set to: 1
 10154                           ;sm_ControlLearning_MC50.c: 218:                 ts_system.TimeWaitToGetCurrent=(1000/50
      +                          )*5;
 10155  001BCC  0E00               	movlw	0
 10156  001BCE  6FD0               	movwf	(_ts_system+53)& (0+255),b	;volatile
 10157  001BD0  0E64               	movlw	100
 10158  001BD2                     L67:
 10159  001BD2  6FCF               	movwf	(_ts_system+52)& (0+255),b	;volatile
 10160                           
 10161                           ; BSR set to: 1
 10162                           ;sm_ControlLearning_MC50.c: 219:                 ts_system.TimeWaitReleCapacitor = (1000
      +                          /50);
 10163  001BD4  0E00               	movlw	0
 10164  001BD6  6FE0               	movwf	(_ts_system+69)& (0+255),b	;volatile
 10165  001BD8  0E14               	movlw	20
 10166  001BDA  6FDF               	movwf	(_ts_system+68)& (0+255),b	;volatile
 10167                           
 10168                           ; BSR set to: 1
 10169                           ;sm_ControlLearning_MC50.c: 220:                 control_limit_switch = 0;
 10170  001BDC  0E00               	movlw	0
 10171  001BDE  0100               	movlb	0	; () banked
 10172  001BE0  6F81               	movwf	_control_limit_switch& (0+255),b
 10173  001BE2  0012               	return	
 10174  001BE4                     l22555:
 10175                           
 10176                           ; BSR set to: 0
 10177  001BE4  0101               	movlb	1	; () banked
 10178  001BE6  5100               	movf	_var_sys& (0+255),w,b	;volatile
 10179  001BE8  B4D8               	btfsc	status,2,c
 10180  001BEA  D7BC               	goto	u26850
 10181                           
 10182                           ; BSR set to: 1
 10183                           ;sm_ControlLearning_MC50.c: 230:             {;sm_ControlLearning_MC50.c: 231:          
      +                                 ts_system.TimeWaitToNextState=(2*(1000/50));
 10184  001BEC  0E00               	movlw	0
 10185  001BEE  6FC0               	movwf	(_ts_system+37)& (0+255),b	;volatile
 10186  001BF0  0E28               	movlw	40
 10187  001BF2  6FBF               	movwf	(_ts_system+36)& (0+255),b	;volatile
 10188                           
 10189                           ; BSR set to: 1
 10190                           ;sm_ControlLearning_MC50.c: 232:                 if (ts_system.TimeWaitReleCapacitor <=0
      +                          )
 10191  001BF4  BFE0               	btfsc	(_ts_system+69)& (0+255),7,b	;volatile
 10192  001BF6  D005               	goto	u26910
 10193  001BF8  51E0               	movf	(_ts_system+69)& (0+255),w,b	;volatile
 10194  001BFA  E102               	bnz	u26911
 10195  001BFC  05DF               	decf	(_ts_system+68)& (0+255),w,b	;volatile
 10196  001BFE  B0D8               	btfsc	status,0,c
 10197  001C00                     u26911:
 10198  001C00  0012               	return	
 10199  001C02                     u26910:
 10200                           
 10201                           ; BSR set to: 1
 10202                           ;sm_ControlLearning_MC50.c: 233:                 {;sm_ControlLearning_MC50.c: 234:      
      +                                     if(ts_system.TimeWaitToGetCurrent>0)
 10203  001C02  BFD0               	btfsc	(_ts_system+53)& (0+255),7,b	;volatile
 10204  001C04  0012               	return	
 10205  001C06  51D0               	movf	(_ts_system+53)& (0+255),w,b	;volatile
 10206  001C08  E103               	bnz	u26920
 10207  001C0A  05CF               	decf	(_ts_system+52)& (0+255),w,b	;volatile
 10208  001C0C  A0D8               	btfss	status,0,c
 10209  001C0E  0012               	return	
 10210  001C10                     u26920:
 10211                           
 10212                           ; BSR set to: 1
 10213                           ;sm_ControlLearning_MC50.c: 235:                 {;sm_ControlLearning_MC50.c: 236:      
      +                                         learn_st.openHistCurrent=calculateMean(learn_st.openHistCurrent,var_sys.A
      +                          ctualHistCurrent);
 10214  001C10  C06E  F010         	movff	_learn_st+14,calculateMean@meanValue	;volatile
 10215  001C14  C06F  F011         	movff	_learn_st+15,calculateMean@meanValue+1	;volatile
 10216  001C18  6A12               	clrf	(calculateMean@meanValue+2)^0,c
 10217  001C1A  6A13               	clrf	(calculateMean@meanValue+3)^0,c
 10218  001C1C  C130  F014         	movff	_var_sys+48,calculateMean@newValue	;volatile
 10219  001C20  C131  F015         	movff	_var_sys+49,calculateMean@newValue+1	;volatile
 10220  001C24  C132  F016         	movff	_var_sys+50,calculateMean@newValue+2	;volatile
 10221  001C28  C133  F017         	movff	_var_sys+51,calculateMean@newValue+3	;volatile
 10222  001C2C  EC47  F043         	call	_calculateMean	;wreg free
 10223  001C30  C010  F06E         	movff	?_calculateMean,_learn_st+14	;volatile
 10224  001C34  C011  F06F         	movff	?_calculateMean+1,_learn_st+15	;volatile
 10225  001C38  0012               	return	
 10226  001C3A                     l22567:
 10227                           
 10228                           ; BSR set to: 0
 10229                           ;sm_ControlLearning_MC50.c: 243:         {;sm_ControlLearning_MC50.c: 244:             i
      +                          f((var_sys.FimCurso_CloseIsEnabled==YES)||(control_limit_switch == 1))
 10230  001C3A  0101               	movlb	1	; () banked
 10231  001C3C  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
 10232  001C3E  B4D8               	btfsc	status,2,c
 10233  001C40  D004               	goto	u26940
 10234                           
 10235                           ; BSR set to: 1
 10236  001C42  0100               	movlb	0	; () banked
 10237  001C44  0581               	decf	_control_limit_switch& (0+255),w,b
 10238  001C46  A4D8               	btfss	status,2,c
 10239  001C48  D020               	goto	l22587
 10240  001C4A                     u26940:
 10241                           
 10242                           ;sm_ControlLearning_MC50.c: 245:             {;sm_ControlLearning_MC50.c: 246:          
      +                                 control_limit_switch = 1;
 10243  001C4A  0E01               	movlw	1
 10244  001C4C  0100               	movlb	0	; () banked
 10245  001C4E  6F81               	movwf	_control_limit_switch& (0+255),b
 10246                           
 10247                           ;sm_ControlLearning_MC50.c: 247:                 var_sys.StateMotor=Stopped;
 10248  001C50  0E00               	movlw	0
 10249  001C52  0101               	movlb	1	; () banked
 10250  001C54  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10251                           
 10252                           ; BSR set to: 1
 10253                           ;sm_ControlLearning_MC50.c: 248:                 if(ts_system.TimeWaitToNextState<=0)
 10254  001C56  BFC0               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 10255  001C58  D005               	goto	u26950
 10256  001C5A  51C0               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 10257  001C5C  E102               	bnz	u26951
 10258  001C5E  05BF               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 10259  001C60  B0D8               	btfsc	status,0,c
 10260  001C62                     u26951:
 10261  001C62  0012               	return	
 10262  001C64                     u26950:
 10263                           
 10264                           ; BSR set to: 1
 10265                           ;sm_ControlLearning_MC50.c: 249:                 {;sm_ControlLearning_MC50.c: 250:      
      +                                         sm_send_event(&controlLearning_stateMachine, ev_GateClosed);
 10266  001C64  0EB4               	movlw	low _controlLearning_stateMachine
 10267  001C66  6E12               	movwf	sm_send_event@psm^0,c
 10268  001C68  0E02               	movlw	high _controlLearning_stateMachine
 10269  001C6A  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10270  001C6C  0E00               	movlw	0
 10271  001C6E  6E15               	movwf	(sm_send_event@event+1)^0,c
 10272  001C70  0E0A               	movlw	10
 10273  001C72  6E14               	movwf	sm_send_event@event^0,c
 10274  001C74  ECA7  F043         	call	_sm_send_event	;wreg free
 10275                           
 10276                           ;sm_ControlLearning_MC50.c: 251:                     var_sys.StateMotor=InOpenFull;
 10277  001C78  0E01               	movlw	1
 10278  001C7A  0101               	movlb	1	; () banked
 10279  001C7C  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10280                           
 10281                           ; BSR set to: 1
 10282                           ;sm_ControlLearning_MC50.c: 252:                     var_sys.LearningDecelaration=NO;
 10283  001C7E  0E00               	movlw	0
 10284  001C80  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
 10285                           
 10286                           ; BSR set to: 1
 10287                           ;sm_ControlLearning_MC50.c: 253:                     ts_system.TimeWaitToGetCurrent=(100
      +                          0/50)*3;
 10288  001C82  0E00               	movlw	0
 10289  001C84  6FD0               	movwf	(_ts_system+53)& (0+255),b	;volatile
 10290  001C86  0E3C               	movlw	60
 10291  001C88  D7A4               	goto	L67
 10292  001C8A                     l22587:
 10293                           
 10294                           ; BSR set to: 0
 10295  001C8A  0101               	movlb	1	; () banked
 10296  001C8C  5100               	movf	_var_sys& (0+255),w,b	;volatile
 10297  001C8E  B4D8               	btfsc	status,2,c
 10298  001C90  D769               	goto	u26850
 10299                           
 10300                           ; BSR set to: 1
 10301                           ;sm_ControlLearning_MC50.c: 265:             {;sm_ControlLearning_MC50.c: 266:          
      +                                 ts_system.TimeWaitToNextState=(2*(1000/50));
 10302  001C92  0E00               	movlw	0
 10303  001C94  6FC0               	movwf	(_ts_system+37)& (0+255),b	;volatile
 10304  001C96  0E28               	movlw	40
 10305  001C98  6FBF               	movwf	(_ts_system+36)& (0+255),b	;volatile
 10306                           
 10307                           ; BSR set to: 1
 10308                           ;sm_ControlLearning_MC50.c: 267:                 if (ts_system.TimeWaitReleCapacitor <=0
      +                          )
 10309  001C9A  BFE0               	btfsc	(_ts_system+69)& (0+255),7,b	;volatile
 10310  001C9C  D005               	goto	u26970
 10311  001C9E  51E0               	movf	(_ts_system+69)& (0+255),w,b	;volatile
 10312  001CA0  E102               	bnz	u26971
 10313  001CA2  05DF               	decf	(_ts_system+68)& (0+255),w,b	;volatile
 10314  001CA4  B0D8               	btfsc	status,0,c
 10315  001CA6                     u26971:
 10316  001CA6  0012               	return	
 10317  001CA8                     u26970:
 10318                           
 10319                           ; BSR set to: 1
 10320                           ;sm_ControlLearning_MC50.c: 268:                 {;sm_ControlLearning_MC50.c: 269:      
      +                                     if(ts_system.TimeWaitToGetCurrent>0)
 10321  001CA8  BFD0               	btfsc	(_ts_system+53)& (0+255),7,b	;volatile
 10322  001CAA  0012               	return	
 10323  001CAC  51D0               	movf	(_ts_system+53)& (0+255),w,b	;volatile
 10324  001CAE  E103               	bnz	u26980
 10325  001CB0  05CF               	decf	(_ts_system+52)& (0+255),w,b	;volatile
 10326  001CB2  A0D8               	btfss	status,0,c
 10327  001CB4  0012               	return	
 10328  001CB6                     u26980:
 10329                           
 10330                           ; BSR set to: 1
 10331                           ;sm_ControlLearning_MC50.c: 270:                 {;sm_ControlLearning_MC50.c: 271:      
      +                                         learn_st.closeHistCurrent=calculateMean(learn_st.closeHistCurrent,var_sys
      +                          .ActualHistCurrent);
 10332  001CB6  C070  F010         	movff	_learn_st+16,calculateMean@meanValue	;volatile
 10333  001CBA  C071  F011         	movff	_learn_st+17,calculateMean@meanValue+1	;volatile
 10334  001CBE  6A12               	clrf	(calculateMean@meanValue+2)^0,c
 10335  001CC0  6A13               	clrf	(calculateMean@meanValue+3)^0,c
 10336  001CC2  C130  F014         	movff	_var_sys+48,calculateMean@newValue	;volatile
 10337  001CC6  C131  F015         	movff	_var_sys+49,calculateMean@newValue+1	;volatile
 10338  001CCA  C132  F016         	movff	_var_sys+50,calculateMean@newValue+2	;volatile
 10339  001CCE  C133  F017         	movff	_var_sys+51,calculateMean@newValue+3	;volatile
 10340  001CD2  EC47  F043         	call	_calculateMean	;wreg free
 10341  001CD6  C010  F070         	movff	?_calculateMean,_learn_st+16	;volatile
 10342  001CDA  C011  F071         	movff	?_calculateMean+1,_learn_st+17	;volatile
 10343  001CDE  0012               	return	
 10344  001CE0                     l22599:
 10345                           
 10346                           ; BSR set to: 0
 10347                           ;sm_ControlLearning_MC50.c: 278:         {;sm_ControlLearning_MC50.c: 279:             i
      +                          f(((var_sys.FimCurso_OpenIsEnabled==YES)||control_limit_switch == 1)||(var_sys.LearningD
      +                          ecelaration==YES && (button_struct.current == 0 ||typeOpenOrder == TypeFull) && var_sys.
      +                          programinAutomatic == 1))
 10348  001CE0  0101               	movlb	1	; () banked
 10349  001CE2  0504               	decf	(_var_sys+4)& (0+255),w,b	;volatile
 10350  001CE4  B4D8               	btfsc	status,2,c
 10351  001CE6  D011               	goto	u27040
 10352                           
 10353                           ; BSR set to: 1
 10354  001CE8  0100               	movlb	0	; () banked
 10355  001CEA  0581               	decf	_control_limit_switch& (0+255),w,b
 10356  001CEC  B4D8               	btfsc	status,2,c
 10357  001CEE  D00D               	goto	u27040
 10358                           
 10359                           ; BSR set to: 0
 10360  001CF0  0101               	movlb	1	; () banked
 10361  001CF2  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 10362  001CF4  A4D8               	btfss	status,2,c
 10363  001CF6  D02C               	goto	l22625
 10364                           
 10365                           ; BSR set to: 1
 10366  001CF8  504D               	movf	(_button_struct+1)^0,w,c	;volatile
 10367  001CFA  B4D8               	btfsc	status,2,c
 10368  001CFC  D003               	goto	u27030
 10369                           
 10370                           ; BSR set to: 1
 10371  001CFE  043A               	decf	sm_execute_ControlLearning@typeOpenOrder^0,w,c
 10372  001D00  A4D8               	btfss	status,2,c
 10373  001D02  D026               	goto	l22625
 10374  001D04                     u27030:
 10375                           
 10376                           ; BSR set to: 1
 10377  001D04  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 10378  001D06  A4D8               	btfss	status,2,c
 10379  001D08  D023               	goto	l22625
 10380  001D0A                     u27040:
 10381                           
 10382                           ;sm_ControlLearning_MC50.c: 280:             {;sm_ControlLearning_MC50.c: 282:          
      +                                 var_sys.Counter_Learning = 0;
 10383  001D0A  0E00               	movlw	0
 10384  001D0C  0101               	movlb	1	; () banked
 10385  001D0E  6F17               	movwf	(_var_sys+23)& (0+255),b	;volatile
 10386                           
 10387                           ;sm_ControlLearning_MC50.c: 283:                 var_sys.LearningDecelaration = NO;
 10388  001D10  0E00               	movlw	0
 10389  001D12  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
 10390                           
 10391                           ;sm_ControlLearning_MC50.c: 284:                 control_limit_switch = 1;
 10392  001D14  0E01               	movlw	1
 10393  001D16  0100               	movlb	0	; () banked
 10394  001D18  6F81               	movwf	_control_limit_switch& (0+255),b
 10395                           
 10396                           ;sm_ControlLearning_MC50.c: 285:                 var_sys.StateMotor=Stopped;
 10397  001D1A  0E00               	movlw	0
 10398  001D1C  0101               	movlb	1	; () banked
 10399  001D1E  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10400                           
 10401                           ; BSR set to: 1
 10402                           ;sm_ControlLearning_MC50.c: 286:                 if(ts_system.TimeWaitToNextState<=0)
 10403  001D20  BFC0               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 10404  001D22  D005               	goto	u27050
 10405  001D24  51C0               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 10406  001D26  E102               	bnz	u27051
 10407  001D28  05BF               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 10408  001D2A  B0D8               	btfsc	status,0,c
 10409  001D2C                     u27051:
 10410  001D2C  0012               	return	
 10411  001D2E                     u27050:
 10412                           
 10413                           ; BSR set to: 1
 10414                           ;sm_ControlLearning_MC50.c: 287:                 {;sm_ControlLearning_MC50.c: 288:      
      +                                         sm_send_event(&controlLearning_stateMachine, ev_GateOpened);
 10415  001D2E  0EB4               	movlw	low _controlLearning_stateMachine
 10416  001D30  6E12               	movwf	sm_send_event@psm^0,c
 10417  001D32  0E02               	movlw	high _controlLearning_stateMachine
 10418  001D34  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10419  001D36  0E00               	movlw	0
 10420  001D38  6E15               	movwf	(sm_send_event@event+1)^0,c
 10421  001D3A  0E0B               	movlw	11
 10422  001D3C  6E14               	movwf	sm_send_event@event^0,c
 10423  001D3E  ECA7  F043         	call	_sm_send_event	;wreg free
 10424                           
 10425                           ;sm_ControlLearning_MC50.c: 289:                     var_sys.StateMotor=InClose;
 10426  001D42  0E03               	movlw	3
 10427  001D44  0101               	movlb	1	; () banked
 10428  001D46  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10429                           
 10430                           ; BSR set to: 1
 10431                           ;sm_ControlLearning_MC50.c: 290:                     ts_system.TimeWaitToGetCurrent=(100
      +                          0/50)*4;
 10432  001D48  0E00               	movlw	0
 10433  001D4A  6FD0               	movwf	(_ts_system+53)& (0+255),b	;volatile
 10434  001D4C  0E50               	movlw	80
 10435  001D4E  D741               	goto	L67
 10436  001D50                     l22625:
 10437                           
 10438                           ; BSR set to: 1
 10439  001D50  5100               	movf	_var_sys& (0+255),w,b	;volatile
 10440  001D52  B4D8               	btfsc	status,2,c
 10441  001D54  D707               	goto	u26850
 10442                           
 10443                           ; BSR set to: 1
 10444  001D56  504D               	movf	(_button_struct+1)^0,w,c	;volatile
 10445  001D58  B4D8               	btfsc	status,2,c
 10446  001D5A  D003               	goto	u27080
 10447                           
 10448                           ; BSR set to: 1
 10449  001D5C  043A               	decf	sm_execute_ControlLearning@typeOpenOrder^0,w,c
 10450  001D5E  A4D8               	btfss	status,2,c
 10451  001D60  D00F               	goto	l22639
 10452  001D62                     u27080:
 10453                           
 10454                           ; BSR set to: 1
 10455  001D62  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 10456  001D64  A4D8               	btfss	status,2,c
 10457  001D66  D00C               	goto	l22639
 10458                           
 10459                           ; BSR set to: 1
 10460  001D68  5147               	movf	(_var_sys+71)& (0+255),w,b	;volatile
 10461  001D6A  A4D8               	btfss	status,2,c
 10462  001D6C  D009               	goto	l22639
 10463  001D6E                     u27100:
 10464                           
 10465                           ; BSR set to: 1
 10466                           ;sm_ControlLearning_MC50.c: 303:                 var_sys.LearningDecelaration=YES;
 10467  001D6E  0E01               	movlw	1
 10468  001D70  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
 10469                           
 10470                           ;sm_ControlLearning_MC50.c: 306:                 button_struct.processed = 1;
 10471  001D72  0E01               	movlw	1
 10472  001D74  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 10473                           
 10474                           ;sm_ControlLearning_MC50.c: 307:                 ts_system.TimeWaitToGetCurrent=(1000/50
      +                          )*4;
 10475  001D76  0E00               	movlw	0
 10476  001D78  6FD0               	movwf	(_ts_system+53)& (0+255),b	;volatile
 10477  001D7A  0E50               	movlw	80
 10478  001D7C  6FCF               	movwf	(_ts_system+52)& (0+255),b	;volatile
 10479                           
 10480                           ;sm_ControlLearning_MC50.c: 309:             }
 10481  001D7E  0012               	return	
 10482  001D80                     l22639:
 10483                           
 10484                           ; BSR set to: 1
 10485  001D80  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 10486  001D82  A4D8               	btfss	status,2,c
 10487  001D84  D00C               	goto	l22647
 10488                           
 10489                           ; BSR set to: 1
 10490                           ;sm_ControlLearning_MC50.c: 313:                 ts_system.TimeWaitToNextState=(2*(1000/
      +                          50));
 10491  001D86  0E00               	movlw	0
 10492  001D88  6FC0               	movwf	(_ts_system+37)& (0+255),b	;volatile
 10493  001D8A  0E28               	movlw	40
 10494  001D8C  6FBF               	movwf	(_ts_system+36)& (0+255),b	;volatile
 10495                           
 10496                           ; BSR set to: 1
 10497                           ;sm_ControlLearning_MC50.c: 315:                 if(ts_system.TimeWaitToGetCurrent>0)
 10498  001D8E  BFD0               	btfsc	(_ts_system+53)& (0+255),7,b	;volatile
 10499  001D90  0012               	return	
 10500  001D92  51D0               	movf	(_ts_system+53)& (0+255),w,b	;volatile
 10501  001D94  E103               	bnz	u27120
 10502  001D96  05CF               	decf	(_ts_system+52)& (0+255),w,b	;volatile
 10503  001D98  A0D8               	btfss	status,0,c
 10504  001D9A  0012               	return	
 10505  001D9C                     u27120:
 10506  001D9C  D739               	goto	u26920
 10507  001D9E                     l22647:
 10508                           
 10509                           ; BSR set to: 1
 10510                           ;sm_ControlLearning_MC50.c: 322:             {;sm_ControlLearning_MC50.c: 323:          
      +                                 var_sys.Counter_Learning = 1;
 10511  001D9E  0E01               	movlw	1
 10512  001DA0  6F17               	movwf	(_var_sys+23)& (0+255),b	;volatile
 10513                           
 10514                           ;sm_ControlLearning_MC50.c: 324:                 ts_system.TimeWaitToNextState=(2*(1000/
      +                          50));
 10515  001DA2  0E00               	movlw	0
 10516  001DA4  6FC0               	movwf	(_ts_system+37)& (0+255),b	;volatile
 10517  001DA6  0E28               	movlw	40
 10518  001DA8  6FBF               	movwf	(_ts_system+36)& (0+255),b	;volatile
 10519                           
 10520                           ; BSR set to: 1
 10521                           ;sm_ControlLearning_MC50.c: 326:                 if (ts_system.TimeWaitReleCapacitor <=0
      +                          )
 10522  001DAA  BFE0               	btfsc	(_ts_system+69)& (0+255),7,b	;volatile
 10523  001DAC  D005               	goto	u27130
 10524  001DAE  51E0               	movf	(_ts_system+69)& (0+255),w,b	;volatile
 10525  001DB0  E102               	bnz	u27131
 10526  001DB2  05DF               	decf	(_ts_system+68)& (0+255),w,b	;volatile
 10527  001DB4  B0D8               	btfsc	status,0,c
 10528  001DB6                     u27131:
 10529  001DB6  0012               	return	
 10530  001DB8                     u27130:
 10531                           
 10532                           ; BSR set to: 1
 10533                           ;sm_ControlLearning_MC50.c: 327:                 {;sm_ControlLearning_MC50.c: 328:      
      +                                     if(ts_system.TimeWaitToGetCurrent>0)
 10534  001DB8  BFD0               	btfsc	(_ts_system+53)& (0+255),7,b	;volatile
 10535  001DBA  0012               	return	
 10536  001DBC  51D0               	movf	(_ts_system+53)& (0+255),w,b	;volatile
 10537  001DBE  E103               	bnz	u27140
 10538  001DC0  05CF               	decf	(_ts_system+52)& (0+255),w,b	;volatile
 10539  001DC2  A0D8               	btfss	status,0,c
 10540  001DC4  0012               	return	
 10541  001DC6                     u27140:
 10542                           
 10543                           ; BSR set to: 1
 10544                           ;sm_ControlLearning_MC50.c: 329:                 {;sm_ControlLearning_MC50.c: 330:      
      +                                         learn_st.openCurrent=calculateMean(learn_st.openCurrent,var_sys.ActualCur
      +                          rent);
 10545  001DC6  C06A  F010         	movff	_learn_st+10,calculateMean@meanValue	;volatile
 10546  001DCA  C06B  F011         	movff	_learn_st+11,calculateMean@meanValue+1	;volatile
 10547  001DCE  6A12               	clrf	(calculateMean@meanValue+2)^0,c
 10548  001DD0  6A13               	clrf	(calculateMean@meanValue+3)^0,c
 10549  001DD2  C12E  F014         	movff	_var_sys+46,calculateMean@newValue	;volatile
 10550  001DD6  C12F  F015         	movff	_var_sys+47,calculateMean@newValue+1	;volatile
 10551  001DDA  6A16               	clrf	(calculateMean@newValue+2)^0,c
 10552  001DDC  6A17               	clrf	(calculateMean@newValue+3)^0,c
 10553  001DDE  EC47  F043         	call	_calculateMean	;wreg free
 10554  001DE2  C010  F06A         	movff	?_calculateMean,_learn_st+10	;volatile
 10555  001DE6  C011  F06B         	movff	?_calculateMean+1,_learn_st+11	;volatile
 10556  001DEA  0012               	return	
 10557  001DEC                     l22655:
 10558                           
 10559                           ; BSR set to: 0
 10560                           ;sm_ControlLearning_MC50.c: 337:         {;sm_ControlLearning_MC50.c: 338:             i
      +                          f((var_sys.FimCurso_CloseIsEnabled==YES)||( var_sys.LearningDecelaration==YES && (button
      +                          _struct.current == 0 || typeOpenOrder == TypeFull) && var_sys.programinAutomatic == 1))
 10561  001DEC  0101               	movlb	1	; () banked
 10562  001DEE  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
 10563  001DF0  B4D8               	btfsc	status,2,c
 10564  001DF2  D00C               	goto	u27190
 10565                           
 10566                           ; BSR set to: 1
 10567  001DF4  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 10568  001DF6  A4D8               	btfss	status,2,c
 10569  001DF8  D06F               	goto	l22701
 10570                           
 10571                           ; BSR set to: 1
 10572  001DFA  504D               	movf	(_button_struct+1)^0,w,c	;volatile
 10573  001DFC  B4D8               	btfsc	status,2,c
 10574  001DFE  D003               	goto	u27180
 10575                           
 10576                           ; BSR set to: 1
 10577  001E00  043A               	decf	sm_execute_ControlLearning@typeOpenOrder^0,w,c
 10578  001E02  A4D8               	btfss	status,2,c
 10579  001E04  D069               	goto	l22701
 10580  001E06                     u27180:
 10581                           
 10582                           ; BSR set to: 1
 10583  001E06  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 10584  001E08  A4D8               	btfss	status,2,c
 10585  001E0A  D066               	goto	l22701
 10586  001E0C                     u27190:
 10587                           
 10588                           ; BSR set to: 1
 10589                           ;sm_ControlLearning_MC50.c: 339:             {;sm_ControlLearning_MC50.c: 342:          
      +                                 var_sys.Statedoorcontrol = st_Closed;
 10590  001E0C  0E01               	movlw	1
 10591  001E0E  6F1C               	movwf	(_var_sys+28)& (0+255),b	;volatile
 10592                           
 10593                           ;sm_ControlLearning_MC50.c: 343:                 var_sys.Counter_Learning = 0;
 10594  001E10  0E00               	movlw	0
 10595  001E12  6F17               	movwf	(_var_sys+23)& (0+255),b	;volatile
 10596                           
 10597                           ;sm_ControlLearning_MC50.c: 344:                 var_sys.LearningDecelaration = NO;
 10598  001E14  0E00               	movlw	0
 10599  001E16  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
 10600                           
 10601                           ;sm_ControlLearning_MC50.c: 345:                 var_sys.StateMotor=Stopped;
 10602  001E18  0E00               	movlw	0
 10603  001E1A  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10604                           
 10605                           ; BSR set to: 1
 10606                           ;sm_ControlLearning_MC50.c: 346:                 sm_send_event(&controlLearning_stateMac
      +                          hine, ev_GateClosed);
 10607  001E1C  0EB4               	movlw	low _controlLearning_stateMachine
 10608  001E1E  6E12               	movwf	sm_send_event@psm^0,c
 10609  001E20  0E02               	movlw	high _controlLearning_stateMachine
 10610  001E22  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10611  001E24  0E00               	movlw	0
 10612  001E26  6E15               	movwf	(sm_send_event@event+1)^0,c
 10613  001E28  0E0A               	movlw	10
 10614  001E2A  6E14               	movwf	sm_send_event@event^0,c
 10615  001E2C  ECA7  F043         	call	_sm_send_event	;wreg free
 10616                           
 10617                           ;sm_ControlLearning_MC50.c: 347:                 sm_send_event(&controlGate_stateMachine
      +                          , ev_LearningComplete);
 10618  001E30  0EE3               	movlw	low _controlGate_stateMachine
 10619  001E32  6E12               	movwf	sm_send_event@psm^0,c
 10620  001E34  0E01               	movlw	high _controlGate_stateMachine
 10621  001E36  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10622  001E38  0E00               	movlw	0
 10623  001E3A  6E15               	movwf	(sm_send_event@event+1)^0,c
 10624  001E3C  0E13               	movlw	19
 10625  001E3E  6E14               	movwf	sm_send_event@event^0,c
 10626  001E40  ECA7  F043         	call	_sm_send_event	;wreg free
 10627                           
 10628                           ;sm_ControlLearning_MC50.c: 348:                 var_sys_NVM.learningTimeToClose=learn_s
      +                          t.timeClose;
 10629  001E44  C060  F0D0         	movff	_learn_st,_var_sys_NVM+56	;volatile
 10630  001E48  C061  F0D1         	movff	_learn_st+1,_var_sys_NVM+57	;volatile
 10631  001E4C  C062  F0D2         	movff	_learn_st+2,_var_sys_NVM+58	;volatile
 10632  001E50  C063  F0D3         	movff	_learn_st+3,_var_sys_NVM+59	;volatile
 10633                           
 10634                           ;sm_ControlLearning_MC50.c: 349:                 var_sys_NVM.learningTimeToOpen=learn_st
      +                          .timeOpen;
 10635  001E54  C064  F0CC         	movff	_learn_st+4,_var_sys_NVM+52	;volatile
 10636  001E58  C065  F0CD         	movff	_learn_st+5,_var_sys_NVM+53	;volatile
 10637  001E5C  C066  F0CE         	movff	_learn_st+6,_var_sys_NVM+54	;volatile
 10638  001E60  C067  F0CF         	movff	_learn_st+7,_var_sys_NVM+55	;volatile
 10639                           
 10640                           ;sm_ControlLearning_MC50.c: 350:                 if (var_sys.programinAutomatic == 1){
 10641  001E64  0101               	movlb	1	; () banked
 10642  001E66  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 10643  001E68  A4D8               	btfss	status,2,c
 10644  001E6A  D005               	goto	l22679
 10645                           
 10646                           ; BSR set to: 1
 10647                           ;sm_ControlLearning_MC50.c: 351:                     var_sys_NVM.decelarationClose=learn
      +                          _st.timeDecelerationClose ;
 10648  001E6C  C068  F099         	movff	_learn_st+8,_var_sys_NVM+1	;volatile
 10649                           
 10650                           ;sm_ControlLearning_MC50.c: 352:                     var_sys_NVM.decelarationOpen=learn_
      +                          st.timeDecelerationOpen ;
 10651  001E70  C069  F098         	movff	_learn_st+9,_var_sys_NVM	;volatile
 10652                           
 10653                           ;sm_ControlLearning_MC50.c: 353:                                 }
 10654  001E74  D005               	goto	l22681
 10655  001E76                     l22679:
 10656                           
 10657                           ; BSR set to: 1
 10658                           ;sm_ControlLearning_MC50.c: 355:                     var_sys_NVM.decelarationClose=4 ;
 10659  001E76  0E04               	movlw	4
 10660  001E78  0100               	movlb	0	; () banked
 10661  001E7A  6F99               	movwf	(_var_sys_NVM+1)& (0+255),b	;volatile
 10662                           
 10663                           ;sm_ControlLearning_MC50.c: 356:                     var_sys_NVM.decelarationOpen=4 ;
 10664  001E7C  0E04               	movlw	4
 10665  001E7E  6F98               	movwf	_var_sys_NVM& (0+255),b	;volatile
 10666  001E80                     l22681:
 10667                           
 10668                           ;sm_ControlLearning_MC50.c: 358:                 var_sys_NVM.learningCurrentNormalClose=
      +                          learn_st.closeCurrent;
 10669  001E80  C06C  F0C8         	movff	_learn_st+12,_var_sys_NVM+48	;volatile
 10670  001E84  C06D  F0C9         	movff	_learn_st+13,_var_sys_NVM+49	;volatile
 10671                           
 10672                           ;sm_ControlLearning_MC50.c: 359:                 var_sys_NVM.learningCurrentNormalOpen=l
      +                          earn_st.openCurrent;
 10673  001E88  C06A  F0CA         	movff	_learn_st+10,_var_sys_NVM+50	;volatile
 10674  001E8C  C06B  F0CB         	movff	_learn_st+11,_var_sys_NVM+51	;volatile
 10675                           
 10676                           ;sm_ControlLearning_MC50.c: 360:                 var_sys_NVM.learningCurrentDecelaration
      +                          Open=learn_st.openHistCurrent;
 10677  001E90  C06E  F0C4         	movff	_learn_st+14,_var_sys_NVM+44	;volatile
 10678  001E94  C06F  F0C5         	movff	_learn_st+15,_var_sys_NVM+45	;volatile
 10679  001E98  0100               	movlb	0	; () banked
 10680  001E9A  6BC6               	clrf	(_var_sys_NVM+46)& (0+255),b	;volatile
 10681  001E9C  6BC7               	clrf	(_var_sys_NVM+47)& (0+255),b	;volatile
 10682                           
 10683                           ; BSR set to: 0
 10684                           ;sm_ControlLearning_MC50.c: 361:                 var_sys_NVM.learningCurrentDecelaration
      +                          Close=learn_st.closeHistCurrent;
 10685  001E9E  C070  F0C0         	movff	_learn_st+16,_var_sys_NVM+40	;volatile
 10686  001EA2  C071  F0C1         	movff	_learn_st+17,_var_sys_NVM+41	;volatile
 10687  001EA6  6BC2               	clrf	(_var_sys_NVM+42)& (0+255),b	;volatile
 10688  001EA8  6BC3               	clrf	(_var_sys_NVM+43)& (0+255),b	;volatile
 10689                           
 10690                           ; BSR set to: 0
 10691                           ;sm_ControlLearning_MC50.c: 362:                 SaveNVM_VarSystem(pageMemoryP);
 10692  001EAA  0E00               	movlw	0
 10693  001EAC  ECAF  F047         	call	_SaveNVM_VarSystem
 10694                           
 10695                           ;sm_ControlLearning_MC50.c: 363:                 SaveNVM_VarSystem(pageMemoryLearningVar
      +                          s);
 10696  001EB0  0E03               	movlw	3
 10697  001EB2  ECAF  F047         	call	_SaveNVM_VarSystem
 10698                           
 10699                           ;sm_ControlLearning_MC50.c: 364:                 SaveNVM_VarSystem(pageMemoryCounters);
 10700  001EB6  0E02               	movlw	2
 10701  001EB8  ECAF  F047         	call	_SaveNVM_VarSystem
 10702                           
 10703                           ;sm_ControlLearning_MC50.c: 365:                 var_sys.LearningIsEnabled=NO;
 10704  001EBC  0E00               	movlw	0
 10705  001EBE  0101               	movlb	1	; () banked
 10706  001EC0  6F26               	movwf	(_var_sys+38)& (0+255),b	;volatile
 10707                           
 10708                           ; BSR set to: 1
 10709                           ;sm_ControlLearning_MC50.c: 366:                 var_sys.PositionActual=0;
 10710  001EC2  0E00               	movlw	0
 10711  001EC4  6F1E               	movwf	(_var_sys+30)& (0+255),b	;volatile
 10712  001EC6  0E00               	movlw	0
 10713  001EC8  6F1F               	movwf	(_var_sys+31)& (0+255),b	;volatile
 10714  001ECA  0E00               	movlw	0
 10715  001ECC  6F20               	movwf	(_var_sys+32)& (0+255),b	;volatile
 10716  001ECE  0E00               	movlw	0
 10717  001ED0  6F21               	movwf	(_var_sys+33)& (0+255),b	;volatile
 10718                           
 10719                           ; BSR set to: 1
 10720                           ;sm_ControlLearning_MC50.c: 367:                 var_sys.PositionIsLost = NO;
 10721  001ED2  0E00               	movlw	0
 10722  001ED4  6F48               	movwf	(_var_sys+72)& (0+255),b	;volatile
 10723                           
 10724                           ;sm_ControlLearning_MC50.c: 369:             }
 10725  001ED6  0012               	return	
 10726  001ED8                     l22701:
 10727                           
 10728                           ; BSR set to: 1
 10729  001ED8  5100               	movf	_var_sys& (0+255),w,b	;volatile
 10730  001EDA  B4D8               	btfsc	status,2,c
 10731  001EDC  D643               	goto	u26850
 10732                           
 10733                           ; BSR set to: 1
 10734  001EDE  504D               	movf	(_button_struct+1)^0,w,c	;volatile
 10735  001EE0  B4D8               	btfsc	status,2,c
 10736  001EE2  D003               	goto	u27230
 10737                           
 10738                           ; BSR set to: 1
 10739  001EE4  043A               	decf	sm_execute_ControlLearning@typeOpenOrder^0,w,c
 10740  001EE6  A4D8               	btfss	status,2,c
 10741  001EE8  D003               	goto	l22713
 10742  001EEA                     u27230:
 10743                           
 10744                           ; BSR set to: 1
 10745  001EEA  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 10746  001EEC  B4D8               	btfsc	status,2,c
 10747  001EEE  D73F               	goto	u27100
 10748  001EF0                     l22713:
 10749                           
 10750                           ; BSR set to: 1
 10751  001EF0  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 10752  001EF2  A4D8               	btfss	status,2,c
 10753  001EF4  D008               	goto	l22719
 10754                           
 10755                           ; BSR set to: 1
 10756                           ;sm_ControlLearning_MC50.c: 384:                  if(ts_system.TimeWaitToGetCurrent>0)
 10757  001EF6  BFD0               	btfsc	(_ts_system+53)& (0+255),7,b	;volatile
 10758  001EF8  0012               	return	
 10759  001EFA  51D0               	movf	(_ts_system+53)& (0+255),w,b	;volatile
 10760  001EFC  E103               	bnz	u27260
 10761  001EFE  05CF               	decf	(_ts_system+52)& (0+255),w,b	;volatile
 10762  001F00  A0D8               	btfss	status,0,c
 10763  001F02  0012               	return	
 10764  001F04                     u27260:
 10765  001F04  D6D8               	goto	u26980
 10766  001F06                     l22719:
 10767                           
 10768                           ; BSR set to: 1
 10769                           ;sm_ControlLearning_MC50.c: 390:             {;sm_ControlLearning_MC50.c: 391:          
      +                                 var_sys.Counter_Learning = 1;
 10770  001F06  0E01               	movlw	1
 10771  001F08  6F17               	movwf	(_var_sys+23)& (0+255),b	;volatile
 10772                           
 10773                           ;sm_ControlLearning_MC50.c: 392:                 ts_system.TimeWaitToNextState=(2*(1000/
      +                          50));
 10774  001F0A  0E00               	movlw	0
 10775  001F0C  6FC0               	movwf	(_ts_system+37)& (0+255),b	;volatile
 10776  001F0E  0E28               	movlw	40
 10777  001F10  6FBF               	movwf	(_ts_system+36)& (0+255),b	;volatile
 10778                           
 10779                           ; BSR set to: 1
 10780                           ;sm_ControlLearning_MC50.c: 395:                 if (ts_system.TimeWaitReleCapacitor <=0
      +                          )
 10781  001F12  BFE0               	btfsc	(_ts_system+69)& (0+255),7,b	;volatile
 10782  001F14  D005               	goto	u27270
 10783  001F16  51E0               	movf	(_ts_system+69)& (0+255),w,b	;volatile
 10784  001F18  E102               	bnz	u27271
 10785  001F1A  05DF               	decf	(_ts_system+68)& (0+255),w,b	;volatile
 10786  001F1C  B0D8               	btfsc	status,0,c
 10787  001F1E                     u27271:
 10788  001F1E  0012               	return	
 10789  001F20                     u27270:
 10790                           
 10791                           ; BSR set to: 1
 10792                           ;sm_ControlLearning_MC50.c: 396:                 {;sm_ControlLearning_MC50.c: 397:      
      +                                     if(ts_system.TimeWaitToGetCurrent>0)
 10793  001F20  BFD0               	btfsc	(_ts_system+53)& (0+255),7,b	;volatile
 10794  001F22  0012               	return	
 10795  001F24  51D0               	movf	(_ts_system+53)& (0+255),w,b	;volatile
 10796  001F26  E103               	bnz	u27280
 10797  001F28  05CF               	decf	(_ts_system+52)& (0+255),w,b	;volatile
 10798  001F2A  A0D8               	btfss	status,0,c
 10799  001F2C  0012               	return	
 10800  001F2E                     u27280:
 10801                           
 10802                           ; BSR set to: 1
 10803                           ;sm_ControlLearning_MC50.c: 398:                 {;sm_ControlLearning_MC50.c: 399:      
      +                                         learn_st.closeCurrent=calculateMean(learn_st.closeCurrent,var_sys.ActualC
      +                          urrent);
 10804  001F2E  C06C  F010         	movff	_learn_st+12,calculateMean@meanValue	;volatile
 10805  001F32  C06D  F011         	movff	_learn_st+13,calculateMean@meanValue+1	;volatile
 10806  001F36  6A12               	clrf	(calculateMean@meanValue+2)^0,c
 10807  001F38  6A13               	clrf	(calculateMean@meanValue+3)^0,c
 10808  001F3A  C12E  F014         	movff	_var_sys+46,calculateMean@newValue	;volatile
 10809  001F3E  C12F  F015         	movff	_var_sys+47,calculateMean@newValue+1	;volatile
 10810  001F42  6A16               	clrf	(calculateMean@newValue+2)^0,c
 10811  001F44  6A17               	clrf	(calculateMean@newValue+3)^0,c
 10812  001F46  EC47  F043         	call	_calculateMean	;wreg free
 10813  001F4A  C010  F06C         	movff	?_calculateMean,_learn_st+12	;volatile
 10814  001F4E  C011  F06D         	movff	?_calculateMean+1,_learn_st+13	;volatile
 10815  001F52  0012               	return	
 10816  001F54                     l22729:
 10817  001F54  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
 10818  001F58  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
 10819  001F5C  50DF               	movf	indf2,w,c
 10820  001F5E  0100               	movlb	0	; () banked
 10821  001F60  6FDE               	movwf	??_sm_execute_ControlLearning& (0+255),b
 10822  001F62  6BDF               	clrf	(??_sm_execute_ControlLearning+1)& (0+255),b
 10823                           
 10824                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10825                           ; Switch size 1, requested type "simple"
 10826                           ; Number of cases is 1, Range of values is 0 to 0
 10827                           ; switch strategies available:
 10828                           ; Name         Instructions Cycles
 10829                           ; simple_byte            4     3 (average)
 10830                           ;	Chosen strategy is simple_byte
 10831  001F64  51DF               	movf	(??_sm_execute_ControlLearning+1)& (0+255),w,b
 10832  001F66  0A00               	xorlw	0	; case 0
 10833  001F68  A4D8               	btfss	status,2,c
 10834  001F6A  0012               	return	
 10835                           
 10836                           ; BSR set to: 0
 10837                           ; Switch size 1, requested type "simple"
 10838                           ; Number of cases is 6, Range of values is 0 to 5
 10839                           ; switch strategies available:
 10840                           ; Name         Instructions Cycles
 10841                           ; simple_byte           19    10 (average)
 10842                           ;	Chosen strategy is simple_byte
 10843  001F6C  51DE               	movf	??_sm_execute_ControlLearning& (0+255),w,b
 10844  001F6E  0A00               	xorlw	0	; case 0
 10845  001F70  B4D8               	btfsc	status,2,c
 10846  001F72  D570               	goto	l22475
 10847  001F74  0A01               	xorlw	1	; case 1
 10848  001F76  B4D8               	btfsc	status,2,c
 10849  001F78  D5BB               	goto	l22499
 10850  001F7A  0A03               	xorlw	3	; case 2
 10851  001F7C  B4D8               	btfsc	status,2,c
 10852  001F7E  D5FA               	goto	l22533
 10853  001F80  0A01               	xorlw	1	; case 3
 10854  001F82  B4D8               	btfsc	status,2,c
 10855  001F84  D65A               	goto	l22567
 10856  001F86  0A07               	xorlw	7	; case 4
 10857  001F88  B4D8               	btfsc	status,2,c
 10858  001F8A  D6AA               	goto	l22599
 10859  001F8C  0A01               	xorlw	1	; case 5
 10860  001F8E  A4D8               	btfss	status,2,c
 10861  001F90  0012               	return	
 10862  001F92  D72C               	goto	l22655
 10863  001F94                     __end_of_sm_execute_ControlLearning:
 10864                           	callstack 0
 10865                           
 10866 ;; *************** function _generateErrorLearnig *****************
 10867 ;; Defined at:
 10868 ;;		line 424 in file "sm_ControlLearning_MC50.c"
 10869 ;; Parameters:    Size  Location     Type
 10870 ;;		None
 10871 ;; Auto vars:     Size  Location     Type
 10872 ;;		None
 10873 ;; Return value:  Size  Location     Type
 10874 ;;                  1    wreg      void 
 10875 ;; Registers used:
 10876 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10877 ;; Tracked objects:
 10878 ;;		On entry : 3E/1
 10879 ;;		On exit  : 0/0
 10880 ;;		Unchanged: 0/0
 10881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10885 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10886 ;;Total ram usage:        0 bytes
 10887 ;; Hardware stack levels used: 1
 10888 ;; Hardware stack levels required when called: 6
 10889 ;; This function calls:
 10890 ;;		_sm_init
 10891 ;; This function is called by:
 10892 ;;		_sm_execute_ControlLearning
 10893 ;; This function uses a non-reentrant model
 10894 ;;
 10895                           
 10896                           	psect	text19
 10897  0085C0                     __ptext19:
 10898                           	callstack 0
 10899  0085C0                     _generateErrorLearnig:
 10900                           	callstack 22
 10901                           
 10902                           ;sm_ControlLearning_MC50.c: 428:     var_sys.LearningIsEnabled=NO;
 10903                           
 10904                           ;incstack = 0
 10905  0085C0  0E00               	movlw	0
 10906  0085C2  0101               	movlb	1	; () banked
 10907  0085C4  6F26               	movwf	(_var_sys+38)& (0+255),b	;volatile
 10908                           
 10909                           ; BSR set to: 1
 10910                           ;sm_ControlLearning_MC50.c: 430:     sm_init(&menuConfiguration_stateMachine,st_MainMenu
      +                          ,HIST_NONE);
 10911  0085C6  0EBF               	movlw	low _menuConfiguration_stateMachine
 10912  0085C8  6E12               	movwf	sm_init@psm^0,c
 10913  0085CA  0E02               	movlw	high _menuConfiguration_stateMachine
 10914  0085CC  6E13               	movwf	(sm_init@psm+1)^0,c
 10915  0085CE  0E00               	movlw	0
 10916  0085D0  6E15               	movwf	(sm_init@initial_state+1)^0,c
 10917  0085D2  0E00               	movlw	0
 10918  0085D4  6E14               	movwf	sm_init@initial_state^0,c
 10919  0085D6  0E00               	movlw	0
 10920  0085D8  6E16               	movwf	sm_init@hist_mode^0,c
 10921  0085DA  EC8A  F044         	call	_sm_init	;wreg free
 10922                           
 10923                           ;sm_ControlLearning_MC50.c: 431:     sm_init(&main_stateMachine,st_standBy,HIST_NONE);
 10924  0085DE  0EEE               	movlw	low _main_stateMachine
 10925  0085E0  6E12               	movwf	sm_init@psm^0,c
 10926  0085E2  0E01               	movlw	high _main_stateMachine
 10927  0085E4  6E13               	movwf	(sm_init@psm+1)^0,c
 10928  0085E6  0E00               	movlw	0
 10929  0085E8  6E15               	movwf	(sm_init@initial_state+1)^0,c
 10930  0085EA  0E00               	movlw	0
 10931  0085EC  6E14               	movwf	sm_init@initial_state^0,c
 10932  0085EE  0E00               	movlw	0
 10933  0085F0  6E16               	movwf	sm_init@hist_mode^0,c
 10934  0085F2  EC8A  F044         	call	_sm_init	;wreg free
 10935                           
 10936                           ;sm_ControlLearning_MC50.c: 432:     sm_init(&controlGate_stateMachine,st_Idle,HIST_NONE
      +                          );
 10937  0085F6  0EE3               	movlw	low _controlGate_stateMachine
 10938  0085F8  6E12               	movwf	sm_init@psm^0,c
 10939  0085FA  0E01               	movlw	high _controlGate_stateMachine
 10940  0085FC  6E13               	movwf	(sm_init@psm+1)^0,c
 10941  0085FE  0E00               	movlw	0
 10942  008600  6E15               	movwf	(sm_init@initial_state+1)^0,c
 10943  008602  0E00               	movlw	0
 10944  008604  6E14               	movwf	sm_init@initial_state^0,c
 10945  008606  0E00               	movlw	0
 10946  008608  6E16               	movwf	sm_init@hist_mode^0,c
 10947  00860A  EC8A  F044         	call	_sm_init	;wreg free
 10948                           
 10949                           ;sm_ControlLearning_MC50.c: 433:     sm_init(&controlLearning_stateMachine,st_InitLearni
      +                          ng,HIST_NONE);
 10950  00860E  0EB4               	movlw	low _controlLearning_stateMachine
 10951  008610  6E12               	movwf	sm_init@psm^0,c
 10952  008612  0E02               	movlw	high _controlLearning_stateMachine
 10953  008614  6E13               	movwf	(sm_init@psm+1)^0,c
 10954  008616  0E00               	movlw	0
 10955  008618  6E15               	movwf	(sm_init@initial_state+1)^0,c
 10956  00861A  0E00               	movlw	0
 10957  00861C  6E14               	movwf	sm_init@initial_state^0,c
 10958  00861E  0E00               	movlw	0
 10959  008620  6E16               	movwf	sm_init@hist_mode^0,c
 10960  008622  EC8A  F044         	call	_sm_init	;wreg free
 10961  008626  0012               	return		;funcret
 10962  008628                     __end_of_generateErrorLearnig:
 10963                           	callstack 0
 10964                           
 10965 ;; *************** function _sm_init *****************
 10966 ;; Defined at:
 10967 ;;		line 12 in file "sm_common_MC50.c"
 10968 ;; Parameters:    Size  Location     Type
 10969 ;;  psm             2   17[COMRAM] PTR struct .
 10970 ;;		 -> controlLearning_stateMachine(11), controlGate_stateMachine(11), main_stateMachine(11), menuConfiguration_stateMa
      +chine(11), 
 10971 ;;  initial_stat    2   19[COMRAM] int 
 10972 ;;  hist_mode       1   21[COMRAM] enum E348
 10973 ;; Auto vars:     Size  Location     Type
 10974 ;;		None
 10975 ;; Return value:  Size  Location     Type
 10976 ;;                  1    wreg      void 
 10977 ;; Registers used:
 10978 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10979 ;; Tracked objects:
 10980 ;;		On entry : 0/1
 10981 ;;		On exit  : 0/0
 10982 ;;		Unchanged: 0/0
 10983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10984 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10985 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10987 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10988 ;;Total ram usage:        5 bytes
 10989 ;; Hardware stack levels used: 1
 10990 ;; Hardware stack levels required when called: 5
 10991 ;; This function calls:
 10992 ;;		_sm_restart
 10993 ;; This function is called by:
 10994 ;;		_main
 10995 ;;		_generateErrorLearnig
 10996 ;; This function uses a non-reentrant model
 10997 ;;
 10998                           
 10999                           	psect	text20
 11000  008914                     __ptext20:
 11001                           	callstack 0
 11002  008914                     _sm_init:
 11003                           	callstack 25
 11004                           
 11005                           ;sm_common_MC50.c: 12: void sm_init(sm_t *psm, int initial_state, sm_history_t hist_mode
      +                          );sm_common_MC50.c: 13: {;sm_common_MC50.c: 14:  psm->initial_state = initial_state;
 11006                           
 11007                           ;incstack = 0
 11008  008914  EE20 F002          	lfsr	2,2
 11009  008918  5012               	movf	sm_init@psm^0,w,c
 11010  00891A  26D9               	addwf	fsr2l,f,c
 11011  00891C  5013               	movf	(sm_init@psm+1)^0,w,c
 11012  00891E  22DA               	addwfc	fsr2h,f,c
 11013  008920  C014  FFDE         	movff	sm_init@initial_state,postinc2
 11014  008924  C015  FFDD         	movff	sm_init@initial_state+1,postdec2
 11015                           
 11016                           ;sm_common_MC50.c: 15:  psm->history = hist_mode;
 11017  008928  EE20 F006          	lfsr	2,6
 11018  00892C  5012               	movf	sm_init@psm^0,w,c
 11019  00892E  26D9               	addwf	fsr2l,f,c
 11020  008930  5013               	movf	(sm_init@psm+1)^0,w,c
 11021  008932  22DA               	addwfc	fsr2h,f,c
 11022  008934  C016  FFDF         	movff	sm_init@hist_mode,indf2
 11023                           
 11024                           ;sm_common_MC50.c: 16:  psm->current_state = initial_state;
 11025  008938  C012  FFD9         	movff	sm_init@psm,fsr2l
 11026  00893C  C013  FFDA         	movff	sm_init@psm+1,fsr2h
 11027  008940  C014  FFDE         	movff	sm_init@initial_state,postinc2
 11028  008944  C015  FFDD         	movff	sm_init@initial_state+1,postdec2
 11029                           
 11030                           ;sm_common_MC50.c: 19:  psm->parent_machine = ((void*)0);
 11031  008948  EE20 F007          	lfsr	2,7
 11032  00894C  5012               	movf	sm_init@psm^0,w,c
 11033  00894E  26D9               	addwf	fsr2l,f,c
 11034  008950  5013               	movf	(sm_init@psm+1)^0,w,c
 11035  008952  22DA               	addwfc	fsr2h,f,c
 11036  008954  0E00               	movlw	0
 11037  008956  6EDE               	movwf	postinc2,c
 11038  008958  0E00               	movlw	0
 11039  00895A  6EDD               	movwf	postdec2,c
 11040                           
 11041                           ;sm_common_MC50.c: 20:  sm_restart(psm);
 11042  00895C  C012  F010         	movff	sm_init@psm,sm_restart@psm
 11043  008960  C013  F011         	movff	sm_init@psm+1,sm_restart@psm+1
 11044  008964  EC8F  F046         	call	_sm_restart	;wreg free
 11045  008968  0012               	return		;funcret
 11046  00896A                     __end_of_sm_init:
 11047                           	callstack 0
 11048                           
 11049 ;; *************** function _sm_restart *****************
 11050 ;; Defined at:
 11051 ;;		line 23 in file "sm_common_MC50.c"
 11052 ;; Parameters:    Size  Location     Type
 11053 ;;  psm             2   15[COMRAM] PTR struct .
 11054 ;;		 -> controlLearning_stateMachine(11), controlGate_stateMachine(11), main_stateMachine(11), menuConfiguration_stateMa
      +chine(11), 
 11055 ;; Auto vars:     Size  Location     Type
 11056 ;;		None
 11057 ;; Return value:  Size  Location     Type
 11058 ;;                  1    wreg      void 
 11059 ;; Registers used:
 11060 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 11061 ;; Tracked objects:
 11062 ;;		On entry : 0/1
 11063 ;;		On exit  : 0/0
 11064 ;;		Unchanged: 0/0
 11065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11066 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11069 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11070 ;;Total ram usage:        2 bytes
 11071 ;; Hardware stack levels used: 1
 11072 ;; Hardware stack levels required when called: 4
 11073 ;; This function calls:
 11074 ;;		Nothing
 11075 ;; This function is called by:
 11076 ;;		_sm_init
 11077 ;; This function uses a non-reentrant model
 11078 ;;
 11079                           
 11080                           	psect	text21
 11081  008D1E                     __ptext21:
 11082                           	callstack 0
 11083  008D1E                     _sm_restart:
 11084                           	callstack 25
 11085                           
 11086                           ;sm_common_MC50.c: 24:  if(psm->history == HIST_NONE){
 11087                           
 11088                           ;incstack = 0
 11089  008D1E  EE20 F006          	lfsr	2,6
 11090  008D22  5010               	movf	sm_restart@psm^0,w,c
 11091  008D24  26D9               	addwf	fsr2l,f,c
 11092  008D26  5011               	movf	(sm_restart@psm+1)^0,w,c
 11093  008D28  22DA               	addwfc	fsr2h,f,c
 11094  008D2A  50DF               	movf	indf2,w,c
 11095  008D2C  A4D8               	btfss	status,2,c
 11096  008D2E  D00E               	goto	l20093
 11097                           
 11098                           ;sm_common_MC50.c: 25:   psm->current_state = psm->initial_state;
 11099  008D30  EE20 F002          	lfsr	2,2
 11100  008D34  5010               	movf	sm_restart@psm^0,w,c
 11101  008D36  26D9               	addwf	fsr2l,f,c
 11102  008D38  5011               	movf	(sm_restart@psm+1)^0,w,c
 11103  008D3A  22DA               	addwfc	fsr2h,f,c
 11104  008D3C  C010  FFE1         	movff	sm_restart@psm,fsr1l
 11105  008D40  C011  FFE2         	movff	sm_restart@psm+1,fsr1h
 11106  008D44  CFDE FFE6          	movff	postinc2,postinc1
 11107  008D48  CFDD FFE5          	movff	postdec2,postdec1
 11108  008D4C                     l20093:
 11109                           
 11110                           ;sm_common_MC50.c: 27:  psm->last_event = 0;
 11111  008D4C  EE20 F004          	lfsr	2,4
 11112  008D50  5010               	movf	sm_restart@psm^0,w,c
 11113  008D52  26D9               	addwf	fsr2l,f,c
 11114  008D54  5011               	movf	(sm_restart@psm+1)^0,w,c
 11115  008D56  22DA               	addwfc	fsr2h,f,c
 11116  008D58  0E00               	movlw	0
 11117  008D5A  6EDE               	movwf	postinc2,c
 11118  008D5C  0E00               	movlw	0
 11119  008D5E  6EDD               	movwf	postdec2,c
 11120  008D60  0012               	return		;funcret
 11121  008D62                     __end_of_sm_restart:
 11122                           	callstack 0
 11123                           
 11124 ;; *************** function _clearLearningValue *****************
 11125 ;; Defined at:
 11126 ;;		line 436 in file "sm_ControlLearning_MC50.c"
 11127 ;; Parameters:    Size  Location     Type
 11128 ;;		None
 11129 ;; Auto vars:     Size  Location     Type
 11130 ;;		None
 11131 ;; Return value:  Size  Location     Type
 11132 ;;                  1    wreg      void 
 11133 ;; Registers used:
 11134 ;;		wreg, status,2
 11135 ;; Tracked objects:
 11136 ;;		On entry : 3F/1
 11137 ;;		On exit  : 3F/0
 11138 ;;		Unchanged: 0/0
 11139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11143 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11144 ;;Total ram usage:        0 bytes
 11145 ;; Hardware stack levels used: 1
 11146 ;; Hardware stack levels required when called: 4
 11147 ;; This function calls:
 11148 ;;		Nothing
 11149 ;; This function is called by:
 11150 ;;		_sm_execute_ControlLearning
 11151 ;; This function uses a non-reentrant model
 11152 ;;
 11153                           
 11154                           	psect	text22
 11155  008058                     __ptext22:
 11156                           	callstack 0
 11157  008058                     _clearLearningValue:
 11158                           	callstack 24
 11159                           
 11160                           ; BSR set to: 1
 11161                           ;sm_ControlLearning_MC50.c: 438:     learn_st.timeOpen=0;
 11162                           
 11163                           ;incstack = 0
 11164  008058  0E00               	movlw	0
 11165  00805A  0100               	movlb	0	; () banked
 11166  00805C  6F64               	movwf	(_learn_st+4)& (0+255),b	;volatile
 11167  00805E  0E00               	movlw	0
 11168  008060  6F65               	movwf	(_learn_st+5)& (0+255),b	;volatile
 11169  008062  0E00               	movlw	0
 11170  008064  6F66               	movwf	(_learn_st+6)& (0+255),b	;volatile
 11171  008066  0E00               	movlw	0
 11172  008068  6F67               	movwf	(_learn_st+7)& (0+255),b	;volatile
 11173                           
 11174                           ;sm_ControlLearning_MC50.c: 439:     learn_st.timeClose=0;
 11175  00806A  0E00               	movlw	0
 11176  00806C  6F60               	movwf	_learn_st& (0+255),b	;volatile
 11177  00806E  0E00               	movlw	0
 11178  008070  6F61               	movwf	(_learn_st+1)& (0+255),b	;volatile
 11179  008072  0E00               	movlw	0
 11180  008074  6F62               	movwf	(_learn_st+2)& (0+255),b	;volatile
 11181  008076  0E00               	movlw	0
 11182  008078  6F63               	movwf	(_learn_st+3)& (0+255),b	;volatile
 11183                           
 11184                           ;sm_ControlLearning_MC50.c: 440:     learn_st.timeDecelerationOpen=0;
 11185  00807A  0E00               	movlw	0
 11186  00807C  6F69               	movwf	(_learn_st+9)& (0+255),b	;volatile
 11187                           
 11188                           ;sm_ControlLearning_MC50.c: 441:     learn_st.timeDecelerationClose=0;
 11189  00807E  0E00               	movlw	0
 11190  008080  6F68               	movwf	(_learn_st+8)& (0+255),b	;volatile
 11191                           
 11192                           ;sm_ControlLearning_MC50.c: 442:     learn_st.openCurrent=0;
 11193  008082  0E00               	movlw	0
 11194  008084  6F6B               	movwf	(_learn_st+11)& (0+255),b	;volatile
 11195  008086  0E00               	movlw	0
 11196  008088  6F6A               	movwf	(_learn_st+10)& (0+255),b	;volatile
 11197                           
 11198                           ;sm_ControlLearning_MC50.c: 443:     learn_st.closeCurrent=0;
 11199  00808A  0E00               	movlw	0
 11200  00808C  6F6D               	movwf	(_learn_st+13)& (0+255),b	;volatile
 11201  00808E  0E00               	movlw	0
 11202  008090  6F6C               	movwf	(_learn_st+12)& (0+255),b	;volatile
 11203                           
 11204                           ;sm_ControlLearning_MC50.c: 444:     learn_st.openHistCurrent=0;
 11205  008092  0E00               	movlw	0
 11206  008094  6F6F               	movwf	(_learn_st+15)& (0+255),b	;volatile
 11207  008096  0E00               	movlw	0
 11208  008098  6F6E               	movwf	(_learn_st+14)& (0+255),b	;volatile
 11209                           
 11210                           ;sm_ControlLearning_MC50.c: 445:     learn_st.closeHistCurrent=0;
 11211  00809A  0E00               	movlw	0
 11212  00809C  6F71               	movwf	(_learn_st+17)& (0+255),b	;volatile
 11213  00809E  0E00               	movlw	0
 11214  0080A0  6F70               	movwf	(_learn_st+16)& (0+255),b	;volatile
 11215                           
 11216                           ;sm_ControlLearning_MC50.c: 446:     var_sys_NVM.learningCurrentNormalClose=0;
 11217  0080A2  0E00               	movlw	0
 11218  0080A4  6FC9               	movwf	(_var_sys_NVM+49)& (0+255),b	;volatile
 11219  0080A6  0E00               	movlw	0
 11220  0080A8  6FC8               	movwf	(_var_sys_NVM+48)& (0+255),b	;volatile
 11221                           
 11222                           ;sm_ControlLearning_MC50.c: 447:     var_sys_NVM.learningCurrentNormalOpen=0;
 11223  0080AA  0E00               	movlw	0
 11224  0080AC  6FCB               	movwf	(_var_sys_NVM+51)& (0+255),b	;volatile
 11225  0080AE  0E00               	movlw	0
 11226  0080B0  6FCA               	movwf	(_var_sys_NVM+50)& (0+255),b	;volatile
 11227                           
 11228                           ;sm_ControlLearning_MC50.c: 448:     var_sys_NVM.learningCurrentDecelarationClose=0;
 11229  0080B2  0E00               	movlw	0
 11230  0080B4  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 11231  0080B6  0E00               	movlw	0
 11232  0080B8  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 11233  0080BA  0E00               	movlw	0
 11234  0080BC  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 11235  0080BE  0E00               	movlw	0
 11236  0080C0  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 11237                           
 11238                           ;sm_ControlLearning_MC50.c: 449:     var_sys_NVM.learningCurrentDecelarationOpen=0;
 11239  0080C2  0E00               	movlw	0
 11240  0080C4  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 11241  0080C6  0E00               	movlw	0
 11242  0080C8  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 11243  0080CA  0E00               	movlw	0
 11244  0080CC  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 11245  0080CE  0E00               	movlw	0
 11246  0080D0  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 11247                           
 11248                           ; BSR set to: 0
 11249  0080D2  0012               	return		;funcret
 11250  0080D4                     __end_of_clearLearningValue:
 11251                           	callstack 0
 11252                           
 11253 ;; *************** function _calculateMean *****************
 11254 ;; Defined at:
 11255 ;;		line 411 in file "sm_ControlLearning_MC50.c"
 11256 ;; Parameters:    Size  Location     Type
 11257 ;;  meanValue       4   15[COMRAM] unsigned long 
 11258 ;;  newValue        4   19[COMRAM] unsigned long 
 11259 ;; Auto vars:     Size  Location     Type
 11260 ;;		None
 11261 ;; Return value:  Size  Location     Type
 11262 ;;                  4   15[COMRAM] unsigned long 
 11263 ;; Registers used:
 11264 ;;		wreg, status,2, status,0
 11265 ;; Tracked objects:
 11266 ;;		On entry : 3E/1
 11267 ;;		On exit  : 3E/0
 11268 ;;		Unchanged: 3E/0
 11269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11270 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11272 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11273 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11274 ;;Total ram usage:       12 bytes
 11275 ;; Hardware stack levels used: 1
 11276 ;; Hardware stack levels required when called: 4
 11277 ;; This function calls:
 11278 ;;		Nothing
 11279 ;; This function is called by:
 11280 ;;		_sm_execute_ControlLearning
 11281 ;; This function uses a non-reentrant model
 11282 ;;
 11283                           
 11284                           	psect	text23
 11285  00868E                     __ptext23:
 11286                           	callstack 0
 11287  00868E                     _calculateMean:
 11288                           	callstack 24
 11289                           
 11290                           ;sm_ControlLearning_MC50.c: 411: unsigned long calculateMean(unsigned long meanValue,uns
      +                          igned long newValue);sm_ControlLearning_MC50.c: 412: {;sm_ControlLearning_MC50.c: 413:  
      +                             if(meanValue==0)
 11291                           
 11292                           ; BSR set to: 0
 11293                           ;incstack = 0
 11294  00868E  5010               	movf	calculateMean@meanValue^0,w,c
 11295  008690  1011               	iorwf	(calculateMean@meanValue+1)^0,w,c
 11296  008692  1012               	iorwf	(calculateMean@meanValue+2)^0,w,c
 11297  008694  1013               	iorwf	(calculateMean@meanValue+3)^0,w,c
 11298  008696  A4D8               	btfss	status,2,c
 11299  008698  D009               	goto	l21053
 11300                           
 11301                           ;sm_ControlLearning_MC50.c: 414:     {;sm_ControlLearning_MC50.c: 415:         meanValue
      +                          =newValue;
 11302  00869A  C014  F010         	movff	calculateMean@newValue,calculateMean@meanValue
 11303  00869E  C015  F011         	movff	calculateMean@newValue+1,calculateMean@meanValue+1
 11304  0086A2  C016  F012         	movff	calculateMean@newValue+2,calculateMean@meanValue+2
 11305  0086A6  C017  F013         	movff	calculateMean@newValue+3,calculateMean@meanValue+3
 11306                           
 11307                           ;sm_ControlLearning_MC50.c: 416:     }
 11308  0086AA  D019               	goto	l21055
 11309  0086AC                     l21053:
 11310                           
 11311                           ;sm_ControlLearning_MC50.c: 418:     {;sm_ControlLearning_MC50.c: 419:         meanValue
      +                          =(meanValue+newValue)/2;
 11312  0086AC  5014               	movf	calculateMean@newValue^0,w,c
 11313  0086AE  2410               	addwf	calculateMean@meanValue^0,w,c
 11314  0086B0  6E18               	movwf	??_calculateMean^0,c
 11315  0086B2  5015               	movf	(calculateMean@newValue+1)^0,w,c
 11316  0086B4  2011               	addwfc	(calculateMean@meanValue+1)^0,w,c
 11317  0086B6  6E19               	movwf	(??_calculateMean+1)^0,c
 11318  0086B8  5016               	movf	(calculateMean@newValue+2)^0,w,c
 11319  0086BA  2012               	addwfc	(calculateMean@meanValue+2)^0,w,c
 11320  0086BC  6E1A               	movwf	(??_calculateMean+2)^0,c
 11321  0086BE  5017               	movf	(calculateMean@newValue+3)^0,w,c
 11322  0086C0  2013               	addwfc	(calculateMean@meanValue+3)^0,w,c
 11323  0086C2  6E1B               	movwf	(??_calculateMean+3)^0,c
 11324  0086C4  90D8               	bcf	status,0,c
 11325  0086C6  321B               	rrcf	(??_calculateMean+3)^0,f,c
 11326  0086C8  321A               	rrcf	(??_calculateMean+2)^0,f,c
 11327  0086CA  3219               	rrcf	(??_calculateMean+1)^0,f,c
 11328  0086CC  3218               	rrcf	??_calculateMean^0,f,c
 11329  0086CE  C018  F010         	movff	??_calculateMean,calculateMean@meanValue
 11330  0086D2  C019  F011         	movff	??_calculateMean+1,calculateMean@meanValue+1
 11331  0086D6  C01A  F012         	movff	??_calculateMean+2,calculateMean@meanValue+2
 11332  0086DA  C01B  F013         	movff	??_calculateMean+3,calculateMean@meanValue+3
 11333  0086DE                     l21055:
 11334                           
 11335                           ;sm_ControlLearning_MC50.c: 421:     return meanValue;
 11336  0086DE  C010  F010         	movff	calculateMean@meanValue,?_calculateMean
 11337  0086E2  C011  F011         	movff	calculateMean@meanValue+1,?_calculateMean+1
 11338  0086E6  C012  F012         	movff	calculateMean@meanValue+2,?_calculateMean+2
 11339  0086EA  C013  F013         	movff	calculateMean@meanValue+3,?_calculateMean+3
 11340  0086EE  0012               	return		;funcret
 11341  0086F0                     __end_of_calculateMean:
 11342                           	callstack 0
 11343                           
 11344 ;; *************** function _actionZone_Opening *****************
 11345 ;; Defined at:
 11346 ;;		line 374 in file "sm_ControlGate_MC50.c"
 11347 ;; Parameters:    Size  Location     Type
 11348 ;;		None
 11349 ;; Auto vars:     Size  Location     Type
 11350 ;;  typeOpenOrde    1   14[BANK0 ] enum E10372
 11351 ;;  securityOpen    1   13[BANK0 ] enum E10397
 11352 ;;  securityClos    1   12[BANK0 ] enum E10397
 11353 ;; Return value:  Size  Location     Type
 11354 ;;                  1    wreg      void 
 11355 ;; Registers used:
 11356 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11357 ;; Tracked objects:
 11358 ;;		On entry : 3F/0
 11359 ;;		On exit  : 0/0
 11360 ;;		Unchanged: 0/0
 11361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11363 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11365 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11366 ;;Total ram usage:        3 bytes
 11367 ;; Hardware stack levels used: 1
 11368 ;; Hardware stack levels required when called: 8
 11369 ;; This function calls:
 11370 ;;		_CloseOrder
 11371 ;;		_GetOpenOrder
 11372 ;;		_GetSecurityStateInClosing
 11373 ;;		_GetSecurityStateInOpening
 11374 ;;		_InitFullAutoTime
 11375 ;;		_InitWalkAutoTime
 11376 ;;		_SetSegmentValueIntermitent
 11377 ;;		_StopOrder
 11378 ;;		_VerifyFollowMe
 11379 ;;		_controlVelocity
 11380 ;;		_setPositionInvertionInClosing
 11381 ;;		_setPositionInvertionInOpening
 11382 ;;		_sm_send_event
 11383 ;; This function is called by:
 11384 ;;		_sm_execute_ControlGate
 11385 ;; This function uses a non-reentrant model
 11386 ;;
 11387                           
 11388                           	psect	text24
 11389  004A4E                     __ptext24:
 11390                           	callstack 0
 11391  004A4E                     _actionZone_Opening:
 11392                           	callstack 21
 11393                           
 11394                           ; BSR set to: 0
 11395                           ;sm_ControlGate_MC50.c: 375:     StateEnum securityClosing = GetSecurityStateInClosing()
      +                          ;
 11396                           
 11397                           ;incstack = 0
 11398  004A4E  ECBE  F03B         	call	_GetSecurityStateInClosing	;wreg free
 11399  004A52  0100               	movlb	0	; () banked
 11400  004A54  6FE4               	movwf	actionZone_Opening@securityClosing& (0+255),b
 11401                           
 11402                           ;sm_ControlGate_MC50.c: 376:     StateEnum securityOpening = GetSecurityStateInOpening()
      +                          ;
 11403  004A56  EC11  F03C         	call	_GetSecurityStateInOpening	;wreg free
 11404  004A5A  0100               	movlb	0	; () banked
 11405  004A5C  6FE5               	movwf	actionZone_Opening@securityOpening& (0+255),b
 11406                           
 11407                           ; BSR set to: 0
 11408                           ;sm_ControlGate_MC50.c: 377:     TypeCMD typeOpenOrder = GetOpenOrder();
 11409  004A5E  EC76  F02B         	call	_GetOpenOrder	;wreg free
 11410  004A62  0100               	movlb	0	; () banked
 11411  004A64  6FE6               	movwf	actionZone_Opening@typeOpenOrder& (0+255),b
 11412                           
 11413                           ; BSR set to: 0
 11414                           ;sm_ControlGate_MC50.c: 380:     controlVelocity();
 11415  004A66  EC87  F028         	call	_controlVelocity	;wreg free
 11416                           
 11417                           ;sm_ControlGate_MC50.c: 381:     InitFullAutoTime();
 11418  004A6A  ECA9  F04A         	call	_InitFullAutoTime	;wreg free
 11419                           
 11420                           ; BSR set to: 0
 11421                           ;sm_ControlGate_MC50.c: 383:     var_sys.passoAPassoAutoClose = NO;
 11422  004A6E  0E00               	movlw	0
 11423  004A70  0101               	movlb	1	; () banked
 11424  004A72  6F50               	movwf	(_var_sys+80)& (0+255),b	;volatile
 11425                           
 11426                           ; BSR set to: 1
 11427                           ;sm_ControlGate_MC50.c: 385:     VerifyFollowMe(securityClosing);
 11428  004A74  0100               	movlb	0	; () banked
 11429  004A76  51E4               	movf	actionZone_Opening@securityClosing& (0+255),w,b
 11430  004A78  EC01  F04A         	call	_VerifyFollowMe
 11431                           
 11432                           ;sm_ControlGate_MC50.c: 386:     if (var_sys.NumberOffErrors > 3) {
 11433  004A7C  0E03               	movlw	3
 11434  004A7E  0101               	movlb	1	; () banked
 11435  004A80  6543               	cpfsgt	(_var_sys+67)& (0+255),b	;volatile
 11436  004A82  D00D               	goto	l21931
 11437                           
 11438                           ; BSR set to: 1
 11439                           ;sm_ControlGate_MC50.c: 388:         var_sys.StateMotor = Stopped;
 11440  004A84  0E00               	movlw	0
 11441  004A86  6F00               	movwf	_var_sys& (0+255),b	;volatile
 11442  004A88                     l21929:
 11443                           
 11444                           ; BSR set to: 1
 11445                           ;sm_ControlGate_MC50.c: 389:         sm_send_event(&controlGate_stateMachine, ev_ErrorGa
      +                          te);
 11446  004A88  0EE3               	movlw	low _controlGate_stateMachine
 11447  004A8A  6E12               	movwf	sm_send_event@psm^0,c
 11448  004A8C  0E01               	movlw	high _controlGate_stateMachine
 11449  004A8E  6E13               	movwf	(sm_send_event@psm+1)^0,c
 11450  004A90  0E00               	movlw	0
 11451  004A92  6E15               	movwf	(sm_send_event@event+1)^0,c
 11452  004A94  0E10               	movlw	16
 11453  004A96  6E14               	movwf	sm_send_event@event^0,c
 11454  004A98  ECA7  F043         	call	_sm_send_event	;wreg free
 11455                           
 11456                           ;sm_ControlGate_MC50.c: 390:     } else if (var_sys.StateMotor == InOpenWalk && ts_syste
      +                          m.timeOpenWalk <= 0)
 11457  004A9C  0012               	return	
 11458  004A9E                     l21931:
 11459                           
 11460                           ; BSR set to: 1
 11461  004A9E  0E02               	movlw	2
 11462  004AA0  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 11463  004AA2  A4D8               	btfss	status,2,c
 11464  004AA4  D013               	goto	l21945
 11465                           
 11466                           ; BSR set to: 1
 11467  004AA6  BFAC               	btfsc	(_ts_system+17)& (0+255),7,b	;volatile
 11468  004AA8  D005               	goto	u25470
 11469  004AAA  51AC               	movf	(_ts_system+17)& (0+255),w,b	;volatile
 11470  004AAC  E10F               	bnz	l21945
 11471  004AAE  05AB               	decf	(_ts_system+16)& (0+255),w,b	;volatile
 11472  004AB0  B0D8               	btfsc	status,0,c
 11473  004AB2  D00C               	goto	l21945
 11474  004AB4                     u25470:
 11475                           
 11476                           ; BSR set to: 1
 11477                           ;sm_ControlGate_MC50.c: 391:     {;sm_ControlGate_MC50.c: 396:         setPositionInvert
      +                          ionInOpening();
 11478  004AB4  EC1A  F039         	call	_setPositionInvertionInOpening	;wreg free
 11479                           
 11480                           ; BSR set to: 1
 11481                           ;sm_ControlGate_MC50.c: 397:         StopOrder();
 11482  004AB8  EC57  F04A         	call	_StopOrder	;wreg free
 11483                           
 11484                           ;sm_ControlGate_MC50.c: 398:         InitWalkAutoTime();
 11485  004ABC  EC2E  F04B         	call	_InitWalkAutoTime	;wreg free
 11486                           
 11487                           ; BSR set to: 0
 11488                           ;sm_ControlGate_MC50.c: 399:         var_sys.passoAPassoAutoClose = YES;
 11489  004AC0  0E01               	movlw	1
 11490  004AC2  0101               	movlb	1	; () banked
 11491  004AC4  6F50               	movwf	(_var_sys+80)& (0+255),b	;volatile
 11492                           
 11493                           ; BSR set to: 1
 11494                           ;sm_ControlGate_MC50.c: 400:         Abertura_pedonal = 1;
 11495  004AC6  0E01               	movlw	1
 11496  004AC8  6F8E               	movwf	_Abertura_pedonal& (0+255),b
 11497                           
 11498                           ;sm_ControlGate_MC50.c: 402:     } else if ((var_sys.FimCurso_OpenIsEnabled == YES)||(va
      +                          r_sys.TimeMaxMotorIsON<=0) && (var_sys.LearningIsEnabled==NO) && (var_sys.PositionIsLost
      +                          ==NO) && (var_sys.Statedoorcontrol == st_Opening))
 11499  004ACA  0012               	return	
 11500  004ACC                     l21945:
 11501                           
 11502                           ; BSR set to: 1
 11503  004ACC  0504               	decf	(_var_sys+4)& (0+255),w,b	;volatile
 11504  004ACE  B4D8               	btfsc	status,2,c
 11505  004AD0  D010               	goto	u25520
 11506                           
 11507                           ; BSR set to: 1
 11508  004AD2  5118               	movf	(_var_sys+24)& (0+255),w,b	;volatile
 11509  004AD4  1119               	iorwf	(_var_sys+25)& (0+255),w,b	;volatile
 11510  004AD6  111A               	iorwf	(_var_sys+26)& (0+255),w,b	;volatile
 11511  004AD8  111B               	iorwf	(_var_sys+27)& (0+255),w,b	;volatile
 11512  004ADA  A4D8               	btfss	status,2,c
 11513  004ADC  D02F               	goto	l21965
 11514                           
 11515                           ; BSR set to: 1
 11516  004ADE  5126               	movf	(_var_sys+38)& (0+255),w,b	;volatile
 11517  004AE0  A4D8               	btfss	status,2,c
 11518  004AE2  D02C               	goto	l21965
 11519                           
 11520                           ; BSR set to: 1
 11521  004AE4  5148               	movf	(_var_sys+72)& (0+255),w,b	;volatile
 11522  004AE6  A4D8               	btfss	status,2,c
 11523  004AE8  D029               	goto	l21965
 11524                           
 11525                           ; BSR set to: 1
 11526  004AEA  0E02               	movlw	2
 11527  004AEC  191C               	xorwf	(_var_sys+28)& (0+255),w,b	;volatile
 11528  004AEE  A4D8               	btfss	status,2,c
 11529  004AF0  D025               	goto	l21965
 11530  004AF2                     u25520:
 11531                           
 11532                           ; BSR set to: 1
 11533                           ;sm_ControlGate_MC50.c: 403:     {;sm_ControlGate_MC50.c: 408:         var_sys.Statedoor
      +                          control = st_Opened;
 11534  004AF2  0E04               	movlw	4
 11535  004AF4  6F1C               	movwf	(_var_sys+28)& (0+255),b	;volatile
 11536                           
 11537                           ; BSR set to: 1
 11538                           ;sm_ControlGate_MC50.c: 409:         var_sys.PositionActual = var_sys_NVM.learningTimeTo
      +                          Close;
 11539  004AF6  C0D0  F11E         	movff	_var_sys_NVM+56,_var_sys+30	;volatile
 11540  004AFA  C0D1  F11F         	movff	_var_sys_NVM+57,_var_sys+31	;volatile
 11541  004AFE  C0D2  F120         	movff	_var_sys_NVM+58,_var_sys+32	;volatile
 11542  004B02  C0D3  F121         	movff	_var_sys_NVM+59,_var_sys+33	;volatile
 11543                           
 11544                           ;sm_ControlGate_MC50.c: 410:         var_sys.AutoInversionActiveStop = NO;
 11545  004B06  0E00               	movlw	0
 11546  004B08  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 11547                           
 11548                           ;sm_ControlGate_MC50.c: 411:         var_sys.PositionIsLost = NO;
 11549  004B0A  0E00               	movlw	0
 11550  004B0C  6F48               	movwf	(_var_sys+72)& (0+255),b	;volatile
 11551                           
 11552                           ;sm_ControlGate_MC50.c: 412:         var_sys.DigitSinalizedTemp = 1;
 11553  004B0E  0E01               	movlw	1
 11554  004B10  6F22               	movwf	(_var_sys+34)& (0+255),b	;volatile
 11555                           
 11556                           ;sm_ControlGate_MC50.c: 413:         var_sys.NumberOffErrors = 0;
 11557  004B12  0E00               	movlw	0
 11558  004B14  6F43               	movwf	(_var_sys+67)& (0+255),b	;volatile
 11559                           
 11560                           ;sm_ControlGate_MC50.c: 414:         ts_system.timeSinalizationDigit = (1000/50) * 2;
 11561  004B16  0E00               	movlw	0
 11562  004B18  6FA8               	movwf	(_ts_system+13)& (0+255),b	;volatile
 11563  004B1A  0E28               	movlw	40
 11564  004B1C  6FA7               	movwf	(_ts_system+12)& (0+255),b	;volatile
 11565                           
 11566                           ; BSR set to: 1
 11567                           ;sm_ControlGate_MC50.c: 415:         SetSegmentValueIntermitent(dF, d0, ( 200/50));
 11568  004B1E  0E00               	movlw	0
 11569  004B20  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 11570  004B22  0E00               	movlw	0
 11571  004B24  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 11572  004B26  0E04               	movlw	4
 11573  004B28  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 11574  004B2A  0E0F               	movlw	15
 11575  004B2C  EC46  F048         	call	_SetSegmentValueIntermitent
 11576                           
 11577                           ; BSR set to: 1
 11578                           ;sm_ControlGate_MC50.c: 416:         StopOrder();
 11579  004B30  EC57  F04A         	call	_StopOrder	;wreg free
 11580                           
 11581                           ;sm_ControlGate_MC50.c: 417:         var_sys.passoAPassoAutoClose = YES;
 11582  004B34  0E01               	movlw	1
 11583  004B36  0101               	movlb	1	; () banked
 11584  004B38  6F50               	movwf	(_var_sys+80)& (0+255),b	;volatile
 11585                           
 11586                           ;sm_ControlGate_MC50.c: 419:     }
 11587  004B3A  0012               	return	
 11588  004B3C                     l21965:
 11589                           
 11590                           ; BSR set to: 1
 11591  004B3C  0100               	movlb	0	; () banked
 11592  004B3E  05E5               	decf	actionZone_Opening@securityOpening& (0+255),w,b
 11593  004B40  B4D8               	btfsc	status,2,c
 11594  004B42  D012               	goto	u25560
 11595                           
 11596                           ; BSR set to: 0
 11597  004B44  0101               	movlb	1	; () banked
 11598  004B46  BFC6               	btfsc	(_ts_system+43)& (0+255),7,b	;volatile
 11599  004B48  D025               	goto	l21985
 11600  004B4A  51C6               	movf	(_ts_system+43)& (0+255),w,b	;volatile
 11601  004B4C  E103               	bnz	u25540
 11602  004B4E  05C5               	decf	(_ts_system+42)& (0+255),w,b	;volatile
 11603  004B50  A0D8               	btfss	status,0,c
 11604  004B52  D020               	goto	l21985
 11605  004B54                     u25540:
 11606                           
 11607                           ; BSR set to: 1
 11608  004B54  0541               	decf	(_var_sys+65)& (0+255),w,b	;volatile
 11609  004B56  A4D8               	btfss	status,2,c
 11610  004B58  D01D               	goto	l21985
 11611                           
 11612                           ; BSR set to: 1
 11613  004B5A  BFCC               	btfsc	(_ts_system+49)& (0+255),7,b	;volatile
 11614  004B5C  D005               	goto	u25560
 11615  004B5E  51CC               	movf	(_ts_system+49)& (0+255),w,b	;volatile
 11616  004B60  E119               	bnz	l21985
 11617  004B62  05CB               	decf	(_ts_system+48)& (0+255),w,b	;volatile
 11618  004B64  B0D8               	btfsc	status,0,c
 11619  004B66  D016               	goto	l21985
 11620  004B68                     u25560:
 11621  004B68  0101               	movlb	1	; () banked
 11622  004B6A  5127               	movf	(_var_sys+39)& (0+255),w,b	;volatile
 11623  004B6C  A4D8               	btfss	status,2,c
 11624  004B6E  D012               	goto	l21985
 11625                           
 11626                           ; BSR set to: 1
 11627                           ;sm_ControlGate_MC50.c: 422:         if (securityOpening != YES){
 11628  004B70  0100               	movlb	0	; () banked
 11629  004B72  05E5               	decf	actionZone_Opening@securityOpening& (0+255),w,b
 11630  004B74  B4D8               	btfsc	status,2,c
 11631  004B76  D002               	goto	l21979
 11632                           
 11633                           ; BSR set to: 0
 11634                           ;sm_ControlGate_MC50.c: 423:              var_sys.NumberOffErrors++;
 11635  004B78  0101               	movlb	1	; () banked
 11636  004B7A  2B43               	incf	(_var_sys+67)& (0+255),f,b	;volatile
 11637  004B7C                     l21979:
 11638                           
 11639                           ;sm_ControlGate_MC50.c: 426:         var_sys.AutoInversionActive = YES;
 11640  004B7C  0E01               	movlw	1
 11641  004B7E  0101               	movlb	1	; () banked
 11642  004B80  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 11643                           
 11644                           ; BSR set to: 1
 11645                           ;sm_ControlGate_MC50.c: 427:         ts_system.TimeWaitToNextState = ( 500/50);
 11646  004B82  0E00               	movlw	0
 11647  004B84  6FC0               	movwf	(_ts_system+37)& (0+255),b	;volatile
 11648  004B86  0E0A               	movlw	10
 11649  004B88  6FBF               	movwf	(_ts_system+36)& (0+255),b	;volatile
 11650                           
 11651                           ; BSR set to: 1
 11652                           ;sm_ControlGate_MC50.c: 428:         ts_system.TimeStopElectricBrake = ((1000/50)+( 500/
      +                          50));
 11653  004B8A  0E00               	movlw	0
 11654  004B8C  6FDC               	movwf	(_ts_system+65)& (0+255),b	;volatile
 11655  004B8E  0E1E               	movlw	30
 11656  004B90  6FDB               	movwf	(_ts_system+64)& (0+255),b	;volatile
 11657                           
 11658                           ;sm_ControlGate_MC50.c: 430:     }
 11659  004B92  0012               	return	
 11660  004B94                     l21985:
 11661                           
 11662                           ; BSR set to: 1
 11663  004B94  BFC6               	btfsc	(_ts_system+43)& (0+255),7,b	;volatile
 11664  004B96  D02D               	goto	l22015
 11665  004B98  51C6               	movf	(_ts_system+43)& (0+255),w,b	;volatile
 11666  004B9A  E103               	bnz	u25590
 11667  004B9C  05C5               	decf	(_ts_system+42)& (0+255),w,b	;volatile
 11668  004B9E  A0D8               	btfss	status,0,c
 11669  004BA0  D028               	goto	l22015
 11670  004BA2                     u25590:
 11671                           
 11672                           ; BSR set to: 1
 11673  004BA2  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 11674  004BA4  A4D8               	btfss	status,2,c
 11675  004BA6  D025               	goto	l22015
 11676                           
 11677                           ; BSR set to: 1
 11678                           ;sm_ControlGate_MC50.c: 432:         if (var_sys.InvertionCurrentClosing == YES) {
 11679  004BA8  0544               	decf	(_var_sys+68)& (0+255),w,b	;volatile
 11680  004BAA  A4D8               	btfss	status,2,c
 11681  004BAC  D005               	goto	l21997
 11682                           
 11683                           ; BSR set to: 1
 11684                           ;sm_ControlGate_MC50.c: 434:             var_sys.StateMotor = Stopped;
 11685  004BAE  0E00               	movlw	0
 11686  004BB0  6F00               	movwf	_var_sys& (0+255),b	;volatile
 11687                           
 11688                           ; BSR set to: 1
 11689                           ;sm_ControlGate_MC50.c: 435:             setPositionInvertionInClosing();
 11690  004BB2  EC73  F034         	call	_setPositionInvertionInClosing	;wreg free
 11691  004BB6  D768               	goto	l21929
 11692  004BB8                     l21997:
 11693                           
 11694                           ; BSR set to: 1
 11695  004BB8  BFC0               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 11696  004BBA  D005               	goto	u25620
 11697  004BBC  51C0               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 11698  004BBE  E116               	bnz	l22013
 11699  004BC0  05BF               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 11700  004BC2  B0D8               	btfsc	status,0,c
 11701  004BC4  D013               	goto	l22013
 11702  004BC6                     u25620:
 11703                           
 11704                           ; BSR set to: 1
 11705                           ;sm_ControlGate_MC50.c: 438:             CloseOrder();
 11706  004BC6  ECA2  F049         	call	_CloseOrder	;wreg free
 11707                           
 11708                           ;sm_ControlGate_MC50.c: 440:             setPositionInvertionInOpening();
 11709  004BCA  EC1A  F039         	call	_setPositionInvertionInOpening	;wreg free
 11710                           
 11711                           ; BSR set to: 1
 11712                           ;sm_ControlGate_MC50.c: 441:             var_sys.AutoInversionActive = NO;
 11713  004BCE  0E00               	movlw	0
 11714  004BD0  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 11715                           
 11716                           ; BSR set to: 1
 11717                           ;sm_ControlGate_MC50.c: 442:             var_sys.InvertionCurrentOpening = YES;
 11718  004BD2  0E01               	movlw	1
 11719  004BD4  6F45               	movwf	(_var_sys+69)& (0+255),b	;volatile
 11720                           
 11721                           ; BSR set to: 1
 11722                           ;sm_ControlGate_MC50.c: 443:             ts_system.TimeInversionStart = (1000/50);
 11723  004BD6  0E00               	movlw	0
 11724  004BD8  6FCC               	movwf	(_ts_system+49)& (0+255),b	;volatile
 11725  004BDA  0E14               	movlw	20
 11726  004BDC  6FCB               	movwf	(_ts_system+48)& (0+255),b	;volatile
 11727                           
 11728                           ; BSR set to: 1
 11729                           ;sm_ControlGate_MC50.c: 444:             ts_system.InvertionTimeClosingFromOpen = (1000/
      +                          50) * 2;
 11730  004BDE  0E00               	movlw	0
 11731  004BE0  6FCE               	movwf	(_ts_system+51)& (0+255),b	;volatile
 11732  004BE2  0E28               	movlw	40
 11733  004BE4  6FCD               	movwf	(_ts_system+50)& (0+255),b	;volatile
 11734                           
 11735                           ; BSR set to: 1
 11736                           ;sm_ControlGate_MC50.c: 445:             var_sys.InvertionClosingFromOpen = YES;
 11737  004BE6  0E01               	movlw	1
 11738  004BE8  6F46               	movwf	(_var_sys+70)& (0+255),b	;volatile
 11739                           
 11740                           ;sm_ControlGate_MC50.c: 449:         } else
 11741  004BEA  0012               	return	
 11742  004BEC                     l22013:
 11743                           
 11744                           ; BSR set to: 1
 11745                           ;sm_ControlGate_MC50.c: 450:         {;sm_ControlGate_MC50.c: 451:             var_sys.S
      +                          tateMotor = Stopped;
 11746  004BEC  0E00               	movlw	0
 11747  004BEE  6F00               	movwf	_var_sys& (0+255),b	;volatile
 11748  004BF0  0012               	return	
 11749  004BF2                     l22015:
 11750                           
 11751                           ; BSR set to: 1
 11752  004BF2  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 11753  004BF4  A4D8               	btfss	status,2,c
 11754  004BF6  D00A               	goto	l22035
 11755                           
 11756                           ; BSR set to: 1
 11757                           ;sm_ControlGate_MC50.c: 457:                 var_sys.StateMotor = Stopped;
 11758  004BF8  0E00               	movlw	0
 11759  004BFA  6F00               	movwf	_var_sys& (0+255),b	;volatile
 11760                           
 11761                           ; BSR set to: 1
 11762                           ;sm_ControlGate_MC50.c: 460:         if (ts_system.TimeWaitToNextState <= 0) {
 11763  004BFC  BFC0               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 11764  004BFE  D7E3               	goto	u25620
 11765  004C00  51C0               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 11766  004C02  E14E               	bnz	l2723
 11767  004C04  05BF               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 11768  004C06  B0D8               	btfsc	status,0,c
 11769  004C08  0012               	return	
 11770  004C0A  D7DD               	goto	u25620
 11771  004C0C                     l22035:
 11772                           
 11773                           ; BSR set to: 1
 11774  004C0C  5100               	movf	_var_sys& (0+255),w,b	;volatile
 11775  004C0E  A4D8               	btfss	status,2,c
 11776  004C10  D018               	goto	l22053
 11777                           
 11778                           ; BSR set to: 1
 11779  004C12  BFC0               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 11780  004C14  D005               	goto	u25660
 11781  004C16  51C0               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 11782  004C18  E114               	bnz	l22053
 11783  004C1A  05BF               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 11784  004C1C  B0D8               	btfsc	status,0,c
 11785  004C1E  D011               	goto	l22053
 11786  004C20                     u25660:
 11787                           
 11788                           ; BSR set to: 1
 11789                           ;sm_ControlGate_MC50.c: 479:       if(securityOpening != ST){
 11790  004C20  0E02               	movlw	2
 11791  004C22  0100               	movlb	0	; () banked
 11792  004C24  19E5               	xorwf	actionZone_Opening@securityOpening& (0+255),w,b
 11793  004C26  B4D8               	btfsc	status,2,c
 11794  004C28  D007               	goto	l22049
 11795                           
 11796                           ; BSR set to: 0
 11797                           ;sm_ControlGate_MC50.c: 480:         var_sys.NumberOffErrors++;
 11798  004C2A  0101               	movlb	1	; () banked
 11799  004C2C  2B43               	incf	(_var_sys+67)& (0+255),f,b	;volatile
 11800                           
 11801                           ; BSR set to: 1
 11802                           ;sm_ControlGate_MC50.c: 482:         var_sys.StateMotor = Stopped;
 11803  004C2E  0E00               	movlw	0
 11804  004C30  6F00               	movwf	_var_sys& (0+255),b	;volatile
 11805                           
 11806                           ; BSR set to: 1
 11807                           ;sm_ControlGate_MC50.c: 483:         setPositionInvertionInOpening();
 11808  004C32  EC1A  F039         	call	_setPositionInvertionInOpening	;wreg free
 11809  004C36  D728               	goto	l21929
 11810  004C38                     l22049:
 11811                           
 11812                           ; BSR set to: 0
 11813                           ;sm_ControlGate_MC50.c: 486:           setPositionInvertionInOpening();
 11814  004C38  EC1A  F039         	call	_setPositionInvertionInOpening	;wreg free
 11815  004C3C                     l22051:
 11816                           
 11817                           ;sm_ControlGate_MC50.c: 487:           StopOrder();
 11818  004C3C  EC57  F04A         	call	_StopOrder	;wreg free
 11819  004C40  0012               	return	
 11820  004C42                     l22053:
 11821                           
 11822                           ; BSR set to: 1
 11823  004C42  0100               	movlb	0	; () banked
 11824  004C44  05A8               	decf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 11825  004C46  A4D8               	btfss	status,2,c
 11826  004C48  D005               	goto	l22059
 11827                           
 11828                           ; BSR set to: 0
 11829                           ;sm_ControlGate_MC50.c: 492:         if (typeOpenOrder != TypeFullOpen) {
 11830  004C4A  0E03               	movlw	3
 11831  004C4C  19E6               	xorwf	actionZone_Opening@typeOpenOrder& (0+255),w,b
 11832  004C4E  B4D8               	btfsc	status,2,c
 11833  004C50  0012               	return	
 11834  004C52  D7F4               	goto	l22051
 11835  004C54                     l22059:
 11836                           
 11837                           ; BSR set to: 0
 11838  004C54  0E02               	movlw	2
 11839  004C56  19E6               	xorwf	actionZone_Opening@typeOpenOrder& (0+255),w,b
 11840  004C58  A4D8               	btfss	status,2,c
 11841  004C5A  D011               	goto	l22071
 11842                           
 11843                           ; BSR set to: 0
 11844  004C5C  0E02               	movlw	2
 11845  004C5E  0101               	movlb	1	; () banked
 11846  004C60  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 11847  004C62  A4D8               	btfss	status,2,c
 11848  004C64  D00C               	goto	l22071
 11849                           
 11850                           ; BSR set to: 1
 11851  004C66  0E02               	movlw	2
 11852  004C68  0100               	movlb	0	; () banked
 11853  004C6A  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 11854  004C6C  B4D8               	btfsc	status,2,c
 11855  004C6E  D007               	goto	l22071
 11856                           
 11857                           ; BSR set to: 0
 11858                           ;sm_ControlGate_MC50.c: 502:         setPositionInvertionInOpening();
 11859  004C70  EC1A  F039         	call	_setPositionInvertionInOpening	;wreg free
 11860                           
 11861                           ; BSR set to: 1
 11862                           ;sm_ControlGate_MC50.c: 503:         StopOrder();
 11863  004C74  EC57  F04A         	call	_StopOrder	;wreg free
 11864                           
 11865                           ;sm_ControlGate_MC50.c: 504:         InitWalkAutoTime();
 11866  004C78  EC2E  F04B         	call	_InitWalkAutoTime	;wreg free
 11867                           
 11868                           ;sm_ControlGate_MC50.c: 505:     } else if ((typeOpenOrder == TypeFull || typeOpenOrder 
      +                          == TypeFullOpen || typeOpenOrder == TypeFullClose) && var_sys_NVM.operationMode != ModoC
      +                          ondominio) {
 11869  004C7C  0012               	return	
 11870  004C7E                     l22071:
 11871  004C7E  0100               	movlb	0	; () banked
 11872  004C80  05E6               	decf	actionZone_Opening@typeOpenOrder& (0+255),w,b
 11873  004C82  B4D8               	btfsc	status,2,c
 11874  004C84  D008               	goto	u25750
 11875                           
 11876                           ; BSR set to: 0
 11877  004C86  0E03               	movlw	3
 11878  004C88  19E6               	xorwf	actionZone_Opening@typeOpenOrder& (0+255),w,b
 11879  004C8A  B4D8               	btfsc	status,2,c
 11880  004C8C  D004               	goto	u25750
 11881                           
 11882                           ; BSR set to: 0
 11883  004C8E  0E04               	movlw	4
 11884  004C90  19E6               	xorwf	actionZone_Opening@typeOpenOrder& (0+255),w,b
 11885  004C92  A4D8               	btfss	status,2,c
 11886  004C94  0012               	return	
 11887  004C96                     u25750:
 11888                           
 11889                           ; BSR set to: 0
 11890  004C96  0E02               	movlw	2
 11891  004C98  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 11892  004C9A  B4D8               	btfsc	status,2,c
 11893  004C9C  0012               	return	
 11894  004C9E  D7CC               	goto	l22049
 11895  004CA0                     l2723:
 11896  004CA0  0012               	return		;funcret
 11897  004CA2                     __end_of_actionZone_Opening:
 11898                           	callstack 0
 11899                           
 11900 ;; *************** function _setPositionInvertionInOpening *****************
 11901 ;; Defined at:
 11902 ;;		line 894 in file "sm_ControlGate_MC50.c"
 11903 ;; Parameters:    Size  Location     Type
 11904 ;;		None
 11905 ;; Auto vars:     Size  Location     Type
 11906 ;;		None
 11907 ;; Return value:  Size  Location     Type
 11908 ;;                  1    wreg      void 
 11909 ;; Registers used:
 11910 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11911 ;; Tracked objects:
 11912 ;;		On entry : 3E/1
 11913 ;;		On exit  : 3F/1
 11914 ;;		Unchanged: 0/0
 11915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11918 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11919 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11920 ;;Total ram usage:        8 bytes
 11921 ;; Hardware stack levels used: 1
 11922 ;; Hardware stack levels required when called: 6
 11923 ;; This function calls:
 11924 ;;		_getTimeDecelaration
 11925 ;; This function is called by:
 11926 ;;		_actionZone_Opening
 11927 ;; This function uses a non-reentrant model
 11928 ;;
 11929                           
 11930                           	psect	text25
 11931  007234                     __ptext25:
 11932                           	callstack 0
 11933  007234                     _setPositionInvertionInOpening:
 11934                           	callstack 22
 11935                           
 11936                           ;sm_ControlGate_MC50.c: 896:     if(var_sys_NVM.TypeofMotor != 2){
 11937                           
 11938                           ;incstack = 0
 11939  007234  0E02               	movlw	2
 11940  007236  0100               	movlb	0	; () banked
 11941  007238  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 11942  00723A  B4D8               	btfsc	status,2,c
 11943  00723C  D009               	goto	l21005
 11944                           
 11945                           ; BSR set to: 0
 11946                           ;sm_ControlGate_MC50.c: 897:        var_sys.PositionActual -= ( 100/50);
 11947  00723E  0EFE               	movlw	254
 11948  007240  0101               	movlb	1	; () banked
 11949  007242  271E               	addwf	(_var_sys+30)& (0+255),f,b	;volatile
 11950  007244  0EFF               	movlw	255
 11951  007246  231F               	addwfc	(_var_sys+31)& (0+255),f,b	;volatile
 11952  007248  0EFF               	movlw	255
 11953  00724A  2320               	addwfc	(_var_sys+32)& (0+255),f,b	;volatile
 11954  00724C  0EFF               	movlw	255
 11955  00724E  D006               	goto	L69
 11956  007250                     l21005:
 11957                           
 11958                           ; BSR set to: 0
 11959                           ;sm_ControlGate_MC50.c: 901:          var_sys.PositionActual += ( 50/50);
 11960  007250  0E01               	movlw	1
 11961  007252  0101               	movlb	1	; () banked
 11962  007254  271E               	addwf	(_var_sys+30)& (0+255),f,b	;volatile
 11963  007256  0E00               	movlw	0
 11964  007258  231F               	addwfc	(_var_sys+31)& (0+255),f,b	;volatile
 11965  00725A  2320               	addwfc	(_var_sys+32)& (0+255),f,b	;volatile
 11966  00725C                     L69:
 11967  00725C  2321               	addwfc	(_var_sys+33)& (0+255),f,b	;volatile
 11968                           
 11969                           ; BSR set to: 1
 11970                           ;sm_ControlGate_MC50.c: 906:     if (var_sys.PositionActual < getTimeDecelaration(InClos
      +                          e)) {
 11971  00725E  0E03               	movlw	3
 11972  007260  ECA6  F038         	call	_getTimeDecelaration
 11973  007264  5029               	movf	?_getTimeDecelaration^0,w,c
 11974  007266  0101               	movlb	1	; () banked
 11975  007268  5D1E               	subwf	(_var_sys+30)& (0+255),w,b	;volatile
 11976  00726A  502A               	movf	(?_getTimeDecelaration+1)^0,w,c
 11977  00726C  591F               	subwfb	(_var_sys+31)& (0+255),w,b	;volatile
 11978  00726E  502B               	movf	(?_getTimeDecelaration+2)^0,w,c
 11979  007270  5920               	subwfb	(_var_sys+32)& (0+255),w,b	;volatile
 11980  007272  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 11981  007274  0A80               	xorlw	128
 11982  007276  6E32               	movwf	??_setPositionInvertionInOpening^0,c
 11983  007278  502C               	movf	(?_getTimeDecelaration+3)^0,w,c
 11984  00727A  0A80               	xorlw	128
 11985  00727C  5832               	subwfb	??_setPositionInvertionInOpening^0,w,c
 11986  00727E  B0D8               	btfsc	status,0,c
 11987  007280  D004               	goto	l21011
 11988                           
 11989                           ; BSR set to: 1
 11990                           ;sm_ControlGate_MC50.c: 907:         var_sys.PositionActual = getTimeDecelaration(InClos
      +                          e);
 11991  007282  0E03               	movlw	3
 11992  007284  ECA6  F038         	call	_getTimeDecelaration
 11993  007288  D015               	goto	L70
 11994  00728A                     l21011:
 11995                           
 11996                           ; BSR set to: 1
 11997  00728A  0E01               	movlw	1
 11998  00728C  ECA6  F038         	call	_getTimeDecelaration
 11999  007290  0101               	movlb	1	; () banked
 12000  007292  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 12001  007294  5C29               	subwf	?_getTimeDecelaration^0,w,c
 12002  007296  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 12003  007298  582A               	subwfb	(?_getTimeDecelaration+1)^0,w,c
 12004  00729A  5120               	movf	(_var_sys+32)& (0+255),w,b	;volatile
 12005  00729C  582B               	subwfb	(?_getTimeDecelaration+2)^0,w,c
 12006  00729E  502C               	movf	(?_getTimeDecelaration+3)^0,w,c
 12007  0072A0  0A80               	xorlw	128
 12008  0072A2  6E32               	movwf	??_setPositionInvertionInOpening^0,c
 12009  0072A4  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 12010  0072A6  0A80               	xorlw	128
 12011  0072A8  5832               	subwfb	??_setPositionInvertionInOpening^0,w,c
 12012  0072AA  B0D8               	btfsc	status,0,c
 12013  0072AC  D00B               	goto	l21015
 12014                           
 12015                           ; BSR set to: 1
 12016                           ;sm_ControlGate_MC50.c: 909:         var_sys.PositionActual = getTimeDecelaration(InOpen
      +                          Full);
 12017  0072AE  0E01               	movlw	1
 12018  0072B0  ECA6  F038         	call	_getTimeDecelaration
 12019  0072B4                     L70:
 12020  0072B4  C029  F11E         	movff	?_getTimeDecelaration,_var_sys+30	;volatile
 12021  0072B8  C02A  F11F         	movff	?_getTimeDecelaration+1,_var_sys+31	;volatile
 12022  0072BC  C02B  F120         	movff	?_getTimeDecelaration+2,_var_sys+32	;volatile
 12023  0072C0  C02C  F121         	movff	?_getTimeDecelaration+3,_var_sys+33	;volatile
 12024  0072C4                     l21015:
 12025                           
 12026                           ;sm_ControlGate_MC50.c: 911:     var_sys.TimeMaxMotorIsON = var_sys.PositionActual + var
      +                          _sys_NVM.decelarationClose*( 500/50) + (1000/50)*10;
 12027  0072C4  0100               	movlb	0	; () banked
 12028  0072C6  5199               	movf	(_var_sys_NVM+1)& (0+255),w,b	;volatile
 12029  0072C8  0D0A               	mullw	10
 12030  0072CA  CFF3 F032          	movff	prodl,??_setPositionInvertionInOpening
 12031  0072CE  CFF4 F033          	movff	prodh,??_setPositionInvertionInOpening+1
 12032  0072D2  0E00               	movlw	0
 12033  0072D4  BE33               	btfsc	(??_setPositionInvertionInOpening+1)^0,7,c
 12034  0072D6  0EFF               	movlw	255
 12035  0072D8  6E34               	movwf	(??_setPositionInvertionInOpening+2)^0,c
 12036  0072DA  6E35               	movwf	(??_setPositionInvertionInOpening+3)^0,c
 12037  0072DC  0101               	movlb	1	; () banked
 12038  0072DE  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 12039  0072E0  2432               	addwf	??_setPositionInvertionInOpening^0,w,c
 12040  0072E2  6E36               	movwf	(??_setPositionInvertionInOpening+4)^0,c
 12041  0072E4  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 12042  0072E6  2033               	addwfc	(??_setPositionInvertionInOpening+1)^0,w,c
 12043  0072E8  6E37               	movwf	(??_setPositionInvertionInOpening+5)^0,c
 12044  0072EA  5120               	movf	(_var_sys+32)& (0+255),w,b	;volatile
 12045  0072EC  2034               	addwfc	(??_setPositionInvertionInOpening+2)^0,w,c
 12046  0072EE  6E38               	movwf	(??_setPositionInvertionInOpening+6)^0,c
 12047  0072F0  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 12048  0072F2  2035               	addwfc	(??_setPositionInvertionInOpening+3)^0,w,c
 12049  0072F4  6E39               	movwf	(??_setPositionInvertionInOpening+7)^0,c
 12050  0072F6  0EC8               	movlw	200
 12051  0072F8  2436               	addwf	(??_setPositionInvertionInOpening+4)^0,w,c
 12052  0072FA  6F18               	movwf	(_var_sys+24)& (0+255),b	;volatile
 12053  0072FC  0E00               	movlw	0
 12054  0072FE  2037               	addwfc	(??_setPositionInvertionInOpening+5)^0,w,c
 12055  007300  6F19               	movwf	(_var_sys+25)& (0+255),b	;volatile
 12056  007302  0E00               	movlw	0
 12057  007304  2038               	addwfc	(??_setPositionInvertionInOpening+6)^0,w,c
 12058  007306  6F1A               	movwf	(_var_sys+26)& (0+255),b	;volatile
 12059  007308  0E00               	movlw	0
 12060  00730A  2039               	addwfc	(??_setPositionInvertionInOpening+7)^0,w,c
 12061  00730C  6F1B               	movwf	(_var_sys+27)& (0+255),b	;volatile
 12062                           
 12063                           ; BSR set to: 1
 12064  00730E  0012               	return		;funcret
 12065  007310                     __end_of_setPositionInvertionInOpening:
 12066                           	callstack 0
 12067                           
 12068 ;; *************** function _controlVelocity *****************
 12069 ;; Defined at:
 12070 ;;		line 527 in file "outputs_MC50.c"
 12071 ;; Parameters:    Size  Location     Type
 12072 ;;		None
 12073 ;; Auto vars:     Size  Location     Type
 12074 ;;		None
 12075 ;; Return value:  Size  Location     Type
 12076 ;;                  1    wreg      void 
 12077 ;; Registers used:
 12078 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12079 ;; Tracked objects:
 12080 ;;		On entry : 3E/1
 12081 ;;		On exit  : 3E/0
 12082 ;;		Unchanged: 0/0
 12083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12085 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12086 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12087 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12088 ;;Total ram usage:        1 bytes
 12089 ;; Hardware stack levels used: 1
 12090 ;; Hardware stack levels required when called: 7
 12091 ;; This function calls:
 12092 ;;		_ControlDecelarationFactor
 12093 ;;		_InitSoftStop
 12094 ;;		_getStateOpenPosition
 12095 ;;		_getTimeDecelaration
 12096 ;; This function is called by:
 12097 ;;		_main
 12098 ;;		_actionZone_Opening
 12099 ;; This function uses a non-reentrant model
 12100 ;;
 12101                           
 12102                           	psect	text26
 12103  00510E                     __ptext26:
 12104                           	callstack 0
 12105  00510E                     _controlVelocity:
 12106                           	callstack 21
 12107                           
 12108                           ;outputs_MC50.c: 531:     if(var_sys.LearningIsEnabled==YES && var_sys.LearningDecelarat
      +                          ion==YES)
 12109                           
 12110                           ; BSR set to: 1
 12111                           ;incstack = 0
 12112  00510E  0101               	movlb	1	; () banked
 12113  005110  0526               	decf	(_var_sys+38)& (0+255),w,b	;volatile
 12114  005112  A4D8               	btfss	status,2,c
 12115  005114  D017               	goto	l20817
 12116                           
 12117                           ; BSR set to: 1
 12118  005116  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 12119  005118  A4D8               	btfss	status,2,c
 12120  00511A  D014               	goto	l20817
 12121                           
 12122                           ; BSR set to: 1
 12123                           ;outputs_MC50.c: 532:     {;outputs_MC50.c: 533:         if(powerControl_st.decelaration
      +                          Active==NO)
 12124  00511C  517B               	movf	_powerControl_st& (0+255),w,b
 12125  00511E  A4D8               	btfss	status,2,c
 12126  005120  D008               	goto	l20811
 12127                           
 12128                           ; BSR set to: 1
 12129                           ;outputs_MC50.c: 534:         {;outputs_MC50.c: 535:             ts_system.TimeStopedBef
      +                          oreDecelaration=( 500/50);
 12130  005122  0E00               	movlw	0
 12131  005124  6FC8               	movwf	(_ts_system+45)& (0+255),b	;volatile
 12132  005126  0E0A               	movlw	10
 12133  005128  6FC7               	movwf	(_ts_system+44)& (0+255),b	;volatile
 12134                           
 12135                           ;outputs_MC50.c: 536:             ts_system.TimeCurrentWaitForAlarm=(1000/50);
 12136  00512A  0E00               	movlw	0
 12137  00512C  6FCA               	movwf	(_ts_system+47)& (0+255),b	;volatile
 12138  00512E  0E14               	movlw	20
 12139  005130  6FC9               	movwf	(_ts_system+46)& (0+255),b	;volatile
 12140  005132                     l20811:
 12141                           
 12142                           ; BSR set to: 1
 12143                           ;outputs_MC50.c: 538:         ControlDecelarationFactor();
 12144  005132  ECD0  F04A         	call	_ControlDecelarationFactor	;wreg free
 12145                           
 12146                           ; BSR set to: 1
 12147                           ;outputs_MC50.c: 539:         powerControl_st.decelarationActive=YES;
 12148  005136  0E01               	movlw	1
 12149  005138  6F7B               	movwf	_powerControl_st& (0+255),b
 12150                           
 12151                           ; BSR set to: 1
 12152                           ;outputs_MC50.c: 540:         var_sys.velocityFactor=0;
 12153  00513A  0E00               	movlw	0
 12154  00513C  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12155  00513E  0E00               	movlw	0
 12156  005140  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12157                           
 12158                           ;outputs_MC50.c: 541:     }
 12159  005142  0012               	return	
 12160  005144                     l20817:
 12161                           
 12162                           ; BSR set to: 1
 12163  005144  0526               	decf	(_var_sys+38)& (0+255),w,b	;volatile
 12164  005146  B4D8               	btfsc	status,2,c
 12165  005148  D003               	goto	u24000
 12166                           
 12167                           ; BSR set to: 1
 12168  00514A  0509               	decf	(_var_sys+9)& (0+255),w,b	;volatile
 12169  00514C  A4D8               	btfss	status,2,c
 12170  00514E  D007               	goto	l20823
 12171  005150                     u24000:
 12172                           
 12173                           ; BSR set to: 1
 12174                           ;outputs_MC50.c: 544:     {;outputs_MC50.c: 545:         var_sys.velocityFactor=0;
 12175  005150  0E00               	movlw	0
 12176  005152  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12177  005154  0E00               	movlw	0
 12178  005156  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12179                           
 12180                           ;outputs_MC50.c: 546:         powerControl_st.decelarationActive=NO;
 12181  005158  0E00               	movlw	0
 12182  00515A  6F7B               	movwf	_powerControl_st& (0+255),b
 12183                           
 12184                           ;outputs_MC50.c: 547:     }
 12185  00515C  0012               	return	
 12186  00515E                     l20823:
 12187                           
 12188                           ; BSR set to: 1
 12189  00515E  0E03               	movlw	3
 12190  005160  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 12191  005162  A4D8               	btfss	status,2,c
 12192  005164  D068               	goto	l20871
 12193                           
 12194                           ; BSR set to: 1
 12195  005166  0E03               	movlw	3
 12196  005168  ECA6  F038         	call	_getTimeDecelaration
 12197  00516C  5029               	movf	?_getTimeDecelaration^0,w,c
 12198  00516E  0101               	movlb	1	; () banked
 12199  005170  5D1E               	subwf	(_var_sys+30)& (0+255),w,b	;volatile
 12200  005172  502A               	movf	(?_getTimeDecelaration+1)^0,w,c
 12201  005174  591F               	subwfb	(_var_sys+31)& (0+255),w,b	;volatile
 12202  005176  502B               	movf	(?_getTimeDecelaration+2)^0,w,c
 12203  005178  5920               	subwfb	(_var_sys+32)& (0+255),w,b	;volatile
 12204  00517A  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 12205  00517C  0A80               	xorlw	128
 12206  00517E  0100               	movlb	0	; () banked
 12207  005180  6FDA               	movwf	??_controlVelocity& (0+255),b
 12208  005182  502C               	movf	(?_getTimeDecelaration+3)^0,w,c
 12209  005184  0A80               	xorlw	128
 12210  005186  59DA               	subwfb	??_controlVelocity& (0+255),w,b
 12211  005188  A0D8               	btfss	status,0,c
 12212  00518A  D004               	goto	u24030
 12213                           
 12214                           ; BSR set to: 0
 12215  00518C  0101               	movlb	1	; () banked
 12216  00518E  0548               	decf	(_var_sys+72)& (0+255),w,b	;volatile
 12217  005190  A4D8               	btfss	status,2,c
 12218  005192  D051               	goto	l20871
 12219  005194                     u24030:
 12220  005194  0100               	movlb	0	; () banked
 12221  005196  5199               	movf	(_var_sys_NVM+1)& (0+255),w,b	;volatile
 12222  005198  B4D8               	btfsc	status,2,c
 12223  00519A  D004               	goto	u24050
 12224                           
 12225                           ; BSR set to: 0
 12226  00519C  0101               	movlb	1	; () banked
 12227  00519E  5112               	movf	(_var_sys+18)& (0+255),w,b	;volatile
 12228  0051A0  B4D8               	btfsc	status,2,c
 12229  0051A2  D00C               	goto	u24070
 12230  0051A4                     u24050:
 12231  0051A4  0101               	movlb	1	; () banked
 12232  0051A6  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 12233  0051A8  D005               	goto	u24060
 12234  0051AA  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 12235  0051AC  E144               	bnz	l20871
 12236  0051AE  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 12237  0051B0  B0D8               	btfsc	status,0,c
 12238  0051B2  D041               	goto	l20871
 12239  0051B4                     u24060:
 12240                           
 12241                           ; BSR set to: 1
 12242  0051B4  0100               	movlb	0	; () banked
 12243  0051B6  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 12244  0051B8  B4D8               	btfsc	status,2,c
 12245  0051BA  D03D               	goto	l20871
 12246  0051BC                     u24070:
 12247                           
 12248                           ;outputs_MC50.c: 550:     {;outputs_MC50.c: 552:             if ((powerControl_st.decela
      +                          rationActive==NO) && (var_sys.AutoInversionActiveStop==NO ))
 12249  0051BC  0101               	movlb	1	; () banked
 12250  0051BE  517B               	movf	_powerControl_st& (0+255),w,b
 12251  0051C0  A4D8               	btfss	status,2,c
 12252  0051C2  D022               	goto	l20857
 12253                           
 12254                           ; BSR set to: 1
 12255  0051C4  5112               	movf	(_var_sys+18)& (0+255),w,b	;volatile
 12256  0051C6  A4D8               	btfss	status,2,c
 12257  0051C8  D01F               	goto	l20857
 12258                           
 12259                           ; BSR set to: 1
 12260                           ;outputs_MC50.c: 553:                 {;outputs_MC50.c: 556:                     ts_syst
      +                          em.TimeCurrentWaitForAlarm=(1000/50);
 12261  0051CA  0E00               	movlw	0
 12262  0051CC  6FCA               	movwf	(_ts_system+47)& (0+255),b	;volatile
 12263  0051CE  0E14               	movlw	20
 12264  0051D0  6FC9               	movwf	(_ts_system+46)& (0+255),b	;volatile
 12265                           
 12266                           ;outputs_MC50.c: 558:                     if (var_sys_NVM.softstop > 0){
 12267  0051D2  0100               	movlb	0	; () banked
 12268  0051D4  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 12269  0051D6  B4D8               	btfsc	status,2,c
 12270  0051D8  D008               	goto	l20847
 12271                           
 12272                           ; BSR set to: 0
 12273                           ;outputs_MC50.c: 559:                         var_sys.AutoInversionActive = NO;
 12274  0051DA  0E00               	movlw	0
 12275  0051DC  0101               	movlb	1	; () banked
 12276  0051DE  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 12277                           
 12278                           ;outputs_MC50.c: 560:                         var_sys.AutoInversionActiveStop = YES;
 12279  0051E0  0E01               	movlw	1
 12280  0051E2  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 12281                           
 12282                           ; BSR set to: 1
 12283                           ;outputs_MC50.c: 561:                         InitSoftStop();
 12284  0051E4  EC23  F046         	call	_InitSoftStop	;wreg free
 12285                           
 12286                           ;outputs_MC50.c: 563:                     }
 12287  0051E8  D00F               	goto	l20857
 12288  0051EA                     l20847:
 12289                           
 12290                           ; BSR set to: 0
 12291                           ;outputs_MC50.c: 565:                     {;outputs_MC50.c: 566:                        
      +                           ts_system.TimeStopedBeforeDecelaration=( 500/50);
 12292  0051EA  0E00               	movlw	0
 12293  0051EC  0101               	movlb	1	; () banked
 12294  0051EE  6FC8               	movwf	(_ts_system+45)& (0+255),b	;volatile
 12295  0051F0  0E0A               	movlw	10
 12296  0051F2  6FC7               	movwf	(_ts_system+44)& (0+255),b	;volatile
 12297                           
 12298                           ; BSR set to: 1
 12299                           ;outputs_MC50.c: 567:                         ControlDecelarationFactor();
 12300  0051F4  ECD0  F04A         	call	_ControlDecelarationFactor	;wreg free
 12301                           
 12302                           ; BSR set to: 1
 12303                           ;outputs_MC50.c: 568:                         powerControl_st.decelarationActive=YES;
 12304  0051F8  0E01               	movlw	1
 12305  0051FA  6F7B               	movwf	_powerControl_st& (0+255),b
 12306                           
 12307                           ; BSR set to: 1
 12308                           ;outputs_MC50.c: 569:                         var_sys.velocityFactor=0;
 12309  0051FC  0E00               	movlw	0
 12310  0051FE  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12311  005200  0E00               	movlw	0
 12312  005202  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12313                           
 12314                           ; BSR set to: 1
 12315                           ;outputs_MC50.c: 570:                          var_sys.AutoInversionActiveStop = NO;
 12316  005204  0E00               	movlw	0
 12317  005206  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 12318  005208                     l20857:
 12319                           
 12320                           ;outputs_MC50.c: 574:                 if ((var_sys.velocityFactorstop <= 0)&&(var_sys.Au
      +                          toInversionActiveStop == YES) && (var_sys_NVM.softstop > 0))
 12321  005208  0101               	movlb	1	; () banked
 12322  00520A  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 12323  00520C  D005               	goto	u24110
 12324  00520E  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 12325  005210  E102               	bnz	u24111
 12326  005212  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 12327  005214  B0D8               	btfsc	status,0,c
 12328  005216                     u24111:
 12329  005216  0012               	return	
 12330  005218                     u24110:
 12331                           
 12332                           ; BSR set to: 1
 12333  005218  0512               	decf	(_var_sys+18)& (0+255),w,b	;volatile
 12334  00521A  A4D8               	btfss	status,2,c
 12335  00521C  0012               	return	
 12336                           
 12337                           ; BSR set to: 1
 12338  00521E  0100               	movlb	0	; () banked
 12339  005220  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 12340  005222  B4D8               	btfsc	status,2,c
 12341  005224  0012               	return	
 12342                           
 12343                           ; BSR set to: 0
 12344                           ;outputs_MC50.c: 575:                 {;outputs_MC50.c: 576:                 ts_system.T
      +                          imeStopedBeforeDecelaration=( 100/50);
 12345  005226  0E00               	movlw	0
 12346  005228  0101               	movlb	1	; () banked
 12347  00522A  6FC8               	movwf	(_ts_system+45)& (0+255),b	;volatile
 12348  00522C  0E02               	movlw	2
 12349  00522E  6FC7               	movwf	(_ts_system+44)& (0+255),b	;volatile
 12350                           
 12351                           ;outputs_MC50.c: 577:                 var_sys.AutoInversionActiveStop = NO;
 12352  005230  0E00               	movlw	0
 12353  005232  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 12354  005234  D77E               	goto	l20811
 12355  005236                     l20871:
 12356  005236  0101               	movlb	1	; () banked
 12357  005238  5100               	movf	_var_sys& (0+255),w,b	;volatile
 12358  00523A  EC99  F035         	call	_getStateOpenPosition
 12359  00523E  06E8               	decf	wreg,f,c
 12360  005240  A4D8               	btfss	status,2,c
 12361  005242  D042               	goto	l20913
 12362                           
 12363                           ; BSR set to: 0
 12364  005244  5198               	movf	_var_sys_NVM& (0+255),w,b	;volatile
 12365  005246  B4D8               	btfsc	status,2,c
 12366  005248  D004               	goto	u24160
 12367                           
 12368                           ; BSR set to: 0
 12369  00524A  0101               	movlb	1	; () banked
 12370  00524C  5112               	movf	(_var_sys+18)& (0+255),w,b	;volatile
 12371  00524E  B4D8               	btfsc	status,2,c
 12372  005250  D00C               	goto	u24180
 12373  005252                     u24160:
 12374  005252  0101               	movlb	1	; () banked
 12375  005254  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 12376  005256  D005               	goto	u24170
 12377  005258  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 12378  00525A  E136               	bnz	l20913
 12379  00525C  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 12380  00525E  B0D8               	btfsc	status,0,c
 12381  005260  D033               	goto	l20913
 12382  005262                     u24170:
 12383                           
 12384                           ; BSR set to: 1
 12385  005262  0100               	movlb	0	; () banked
 12386  005264  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 12387  005266  B4D8               	btfsc	status,2,c
 12388  005268  D02F               	goto	l20913
 12389  00526A                     u24180:
 12390                           
 12391                           ;outputs_MC50.c: 586:     {;outputs_MC50.c: 588:             if ((powerControl_st.decela
      +                          rationActive==NO) && (var_sys.AutoInversionActiveStop==NO ))
 12392  00526A  0101               	movlb	1	; () banked
 12393  00526C  517B               	movf	_powerControl_st& (0+255),w,b
 12394  00526E  A4D8               	btfss	status,2,c
 12395  005270  D022               	goto	l20899
 12396                           
 12397                           ; BSR set to: 1
 12398  005272  5112               	movf	(_var_sys+18)& (0+255),w,b	;volatile
 12399  005274  A4D8               	btfss	status,2,c
 12400  005276  D01F               	goto	l20899
 12401                           
 12402                           ; BSR set to: 1
 12403                           ;outputs_MC50.c: 589:         {;outputs_MC50.c: 592:             ts_system.TimeCurrentWa
      +                          itForAlarm=(1000/50);
 12404  005278  0E00               	movlw	0
 12405  00527A  6FCA               	movwf	(_ts_system+47)& (0+255),b	;volatile
 12406  00527C  0E14               	movlw	20
 12407  00527E  6FC9               	movwf	(_ts_system+46)& (0+255),b	;volatile
 12408                           
 12409                           ;outputs_MC50.c: 594:             if (var_sys_NVM.softstop > 0){
 12410  005280  0100               	movlb	0	; () banked
 12411  005282  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 12412  005284  B4D8               	btfsc	status,2,c
 12413  005286  D008               	goto	l20891
 12414                           
 12415                           ; BSR set to: 0
 12416                           ;outputs_MC50.c: 595:                 var_sys.AutoInversionActive = NO;
 12417  005288  0E00               	movlw	0
 12418  00528A  0101               	movlb	1	; () banked
 12419  00528C  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 12420                           
 12421                           ;outputs_MC50.c: 596:                 var_sys.AutoInversionActiveStop = YES;
 12422  00528E  0E01               	movlw	1
 12423  005290  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 12424                           
 12425                           ; BSR set to: 1
 12426                           ;outputs_MC50.c: 597:                 InitSoftStop();
 12427  005292  EC23  F046         	call	_InitSoftStop	;wreg free
 12428                           
 12429                           ;outputs_MC50.c: 598:             }else{
 12430  005296  D00F               	goto	l20899
 12431  005298                     l20891:
 12432                           
 12433                           ; BSR set to: 0
 12434                           ;outputs_MC50.c: 599:                 ts_system.TimeStopedBeforeDecelaration=( 500/50);
 12435  005298  0E00               	movlw	0
 12436  00529A  0101               	movlb	1	; () banked
 12437  00529C  6FC8               	movwf	(_ts_system+45)& (0+255),b	;volatile
 12438  00529E  0E0A               	movlw	10
 12439  0052A0  6FC7               	movwf	(_ts_system+44)& (0+255),b	;volatile
 12440                           
 12441                           ;outputs_MC50.c: 600:                  var_sys.AutoInversionActiveStop = NO;
 12442  0052A2  0E00               	movlw	0
 12443  0052A4  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 12444                           
 12445                           ; BSR set to: 1
 12446                           ;outputs_MC50.c: 601:                 ControlDecelarationFactor();
 12447  0052A6  ECD0  F04A         	call	_ControlDecelarationFactor	;wreg free
 12448                           
 12449                           ; BSR set to: 1
 12450                           ;outputs_MC50.c: 602:                 powerControl_st.decelarationActive=YES;
 12451  0052AA  0E01               	movlw	1
 12452  0052AC  6F7B               	movwf	_powerControl_st& (0+255),b
 12453                           
 12454                           ; BSR set to: 1
 12455                           ;outputs_MC50.c: 603:                 var_sys.velocityFactor=0;
 12456  0052AE  0E00               	movlw	0
 12457  0052B0  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12458  0052B2  0E00               	movlw	0
 12459  0052B4  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12460  0052B6                     l20899:
 12461                           
 12462                           ;outputs_MC50.c: 607:         if ((var_sys.velocityFactorstop <= 0)&&(var_sys.AutoInvers
      +                          ionActiveStop == YES) && (var_sys_NVM.softstop > 0))
 12463  0052B6  0101               	movlb	1	; () banked
 12464  0052B8  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 12465  0052BA  D7AE               	goto	u24110
 12466  0052BC  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 12467  0052BE  E135               	bnz	l2311
 12468  0052C0  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 12469  0052C2  B0D8               	btfsc	status,0,c
 12470  0052C4  0012               	return	
 12471  0052C6  D7A8               	goto	u24110
 12472  0052C8                     l20913:
 12473  0052C8  0101               	movlb	1	; () banked
 12474  0052CA  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 12475  0052CC  D012               	goto	l20921
 12476  0052CE  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 12477  0052D0  E103               	bnz	u24250
 12478  0052D2  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 12479  0052D4  A0D8               	btfss	status,0,c
 12480  0052D6  D00D               	goto	l20921
 12481  0052D8                     u24250:
 12482                           
 12483                           ; BSR set to: 1
 12484  0052D8  5100               	movf	_var_sys& (0+255),w,b	;volatile
 12485  0052DA  B4D8               	btfsc	status,2,c
 12486  0052DC  D00A               	goto	l20921
 12487                           
 12488                           ; BSR set to: 1
 12489                           ;outputs_MC50.c: 618:     {;outputs_MC50.c: 619:         var_sys.velocityFactorstop=(var
      +                          _sys.velocityFactorstop)- var_sys.SoftStopDecrementControl;
 12490  0052DE  5113               	movf	(_var_sys+19)& (0+255),w,b	;volatile
 12491  0052E0  5D10               	subwf	(_var_sys+16)& (0+255),w,b	;volatile
 12492  0052E2  6F10               	movwf	(_var_sys+16)& (0+255),b	;volatile
 12493  0052E4  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 12494  0052E6  A0D8               	btfss	status,0,c
 12495  0052E8  0511               	decf	(_var_sys+17)& (0+255),w,b	;volatile
 12496  0052EA  6F11               	movwf	(_var_sys+17)& (0+255),b	;volatile
 12497  0052EC                     l20919:
 12498                           
 12499                           ; BSR set to: 1
 12500                           ;outputs_MC50.c: 620:         powerControl_st.decelarationActive=NO;
 12501  0052EC  0E00               	movlw	0
 12502  0052EE  6F7B               	movwf	_powerControl_st& (0+255),b
 12503                           
 12504                           ;outputs_MC50.c: 623:     }
 12505  0052F0  0012               	return	
 12506  0052F2                     l20921:
 12507                           
 12508                           ; BSR set to: 1
 12509  0052F2  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 12510  0052F4  D010               	goto	l20929
 12511  0052F6  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 12512  0052F8  E103               	bnz	u24270
 12513  0052FA  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 12514  0052FC  A0D8               	btfss	status,0,c
 12515  0052FE  D00B               	goto	l20929
 12516  005300                     u24270:
 12517                           
 12518                           ; BSR set to: 1
 12519  005300  5100               	movf	_var_sys& (0+255),w,b	;volatile
 12520  005302  B4D8               	btfsc	status,2,c
 12521  005304  D008               	goto	l20929
 12522                           
 12523                           ; BSR set to: 1
 12524                           ;outputs_MC50.c: 626:     {;outputs_MC50.c: 627:         var_sys.velocityFactor=(var_sys
      +                          .velocityFactor)-var_sys.SoftStartDecrementControl;
 12525  005306  5114               	movf	(_var_sys+20)& (0+255),w,b	;volatile
 12526  005308  5D0E               	subwf	(_var_sys+14)& (0+255),w,b	;volatile
 12527  00530A  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12528  00530C  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 12529  00530E  A0D8               	btfss	status,0,c
 12530  005310  050F               	decf	(_var_sys+15)& (0+255),w,b	;volatile
 12531  005312  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12532  005314  D7EB               	goto	l20919
 12533  005316                     l20929:
 12534                           
 12535                           ; BSR set to: 1
 12536                           ;outputs_MC50.c: 634:     {;outputs_MC50.c: 635:          var_sys.velocityFactorstop = 0
      +                          ;
 12537  005316  0E00               	movlw	0
 12538  005318  6F11               	movwf	(_var_sys+17)& (0+255),b	;volatile
 12539  00531A  0E00               	movlw	0
 12540  00531C  6F10               	movwf	(_var_sys+16)& (0+255),b	;volatile
 12541                           
 12542                           ;outputs_MC50.c: 636:          var_sys.velocityFactor=0;
 12543  00531E  0E00               	movlw	0
 12544  005320  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12545  005322  0E00               	movlw	0
 12546  005324  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12547                           
 12548                           ;outputs_MC50.c: 637:          powerControl_st.decelarationActive=NO;
 12549  005326  0E00               	movlw	0
 12550  005328  6F7B               	movwf	_powerControl_st& (0+255),b
 12551  00532A                     l2311:
 12552  00532A  0012               	return		;funcret
 12553  00532C                     __end_of_controlVelocity:
 12554                           	callstack 0
 12555                           
 12556 ;; *************** function _getStateOpenPosition *****************
 12557 ;; Defined at:
 12558 ;;		line 470 in file "outputs_MC50.c"
 12559 ;; Parameters:    Size  Location     Type
 12560 ;;  stateMotor      1    wreg     enum E10381
 12561 ;; Auto vars:     Size  Location     Type
 12562 ;;  stateMotor      1    1[BANK0 ] enum E10381
 12563 ;;  state           1    0[BANK0 ] _Bool 
 12564 ;; Return value:  Size  Location     Type
 12565 ;;                  1    wreg      _Bool 
 12566 ;; Registers used:
 12567 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12568 ;; Tracked objects:
 12569 ;;		On entry : 3F/1
 12570 ;;		On exit  : 3F/0
 12571 ;;		Unchanged: 0/0
 12572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12574 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12575 ;;      Temps:          9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12576 ;;      Totals:         9       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12577 ;;Total ram usage:       11 bytes
 12578 ;; Hardware stack levels used: 1
 12579 ;; Hardware stack levels required when called: 6
 12580 ;; This function calls:
 12581 ;;		___lmul
 12582 ;;		_getTimeDecelaration
 12583 ;; This function is called by:
 12584 ;;		_controlVelocity
 12585 ;; This function uses a non-reentrant model
 12586 ;;
 12587                           
 12588                           	psect	text27
 12589  006B32                     __ptext27:
 12590                           	callstack 0
 12591  006B32                     _getStateOpenPosition:
 12592                           	callstack 21
 12593                           
 12594                           ;incstack = 0
 12595                           ;getStateOpenPosition@stateMotor stored from wreg
 12596  006B32  0100               	movlb	0	; () banked
 12597  006B34  6FD9               	movwf	getStateOpenPosition@stateMotor& (0+255),b
 12598                           
 12599                           ;outputs_MC50.c: 470: _Bool getStateOpenPosition(stateMotor_enum stateMotor);outputs_MC5
      +                          0.c: 471: {;outputs_MC50.c: 472:     _Bool state=0;
 12600  006B36  0E00               	movlw	0
 12601  006B38  0100               	movlb	0	; () banked
 12602  006B3A  6FD8               	movwf	getStateOpenPosition@state& (0+255),b
 12603                           
 12604                           ; BSR set to: 0
 12605                           ;outputs_MC50.c: 473:     if(var_sys.PositionIsLost==YES)
 12606  006B3C  0101               	movlb	1	; () banked
 12607  006B3E  0548               	decf	(_var_sys+72)& (0+255),w,b	;volatile
 12608  006B40  A4D8               	btfss	status,2,c
 12609  006B42  D002               	goto	l20297
 12610  006B44                     u23250:
 12611                           
 12612                           ;outputs_MC50.c: 474:     {;outputs_MC50.c: 475:         state=1;
 12613  006B44  0E01               	movlw	1
 12614  006B46  D046               	goto	L71
 12615  006B48                     l20297:
 12616                           
 12617                           ; BSR set to: 1
 12618  006B48  0100               	movlb	0	; () banked
 12619  006B4A  519C               	movf	(_var_sys_NVM+4)& (0+255),w,b	;volatile
 12620  006B4C  0D14               	mullw	20
 12621  006B4E  CFF3 F032          	movff	prodl,??_getStateOpenPosition
 12622  006B52  CFF4 F033          	movff	prodh,??_getStateOpenPosition+1
 12623  006B56  0E00               	movlw	0
 12624  006B58  BE33               	btfsc	(??_getStateOpenPosition+1)^0,7,c
 12625  006B5A  0EFF               	movlw	255
 12626  006B5C  6E34               	movwf	(??_getStateOpenPosition+2)^0,c
 12627  006B5E  6E35               	movwf	(??_getStateOpenPosition+3)^0,c
 12628  006B60  51CC               	movf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 12629  006B62  5C32               	subwf	??_getStateOpenPosition^0,w,c
 12630  006B64  51CD               	movf	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 12631  006B66  5833               	subwfb	(??_getStateOpenPosition+1)^0,w,c
 12632  006B68  51CE               	movf	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 12633  006B6A  5834               	subwfb	(??_getStateOpenPosition+2)^0,w,c
 12634  006B6C  51CF               	movf	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 12635  006B6E  5835               	subwfb	(??_getStateOpenPosition+3)^0,w,c
 12636  006B70  B0D8               	btfsc	status,0,c
 12637  006B72  D033               	goto	l20311
 12638                           
 12639                           ; BSR set to: 0
 12640  006B74  0E02               	movlw	2
 12641  006B76  19D9               	xorwf	getStateOpenPosition@stateMotor& (0+255),w,b
 12642  006B78  A4D8               	btfss	status,2,c
 12643  006B7A  D02F               	goto	l20311
 12644                           
 12645                           ; BSR set to: 0
 12646                           ;outputs_MC50.c: 478:     {;outputs_MC50.c: 479:         if(var_sys_NVM.walkTime<(var_sy
      +                          s_NVM.decelarationOpen/2))
 12647  006B7C  90D8               	bcf	status,0,c
 12648  006B7E  3198               	rrcf	_var_sys_NVM& (0+255),w,b	;volatile
 12649  006B80  619C               	cpfslt	(_var_sys_NVM+4)& (0+255),b	;volatile
 12650  006B82  D001               	goto	l20305
 12651  006B84  D7DF               	goto	u23250
 12652  006B86                     l20305:
 12653                           
 12654                           ; BSR set to: 0
 12655  006B86  519C               	movf	(_var_sys_NVM+4)& (0+255),w,b	;volatile
 12656  006B88  0D14               	mullw	20
 12657  006B8A  CFF3 F032          	movff	prodl,??_getStateOpenPosition
 12658  006B8E  CFF4 F033          	movff	prodh,??_getStateOpenPosition+1
 12659  006B92  0E00               	movlw	0
 12660  006B94  BE33               	btfsc	(??_getStateOpenPosition+1)^0,7,c
 12661  006B96  0EFF               	movlw	255
 12662  006B98  6E34               	movwf	(??_getStateOpenPosition+2)^0,c
 12663  006B9A  6E35               	movwf	(??_getStateOpenPosition+3)^0,c
 12664  006B9C  0ED8               	movlw	216
 12665  006B9E  2432               	addwf	??_getStateOpenPosition^0,w,c
 12666  006BA0  6E36               	movwf	(??_getStateOpenPosition+4)^0,c
 12667  006BA2  0EFF               	movlw	255
 12668  006BA4  2033               	addwfc	(??_getStateOpenPosition+1)^0,w,c
 12669  006BA6  6E37               	movwf	(??_getStateOpenPosition+5)^0,c
 12670  006BA8  0EFF               	movlw	255
 12671  006BAA  2034               	addwfc	(??_getStateOpenPosition+2)^0,w,c
 12672  006BAC  6E38               	movwf	(??_getStateOpenPosition+6)^0,c
 12673  006BAE  0EFF               	movlw	255
 12674  006BB0  2035               	addwfc	(??_getStateOpenPosition+3)^0,w,c
 12675  006BB2  6E39               	movwf	(??_getStateOpenPosition+7)^0,c
 12676  006BB4  0101               	movlb	1	; () banked
 12677  006BB6  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 12678  006BB8  5C36               	subwf	(??_getStateOpenPosition+4)^0,w,c
 12679  006BBA  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 12680  006BBC  5837               	subwfb	(??_getStateOpenPosition+5)^0,w,c
 12681  006BBE  5120               	movf	(_var_sys+32)& (0+255),w,b	;volatile
 12682  006BC0  5838               	subwfb	(??_getStateOpenPosition+6)^0,w,c
 12683  006BC2  5039               	movf	(??_getStateOpenPosition+7)^0,w,c
 12684  006BC4  0A80               	xorlw	128
 12685  006BC6  6E3A               	movwf	(??_getStateOpenPosition+8)^0,c
 12686  006BC8  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 12687  006BCA  0A80               	xorlw	128
 12688  006BCC  583A               	subwfb	(??_getStateOpenPosition+8)^0,w,c
 12689  006BCE  A0D8               	btfss	status,0,c
 12690  006BD0  D7B9               	goto	u23250
 12691                           
 12692                           ; BSR set to: 1
 12693                           ;outputs_MC50.c: 488:         {;outputs_MC50.c: 489:             state= 0;
 12694  006BD2  0E00               	movlw	0
 12695  006BD4                     L71:
 12696  006BD4  0100               	movlb	0	; () banked
 12697  006BD6  6FD8               	movwf	getStateOpenPosition@state& (0+255),b
 12698  006BD8  D032               	goto	l2254
 12699  006BDA                     l20311:
 12700                           
 12701                           ; BSR set to: 0
 12702  006BDA  0E02               	movlw	2
 12703  006BDC  19D9               	xorwf	getStateOpenPosition@stateMotor& (0+255),w,b
 12704  006BDE  B4D8               	btfsc	status,2,c
 12705  006BE0  D003               	goto	u23310
 12706                           
 12707                           ; BSR set to: 0
 12708  006BE2  05D9               	decf	getStateOpenPosition@stateMotor& (0+255),w,b
 12709  006BE4  A4D8               	btfss	status,2,c
 12710  006BE6  D02B               	goto	l2254
 12711  006BE8                     u23310:
 12712                           
 12713                           ; BSR set to: 0
 12714                           ;outputs_MC50.c: 493:     {;outputs_MC50.c: 494:          if((var_sys_NVM.learningTimeTo
      +                          Open)<(((unsigned long)var_sys_NVM.decelarationOpen*( 500/50))))
 12715  006BE8  5198               	movf	_var_sys_NVM& (0+255),w,b	;volatile
 12716  006BEA  6E1D               	movwf	___lmul@multiplier^0,c
 12717  006BEC  6A1E               	clrf	(___lmul@multiplier+1)^0,c
 12718  006BEE  6A1F               	clrf	(___lmul@multiplier+2)^0,c
 12719  006BF0  6A20               	clrf	(___lmul@multiplier+3)^0,c
 12720  006BF2  0E0A               	movlw	10
 12721  006BF4  6E21               	movwf	___lmul@multiplicand^0,c
 12722  006BF6  0E00               	movlw	0
 12723  006BF8  6E22               	movwf	(___lmul@multiplicand+1)^0,c
 12724  006BFA  0E00               	movlw	0
 12725  006BFC  6E23               	movwf	(___lmul@multiplicand+2)^0,c
 12726  006BFE  0E00               	movlw	0
 12727  006C00  6E24               	movwf	(___lmul@multiplicand+3)^0,c
 12728  006C02  ECB5  F044         	call	___lmul	;wreg free
 12729  006C06  501D               	movf	?___lmul^0,w,c
 12730  006C08  0100               	movlb	0	; () banked
 12731  006C0A  5DCC               	subwf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 12732  006C0C  501E               	movf	(?___lmul+1)^0,w,c
 12733  006C0E  59CD               	subwfb	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 12734  006C10  501F               	movf	(?___lmul+2)^0,w,c
 12735  006C12  59CE               	subwfb	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 12736  006C14  5020               	movf	(?___lmul+3)^0,w,c
 12737  006C16  59CF               	subwfb	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 12738  006C18  A0D8               	btfss	status,0,c
 12739  006C1A  D794               	goto	u23250
 12740                           
 12741                           ; BSR set to: 0
 12742  006C1C  51D9               	movf	getStateOpenPosition@stateMotor& (0+255),w,b
 12743  006C1E  ECA6  F038         	call	_getTimeDecelaration
 12744  006C22  0101               	movlb	1	; () banked
 12745  006C24  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 12746  006C26  5C29               	subwf	?_getTimeDecelaration^0,w,c
 12747  006C28  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 12748  006C2A  582A               	subwfb	(?_getTimeDecelaration+1)^0,w,c
 12749  006C2C  5120               	movf	(_var_sys+32)& (0+255),w,b	;volatile
 12750  006C2E  582B               	subwfb	(?_getTimeDecelaration+2)^0,w,c
 12751  006C30  502C               	movf	(?_getTimeDecelaration+3)^0,w,c
 12752  006C32  0A80               	xorlw	128
 12753  006C34  6E32               	movwf	??_getStateOpenPosition^0,c
 12754  006C36  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 12755  006C38  0A80               	xorlw	128
 12756  006C3A  5832               	subwfb	??_getStateOpenPosition^0,w,c
 12757  006C3C  D7C8               	goto	L72
 12758  006C3E                     l2254:
 12759                           
 12760                           ; BSR set to: 0
 12761                           ;outputs_MC50.c: 507:     return state;
 12762  006C3E  51D8               	movf	getStateOpenPosition@state& (0+255),w,b
 12763                           
 12764                           ; BSR set to: 0
 12765  006C40  0012               	return		;funcret
 12766  006C42                     __end_of_getStateOpenPosition:
 12767                           	callstack 0
 12768                           
 12769 ;; *************** function _InitSoftStop *****************
 12770 ;; Defined at:
 12771 ;;		line 849 in file "sm_ControlGate_MC50.c"
 12772 ;; Parameters:    Size  Location     Type
 12773 ;;		None
 12774 ;; Auto vars:     Size  Location     Type
 12775 ;;		None
 12776 ;; Return value:  Size  Location     Type
 12777 ;;                  1    wreg      void 
 12778 ;; Registers used:
 12779 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12780 ;; Tracked objects:
 12781 ;;		On entry : 3F/1
 12782 ;;		On exit  : 3E/0
 12783 ;;		Unchanged: 0/0
 12784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12787 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12788 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12789 ;;Total ram usage:        1 bytes
 12790 ;; Hardware stack levels used: 1
 12791 ;; Hardware stack levels required when called: 5
 12792 ;; This function calls:
 12793 ;;		_GetMotorPower
 12794 ;; This function is called by:
 12795 ;;		_controlVelocity
 12796 ;; This function uses a non-reentrant model
 12797 ;;
 12798                           
 12799                           	psect	text28
 12800  008C46                     __ptext28:
 12801                           	callstack 0
 12802  008C46                     _InitSoftStop:
 12803                           	callstack 22
 12804                           
 12805                           ; BSR set to: 1
 12806                           ;sm_ControlGate_MC50.c: 850:     if (((var_sys.AutoInversionActiveStop == YES)|| (var_sy
      +                          s.AutoInversionActive == YES))&&(var_sys_NVM.softstop >0)) {
 12807                           
 12808                           ; BSR set to: 0
 12809                           ;incstack = 0
 12810  008C46  0512               	decf	(_var_sys+18)& (0+255),w,b	;volatile
 12811  008C48  B4D8               	btfsc	status,2,c
 12812  008C4A  D003               	goto	u23350
 12813                           
 12814                           ; BSR set to: 1
 12815  008C4C  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 12816  008C4E  A4D8               	btfss	status,2,c
 12817  008C50  0012               	return	
 12818  008C52                     u23350:
 12819                           
 12820                           ; BSR set to: 1
 12821  008C52  0100               	movlb	0	; () banked
 12822  008C54  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 12823  008C56  B4D8               	btfsc	status,2,c
 12824  008C58  0012               	return	
 12825                           
 12826                           ; BSR set to: 0
 12827                           ;sm_ControlGate_MC50.c: 853:         var_sys.velocityFactor = 0;
 12828  008C5A  0E00               	movlw	0
 12829  008C5C  0101               	movlb	1	; () banked
 12830  008C5E  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12831  008C60  0E00               	movlw	0
 12832  008C62  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12833                           
 12834                           ;sm_ControlGate_MC50.c: 854:         var_sys.velocityFactorstop = 0;
 12835  008C64  0E00               	movlw	0
 12836  008C66  6F11               	movwf	(_var_sys+17)& (0+255),b	;volatile
 12837  008C68  0E00               	movlw	0
 12838  008C6A  6F10               	movwf	(_var_sys+16)& (0+255),b	;volatile
 12839                           
 12840                           ; BSR set to: 1
 12841                           ;sm_ControlGate_MC50.c: 855:         var_sys.velocityFactorstop = GetMotorPower();
 12842  008C6C  ECEE  F039         	call	_GetMotorPower	;wreg free
 12843  008C70  6E14               	movwf	??_InitSoftStop^0,c
 12844  008C72  5014               	movf	??_InitSoftStop^0,w,c
 12845  008C74  6F10               	movwf	(_var_sys+16)& (0+255),b	;volatile
 12846  008C76  6B11               	clrf	(_var_sys+17)& (0+255),b	;volatile
 12847                           
 12848                           ; BSR set to: 1
 12849                           ;sm_ControlGate_MC50.c: 859:         ts_system.timeSoftStop = var_sys.velocityFactorstop
      +                           + 1;
 12850  008C78  0E01               	movlw	1
 12851  008C7A  2510               	addwf	(_var_sys+16)& (0+255),w,b	;volatile
 12852  008C7C  6FB3               	movwf	(_ts_system+24)& (0+255),b	;volatile
 12853  008C7E  0E00               	movlw	0
 12854  008C80  2111               	addwfc	(_var_sys+17)& (0+255),w,b	;volatile
 12855  008C82  6FB4               	movwf	(_ts_system+25)& (0+255),b	;volatile
 12856                           
 12857                           ; BSR set to: 1
 12858                           ;sm_ControlGate_MC50.c: 861:         var_sys.SoftStopDecrementControl = 10 - var_sys_NVM
      +                          .softstop;
 12859  008C84  0100               	movlb	0	; () banked
 12860  008C86  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 12861  008C88  080A               	sublw	10
 12862  008C8A  0101               	movlb	1	; () banked
 12863  008C8C  6F13               	movwf	(_var_sys+19)& (0+255),b	;volatile
 12864  008C8E  0012               	return		;funcret
 12865  008C90                     __end_of_InitSoftStop:
 12866                           	callstack 0
 12867                           
 12868 ;; *************** function _ControlDecelarationFactor *****************
 12869 ;; Defined at:
 12870 ;;		line 463 in file "outputs_MC50.c"
 12871 ;; Parameters:    Size  Location     Type
 12872 ;;		None
 12873 ;; Auto vars:     Size  Location     Type
 12874 ;;		None
 12875 ;; Return value:  Size  Location     Type
 12876 ;;                  1    wreg      void 
 12877 ;; Registers used:
 12878 ;;		wreg, status,2, status,0, prodl, prodh
 12879 ;; Tracked objects:
 12880 ;;		On entry : 3E/1
 12881 ;;		On exit  : 3F/1
 12882 ;;		Unchanged: 0/0
 12883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12887 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12888 ;;Total ram usage:        0 bytes
 12889 ;; Hardware stack levels used: 1
 12890 ;; Hardware stack levels required when called: 4
 12891 ;; This function calls:
 12892 ;;		Nothing
 12893 ;; This function is called by:
 12894 ;;		_controlVelocity
 12895 ;; This function uses a non-reentrant model
 12896 ;;
 12897                           
 12898                           	psect	text29
 12899  0095A0                     __ptext29:
 12900                           	callstack 0
 12901  0095A0                     _ControlDecelarationFactor:
 12902                           	callstack 23
 12903                           
 12904                           ;outputs_MC50.c: 465:     powerControl_st.decelarationCyclesOn=1;
 12905                           
 12906                           ;incstack = 0
 12907  0095A0  0E01               	movlw	1
 12908  0095A2  0101               	movlb	1	; () banked
 12909  0095A4  6F7C               	movwf	(_powerControl_st+1)& (0+255),b
 12910                           
 12911                           ;outputs_MC50.c: 466:     powerControl_st.decelarationCyclesOff=2;
 12912  0095A6  0E02               	movlw	2
 12913  0095A8  6F7D               	movwf	(_powerControl_st+2)& (0+255),b
 12914                           
 12915                           ; BSR set to: 1
 12916                           ;outputs_MC50.c: 467:     powerControl_st.decelarationPower=var_sys_NVM.velocityDecelara
      +                          tion*var_sys.Torquerelanty;
 12917  0095AA  0100               	movlb	0	; () banked
 12918  0095AC  51B0               	movf	(_var_sys_NVM+24)& (0+255),w,b	;volatile
 12919  0095AE  0101               	movlb	1	; () banked
 12920  0095B0  0315               	mulwf	(_var_sys+21)& (0+255),b	;volatile
 12921  0095B2  CFF3 F17E          	movff	prodl,_powerControl_st+3
 12922                           
 12923                           ; BSR set to: 1
 12924  0095B6  0012               	return		;funcret
 12925  0095B8                     __end_of_ControlDecelarationFactor:
 12926                           	callstack 0
 12927                           
 12928 ;; *************** function _actionZone_Opened *****************
 12929 ;; Defined at:
 12930 ;;		line 514 in file "sm_ControlGate_MC50.c"
 12931 ;; Parameters:    Size  Location     Type
 12932 ;;		None
 12933 ;; Auto vars:     Size  Location     Type
 12934 ;;  typeOpenOrde    1   32[COMRAM] enum E10372
 12935 ;;  securityClos    1   31[COMRAM] enum E10397
 12936 ;; Return value:  Size  Location     Type
 12937 ;;                  1    wreg      void 
 12938 ;; Registers used:
 12939 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12940 ;; Tracked objects:
 12941 ;;		On entry : 3F/0
 12942 ;;		On exit  : 3E/0
 12943 ;;		Unchanged: 0/0
 12944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12946 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12948 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12949 ;;Total ram usage:        2 bytes
 12950 ;; Hardware stack levels used: 1
 12951 ;; Hardware stack levels required when called: 7
 12952 ;; This function calls:
 12953 ;;		_CloseOrder
 12954 ;;		_GetOpenOrder
 12955 ;;		_GetSecurityStateInClosing
 12956 ;;		_InitFullAutoTime
 12957 ;;		_InitWalkAutoTime
 12958 ;;		_OpenFullOrder
 12959 ;;		_OpenWalkOrder
 12960 ;;		_VerifyFollowMe
 12961 ;; This function is called by:
 12962 ;;		_sm_execute_ControlGate
 12963 ;; This function uses a non-reentrant model
 12964 ;;
 12965                           
 12966                           	psect	text30
 12967  00532C                     __ptext30:
 12968                           	callstack 0
 12969  00532C                     _actionZone_Opened:
 12970                           	callstack 22
 12971                           
 12972                           ; BSR set to: 0
 12973                           ;sm_ControlGate_MC50.c: 515:     StateEnum securityClosing = GetSecurityStateInClosing()
      +                          ;
 12974                           
 12975                           ; BSR set to: 1
 12976                           ;incstack = 0
 12977  00532C  ECBE  F03B         	call	_GetSecurityStateInClosing	;wreg free
 12978  005330  6E20               	movwf	actionZone_Opened@securityClosing^0,c
 12979                           
 12980                           ;sm_ControlGate_MC50.c: 517:     if ((securityClosing != NO) && (Abertura_pedonal == 0))
      +                           {
 12981  005332  5020               	movf	actionZone_Opened@securityClosing^0,w,c
 12982  005334  B4D8               	btfsc	status,2,c
 12983  005336  D007               	goto	l22091
 12984  005338  0101               	movlb	1	; () banked
 12985  00533A  518E               	movf	_Abertura_pedonal& (0+255),w,b
 12986  00533C  A4D8               	btfss	status,2,c
 12987  00533E  D003               	goto	l22091
 12988                           
 12989                           ; BSR set to: 1
 12990                           ;sm_ControlGate_MC50.c: 518:         InitFullAutoTime();
 12991  005340  ECA9  F04A         	call	_InitFullAutoTime	;wreg free
 12992                           
 12993                           ;sm_ControlGate_MC50.c: 519:     }
 12994  005344  D008               	goto	l2727
 12995  005346                     l22091:
 12996  005346  5020               	movf	actionZone_Opened@securityClosing^0,w,c
 12997  005348  B4D8               	btfsc	status,2,c
 12998  00534A  D005               	goto	l2727
 12999  00534C  0101               	movlb	1	; () banked
 13000  00534E  058E               	decf	_Abertura_pedonal& (0+255),w,b
 13001  005350  B4D8               	btfsc	status,2,c
 13002                           
 13003                           ; BSR set to: 1
 13004                           ;sm_ControlGate_MC50.c: 521:          InitWalkAutoTime();
 13005  005352  EC2E  F04B         	call	_InitWalkAutoTime	;wreg free
 13006  005356                     l2727:
 13007                           
 13008                           ;sm_ControlGate_MC50.c: 524:     TypeCMD typeOpenOrder = GetOpenOrder();
 13009  005356  EC76  F02B         	call	_GetOpenOrder	;wreg free
 13010  00535A  6E21               	movwf	actionZone_Opened@typeOpenOrder^0,c
 13011                           
 13012                           ;sm_ControlGate_MC50.c: 526:     VerifyFollowMe(securityClosing);
 13013  00535C  5020               	movf	actionZone_Opened@securityClosing^0,w,c
 13014  00535E  EC01  F04A         	call	_VerifyFollowMe
 13015                           
 13016                           ;sm_ControlGate_MC50.c: 530:     if ((PORTBbits.RB1==0) && (var_sys_NVM.autoTimeFullClos
      +                          e != 0)&&(var_sys.AutoCloseActive != 0) && (button_struct.current != 0x35)&& (var_sys_NV
      +                          M.operationMode == ModoCondominio)){
 13017  005362  B28E               	btfsc	142,1,c	;volatile
 13018  005364  D013               	goto	l2729
 13019  005366  0100               	movlb	0	; () banked
 13020  005368  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 13021  00536A  B4D8               	btfsc	status,2,c
 13022  00536C  D00F               	goto	l2729
 13023                           
 13024                           ; BSR set to: 0
 13025  00536E  0101               	movlb	1	; () banked
 13026  005370  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
 13027  005372  B4D8               	btfsc	status,2,c
 13028  005374  D00B               	goto	l2729
 13029                           
 13030                           ; BSR set to: 1
 13031  005376  0E35               	movlw	53
 13032  005378  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 13033  00537A  B4D8               	btfsc	status,2,c
 13034  00537C  D007               	goto	l2729
 13035                           
 13036                           ; BSR set to: 1
 13037  00537E  0E02               	movlw	2
 13038  005380  0100               	movlb	0	; () banked
 13039  005382  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 13040  005384  A4D8               	btfss	status,2,c
 13041  005386  D002               	goto	l2729
 13042                           
 13043                           ; BSR set to: 0
 13044                           ;sm_ControlGate_MC50.c: 531:       typeOpenOrder = NoCMD;
 13045  005388  0E00               	movlw	0
 13046  00538A  6E21               	movwf	actionZone_Opened@typeOpenOrder^0,c
 13047  00538C                     l2729:
 13048                           
 13049                           ;sm_ControlGate_MC50.c: 535:      if (typeOpenOrder != NoCMD)
 13050  00538C  5021               	movf	actionZone_Opened@typeOpenOrder^0,w,c
 13051  00538E  B4D8               	btfsc	status,2,c
 13052  005390  D05D               	goto	l2730
 13053                           
 13054                           ;sm_ControlGate_MC50.c: 536:      {;sm_ControlGate_MC50.c: 539:         ts_system.timeSi
      +                          nalizationDigit = (1000/50) * 3;
 13055  005392  0E00               	movlw	0
 13056  005394  0101               	movlb	1	; () banked
 13057  005396  6FA8               	movwf	(_ts_system+13)& (0+255),b	;volatile
 13058  005398  0E3C               	movlw	60
 13059  00539A  6FA7               	movwf	(_ts_system+12)& (0+255),b	;volatile
 13060                           
 13061                           ; BSR set to: 1
 13062                           ;sm_ControlGate_MC50.c: 541:        if ( var_sys_NVM.operationMode == ModoCondominio && 
      +                          var_sys_NVM.autoTimeFullClose == 0 && (typeOpenOrder == TypeFull|| typeOpenOrder == Type
      +                          FullClose ))
 13063  00539C  0E02               	movlw	2
 13064  00539E  0100               	movlb	0	; () banked
 13065  0053A0  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 13066  0053A2  A4D8               	btfss	status,2,c
 13067  0053A4  D00D               	goto	l22123
 13068                           
 13069                           ; BSR set to: 0
 13070  0053A6  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 13071  0053A8  A4D8               	btfss	status,2,c
 13072  0053AA  D00A               	goto	l22123
 13073                           
 13074                           ; BSR set to: 0
 13075  0053AC  0421               	decf	actionZone_Opened@typeOpenOrder^0,w,c
 13076  0053AE  B4D8               	btfsc	status,2,c
 13077  0053B0  D004               	goto	u25900
 13078                           
 13079                           ; BSR set to: 0
 13080  0053B2  0E04               	movlw	4
 13081  0053B4  1821               	xorwf	actionZone_Opened@typeOpenOrder^0,w,c
 13082  0053B6  A4D8               	btfss	status,2,c
 13083  0053B8  D003               	goto	l22123
 13084  0053BA                     u25900:
 13085                           
 13086                           ;sm_ControlGate_MC50.c: 542:         {;sm_ControlGate_MC50.c: 544:             CloseOrde
      +                          r();
 13087  0053BA  ECA2  F049         	call	_CloseOrder	;wreg free
 13088                           
 13089                           ;sm_ControlGate_MC50.c: 546:         }
 13090  0053BE  0012               	return	
 13091  0053C0                     l22123:
 13092                           
 13093                           ; BSR set to: 0
 13094  0053C0  51A8               	movf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 13095  0053C2  B4D8               	btfsc	status,2,c
 13096  0053C4  D014               	goto	l22137
 13097                           
 13098                           ; BSR set to: 0
 13099                           ;sm_ControlGate_MC50.c: 553:             if (typeOpenOrder == TypeFullOpen && var_sys.Fi
      +                          mCurso_OpenIsEnabled == NO && var_sys.Statedoorcontrol != st_Opened) {
 13100  0053C6  0E03               	movlw	3
 13101  0053C8  1821               	xorwf	actionZone_Opened@typeOpenOrder^0,w,c
 13102  0053CA  A4D8               	btfss	status,2,c
 13103  0053CC  D00B               	goto	l22133
 13104                           
 13105                           ; BSR set to: 0
 13106  0053CE  0101               	movlb	1	; () banked
 13107  0053D0  5104               	movf	(_var_sys+4)& (0+255),w,b	;volatile
 13108  0053D2  A4D8               	btfss	status,2,c
 13109  0053D4  D007               	goto	l22133
 13110                           
 13111                           ; BSR set to: 1
 13112  0053D6  0E04               	movlw	4
 13113  0053D8  191C               	xorwf	(_var_sys+28)& (0+255),w,b	;volatile
 13114  0053DA  B4D8               	btfsc	status,2,c
 13115  0053DC  D003               	goto	l22133
 13116  0053DE                     u25940:
 13117                           
 13118                           ; BSR set to: 1
 13119                           ;sm_ControlGate_MC50.c: 555:                 OpenFullOrder();
 13120  0053DE  ECB5  F049         	call	_OpenFullOrder	;wreg free
 13121                           
 13122                           ;sm_ControlGate_MC50.c: 556:             } else if (typeOpenOrder == TypeFullClose) {
 13123  0053E2  0012               	return	
 13124  0053E4                     l22133:
 13125  0053E4  0E04               	movlw	4
 13126  0053E6  1821               	xorwf	actionZone_Opened@typeOpenOrder^0,w,c
 13127  0053E8  A4D8               	btfss	status,2,c
 13128  0053EA  0012               	return	
 13129  0053EC  D7E6               	goto	u25900
 13130  0053EE                     l22137:
 13131                           
 13132                           ; BSR set to: 0
 13133  0053EE  0E03               	movlw	3
 13134  0053F0  0101               	movlb	1	; () banked
 13135  0053F2  190B               	xorwf	(_var_sys+11)& (0+255),w,b	;volatile
 13136  0053F4  A4D8               	btfss	status,2,c
 13137  0053F6  D009               	goto	l22145
 13138                           
 13139                           ; BSR set to: 1
 13140  0053F8  0421               	decf	actionZone_Opened@typeOpenOrder^0,w,c
 13141  0053FA  A4D8               	btfss	status,2,c
 13142  0053FC  D006               	goto	l22145
 13143  0053FE                     u25970:
 13144                           
 13145                           ; BSR set to: 1
 13146                           ;sm_ControlGate_MC50.c: 563:             OpenFullOrder();
 13147  0053FE  ECB5  F049         	call	_OpenFullOrder	;wreg free
 13148  005402                     l22143:
 13149                           
 13150                           ;sm_ControlGate_MC50.c: 565:             var_sys.AutoInversionActive = NO;
 13151  005402  0E00               	movlw	0
 13152  005404  0101               	movlb	1	; () banked
 13153  005406  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 13154                           
 13155                           ;sm_ControlGate_MC50.c: 567:         } else if (var_sys.LastState == InClose && typeOpen
      +                          Order == TypeWalk) {
 13156  005408  0012               	return	
 13157  00540A                     l22145:
 13158                           
 13159                           ; BSR set to: 1
 13160  00540A  0E03               	movlw	3
 13161  00540C  190B               	xorwf	(_var_sys+11)& (0+255),w,b	;volatile
 13162  00540E  A4D8               	btfss	status,2,c
 13163  005410  D007               	goto	l22153
 13164                           
 13165                           ; BSR set to: 1
 13166  005412  0E02               	movlw	2
 13167  005414  1821               	xorwf	actionZone_Opened@typeOpenOrder^0,w,c
 13168  005416  A4D8               	btfss	status,2,c
 13169  005418  D003               	goto	l22153
 13170                           
 13171                           ; BSR set to: 1
 13172                           ;sm_ControlGate_MC50.c: 569:             OpenWalkOrder();
 13173  00541A  EC3C  F042         	call	_OpenWalkOrder	;wreg free
 13174  00541E  D7F1               	goto	l22143
 13175  005420                     l22153:
 13176                           
 13177                           ; BSR set to: 1
 13178  005420  0E03               	movlw	3
 13179  005422  1821               	xorwf	actionZone_Opened@typeOpenOrder^0,w,c
 13180  005424  A4D8               	btfss	status,2,c
 13181  005426  D005               	goto	l22163
 13182                           
 13183                           ; BSR set to: 1
 13184                           ;sm_ControlGate_MC50.c: 574:             if (var_sys.Statedoorcontrol == st_Opened){
 13185  005428  0E04               	movlw	4
 13186  00542A  191C               	xorwf	(_var_sys+28)& (0+255),w,b	;volatile
 13187  00542C  B4D8               	btfsc	status,2,c
 13188  00542E  0012               	return	
 13189  005430  D7E6               	goto	u25970
 13190  005432                     l22163:
 13191                           
 13192                           ; BSR set to: 1
 13193  005432  0100               	movlb	0	; () banked
 13194  005434  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 13195  005436  B4D8               	btfsc	status,2,c
 13196  005438  D007               	goto	l22169
 13197                           
 13198                           ; BSR set to: 0
 13199  00543A  0E02               	movlw	2
 13200  00543C  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 13201  00543E  A4D8               	btfss	status,2,c
 13202  005440  D003               	goto	l22169
 13203                           
 13204                           ; BSR set to: 0
 13205                           ;sm_ControlGate_MC50.c: 582:         {;sm_ControlGate_MC50.c: 584:             InitFullA
      +                          utoTime();
 13206  005442  ECA9  F04A         	call	_InitFullAutoTime	;wreg free
 13207                           
 13208                           ;sm_ControlGate_MC50.c: 586:         }
 13209  005446  0012               	return	
 13210  005448                     l22169:
 13211                           
 13212                           ; BSR set to: 0
 13213  005448  5020               	movf	actionZone_Opened@securityClosing^0,w,c
 13214  00544A  D7CE               	goto	L73
 13215  00544C                     l2730:
 13216  00544C  B28E               	btfsc	142,1,c	;volatile
 13217  00544E  D00B               	goto	l22177
 13218  005450  0100               	movlb	0	; () banked
 13219  005452  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 13220  005454  B4D8               	btfsc	status,2,c
 13221  005456  D007               	goto	l22177
 13222                           
 13223                           ; BSR set to: 0
 13224                           ;sm_ControlGate_MC50.c: 597:         ts_system.timeWaitToClose = ((int) var_sys_NVM.auto
      +                          TimeFullClose * (1000/50));
 13225  005458  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 13226  00545A  0D14               	mullw	20
 13227  00545C  CFF3 F1AD          	movff	prodl,_ts_system+18	;volatile
 13228  005460  CFF4 F1AE          	movff	prodh,_ts_system+19	;volatile
 13229                           
 13230                           ;sm_ControlGate_MC50.c: 599:     }
 13231  005464  0012               	return	
 13232  005466                     l22177:
 13233  005466  0101               	movlb	1	; () banked
 13234  005468  053A               	decf	(_var_sys+58)& (0+255),w,b	;volatile
 13235  00546A  A4D8               	btfss	status,2,c
 13236  00546C  D00F               	goto	l22187
 13237                           
 13238                           ; BSR set to: 1
 13239  00546E  5020               	movf	actionZone_Opened@securityClosing^0,w,c
 13240  005470  A4D8               	btfss	status,2,c
 13241  005472  D00C               	goto	l22187
 13242                           
 13243                           ; BSR set to: 1
 13244                           ;sm_ControlGate_MC50.c: 603:         var_sys.StateFollowIsOn = NO;
 13245  005474  0E00               	movlw	0
 13246  005476  6F3A               	movwf	(_var_sys+58)& (0+255),b	;volatile
 13247                           
 13248                           ; BSR set to: 1
 13249                           ;sm_ControlGate_MC50.c: 610:         var_sys.AutoCloseActive = var_sys_NVM.folow_me;
 13250  005478  C0AD  F123         	movff	_var_sys_NVM+21,_var_sys+35	;volatile
 13251                           
 13252                           ; BSR set to: 1
 13253                           ;sm_ControlGate_MC50.c: 611:         ts_system.timeWaitToClose = var_sys_NVM.folow_me * 
      +                          (1000/50);
 13254  00547C  0100               	movlb	0	; () banked
 13255  00547E  51AD               	movf	(_var_sys_NVM+21)& (0+255),w,b	;volatile
 13256  005480  0D14               	mullw	20
 13257  005482  CFF3 F1AD          	movff	prodl,_ts_system+18	;volatile
 13258  005486  CFF4 F1AE          	movff	prodh,_ts_system+19	;volatile
 13259                           
 13260                           ;sm_ControlGate_MC50.c: 613:     }else if (ts_system.timeWaitToClose <= 0 && var_sys_NVM
      +                          .operationMode == ModoPassoPasso && var_sys.passoAPassoAutoClose == YES && var_sys.AutoC
      +                          loseActive != 0) {
 13261  00548A  0012               	return	
 13262  00548C                     l22187:
 13263                           
 13264                           ; BSR set to: 1
 13265  00548C  BFAE               	btfsc	(_ts_system+19)& (0+255),7,b	;volatile
 13266  00548E  D005               	goto	u26090
 13267  005490  51AE               	movf	(_ts_system+19)& (0+255),w,b	;volatile
 13268  005492  E113               	bnz	l22199
 13269  005494  05AD               	decf	(_ts_system+18)& (0+255),w,b	;volatile
 13270  005496  B0D8               	btfsc	status,0,c
 13271  005498  D010               	goto	l22199
 13272  00549A                     u26090:
 13273                           
 13274                           ; BSR set to: 1
 13275  00549A  0100               	movlb	0	; () banked
 13276  00549C  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 13277  00549E  A4D8               	btfss	status,2,c
 13278  0054A0  D00C               	goto	l22199
 13279                           
 13280                           ; BSR set to: 0
 13281  0054A2  0101               	movlb	1	; () banked
 13282  0054A4  0550               	decf	(_var_sys+80)& (0+255),w,b	;volatile
 13283  0054A6  A4D8               	btfss	status,2,c
 13284  0054A8  D008               	goto	l22199
 13285                           
 13286                           ; BSR set to: 1
 13287  0054AA  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
 13288  0054AC  B4D8               	btfsc	status,2,c
 13289  0054AE  D005               	goto	l22199
 13290                           
 13291                           ; BSR set to: 1
 13292                           ;sm_ControlGate_MC50.c: 615:         var_sys.AutoCloseActive = 0;
 13293  0054B0  0E00               	movlw	0
 13294  0054B2  6F23               	movwf	(_var_sys+35)& (0+255),b	;volatile
 13295                           
 13296                           ;sm_ControlGate_MC50.c: 617:         var_sys.passoAPassoAutoClose = NO;
 13297  0054B4  0E00               	movlw	0
 13298  0054B6  6F50               	movwf	(_var_sys+80)& (0+255),b	;volatile
 13299  0054B8  D780               	goto	u25900
 13300  0054BA                     l22199:
 13301  0054BA  0101               	movlb	1	; () banked
 13302  0054BC  BFAE               	btfsc	(_ts_system+19)& (0+255),7,b	;volatile
 13303  0054BE  D005               	goto	u26130
 13304  0054C0  51AE               	movf	(_ts_system+19)& (0+255),w,b	;volatile
 13305  0054C2  E119               	bnz	l22217
 13306  0054C4  05AD               	decf	(_ts_system+18)& (0+255),w,b	;volatile
 13307  0054C6  B0D8               	btfsc	status,0,c
 13308  0054C8  D016               	goto	l22217
 13309  0054CA                     u26130:
 13310                           
 13311                           ; BSR set to: 1
 13312  0054CA  0100               	movlb	0	; () banked
 13313  0054CC  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 13314  0054CE  B4D8               	btfsc	status,2,c
 13315  0054D0  D012               	goto	l22217
 13316                           
 13317                           ; BSR set to: 0
 13318  0054D2  0101               	movlb	1	; () banked
 13319  0054D4  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
 13320  0054D6  B4D8               	btfsc	status,2,c
 13321  0054D8  D00E               	goto	l22217
 13322                           
 13323                           ; BSR set to: 1
 13324                           ;sm_ControlGate_MC50.c: 621:         var_sys.AutoCloseActive = 0;
 13325  0054DA  0E00               	movlw	0
 13326  0054DC  6F23               	movwf	(_var_sys+35)& (0+255),b	;volatile
 13327                           
 13328                           ; BSR set to: 1
 13329                           ;sm_ControlGate_MC50.c: 627:         if ( var_sys.AutoInversionActive == YES )
 13330  0054DE  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 13331  0054E0  A4D8               	btfss	status,2,c
 13332  0054E2  D003               	goto	l22213
 13333                           
 13334                           ; BSR set to: 1
 13335                           ;sm_ControlGate_MC50.c: 628:         {;sm_ControlGate_MC50.c: 629:             var_sys.A
      +                          utoInversionActive = NO;
 13336  0054E4  0E00               	movlw	0
 13337  0054E6  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 13338  0054E8  D77A               	goto	u25940
 13339  0054EA                     l22213:
 13340                           
 13341                           ; BSR set to: 1
 13342                           ;sm_ControlGate_MC50.c: 633:         {;sm_ControlGate_MC50.c: 634:             CloseOrde
      +                          r();
 13343  0054EA  ECA2  F049         	call	_CloseOrder	;wreg free
 13344                           
 13345                           ;sm_ControlGate_MC50.c: 635:             var_sys.PositionIsLost = 0;
 13346  0054EE  0E00               	movlw	0
 13347  0054F0  0101               	movlb	1	; () banked
 13348  0054F2  6F48               	movwf	(_var_sys+72)& (0+255),b	;volatile
 13349  0054F4  0012               	return	
 13350  0054F6                     l22217:
 13351  0054F6  0101               	movlb	1	; () banked
 13352  0054F8  0522               	decf	(_var_sys+34)& (0+255),w,b	;volatile
 13353  0054FA  A4D8               	btfss	status,2,c
 13354  0054FC  0012               	return	
 13355                           
 13356                           ; BSR set to: 1
 13357  0054FE  5020               	movf	actionZone_Opened@securityClosing^0,w,c
 13358  005500  A4D8               	btfss	status,2,c
 13359  005502  0012               	return	
 13360                           
 13361                           ; BSR set to: 1
 13362                           ;sm_ControlGate_MC50.c: 638:     {;sm_ControlGate_MC50.c: 639:         if (ts_system.tim
      +                          eSinalizationDigit <= 1) {
 13363  005504  BFA8               	btfsc	(_ts_system+13)& (0+255),7,b	;volatile
 13364  005506  D006               	goto	u26190
 13365  005508  51A8               	movf	(_ts_system+13)& (0+255),w,b	;volatile
 13366  00550A  E103               	bnz	u26191
 13367  00550C  0E02               	movlw	2
 13368  00550E  5DA7               	subwf	(_ts_system+12)& (0+255),w,b	;volatile
 13369  005510  B0D8               	btfsc	status,0,c
 13370  005512                     u26191:
 13371  005512  0012               	return	
 13372  005514                     u26190:
 13373                           
 13374                           ; BSR set to: 1
 13375                           ;sm_ControlGate_MC50.c: 640:             var_sys.DigitSinalizedTemp = NO;
 13376  005514  0E00               	movlw	0
 13377  005516  6F22               	movwf	(_var_sys+34)& (0+255),b	;volatile
 13378  005518  0012               	return		;funcret
 13379  00551A                     __end_of_actionZone_Opened:
 13380                           	callstack 0
 13381                           
 13382 ;; *************** function _VerifyFollowMe *****************
 13383 ;; Defined at:
 13384 ;;		line 117 in file "sm_ControlGate_MC50.c"
 13385 ;; Parameters:    Size  Location     Type
 13386 ;;  securityClos    1    wreg     enum E10397
 13387 ;; Auto vars:     Size  Location     Type
 13388 ;;  securityClos    1   15[COMRAM] enum E10397
 13389 ;; Return value:  Size  Location     Type
 13390 ;;                  1    wreg      void 
 13391 ;; Registers used:
 13392 ;;		wreg, status,2, status,0
 13393 ;; Tracked objects:
 13394 ;;		On entry : 0/0
 13395 ;;		On exit  : 3E/0
 13396 ;;		Unchanged: 0/0
 13397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13399 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13401 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13402 ;;Total ram usage:        1 bytes
 13403 ;; Hardware stack levels used: 1
 13404 ;; Hardware stack levels required when called: 4
 13405 ;; This function calls:
 13406 ;;		Nothing
 13407 ;; This function is called by:
 13408 ;;		_actionZone_Opening
 13409 ;;		_actionZone_Opened
 13410 ;; This function uses a non-reentrant model
 13411 ;;
 13412                           
 13413                           	psect	text31
 13414  009402                     __ptext31:
 13415                           	callstack 0
 13416  009402                     _VerifyFollowMe:
 13417                           	callstack 24
 13418                           
 13419                           ;incstack = 0
 13420                           ;VerifyFollowMe@securityClose stored from wreg
 13421  009402  6E10               	movwf	VerifyFollowMe@securityClose^0,c
 13422                           
 13423                           ;sm_ControlGate_MC50.c: 120:     if (var_sys_NVM.folow_me != 0 && var_sys_NVM.photoCellI
      +                          nOpen == 0)
 13424  009404  0100               	movlb	0	; () banked
 13425  009406  51AD               	movf	(_var_sys_NVM+21)& (0+255),w,b	;volatile
 13426  009408  B4D8               	btfsc	status,2,c
 13427  00940A  0012               	return	
 13428                           
 13429                           ; BSR set to: 0
 13430  00940C  51A0               	movf	(_var_sys_NVM+8)& (0+255),w,b	;volatile
 13431  00940E  A4D8               	btfss	status,2,c
 13432  009410  0012               	return	
 13433                           
 13434                           ; BSR set to: 0
 13435                           ;sm_ControlGate_MC50.c: 121:     {;sm_ControlGate_MC50.c: 122:         if (securityClose
      +                           == YES && var_sys.StateFollowIsOn == NO) {
 13436  009412  0410               	decf	VerifyFollowMe@securityClose^0,w,c
 13437  009414  A4D8               	btfss	status,2,c
 13438  009416  0012               	return	
 13439                           
 13440                           ; BSR set to: 0
 13441  009418  0101               	movlb	1	; () banked
 13442  00941A  513A               	movf	(_var_sys+58)& (0+255),w,b	;volatile
 13443  00941C  A4D8               	btfss	status,2,c
 13444  00941E  0012               	return	
 13445                           
 13446                           ; BSR set to: 1
 13447                           ;sm_ControlGate_MC50.c: 123:             var_sys.StateFollowIsOn = YES;
 13448  009420  0E01               	movlw	1
 13449  009422  6F3A               	movwf	(_var_sys+58)& (0+255),b	;volatile
 13450  009424  0012               	return		;funcret
 13451  009426                     __end_of_VerifyFollowMe:
 13452                           	callstack 0
 13453                           
 13454 ;; *************** function _CloseOrder *****************
 13455 ;; Defined at:
 13456 ;;		line 63 in file "sm_ControlGate_MC50.c"
 13457 ;; Parameters:    Size  Location     Type
 13458 ;;		None
 13459 ;; Auto vars:     Size  Location     Type
 13460 ;;		None
 13461 ;; Return value:  Size  Location     Type
 13462 ;;                  1    wreg      void 
 13463 ;; Registers used:
 13464 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13465 ;; Tracked objects:
 13466 ;;		On entry : 3E/1
 13467 ;;		On exit  : 3E/0
 13468 ;;		Unchanged: 0/0
 13469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13473 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13474 ;;Total ram usage:        0 bytes
 13475 ;; Hardware stack levels used: 1
 13476 ;; Hardware stack levels required when called: 6
 13477 ;; This function calls:
 13478 ;;		_InitSoftStart
 13479 ;;		_sm_send_event
 13480 ;; This function is called by:
 13481 ;;		_actionZone_Opening
 13482 ;;		_actionZone_Opened
 13483 ;; This function uses a non-reentrant model
 13484 ;;
 13485                           
 13486                           	psect	text32
 13487  009344                     __ptext32:
 13488                           	callstack 0
 13489  009344                     _CloseOrder:
 13490                           	callstack 22
 13491                           
 13492                           ;sm_ControlGate_MC50.c: 65:     var_sys.StateMotor = InClose;
 13493                           
 13494                           ;incstack = 0
 13495  009344  0E03               	movlw	3
 13496  009346  0101               	movlb	1	; () banked
 13497  009348  6F00               	movwf	_var_sys& (0+255),b	;volatile
 13498                           
 13499                           ; BSR set to: 1
 13500                           ;sm_ControlGate_MC50.c: 66:     sm_send_event(&controlGate_stateMachine, ev_CloseGate);
 13501  00934A  0EE3               	movlw	low _controlGate_stateMachine
 13502  00934C  6E12               	movwf	sm_send_event@psm^0,c
 13503  00934E  0E01               	movlw	high _controlGate_stateMachine
 13504  009350  6E13               	movwf	(sm_send_event@psm+1)^0,c
 13505  009352  0E00               	movlw	0
 13506  009354  6E15               	movwf	(sm_send_event@event+1)^0,c
 13507  009356  0E0E               	movlw	14
 13508  009358  6E14               	movwf	sm_send_event@event^0,c
 13509  00935A  ECA7  F043         	call	_sm_send_event	;wreg free
 13510                           
 13511                           ;sm_ControlGate_MC50.c: 67:     var_sys.LastState = InClose;
 13512  00935E  0E03               	movlw	3
 13513  009360  0101               	movlb	1	; () banked
 13514  009362  6F0B               	movwf	(_var_sys+11)& (0+255),b	;volatile
 13515                           
 13516                           ; BSR set to: 1
 13517                           ;sm_ControlGate_MC50.c: 68:     InitSoftStart();
 13518  009364  ECD5  F043         	call	_InitSoftStart	;wreg free
 13519  009368  0012               	return		;funcret
 13520  00936A                     __end_of_CloseOrder:
 13521                           	callstack 0
 13522                           
 13523 ;; *************** function _actionZone_Closing *****************
 13524 ;; Defined at:
 13525 ;;		line 649 in file "sm_ControlGate_MC50.c"
 13526 ;; Parameters:    Size  Location     Type
 13527 ;;		None
 13528 ;; Auto vars:     Size  Location     Type
 13529 ;;  typeOpenOrde    1   50[COMRAM] enum E10372
 13530 ;;  securityClos    1   49[COMRAM] enum E10397
 13531 ;; Return value:  Size  Location     Type
 13532 ;;                  1    wreg      void 
 13533 ;; Registers used:
 13534 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13535 ;; Tracked objects:
 13536 ;;		On entry : 3F/0
 13537 ;;		On exit  : 0/0
 13538 ;;		Unchanged: 0/0
 13539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13541 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13543 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13544 ;;Total ram usage:        2 bytes
 13545 ;; Hardware stack levels used: 1
 13546 ;; Hardware stack levels required when called: 7
 13547 ;; This function calls:
 13548 ;;		_GetOpenOrder
 13549 ;;		_GetSecurityStateInClosing
 13550 ;;		_InitFullAutoTime
 13551 ;;		_InitWalkAutoTime
 13552 ;;		_OpenFullOrder
 13553 ;;		_OpenWalkOrder
 13554 ;;		_SetSegmentValueIntermitent
 13555 ;;		_StopOrder
 13556 ;;		___lmul
 13557 ;;		_setPositionInvertionInClosing
 13558 ;;		_sm_send_event
 13559 ;; This function is called by:
 13560 ;;		_sm_execute_ControlGate
 13561 ;; This function uses a non-reentrant model
 13562 ;;
 13563                           
 13564                           	psect	text33
 13565  00454C                     __ptext33:
 13566                           	callstack 0
 13567  00454C                     _actionZone_Closing:
 13568                           	callstack 22
 13569                           
 13570                           ; BSR set to: 0
 13571                           ;sm_ControlGate_MC50.c: 651:     TypeCMD typeOpenOrder = GetOpenOrder();
 13572                           
 13573                           ;incstack = 0
 13574  00454C  EC76  F02B         	call	_GetOpenOrder	;wreg free
 13575  004550  6E33               	movwf	actionZone_Closing@typeOpenOrder^0,c
 13576                           
 13577                           ;sm_ControlGate_MC50.c: 653:     StateEnum securityClosing = GetSecurityStateInClosing()
      +                          ;
 13578  004552  ECBE  F03B         	call	_GetSecurityStateInClosing	;wreg free
 13579  004556  6E32               	movwf	actionZone_Closing@securityClosing^0,c
 13580                           
 13581                           ;sm_ControlGate_MC50.c: 654:     Abertura_pedonal = 0;
 13582  004558  0E00               	movlw	0
 13583  00455A  0101               	movlb	1	; () banked
 13584  00455C  6F8E               	movwf	_Abertura_pedonal& (0+255),b
 13585                           
 13586                           ; BSR set to: 1
 13587                           ;sm_ControlGate_MC50.c: 656:     InitFullAutoTime();
 13588  00455E  ECA9  F04A         	call	_InitFullAutoTime	;wreg free
 13589                           
 13590                           ; BSR set to: 0
 13591                           ;sm_ControlGate_MC50.c: 658:     var_sys.passoAPassoAutoClose = NO;
 13592  004562  0E00               	movlw	0
 13593  004564  0101               	movlb	1	; () banked
 13594  004566  6F50               	movwf	(_var_sys+80)& (0+255),b	;volatile
 13595                           
 13596                           ; BSR set to: 1
 13597                           ;sm_ControlGate_MC50.c: 660:     if (var_sys.NumberOffErrors > 3) {
 13598  004568  0E03               	movlw	3
 13599  00456A  6543               	cpfsgt	(_var_sys+67)& (0+255),b	;volatile
 13600  00456C  D00D               	goto	l22241
 13601                           
 13602                           ; BSR set to: 1
 13603                           ;sm_ControlGate_MC50.c: 662:         var_sys.StateMotor = Stopped;
 13604  00456E  0E00               	movlw	0
 13605  004570  6F00               	movwf	_var_sys& (0+255),b	;volatile
 13606  004572                     l22239:
 13607                           
 13608                           ; BSR set to: 1
 13609                           ;sm_ControlGate_MC50.c: 663:         sm_send_event(&controlGate_stateMachine, ev_ErrorGa
      +                          te);
 13610  004572  0EE3               	movlw	low _controlGate_stateMachine
 13611  004574  6E12               	movwf	sm_send_event@psm^0,c
 13612  004576  0E01               	movlw	high _controlGate_stateMachine
 13613  004578  6E13               	movwf	(sm_send_event@psm+1)^0,c
 13614  00457A  0E00               	movlw	0
 13615  00457C  6E15               	movwf	(sm_send_event@event+1)^0,c
 13616  00457E  0E10               	movlw	16
 13617  004580  6E14               	movwf	sm_send_event@event^0,c
 13618  004582  ECA7  F043         	call	_sm_send_event	;wreg free
 13619                           
 13620                           ;sm_ControlGate_MC50.c: 664:     } else if ((var_sys.FimCurso_CloseIsEnabled == YES)||(v
      +                          ar_sys.TimeMaxMotorIsON<=0) && (var_sys.LearningIsEnabled==NO) && (var_sys.PositionIsLos
      +                          t==NO)) {
 13621  004586  0012               	return	
 13622  004588                     l22241:
 13623                           
 13624                           ; BSR set to: 1
 13625  004588  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
 13626  00458A  B4D8               	btfsc	status,2,c
 13627  00458C  D00C               	goto	u26240
 13628                           
 13629                           ; BSR set to: 1
 13630  00458E  5118               	movf	(_var_sys+24)& (0+255),w,b	;volatile
 13631  004590  1119               	iorwf	(_var_sys+25)& (0+255),w,b	;volatile
 13632  004592  111A               	iorwf	(_var_sys+26)& (0+255),w,b	;volatile
 13633  004594  111B               	iorwf	(_var_sys+27)& (0+255),w,b	;volatile
 13634  004596  A4D8               	btfss	status,2,c
 13635  004598  D05F               	goto	l22273
 13636                           
 13637                           ; BSR set to: 1
 13638  00459A  5126               	movf	(_var_sys+38)& (0+255),w,b	;volatile
 13639  00459C  A4D8               	btfss	status,2,c
 13640  00459E  D05C               	goto	l22273
 13641                           
 13642                           ; BSR set to: 1
 13643  0045A0  5148               	movf	(_var_sys+72)& (0+255),w,b	;volatile
 13644  0045A2  A4D8               	btfss	status,2,c
 13645  0045A4  D059               	goto	l22273
 13646  0045A6                     u26240:
 13647                           
 13648                           ; BSR set to: 1
 13649                           ;sm_ControlGate_MC50.c: 666:         if (var_sys_NVM.flashLightMode == 2) {
 13650  0045A6  0E02               	movlw	2
 13651  0045A8  0100               	movlb	0	; () banked
 13652  0045AA  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 13653  0045AC  A4D8               	btfss	status,2,c
 13654  0045AE  D018               	goto	l22253
 13655                           
 13656                           ; BSR set to: 0
 13657                           ;sm_ControlGate_MC50.c: 667:             ts_system.TimeOnFlashLigth = (long) ((long) var
      +                          _sys_NVM.ligthTime * ((1000/50)*60));
 13658  0045B0  51AC               	movf	(_var_sys_NVM+20)& (0+255),w,b	;volatile
 13659  0045B2  6E1D               	movwf	___lmul@multiplier^0,c
 13660  0045B4  6A1E               	clrf	(___lmul@multiplier+1)^0,c
 13661  0045B6  6A1F               	clrf	(___lmul@multiplier+2)^0,c
 13662  0045B8  6A20               	clrf	(___lmul@multiplier+3)^0,c
 13663  0045BA  0EB0               	movlw	176
 13664  0045BC  6E21               	movwf	___lmul@multiplicand^0,c
 13665  0045BE  0E04               	movlw	4
 13666  0045C0  6E22               	movwf	(___lmul@multiplicand+1)^0,c
 13667  0045C2  0E00               	movlw	0
 13668  0045C4  6E23               	movwf	(___lmul@multiplicand+2)^0,c
 13669  0045C6  0E00               	movlw	0
 13670  0045C8  6E24               	movwf	(___lmul@multiplicand+3)^0,c
 13671  0045CA  ECB5  F044         	call	___lmul	;wreg free
 13672  0045CE  C01D  F1BB         	movff	?___lmul,_ts_system+32	;volatile
 13673  0045D2  C01E  F1BC         	movff	?___lmul+1,_ts_system+33	;volatile
 13674  0045D6  C01F  F1BD         	movff	?___lmul+2,_ts_system+34	;volatile
 13675  0045DA  C020  F1BE         	movff	?___lmul+3,_ts_system+35	;volatile
 13676                           
 13677                           ;sm_ControlGate_MC50.c: 668:         }
 13678  0045DE  D009               	goto	l2773
 13679  0045E0                     l22253:
 13680                           
 13681                           ; BSR set to: 0
 13682                           ;sm_ControlGate_MC50.c: 670:             ts_system.TimeOnFlashLigth = 0;
 13683  0045E0  0E00               	movlw	0
 13684  0045E2  0101               	movlb	1	; () banked
 13685  0045E4  6FBB               	movwf	(_ts_system+32)& (0+255),b	;volatile
 13686  0045E6  0E00               	movlw	0
 13687  0045E8  6FBC               	movwf	(_ts_system+33)& (0+255),b	;volatile
 13688  0045EA  0E00               	movlw	0
 13689  0045EC  6FBD               	movwf	(_ts_system+34)& (0+255),b	;volatile
 13690  0045EE  0E00               	movlw	0
 13691  0045F0  6FBE               	movwf	(_ts_system+35)& (0+255),b	;volatile
 13692  0045F2                     l2773:
 13693                           
 13694                           ;sm_ControlGate_MC50.c: 672:         var_sys.AutoInversionActiveStop = NO;
 13695  0045F2  0E00               	movlw	0
 13696  0045F4  0101               	movlb	1	; () banked
 13697  0045F6  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 13698                           
 13699                           ;sm_ControlGate_MC50.c: 674:         var_sys.Statedoorcontrol = st_Closed;
 13700  0045F8  0E01               	movlw	1
 13701  0045FA  6F1C               	movwf	(_var_sys+28)& (0+255),b	;volatile
 13702                           
 13703                           ; BSR set to: 1
 13704                           ;sm_ControlGate_MC50.c: 675:         var_sys.actualCounterMoves++;
 13705  0045FC  0E01               	movlw	1
 13706  0045FE  273C               	addwf	(_var_sys+60)& (0+255),f,b	;volatile
 13707  004600  0E00               	movlw	0
 13708  004602  233D               	addwfc	(_var_sys+61)& (0+255),f,b	;volatile
 13709  004604  233E               	addwfc	(_var_sys+62)& (0+255),f,b	;volatile
 13710  004606  233F               	addwfc	(_var_sys+63)& (0+255),f,b	;volatile
 13711                           
 13712                           ; BSR set to: 1
 13713                           ;sm_ControlGate_MC50.c: 676:         var_sys.Timewalkisactived = 0;
 13714  004608  0E00               	movlw	0
 13715  00460A  6F4A               	movwf	(_var_sys+74)& (0+255),b	;volatile
 13716                           
 13717                           ; BSR set to: 1
 13718                           ;sm_ControlGate_MC50.c: 677:         var_sys.PositionActual = 0;
 13719  00460C  0E00               	movlw	0
 13720  00460E  6F1E               	movwf	(_var_sys+30)& (0+255),b	;volatile
 13721  004610  0E00               	movlw	0
 13722  004612  6F1F               	movwf	(_var_sys+31)& (0+255),b	;volatile
 13723  004614  0E00               	movlw	0
 13724  004616  6F20               	movwf	(_var_sys+32)& (0+255),b	;volatile
 13725  004618  0E00               	movlw	0
 13726  00461A  6F21               	movwf	(_var_sys+33)& (0+255),b	;volatile
 13727                           
 13728                           ; BSR set to: 1
 13729                           ;sm_ControlGate_MC50.c: 679:         var_sys.PositionIsLost = NO;
 13730  00461C  0E00               	movlw	0
 13731  00461E  6F48               	movwf	(_var_sys+72)& (0+255),b	;volatile
 13732                           
 13733                           ; BSR set to: 1
 13734                           ;sm_ControlGate_MC50.c: 680:         var_sys.NumberOffErrors = 0;
 13735  004620  0E00               	movlw	0
 13736  004622  6F43               	movwf	(_var_sys+67)& (0+255),b	;volatile
 13737                           
 13738                           ; BSR set to: 1
 13739                           ;sm_ControlGate_MC50.c: 681:         var_sys.StateMotor = Stopped;
 13740  004624  0E00               	movlw	0
 13741  004626  6F00               	movwf	_var_sys& (0+255),b	;volatile
 13742                           
 13743                           ; BSR set to: 1
 13744                           ;sm_ControlGate_MC50.c: 683:         ts_system.timeSinalizationDigit = (1000/50) * 2;
 13745  004628  0E00               	movlw	0
 13746  00462A  6FA8               	movwf	(_ts_system+13)& (0+255),b	;volatile
 13747  00462C  0E28               	movlw	40
 13748  00462E  6FA7               	movwf	(_ts_system+12)& (0+255),b	;volatile
 13749                           
 13750                           ; BSR set to: 1
 13751                           ;sm_ControlGate_MC50.c: 684:         SetSegmentValueIntermitent(dF, dC, ( 200/50));
 13752  004630  0E0C               	movlw	12
 13753  004632  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 13754  004634  0E00               	movlw	0
 13755  004636  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 13756  004638  0E04               	movlw	4
 13757  00463A  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 13758  00463C  0E0F               	movlw	15
 13759  00463E  EC46  F048         	call	_SetSegmentValueIntermitent
 13760                           
 13761                           ; BSR set to: 1
 13762                           ;sm_ControlGate_MC50.c: 687:          sm_send_event(&controlGate_stateMachine, ev_Closed
      +                          Gate);
 13763  004642  0EE3               	movlw	low _controlGate_stateMachine
 13764  004644  6E12               	movwf	sm_send_event@psm^0,c
 13765  004646  0E01               	movlw	high _controlGate_stateMachine
 13766  004648  6E13               	movwf	(sm_send_event@psm+1)^0,c
 13767  00464A  0E00               	movlw	0
 13768  00464C  6E15               	movwf	(sm_send_event@event+1)^0,c
 13769  00464E  0E0F               	movlw	15
 13770  004650  6E14               	movwf	sm_send_event@event^0,c
 13771  004652  ECA7  F043         	call	_sm_send_event	;wreg free
 13772                           
 13773                           ;sm_ControlGate_MC50.c: 691:     }
 13774  004656  0012               	return	
 13775  004658                     l22273:
 13776                           
 13777                           ; BSR set to: 1
 13778  004658  0432               	decf	actionZone_Closing@securityClosing^0,w,c
 13779  00465A  B4D8               	btfsc	status,2,c
 13780  00465C  D011               	goto	u26290
 13781                           
 13782                           ; BSR set to: 1
 13783  00465E  BFC6               	btfsc	(_ts_system+43)& (0+255),7,b	;volatile
 13784  004660  D021               	goto	l22293
 13785  004662  51C6               	movf	(_ts_system+43)& (0+255),w,b	;volatile
 13786  004664  E103               	bnz	u26270
 13787  004666  05C5               	decf	(_ts_system+42)& (0+255),w,b	;volatile
 13788  004668  A0D8               	btfss	status,0,c
 13789  00466A  D01C               	goto	l22293
 13790  00466C                     u26270:
 13791                           
 13792                           ; BSR set to: 1
 13793  00466C  0541               	decf	(_var_sys+65)& (0+255),w,b	;volatile
 13794  00466E  A4D8               	btfss	status,2,c
 13795  004670  D019               	goto	l22293
 13796                           
 13797                           ; BSR set to: 1
 13798  004672  BFCC               	btfsc	(_ts_system+49)& (0+255),7,b	;volatile
 13799  004674  D005               	goto	u26290
 13800  004676  51CC               	movf	(_ts_system+49)& (0+255),w,b	;volatile
 13801  004678  E115               	bnz	l22293
 13802  00467A  05CB               	decf	(_ts_system+48)& (0+255),w,b	;volatile
 13803  00467C  B0D8               	btfsc	status,0,c
 13804  00467E  D012               	goto	l22293
 13805  004680                     u26290:
 13806                           
 13807                           ; BSR set to: 1
 13808  004680  5127               	movf	(_var_sys+39)& (0+255),w,b	;volatile
 13809  004682  A4D8               	btfss	status,2,c
 13810  004684  D00F               	goto	l22293
 13811                           
 13812                           ; BSR set to: 1
 13813                           ;sm_ControlGate_MC50.c: 694:          if (securityClosing != YES){
 13814  004686  0432               	decf	actionZone_Closing@securityClosing^0,w,c
 13815  004688  A4D8               	btfss	status,2,c
 13816                           
 13817                           ; BSR set to: 1
 13818                           ;sm_ControlGate_MC50.c: 695:             var_sys.NumberOffErrors++;
 13819  00468A  2B43               	incf	(_var_sys+67)& (0+255),f,b	;volatile
 13820                           
 13821                           ; BSR set to: 1
 13822                           ;sm_ControlGate_MC50.c: 697:         var_sys.NumberOffErrors++;
 13823                           
 13824                           ;sm_ControlGate_MC50.c: 696:         }
 13825  00468C  2B43               	incf	(_var_sys+67)& (0+255),f,b	;volatile
 13826                           
 13827                           ; BSR set to: 1
 13828                           ;sm_ControlGate_MC50.c: 698:         var_sys.AutoInversionActive = YES;
 13829  00468E  0E01               	movlw	1
 13830  004690  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 13831                           
 13832                           ; BSR set to: 1
 13833                           ;sm_ControlGate_MC50.c: 699:         ts_system.TimeWaitToNextState = ( 500/50);
 13834  004692  0E00               	movlw	0
 13835  004694  6FC0               	movwf	(_ts_system+37)& (0+255),b	;volatile
 13836  004696  0E0A               	movlw	10
 13837  004698  6FBF               	movwf	(_ts_system+36)& (0+255),b	;volatile
 13838                           
 13839                           ; BSR set to: 1
 13840                           ;sm_ControlGate_MC50.c: 700:         ts_system.TimeStopElectricBrake = ((1000/50)+( 500/
      +                          50));
 13841  00469A  0E00               	movlw	0
 13842  00469C  6FDC               	movwf	(_ts_system+65)& (0+255),b	;volatile
 13843  00469E  0E1E               	movlw	30
 13844  0046A0  6FDB               	movwf	(_ts_system+64)& (0+255),b	;volatile
 13845                           
 13846                           ;sm_ControlGate_MC50.c: 702:     }
 13847  0046A2  0012               	return	
 13848  0046A4                     l22293:
 13849                           
 13850                           ; BSR set to: 1
 13851  0046A4  BFC6               	btfsc	(_ts_system+43)& (0+255),7,b	;volatile
 13852  0046A6  D02E               	goto	l22323
 13853  0046A8  51C6               	movf	(_ts_system+43)& (0+255),w,b	;volatile
 13854  0046AA  E103               	bnz	u26320
 13855  0046AC  05C5               	decf	(_ts_system+42)& (0+255),w,b	;volatile
 13856  0046AE  A0D8               	btfss	status,0,c
 13857  0046B0  D029               	goto	l22323
 13858  0046B2                     u26320:
 13859                           
 13860                           ; BSR set to: 1
 13861  0046B2  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 13862  0046B4  A4D8               	btfss	status,2,c
 13863  0046B6  D026               	goto	l22323
 13864                           
 13865                           ; BSR set to: 1
 13866                           ;sm_ControlGate_MC50.c: 704:         if (var_sys.InvertionCurrentOpening == YES) {
 13867  0046B8  0545               	decf	(_var_sys+69)& (0+255),w,b	;volatile
 13868  0046BA  A4D8               	btfss	status,2,c
 13869  0046BC  D005               	goto	l22305
 13870  0046BE                     u26340:
 13871                           
 13872                           ; BSR set to: 1
 13873                           ;sm_ControlGate_MC50.c: 706:             var_sys.StateMotor = Stopped;
 13874  0046BE  0E00               	movlw	0
 13875  0046C0  6F00               	movwf	_var_sys& (0+255),b	;volatile
 13876                           
 13877                           ; BSR set to: 1
 13878                           ;sm_ControlGate_MC50.c: 707:             setPositionInvertionInClosing();
 13879  0046C2  EC73  F034         	call	_setPositionInvertionInClosing	;wreg free
 13880  0046C6  D755               	goto	l22239
 13881  0046C8                     l22305:
 13882                           
 13883                           ; BSR set to: 1
 13884  0046C8  BFC0               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 13885  0046CA  D005               	goto	u26350
 13886  0046CC  51C0               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 13887  0046CE  E117               	bnz	l22321
 13888  0046D0  05BF               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 13889  0046D2  B0D8               	btfsc	status,0,c
 13890  0046D4  D014               	goto	l22321
 13891  0046D6                     u26350:
 13892                           
 13893                           ; BSR set to: 1
 13894                           ;sm_ControlGate_MC50.c: 710:          if(var_sys.Timewalkisactived == YES){
 13895  0046D6  054A               	decf	(_var_sys+74)& (0+255),w,b	;volatile
 13896  0046D8  A4D8               	btfss	status,2,c
 13897  0046DA  D003               	goto	l22311
 13898                           
 13899                           ; BSR set to: 1
 13900                           ;sm_ControlGate_MC50.c: 711:                 OpenWalkOrder();
 13901  0046DC  EC3C  F042         	call	_OpenWalkOrder	;wreg free
 13902                           
 13903                           ;sm_ControlGate_MC50.c: 713:             }
 13904  0046E0  D004               	goto	l22315
 13905  0046E2                     l22311:
 13906                           
 13907                           ; BSR set to: 1
 13908                           ;sm_ControlGate_MC50.c: 716:             OpenFullOrder();
 13909  0046E2  ECB5  F049         	call	_OpenFullOrder	;wreg free
 13910                           
 13911                           ;sm_ControlGate_MC50.c: 718:             setPositionInvertionInClosing();
 13912  0046E6  EC73  F034         	call	_setPositionInvertionInClosing	;wreg free
 13913  0046EA                     l22315:
 13914                           
 13915                           ;sm_ControlGate_MC50.c: 720:             var_sys.AutoInversionActive = NO;
 13916  0046EA  0E00               	movlw	0
 13917  0046EC  0101               	movlb	1	; () banked
 13918  0046EE  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 13919                           
 13920                           ; BSR set to: 1
 13921                           ;sm_ControlGate_MC50.c: 721:             var_sys.InvertionCurrentClosing = YES;
 13922  0046F0  0E01               	movlw	1
 13923  0046F2  6F44               	movwf	(_var_sys+68)& (0+255),b	;volatile
 13924                           
 13925                           ; BSR set to: 1
 13926                           ;sm_ControlGate_MC50.c: 722:             ts_system.TimeInversionStart = (1000/50);
 13927  0046F4  0E00               	movlw	0
 13928  0046F6  6FCC               	movwf	(_ts_system+49)& (0+255),b	;volatile
 13929  0046F8  0E14               	movlw	20
 13930  0046FA  6FCB               	movwf	(_ts_system+48)& (0+255),b	;volatile
 13931                           
 13932                           ;sm_ControlGate_MC50.c: 726:         } else
 13933  0046FC  0012               	return	
 13934  0046FE                     l22321:
 13935                           
 13936                           ; BSR set to: 1
 13937                           ;sm_ControlGate_MC50.c: 727:         {;sm_ControlGate_MC50.c: 728:             var_sys.S
      +                          tateMotor = Stopped;
 13938  0046FE  0E00               	movlw	0
 13939  004700  6F00               	movwf	_var_sys& (0+255),b	;volatile
 13940  004702  0012               	return	
 13941  004704                     l22323:
 13942                           
 13943                           ; BSR set to: 1
 13944  004704  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 13945  004706  A4D8               	btfss	status,2,c
 13946  004708  D017               	goto	l22339
 13947                           
 13948                           ; BSR set to: 1
 13949                           ;sm_ControlGate_MC50.c: 732:                 var_sys.StateMotor = Stopped;
 13950  00470A  0E00               	movlw	0
 13951  00470C  6F00               	movwf	_var_sys& (0+255),b	;volatile
 13952                           
 13953                           ; BSR set to: 1
 13954                           ;sm_ControlGate_MC50.c: 737:         if (ts_system.TimeWaitToNextState <= 0) {
 13955  00470E  BFC0               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 13956  004710  D005               	goto	u26380
 13957  004712  51C0               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 13958  004714  E160               	bnz	l2810
 13959  004716  05BF               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 13960  004718  B0D8               	btfsc	status,0,c
 13961  00471A  0012               	return	
 13962  00471C                     u26380:
 13963                           
 13964                           ; BSR set to: 1
 13965                           ;sm_ControlGate_MC50.c: 738:             if(var_sys.Timewalkisactived == YES){
 13966  00471C  054A               	decf	(_var_sys+74)& (0+255),w,b	;volatile
 13967  00471E  A4D8               	btfss	status,2,c
 13968  004720  D003               	goto	l22333
 13969                           
 13970                           ; BSR set to: 1
 13971                           ;sm_ControlGate_MC50.c: 739:                 OpenWalkOrder();
 13972  004722  EC3C  F042         	call	_OpenWalkOrder	;wreg free
 13973                           
 13974                           ;sm_ControlGate_MC50.c: 741:             }
 13975  004726  D004               	goto	l22337
 13976  004728                     l22333:
 13977                           
 13978                           ; BSR set to: 1
 13979                           ;sm_ControlGate_MC50.c: 744:                  OpenFullOrder();
 13980  004728  ECB5  F049         	call	_OpenFullOrder	;wreg free
 13981                           
 13982                           ;sm_ControlGate_MC50.c: 746:             setPositionInvertionInClosing();
 13983  00472C  EC73  F034         	call	_setPositionInvertionInClosing	;wreg free
 13984  004730                     l22337:
 13985                           
 13986                           ;sm_ControlGate_MC50.c: 748:             var_sys.AutoInversionActive = NO;
 13987  004730  0E00               	movlw	0
 13988  004732  0101               	movlb	1	; () banked
 13989  004734  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 13990  004736  0012               	return	
 13991  004738                     l22339:
 13992                           
 13993                           ; BSR set to: 1
 13994  004738  5100               	movf	_var_sys& (0+255),w,b	;volatile
 13995  00473A  A4D8               	btfss	status,2,c
 13996  00473C  D00B               	goto	l22355
 13997                           
 13998                           ; BSR set to: 1
 13999                           ;sm_ControlGate_MC50.c: 755:         if(securityClosing != ST){
 14000  00473E  0E02               	movlw	2
 14001  004740  1832               	xorwf	actionZone_Closing@securityClosing^0,w,c
 14002  004742  B4D8               	btfsc	status,2,c
 14003  004744  D002               	goto	l22351
 14004                           
 14005                           ; BSR set to: 1
 14006                           ;sm_ControlGate_MC50.c: 756:            var_sys.NumberOffErrors++;
 14007  004746  2B43               	incf	(_var_sys+67)& (0+255),f,b	;volatile
 14008  004748  D7BA               	goto	u26340
 14009  00474A                     l22351:
 14010                           
 14011                           ; BSR set to: 1
 14012                           ;sm_ControlGate_MC50.c: 761:         {;sm_ControlGate_MC50.c: 762:             setPositi
      +                          onInvertionInClosing();
 14013  00474A  EC73  F034         	call	_setPositionInvertionInClosing	;wreg free
 14014  00474E                     l22353:
 14015                           
 14016                           ;sm_ControlGate_MC50.c: 763:             StopOrder();
 14017  00474E  EC57  F04A         	call	_StopOrder	;wreg free
 14018  004752  0012               	return	
 14019  004754                     l22355:
 14020                           
 14021                           ; BSR set to: 1
 14022  004754  BFCE               	btfsc	(_ts_system+51)& (0+255),7,b	;volatile
 14023  004756  D005               	goto	u26420
 14024  004758  51CE               	movf	(_ts_system+51)& (0+255),w,b	;volatile
 14025  00475A  E10B               	bnz	l22365
 14026  00475C  05CD               	decf	(_ts_system+50)& (0+255),w,b	;volatile
 14027  00475E  B0D8               	btfsc	status,0,c
 14028  004760  D008               	goto	l22365
 14029  004762                     u26420:
 14030                           
 14031                           ; BSR set to: 1
 14032  004762  0546               	decf	(_var_sys+70)& (0+255),w,b	;volatile
 14033  004764  A4D8               	btfss	status,2,c
 14034  004766  D005               	goto	l22365
 14035                           
 14036                           ; BSR set to: 1
 14037                           ;sm_ControlGate_MC50.c: 768:         setPositionInvertionInClosing();
 14038  004768  EC73  F034         	call	_setPositionInvertionInClosing	;wreg free
 14039                           
 14040                           ; BSR set to: 1
 14041                           ;sm_ControlGate_MC50.c: 769:         var_sys.InvertionClosingFromOpen = NO;
 14042  00476C  0E00               	movlw	0
 14043  00476E  6F46               	movwf	(_var_sys+70)& (0+255),b	;volatile
 14044  004770  D7EE               	goto	l22353
 14045  004772                     l22365:
 14046                           
 14047                           ; BSR set to: 1
 14048  004772  0100               	movlb	0	; () banked
 14049  004774  05A8               	decf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 14050  004776  B4D8               	btfsc	status,2,c
 14051  004778  D004               	goto	u26450
 14052                           
 14053                           ; BSR set to: 0
 14054  00477A  0E02               	movlw	2
 14055  00477C  19A8               	xorwf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 14056  00477E  A4D8               	btfss	status,2,c
 14057  004780  D005               	goto	l22373
 14058  004782                     u26450:
 14059                           
 14060                           ; BSR set to: 0
 14061                           ;sm_ControlGate_MC50.c: 773:         if (typeOpenOrder != TypeFullClose) {
 14062  004782  0E04               	movlw	4
 14063  004784  1833               	xorwf	actionZone_Closing@typeOpenOrder^0,w,c
 14064  004786  B4D8               	btfsc	status,2,c
 14065  004788  0012               	return	
 14066  00478A  D7E1               	goto	l22353
 14067  00478C                     l22373:
 14068                           
 14069                           ; BSR set to: 0
 14070  00478C  5033               	movf	actionZone_Closing@typeOpenOrder^0,w,c
 14071  00478E  B4D8               	btfsc	status,2,c
 14072  004790  0012               	return	
 14073                           
 14074                           ; BSR set to: 0
 14075                           ;sm_ControlGate_MC50.c: 788:         if ( var_sys_NVM.operationMode == ModoPassoPasso )
 14076  004792  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 14077  004794  A4D8               	btfss	status,2,c
 14078  004796  D013               	goto	l22389
 14079                           
 14080                           ; BSR set to: 0
 14081                           ;sm_ControlGate_MC50.c: 789:         {;sm_ControlGate_MC50.c: 790:             setPositi
      +                          onInvertionInClosing();
 14082  004798  EC73  F034         	call	_setPositionInvertionInClosing	;wreg free
 14083                           
 14084                           ; BSR set to: 1
 14085                           ;sm_ControlGate_MC50.c: 791:             StopOrder();
 14086  00479C  EC57  F04A         	call	_StopOrder	;wreg free
 14087                           
 14088                           ;sm_ControlGate_MC50.c: 793:             if (typeOpenOrder == TypeWalk && var_sys_NVM.op
      +                          erationMode != ModoCondominio)
 14089  0047A0  0E02               	movlw	2
 14090  0047A2  1833               	xorwf	actionZone_Closing@typeOpenOrder^0,w,c
 14091  0047A4  A4D8               	btfss	status,2,c
 14092  0047A6  0012               	return	
 14093  0047A8  0E02               	movlw	2
 14094  0047AA  0100               	movlb	0	; () banked
 14095  0047AC  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 14096  0047AE  B4D8               	btfsc	status,2,c
 14097  0047B0  0012               	return	
 14098                           
 14099                           ; BSR set to: 0
 14100                           ;sm_ControlGate_MC50.c: 794:             {;sm_ControlGate_MC50.c: 795:                 I
      +                          nitWalkAutoTime();
 14101  0047B2  EC2E  F04B         	call	_InitWalkAutoTime	;wreg free
 14102                           
 14103                           ; BSR set to: 0
 14104                           ;sm_ControlGate_MC50.c: 796:                 var_sys.showAP = YES;
 14105  0047B6  0E01               	movlw	1
 14106  0047B8  0101               	movlb	1	; () banked
 14107  0047BA  6F4F               	movwf	(_var_sys+79)& (0+255),b	;volatile
 14108  0047BC  0012               	return	
 14109  0047BE                     l22389:
 14110                           
 14111                           ; BSR set to: 0
 14112                           ;sm_ControlGate_MC50.c: 801:         {;sm_ControlGate_MC50.c: 802:             if (typeO
      +                          penOrder != TypeFullClose){
 14113  0047BE  0E04               	movlw	4
 14114  0047C0  1833               	xorwf	actionZone_Closing@typeOpenOrder^0,w,c
 14115  0047C2  B4D8               	btfsc	status,2,c
 14116  0047C4  D7C4               	goto	l22353
 14117                           
 14118                           ; BSR set to: 0
 14119                           ;sm_ControlGate_MC50.c: 803:                 var_sys.AutoInversionActive = YES;
 14120  0047C6  0E01               	movlw	1
 14121  0047C8  0101               	movlb	1	; () banked
 14122  0047CA  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 14123                           
 14124                           ;sm_ControlGate_MC50.c: 804:                 ts_system.TimeWaitToNextState = ( 500/50);
 14125  0047CC  0E00               	movlw	0
 14126  0047CE  6FC0               	movwf	(_ts_system+37)& (0+255),b	;volatile
 14127  0047D0  0E0A               	movlw	10
 14128  0047D2  6FBF               	movwf	(_ts_system+36)& (0+255),b	;volatile
 14129                           
 14130                           ;sm_ControlGate_MC50.c: 806:             }
 14131  0047D4  0012               	return	
 14132  0047D6                     l2810:
 14133  0047D6  0012               	return		;funcret
 14134  0047D8                     __end_of_actionZone_Closing:
 14135                           	callstack 0
 14136                           
 14137 ;; *************** function _setPositionInvertionInClosing *****************
 14138 ;; Defined at:
 14139 ;;		line 867 in file "sm_ControlGate_MC50.c"
 14140 ;; Parameters:    Size  Location     Type
 14141 ;;		None
 14142 ;; Auto vars:     Size  Location     Type
 14143 ;;		None
 14144 ;; Return value:  Size  Location     Type
 14145 ;;                  1    wreg      void 
 14146 ;; Registers used:
 14147 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14148 ;; Tracked objects:
 14149 ;;		On entry : 3E/1
 14150 ;;		On exit  : 3F/1
 14151 ;;		Unchanged: 0/0
 14152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14155 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14156 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14157 ;;Total ram usage:       12 bytes
 14158 ;; Hardware stack levels used: 1
 14159 ;; Hardware stack levels required when called: 6
 14160 ;; This function calls:
 14161 ;;		_getTimeDecelaration
 14162 ;; This function is called by:
 14163 ;;		_actionZone_Opening
 14164 ;;		_actionZone_Closing
 14165 ;; This function uses a non-reentrant model
 14166 ;;
 14167                           
 14168                           	psect	text34
 14169  0068E6                     __ptext34:
 14170                           	callstack 0
 14171  0068E6                     _setPositionInvertionInClosing:
 14172                           	callstack 22
 14173                           
 14174                           ;sm_ControlGate_MC50.c: 872:     if(var_sys_NVM.TypeofMotor != 2){
 14175                           
 14176                           ;incstack = 0
 14177  0068E6  0E02               	movlw	2
 14178  0068E8  0100               	movlb	0	; () banked
 14179  0068EA  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 14180  0068EC  B4D8               	btfsc	status,2,c
 14181  0068EE  D007               	goto	l21021
 14182                           
 14183                           ; BSR set to: 0
 14184                           ;sm_ControlGate_MC50.c: 874:        var_sys.PositionActual += ( 100/50);
 14185  0068F0  0E02               	movlw	2
 14186  0068F2  0101               	movlb	1	; () banked
 14187  0068F4  271E               	addwf	(_var_sys+30)& (0+255),f,b	;volatile
 14188  0068F6  0E00               	movlw	0
 14189  0068F8  231F               	addwfc	(_var_sys+31)& (0+255),f,b	;volatile
 14190  0068FA  2320               	addwfc	(_var_sys+32)& (0+255),f,b	;volatile
 14191  0068FC  D008               	goto	L74
 14192  0068FE                     l21021:
 14193                           
 14194                           ; BSR set to: 0
 14195                           ;sm_ControlGate_MC50.c: 878:     {;sm_ControlGate_MC50.c: 879:        var_sys.PositionAc
      +                          tual -= ( 50/50);
 14196  0068FE  0EFF               	movlw	255
 14197  006900  0101               	movlb	1	; () banked
 14198  006902  271E               	addwf	(_var_sys+30)& (0+255),f,b	;volatile
 14199  006904  0EFF               	movlw	255
 14200  006906  231F               	addwfc	(_var_sys+31)& (0+255),f,b	;volatile
 14201  006908  0EFF               	movlw	255
 14202  00690A  2320               	addwfc	(_var_sys+32)& (0+255),f,b	;volatile
 14203  00690C  0EFF               	movlw	255
 14204  00690E                     L74:
 14205  00690E  2321               	addwfc	(_var_sys+33)& (0+255),f,b	;volatile
 14206                           
 14207                           ; BSR set to: 1
 14208                           ;sm_ControlGate_MC50.c: 882:     if (var_sys.PositionActual > getTimeDecelaration(InOpen
      +                          Full)&& var_sys_NVM.TypeofMotor != 2) {
 14209  006910  0E01               	movlw	1
 14210  006912  ECA6  F038         	call	_getTimeDecelaration
 14211  006916  0101               	movlb	1	; () banked
 14212  006918  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 14213  00691A  5C29               	subwf	?_getTimeDecelaration^0,w,c
 14214  00691C  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 14215  00691E  582A               	subwfb	(?_getTimeDecelaration+1)^0,w,c
 14216  006920  5120               	movf	(_var_sys+32)& (0+255),w,b	;volatile
 14217  006922  582B               	subwfb	(?_getTimeDecelaration+2)^0,w,c
 14218  006924  502C               	movf	(?_getTimeDecelaration+3)^0,w,c
 14219  006926  0A80               	xorlw	128
 14220  006928  0100               	movlb	0	; () banked
 14221  00692A  6FD8               	movwf	??_setPositionInvertionInClosing& (0+255),b
 14222  00692C  0101               	movlb	1	; () banked
 14223  00692E  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 14224  006930  0A80               	xorlw	128
 14225  006932  0100               	movlb	0	; () banked
 14226  006934  59D8               	subwfb	??_setPositionInvertionInClosing& (0+255),w,b
 14227  006936  B0D8               	btfsc	status,0,c
 14228  006938  D008               	goto	l21029
 14229                           
 14230                           ; BSR set to: 0
 14231  00693A  0E02               	movlw	2
 14232  00693C  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 14233  00693E  B4D8               	btfsc	status,2,c
 14234  006940  D004               	goto	l21029
 14235                           
 14236                           ; BSR set to: 0
 14237                           ;sm_ControlGate_MC50.c: 883:         var_sys.PositionActual = getTimeDecelaration(InOpen
      +                          Full);
 14238  006942  0E01               	movlw	1
 14239  006944  ECA6  F038         	call	_getTimeDecelaration
 14240  006948  D01A               	goto	L75
 14241  00694A                     l21029:
 14242                           
 14243                           ; BSR set to: 0
 14244  00694A  0E03               	movlw	3
 14245  00694C  ECA6  F038         	call	_getTimeDecelaration
 14246  006950  5029               	movf	?_getTimeDecelaration^0,w,c
 14247  006952  0101               	movlb	1	; () banked
 14248  006954  5D1E               	subwf	(_var_sys+30)& (0+255),w,b	;volatile
 14249  006956  502A               	movf	(?_getTimeDecelaration+1)^0,w,c
 14250  006958  591F               	subwfb	(_var_sys+31)& (0+255),w,b	;volatile
 14251  00695A  502B               	movf	(?_getTimeDecelaration+2)^0,w,c
 14252  00695C  5920               	subwfb	(_var_sys+32)& (0+255),w,b	;volatile
 14253  00695E  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 14254  006960  0A80               	xorlw	128
 14255  006962  0100               	movlb	0	; () banked
 14256  006964  6FD8               	movwf	??_setPositionInvertionInClosing& (0+255),b
 14257  006966  502C               	movf	(?_getTimeDecelaration+3)^0,w,c
 14258  006968  0A80               	xorlw	128
 14259  00696A  59D8               	subwfb	??_setPositionInvertionInClosing& (0+255),w,b
 14260  00696C  B0D8               	btfsc	status,0,c
 14261  00696E  D00F               	goto	l21035
 14262                           
 14263                           ; BSR set to: 0
 14264  006970  0E02               	movlw	2
 14265  006972  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 14266  006974  B4D8               	btfsc	status,2,c
 14267  006976  D00B               	goto	l21035
 14268                           
 14269                           ; BSR set to: 0
 14270                           ;sm_ControlGate_MC50.c: 887:         var_sys.PositionActual = getTimeDecelaration(InClos
      +                          e);
 14271  006978  0E03               	movlw	3
 14272  00697A  ECA6  F038         	call	_getTimeDecelaration
 14273  00697E                     L75:
 14274  00697E  C029  F11E         	movff	?_getTimeDecelaration,_var_sys+30	;volatile
 14275  006982  C02A  F11F         	movff	?_getTimeDecelaration+1,_var_sys+31	;volatile
 14276  006986  C02B  F120         	movff	?_getTimeDecelaration+2,_var_sys+32	;volatile
 14277  00698A  C02C  F121         	movff	?_getTimeDecelaration+3,_var_sys+33	;volatile
 14278  00698E                     l21035:
 14279                           
 14280                           ;sm_ControlGate_MC50.c: 890:     var_sys.TimeMaxMotorIsON = ((signed long)var_sys_NVM.le
      +                          arningTimeToOpen - var_sys.PositionActual) + (var_sys_NVM.decelarationOpen*( 500/50))+ (
      +                          1000/50)*10;
 14281  00698E  0100               	movlb	0	; () banked
 14282  006990  5198               	movf	_var_sys_NVM& (0+255),w,b	;volatile
 14283  006992  0D0A               	mullw	10
 14284  006994  CFF3 F0D8          	movff	prodl,??_setPositionInvertionInClosing
 14285  006998  CFF4 F0D9          	movff	prodh,??_setPositionInvertionInClosing+1
 14286  00699C  0E00               	movlw	0
 14287  00699E  BFD9               	btfsc	(??_setPositionInvertionInClosing+1)& (0+255),7,b
 14288  0069A0  0EFF               	movlw	255
 14289  0069A2  6FDA               	movwf	(??_setPositionInvertionInClosing+2)& (0+255),b
 14290  0069A4  6FDB               	movwf	(??_setPositionInvertionInClosing+3)& (0+255),b
 14291  0069A6  0101               	movlb	1	; () banked
 14292  0069A8  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 14293  0069AA  0100               	movlb	0	; () banked
 14294  0069AC  5DD8               	subwf	??_setPositionInvertionInClosing& (0+255),w,b
 14295  0069AE  6FDC               	movwf	(??_setPositionInvertionInClosing+4)& (0+255),b
 14296  0069B0  0101               	movlb	1	; () banked
 14297  0069B2  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 14298  0069B4  0100               	movlb	0	; () banked
 14299  0069B6  59D9               	subwfb	(??_setPositionInvertionInClosing+1)& (0+255),w,b
 14300  0069B8  6FDD               	movwf	(??_setPositionInvertionInClosing+5)& (0+255),b
 14301  0069BA  0101               	movlb	1	; () banked
 14302  0069BC  5120               	movf	(_var_sys+32)& (0+255),w,b	;volatile
 14303  0069BE  0100               	movlb	0	; () banked
 14304  0069C0  59DA               	subwfb	(??_setPositionInvertionInClosing+2)& (0+255),w,b
 14305  0069C2  6FDE               	movwf	(??_setPositionInvertionInClosing+6)& (0+255),b
 14306  0069C4  0101               	movlb	1	; () banked
 14307  0069C6  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 14308  0069C8  0100               	movlb	0	; () banked
 14309  0069CA  59DB               	subwfb	(??_setPositionInvertionInClosing+3)& (0+255),w,b
 14310  0069CC  6FDF               	movwf	(??_setPositionInvertionInClosing+7)& (0+255),b
 14311  0069CE  51CC               	movf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 14312  0069D0  25DC               	addwf	(??_setPositionInvertionInClosing+4)& (0+255),w,b
 14313  0069D2  6FE0               	movwf	(??_setPositionInvertionInClosing+8)& (0+255),b
 14314  0069D4  51CD               	movf	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 14315  0069D6  21DD               	addwfc	(??_setPositionInvertionInClosing+5)& (0+255),w,b
 14316  0069D8  6FE1               	movwf	(??_setPositionInvertionInClosing+9)& (0+255),b
 14317  0069DA  51CE               	movf	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 14318  0069DC  21DE               	addwfc	(??_setPositionInvertionInClosing+6)& (0+255),w,b
 14319  0069DE  6FE2               	movwf	(??_setPositionInvertionInClosing+10)& (0+255),b
 14320  0069E0  51CF               	movf	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 14321  0069E2  21DF               	addwfc	(??_setPositionInvertionInClosing+7)& (0+255),w,b
 14322  0069E4  6FE3               	movwf	(??_setPositionInvertionInClosing+11)& (0+255),b
 14323  0069E6  0EC8               	movlw	200
 14324  0069E8  25E0               	addwf	(??_setPositionInvertionInClosing+8)& (0+255),w,b
 14325  0069EA  0101               	movlb	1	; () banked
 14326  0069EC  6F18               	movwf	(_var_sys+24)& (0+255),b	;volatile
 14327  0069EE  0E00               	movlw	0
 14328  0069F0  0100               	movlb	0	; () banked
 14329  0069F2  21E1               	addwfc	(??_setPositionInvertionInClosing+9)& (0+255),w,b
 14330  0069F4  0101               	movlb	1	; () banked
 14331  0069F6  6F19               	movwf	(_var_sys+25)& (0+255),b	;volatile
 14332  0069F8  0E00               	movlw	0
 14333  0069FA  0100               	movlb	0	; () banked
 14334  0069FC  21E2               	addwfc	(??_setPositionInvertionInClosing+10)& (0+255),w,b
 14335  0069FE  0101               	movlb	1	; () banked
 14336  006A00  6F1A               	movwf	(_var_sys+26)& (0+255),b	;volatile
 14337  006A02  0E00               	movlw	0
 14338  006A04  0100               	movlb	0	; () banked
 14339  006A06  21E3               	addwfc	(??_setPositionInvertionInClosing+11)& (0+255),w,b
 14340  006A08  0101               	movlb	1	; () banked
 14341  006A0A  6F1B               	movwf	(_var_sys+27)& (0+255),b	;volatile
 14342                           
 14343                           ; BSR set to: 1
 14344  006A0C  0012               	return		;funcret
 14345  006A0E                     __end_of_setPositionInvertionInClosing:
 14346                           	callstack 0
 14347                           
 14348 ;; *************** function _getTimeDecelaration *****************
 14349 ;; Defined at:
 14350 ;;		line 641 in file "outputs_MC50.c"
 14351 ;; Parameters:    Size  Location     Type
 14352 ;;  state           1    wreg     enum E10381
 14353 ;; Auto vars:     Size  Location     Type
 14354 ;;  state           1   48[COMRAM] enum E10381
 14355 ;; Return value:  Size  Location     Type
 14356 ;;                  4   40[COMRAM] long 
 14357 ;; Registers used:
 14358 ;;		wreg, status,2, status,0, cstack
 14359 ;; Tracked objects:
 14360 ;;		On entry : 3E/1
 14361 ;;		On exit  : 0/0
 14362 ;;		Unchanged: 0/0
 14363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14364 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14365 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14366 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14367 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14368 ;;Total ram usage:        9 bytes
 14369 ;; Hardware stack levels used: 1
 14370 ;; Hardware stack levels required when called: 5
 14371 ;; This function calls:
 14372 ;;		___lmul
 14373 ;; This function is called by:
 14374 ;;		_getStateOpenPosition
 14375 ;;		_controlVelocity
 14376 ;;		_setPositionInvertionInClosing
 14377 ;;		_setPositionInvertionInOpening
 14378 ;; This function uses a non-reentrant model
 14379 ;;
 14380                           
 14381                           	psect	text35
 14382  00714C                     __ptext35:
 14383                           	callstack 0
 14384  00714C                     _getTimeDecelaration:
 14385                           	callstack 22
 14386                           
 14387                           ; BSR set to: 1
 14388                           ;incstack = 0
 14389                           ;getTimeDecelaration@state stored from wreg
 14390  00714C  6E31               	movwf	getTimeDecelaration@state^0,c
 14391                           
 14392                           ;outputs_MC50.c: 641: signed long getTimeDecelaration(stateMotor_enum state);outputs_MC5
      +                          0.c: 642: {;outputs_MC50.c: 644:     if(state==InClose)
 14393  00714E  0E03               	movlw	3
 14394  007150  1831               	xorwf	getTimeDecelaration@state^0,w,c
 14395  007152  A4D8               	btfss	status,2,c
 14396  007154  D033               	goto	l20057
 14397                           
 14398                           ;outputs_MC50.c: 645:     {;outputs_MC50.c: 646:         if (var_sys_NVM.TypeofMotor != 
      +                          2)
 14399  007156  0E02               	movlw	2
 14400  007158  0100               	movlb	0	; () banked
 14401  00715A  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 14402  00715C  B4D8               	btfsc	status,2,c
 14403  00715E  D018               	goto	l20053
 14404                           
 14405                           ; BSR set to: 0
 14406                           ;outputs_MC50.c: 647:         {return (signed long)((signed long)var_sys_NVM.decelaratio
      +                          nClose*( 500/50));}
 14407  007160  5199               	movf	(_var_sys_NVM+1)& (0+255),w,b	;volatile
 14408  007162  6E1D               	movwf	___lmul@multiplier^0,c
 14409  007164  6A1E               	clrf	(___lmul@multiplier+1)^0,c
 14410  007166  6A1F               	clrf	(___lmul@multiplier+2)^0,c
 14411  007168  6A20               	clrf	(___lmul@multiplier+3)^0,c
 14412  00716A  0E0A               	movlw	10
 14413  00716C  6E21               	movwf	___lmul@multiplicand^0,c
 14414  00716E  0E00               	movlw	0
 14415  007170  6E22               	movwf	(___lmul@multiplicand+1)^0,c
 14416  007172  0E00               	movlw	0
 14417  007174  6E23               	movwf	(___lmul@multiplicand+2)^0,c
 14418  007176  0E00               	movlw	0
 14419  007178  6E24               	movwf	(___lmul@multiplicand+3)^0,c
 14420  00717A  ECB5  F044         	call	___lmul	;wreg free
 14421  00717E  C01D  F029         	movff	?___lmul,?_getTimeDecelaration
 14422  007182  C01E  F02A         	movff	?___lmul+1,?_getTimeDecelaration+1
 14423  007186  C01F  F02B         	movff	?___lmul+2,?_getTimeDecelaration+2
 14424  00718A  C020  F02C         	movff	?___lmul+3,?_getTimeDecelaration+3
 14425  00718E  0012               	return	
 14426  007190                     l20053:
 14427                           
 14428                           ; BSR set to: 0
 14429  007190  C099  F02D         	movff	_var_sys_NVM+1,??_getTimeDecelaration	;volatile
 14430  007194  6A2E               	clrf	(??_getTimeDecelaration+1)^0,c
 14431  007196  6A2F               	clrf	(??_getTimeDecelaration+2)^0,c
 14432  007198  6A30               	clrf	(??_getTimeDecelaration+3)^0,c
 14433  00719A  0E02               	movlw	2
 14434  00719C                     u22965:
 14435  00719C  90D8               	bcf	status,0,c
 14436  00719E  362D               	rlcf	??_getTimeDecelaration^0,f,c
 14437  0071A0  362E               	rlcf	(??_getTimeDecelaration+1)^0,f,c
 14438  0071A2  362F               	rlcf	(??_getTimeDecelaration+2)^0,f,c
 14439  0071A4  3630               	rlcf	(??_getTimeDecelaration+3)^0,f,c
 14440  0071A6  2EE8               	decfsz	wreg,f,c
 14441  0071A8  D7F9               	goto	u22965
 14442  0071AA  C02D  F029         	movff	??_getTimeDecelaration,?_getTimeDecelaration
 14443  0071AE  C02E  F02A         	movff	??_getTimeDecelaration+1,?_getTimeDecelaration+1
 14444  0071B2  C02F  F02B         	movff	??_getTimeDecelaration+2,?_getTimeDecelaration+2
 14445  0071B6  C030  F02C         	movff	??_getTimeDecelaration+3,?_getTimeDecelaration+3
 14446  0071BA  0012               	return	
 14447  0071BC                     l20057:
 14448                           
 14449                           ;outputs_MC50.c: 651:     {;outputs_MC50.c: 652:         if (var_sys_NVM.TypeofMotor != 
      +                          2)
 14450  0071BC  0E02               	movlw	2
 14451  0071BE  0100               	movlb	0	; () banked
 14452  0071C0  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 14453  0071C2  B4D8               	btfsc	status,2,c
 14454  0071C4  D01D               	goto	l20065
 14455                           
 14456                           ; BSR set to: 0
 14457                           ;outputs_MC50.c: 653:         {return (signed long)((signed long)var_sys_NVM.learningTim
      +                          eToOpen-(((signed long)var_sys_NVM.decelarationOpen*( 500/50))));}
 14458  0071C6  5198               	movf	_var_sys_NVM& (0+255),w,b	;volatile
 14459  0071C8  6E1D               	movwf	___lmul@multiplier^0,c
 14460  0071CA  6A1E               	clrf	(___lmul@multiplier+1)^0,c
 14461  0071CC  6A1F               	clrf	(___lmul@multiplier+2)^0,c
 14462  0071CE  6A20               	clrf	(___lmul@multiplier+3)^0,c
 14463  0071D0  0EF6               	movlw	246
 14464  0071D2  6E21               	movwf	___lmul@multiplicand^0,c
 14465  0071D4  0EFF               	movlw	255
 14466  0071D6  6E22               	movwf	(___lmul@multiplicand+1)^0,c
 14467  0071D8  0EFF               	movlw	255
 14468  0071DA  6E23               	movwf	(___lmul@multiplicand+2)^0,c
 14469  0071DC  0EFF               	movlw	255
 14470  0071DE  6E24               	movwf	(___lmul@multiplicand+3)^0,c
 14471  0071E0  ECB5  F044         	call	___lmul	;wreg free
 14472  0071E4  0100               	movlb	0	; () banked
 14473  0071E6  51CC               	movf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 14474  0071E8  241D               	addwf	?___lmul^0,w,c
 14475  0071EA  6E29               	movwf	?_getTimeDecelaration^0,c
 14476  0071EC  51CD               	movf	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 14477  0071EE  201E               	addwfc	(?___lmul+1)^0,w,c
 14478  0071F0  6E2A               	movwf	(?_getTimeDecelaration+1)^0,c
 14479  0071F2  51CE               	movf	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 14480  0071F4  201F               	addwfc	(?___lmul+2)^0,w,c
 14481  0071F6  6E2B               	movwf	(?_getTimeDecelaration+2)^0,c
 14482  0071F8  51CF               	movf	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 14483  0071FA  2020               	addwfc	(?___lmul+3)^0,w,c
 14484  0071FC  6E2C               	movwf	(?_getTimeDecelaration+3)^0,c
 14485  0071FE  0012               	return	
 14486  007200                     l20065:
 14487                           
 14488                           ; BSR set to: 0
 14489  007200  C098  F02D         	movff	_var_sys_NVM,??_getTimeDecelaration	;volatile
 14490  007204  6A2E               	clrf	(??_getTimeDecelaration+1)^0,c
 14491  007206  6A2F               	clrf	(??_getTimeDecelaration+2)^0,c
 14492  007208  6A30               	clrf	(??_getTimeDecelaration+3)^0,c
 14493  00720A  0E02               	movlw	2
 14494  00720C                     u22985:
 14495  00720C  90D8               	bcf	status,0,c
 14496  00720E  362D               	rlcf	??_getTimeDecelaration^0,f,c
 14497  007210  362E               	rlcf	(??_getTimeDecelaration+1)^0,f,c
 14498  007212  362F               	rlcf	(??_getTimeDecelaration+2)^0,f,c
 14499  007214  3630               	rlcf	(??_getTimeDecelaration+3)^0,f,c
 14500  007216  2EE8               	decfsz	wreg,f,c
 14501  007218  D7F9               	goto	u22985
 14502  00721A  502D               	movf	??_getTimeDecelaration^0,w,c
 14503  00721C  5DCC               	subwf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 14504  00721E  6E29               	movwf	?_getTimeDecelaration^0,c
 14505  007220  502E               	movf	(??_getTimeDecelaration+1)^0,w,c
 14506  007222  59CD               	subwfb	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 14507  007224  6E2A               	movwf	(?_getTimeDecelaration+1)^0,c
 14508  007226  502F               	movf	(??_getTimeDecelaration+2)^0,w,c
 14509  007228  59CE               	subwfb	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 14510  00722A  6E2B               	movwf	(?_getTimeDecelaration+2)^0,c
 14511  00722C  5030               	movf	(??_getTimeDecelaration+3)^0,w,c
 14512  00722E  59CF               	subwfb	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 14513  007230  6E2C               	movwf	(?_getTimeDecelaration+3)^0,c
 14514  007232  0012               	return		;funcret
 14515  007234                     __end_of_getTimeDecelaration:
 14516                           	callstack 0
 14517                           
 14518 ;; *************** function ___lmul *****************
 14519 ;; Defined at:
 14520 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul32.c"
 14521 ;; Parameters:    Size  Location     Type
 14522 ;;  multiplier      4   28[COMRAM] unsigned long 
 14523 ;;  multiplicand    4   32[COMRAM] unsigned long 
 14524 ;; Auto vars:     Size  Location     Type
 14525 ;;  product         4   36[COMRAM] unsigned long 
 14526 ;; Return value:  Size  Location     Type
 14527 ;;                  4   28[COMRAM] unsigned long 
 14528 ;; Registers used:
 14529 ;;		wreg, status,2, status,0
 14530 ;; Tracked objects:
 14531 ;;		On entry : 0/1
 14532 ;;		On exit  : 0/0
 14533 ;;		Unchanged: 0/0
 14534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14535 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14536 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14538 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14539 ;;Total ram usage:       12 bytes
 14540 ;; Hardware stack levels used: 1
 14541 ;; Hardware stack levels required when called: 4
 14542 ;; This function calls:
 14543 ;;		Nothing
 14544 ;; This function is called by:
 14545 ;;		_getStateOpenPosition
 14546 ;;		_getTimeDecelaration
 14547 ;;		_actionZone_Closing
 14548 ;;		_sm_execute_menuConfiguration
 14549 ;; This function uses a non-reentrant model
 14550 ;;
 14551                           
 14552                           	psect	text36
 14553  00896A                     __ptext36:
 14554                           	callstack 0
 14555  00896A                     ___lmul:
 14556                           	callstack 24
 14557                           
 14558                           ;incstack = 0
 14559  00896A  0E00               	movlw	0
 14560  00896C  6E25               	movwf	___lmul@product^0,c
 14561  00896E  0E00               	movlw	0
 14562  008970  6E26               	movwf	(___lmul@product+1)^0,c
 14563  008972  0E00               	movlw	0
 14564  008974  6E27               	movwf	(___lmul@product+2)^0,c
 14565  008976  0E00               	movlw	0
 14566  008978  6E28               	movwf	(___lmul@product+3)^0,c
 14567  00897A                     l19943:
 14568  00897A  A01D               	btfss	___lmul@multiplier^0,0,c
 14569  00897C  D008               	goto	l19947
 14570  00897E  5021               	movf	___lmul@multiplicand^0,w,c
 14571  008980  2625               	addwf	___lmul@product^0,f,c
 14572  008982  5022               	movf	(___lmul@multiplicand+1)^0,w,c
 14573  008984  2226               	addwfc	(___lmul@product+1)^0,f,c
 14574  008986  5023               	movf	(___lmul@multiplicand+2)^0,w,c
 14575  008988  2227               	addwfc	(___lmul@product+2)^0,f,c
 14576  00898A  5024               	movf	(___lmul@multiplicand+3)^0,w,c
 14577  00898C  2228               	addwfc	(___lmul@product+3)^0,f,c
 14578  00898E                     l19947:
 14579  00898E  90D8               	bcf	status,0,c
 14580  008990  3621               	rlcf	___lmul@multiplicand^0,f,c
 14581  008992  3622               	rlcf	(___lmul@multiplicand+1)^0,f,c
 14582  008994  3623               	rlcf	(___lmul@multiplicand+2)^0,f,c
 14583  008996  3624               	rlcf	(___lmul@multiplicand+3)^0,f,c
 14584  008998  90D8               	bcf	status,0,c
 14585  00899A  3220               	rrcf	(___lmul@multiplier+3)^0,f,c
 14586  00899C  321F               	rrcf	(___lmul@multiplier+2)^0,f,c
 14587  00899E  321E               	rrcf	(___lmul@multiplier+1)^0,f,c
 14588  0089A0  321D               	rrcf	___lmul@multiplier^0,f,c
 14589  0089A2  501D               	movf	___lmul@multiplier^0,w,c
 14590  0089A4  101E               	iorwf	(___lmul@multiplier+1)^0,w,c
 14591  0089A6  101F               	iorwf	(___lmul@multiplier+2)^0,w,c
 14592  0089A8  1020               	iorwf	(___lmul@multiplier+3)^0,w,c
 14593  0089AA  A4D8               	btfss	status,2,c
 14594  0089AC  D7E6               	goto	l19943
 14595  0089AE  C025  F01D         	movff	___lmul@product,?___lmul
 14596  0089B2  C026  F01E         	movff	___lmul@product+1,?___lmul+1
 14597  0089B6  C027  F01F         	movff	___lmul@product+2,?___lmul+2
 14598  0089BA  C028  F020         	movff	___lmul@product+3,?___lmul+3
 14599  0089BE  0012               	return		;funcret
 14600  0089C0                     __end_of___lmul:
 14601                           	callstack 0
 14602                           
 14603 ;; *************** function _StopOrder *****************
 14604 ;; Defined at:
 14605 ;;		line 96 in file "sm_ControlGate_MC50.c"
 14606 ;; Parameters:    Size  Location     Type
 14607 ;;		None
 14608 ;; Auto vars:     Size  Location     Type
 14609 ;;		None
 14610 ;; Return value:  Size  Location     Type
 14611 ;;                  1    wreg      void 
 14612 ;; Registers used:
 14613 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14614 ;; Tracked objects:
 14615 ;;		On entry : 3E/1
 14616 ;;		On exit  : 0/0
 14617 ;;		Unchanged: 0/0
 14618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14622 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14623 ;;Total ram usage:        0 bytes
 14624 ;; Hardware stack levels used: 1
 14625 ;; Hardware stack levels required when called: 6
 14626 ;; This function calls:
 14627 ;;		_sm_send_event
 14628 ;; This function is called by:
 14629 ;;		_actionZone_Opening
 14630 ;;		_actionZone_Closing
 14631 ;; This function uses a non-reentrant model
 14632 ;;
 14633                           
 14634                           	psect	text37
 14635  0094AE                     __ptext37:
 14636                           	callstack 0
 14637  0094AE                     _StopOrder:
 14638                           	callstack 22
 14639                           
 14640                           ;sm_ControlGate_MC50.c: 99:    var_sys.StateMotor = Stopped;
 14641                           
 14642                           ;incstack = 0
 14643  0094AE  0E00               	movlw	0
 14644  0094B0  0101               	movlb	1	; () banked
 14645  0094B2  6F00               	movwf	_var_sys& (0+255),b	;volatile
 14646                           
 14647                           ; BSR set to: 1
 14648                           ;sm_ControlGate_MC50.c: 100:    sm_send_event(&controlGate_stateMachine, ev_StopGate);
 14649  0094B4  0EE3               	movlw	low _controlGate_stateMachine
 14650  0094B6  6E12               	movwf	sm_send_event@psm^0,c
 14651  0094B8  0E01               	movlw	high _controlGate_stateMachine
 14652  0094BA  6E13               	movwf	(sm_send_event@psm+1)^0,c
 14653  0094BC  0E00               	movlw	0
 14654  0094BE  6E15               	movwf	(sm_send_event@event+1)^0,c
 14655  0094C0  0E0D               	movlw	13
 14656  0094C2  6E14               	movwf	sm_send_event@event^0,c
 14657  0094C4  ECA7  F043         	call	_sm_send_event	;wreg free
 14658  0094C8  0012               	return		;funcret
 14659  0094CA                     __end_of_StopOrder:
 14660                           	callstack 0
 14661                           
 14662 ;; *************** function _GetSecurityStateInClosing *****************
 14663 ;; Defined at:
 14664 ;;		line 776 in file "inputs_MC50.c"
 14665 ;; Parameters:    Size  Location     Type
 14666 ;;		None
 14667 ;; Auto vars:     Size  Location     Type
 14668 ;;		None
 14669 ;; Return value:  Size  Location     Type
 14670 ;;                  1    wreg      enum E10564
 14671 ;; Registers used:
 14672 ;;		wreg, status,2, status,0, cstack
 14673 ;; Tracked objects:
 14674 ;;		On entry : 0/0
 14675 ;;		On exit  : 3E/0
 14676 ;;		Unchanged: 0/0
 14677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14678 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14681 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14682 ;;Total ram usage:        0 bytes
 14683 ;; Hardware stack levels used: 1
 14684 ;; Hardware stack levels required when called: 5
 14685 ;; This function calls:
 14686 ;;		_SetSegmentValueIntermitent
 14687 ;; This function is called by:
 14688 ;;		_actionZone_Opening
 14689 ;;		_actionZone_Opened
 14690 ;;		_actionZone_Closing
 14691 ;; This function uses a non-reentrant model
 14692 ;;
 14693                           
 14694                           	psect	text38
 14695  00777C                     __ptext38:
 14696                           	callstack 0
 14697  00777C                     _GetSecurityStateInClosing:
 14698                           	callstack 23
 14699                           
 14700                           ;inputs_MC50.c: 786:      if((var_sys_NVM.securityBandIsON == 1) && (var_sys.SecurityBar
      +                          IsObstructed == YES)&&(var_sys_NVM.securityBandInOpen == 0)&& (var_sys_NVM.Stopboton == 
      +                          0))
 14701                           
 14702                           ;incstack = 0
 14703  00777C  0100               	movlb	0	; () banked
 14704  00777E  05A1               	decf	(_var_sys_NVM+9)& (0+255),w,b	;volatile
 14705  007780  A4D8               	btfss	status,2,c
 14706  007782  D01B               	goto	l20701
 14707                           
 14708                           ; BSR set to: 0
 14709  007784  0101               	movlb	1	; () banked
 14710  007786  0502               	decf	(_var_sys+2)& (0+255),w,b	;volatile
 14711  007788  A4D8               	btfss	status,2,c
 14712  00778A  D017               	goto	l20701
 14713                           
 14714                           ; BSR set to: 1
 14715  00778C  0100               	movlb	0	; () banked
 14716  00778E  51A3               	movf	(_var_sys_NVM+11)& (0+255),w,b	;volatile
 14717  007790  A4D8               	btfss	status,2,c
 14718  007792  D013               	goto	l20701
 14719                           
 14720                           ; BSR set to: 0
 14721  007794  51AE               	movf	(_var_sys_NVM+22)& (0+255),w,b	;volatile
 14722  007796  A4D8               	btfss	status,2,c
 14723  007798  D010               	goto	l20701
 14724                           
 14725                           ; BSR set to: 0
 14726                           ;inputs_MC50.c: 787:     {;inputs_MC50.c: 790:         ts_system.timeSinalizationDigit=(
      +                           200/50);
 14727  00779A  0E00               	movlw	0
 14728  00779C  0101               	movlb	1	; () banked
 14729  00779E  6FA8               	movwf	(_ts_system+13)& (0+255),b	;volatile
 14730  0077A0  0E04               	movlw	4
 14731  0077A2  6FA7               	movwf	(_ts_system+12)& (0+255),b	;volatile
 14732                           
 14733                           ; BSR set to: 1
 14734                           ;inputs_MC50.c: 791:         SetSegmentValueIntermitent(dL,dA,(1000/50));
 14735  0077A4  0E0A               	movlw	10
 14736  0077A6  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 14737  0077A8  0E00               	movlw	0
 14738  0077AA  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 14739  0077AC  0E14               	movlw	20
 14740  0077AE  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 14741  0077B0  0E12               	movlw	18
 14742  0077B2  EC46  F048         	call	_SetSegmentValueIntermitent
 14743  0077B6                     l20695:
 14744                           
 14745                           ; BSR set to: 1
 14746                           ;inputs_MC50.c: 792:         return YES;
 14747  0077B6  0E01               	movlw	1
 14748  0077B8  0012               	return	
 14749  0077BA                     l20701:
 14750  0077BA  0100               	movlb	0	; () banked
 14751  0077BC  05AE               	decf	(_var_sys_NVM+22)& (0+255),w,b	;volatile
 14752  0077BE  A4D8               	btfss	status,2,c
 14753  0077C0  D013               	goto	l20715
 14754                           
 14755                           ; BSR set to: 0
 14756  0077C2  0101               	movlb	1	; () banked
 14757  0077C4  0502               	decf	(_var_sys+2)& (0+255),w,b	;volatile
 14758  0077C6  A4D8               	btfss	status,2,c
 14759  0077C8  D00F               	goto	l20715
 14760                           
 14761                           ; BSR set to: 1
 14762                           ;inputs_MC50.c: 795:     {;inputs_MC50.c: 797:         ts_system.timeSinalizationDigit=(
      +                           200/50);
 14763  0077CA  0E00               	movlw	0
 14764  0077CC  6FA8               	movwf	(_ts_system+13)& (0+255),b	;volatile
 14765  0077CE  0E04               	movlw	4
 14766  0077D0  6FA7               	movwf	(_ts_system+12)& (0+255),b	;volatile
 14767                           
 14768                           ; BSR set to: 1
 14769                           ;inputs_MC50.c: 798:         SetSegmentValueIntermitent(d5,dt,(1000/50));
 14770  0077D2  0E15               	movlw	21
 14771  0077D4  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 14772  0077D6  0E00               	movlw	0
 14773  0077D8  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 14774  0077DA  0E14               	movlw	20
 14775  0077DC  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 14776  0077DE  0E05               	movlw	5
 14777  0077E0  EC46  F048         	call	_SetSegmentValueIntermitent
 14778                           
 14779                           ; BSR set to: 1
 14780                           ;inputs_MC50.c: 799:         return ST;
 14781  0077E4  0E02               	movlw	2
 14782  0077E6  0012               	return	
 14783  0077E8                     l20715:
 14784  0077E8  0100               	movlb	0	; () banked
 14785  0077EA  059F               	decf	(_var_sys_NVM+7)& (0+255),w,b	;volatile
 14786  0077EC  A4D8               	btfss	status,2,c
 14787  0077EE  D017               	goto	l20731
 14788                           
 14789                           ; BSR set to: 0
 14790  0077F0  0101               	movlb	1	; () banked
 14791  0077F2  0501               	decf	(_var_sys+1)& (0+255),w,b	;volatile
 14792  0077F4  A4D8               	btfss	status,2,c
 14793  0077F6  D013               	goto	l20731
 14794                           
 14795                           ; BSR set to: 1
 14796  0077F8  0100               	movlb	0	; () banked
 14797  0077FA  51A0               	movf	(_var_sys_NVM+8)& (0+255),w,b	;volatile
 14798  0077FC  A4D8               	btfss	status,2,c
 14799  0077FE  D00F               	goto	l20731
 14800                           
 14801                           ; BSR set to: 0
 14802                           ;inputs_MC50.c: 803:     {;inputs_MC50.c: 805:         ts_system.timeSinalizationDigit=(
      +                           200/50);
 14803  007800  0E00               	movlw	0
 14804  007802  0101               	movlb	1	; () banked
 14805  007804  6FA8               	movwf	(_ts_system+13)& (0+255),b	;volatile
 14806  007806  0E04               	movlw	4
 14807  007808  6FA7               	movwf	(_ts_system+12)& (0+255),b	;volatile
 14808                           
 14809                           ; BSR set to: 1
 14810                           ;inputs_MC50.c: 806:         SetSegmentValueIntermitent(dL,dE,(1000/50));
 14811  00780A  0E0E               	movlw	14
 14812  00780C  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 14813  00780E  0E00               	movlw	0
 14814  007810  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 14815  007812  0E14               	movlw	20
 14816  007814  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 14817  007816  0E12               	movlw	18
 14818  007818  EC46  F048         	call	_SetSegmentValueIntermitent
 14819  00781C  D7CC               	goto	l20695
 14820  00781E                     l20731:
 14821                           
 14822                           ;inputs_MC50.c: 811:     {;inputs_MC50.c: 812:         return NO;
 14823  00781E  0E00               	movlw	0
 14824  007820  0012               	return		;funcret
 14825  007822                     __end_of_GetSecurityStateInClosing:
 14826                           	callstack 0
 14827                           
 14828 ;; *************** function _actionZone_Closed *****************
 14829 ;; Defined at:
 14830 ;;		line 327 in file "sm_ControlGate_MC50.c"
 14831 ;; Parameters:    Size  Location     Type
 14832 ;;		None
 14833 ;; Auto vars:     Size  Location     Type
 14834 ;;  typeOpenOrde    1   32[COMRAM] enum E10372
 14835 ;;  securityOpen    1   31[COMRAM] enum E10397
 14836 ;; Return value:  Size  Location     Type
 14837 ;;                  1    wreg      void 
 14838 ;; Registers used:
 14839 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14840 ;; Tracked objects:
 14841 ;;		On entry : 3F/0
 14842 ;;		On exit  : 0/0
 14843 ;;		Unchanged: 0/0
 14844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14846 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14848 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14849 ;;Total ram usage:        2 bytes
 14850 ;; Hardware stack levels used: 1
 14851 ;; Hardware stack levels required when called: 8
 14852 ;; This function calls:
 14853 ;;		_GetOpenOrder
 14854 ;;		_GetSecurityStateInOpening
 14855 ;;		_InitFullAutoTime
 14856 ;;		_InitWalkAutoTime
 14857 ;;		_OpenFullOrder
 14858 ;;		_OpenWalkOrder
 14859 ;;		_WaitPreFlash
 14860 ;;		_sm_send_event
 14861 ;; This function is called by:
 14862 ;;		_sm_execute_ControlGate
 14863 ;; This function uses a non-reentrant model
 14864 ;;
 14865                           
 14866                           	psect	text39
 14867  0076D2                     __ptext39:
 14868                           	callstack 0
 14869  0076D2                     _actionZone_Closed:
 14870                           	callstack 21
 14871                           
 14872                           ; BSR set to: 0
 14873                           ;sm_ControlGate_MC50.c: 331:     if (main_stateMachine.current_state != st_MenuConfigura
      +                          tion) {
 14874                           
 14875                           ;incstack = 0
 14876  0076D2  0101               	movlb	1	; () banked
 14877  0076D4  05EE               	decf	_main_stateMachine& (0+255),w,b
 14878  0076D6  11EF               	iorwf	(_main_stateMachine+1)& (0+255),w,b
 14879  0076D8  B4D8               	btfsc	status,2,c
 14880  0076DA  0012               	return	
 14881                           
 14882                           ; BSR set to: 1
 14883                           ;sm_ControlGate_MC50.c: 334:         TypeCMD typeOpenOrder = GetOpenOrder();
 14884  0076DC  EC76  F02B         	call	_GetOpenOrder	;wreg free
 14885  0076E0  6E21               	movwf	actionZone_Closed@typeOpenOrder^0,c
 14886                           
 14887                           ;sm_ControlGate_MC50.c: 336:         StateEnum securityOpening = GetSecurityStateInOpeni
      +                          ng();
 14888  0076E2  EC11  F03C         	call	_GetSecurityStateInOpening	;wreg free
 14889  0076E6  6E20               	movwf	actionZone_Closed@securityOpening^0,c
 14890                           
 14891                           ;sm_ControlGate_MC50.c: 338:         if (var_sys_NVM.homemPresente == 1) {
 14892  0076E8  0100               	movlb	0	; () banked
 14893  0076EA  05A8               	decf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 14894  0076EC  A4D8               	btfss	status,2,c
 14895  0076EE  D018               	goto	l21881
 14896                           
 14897                           ; BSR set to: 0
 14898                           ;sm_ControlGate_MC50.c: 344:             if (typeOpenOrder == TypeFullOpen && var_sys.Fi
      +                          mCurso_OpenIsEnabled == NO && securityOpening == NO) {
 14899  0076F0  0E03               	movlw	3
 14900  0076F2  1821               	xorwf	actionZone_Closed@typeOpenOrder^0,w,c
 14901  0076F4  A4D8               	btfss	status,2,c
 14902  0076F6  0012               	return	
 14903                           
 14904                           ; BSR set to: 0
 14905  0076F8  0101               	movlb	1	; () banked
 14906  0076FA  5104               	movf	(_var_sys+4)& (0+255),w,b	;volatile
 14907  0076FC  A4D8               	btfss	status,2,c
 14908  0076FE  0012               	return	
 14909                           
 14910                           ; BSR set to: 1
 14911  007700  5020               	movf	actionZone_Closed@securityOpening^0,w,c
 14912  007702  A4D8               	btfss	status,2,c
 14913  007704  0012               	return	
 14914                           
 14915                           ; BSR set to: 1
 14916                           ;sm_ControlGate_MC50.c: 346:                 OpenFullOrder();
 14917  007706  ECB5  F049         	call	_OpenFullOrder	;wreg free
 14918  00770A                     l21879:
 14919                           
 14920                           ;sm_ControlGate_MC50.c: 347:                 sm_send_event(&main_stateMachine, ev_MotorI
      +                          sOpen);
 14921  00770A  0EEE               	movlw	low _main_stateMachine
 14922  00770C  6E12               	movwf	sm_send_event@psm^0,c
 14923  00770E  0E01               	movlw	high _main_stateMachine
 14924  007710  6E13               	movwf	(sm_send_event@psm+1)^0,c
 14925  007712  0E00               	movlw	0
 14926  007714  6E15               	movwf	(sm_send_event@event+1)^0,c
 14927  007716  0E11               	movlw	17
 14928  007718  6E14               	movwf	sm_send_event@event^0,c
 14929  00771A  ECA7  F043         	call	_sm_send_event	;wreg free
 14930  00771E  0012               	return	
 14931  007720                     l21881:
 14932                           
 14933                           ; BSR set to: 0
 14934  007720  0421               	decf	actionZone_Closed@typeOpenOrder^0,w,c
 14935  007722  B4D8               	btfsc	status,2,c
 14936  007724  D004               	goto	u25380
 14937                           
 14938                           ; BSR set to: 0
 14939  007726  0E03               	movlw	3
 14940  007728  1821               	xorwf	actionZone_Closed@typeOpenOrder^0,w,c
 14941  00772A  A4D8               	btfss	status,2,c
 14942  00772C  D017               	goto	l21901
 14943  00772E                     u25380:
 14944                           
 14945                           ; BSR set to: 0
 14946  00772E  5020               	movf	actionZone_Closed@securityOpening^0,w,c
 14947  007730  A4D8               	btfss	status,2,c
 14948  007732  D014               	goto	l21901
 14949                           
 14950                           ; BSR set to: 0
 14951  007734  0101               	movlb	1	; () banked
 14952  007736  511D               	movf	(_var_sys+29)& (0+255),w,b	;volatile
 14953  007738  A4D8               	btfss	status,2,c
 14954  00773A  D010               	goto	l21901
 14955                           
 14956                           ; BSR set to: 1
 14957                           ;sm_ControlGate_MC50.c: 353:             if (var_sys_NVM.flashRGBMode == rgb_pre){
 14958  00773C  0E02               	movlw	2
 14959  00773E  0100               	movlb	0	; () banked
 14960  007740  19B1               	xorwf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 14961  007742  A4D8               	btfss	status,2,c
 14962  007744  D006               	goto	l21895
 14963                           
 14964                           ; BSR set to: 0
 14965                           ;sm_ControlGate_MC50.c: 354:                 var_sys.preflashingcontrol = YES;
 14966  007746  0E01               	movlw	1
 14967  007748  0101               	movlb	1	; () banked
 14968  00774A  6F1D               	movwf	(_var_sys+29)& (0+255),b	;volatile
 14969                           
 14970                           ; BSR set to: 1
 14971                           ;sm_ControlGate_MC50.c: 355:                 WaitPreFlash();
 14972  00774C  EC94  F041         	call	_WaitPreFlash	;wreg free
 14973                           
 14974                           ;sm_ControlGate_MC50.c: 356:             }
 14975  007750  0012               	return	
 14976  007752                     l21895:
 14977                           
 14978                           ; BSR set to: 0
 14979                           ;sm_ControlGate_MC50.c: 358:                 OpenFullOrder();
 14980  007752  ECB5  F049         	call	_OpenFullOrder	;wreg free
 14981                           
 14982                           ;sm_ControlGate_MC50.c: 359:                InitFullAutoTime();
 14983  007756  ECA9  F04A         	call	_InitFullAutoTime	;wreg free
 14984  00775A  D7D7               	goto	l21879
 14985  00775C                     l21901:
 14986  00775C  0E02               	movlw	2
 14987  00775E  1821               	xorwf	actionZone_Closed@typeOpenOrder^0,w,c
 14988  007760  A4D8               	btfss	status,2,c
 14989  007762  0012               	return	
 14990  007764  5020               	movf	actionZone_Closed@securityOpening^0,w,c
 14991  007766  A4D8               	btfss	status,2,c
 14992  007768  0012               	return	
 14993  00776A  0100               	movlb	0	; () banked
 14994  00776C  519C               	movf	(_var_sys_NVM+4)& (0+255),w,b	;volatile
 14995  00776E  B4D8               	btfsc	status,2,c
 14996  007770  0012               	return	
 14997                           
 14998                           ; BSR set to: 0
 14999                           ;sm_ControlGate_MC50.c: 367:             OpenWalkOrder();
 15000  007772  EC3C  F042         	call	_OpenWalkOrder	;wreg free
 15001                           
 15002                           ;sm_ControlGate_MC50.c: 368:             InitWalkAutoTime();
 15003  007776  EC2E  F04B         	call	_InitWalkAutoTime	;wreg free
 15004  00777A  D7C7               	goto	l21879
 15005  00777C                     __end_of_actionZone_Closed:
 15006                           	callstack 0
 15007                           
 15008 ;; *************** function _WaitPreFlash *****************
 15009 ;; Defined at:
 15010 ;;		line 41 in file "sm_ControlGate_MC50.c"
 15011 ;; Parameters:    Size  Location     Type
 15012 ;;		None
 15013 ;; Auto vars:     Size  Location     Type
 15014 ;;		None
 15015 ;; Return value:  Size  Location     Type
 15016 ;;                  1    wreg      void 
 15017 ;; Registers used:
 15018 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15019 ;; Tracked objects:
 15020 ;;		On entry : 3F/1
 15021 ;;		On exit  : 3F/1
 15022 ;;		Unchanged: 0/0
 15023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15027 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15028 ;;Total ram usage:        0 bytes
 15029 ;; Hardware stack levels used: 1
 15030 ;; Hardware stack levels required when called: 7
 15031 ;; This function calls:
 15032 ;;		_InitFullAutoTime
 15033 ;;		_OpenFullOrder
 15034 ;;		_sm_send_event
 15035 ;; This function is called by:
 15036 ;;		_sm_execute_ControlGate
 15037 ;;		_actionZone_Closed
 15038 ;; This function uses a non-reentrant model
 15039 ;;
 15040                           
 15041                           	psect	text40
 15042  008328                     __ptext40:
 15043                           	callstack 0
 15044  008328                     _WaitPreFlash:
 15045                           	callstack 21
 15046                           
 15047                           ; BSR set to: 1
 15048                           ;sm_ControlGate_MC50.c: 44:     if ((var_sys_NVM.flashRGBMode == rgb_pre) && (var_sys.pr
      +                          eflashingcontrol == YES) && (ts_system.timewaitFlashRGB <=0) && (aux_i == 0))
 15049                           
 15050                           ;incstack = 0
 15051  008328  0E02               	movlw	2
 15052  00832A  0100               	movlb	0	; () banked
 15053  00832C  19B1               	xorwf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 15054  00832E  A4D8               	btfss	status,2,c
 15055  008330  D014               	goto	l20941
 15056                           
 15057                           ; BSR set to: 0
 15058  008332  0101               	movlb	1	; () banked
 15059  008334  051D               	decf	(_var_sys+29)& (0+255),w,b	;volatile
 15060  008336  A4D8               	btfss	status,2,c
 15061  008338  D010               	goto	l20941
 15062                           
 15063                           ; BSR set to: 1
 15064  00833A  BFE2               	btfsc	(_ts_system+71)& (0+255),7,b	;volatile
 15065  00833C  D005               	goto	u24310
 15066  00833E  51E2               	movf	(_ts_system+71)& (0+255),w,b	;volatile
 15067  008340  E10C               	bnz	l20941
 15068  008342  05E1               	decf	(_ts_system+70)& (0+255),w,b	;volatile
 15069  008344  B0D8               	btfsc	status,0,c
 15070  008346  D009               	goto	l20941
 15071  008348                     u24310:
 15072                           
 15073                           ; BSR set to: 1
 15074  008348  518D               	movf	_aux_i& (0+255),w,b
 15075  00834A  A4D8               	btfss	status,2,c
 15076  00834C  D006               	goto	l20941
 15077                           
 15078                           ; BSR set to: 1
 15079                           ;sm_ControlGate_MC50.c: 45:         {;sm_ControlGate_MC50.c: 46:             ts_system.t
      +                          imewaitFlashRGB = (1000/50) *3;
 15080  00834E  0E00               	movlw	0
 15081  008350  6FE2               	movwf	(_ts_system+71)& (0+255),b	;volatile
 15082  008352  0E3C               	movlw	60
 15083  008354  6FE1               	movwf	(_ts_system+70)& (0+255),b	;volatile
 15084                           
 15085                           ;sm_ControlGate_MC50.c: 47:             aux_i=1;
 15086  008356  0E01               	movlw	1
 15087  008358  6F8D               	movwf	_aux_i& (0+255),b
 15088  00835A                     l20941:
 15089                           
 15090                           ;sm_ControlGate_MC50.c: 50:     if ((ts_system.timewaitFlashRGB <= 0) && (aux_i==1 ))
 15091  00835A  0101               	movlb	1	; () banked
 15092  00835C  BFE2               	btfsc	(_ts_system+71)& (0+255),7,b	;volatile
 15093  00835E  D005               	goto	u24330
 15094  008360  51E2               	movf	(_ts_system+71)& (0+255),w,b	;volatile
 15095  008362  E119               	bnz	l2585
 15096  008364  05E1               	decf	(_ts_system+70)& (0+255),w,b	;volatile
 15097  008366  B0D8               	btfsc	status,0,c
 15098  008368  0012               	return	
 15099  00836A                     u24330:
 15100                           
 15101                           ; BSR set to: 1
 15102  00836A  058D               	decf	_aux_i& (0+255),w,b
 15103  00836C  A4D8               	btfss	status,2,c
 15104  00836E  0012               	return	
 15105                           
 15106                           ; BSR set to: 1
 15107                           ;sm_ControlGate_MC50.c: 51:         {;sm_ControlGate_MC50.c: 54:                 var_sys
      +                          .preflashingcontrol = NO;
 15108  008370  0E00               	movlw	0
 15109  008372  6F1D               	movwf	(_var_sys+29)& (0+255),b	;volatile
 15110                           
 15111                           ; BSR set to: 1
 15112                           ;sm_ControlGate_MC50.c: 55:                 OpenFullOrder();
 15113  008374  ECB5  F049         	call	_OpenFullOrder	;wreg free
 15114                           
 15115                           ;sm_ControlGate_MC50.c: 56:                 InitFullAutoTime();
 15116  008378  ECA9  F04A         	call	_InitFullAutoTime	;wreg free
 15117                           
 15118                           ; BSR set to: 0
 15119                           ;sm_ControlGate_MC50.c: 57:                 sm_send_event(&main_stateMachine, ev_MotorIs
      +                          Open);
 15120  00837C  0EEE               	movlw	low _main_stateMachine
 15121  00837E  6E12               	movwf	sm_send_event@psm^0,c
 15122  008380  0E01               	movlw	high _main_stateMachine
 15123  008382  6E13               	movwf	(sm_send_event@psm+1)^0,c
 15124  008384  0E00               	movlw	0
 15125  008386  6E15               	movwf	(sm_send_event@event+1)^0,c
 15126  008388  0E11               	movlw	17
 15127  00838A  6E14               	movwf	sm_send_event@event^0,c
 15128  00838C  ECA7  F043         	call	_sm_send_event	;wreg free
 15129                           
 15130                           ;sm_ControlGate_MC50.c: 58:                 aux_i=0;
 15131  008390  0E00               	movlw	0
 15132  008392  0101               	movlb	1	; () banked
 15133  008394  6F8D               	movwf	_aux_i& (0+255),b
 15134  008396                     l2585:
 15135                           
 15136                           ; BSR set to: 1
 15137  008396  0012               	return		;funcret
 15138  008398                     __end_of_WaitPreFlash:
 15139                           	callstack 0
 15140                           
 15141 ;; *************** function _OpenFullOrder *****************
 15142 ;; Defined at:
 15143 ;;		line 29 in file "sm_ControlGate_MC50.c"
 15144 ;; Parameters:    Size  Location     Type
 15145 ;;		None
 15146 ;; Auto vars:     Size  Location     Type
 15147 ;;		None
 15148 ;; Return value:  Size  Location     Type
 15149 ;;                  1    wreg      void 
 15150 ;; Registers used:
 15151 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15152 ;; Tracked objects:
 15153 ;;		On entry : 3E/1
 15154 ;;		On exit  : 3E/0
 15155 ;;		Unchanged: 0/0
 15156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15160 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15161 ;;Total ram usage:        0 bytes
 15162 ;; Hardware stack levels used: 1
 15163 ;; Hardware stack levels required when called: 6
 15164 ;; This function calls:
 15165 ;;		_InitSoftStart
 15166 ;;		_sm_send_event
 15167 ;; This function is called by:
 15168 ;;		_WaitPreFlash
 15169 ;;		_actionZone_Closed
 15170 ;;		_actionZone_Opened
 15171 ;;		_actionZone_Closing
 15172 ;; This function uses a non-reentrant model
 15173 ;;
 15174                           
 15175                           	psect	text41
 15176  00936A                     __ptext41:
 15177                           	callstack 0
 15178  00936A                     _OpenFullOrder:
 15179                           	callstack 22
 15180                           
 15181                           ;sm_ControlGate_MC50.c: 32:     var_sys.StateMotor = InOpenFull;
 15182                           
 15183                           ; BSR set to: 1
 15184                           ;incstack = 0
 15185  00936A  0E01               	movlw	1
 15186  00936C  0101               	movlb	1	; () banked
 15187  00936E  6F00               	movwf	_var_sys& (0+255),b	;volatile
 15188                           
 15189                           ; BSR set to: 1
 15190                           ;sm_ControlGate_MC50.c: 33:     sm_send_event(&controlGate_stateMachine, ev_OpenGate);
 15191  009370  0EE3               	movlw	low _controlGate_stateMachine
 15192  009372  6E12               	movwf	sm_send_event@psm^0,c
 15193  009374  0E01               	movlw	high _controlGate_stateMachine
 15194  009376  6E13               	movwf	(sm_send_event@psm+1)^0,c
 15195  009378  0E00               	movlw	0
 15196  00937A  6E15               	movwf	(sm_send_event@event+1)^0,c
 15197  00937C  0E0C               	movlw	12
 15198  00937E  6E14               	movwf	sm_send_event@event^0,c
 15199  009380  ECA7  F043         	call	_sm_send_event	;wreg free
 15200                           
 15201                           ;sm_ControlGate_MC50.c: 34:     var_sys.LastState = InOpenFull;
 15202  009384  0E01               	movlw	1
 15203  009386  0101               	movlb	1	; () banked
 15204  009388  6F0B               	movwf	(_var_sys+11)& (0+255),b	;volatile
 15205                           
 15206                           ; BSR set to: 1
 15207                           ;sm_ControlGate_MC50.c: 35:     InitSoftStart();
 15208  00938A  ECD5  F043         	call	_InitSoftStart	;wreg free
 15209  00938E  0012               	return		;funcret
 15210  009390                     __end_of_OpenFullOrder:
 15211                           	callstack 0
 15212                           
 15213 ;; *************** function _InitFullAutoTime *****************
 15214 ;; Defined at:
 15215 ;;		line 109 in file "sm_ControlGate_MC50.c"
 15216 ;; Parameters:    Size  Location     Type
 15217 ;;		None
 15218 ;; Auto vars:     Size  Location     Type
 15219 ;;		None
 15220 ;; Return value:  Size  Location     Type
 15221 ;;                  1    wreg      void 
 15222 ;; Registers used:
 15223 ;;		wreg, status,2, status,0, prodl, prodh
 15224 ;; Tracked objects:
 15225 ;;		On entry : 3E/0
 15226 ;;		On exit  : 3F/0
 15227 ;;		Unchanged: 0/0
 15228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15232 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15233 ;;Total ram usage:        0 bytes
 15234 ;; Hardware stack levels used: 1
 15235 ;; Hardware stack levels required when called: 4
 15236 ;; This function calls:
 15237 ;;		Nothing
 15238 ;; This function is called by:
 15239 ;;		_WaitPreFlash
 15240 ;;		_actionZone_Closed
 15241 ;;		_actionZone_Opening
 15242 ;;		_actionZone_Opened
 15243 ;;		_actionZone_Closing
 15244 ;; This function uses a non-reentrant model
 15245 ;;
 15246                           
 15247                           	psect	text42
 15248  009552                     __ptext42:
 15249                           	callstack 0
 15250  009552                     _InitFullAutoTime:
 15251                           	callstack 24
 15252                           
 15253                           ;sm_ControlGate_MC50.c: 111:     if (var_sys_NVM.homemPresente == 0) {
 15254                           
 15255                           ;incstack = 0
 15256  009552  0100               	movlb	0	; () banked
 15257  009554  51A8               	movf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 15258  009556  A4D8               	btfss	status,2,c
 15259  009558  0012               	return	
 15260                           
 15261                           ; BSR set to: 0
 15262                           ;sm_ControlGate_MC50.c: 112:         ts_system.timeWaitToClose = ((int) var_sys_NVM.auto
      +                          TimeFullClose * (1000/50));
 15263  00955A  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 15264  00955C  0D14               	mullw	20
 15265  00955E  CFF3 F1AD          	movff	prodl,_ts_system+18	;volatile
 15266  009562  CFF4 F1AE          	movff	prodh,_ts_system+19	;volatile
 15267                           
 15268                           ; BSR set to: 0
 15269                           ;sm_ControlGate_MC50.c: 113:         var_sys.AutoCloseActive = var_sys_NVM.autoTimeFullC
      +                          lose;
 15270  009566  C09D  F123         	movff	_var_sys_NVM+5,_var_sys+35	;volatile
 15271                           
 15272                           ; BSR set to: 0
 15273  00956A  0012               	return		;funcret
 15274  00956C                     __end_of_InitFullAutoTime:
 15275                           	callstack 0
 15276                           
 15277 ;; *************** function _OpenWalkOrder *****************
 15278 ;; Defined at:
 15279 ;;		line 71 in file "sm_ControlGate_MC50.c"
 15280 ;; Parameters:    Size  Location     Type
 15281 ;;		None
 15282 ;; Auto vars:     Size  Location     Type
 15283 ;;  diffTime        2   25[COMRAM] int 
 15284 ;; Return value:  Size  Location     Type
 15285 ;;                  1    wreg      void 
 15286 ;; Registers used:
 15287 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15288 ;; Tracked objects:
 15289 ;;		On entry : 3E/1
 15290 ;;		On exit  : 3E/0
 15291 ;;		Unchanged: 0/0
 15292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15294 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15295 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15296 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15297 ;;Total ram usage:        4 bytes
 15298 ;; Hardware stack levels used: 1
 15299 ;; Hardware stack levels required when called: 6
 15300 ;; This function calls:
 15301 ;;		_InitSoftStart
 15302 ;;		_sm_send_event
 15303 ;; This function is called by:
 15304 ;;		_actionZone_Closed
 15305 ;;		_actionZone_Opened
 15306 ;;		_actionZone_Closing
 15307 ;; This function uses a non-reentrant model
 15308 ;;
 15309                           
 15310                           	psect	text43
 15311  008478                     __ptext43:
 15312                           	callstack 0
 15313  008478                     _OpenWalkOrder:
 15314                           	callstack 22
 15315                           
 15316                           ;sm_ControlGate_MC50.c: 72:     int diffTime = ((int) var_sys_NVM.walkTime * (1000/50)) 
      +                          - var_sys.PositionActual ;
 15317                           
 15318                           ; BSR set to: 0
 15319                           ;incstack = 0
 15320  008478  0100               	movlb	0	; () banked
 15321  00847A  519C               	movf	(_var_sys_NVM+4)& (0+255),w,b	;volatile
 15322  00847C  0D14               	mullw	20
 15323  00847E  CFF3 F018          	movff	prodl,??_OpenWalkOrder
 15324  008482  CFF4 F019          	movff	prodh,??_OpenWalkOrder+1
 15325  008486  0101               	movlb	1	; () banked
 15326  008488  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 15327  00848A  5C18               	subwf	??_OpenWalkOrder^0,w,c
 15328  00848C  6E1A               	movwf	OpenWalkOrder@diffTime^0,c
 15329  00848E  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 15330  008490  5819               	subwfb	(??_OpenWalkOrder+1)^0,w,c
 15331  008492  6E1B               	movwf	(OpenWalkOrder@diffTime+1)^0,c
 15332                           
 15333                           ; BSR set to: 1
 15334                           ;sm_ControlGate_MC50.c: 74:     if (diffTime > 0) {
 15335  008494  BE1B               	btfsc	(OpenWalkOrder@diffTime+1)^0,7,c
 15336  008496  D022               	goto	l20979
 15337  008498  501B               	movf	(OpenWalkOrder@diffTime+1)^0,w,c
 15338  00849A  E103               	bnz	u24350
 15339  00849C  041A               	decf	OpenWalkOrder@diffTime^0,w,c
 15340  00849E  A0D8               	btfss	status,0,c
 15341  0084A0  D01D               	goto	l20979
 15342  0084A2                     u24350:
 15343                           
 15344                           ; BSR set to: 1
 15345                           ;sm_ControlGate_MC50.c: 76:         sm_send_event(&controlGate_stateMachine, ev_OpenGate
      +                          );
 15346  0084A2  0EE3               	movlw	low _controlGate_stateMachine
 15347  0084A4  6E12               	movwf	sm_send_event@psm^0,c
 15348  0084A6  0E01               	movlw	high _controlGate_stateMachine
 15349  0084A8  6E13               	movwf	(sm_send_event@psm+1)^0,c
 15350  0084AA  0E00               	movlw	0
 15351  0084AC  6E15               	movwf	(sm_send_event@event+1)^0,c
 15352  0084AE  0E0C               	movlw	12
 15353  0084B0  6E14               	movwf	sm_send_event@event^0,c
 15354  0084B2  ECA7  F043         	call	_sm_send_event	;wreg free
 15355                           
 15356                           ;sm_ControlGate_MC50.c: 77:         if (var_sys.Statedoorcontrol == st_Closed){
 15357  0084B6  0101               	movlb	1	; () banked
 15358  0084B8  051C               	decf	(_var_sys+28)& (0+255),w,b	;volatile
 15359  0084BA  A4D8               	btfss	status,2,c
 15360  0084BC  D005               	goto	l20973
 15361                           
 15362                           ; BSR set to: 1
 15363                           ;sm_ControlGate_MC50.c: 78:            ts_system.timeOpenWalk = diffTime;
 15364  0084BE  C01A  F1AB         	movff	OpenWalkOrder@diffTime,_ts_system+16	;volatile
 15365  0084C2  C01B  F1AC         	movff	OpenWalkOrder@diffTime+1,_ts_system+17	;volatile
 15366                           
 15367                           ;sm_ControlGate_MC50.c: 79:         }
 15368  0084C6  D006               	goto	l20975
 15369  0084C8                     l20973:
 15370                           
 15371                           ; BSR set to: 1
 15372                           ;sm_ControlGate_MC50.c: 81:             ts_system.timeOpenWalk = diffTime + (1000/50);
 15373  0084C8  0E14               	movlw	20
 15374  0084CA  241A               	addwf	OpenWalkOrder@diffTime^0,w,c
 15375  0084CC  6FAB               	movwf	(_ts_system+16)& (0+255),b	;volatile
 15376  0084CE  0E00               	movlw	0
 15377  0084D0  201B               	addwfc	(OpenWalkOrder@diffTime+1)^0,w,c
 15378  0084D2  6FAC               	movwf	(_ts_system+17)& (0+255),b	;volatile
 15379  0084D4                     l20975:
 15380                           
 15381                           ; BSR set to: 1
 15382                           ;sm_ControlGate_MC50.c: 83:         var_sys.StateMotor = InOpenWalk;
 15383  0084D4  0E02               	movlw	2
 15384  0084D6  6F00               	movwf	_var_sys& (0+255),b	;volatile
 15385                           
 15386                           ; BSR set to: 1
 15387                           ;sm_ControlGate_MC50.c: 84:         var_sys.Timewalkisactived = YES;
 15388  0084D8  0E01               	movlw	1
 15389  0084DA  6F4A               	movwf	(_var_sys+74)& (0+255),b	;volatile
 15390  0084DC                     l20979:
 15391                           
 15392                           ; BSR set to: 1
 15393                           ;sm_ControlGate_MC50.c: 92:     var_sys.LastState = InOpenWalk;
 15394  0084DC  0E02               	movlw	2
 15395  0084DE  6F0B               	movwf	(_var_sys+11)& (0+255),b	;volatile
 15396                           
 15397                           ; BSR set to: 1
 15398                           ;sm_ControlGate_MC50.c: 93:     InitSoftStart();
 15399  0084E0  ECD5  F043         	call	_InitSoftStart	;wreg free
 15400  0084E4  0012               	return		;funcret
 15401  0084E6                     __end_of_OpenWalkOrder:
 15402                           	callstack 0
 15403                           
 15404 ;; *************** function _sm_send_event *****************
 15405 ;; Defined at:
 15406 ;;		line 34 in file "sm_common_MC50.c"
 15407 ;; Parameters:    Size  Location     Type
 15408 ;;  psm             2   17[COMRAM] PTR struct .
 15409 ;;		 -> controlLearning_stateMachine(11), controlGate_stateMachine(11), main_stateMachine(11), menuConfiguration_stateMa
      +chine(11), 
 15410 ;;  event           2   19[COMRAM] int 
 15411 ;; Auto vars:     Size  Location     Type
 15412 ;;		None
 15413 ;; Return value:  Size  Location     Type
 15414 ;;                  1    wreg      void 
 15415 ;; Registers used:
 15416 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15417 ;; Tracked objects:
 15418 ;;		On entry : 0/0
 15419 ;;		On exit  : 0/0
 15420 ;;		Unchanged: 0/0
 15421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15422 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15424 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15425 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15426 ;;Total ram usage:        6 bytes
 15427 ;; Hardware stack levels used: 1
 15428 ;; Hardware stack levels required when called: 5
 15429 ;; This function calls:
 15430 ;;		_sm_get_current_state
 15431 ;; This function is called by:
 15432 ;;		_OpenFullOrder
 15433 ;;		_WaitPreFlash
 15434 ;;		_CloseOrder
 15435 ;;		_OpenWalkOrder
 15436 ;;		_StopOrder
 15437 ;;		_sm_execute_ControlGate
 15438 ;;		_actionZone_Closed
 15439 ;;		_actionZone_Opening
 15440 ;;		_actionZone_Closing
 15441 ;;		_sm_execute_ControlLearning
 15442 ;;		_sm_execute_main
 15443 ;;		_sm_execute_menuConfiguration
 15444 ;;		_setValueToEdit
 15445 ;;		_controlSelectRemote
 15446 ;;		_controlSaveRemote
 15447 ;; This function uses a non-reentrant model
 15448 ;;
 15449                           
 15450                           	psect	text44
 15451  00874E                     __ptext44:
 15452                           	callstack 0
 15453  00874E                     _sm_send_event:
 15454                           	callstack 24
 15455                           
 15456                           ;sm_common_MC50.c: 34: void sm_send_event(sm_t *psm, int event);sm_common_MC50.c: 35: {;
      +                          sm_common_MC50.c: 36:  if(( psm->parent_machine == ((void*)0)) || (sm_get_current_state(
      +                          psm->parent_machine)==psm->parent_state))
 15457                           
 15458                           ;incstack = 0
 15459  00874E  EE20 F007          	lfsr	2,7
 15460  008752  5012               	movf	sm_send_event@psm^0,w,c
 15461  008754  26D9               	addwf	fsr2l,f,c
 15462  008756  5013               	movf	(sm_send_event@psm+1)^0,w,c
 15463  008758  22DA               	addwfc	fsr2h,f,c
 15464  00875A  50DE               	movf	postinc2,w,c
 15465  00875C  10DE               	iorwf	postinc2,w,c
 15466  00875E  B4D8               	btfsc	status,2,c
 15467  008760  D019               	goto	u23000
 15468  008762  EE20 F007          	lfsr	2,7
 15469  008766  5012               	movf	sm_send_event@psm^0,w,c
 15470  008768  26D9               	addwf	fsr2l,f,c
 15471  00876A  5013               	movf	(sm_send_event@psm+1)^0,w,c
 15472  00876C  22DA               	addwfc	fsr2h,f,c
 15473  00876E  CFDE F010          	movff	postinc2,sm_get_current_state@psm
 15474  008772  CFDD F011          	movff	postdec2,sm_get_current_state@psm+1
 15475  008776  EC4C  F04B         	call	_sm_get_current_state	;wreg free
 15476  00877A  EE20 F009          	lfsr	2,9
 15477  00877E  5012               	movf	sm_send_event@psm^0,w,c
 15478  008780  26D9               	addwf	fsr2l,f,c
 15479  008782  5013               	movf	(sm_send_event@psm+1)^0,w,c
 15480  008784  22DA               	addwfc	fsr2h,f,c
 15481  008786  50DE               	movf	postinc2,w,c
 15482  008788  1810               	xorwf	?_sm_get_current_state^0,w,c
 15483  00878A  E10E               	bnz	l3512
 15484  00878C  50DE               	movf	postinc2,w,c
 15485  00878E  1811               	xorwf	(?_sm_get_current_state+1)^0,w,c
 15486  008790  A4D8               	btfss	status,2,c
 15487  008792  0012               	return	
 15488  008794                     u23000:
 15489                           
 15490                           ;sm_common_MC50.c: 38:  {;sm_common_MC50.c: 39:   psm->last_event = event;
 15491  008794  EE20 F004          	lfsr	2,4
 15492  008798  5012               	movf	sm_send_event@psm^0,w,c
 15493  00879A  26D9               	addwf	fsr2l,f,c
 15494  00879C  5013               	movf	(sm_send_event@psm+1)^0,w,c
 15495  00879E  22DA               	addwfc	fsr2h,f,c
 15496  0087A0  C014  FFDE         	movff	sm_send_event@event,postinc2
 15497  0087A4  C015  FFDD         	movff	sm_send_event@event+1,postdec2
 15498  0087A8                     l3512:
 15499  0087A8  0012               	return		;funcret
 15500  0087AA                     __end_of_sm_send_event:
 15501                           	callstack 0
 15502                           
 15503 ;; *************** function _sm_get_current_state *****************
 15504 ;; Defined at:
 15505 ;;		line 30 in file "sm_common_MC50.c"
 15506 ;; Parameters:    Size  Location     Type
 15507 ;;  psm             2   15[COMRAM] PTR struct .
 15508 ;;		 -> NULL(0), 
 15509 ;; Auto vars:     Size  Location     Type
 15510 ;;		None
 15511 ;; Return value:  Size  Location     Type
 15512 ;;                  2   15[COMRAM] int 
 15513 ;; Registers used:
 15514 ;;		fsr2l, fsr2h
 15515 ;; Tracked objects:
 15516 ;;		On entry : 0/0
 15517 ;;		On exit  : 0/0
 15518 ;;		Unchanged: 0/0
 15519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15520 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15521 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15523 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15524 ;;Total ram usage:        2 bytes
 15525 ;; Hardware stack levels used: 1
 15526 ;; Hardware stack levels required when called: 4
 15527 ;; This function calls:
 15528 ;;		Nothing
 15529 ;; This function is called by:
 15530 ;;		_sm_send_event
 15531 ;; This function uses a non-reentrant model
 15532 ;;
 15533                           
 15534                           	psect	text45
 15535  009698                     __ptext45:
 15536                           	callstack 0
 15537  009698                     _sm_get_current_state:
 15538                           	callstack 24
 15539                           
 15540                           ;sm_common_MC50.c: 31:  return psm->current_state;
 15541                           
 15542                           ;incstack = 0
 15543  009698  C010  FFD9         	movff	sm_get_current_state@psm,fsr2l
 15544  00969C  C011  FFDA         	movff	sm_get_current_state@psm+1,fsr2h
 15545  0096A0  CFDE F010          	movff	postinc2,?_sm_get_current_state
 15546  0096A4  CFDD F011          	movff	postdec2,?_sm_get_current_state+1
 15547  0096A8  0012               	return		;funcret
 15548  0096AA                     __end_of_sm_get_current_state:
 15549                           	callstack 0
 15550                           
 15551 ;; *************** function _InitSoftStart *****************
 15552 ;; Defined at:
 15553 ;;		line 816 in file "sm_ControlGate_MC50.c"
 15554 ;; Parameters:    Size  Location     Type
 15555 ;;		None
 15556 ;; Auto vars:     Size  Location     Type
 15557 ;;		None
 15558 ;; Return value:  Size  Location     Type
 15559 ;;                  1    wreg      void 
 15560 ;; Registers used:
 15561 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15562 ;; Tracked objects:
 15563 ;;		On entry : 3F/1
 15564 ;;		On exit  : 3E/0
 15565 ;;		Unchanged: 0/0
 15566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15567 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15569 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15570 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15571 ;;Total ram usage:        1 bytes
 15572 ;; Hardware stack levels used: 1
 15573 ;; Hardware stack levels required when called: 5
 15574 ;; This function calls:
 15575 ;;		_GetMotorPower
 15576 ;; This function is called by:
 15577 ;;		_OpenFullOrder
 15578 ;;		_CloseOrder
 15579 ;;		_OpenWalkOrder
 15580 ;; This function uses a non-reentrant model
 15581 ;;
 15582                           
 15583                           	psect	text46
 15584  0087AA                     __ptext46:
 15585                           	callstack 0
 15586  0087AA                     _InitSoftStart:
 15587                           	callstack 22
 15588                           
 15589                           ; BSR set to: 1
 15590                           ;sm_ControlGate_MC50.c: 817:     if (var_sys_NVM.softStart != 0 && var_sys.AutoInversion
      +                          Active == NO) {
 15591                           
 15592                           ;incstack = 0
 15593  0087AA  0100               	movlb	0	; () banked
 15594  0087AC  51AA               	movf	(_var_sys_NVM+18)& (0+255),w,b	;volatile
 15595  0087AE  B4D8               	btfsc	status,2,c
 15596  0087B0  0012               	return	
 15597                           
 15598                           ; BSR set to: 0
 15599  0087B2  0101               	movlb	1	; () banked
 15600  0087B4  5127               	movf	(_var_sys+39)& (0+255),w,b	;volatile
 15601  0087B6  A4D8               	btfss	status,2,c
 15602  0087B8  0012               	return	
 15603                           
 15604                           ; BSR set to: 1
 15605                           ;sm_ControlGate_MC50.c: 824:         var_sys.velocityFactorstop = 0;
 15606  0087BA  0E00               	movlw	0
 15607  0087BC  6F11               	movwf	(_var_sys+17)& (0+255),b	;volatile
 15608  0087BE  0E00               	movlw	0
 15609  0087C0  6F10               	movwf	(_var_sys+16)& (0+255),b	;volatile
 15610                           
 15611                           ;sm_ControlGate_MC50.c: 825:         var_sys.velocityFactor = 0;
 15612  0087C2  0E00               	movlw	0
 15613  0087C4  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 15614  0087C6  0E00               	movlw	0
 15615  0087C8  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 15616                           
 15617                           ; BSR set to: 1
 15618                           ;sm_ControlGate_MC50.c: 826:         var_sys.velocityFactor = GetMotorPower();
 15619  0087CA  ECEE  F039         	call	_GetMotorPower	;wreg free
 15620  0087CE  6E14               	movwf	??_InitSoftStart^0,c
 15621  0087D0  5014               	movf	??_InitSoftStart^0,w,c
 15622  0087D2  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 15623  0087D4  6B0F               	clrf	(_var_sys+15)& (0+255),b	;volatile
 15624                           
 15625                           ; BSR set to: 1
 15626                           ;sm_ControlGate_MC50.c: 827:         if ( var_sys.velocityFactor > (81) )
 15627  0087D6  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 15628  0087D8  D00A               	goto	l20087
 15629  0087DA  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 15630  0087DC  E104               	bnz	u23030
 15631  0087DE  0E52               	movlw	82
 15632  0087E0  5D0E               	subwf	(_var_sys+14)& (0+255),w,b	;volatile
 15633  0087E2  A0D8               	btfss	status,0,c
 15634  0087E4  D004               	goto	l20087
 15635  0087E6                     u23030:
 15636                           
 15637                           ; BSR set to: 1
 15638                           ;sm_ControlGate_MC50.c: 828:         {;sm_ControlGate_MC50.c: 829:             var_sys.v
      +                          elocityFactor = (81);
 15639  0087E6  0E00               	movlw	0
 15640  0087E8  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 15641  0087EA  0E51               	movlw	81
 15642  0087EC  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 15643  0087EE                     l20087:
 15644                           
 15645                           ; BSR set to: 1
 15646                           ;sm_ControlGate_MC50.c: 840:         ts_system.timeSoftStart = var_sys.velocityFactor + 
      +                          1;
 15647  0087EE  0E01               	movlw	1
 15648  0087F0  250E               	addwf	(_var_sys+14)& (0+255),w,b	;volatile
 15649  0087F2  6FB1               	movwf	(_ts_system+22)& (0+255),b	;volatile
 15650  0087F4  0E00               	movlw	0
 15651  0087F6  210F               	addwfc	(_var_sys+15)& (0+255),w,b	;volatile
 15652  0087F8  6FB2               	movwf	(_ts_system+23)& (0+255),b	;volatile
 15653                           
 15654                           ;sm_ControlGate_MC50.c: 842:         var_sys.SoftStartDecrementControl = 10 - var_sys_NV
      +                          M.softStart;
 15655  0087FA  0100               	movlb	0	; () banked
 15656  0087FC  51AA               	movf	(_var_sys_NVM+18)& (0+255),w,b	;volatile
 15657  0087FE  080A               	sublw	10
 15658  008800  0101               	movlb	1	; () banked
 15659  008802  6F14               	movwf	(_var_sys+20)& (0+255),b	;volatile
 15660  008804  0012               	return		;funcret
 15661  008806                     __end_of_InitSoftStart:
 15662                           	callstack 0
 15663                           
 15664 ;; *************** function _InitWalkAutoTime *****************
 15665 ;; Defined at:
 15666 ;;		line 103 in file "sm_ControlGate_MC50.c"
 15667 ;; Parameters:    Size  Location     Type
 15668 ;;		None
 15669 ;; Auto vars:     Size  Location     Type
 15670 ;;		None
 15671 ;; Return value:  Size  Location     Type
 15672 ;;                  1    wreg      void 
 15673 ;; Registers used:
 15674 ;;		wreg, status,2, status,0, prodl, prodh
 15675 ;; Tracked objects:
 15676 ;;		On entry : 0/1
 15677 ;;		On exit  : 3F/0
 15678 ;;		Unchanged: 0/0
 15679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15681 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15683 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15684 ;;Total ram usage:        0 bytes
 15685 ;; Hardware stack levels used: 1
 15686 ;; Hardware stack levels required when called: 4
 15687 ;; This function calls:
 15688 ;;		Nothing
 15689 ;; This function is called by:
 15690 ;;		_actionZone_Closed
 15691 ;;		_actionZone_Opening
 15692 ;;		_actionZone_Opened
 15693 ;;		_actionZone_Closing
 15694 ;; This function uses a non-reentrant model
 15695 ;;
 15696                           
 15697                           	psect	text47
 15698  00965C                     __ptext47:
 15699                           	callstack 0
 15700  00965C                     _InitWalkAutoTime:
 15701                           	callstack 24
 15702                           
 15703                           ;sm_ControlGate_MC50.c: 105:     ts_system.timeWaitToClose = ((int) var_sys_NVM.autoTime
      +                          WalkClose * (1000/50));
 15704                           
 15705                           ;incstack = 0
 15706  00965C  0100               	movlb	0	; () banked
 15707  00965E  519E               	movf	(_var_sys_NVM+6)& (0+255),w,b	;volatile
 15708  009660  0D14               	mullw	20
 15709  009662  CFF3 F1AD          	movff	prodl,_ts_system+18	;volatile
 15710  009666  CFF4 F1AE          	movff	prodh,_ts_system+19	;volatile
 15711                           
 15712                           ; BSR set to: 0
 15713                           ;sm_ControlGate_MC50.c: 106:     var_sys.AutoCloseActive = var_sys_NVM.autoTimeWalkClose
      +                          ;
 15714  00966A  C09E  F123         	movff	_var_sys_NVM+6,_var_sys+35	;volatile
 15715                           
 15716                           ; BSR set to: 0
 15717  00966E  0012               	return		;funcret
 15718  009670                     __end_of_InitWalkAutoTime:
 15719                           	callstack 0
 15720                           
 15721 ;; *************** function _GetSecurityStateInOpening *****************
 15722 ;; Defined at:
 15723 ;;		line 738 in file "inputs_MC50.c"
 15724 ;; Parameters:    Size  Location     Type
 15725 ;;		None
 15726 ;; Auto vars:     Size  Location     Type
 15727 ;;		None
 15728 ;; Return value:  Size  Location     Type
 15729 ;;                  1    wreg      enum E10564
 15730 ;; Registers used:
 15731 ;;		wreg, status,2, status,0, cstack
 15732 ;; Tracked objects:
 15733 ;;		On entry : 0/0
 15734 ;;		On exit  : 3E/0
 15735 ;;		Unchanged: 0/0
 15736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15740 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15741 ;;Total ram usage:        0 bytes
 15742 ;; Hardware stack levels used: 1
 15743 ;; Hardware stack levels required when called: 5
 15744 ;; This function calls:
 15745 ;;		_SetSegmentValueIntermitent
 15746 ;; This function is called by:
 15747 ;;		_actionZone_Closed
 15748 ;;		_actionZone_Opening
 15749 ;; This function uses a non-reentrant model
 15750 ;;
 15751                           
 15752                           	psect	text48
 15753  007822                     __ptext48:
 15754                           	callstack 0
 15755  007822                     _GetSecurityStateInOpening:
 15756                           	callstack 23
 15757                           
 15758                           ;inputs_MC50.c: 747:     if((var_sys_NVM.securityBandIsON == 1) && (var_sys.SecurityBarI
      +                          sObstructed == YES)&&(var_sys_NVM.securityBandInOpen == 1)&& (var_sys_NVM.Stopboton == 0
      +                          ))
 15759                           
 15760                           ; BSR set to: 0
 15761                           ;incstack = 0
 15762  007822  0100               	movlb	0	; () banked
 15763  007824  05A1               	decf	(_var_sys_NVM+9)& (0+255),w,b	;volatile
 15764  007826  A4D8               	btfss	status,2,c
 15765  007828  D01B               	goto	l20649
 15766                           
 15767                           ; BSR set to: 0
 15768  00782A  0101               	movlb	1	; () banked
 15769  00782C  0502               	decf	(_var_sys+2)& (0+255),w,b	;volatile
 15770  00782E  A4D8               	btfss	status,2,c
 15771  007830  D017               	goto	l20649
 15772                           
 15773                           ; BSR set to: 1
 15774  007832  0100               	movlb	0	; () banked
 15775  007834  05A3               	decf	(_var_sys_NVM+11)& (0+255),w,b	;volatile
 15776  007836  A4D8               	btfss	status,2,c
 15777  007838  D013               	goto	l20649
 15778                           
 15779                           ; BSR set to: 0
 15780  00783A  51AE               	movf	(_var_sys_NVM+22)& (0+255),w,b	;volatile
 15781  00783C  A4D8               	btfss	status,2,c
 15782  00783E  D010               	goto	l20649
 15783                           
 15784                           ; BSR set to: 0
 15785                           ;inputs_MC50.c: 748:     {;inputs_MC50.c: 750:         ts_system.timeSinalizationDigit=(
      +                           200/50);
 15786  007840  0E00               	movlw	0
 15787  007842  0101               	movlb	1	; () banked
 15788  007844  6FA8               	movwf	(_ts_system+13)& (0+255),b	;volatile
 15789  007846  0E04               	movlw	4
 15790  007848  6FA7               	movwf	(_ts_system+12)& (0+255),b	;volatile
 15791                           
 15792                           ; BSR set to: 1
 15793                           ;inputs_MC50.c: 751:         SetSegmentValueIntermitent(dL,dA,(1000/50));
 15794  00784A  0E0A               	movlw	10
 15795  00784C  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 15796  00784E  0E00               	movlw	0
 15797  007850  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 15798  007852  0E14               	movlw	20
 15799  007854  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 15800  007856  0E12               	movlw	18
 15801  007858  EC46  F048         	call	_SetSegmentValueIntermitent
 15802  00785C                     l20643:
 15803                           
 15804                           ; BSR set to: 1
 15805                           ;inputs_MC50.c: 752:         return YES;
 15806  00785C  0E01               	movlw	1
 15807  00785E  0012               	return	
 15808  007860                     l20649:
 15809  007860  0100               	movlb	0	; () banked
 15810  007862  05AE               	decf	(_var_sys_NVM+22)& (0+255),w,b	;volatile
 15811  007864  A4D8               	btfss	status,2,c
 15812  007866  D013               	goto	l20663
 15813                           
 15814                           ; BSR set to: 0
 15815  007868  0101               	movlb	1	; () banked
 15816  00786A  0502               	decf	(_var_sys+2)& (0+255),w,b	;volatile
 15817  00786C  A4D8               	btfss	status,2,c
 15818  00786E  D00F               	goto	l20663
 15819                           
 15820                           ; BSR set to: 1
 15821                           ;inputs_MC50.c: 756:     {;inputs_MC50.c: 758:         ts_system.timeSinalizationDigit=(
      +                           200/50);
 15822  007870  0E00               	movlw	0
 15823  007872  6FA8               	movwf	(_ts_system+13)& (0+255),b	;volatile
 15824  007874  0E04               	movlw	4
 15825  007876  6FA7               	movwf	(_ts_system+12)& (0+255),b	;volatile
 15826                           
 15827                           ; BSR set to: 1
 15828                           ;inputs_MC50.c: 759:         SetSegmentValueIntermitent(d5,dt,(1000/50));
 15829  007878  0E15               	movlw	21
 15830  00787A  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 15831  00787C  0E00               	movlw	0
 15832  00787E  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 15833  007880  0E14               	movlw	20
 15834  007882  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 15835  007884  0E05               	movlw	5
 15836  007886  EC46  F048         	call	_SetSegmentValueIntermitent
 15837                           
 15838                           ; BSR set to: 1
 15839                           ;inputs_MC50.c: 760:         return ST;
 15840  00788A  0E02               	movlw	2
 15841  00788C  0012               	return	
 15842  00788E                     l20663:
 15843  00788E  0100               	movlb	0	; () banked
 15844  007890  059F               	decf	(_var_sys_NVM+7)& (0+255),w,b	;volatile
 15845  007892  A4D8               	btfss	status,2,c
 15846  007894  D017               	goto	l20679
 15847                           
 15848                           ; BSR set to: 0
 15849  007896  0101               	movlb	1	; () banked
 15850  007898  0501               	decf	(_var_sys+1)& (0+255),w,b	;volatile
 15851  00789A  A4D8               	btfss	status,2,c
 15852  00789C  D013               	goto	l20679
 15853                           
 15854                           ; BSR set to: 1
 15855  00789E  0100               	movlb	0	; () banked
 15856  0078A0  05A0               	decf	(_var_sys_NVM+8)& (0+255),w,b	;volatile
 15857  0078A2  A4D8               	btfss	status,2,c
 15858  0078A4  D00F               	goto	l20679
 15859                           
 15860                           ; BSR set to: 0
 15861                           ;inputs_MC50.c: 764:     {;inputs_MC50.c: 766:         ts_system.timeSinalizationDigit=(
      +                           200/50);
 15862  0078A6  0E00               	movlw	0
 15863  0078A8  0101               	movlb	1	; () banked
 15864  0078AA  6FA8               	movwf	(_ts_system+13)& (0+255),b	;volatile
 15865  0078AC  0E04               	movlw	4
 15866  0078AE  6FA7               	movwf	(_ts_system+12)& (0+255),b	;volatile
 15867                           
 15868                           ; BSR set to: 1
 15869                           ;inputs_MC50.c: 767:         SetSegmentValueIntermitent(dL,dE,(1000/50));
 15870  0078B0  0E0E               	movlw	14
 15871  0078B2  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 15872  0078B4  0E00               	movlw	0
 15873  0078B6  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 15874  0078B8  0E14               	movlw	20
 15875  0078BA  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 15876  0078BC  0E12               	movlw	18
 15877  0078BE  EC46  F048         	call	_SetSegmentValueIntermitent
 15878  0078C2  D7CC               	goto	l20643
 15879  0078C4                     l20679:
 15880                           
 15881                           ;inputs_MC50.c: 771:     {;inputs_MC50.c: 772:         return NO;
 15882  0078C4  0E00               	movlw	0
 15883  0078C6  0012               	return		;funcret
 15884  0078C8                     __end_of_GetSecurityStateInOpening:
 15885                           	callstack 0
 15886                           
 15887 ;; *************** function _SetSegmentValueIntermitent *****************
 15888 ;; Defined at:
 15889 ;;		line 201 in file "outputs_MC50.c"
 15890 ;; Parameters:    Size  Location     Type
 15891 ;;  d1              1    wreg     unsigned char 
 15892 ;;  d2              1   15[COMRAM] unsigned char 
 15893 ;;  time            2   16[COMRAM] int 
 15894 ;; Auto vars:     Size  Location     Type
 15895 ;;  d1              1   18[COMRAM] unsigned char 
 15896 ;; Return value:  Size  Location     Type
 15897 ;;                  1    wreg      void 
 15898 ;; Registers used:
 15899 ;;		wreg, status,2, status,0
 15900 ;; Tracked objects:
 15901 ;;		On entry : 3E/0
 15902 ;;		On exit  : 3F/1
 15903 ;;		Unchanged: 0/0
 15904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15905 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15906 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15908 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15909 ;;Total ram usage:        4 bytes
 15910 ;; Hardware stack levels used: 1
 15911 ;; Hardware stack levels required when called: 4
 15912 ;; This function calls:
 15913 ;;		Nothing
 15914 ;; This function is called by:
 15915 ;;		_GetSecurityStateInOpening
 15916 ;;		_GetSecurityStateInClosing
 15917 ;;		_sm_execute_ControlGate
 15918 ;;		_actionZone_Opening
 15919 ;;		_actionZone_Closing
 15920 ;; This function uses a non-reentrant model
 15921 ;;
 15922                           
 15923                           	psect	text49
 15924  00908C                     __ptext49:
 15925                           	callstack 0
 15926  00908C                     _SetSegmentValueIntermitent:
 15927                           	callstack 24
 15928                           
 15929                           ;incstack = 0
 15930                           ;SetSegmentValueIntermitent@d1 stored from wreg
 15931  00908C  6E13               	movwf	SetSegmentValueIntermitent@d1^0,c
 15932                           
 15933                           ;outputs_MC50.c: 201: void SetSegmentValueIntermitent(char d1, char d2,int time);outputs
      +                          _MC50.c: 202: {;outputs_MC50.c: 204:     if ( main_stateMachine.current_state != st_Menu
      +                          Configuration && (ts_system.timeoutMenu == 0 && button_struct.timer < (1000/50)))
 15934  00908E  0101               	movlb	1	; () banked
 15935  009090  05EE               	decf	_main_stateMachine& (0+255),w,b
 15936  009092  11EF               	iorwf	(_main_stateMachine+1)& (0+255),w,b
 15937  009094  B4D8               	btfsc	status,2,c
 15938  009096  0012               	return	
 15939                           
 15940                           ; BSR set to: 1
 15941  009098  51A9               	movf	(_ts_system+14)& (0+255),w,b	;volatile
 15942  00909A  11AA               	iorwf	(_ts_system+15)& (0+255),w,b	;volatile
 15943  00909C  A4D8               	btfss	status,2,c
 15944  00909E  0012               	return	
 15945                           
 15946                           ; BSR set to: 1
 15947  0090A0  0E14               	movlw	20
 15948  0090A2  604E               	cpfslt	(_button_struct+2)^0,c	;volatile
 15949  0090A4  0012               	return	
 15950                           
 15951                           ; BSR set to: 1
 15952                           ;outputs_MC50.c: 205:     {;outputs_MC50.c: 206:         dispStruct.display_grp.value_di
      +                          splay1=d1;
 15953  0090A6  C013  F072         	movff	SetSegmentValueIntermitent@d1,_dispStruct	;volatile
 15954                           
 15955                           ;outputs_MC50.c: 207:         dispStruct.display_grp.value_display2=d2;
 15956  0090AA  C010  F073         	movff	SetSegmentValueIntermitent@d2,_dispStruct+1	;volatile
 15957                           
 15958                           ;outputs_MC50.c: 208:         dispStruct.intermitentFreq=time;
 15959  0090AE  C011  F075         	movff	SetSegmentValueIntermitent@time,_dispStruct+3	;volatile
 15960  0090B2  C012  F076         	movff	SetSegmentValueIntermitent@time+1,_dispStruct+4	;volatile
 15961                           
 15962                           ; BSR set to: 1
 15963  0090B6  0012               	return		;funcret
 15964  0090B8                     __end_of_SetSegmentValueIntermitent:
 15965                           	callstack 0
 15966                           
 15967 ;; *************** function _GetOpenOrder *****************
 15968 ;; Defined at:
 15969 ;;		line 330 in file "inputs_MC50.c"
 15970 ;; Parameters:    Size  Location     Type
 15971 ;;		None
 15972 ;; Auto vars:     Size  Location     Type
 15973 ;;		None
 15974 ;; Return value:  Size  Location     Type
 15975 ;;                  1    wreg      enum E10539
 15976 ;; Registers used:
 15977 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15978 ;; Tracked objects:
 15979 ;;		On entry : 3E/1
 15980 ;;		On exit  : 0/0
 15981 ;;		Unchanged: 0/0
 15982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15986 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15987 ;;Total ram usage:        0 bytes
 15988 ;; Hardware stack levels used: 1
 15989 ;; Hardware stack levels required when called: 5
 15990 ;; This function calls:
 15991 ;;		_SetSegmentValueIntermitentMain
 15992 ;;		___lbdiv
 15993 ;; This function is called by:
 15994 ;;		_sm_execute_ControlGate
 15995 ;;		_actionZone_Closed
 15996 ;;		_actionZone_Opening
 15997 ;;		_actionZone_Opened
 15998 ;;		_actionZone_Closing
 15999 ;;		_sm_execute_ControlLearning
 16000 ;; This function uses a non-reentrant model
 16001 ;;
 16002                           
 16003                           	psect	text50
 16004  0056EC                     __ptext50:
 16005                           	callstack 0
 16006  0056EC                     _GetOpenOrder:
 16007                           	callstack 23
 16008                           
 16009                           ;inputs_MC50.c: 332:    if (var_sys.LearningIsEnabled == NO){
 16010                           
 16011                           ; BSR set to: 1
 16012                           ;incstack = 0
 16013  0056EC  0101               	movlb	1	; () banked
 16014  0056EE  5126               	movf	(_var_sys+38)& (0+255),w,b	;volatile
 16015  0056F0  A4D8               	btfss	status,2,c
 16016  0056F2  D0C0               	goto	l20619
 16017                           
 16018                           ; BSR set to: 1
 16019                           ;inputs_MC50.c: 334:        if(ts_system.TimeCurrentAlarm>0)
 16020  0056F4  BFC6               	btfsc	(_ts_system+43)& (0+255),7,b	;volatile
 16021  0056F6  D019               	goto	l20511
 16022  0056F8  51C6               	movf	(_ts_system+43)& (0+255),w,b	;volatile
 16023  0056FA  E103               	bnz	u23560
 16024  0056FC  05C5               	decf	(_ts_system+42)& (0+255),w,b	;volatile
 16025  0056FE  A0D8               	btfss	status,0,c
 16026  005700  D014               	goto	l20511
 16027  005702                     u23560:
 16028                           
 16029                           ; BSR set to: 1
 16030                           ;inputs_MC50.c: 336:         {;inputs_MC50.c: 337:             SetSegmentValueIntermiten
      +                          tMain(dL,d1,(1000/50));
 16031  005702  0E01               	movlw	1
 16032  005704  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16033  005706  0E00               	movlw	0
 16034  005708  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16035  00570A  0E14               	movlw	20
 16036  00570C  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16037  00570E  0E12               	movlw	18
 16038  005710  EC38  F04B         	call	_SetSegmentValueIntermitentMain
 16039                           
 16040                           ;inputs_MC50.c: 338:             ts_system.timeSinalizationDigit=( 500/50);
 16041  005714  0E00               	movlw	0
 16042  005716  0101               	movlb	1	; () banked
 16043  005718  6FA8               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16044  00571A  0E0A               	movlw	10
 16045  00571C  6FA7               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16046                           
 16047                           ; BSR set to: 1
 16048                           ;inputs_MC50.c: 339:             rfCMD.processed=1;
 16049  00571E  0E01               	movlw	1
 16050  005720  6E45               	movwf	(_rfCMD+10)^0,c	;volatile
 16051                           
 16052                           ; BSR set to: 1
 16053                           ;inputs_MC50.c: 340:             button_struct.processed=1;
 16054  005722  0E01               	movlw	1
 16055  005724  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 16056  005726                     l20505:
 16057                           
 16058                           ;inputs_MC50.c: 341:             return NoCMD;
 16059  005726  0E00               	movlw	0
 16060  005728  0012               	return	
 16061  00572A                     l20511:
 16062                           
 16063                           ; BSR set to: 1
 16064  00572A  0100               	movlb	0	; () banked
 16065  00572C  51A8               	movf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 16066  00572E  B4D8               	btfsc	status,2,c
 16067  005730  D02F               	goto	l20545
 16068                           
 16069                           ; BSR set to: 0
 16070                           ;inputs_MC50.c: 344:         {;inputs_MC50.c: 345:             if(button_struct.current=
      +                          =0x35)
 16071  005732  0E35               	movlw	53
 16072  005734  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16073  005736  A4D8               	btfss	status,2,c
 16074  005738  D017               	goto	l20529
 16075                           
 16076                           ; BSR set to: 0
 16077                           ;inputs_MC50.c: 346:             {;inputs_MC50.c: 347:                 ts_system.timeSin
      +                          alizationDigit=( 500/50);
 16078  00573A  0E00               	movlw	0
 16079  00573C  0101               	movlb	1	; () banked
 16080  00573E  6FA8               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16081  005740  0E0A               	movlw	10
 16082  005742  6FA7               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16083                           
 16084                           ; BSR set to: 1
 16085                           ;inputs_MC50.c: 348:                 SetSegmentValueIntermitentMain(dL,d0,( 200/50));
 16086  005744  0E00               	movlw	0
 16087  005746  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16088  005748  0E00               	movlw	0
 16089  00574A  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16090  00574C  0E04               	movlw	4
 16091  00574E  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16092  005750  0E12               	movlw	18
 16093  005752  EC38  F04B         	call	_SetSegmentValueIntermitentMain
 16094                           
 16095                           ;inputs_MC50.c: 349:                 if (var_sys_NVM.homemPresente == 2){
 16096  005756  0E02               	movlw	2
 16097  005758  0100               	movlb	0	; () banked
 16098  00575A  19A8               	xorwf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 16099  00575C  A4D8               	btfss	status,2,c
 16100  00575E  D002               	goto	l20523
 16101  005760                     u23590:
 16102                           
 16103                           ; BSR set to: 0
 16104                           ;inputs_MC50.c: 350:                    button_struct.processed=1;
 16105  005760  0E01               	movlw	1
 16106  005762  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 16107  005764                     l20523:
 16108                           
 16109                           ; BSR set to: 0
 16110                           ;inputs_MC50.c: 352:                 return TypeFullOpen;
 16111  005764  0E03               	movlw	3
 16112  005766  0012               	return	
 16113  005768                     l20529:
 16114                           
 16115                           ; BSR set to: 0
 16116  005768  0E33               	movlw	51
 16117  00576A  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16118  00576C  A4D8               	btfss	status,2,c
 16119  00576E  D7DB               	goto	l20505
 16120                           
 16121                           ; BSR set to: 0
 16122                           ;inputs_MC50.c: 355:             {;inputs_MC50.c: 356:                 ts_system.timeSin
      +                          alizationDigit=( 500/50);
 16123  005770  0E00               	movlw	0
 16124  005772  0101               	movlb	1	; () banked
 16125  005774  6FA8               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16126  005776  0E0A               	movlw	10
 16127  005778  6FA7               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16128                           
 16129                           ; BSR set to: 1
 16130                           ;inputs_MC50.c: 357:                 SetSegmentValueIntermitentMain(dL,d5,( 200/50));
 16131  00577A  0E05               	movlw	5
 16132  00577C  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16133  00577E  0E00               	movlw	0
 16134  005780  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16135  005782  0E04               	movlw	4
 16136  005784  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16137  005786  0E12               	movlw	18
 16138  005788  EC38  F04B         	call	_SetSegmentValueIntermitentMain
 16139  00578C                     l20535:
 16140                           
 16141                           ;inputs_MC50.c: 359:                 return TypeFullClose;
 16142  00578C  0E04               	movlw	4
 16143  00578E  0012               	return	
 16144  005790                     l20545:
 16145                           
 16146                           ; BSR set to: 0
 16147  005790  0E35               	movlw	53
 16148  005792  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16149  005794  A4D8               	btfss	status,2,c
 16150  005796  D016               	goto	l20567
 16151                           
 16152                           ; BSR set to: 0
 16153                           ;inputs_MC50.c: 371:         {;inputs_MC50.c: 372:             ts_system.timeSinalizatio
      +                          nDigit=(1000/50)*2;
 16154  005798  0E00               	movlw	0
 16155  00579A  0101               	movlb	1	; () banked
 16156  00579C  6FA8               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16157  00579E  0E28               	movlw	40
 16158  0057A0  6FA7               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16159                           
 16160                           ; BSR set to: 1
 16161                           ;inputs_MC50.c: 373:             SetSegmentValueIntermitentMain(dL,d0,( 200/50));
 16162  0057A2  0E00               	movlw	0
 16163  0057A4  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16164  0057A6  0E00               	movlw	0
 16165  0057A8  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16166  0057AA  0E04               	movlw	4
 16167  0057AC  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16168  0057AE  0E12               	movlw	18
 16169  0057B0  EC38  F04B         	call	_SetSegmentValueIntermitentMain
 16170                           
 16171                           ;inputs_MC50.c: 374:             if(var_sys_NVM.logicDigital==1)
 16172  0057B4  0100               	movlb	0	; () banked
 16173  0057B6  05A9               	decf	(_var_sys_NVM+17)& (0+255),w,b	;volatile
 16174  0057B8  B4D8               	btfsc	status,2,c
 16175  0057BA  D7D2               	goto	u23590
 16176  0057BC                     l20561:
 16177                           
 16178                           ;inputs_MC50.c: 380:             {;inputs_MC50.c: 381:                 button_struct.pro
      +                          cessed=1;
 16179  0057BC  0E01               	movlw	1
 16180  0057BE  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 16181                           
 16182                           ;inputs_MC50.c: 382:                 return TypeFull;
 16183  0057C0  0E01               	movlw	1
 16184  0057C2  0012               	return	
 16185  0057C4                     l20567:
 16186                           
 16187                           ; BSR set to: 0
 16188  0057C4  0E33               	movlw	51
 16189  0057C6  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16190  0057C8  A4D8               	btfss	status,2,c
 16191  0057CA  D019               	goto	l20589
 16192                           
 16193                           ; BSR set to: 0
 16194                           ;inputs_MC50.c: 387:         {;inputs_MC50.c: 389:             ts_system.timeSinalizatio
      +                          nDigit=(1000/50)*2;
 16195  0057CC  0E00               	movlw	0
 16196  0057CE  0101               	movlb	1	; () banked
 16197  0057D0  6FA8               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16198  0057D2  0E28               	movlw	40
 16199  0057D4  6FA7               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16200                           
 16201                           ; BSR set to: 1
 16202                           ;inputs_MC50.c: 390:             SetSegmentValueIntermitentMain(dL,d5,( 200/50));
 16203  0057D6  0E05               	movlw	5
 16204  0057D8  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16205  0057DA  0E00               	movlw	0
 16206  0057DC  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16207  0057DE  0E04               	movlw	4
 16208  0057E0  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16209  0057E2  0E12               	movlw	18
 16210  0057E4  EC38  F04B         	call	_SetSegmentValueIntermitentMain
 16211                           
 16212                           ;inputs_MC50.c: 391:             if(var_sys_NVM.logicDigital==1)
 16213  0057E8  0100               	movlb	0	; () banked
 16214  0057EA  05A9               	decf	(_var_sys_NVM+17)& (0+255),w,b	;volatile
 16215  0057EC  A4D8               	btfss	status,2,c
 16216  0057EE  D003               	goto	l20583
 16217                           
 16218                           ; BSR set to: 0
 16219                           ;inputs_MC50.c: 392:             {;inputs_MC50.c: 393:                  button_struct.pr
      +                          ocessed=1;
 16220  0057F0  0E01               	movlw	1
 16221  0057F2  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 16222  0057F4  D7CB               	goto	l20535
 16223  0057F6                     l20583:
 16224                           
 16225                           ; BSR set to: 0
 16226                           ;inputs_MC50.c: 399:             {;inputs_MC50.c: 400:                  button_struct.pr
      +                          ocessed=1;
 16227  0057F6  0E01               	movlw	1
 16228  0057F8  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 16229                           
 16230                           ; BSR set to: 0
 16231                           ;inputs_MC50.c: 402:                 return TypeWalk;
 16232  0057FA  0E02               	movlw	2
 16233  0057FC  0012               	return	
 16234  0057FE                     l20589:
 16235                           
 16236                           ; BSR set to: 0
 16237  0057FE  0E36               	movlw	54
 16238  005800  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16239  005802  A4D8               	btfss	status,2,c
 16240  005804  D00F               	goto	l20603
 16241                           
 16242                           ; BSR set to: 0
 16243                           ;inputs_MC50.c: 408:         {;inputs_MC50.c: 409:             ts_system.timeSinalizatio
      +                          nDigit=(1000/50)*2;
 16244  005806  0E00               	movlw	0
 16245  005808  0101               	movlb	1	; () banked
 16246  00580A  6FA8               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16247  00580C  0E28               	movlw	40
 16248  00580E  6FA7               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16249                           
 16250                           ; BSR set to: 1
 16251                           ;inputs_MC50.c: 410:             SetSegmentValueIntermitentMain(dP,dU,( 200/50));
 16252  005810  0E13               	movlw	19
 16253  005812  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16254  005814  0E00               	movlw	0
 16255  005816  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16256  005818  0E04               	movlw	4
 16257  00581A  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16258  00581C  0E10               	movlw	16
 16259  00581E  EC38  F04B         	call	_SetSegmentValueIntermitentMain
 16260  005822  D7CC               	goto	l20561
 16261  005824                     l20603:
 16262                           
 16263                           ; BSR set to: 0
 16264                           ;inputs_MC50.c: 417:         {;inputs_MC50.c: 418:             if(rfCMD.currentType!=NoC
      +                          MD && rfCMD.currentType!=TypeProgrammingModeFull && rfCMD.currentType!=TypeProgrammingMo
      +                          deWalk )
 16265  005824  503B               	movf	_rfCMD^0,w,c	;volatile
 16266  005826  B4D8               	btfsc	status,2,c
 16267  005828  D023               	goto	l20615
 16268                           
 16269                           ; BSR set to: 0
 16270  00582A  0E06               	movlw	6
 16271  00582C  183B               	xorwf	_rfCMD^0,w,c	;volatile
 16272  00582E  B4D8               	btfsc	status,2,c
 16273  005830  D01F               	goto	l20615
 16274                           
 16275                           ; BSR set to: 0
 16276  005832  0E05               	movlw	5
 16277  005834  183B               	xorwf	_rfCMD^0,w,c	;volatile
 16278  005836  B4D8               	btfsc	status,2,c
 16279  005838  D01B               	goto	l20615
 16280                           
 16281                           ; BSR set to: 0
 16282                           ;inputs_MC50.c: 419:             {;inputs_MC50.c: 420:                 SetSegmentValueIn
      +                          termitentMain(rfCMD.currentPosMem/10, rfCMD.currentPosMem-((rfCMD.currentPosMem/10)*10),
      +                          ( 200/50));
 16283  00583A  0E0A               	movlw	10
 16284  00583C  6E10               	movwf	___lbdiv@divisor^0,c
 16285  00583E  5043               	movf	(_rfCMD+8)^0,w,c	;volatile
 16286  005840  EC92  F047         	call	___lbdiv
 16287  005844  0DF6               	mullw	246
 16288  005846  50F3               	movf	243,w,c
 16289  005848  2443               	addwf	(_rfCMD+8)^0,w,c	;volatile
 16290  00584A  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16291  00584C  0E00               	movlw	0
 16292  00584E  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16293  005850  0E04               	movlw	4
 16294  005852  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16295  005854  0E0A               	movlw	10
 16296  005856  6E10               	movwf	___lbdiv@divisor^0,c
 16297  005858  5043               	movf	(_rfCMD+8)^0,w,c	;volatile
 16298  00585A  EC92  F047         	call	___lbdiv
 16299  00585E  EC38  F04B         	call	_SetSegmentValueIntermitentMain
 16300                           
 16301                           ;inputs_MC50.c: 421:                 ts_system.timeSinalizationDigit=(1000/50)*2;
 16302  005862  0E00               	movlw	0
 16303  005864  0101               	movlb	1	; () banked
 16304  005866  6FA8               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16305  005868  0E28               	movlw	40
 16306  00586A  6FA7               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16307                           
 16308                           ; BSR set to: 1
 16309                           ;inputs_MC50.c: 422:                 rfCMD.processed=1;
 16310  00586C  0E01               	movlw	1
 16311  00586E  6E45               	movwf	(_rfCMD+10)^0,c	;volatile
 16312  005870                     l20615:
 16313                           
 16314                           ;inputs_MC50.c: 425:             return rfCMD.currentType;
 16315  005870  503B               	movf	_rfCMD^0,w,c	;volatile
 16316  005872  0012               	return	
 16317  005874                     l20619:
 16318                           
 16319                           ; BSR set to: 1
 16320                           ;inputs_MC50.c: 428:     {;inputs_MC50.c: 429:        if(rfCMD.currentType!=NoCMD ){
 16321  005874  503B               	movf	_rfCMD^0,w,c	;volatile
 16322  005876  B4D8               	btfsc	status,2,c
 16323  005878  D01B               	goto	l20627
 16324                           
 16325                           ; BSR set to: 1
 16326                           ;inputs_MC50.c: 430:                   SetSegmentValueIntermitentMain(rfCMD.currentPosMe
      +                          m/10, rfCMD.currentPosMem-((rfCMD.currentPosMem/10)*10),( 200/50));
 16327  00587A  0E0A               	movlw	10
 16328  00587C  6E10               	movwf	___lbdiv@divisor^0,c
 16329  00587E  5043               	movf	(_rfCMD+8)^0,w,c	;volatile
 16330  005880  EC92  F047         	call	___lbdiv
 16331  005884  0DF6               	mullw	246
 16332  005886  50F3               	movf	243,w,c
 16333  005888  2443               	addwf	(_rfCMD+8)^0,w,c	;volatile
 16334  00588A  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16335  00588C  0E00               	movlw	0
 16336  00588E  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16337  005890  0E04               	movlw	4
 16338  005892  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16339  005894  0E0A               	movlw	10
 16340  005896  6E10               	movwf	___lbdiv@divisor^0,c
 16341  005898  5043               	movf	(_rfCMD+8)^0,w,c	;volatile
 16342  00589A  EC92  F047         	call	___lbdiv
 16343  00589E  EC38  F04B         	call	_SetSegmentValueIntermitentMain
 16344                           
 16345                           ;inputs_MC50.c: 431:                 ts_system.timeSinalizationDigit=(1000/50)*1;
 16346  0058A2  0E00               	movlw	0
 16347  0058A4  0101               	movlb	1	; () banked
 16348  0058A6  6FA8               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16349  0058A8  0E14               	movlw	20
 16350  0058AA  6FA7               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16351                           
 16352                           ; BSR set to: 1
 16353                           ;inputs_MC50.c: 432:                 rfCMD.processed=1;
 16354  0058AC  0E01               	movlw	1
 16355  0058AE  6E45               	movwf	(_rfCMD+10)^0,c	;volatile
 16356  0058B0                     l20627:
 16357                           
 16358                           ; BSR set to: 1
 16359                           ;inputs_MC50.c: 434:        return rfCMD.currentType;
 16360  0058B0  503B               	movf	_rfCMD^0,w,c	;volatile
 16361  0058B2  0012               	return		;funcret
 16362  0058B4                     __end_of_GetOpenOrder:
 16363                           	callstack 0
 16364                           
 16365 ;; *************** function ___lbdiv *****************
 16366 ;; Defined at:
 16367 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\lbdiv.c"
 16368 ;; Parameters:    Size  Location     Type
 16369 ;;  dividend        1    wreg     unsigned char 
 16370 ;;  divisor         1   15[COMRAM] unsigned char 
 16371 ;; Auto vars:     Size  Location     Type
 16372 ;;  dividend        1   16[COMRAM] unsigned char 
 16373 ;;  quotient        1   18[COMRAM] unsigned char 
 16374 ;;  counter         1   17[COMRAM] unsigned char 
 16375 ;; Return value:  Size  Location     Type
 16376 ;;                  1    wreg      unsigned char 
 16377 ;; Registers used:
 16378 ;;		wreg, status,2, status,0
 16379 ;; Tracked objects:
 16380 ;;		On entry : 0/0
 16381 ;;		On exit  : 0/0
 16382 ;;		Unchanged: 0/0
 16383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16384 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16385 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16387 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16388 ;;Total ram usage:        4 bytes
 16389 ;; Hardware stack levels used: 1
 16390 ;; Hardware stack levels required when called: 4
 16391 ;; This function calls:
 16392 ;;		Nothing
 16393 ;; This function is called by:
 16394 ;;		_GetOpenOrder
 16395 ;;		_sm_execute_menuConfiguration
 16396 ;; This function uses a non-reentrant model
 16397 ;;
 16398                           
 16399                           	psect	text51
 16400  008F24                     __ptext51:
 16401                           	callstack 0
 16402  008F24                     ___lbdiv:
 16403                           	callstack 24
 16404                           
 16405                           ;incstack = 0
 16406                           ;___lbdiv@dividend stored from wreg
 16407  008F24  6E11               	movwf	___lbdiv@dividend^0,c
 16408  008F26  0E00               	movlw	0
 16409  008F28  6E13               	movwf	___lbdiv@quotient^0,c
 16410  008F2A  5010               	movf	___lbdiv@divisor^0,w,c
 16411  008F2C  B4D8               	btfsc	status,2,c
 16412  008F2E  D015               	goto	l20457
 16413  008F30  0E01               	movlw	1
 16414  008F32  6E12               	movwf	___lbdiv@counter^0,c
 16415  008F34  D003               	goto	l20445
 16416  008F36                     l20441:
 16417  008F36  90D8               	bcf	status,0,c
 16418  008F38  3610               	rlcf	___lbdiv@divisor^0,f,c
 16419  008F3A  2A12               	incf	___lbdiv@counter^0,f,c
 16420  008F3C                     l20445:
 16421  008F3C  AE10               	btfss	___lbdiv@divisor^0,7,c
 16422  008F3E  D7FB               	goto	l20441
 16423  008F40                     u23460:
 16424  008F40  90D8               	bcf	status,0,c
 16425  008F42  3613               	rlcf	___lbdiv@quotient^0,f,c
 16426  008F44  5010               	movf	___lbdiv@divisor^0,w,c
 16427  008F46  5C11               	subwf	___lbdiv@dividend^0,w,c
 16428  008F48  A0D8               	btfss	status,0,c
 16429  008F4A  D003               	goto	l20453
 16430  008F4C  5010               	movf	___lbdiv@divisor^0,w,c
 16431  008F4E  5E11               	subwf	___lbdiv@dividend^0,f,c
 16432  008F50  8013               	bsf	___lbdiv@quotient^0,0,c
 16433  008F52                     l20453:
 16434  008F52  90D8               	bcf	status,0,c
 16435  008F54  3210               	rrcf	___lbdiv@divisor^0,f,c
 16436  008F56  2E12               	decfsz	___lbdiv@counter^0,f,c
 16437  008F58  D7F3               	goto	u23460
 16438  008F5A                     l20457:
 16439  008F5A  5013               	movf	___lbdiv@quotient^0,w,c
 16440  008F5C  0012               	return		;funcret
 16441  008F5E                     __end_of___lbdiv:
 16442                           	callstack 0
 16443                           
 16444 ;; *************** function _SetSegmentValueIntermitentMain *****************
 16445 ;; Defined at:
 16446 ;;		line 193 in file "outputs_MC50.c"
 16447 ;; Parameters:    Size  Location     Type
 16448 ;;  d1              1    wreg     unsigned char 
 16449 ;;  d2              1   27[COMRAM] unsigned char 
 16450 ;;  time            2   28[COMRAM] int 
 16451 ;; Auto vars:     Size  Location     Type
 16452 ;;  d1              1   30[COMRAM] unsigned char 
 16453 ;; Return value:  Size  Location     Type
 16454 ;;                  1    wreg      void 
 16455 ;; Registers used:
 16456 ;;		wreg
 16457 ;; Tracked objects:
 16458 ;;		On entry : 0/1
 16459 ;;		On exit  : 0/0
 16460 ;;		Unchanged: 0/0
 16461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16462 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16463 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16465 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16466 ;;Total ram usage:        4 bytes
 16467 ;; Hardware stack levels used: 1
 16468 ;; Hardware stack levels required when called: 4
 16469 ;; This function calls:
 16470 ;;		Nothing
 16471 ;; This function is called by:
 16472 ;;		_GetOpenOrder
 16473 ;;		_sm_execute_main
 16474 ;;		_sm_execute_menuConfiguration
 16475 ;;		_load_New_Menu
 16476 ;;		_controlSelectRemote
 16477 ;;		_controlSaveRemote
 16478 ;; This function uses a non-reentrant model
 16479 ;;
 16480                           
 16481                           	psect	text52
 16482  009670                     __ptext52:
 16483                           	callstack 0
 16484  009670                     _SetSegmentValueIntermitentMain:
 16485                           	callstack 22
 16486                           
 16487                           ;incstack = 0
 16488                           ;SetSegmentValueIntermitentMain@d1 stored from wreg
 16489  009670  6E1F               	movwf	SetSegmentValueIntermitentMain@d1^0,c
 16490                           
 16491                           ;outputs_MC50.c: 193: void SetSegmentValueIntermitentMain(char d1, char d2,int time);out
      +                          puts_MC50.c: 194: {;outputs_MC50.c: 195:     dispStruct.display_grp.value_display1=d1;
 16492  009672  C01F  F072         	movff	SetSegmentValueIntermitentMain@d1,_dispStruct	;volatile
 16493                           
 16494                           ;outputs_MC50.c: 196:     dispStruct.display_grp.value_display2=d2;
 16495  009676  C01C  F073         	movff	SetSegmentValueIntermitentMain@d2,_dispStruct+1	;volatile
 16496                           
 16497                           ;outputs_MC50.c: 197:     dispStruct.intermitentFreq=time;
 16498  00967A  C01D  F075         	movff	SetSegmentValueIntermitentMain@time,_dispStruct+3	;volatile
 16499  00967E  C01E  F076         	movff	SetSegmentValueIntermitentMain@time+1,_dispStruct+4	;volatile
 16500  009682  0012               	return		;funcret
 16501  009684                     __end_of_SetSegmentValueIntermitentMain:
 16502                           	callstack 0
 16503                           
 16504 ;; *************** function _readbutton *****************
 16505 ;; Defined at:
 16506 ;;		line 471 in file "inputs_MC50.c"
 16507 ;; Parameters:    Size  Location     Type
 16508 ;;		None
 16509 ;; Auto vars:     Size  Location     Type
 16510 ;;		None
 16511 ;; Return value:  Size  Location     Type
 16512 ;;                  1    wreg      void 
 16513 ;; Registers used:
 16514 ;;		wreg, status,2, status,0
 16515 ;; Tracked objects:
 16516 ;;		On entry : 3F/1
 16517 ;;		On exit  : 3F/1
 16518 ;;		Unchanged: 0/0
 16519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16521 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16523 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16524 ;;Total ram usage:        0 bytes
 16525 ;; Hardware stack levels used: 1
 16526 ;; Hardware stack levels required when called: 4
 16527 ;; This function calls:
 16528 ;;		Nothing
 16529 ;; This function is called by:
 16530 ;;		_main
 16531 ;; This function uses a non-reentrant model
 16532 ;;
 16533                           
 16534                           	psect	text53
 16535  008554                     __ptext53:
 16536                           	callstack 0
 16537  008554                     _readbutton:
 16538                           	callstack 26
 16539                           
 16540                           ; BSR set to: 1
 16541                           ;inputs_MC50.c: 474:  static unsigned char key1=0, key2=0;;inputs_MC50.c: 479:  key2 = (
      +                           PORTB & 0x37 );
 16542                           
 16543                           ;incstack = 0
 16544  008554  508E               	movf	142,w,c	;volatile
 16545  008556  0B37               	andlw	55
 16546  008558  6F97               	movwf	readbutton@key2& (0+255),b
 16547  00855A  F000               	nop		;# 
 16548  00855C  F000               	nop		;# 
 16549  00855E  F000               	nop		;# 
 16550                           
 16551                           ;inputs_MC50.c: 483:  key1 = ( PORTB & 0x37 );
 16552  008560  508E               	movf	142,w,c	;volatile
 16553  008562  0B37               	andlw	55
 16554  008564  0100               	movlb	0	; () banked
 16555  008566  6F86               	movwf	readbutton@key1& (0+255),b
 16556                           
 16557                           ;inputs_MC50.c: 485:  if ( key2 == key1 )
 16558  008568  5186               	movf	readbutton@key1& (0+255),w,b
 16559  00856A  0101               	movlb	1	; () banked
 16560  00856C  1997               	xorwf	readbutton@key2& (0+255),w,b
 16561  00856E  A4D8               	btfss	status,2,c
 16562  008570  D003               	goto	l16913
 16563                           
 16564                           ; BSR set to: 1
 16565                           ;inputs_MC50.c: 486:  {;inputs_MC50.c: 487:         button_struct.current = key1;
 16566  008572  C086  F04D         	movff	readbutton@key1,_button_struct+1	;volatile
 16567                           
 16568                           ;inputs_MC50.c: 488:  }
 16569  008576  D002               	goto	l16915
 16570  008578                     l16913:
 16571                           
 16572                           ; BSR set to: 1
 16573                           ;inputs_MC50.c: 490:     {;inputs_MC50.c: 491:         button_struct.current = 0x37;
 16574  008578  0E37               	movlw	55
 16575  00857A  6E4D               	movwf	(_button_struct+1)^0,c	;volatile
 16576  00857C                     l16915:
 16577                           
 16578                           ; BSR set to: 1
 16579                           ;inputs_MC50.c: 494:     if ( button_struct.current == 0x37 || ( button_struct.current !
      +                          = button_struct.old && button_struct.current == 0x00))
 16580  00857C  0E37               	movlw	55
 16581  00857E  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16582  008580  B4D8               	btfsc	status,2,c
 16583  008582  D007               	goto	u19410
 16584                           
 16585                           ; BSR set to: 1
 16586  008584  504C               	movf	_button_struct^0,w,c	;volatile
 16587  008586  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16588  008588  B4D8               	btfsc	status,2,c
 16589  00858A  D007               	goto	l16923
 16590                           
 16591                           ; BSR set to: 1
 16592  00858C  504D               	movf	(_button_struct+1)^0,w,c	;volatile
 16593  00858E  A4D8               	btfss	status,2,c
 16594  008590  D004               	goto	l16923
 16595  008592                     u19410:
 16596                           
 16597                           ; BSR set to: 1
 16598                           ;inputs_MC50.c: 495:  {;inputs_MC50.c: 496:   button_struct.processed=0;
 16599  008592  0E00               	movlw	0
 16600  008594  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 16601                           
 16602                           ;inputs_MC50.c: 497:         button_struct.timer=0;
 16603  008596  0E00               	movlw	0
 16604  008598  6E4E               	movwf	(_button_struct+2)^0,c	;volatile
 16605  00859A                     l16923:
 16606                           
 16607                           ; BSR set to: 1
 16608                           ;inputs_MC50.c: 500:  if ( button_struct.current != 0x37 )
 16609  00859A  0E37               	movlw	55
 16610  00859C  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16611  00859E  B4D8               	btfsc	status,2,c
 16612  0085A0  D007               	goto	l16931
 16613                           
 16614                           ; BSR set to: 1
 16615                           ;inputs_MC50.c: 501:  {;inputs_MC50.c: 502:   button_struct.old = button_struct.current;
 16616  0085A2  C04D  F04C         	movff	_button_struct+1,_button_struct	;volatile
 16617                           
 16618                           ; BSR set to: 1
 16619                           ;inputs_MC50.c: 504:         if ( button_struct.timer < 250 )
 16620  0085A6  0EFA               	movlw	250
 16621  0085A8  604E               	cpfslt	(_button_struct+2)^0,c	;volatile
 16622  0085AA  D004               	goto	l16933
 16623                           
 16624                           ; BSR set to: 1
 16625                           ;inputs_MC50.c: 505:         {;inputs_MC50.c: 506:             button_struct.timer++;
 16626  0085AC  2A4E               	incf	(_button_struct+2)^0,f,c	;volatile
 16627  0085AE  D002               	goto	l16933
 16628  0085B0                     l16931:
 16629                           
 16630                           ; BSR set to: 1
 16631                           ;inputs_MC50.c: 515:  {;inputs_MC50.c: 516:   button_struct.timer=0;
 16632  0085B0  0E00               	movlw	0
 16633  0085B2  6E4E               	movwf	(_button_struct+2)^0,c	;volatile
 16634  0085B4                     l16933:
 16635                           
 16636                           ; BSR set to: 1
 16637                           ;inputs_MC50.c: 520:  if ( button_struct.processed == 1 )
 16638  0085B4  044F               	decf	(_button_struct+3)^0,w,c	;volatile
 16639  0085B6  A4D8               	btfss	status,2,c
 16640  0085B8  0012               	return	
 16641                           
 16642                           ; BSR set to: 1
 16643                           ;inputs_MC50.c: 521:  {;inputs_MC50.c: 522:   button_struct.current = 0x37;
 16644  0085BA  0E37               	movlw	55
 16645  0085BC  6E4D               	movwf	(_button_struct+1)^0,c	;volatile
 16646                           
 16647                           ; BSR set to: 1
 16648  0085BE  0012               	return		;funcret
 16649  0085C0                     __end_of_readbutton:
 16650                           	callstack 0
 16651                           
 16652 ;; *************** function _read_package *****************
 16653 ;; Defined at:
 16654 ;;		line 21 in file "eusartpackage.c"
 16655 ;; Parameters:    Size  Location     Type
 16656 ;;		None
 16657 ;; Auto vars:     Size  Location     Type
 16658 ;;  package         7   23[COMRAM] struct package_t
 16659 ;; Return value:  Size  Location     Type
 16660 ;;                  7   16[COMRAM] struct package_t
 16661 ;; Registers used:
 16662 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
 16663 ;; Tracked objects:
 16664 ;;		On entry : 3F/0
 16665 ;;		On exit  : 3F/E
 16666 ;;		Unchanged: 0/0
 16667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16668 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16669 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16671 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16672 ;;Total ram usage:       14 bytes
 16673 ;; Hardware stack levels used: 1
 16674 ;; Hardware stack levels required when called: 5
 16675 ;; This function calls:
 16676 ;;		_EUSART1_Read
 16677 ;; This function is called by:
 16678 ;;		_main
 16679 ;; This function uses a non-reentrant model
 16680 ;;
 16681                           
 16682                           	psect	text54
 16683  008ABC                     __ptext54:
 16684                           	callstack 0
 16685  008ABC                     _read_package:
 16686                           	callstack 25
 16687                           
 16688                           ; BSR set to: 0
 16689                           ;eusartpackage.c: 22:         struct package_t package;;eusartpackage.c: 24:         if(
      +                          EUSART1_Read()!=0x0A){
 16690                           
 16691                           ; BSR set to: 1
 16692                           ;incstack = 0
 16693  008ABC  EC48  F046         	call	_EUSART1_Read	;wreg free
 16694  008AC0  0A0A               	xorlw	10
 16695  008AC2  B4D8               	btfsc	status,2,c
 16696  008AC4  D00C               	goto	l17091
 16697  008AC6                     u19940:
 16698                           
 16699                           ; BSR set to: 14
 16700                           ;eusartpackage.c: 25:             package.valid=0;
 16701  008AC6  0E00               	movlw	0
 16702  008AC8  6E1E               	movwf	(read_package@package+6)^0,c
 16703                           
 16704                           ; BSR set to: 14
 16705                           ;eusartpackage.c: 26:             return package;
 16706  008ACA  EE20  F018         	lfsr	2,read_package@package
 16707  008ACE  EE00  F011         	lfsr	0,?_read_package
 16708  008AD2  0E06               	movlw	6
 16709  008AD4                     u19951:
 16710  008AD4  CFDB FFEB          	movff	plusw2,plusw0
 16711  008AD8  06E8               	decf	wreg,f,c
 16712  008ADA  E2FC               	bc	u19951
 16713  008ADC  0012               	return	
 16714  008ADE                     l17091:
 16715                           
 16716                           ; BSR set to: 14
 16717                           ;eusartpackage.c: 29:             package.startbyte=0x0A;
 16718  008ADE  0E0A               	movlw	10
 16719  008AE0  6E1C               	movwf	(read_package@package+4)^0,c
 16720                           
 16721                           ; BSR set to: 14
 16722                           ;eusartpackage.c: 32:         package.functioncode=EUSART1_Read();
 16723  008AE2  EC48  F046         	call	_EUSART1_Read	;wreg free
 16724  008AE6  6E18               	movwf	read_package@package^0,c
 16725                           
 16726                           ; BSR set to: 14
 16727                           ;eusartpackage.c: 33:         package.address=EUSART1_Read();
 16728  008AE8  EC48  F046         	call	_EUSART1_Read	;wreg free
 16729  008AEC  6E19               	movwf	(read_package@package+1)^0,c
 16730                           
 16731                           ; BSR set to: 14
 16732                           ;eusartpackage.c: 34:         package.data.data8[0]=EUSART1_Read();
 16733  008AEE  EC48  F046         	call	_EUSART1_Read	;wreg free
 16734  008AF2  6E1A               	movwf	(read_package@package+2)^0,c
 16735                           
 16736                           ; BSR set to: 14
 16737                           ;eusartpackage.c: 35:         package.data.data8[1]=EUSART1_Read();
 16738  008AF4  EC48  F046         	call	_EUSART1_Read	;wreg free
 16739  008AF8  6E1B               	movwf	(read_package@package+3)^0,c
 16740                           
 16741                           ; BSR set to: 14
 16742                           ;eusartpackage.c: 38:         if(EUSART1_Read()!=0x0D){
 16743  008AFA  EC48  F046         	call	_EUSART1_Read	;wreg free
 16744  008AFE  0A0D               	xorlw	13
 16745  008B00  A4D8               	btfss	status,2,c
 16746  008B02  D7E1               	goto	u19940
 16747                           
 16748                           ; BSR set to: 14
 16749                           ;eusartpackage.c: 43:             package.endbyte=0x0D;
 16750  008B04  0E0D               	movlw	13
 16751  008B06  6E1D               	movwf	(read_package@package+5)^0,c
 16752                           
 16753                           ; BSR set to: 14
 16754                           ;eusartpackage.c: 46:         package.valid=1;
 16755  008B08  0E01               	movlw	1
 16756  008B0A  D7DE               	goto	L76
 16757  008B0C                     __end_of_read_package:
 16758                           	callstack 0
 16759                           
 16760 ;; *************** function _EUSART1_Read *****************
 16761 ;; Defined at:
 16762 ;;		line 151 in file "mcc_generated_files/eusart1.c"
 16763 ;; Parameters:    Size  Location     Type
 16764 ;;		None
 16765 ;; Auto vars:     Size  Location     Type
 16766 ;;  readValue       1   15[COMRAM] unsigned char 
 16767 ;; Return value:  Size  Location     Type
 16768 ;;                  1    wreg      unsigned char 
 16769 ;; Registers used:
 16770 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16771 ;; Tracked objects:
 16772 ;;		On entry : 31/0
 16773 ;;		On exit  : 3F/E
 16774 ;;		Unchanged: 0/0
 16775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16777 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16779 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16780 ;;Total ram usage:        1 bytes
 16781 ;; Hardware stack levels used: 1
 16782 ;; Hardware stack levels required when called: 4
 16783 ;; This function calls:
 16784 ;;		Nothing
 16785 ;; This function is called by:
 16786 ;;		_read_package
 16787 ;; This function uses a non-reentrant model
 16788 ;;
 16789                           
 16790                           	psect	text55
 16791  008C90                     __ptext55:
 16792                           	callstack 0
 16793  008C90                     _EUSART1_Read:
 16794                           	callstack 25
 16795                           
 16796                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
 16797                           
 16798                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
 16799                           
 16800                           ; BSR set to: 14
 16801                           ;incstack = 0
 16802  008C90  0100               	movlb	0	; () banked
 16803  008C92  5193               	movf	_eusart1RxCount& (0+255),w,b	;volatile
 16804  008C94  B4D8               	btfsc	status,2,c
 16805  008C96  D7FC               	goto	__ptext55
 16806                           
 16807                           ; BSR set to: 0
 16808                           ;mcc_generated_files/eusart1.c: 159:     eusart1RxLastError = eusart1RxStatusBuffer[eusa
      +                          rt1RxTail];
 16809  008C98  0E74               	movlw	low _eusart1RxStatusBuffer
 16810  008C9A  2594               	addwf	_eusart1RxTail& (0+255),w,b	;volatile
 16811  008C9C  6ED9               	movwf	fsr2l,c
 16812  008C9E  6ADA               	clrf	fsr2h,c
 16813  008CA0  0E02               	movlw	high _eusart1RxStatusBuffer
 16814  008CA2  22DA               	addwfc	fsr2h,f,c
 16815  008CA4  50DF               	movf	indf2,w,c
 16816  008CA6  0101               	movlb	1	; () banked
 16817  008CA8  6F9A               	movwf	_eusart1RxLastError& (0+255),b	;volatile
 16818                           
 16819                           ;mcc_generated_files/eusart1.c: 161:     readValue = eusart1RxBuffer[eusart1RxTail++];
 16820  008CAA  0E7C               	movlw	low _eusart1RxBuffer
 16821  008CAC  0100               	movlb	0	; () banked
 16822  008CAE  2594               	addwf	_eusart1RxTail& (0+255),w,b	;volatile
 16823  008CB0  6ED9               	movwf	fsr2l,c
 16824  008CB2  6ADA               	clrf	fsr2h,c
 16825  008CB4  0E02               	movlw	high _eusart1RxBuffer
 16826  008CB6  22DA               	addwfc	fsr2h,f,c
 16827  008CB8  50DF               	movf	indf2,w,c
 16828  008CBA  6E10               	movwf	EUSART1_Read@readValue^0,c
 16829                           
 16830                           ; BSR set to: 0
 16831  008CBC  2B94               	incf	_eusart1RxTail& (0+255),f,b	;volatile
 16832                           
 16833                           ; BSR set to: 0
 16834                           ;mcc_generated_files/eusart1.c: 162:     if(sizeof(eusart1RxBuffer) <= eusart1RxTail)
 16835  008CBE  0E07               	movlw	7
 16836  008CC0  6594               	cpfsgt	_eusart1RxTail& (0+255),b
 16837  008CC2  D002               	goto	l14309
 16838                           
 16839                           ; BSR set to: 0
 16840                           ;mcc_generated_files/eusart1.c: 163:     {;mcc_generated_files/eusart1.c: 164:         e
      +                          usart1RxTail = 0;
 16841  008CC4  0E00               	movlw	0
 16842  008CC6  6F94               	movwf	_eusart1RxTail& (0+255),b	;volatile
 16843  008CC8                     l14309:
 16844                           
 16845                           ; BSR set to: 0
 16846                           ;mcc_generated_files/eusart1.c: 166:     PIE3bits.RC1IE = 0;
 16847  008CC8  010E               	movlb	14	; () banked
 16848  008CCA  9BC5               	bcf	197,5,b	;volatile
 16849                           
 16850                           ; BSR set to: 14
 16851                           ;mcc_generated_files/eusart1.c: 167:     eusart1RxCount--;
 16852  008CCC  0100               	movlb	0	; () banked
 16853  008CCE  0793               	decf	_eusart1RxCount& (0+255),f,b	;volatile
 16854                           
 16855                           ; BSR set to: 0
 16856                           ;mcc_generated_files/eusart1.c: 168:     PIE3bits.RC1IE = 1;
 16857  008CD0  010E               	movlb	14	; () banked
 16858  008CD2  8BC5               	bsf	197,5,b	;volatile
 16859                           
 16860                           ; BSR set to: 14
 16861                           ;mcc_generated_files/eusart1.c: 170:     return readValue;
 16862  008CD4  5010               	movf	EUSART1_Read@readValue^0,w,c
 16863                           
 16864                           ; BSR set to: 14
 16865  008CD6  0012               	return		;funcret
 16866  008CD8                     __end_of_EUSART1_Read:
 16867                           	callstack 0
 16868                           
 16869 ;; *************** function _readRFButtons *****************
 16870 ;; Defined at:
 16871 ;;		line 231 in file "inputs_MC50.c"
 16872 ;; Parameters:    Size  Location     Type
 16873 ;;		None
 16874 ;; Auto vars:     Size  Location     Type
 16875 ;;		None
 16876 ;; Return value:  Size  Location     Type
 16877 ;;                  1    wreg      void 
 16878 ;; Registers used:
 16879 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 16880 ;; Tracked objects:
 16881 ;;		On entry : 3F/1
 16882 ;;		On exit  : 3E/0
 16883 ;;		Unchanged: 0/0
 16884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16888 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16889 ;;Total ram usage:        0 bytes
 16890 ;; Hardware stack levels used: 1
 16891 ;; Hardware stack levels required when called: 15
 16892 ;; This function calls:
 16893 ;;		_DecryptPacket_12BIT
 16894 ;;		_keeloqDecryptPacket
 16895 ;; This function is called by:
 16896 ;;		_main
 16897 ;; This function uses a non-reentrant model
 16898 ;;
 16899                           
 16900                           	psect	text56
 16901  005F24                     __ptext56:
 16902                           	callstack 0
 16903  005F24                     _readRFButtons:
 16904                           	callstack 15
 16905                           
 16906                           ; BSR set to: 1
 16907                           ;inputs_MC50.c: 232:     static unsigned char key1 = 0;;inputs_MC50.c: 233:     static u
      +                          int32_t serial = 0;;inputs_MC50.c: 234:     static uint16_t rollingCode= 0;;inputs_MC50.
      +                          c: 235:     static TypeCMD keyType = 0;;inputs_MC50.c: 236:     static TypeRemote_st typ
      +                          eRemote;;inputs_MC50.c: 241:     if(RFFull)
 16908                           
 16909                           ; BSR set to: 14
 16910                           ;incstack = 0
 16911  005F24  0100               	movlb	0	; () banked
 16912  005F26  518B               	movf	_RFFull& (0+255),w,b	;volatile
 16913  005F28  B4D8               	btfsc	status,2,c
 16914  005F2A  D0B9               	goto	l23303
 16915                           
 16916                           ; BSR set to: 0
 16917                           ;inputs_MC50.c: 242:     {;inputs_MC50.c: 244:          if(RFFull_12BIT==0)
 16918  005F2C  518A               	movf	_RFFull_12BIT& (0+255),w,b	;volatile
 16919  005F2E  A4D8               	btfss	status,2,c
 16920  005F30  D00B               	goto	l23249
 16921                           
 16922                           ; BSR set to: 0
 16923                           ;inputs_MC50.c: 245:          {;inputs_MC50.c: 246:             keyType = keeloqDecryptP
      +                          acket(BufferRF,&classic_data);
 16924  005F32  0ECA               	movlw	low _BufferRF
 16925  005F34  6FE0               	movwf	keeloqDecryptPacket@data& (0+255),b
 16926  005F36  0E02               	movlw	high _BufferRF
 16927  005F38  6FE1               	movwf	(keeloqDecryptPacket@data+1)& (0+255),b
 16928  005F3A  0E94               	movlw	low _classic_data
 16929  005F3C  6FE2               	movwf	keeloqDecryptPacket@classic_data& (0+255),b
 16930  005F3E  0E02               	movlw	high _classic_data
 16931  005F40  6FE3               	movwf	(keeloqDecryptPacket@classic_data+1)& (0+255),b
 16932  005F42  EC8D  F02A         	call	_keeloqDecryptPacket	;wreg free
 16933  005F46  D00A               	goto	L77
 16934  005F48                     l23249:
 16935                           
 16936                           ; BSR set to: 0
 16937                           ;inputs_MC50.c: 249:          {;inputs_MC50.c: 250:             keyType = DecryptPacket_
      +                          12BIT(BufferRF,&classic_data);
 16938  005F48  0ECA               	movlw	low _BufferRF
 16939  005F4A  6FE0               	movwf	DecryptPacket_12BIT@data& (0+255),b
 16940  005F4C  0E02               	movlw	high _BufferRF
 16941  005F4E  6FE1               	movwf	(DecryptPacket_12BIT@data+1)& (0+255),b
 16942  005F50  0E94               	movlw	low _classic_data
 16943  005F52  6FE2               	movwf	DecryptPacket_12BIT@classic_data& (0+255),b
 16944  005F54  0E02               	movlw	high _classic_data
 16945  005F56  6FE3               	movwf	(DecryptPacket_12BIT@classic_data+1)& (0+255),b
 16946  005F58  EC8E  F03D         	call	_DecryptPacket_12BIT	;wreg free
 16947  005F5C                     L77:
 16948  005F5C  6F87               	movwf	readRFButtons@keyType& (0+255),b
 16949                           
 16950                           ; BSR set to: 0
 16951                           ;inputs_MC50.c: 254:         key1 = classic_data.fcode1;
 16952  005F5E  C2A0  F088         	movff	_classic_data+12,readRFButtons@key1
 16953                           
 16954                           ; BSR set to: 0
 16955                           ;inputs_MC50.c: 255:         serial = classic_data.serialnumber;
 16956  005F62  C298  F181         	movff	_classic_data+4,readRFButtons@serial
 16957  005F66  C299  F182         	movff	_classic_data+5,readRFButtons@serial+1
 16958  005F6A  C29A  F183         	movff	_classic_data+6,readRFButtons@serial+2
 16959  005F6E  C29B  F184         	movff	_classic_data+7,readRFButtons@serial+3
 16960                           
 16961                           ; BSR set to: 0
 16962                           ;inputs_MC50.c: 256:         rollingCode = classic_data.sync;
 16963  005F72  C29C  F185         	movff	_classic_data+8,readRFButtons@rollingCode
 16964  005F76  C29D  F186         	movff	_classic_data+9,readRFButtons@rollingCode+1
 16965                           
 16966                           ; BSR set to: 0
 16967                           ;inputs_MC50.c: 257:         typeRemote = classic_data.type;
 16968  005F7A  C2A2  F198         	movff	_classic_data+14,readRFButtons@typeRemote
 16969                           
 16970                           ; BSR set to: 0
 16971                           ;inputs_MC50.c: 270:         if (var_sys.LearningIsEnabled == YES){
 16972  005F7E  0101               	movlb	1	; () banked
 16973  005F80  0526               	decf	(_var_sys+38)& (0+255),w,b	;volatile
 16974  005F82  A4D8               	btfss	status,2,c
 16975  005F84  D01E               	goto	l23271
 16976                           
 16977                           ; BSR set to: 1
 16978                           ;inputs_MC50.c: 272:              if (keyType==NoCMD || rfCMD.currentKey!=key1 || rfCMD.
      +                          currentSerial!=serial || keyType!=rfCMD.currentType)
 16979  005F86  0100               	movlb	0	; () banked
 16980  005F88  5187               	movf	readRFButtons@keyType& (0+255),w,b
 16981  005F8A  B4D8               	btfsc	status,2,c
 16982  005F8C  D044               	goto	u28310
 16983                           
 16984                           ; BSR set to: 0
 16985  005F8E  5188               	movf	readRFButtons@key1& (0+255),w,b
 16986  005F90  183C               	xorwf	(_rfCMD+1)^0,w,c	;volatile
 16987  005F92  A4D8               	btfss	status,2,c
 16988  005F94  D040               	goto	u28310
 16989                           
 16990                           ; BSR set to: 0
 16991  005F96  0101               	movlb	1	; () banked
 16992  005F98  5181               	movf	readRFButtons@serial& (0+255),w,b
 16993  005F9A  183D               	xorwf	(_rfCMD+2)^0,w,c	;volatile
 16994  005F9C  E13C               	bnz	l23283
 16995  005F9E  5182               	movf	(readRFButtons@serial+1)& (0+255),w,b
 16996  005FA0  183E               	xorwf	(_rfCMD+3)^0,w,c	;volatile
 16997  005FA2  E139               	bnz	l23283
 16998  005FA4  5183               	movf	(readRFButtons@serial+2)& (0+255),w,b
 16999  005FA6  183F               	xorwf	(_rfCMD+4)^0,w,c	;volatile
 17000  005FA8  E136               	bnz	l23283
 17001  005FAA  5184               	movf	(readRFButtons@serial+3)& (0+255),w,b
 17002  005FAC  1840               	xorwf	(_rfCMD+5)^0,w,c	;volatile
 17003  005FAE  A4D8               	btfss	status,2,c
 17004  005FB0  D032               	goto	u28310
 17005                           
 17006                           ; BSR set to: 1
 17007  005FB2  0100               	movlb	0	; () banked
 17008  005FB4  5187               	movf	readRFButtons@keyType& (0+255),w,b
 17009  005FB6  183B               	xorwf	_rfCMD^0,w,c	;volatile
 17010  005FB8  A4D8               	btfss	status,2,c
 17011  005FBA  D02D               	goto	u28310
 17012  005FBC                     l1654:
 17013                           
 17014                           ;inputs_MC50.c: 274:                 rfCMD.timer=0;
 17015  005FBC  0E00               	movlw	0
 17016  005FBE  6E44               	movwf	(_rfCMD+9)^0,c	;volatile
 17017                           
 17018                           ;inputs_MC50.c: 275:         }
 17019  005FC0  D038               	goto	l1657
 17020  005FC2                     l23271:
 17021                           
 17022                           ; BSR set to: 1
 17023  005FC2  0100               	movlb	0	; () banked
 17024  005FC4  5187               	movf	readRFButtons@keyType& (0+255),w,b
 17025  005FC6  B4D8               	btfsc	status,2,c
 17026  005FC8  D026               	goto	u28310
 17027                           
 17028                           ; BSR set to: 0
 17029  005FCA  5187               	movf	readRFButtons@keyType& (0+255),w,b
 17030  005FCC  183B               	xorwf	_rfCMD^0,w,c	;volatile
 17031  005FCE  B4D8               	btfsc	status,2,c
 17032  005FD0  D00F               	goto	u28290
 17033                           
 17034                           ; BSR set to: 0
 17035  005FD2  0101               	movlb	1	; () banked
 17036  005FD4  BFB0               	btfsc	(_ts_system+21)& (0+255),7,b	;volatile
 17037  005FD6  D005               	goto	u28280
 17038  005FD8  51B0               	movf	(_ts_system+21)& (0+255),w,b	;volatile
 17039  005FDA  E10A               	bnz	l23279
 17040  005FDC  05AF               	decf	(_ts_system+20)& (0+255),w,b	;volatile
 17041  005FDE  B0D8               	btfsc	status,0,c
 17042  005FE0  D007               	goto	u28290
 17043  005FE2                     u28280:
 17044                           
 17045                           ; BSR set to: 1
 17046  005FE2  5185               	movf	readRFButtons@rollingCode& (0+255),w,b
 17047  005FE4  1841               	xorwf	(_rfCMD+6)^0,w,c	;volatile
 17048  005FE6  E117               	bnz	l23283
 17049  005FE8  5186               	movf	(readRFButtons@rollingCode+1)& (0+255),w,b
 17050  005FEA  1842               	xorwf	(_rfCMD+7)^0,w,c	;volatile
 17051  005FEC  A4D8               	btfss	status,2,c
 17052  005FEE  D013               	goto	u28310
 17053  005FF0                     u28290:
 17054  005FF0                     l23279:
 17055  005FF0  0100               	movlb	0	; () banked
 17056  005FF2  5188               	movf	readRFButtons@key1& (0+255),w,b
 17057  005FF4  183C               	xorwf	(_rfCMD+1)^0,w,c	;volatile
 17058  005FF6  A4D8               	btfss	status,2,c
 17059  005FF8  D00E               	goto	u28310
 17060                           
 17061                           ; BSR set to: 0
 17062  005FFA  0101               	movlb	1	; () banked
 17063  005FFC  5181               	movf	readRFButtons@serial& (0+255),w,b
 17064  005FFE  183D               	xorwf	(_rfCMD+2)^0,w,c	;volatile
 17065  006000  E10A               	bnz	u28310
 17066  006002  5182               	movf	(readRFButtons@serial+1)& (0+255),w,b
 17067  006004  183E               	xorwf	(_rfCMD+3)^0,w,c	;volatile
 17068  006006  E107               	bnz	u28310
 17069  006008  5183               	movf	(readRFButtons@serial+2)& (0+255),w,b
 17070  00600A  183F               	xorwf	(_rfCMD+4)^0,w,c	;volatile
 17071  00600C  E104               	bnz	u28310
 17072  00600E  5184               	movf	(readRFButtons@serial+3)& (0+255),w,b
 17073  006010  1840               	xorwf	(_rfCMD+5)^0,w,c	;volatile
 17074  006012  B4D8               	btfsc	status,2,c
 17075  006014  D003               	goto	l23285
 17076  006016                     u28310:
 17077  006016                     l23283:
 17078                           
 17079                           ;inputs_MC50.c: 278:         {;inputs_MC50.c: 279:            rfCMD.processed=0;
 17080  006016  0E00               	movlw	0
 17081  006018  6E45               	movwf	(_rfCMD+10)^0,c	;volatile
 17082  00601A  D7D0               	goto	l1654
 17083  00601C                     l23285:
 17084                           
 17085                           ; BSR set to: 1
 17086  00601C  BFB0               	btfsc	(_ts_system+21)& (0+255),7,b	;volatile
 17087  00601E  D005               	goto	u28320
 17088  006020  51B0               	movf	(_ts_system+21)& (0+255),w,b	;volatile
 17089  006022  E107               	bnz	l1657
 17090  006024  05AF               	decf	(_ts_system+20)& (0+255),w,b	;volatile
 17091  006026  B0D8               	btfsc	status,0,c
 17092  006028  D004               	goto	l1657
 17093  00602A                     u28320:
 17094                           
 17095                           ; BSR set to: 1
 17096  00602A  0E02               	movlw	2
 17097  00602C  1998               	xorwf	readRFButtons@typeRemote& (0+255),w,b
 17098  00602E  B4D8               	btfsc	status,2,c
 17099  006030  D7F2               	goto	u28310
 17100  006032                     l1657:
 17101                           
 17102                           ;inputs_MC50.c: 289:         ts_system.TimeLastCommand=( 500/50);
 17103  006032  0E00               	movlw	0
 17104  006034  0101               	movlb	1	; () banked
 17105  006036  6FB0               	movwf	(_ts_system+21)& (0+255),b	;volatile
 17106  006038  0E0A               	movlw	10
 17107  00603A  6FAF               	movwf	(_ts_system+20)& (0+255),b	;volatile
 17108                           
 17109                           ; BSR set to: 1
 17110                           ;inputs_MC50.c: 291:         rfCMD.currentType=keyType;
 17111  00603C  C087  F03B         	movff	readRFButtons@keyType,_rfCMD	;volatile
 17112                           
 17113                           ;inputs_MC50.c: 292:         if
 17114  006040  503B               	movf	_rfCMD^0,w,c	;volatile
 17115  006042  B4D8               	btfsc	status,2,c
 17116  006044  D01A               	goto	u28370
 17117                           
 17118                           ; BSR set to: 1
 17119  006046  0100               	movlb	0	; () banked
 17120  006048  5188               	movf	readRFButtons@key1& (0+255),w,b
 17121  00604A  183C               	xorwf	(_rfCMD+1)^0,w,c	;volatile
 17122  00604C  A4D8               	btfss	status,2,c
 17123  00604E  D015               	goto	u28370
 17124                           
 17125                           ; BSR set to: 0
 17126  006050  0101               	movlb	1	; () banked
 17127  006052  5181               	movf	readRFButtons@serial& (0+255),w,b
 17128  006054  183D               	xorwf	(_rfCMD+2)^0,w,c	;volatile
 17129  006056  E111               	bnz	l1667
 17130  006058  5182               	movf	(readRFButtons@serial+1)& (0+255),w,b
 17131  00605A  183E               	xorwf	(_rfCMD+3)^0,w,c	;volatile
 17132  00605C  E10E               	bnz	l1667
 17133  00605E  5183               	movf	(readRFButtons@serial+2)& (0+255),w,b
 17134  006060  183F               	xorwf	(_rfCMD+4)^0,w,c	;volatile
 17135  006062  E10B               	bnz	l1667
 17136  006064  5184               	movf	(readRFButtons@serial+3)& (0+255),w,b
 17137  006066  1840               	xorwf	(_rfCMD+5)^0,w,c	;volatile
 17138  006068  A4D8               	btfss	status,2,c
 17139  00606A  D007               	goto	u28370
 17140                           
 17141                           ; BSR set to: 1
 17142  00606C  5185               	movf	readRFButtons@rollingCode& (0+255),w,b
 17143  00606E  1841               	xorwf	(_rfCMD+6)^0,w,c	;volatile
 17144  006070  E104               	bnz	u28370
 17145  006072  5186               	movf	(readRFButtons@rollingCode+1)& (0+255),w,b
 17146  006074  1842               	xorwf	(_rfCMD+7)^0,w,c	;volatile
 17147  006076  B4D8               	btfsc	status,2,c
 17148  006078  D00E               	goto	l23301
 17149  00607A                     u28370:
 17150  00607A                     l1667:
 17151                           
 17152                           ;inputs_MC50.c: 299:         {;inputs_MC50.c: 300:             rfCMD.currentKey=key1;
 17153  00607A  C088  F03C         	movff	readRFButtons@key1,_rfCMD+1	;volatile
 17154                           
 17155                           ;inputs_MC50.c: 301:             rfCMD.currentSerial=serial;
 17156  00607E  C181  F03D         	movff	readRFButtons@serial,_rfCMD+2	;volatile
 17157  006082  C182  F03E         	movff	readRFButtons@serial+1,_rfCMD+3	;volatile
 17158  006086  C183  F03F         	movff	readRFButtons@serial+2,_rfCMD+4	;volatile
 17159  00608A  C184  F040         	movff	readRFButtons@serial+3,_rfCMD+5	;volatile
 17160                           
 17161                           ;inputs_MC50.c: 302:             rfCMD.currentPosMem=classic_data.positionMem;
 17162  00608E  C2A3  F043         	movff	_classic_data+15,_rfCMD+8	;volatile
 17163                           
 17164                           ;inputs_MC50.c: 303:             rfCMD.timer=0;
 17165  006092  0E00               	movlw	0
 17166  006094  6E44               	movwf	(_rfCMD+9)^0,c	;volatile
 17167  006096                     l23301:
 17168                           
 17169                           ;inputs_MC50.c: 305:         rfCMD.currentRolling=rollingCode;
 17170  006096  C185  F041         	movff	readRFButtons@rollingCode,_rfCMD+6	;volatile
 17171  00609A  C186  F042         	movff	readRFButtons@rollingCode+1,_rfCMD+7	;volatile
 17172  00609E                     l23303:
 17173                           
 17174                           ;inputs_MC50.c: 310:     if(rfCMD.processed == 1)
 17175  00609E  0445               	decf	(_rfCMD+10)^0,w,c	;volatile
 17176  0060A0  A4D8               	btfss	status,2,c
 17177  0060A2  D003               	goto	l23307
 17178                           
 17179                           ;inputs_MC50.c: 311:     {;inputs_MC50.c: 312:        rfCMD.currentType = NoCMD;
 17180  0060A4  0E00               	movlw	0
 17181  0060A6  6E3B               	movwf	_rfCMD^0,c	;volatile
 17182                           
 17183                           ;inputs_MC50.c: 313:     }
 17184  0060A8  0012               	return	
 17185  0060AA                     l23307:
 17186  0060AA  503B               	movf	_rfCMD^0,w,c	;volatile
 17187  0060AC  B4D8               	btfsc	status,2,c
 17188  0060AE  0012               	return	
 17189                           
 17190                           ;inputs_MC50.c: 315:     {;inputs_MC50.c: 317:         if ( rfCMD.timer < 250 )
 17191  0060B0  0EFA               	movlw	250
 17192  0060B2  6044               	cpfslt	(_rfCMD+9)^0,c	;volatile
 17193  0060B4  0012               	return	
 17194                           
 17195                           ;inputs_MC50.c: 318:         {;inputs_MC50.c: 319:             rfCMD.timer++;
 17196  0060B6  2A44               	incf	(_rfCMD+9)^0,f,c	;volatile
 17197  0060B8  0012               	return		;funcret
 17198  0060BA                     __end_of_readRFButtons:
 17199                           	callstack 0
 17200                           
 17201 ;; *************** function _keeloqDecryptPacket *****************
 17202 ;; Defined at:
 17203 ;;		line 299 in file "keeloqDecrypt_MC50.c"
 17204 ;; Parameters:    Size  Location     Type
 17205 ;;  data            2    8[BANK0 ] PTR unsigned char 
 17206 ;;		 -> BufferRF(9), 
 17207 ;;  classic_data    2   10[BANK0 ] PTR struct .
 17208 ;;		 -> classic_data(16), 
 17209 ;; Auto vars:     Size  Location     Type
 17210 ;;  commandType     1   17[BANK0 ] enum E10539
 17211 ;;  hop_error       1   16[BANK0 ] enum E10730
 17212 ;; Return value:  Size  Location     Type
 17213 ;;                  1    wreg      enum E10539
 17214 ;; Registers used:
 17215 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 17216 ;; Tracked objects:
 17217 ;;		On entry : 3F/0
 17218 ;;		On exit  : 3F/0
 17219 ;;		Unchanged: 0/0
 17220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17221 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17222 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17223 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17224 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17225 ;;Total ram usage:       10 bytes
 17226 ;; Hardware stack levels used: 1
 17227 ;; Hardware stack levels required when called: 14
 17228 ;; This function calls:
 17229 ;;		_DecCHK
 17230 ;;		_HopCHK
 17231 ;;		_keeloq_classic_decrypt_packet
 17232 ;;		_memcpy
 17233 ;;		_validateRemoteSerialNumber
 17234 ;;		_verifyProgramingMode
 17235 ;; This function is called by:
 17236 ;;		_readRFButtons
 17237 ;; This function uses a non-reentrant model
 17238 ;;
 17239                           
 17240                           	psect	text57
 17241  00551A                     __ptext57:
 17242                           	callstack 0
 17243  00551A                     _keeloqDecryptPacket:
 17244                           	callstack 15
 17245                           
 17246                           ; BSR set to: 0
 17247                           ;keeloqDecrypt_MC50.c: 299: TypeCMD keeloqDecryptPacket (char* data,classic_encoder_t* c
      +                          lassic_data);keeloqDecrypt_MC50.c: 300: {;keeloqDecrypt_MC50.c: 301:     result_code_t h
      +                          op_error;;keeloqDecrypt_MC50.c: 302:     TypeCMD commandType;;keeloqDecrypt_MC50.c: 303:
      +                               memcpy(classic_data, data, 8);
 17248                           
 17249                           ;incstack = 0
 17250  00551A  C0E2  F010         	movff	keeloqDecryptPacket@classic_data,memcpy@d1
 17251  00551E  C0E3  F011         	movff	keeloqDecryptPacket@classic_data+1,memcpy@d1+1
 17252  005522  C0E0  F012         	movff	keeloqDecryptPacket@data,memcpy@s1
 17253  005526  C0E1  F013         	movff	keeloqDecryptPacket@data+1,memcpy@s1+1
 17254  00552A  0E00               	movlw	0
 17255  00552C  6E15               	movwf	(memcpy@n+1)^0,c
 17256  00552E  0E08               	movlw	8
 17257  005530  6E14               	movwf	memcpy@n^0,c
 17258  005532  ECB1  F046         	call	_memcpy	;wreg free
 17259                           
 17260                           ;keeloqDecrypt_MC50.c: 304:     memcpy(&classic_data->sync, &classic_data->raw_data, 4);
 17261  005536  0E08               	movlw	8
 17262  005538  0100               	movlb	0	; () banked
 17263  00553A  25E2               	addwf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17264  00553C  6E10               	movwf	memcpy@d1^0,c
 17265  00553E  0E00               	movlw	0
 17266  005540  21E3               	addwfc	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17267  005542  6E11               	movwf	(memcpy@d1+1)^0,c
 17268  005544  C0E2  F012         	movff	keeloqDecryptPacket@classic_data,memcpy@s1
 17269  005548  C0E3  F013         	movff	keeloqDecryptPacket@classic_data+1,memcpy@s1+1
 17270  00554C  0E00               	movlw	0
 17271  00554E  6E15               	movwf	(memcpy@n+1)^0,c
 17272  005550  0E04               	movlw	4
 17273  005552  6E14               	movwf	memcpy@n^0,c
 17274  005554  ECB1  F046         	call	_memcpy	;wreg free
 17275                           
 17276                           ;keeloqDecrypt_MC50.c: 305:     classic_data->fcode1 = *((uint8_t *) (&classic_data->ser
      +                          ialnumber) + 3) >> 4;
 17277  005558  0100               	movlb	0	; () banked
 17278  00555A  EE20 F00C          	lfsr	2,12
 17279  00555E  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17280  005560  26D9               	addwf	fsr2l,f,c
 17281  005562  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17282  005564  22DA               	addwfc	fsr2h,f,c
 17283  005566  EE10 F007          	lfsr	1,7
 17284  00556A  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17285  00556C  26E1               	addwf	fsr1l,f,c
 17286  00556E  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17287  005570  22E2               	addwfc	fsr1h,f,c
 17288  005572  50E7               	movf	indf1,w,c
 17289  005574  6FE4               	movwf	??_keeloqDecryptPacket& (0+255),b
 17290  005576  39E4               	swapf	??_keeloqDecryptPacket& (0+255),w,b
 17291  005578  0B0F               	andlw	15
 17292  00557A  6EDF               	movwf	indf2,c
 17293                           
 17294                           ; BSR set to: 0
 17295                           ;keeloqDecrypt_MC50.c: 306:     commandType=verifyProgramingMode(classic_data);
 17296  00557C  C0E2  F010         	movff	keeloqDecryptPacket@classic_data,verifyProgramingMode@classic_data
 17297  005580  C0E3  F011         	movff	keeloqDecryptPacket@classic_data+1,verifyProgramingMode@classic_data+1
 17298  005584  ECCB  F047         	call	_verifyProgramingMode	;wreg free
 17299  005588  6FE9               	movwf	keeloqDecryptPacket@commandType& (0+255),b
 17300                           
 17301                           ; BSR set to: 0
 17302                           ;keeloqDecrypt_MC50.c: 308:     if(commandType==NoCMD)
 17303  00558A  51E9               	movf	keeloqDecryptPacket@commandType& (0+255),w,b
 17304  00558C  A4D8               	btfss	status,2,c
 17305  00558E  D019               	goto	l21787
 17306                           
 17307                           ; BSR set to: 0
 17308                           ;keeloqDecrypt_MC50.c: 309:     {;keeloqDecrypt_MC50.c: 310:         commandType=validat
      +                          eRemoteSerialNumber(classic_data->serialnumber,NO,&classic_data->positionMem);
 17309  005590  EE20 F004          	lfsr	2,4
 17310  005594  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17311  005596  26D9               	addwf	fsr2l,f,c
 17312  005598  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17313  00559A  22DA               	addwfc	fsr2h,f,c
 17314  00559C  CFDE F02E          	movff	postinc2,validateRemoteSerialNumber@serial
 17315  0055A0  CFDE F02F          	movff	postinc2,validateRemoteSerialNumber@serial+1
 17316  0055A4  CFDE F030          	movff	postinc2,validateRemoteSerialNumber@serial+2
 17317  0055A8  CFDE F031          	movff	postinc2,validateRemoteSerialNumber@serial+3
 17318  0055AC  0E00               	movlw	0
 17319  0055AE  6E32               	movwf	validateRemoteSerialNumber@VerifyOnlySerial^0,c
 17320  0055B0  0E0F               	movlw	15
 17321  0055B2  25E2               	addwf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17322  0055B4  6E33               	movwf	validateRemoteSerialNumber@position^0,c
 17323  0055B6  0E00               	movlw	0
 17324  0055B8  21E3               	addwfc	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17325  0055BA  6E34               	movwf	(validateRemoteSerialNumber@position+1)^0,c
 17326  0055BC  EC2A  F02D         	call	_validateRemoteSerialNumber	;wreg free
 17327  0055C0  D004               	goto	L78
 17328  0055C2                     l21787:
 17329                           
 17330                           ; BSR set to: 0
 17331  0055C2  51A6               	movf	(_var_sys_NVM+14)& (0+255),w,b	;volatile
 17332  0055C4  A4D8               	btfss	status,2,c
 17333  0055C6  D002               	goto	l21791
 17334                           
 17335                           ; BSR set to: 0
 17336                           ;keeloqDecrypt_MC50.c: 313:     {;keeloqDecrypt_MC50.c: 314:         commandType=NoCMD;
 17337  0055C8  0E00               	movlw	0
 17338  0055CA                     L78:
 17339  0055CA  6FE9               	movwf	keeloqDecryptPacket@commandType& (0+255),b
 17340  0055CC                     l21791:
 17341                           
 17342                           ; BSR set to: 0
 17343                           ;keeloqDecrypt_MC50.c: 316:     classic_data->serialnumber = classic_data->serialnumber 
      +                          & 0x0FFFFFFF;
 17344  0055CC  EE20 F004          	lfsr	2,4
 17345  0055D0  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17346  0055D2  26D9               	addwf	fsr2l,f,c
 17347  0055D4  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17348  0055D6  22DA               	addwfc	fsr2h,f,c
 17349  0055D8  0EFF               	movlw	255
 17350  0055DA  14DE               	andwf	postinc2,w,c
 17351  0055DC  6FE4               	movwf	??_keeloqDecryptPacket& (0+255),b
 17352  0055DE  0EFF               	movlw	255
 17353  0055E0  14DE               	andwf	postinc2,w,c
 17354  0055E2  6FE5               	movwf	(??_keeloqDecryptPacket+1)& (0+255),b
 17355  0055E4  0EFF               	movlw	255
 17356  0055E6  14DE               	andwf	postinc2,w,c
 17357  0055E8  6FE6               	movwf	(??_keeloqDecryptPacket+2)& (0+255),b
 17358  0055EA  0E0F               	movlw	15
 17359  0055EC  14DE               	andwf	postinc2,w,c
 17360  0055EE  6FE7               	movwf	(??_keeloqDecryptPacket+3)& (0+255),b
 17361  0055F0  EE20 F004          	lfsr	2,4
 17362  0055F4  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17363  0055F6  26D9               	addwf	fsr2l,f,c
 17364  0055F8  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17365  0055FA  22DA               	addwfc	fsr2h,f,c
 17366  0055FC  C0E4  FFDE         	movff	??_keeloqDecryptPacket,postinc2
 17367  005600  C0E5  FFDE         	movff	??_keeloqDecryptPacket+1,postinc2
 17368  005604  C0E6  FFDE         	movff	??_keeloqDecryptPacket+2,postinc2
 17369  005608  C0E7  FFDE         	movff	??_keeloqDecryptPacket+3,postinc2
 17370                           
 17371                           ; BSR set to: 0
 17372                           ;keeloqDecrypt_MC50.c: 318:     keeloq_classic_decrypt_packet(classic_data);
 17373  00560C  C0E2  F038         	movff	keeloqDecryptPacket@classic_data,keeloq_classic_decrypt_packet@data
 17374  005610  C0E3  F039         	movff	keeloqDecryptPacket@classic_data+1,keeloq_classic_decrypt_packet@data+1
 17375  005614  EC5E  F044         	call	_keeloq_classic_decrypt_packet	;wreg free
 17376                           
 17377                           ; BSR set to: 0
 17378                           ;keeloqDecrypt_MC50.c: 320:     if(commandType==NoCMD )
 17379  005618  51E9               	movf	keeloqDecryptPacket@commandType& (0+255),w,b
 17380  00561A  A4D8               	btfss	status,2,c
 17381  00561C  D01B               	goto	l21809
 17382                           
 17383                           ; BSR set to: 0
 17384                           ;keeloqDecrypt_MC50.c: 321:     {;keeloqDecrypt_MC50.c: 323:         if (DecCHK(classic_
      +                          data) == 0) {
 17385  00561E  C0E2  F010         	movff	keeloqDecryptPacket@classic_data,DecCHK@data
 17386  005622  C0E3  F011         	movff	keeloqDecryptPacket@classic_data+1,DecCHK@data+1
 17387  005626  ECE5  F047         	call	_DecCHK	;wreg free
 17388  00562A  0900               	iorlw	0
 17389  00562C  A4D8               	btfss	status,2,c
 17390  00562E  D008               	goto	l21801
 17391                           
 17392                           ; BSR set to: 0
 17393                           ;keeloqDecrypt_MC50.c: 324:             classic_data->type=Keeloq_NoRollingCode;
 17394  005630  EE20 F00E          	lfsr	2,14
 17395  005634  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17396  005636  26D9               	addwf	fsr2l,f,c
 17397  005638  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17398  00563A  22DA               	addwfc	fsr2h,f,c
 17399  00563C  0E01               	movlw	1
 17400  00563E  D007               	goto	L79
 17401  005640                     l21801:
 17402                           
 17403                           ; BSR set to: 0
 17404                           ;keeloqDecrypt_MC50.c: 328:         {;keeloqDecrypt_MC50.c: 329:             classic_dat
      +                          a->type=Keeloq_RollingCode;
 17405  005640  EE20 F00E          	lfsr	2,14
 17406  005644  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17407  005646  26D9               	addwf	fsr2l,f,c
 17408  005648  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17409  00564A  22DA               	addwfc	fsr2h,f,c
 17410  00564C  0E00               	movlw	0
 17411  00564E                     L79:
 17412  00564E  6EDF               	movwf	indf2,c
 17413  005650                     l21803:
 17414                           
 17415                           ; BSR set to: 0
 17416                           ;keeloqDecrypt_MC50.c: 331:         return NoCMD;
 17417  005650  0E00               	movlw	0
 17418  005652  0012               	return	
 17419  005654                     l21809:
 17420                           
 17421                           ; BSR set to: 0
 17422  005654  0E06               	movlw	6
 17423  005656  19E9               	xorwf	keeloqDecryptPacket@commandType& (0+255),w,b
 17424  005658  B4D8               	btfsc	status,2,c
 17425  00565A  D004               	goto	u25270
 17426                           
 17427                           ; BSR set to: 0
 17428  00565C  0E05               	movlw	5
 17429  00565E  19E9               	xorwf	keeloqDecryptPacket@commandType& (0+255),w,b
 17430  005660  A4D8               	btfss	status,2,c
 17431  005662  D01B               	goto	l21819
 17432  005664                     u25270:
 17433                           
 17434                           ; BSR set to: 0
 17435                           ;keeloqDecrypt_MC50.c: 334:     {;keeloqDecrypt_MC50.c: 335:         if(validateRemoteSe
      +                          rialNumber(classic_data->serialnumber,YES,&classic_data->positionMem)==NoCMD)
 17436  005664  EE20 F004          	lfsr	2,4
 17437  005668  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17438  00566A  26D9               	addwf	fsr2l,f,c
 17439  00566C  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17440  00566E  22DA               	addwfc	fsr2h,f,c
 17441  005670  CFDE F02E          	movff	postinc2,validateRemoteSerialNumber@serial
 17442  005674  CFDE F02F          	movff	postinc2,validateRemoteSerialNumber@serial+1
 17443  005678  CFDE F030          	movff	postinc2,validateRemoteSerialNumber@serial+2
 17444  00567C  CFDE F031          	movff	postinc2,validateRemoteSerialNumber@serial+3
 17445  005680  0E01               	movlw	1
 17446  005682  6E32               	movwf	validateRemoteSerialNumber@VerifyOnlySerial^0,c
 17447  005684  0E0F               	movlw	15
 17448  005686  25E2               	addwf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17449  005688  6E33               	movwf	validateRemoteSerialNumber@position^0,c
 17450  00568A  0E00               	movlw	0
 17451  00568C  21E3               	addwfc	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17452  00568E  6E34               	movwf	(validateRemoteSerialNumber@position+1)^0,c
 17453  005690  EC2A  F02D         	call	_validateRemoteSerialNumber	;wreg free
 17454  005694  0900               	iorlw	0
 17455  005696  B4D8               	btfsc	status,2,c
 17456  005698  D7DB               	goto	l21803
 17457  00569A                     l21819:
 17458                           
 17459                           ; BSR set to: 0
 17460                           ;keeloqDecrypt_MC50.c: 344:     if (DecCHK(classic_data) == 0)
 17461  00569A  C0E2  F010         	movff	keeloqDecryptPacket@classic_data,DecCHK@data
 17462  00569E  C0E3  F011         	movff	keeloqDecryptPacket@classic_data+1,DecCHK@data+1
 17463  0056A2  ECE5  F047         	call	_DecCHK	;wreg free
 17464  0056A6  0900               	iorlw	0
 17465  0056A8  A4D8               	btfss	status,2,c
 17466  0056AA  D00D               	goto	l21835
 17467                           
 17468                           ; BSR set to: 0
 17469                           ;keeloqDecrypt_MC50.c: 345:     {;keeloqDecrypt_MC50.c: 346:         if(var_sys_NVM.Only
      +                          RollingCode==YES) {
 17470  0056AC  05BE               	decf	(_var_sys_NVM+38)& (0+255),w,b	;volatile
 17471  0056AE  B4D8               	btfsc	status,2,c
 17472  0056B0  D7CF               	goto	l21803
 17473                           
 17474                           ; BSR set to: 0
 17475                           ;keeloqDecrypt_MC50.c: 352:         {;keeloqDecrypt_MC50.c: 353:             classic_dat
      +                          a->type=Keeloq_NoRollingCode;
 17476  0056B2  EE20 F00E          	lfsr	2,14
 17477  0056B6  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17478  0056B8  26D9               	addwf	fsr2l,f,c
 17479  0056BA  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17480  0056BC  22DA               	addwfc	fsr2h,f,c
 17481  0056BE  0E01               	movlw	1
 17482  0056C0  6EDF               	movwf	indf2,c
 17483                           
 17484                           ; BSR set to: 0
 17485                           ;keeloqDecrypt_MC50.c: 354:             return commandType;
 17486  0056C2  51E9               	movf	keeloqDecryptPacket@commandType& (0+255),w,b
 17487  0056C4  0012               	return	
 17488  0056C6                     l21835:
 17489                           
 17490                           ; BSR set to: 0
 17491                           ;keeloqDecrypt_MC50.c: 359:     hop_error = HopCHK(classic_data);
 17492  0056C6  C0E2  F024         	movff	keeloqDecryptPacket@classic_data,HopCHK@data
 17493  0056CA  C0E3  F025         	movff	keeloqDecryptPacket@classic_data+1,HopCHK@data+1
 17494  0056CE  EC60  F03E         	call	_HopCHK	;wreg free
 17495  0056D2  0100               	movlb	0	; () banked
 17496  0056D4  6FE8               	movwf	keeloqDecryptPacket@hop_error& (0+255),b
 17497                           
 17498                           ; BSR set to: 0
 17499                           ;keeloqDecrypt_MC50.c: 360:     if (hop_error != VALID_PACKET) {
 17500  0056D6  05E8               	decf	keeloqDecryptPacket@hop_error& (0+255),w,b
 17501  0056D8  A4D8               	btfss	status,2,c
 17502  0056DA  D7BA               	goto	l21803
 17503                           
 17504                           ; BSR set to: 0
 17505                           ;keeloqDecrypt_MC50.c: 364:     classic_data->type=Keeloq_RollingCode;
 17506  0056DC  EE20 F00E          	lfsr	2,14
 17507  0056E0  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17508  0056E2  26D9               	addwf	fsr2l,f,c
 17509  0056E4  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17510  0056E6  22DA               	addwfc	fsr2h,f,c
 17511  0056E8  0E00               	movlw	0
 17512  0056EA  D7EA               	goto	L80
 17513  0056EC                     __end_of_keeloqDecryptPacket:
 17514                           	callstack 0
 17515                           
 17516 ;; *************** function _verifyProgramingMode *****************
 17517 ;; Defined at:
 17518 ;;		line 401 in file "keeloqDecrypt_MC50.c"
 17519 ;; Parameters:    Size  Location     Type
 17520 ;;  classic_data    2   15[COMRAM] PTR struct .
 17521 ;;		 -> classic_data(16), 
 17522 ;; Auto vars:     Size  Location     Type
 17523 ;;		None
 17524 ;; Return value:  Size  Location     Type
 17525 ;;                  1    wreg      enum E10539
 17526 ;; Registers used:
 17527 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17528 ;; Tracked objects:
 17529 ;;		On entry : 3F/0
 17530 ;;		On exit  : 3F/0
 17531 ;;		Unchanged: 3F/0
 17532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17533 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17535 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17536 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17537 ;;Total ram usage:        3 bytes
 17538 ;; Hardware stack levels used: 1
 17539 ;; Hardware stack levels required when called: 4
 17540 ;; This function calls:
 17541 ;;		Nothing
 17542 ;; This function is called by:
 17543 ;;		_keeloqDecryptPacket
 17544 ;; This function uses a non-reentrant model
 17545 ;;
 17546                           
 17547                           	psect	text58
 17548  008F96                     __ptext58:
 17549                           	callstack 0
 17550  008F96                     _verifyProgramingMode:
 17551                           	callstack 24
 17552                           
 17553                           ; BSR set to: 0
 17554                           ;keeloqDecrypt_MC50.c: 401: TypeCMD verifyProgramingMode(classic_encoder_t* classic_data
      +                          );keeloqDecrypt_MC50.c: 402: {;keeloqDecrypt_MC50.c: 403:     if (classic_data->fcode1==
      +                          0x0A)
 17555                           
 17556                           ; BSR set to: 0
 17557                           ;incstack = 0
 17558  008F96  EE20 F00C          	lfsr	2,12
 17559  008F9A  5010               	movf	verifyProgramingMode@classic_data^0,w,c
 17560  008F9C  26D9               	addwf	fsr2l,f,c
 17561  008F9E  5011               	movf	(verifyProgramingMode@classic_data+1)^0,w,c
 17562  008FA0  22DA               	addwfc	fsr2h,f,c
 17563  008FA2  0E0A               	movlw	10
 17564  008FA4  18DE               	xorwf	postinc2,w,c
 17565  008FA6  A4D8               	btfss	status,2,c
 17566  008FA8  D002               	goto	l20787
 17567                           
 17568                           ; BSR set to: 0
 17569                           ;keeloqDecrypt_MC50.c: 404:     {;keeloqDecrypt_MC50.c: 405:         return TypeProgramm
      +                          ingModeFull;
 17570  008FAA  0E06               	movlw	6
 17571  008FAC  0012               	return	
 17572  008FAE                     l20787:
 17573                           
 17574                           ; BSR set to: 0
 17575  008FAE  EE20 F00C          	lfsr	2,12
 17576  008FB2  5010               	movf	verifyProgramingMode@classic_data^0,w,c
 17577  008FB4  26D9               	addwf	fsr2l,f,c
 17578  008FB6  5011               	movf	(verifyProgramingMode@classic_data+1)^0,w,c
 17579  008FB8  22DA               	addwfc	fsr2h,f,c
 17580  008FBA  0E05               	movlw	5
 17581  008FBC  18DE               	xorwf	postinc2,w,c
 17582  008FBE  A4D8               	btfss	status,2,c
 17583  008FC0  D002               	goto	l20795
 17584                           
 17585                           ; BSR set to: 0
 17586                           ;keeloqDecrypt_MC50.c: 408:     {;keeloqDecrypt_MC50.c: 409:         return TypeProgramm
      +                          ingModeWalk;
 17587  008FC2  0E05               	movlw	5
 17588  008FC4  0012               	return	
 17589  008FC6                     l20795:
 17590                           
 17591                           ; BSR set to: 0
 17592                           ;keeloqDecrypt_MC50.c: 412:     {;keeloqDecrypt_MC50.c: 413:         return NoCMD;
 17593  008FC6  0E00               	movlw	0
 17594                           
 17595                           ; BSR set to: 0
 17596  008FC8  0012               	return		;funcret
 17597  008FCA                     __end_of_verifyProgramingMode:
 17598                           	callstack 0
 17599                           
 17600 ;; *************** function _keeloq_classic_decrypt_packet *****************
 17601 ;; Defined at:
 17602 ;;		line 390 in file "keeloqDecrypt_MC50.c"
 17603 ;; Parameters:    Size  Location     Type
 17604 ;;  data            2   55[COMRAM] PTR struct .
 17605 ;;		 -> classic_data(16), 
 17606 ;; Auto vars:     Size  Location     Type
 17607 ;;		None
 17608 ;; Return value:  Size  Location     Type
 17609 ;;                  1    wreg      void 
 17610 ;; Registers used:
 17611 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 17612 ;; Tracked objects:
 17613 ;;		On entry : 3F/0
 17614 ;;		On exit  : 3F/0
 17615 ;;		Unchanged: 0/0
 17616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17617 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17618 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17619 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17620 ;;      Totals:         2       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17621 ;;Total ram usage:        5 bytes
 17622 ;; Hardware stack levels used: 1
 17623 ;; Hardware stack levels required when called: 7
 17624 ;; This function calls:
 17625 ;;		_Decrypt
 17626 ;;		_NormalKeyGen
 17627 ;; This function is called by:
 17628 ;;		_keeloqDecryptPacket
 17629 ;; This function uses a non-reentrant model
 17630 ;;
 17631                           
 17632                           	psect	text59
 17633  0088BC                     __ptext59:
 17634                           	callstack 0
 17635  0088BC                     _keeloq_classic_decrypt_packet:
 17636                           	callstack 21
 17637                           
 17638                           ; BSR set to: 0
 17639                           ;keeloqDecrypt_MC50.c: 393:     NormalKeyGen(&data->serialnumber);
 17640                           
 17641                           ; BSR set to: 0
 17642                           ;incstack = 0
 17643  0088BC  0E04               	movlw	4
 17644  0088BE  2438               	addwf	keeloq_classic_decrypt_packet@data^0,w,c
 17645  0088C0  6E26               	movwf	NormalKeyGen@serial^0,c
 17646  0088C2  0E00               	movlw	0
 17647  0088C4  2039               	addwfc	(keeloq_classic_decrypt_packet@data+1)^0,w,c
 17648  0088C6  6E27               	movwf	(NormalKeyGen@serial+1)^0,c
 17649  0088C8  EC21  F036         	call	_NormalKeyGen	;wreg free
 17650                           
 17651                           ;keeloqDecrypt_MC50.c: 395:     Decrypt((uint8_t*) & data->sync);
 17652  0088CC  0E08               	movlw	8
 17653  0088CE  2438               	addwf	keeloq_classic_decrypt_packet@data^0,w,c
 17654  0088D0  6E1B               	movwf	Decrypt@packet^0,c
 17655  0088D2  0E00               	movlw	0
 17656  0088D4  2039               	addwfc	(keeloq_classic_decrypt_packet@data+1)^0,w,c
 17657  0088D6  6E1C               	movwf	(Decrypt@packet+1)^0,c
 17658  0088D8  EC88  F039         	call	_Decrypt	;wreg free
 17659                           
 17660                           ;keeloqDecrypt_MC50.c: 398:     data->fcode2 = (data->disc >> 12) & 0x0F;
 17661  0088DC  EE20 F00D          	lfsr	2,13
 17662  0088E0  5038               	movf	keeloq_classic_decrypt_packet@data^0,w,c
 17663  0088E2  26D9               	addwf	fsr2l,f,c
 17664  0088E4  5039               	movf	(keeloq_classic_decrypt_packet@data+1)^0,w,c
 17665  0088E6  22DA               	addwfc	fsr2h,f,c
 17666  0088E8  EE10 F00A          	lfsr	1,10
 17667  0088EC  5038               	movf	keeloq_classic_decrypt_packet@data^0,w,c
 17668  0088EE  26E1               	addwf	fsr1l,f,c
 17669  0088F0  5039               	movf	(keeloq_classic_decrypt_packet@data+1)^0,w,c
 17670  0088F2  22E2               	addwfc	fsr1h,f,c
 17671  0088F4  CFE6 F0D8          	movff	postinc1,??_keeloq_classic_decrypt_packet
 17672  0088F8  CFE5 F0D9          	movff	postdec1,??_keeloq_classic_decrypt_packet+1
 17673  0088FC  0E0C               	movlw	12
 17674  0088FE  0100               	movlb	0	; () banked
 17675  008900  6FDA               	movwf	(??_keeloq_classic_decrypt_packet+2)& (0+255),b
 17676  008902                     u23955:
 17677  008902  90D8               	bcf	status,0,c
 17678  008904  33D9               	rrcf	(??_keeloq_classic_decrypt_packet+1)& (0+255),f,b
 17679  008906  33D8               	rrcf	??_keeloq_classic_decrypt_packet& (0+255),f,b
 17680  008908  2FDA               	decfsz	(??_keeloq_classic_decrypt_packet+2)& (0+255),f,b
 17681  00890A  D7FB               	goto	u23955
 17682  00890C  51D8               	movf	??_keeloq_classic_decrypt_packet& (0+255),w,b
 17683  00890E  0B0F               	andlw	15
 17684  008910  6EDF               	movwf	indf2,c
 17685                           
 17686                           ; BSR set to: 0
 17687  008912  0012               	return		;funcret
 17688  008914                     __end_of_keeloq_classic_decrypt_packet:
 17689                           	callstack 0
 17690                           
 17691 ;; *************** function _NormalKeyGen *****************
 17692 ;; Defined at:
 17693 ;;		line 87 in file "keeloqDecrypt_MC50.c"
 17694 ;; Parameters:    Size  Location     Type
 17695 ;;  serial          2   37[COMRAM] PTR unsigned long 
 17696 ;;		 -> classic_data(16), 
 17697 ;; Auto vars:     Size  Location     Type
 17698 ;;  Buffer          8   47[COMRAM] unsigned char [8]
 17699 ;;  SKEYtemp        4   43[COMRAM] unsigned char [4]
 17700 ;;  HOPtemp         4   39[COMRAM] unsigned char [4]
 17701 ;; Return value:  Size  Location     Type
 17702 ;;                  1    wreg      void 
 17703 ;; Registers used:
 17704 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17705 ;; Tracked objects:
 17706 ;;		On entry : 3F/0
 17707 ;;		On exit  : 0/0
 17708 ;;		Unchanged: 0/0
 17709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17710 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17711 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17713 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17714 ;;Total ram usage:       18 bytes
 17715 ;; Hardware stack levels used: 1
 17716 ;; Hardware stack levels required when called: 6
 17717 ;; This function calls:
 17718 ;;		_Decrypt
 17719 ;;		_LoadManufCode
 17720 ;;		_memcpy
 17721 ;; This function is called by:
 17722 ;;		_keeloq_classic_decrypt_packet
 17723 ;; This function uses a non-reentrant model
 17724 ;;
 17725                           
 17726                           	psect	text60
 17727  006C42                     __ptext60:
 17728                           	callstack 0
 17729  006C42                     _NormalKeyGen:
 17730                           	callstack 21
 17731                           
 17732                           ; BSR set to: 0
 17733                           ;keeloqDecrypt_MC50.c: 88:     static uint8_t SEED[4];;keeloqDecrypt_MC50.c: 89:     uin
      +                          t8_t Buffer[8];;keeloqDecrypt_MC50.c: 90:     uint8_t HOPtemp[4];;keeloqDecrypt_MC50.c: 
      +                          91:     uint8_t SKEYtemp[4];;keeloqDecrypt_MC50.c: 93:     memcpy(&Buffer[4], serial, 4)
      +                          ;
 17734                           
 17735                           ; BSR set to: 0
 17736                           ;incstack = 0
 17737  006C42  0E34               	movlw	low (NormalKeyGen@Buffer+4)
 17738  006C44  6E10               	movwf	memcpy@d1^0,c
 17739  006C46  6A11               	clrf	(memcpy@d1+1)^0,c
 17740  006C48  C026  F012         	movff	NormalKeyGen@serial,memcpy@s1
 17741  006C4C  C027  F013         	movff	NormalKeyGen@serial+1,memcpy@s1+1
 17742  006C50  0E00               	movlw	0
 17743  006C52  6E15               	movwf	(memcpy@n+1)^0,c
 17744  006C54  0E04               	movlw	4
 17745  006C56  6E14               	movwf	memcpy@n^0,c
 17746  006C58  ECB1  F046         	call	_memcpy	;wreg free
 17747                           
 17748                           ;keeloqDecrypt_MC50.c: 95:     memcpy(HOPtemp, Buffer, 4);
 17749  006C5C  0E28               	movlw	low NormalKeyGen@HOPtemp
 17750  006C5E  6E10               	movwf	memcpy@d1^0,c
 17751  006C60  6A11               	clrf	(memcpy@d1+1)^0,c
 17752  006C62  0E30               	movlw	low NormalKeyGen@Buffer
 17753  006C64  6E12               	movwf	memcpy@s1^0,c
 17754  006C66  6A13               	clrf	(memcpy@s1+1)^0,c
 17755  006C68  0E00               	movlw	0
 17756  006C6A  6E15               	movwf	(memcpy@n+1)^0,c
 17757  006C6C  0E04               	movlw	4
 17758  006C6E  6E14               	movwf	memcpy@n^0,c
 17759  006C70  ECB1  F046         	call	_memcpy	;wreg free
 17760                           
 17761                           ;keeloqDecrypt_MC50.c: 97:     memcpy(SEED, &Buffer[4], 4);
 17762  006C74  0EDB               	movlw	low NormalKeyGen@SEED
 17763  006C76  6E10               	movwf	memcpy@d1^0,c
 17764  006C78  0E02               	movlw	high NormalKeyGen@SEED
 17765  006C7A  6E11               	movwf	(memcpy@d1+1)^0,c
 17766  006C7C  0E34               	movlw	low (NormalKeyGen@Buffer+4)
 17767  006C7E  6E12               	movwf	memcpy@s1^0,c
 17768  006C80  6A13               	clrf	(memcpy@s1+1)^0,c
 17769  006C82  0E00               	movlw	0
 17770  006C84  6E15               	movwf	(memcpy@n+1)^0,c
 17771  006C86  0E04               	movlw	4
 17772  006C88  6E14               	movwf	memcpy@n^0,c
 17773  006C8A  ECB1  F046         	call	_memcpy	;wreg free
 17774                           
 17775                           ;keeloqDecrypt_MC50.c: 98:     SEED[3] &= 0x0f;
 17776  006C8E  0E0F               	movlw	15
 17777  006C90  0102               	movlb	2	; () banked
 17778  006C92  17DE               	andwf	(NormalKeyGen@SEED+3)& (0+255),f,b
 17779                           
 17780                           ; BSR set to: 2
 17781                           ;keeloqDecrypt_MC50.c: 101:     memcpy(Buffer, SEED, 4);
 17782  006C94  0E30               	movlw	low NormalKeyGen@Buffer
 17783  006C96  6E10               	movwf	memcpy@d1^0,c
 17784  006C98  6A11               	clrf	(memcpy@d1+1)^0,c
 17785  006C9A  0EDB               	movlw	low NormalKeyGen@SEED
 17786  006C9C  6E12               	movwf	memcpy@s1^0,c
 17787  006C9E  0E02               	movlw	high NormalKeyGen@SEED
 17788  006CA0  6E13               	movwf	(memcpy@s1+1)^0,c
 17789  006CA2  0E00               	movlw	0
 17790  006CA4  6E15               	movwf	(memcpy@n+1)^0,c
 17791  006CA6  0E04               	movlw	4
 17792  006CA8  6E14               	movwf	memcpy@n^0,c
 17793  006CAA  ECB1  F046         	call	_memcpy	;wreg free
 17794                           
 17795                           ;keeloqDecrypt_MC50.c: 102:     Buffer[3] |= 0x20;
 17796  006CAE  8A33               	bsf	(NormalKeyGen@Buffer+3)^0,5,c
 17797                           
 17798                           ;keeloqDecrypt_MC50.c: 103:     LoadManufCode();
 17799  006CB0  EC13  F04A         	call	_LoadManufCode	;wreg free
 17800                           
 17801                           ; BSR set to: 2
 17802                           ;keeloqDecrypt_MC50.c: 104:     Decrypt(Buffer);
 17803  006CB4  0E30               	movlw	low NormalKeyGen@Buffer
 17804  006CB6  6E1B               	movwf	Decrypt@packet^0,c
 17805  006CB8  6A1C               	clrf	(Decrypt@packet+1)^0,c
 17806  006CBA  EC88  F039         	call	_Decrypt	;wreg free
 17807                           
 17808                           ;keeloqDecrypt_MC50.c: 105:     memcpy(SKEYtemp, Buffer, 4);
 17809  006CBE  0E2C               	movlw	low NormalKeyGen@SKEYtemp
 17810  006CC0  6E10               	movwf	memcpy@d1^0,c
 17811  006CC2  6A11               	clrf	(memcpy@d1+1)^0,c
 17812  006CC4  0E30               	movlw	low NormalKeyGen@Buffer
 17813  006CC6  6E12               	movwf	memcpy@s1^0,c
 17814  006CC8  6A13               	clrf	(memcpy@s1+1)^0,c
 17815  006CCA  0E00               	movlw	0
 17816  006CCC  6E15               	movwf	(memcpy@n+1)^0,c
 17817  006CCE  0E04               	movlw	4
 17818  006CD0  6E14               	movwf	memcpy@n^0,c
 17819  006CD2  ECB1  F046         	call	_memcpy	;wreg free
 17820                           
 17821                           ;keeloqDecrypt_MC50.c: 108:     memcpy(Buffer, SEED, 4);
 17822  006CD6  0E30               	movlw	low NormalKeyGen@Buffer
 17823  006CD8  6E10               	movwf	memcpy@d1^0,c
 17824  006CDA  6A11               	clrf	(memcpy@d1+1)^0,c
 17825  006CDC  0EDB               	movlw	low NormalKeyGen@SEED
 17826  006CDE  6E12               	movwf	memcpy@s1^0,c
 17827  006CE0  0E02               	movlw	high NormalKeyGen@SEED
 17828  006CE2  6E13               	movwf	(memcpy@s1+1)^0,c
 17829  006CE4  0E00               	movlw	0
 17830  006CE6  6E15               	movwf	(memcpy@n+1)^0,c
 17831  006CE8  0E04               	movlw	4
 17832  006CEA  6E14               	movwf	memcpy@n^0,c
 17833  006CEC  ECB1  F046         	call	_memcpy	;wreg free
 17834                           
 17835                           ;keeloqDecrypt_MC50.c: 109:     Buffer[3] |= 0x60;
 17836  006CF0  0E60               	movlw	96
 17837  006CF2  1233               	iorwf	(NormalKeyGen@Buffer+3)^0,f,c
 17838                           
 17839                           ;keeloqDecrypt_MC50.c: 110:     LoadManufCode();
 17840  006CF4  EC13  F04A         	call	_LoadManufCode	;wreg free
 17841                           
 17842                           ; BSR set to: 2
 17843                           ;keeloqDecrypt_MC50.c: 111:     Decrypt(Buffer);
 17844  006CF8  0E30               	movlw	low NormalKeyGen@Buffer
 17845  006CFA  6E1B               	movwf	Decrypt@packet^0,c
 17846  006CFC  6A1C               	clrf	(Decrypt@packet+1)^0,c
 17847  006CFE  EC88  F039         	call	_Decrypt	;wreg free
 17848                           
 17849                           ;keeloqDecrypt_MC50.c: 112:     memcpy(&DKEY[4], Buffer, 4);
 17850  006D02  0ED7               	movlw	low (_DKEY+4)
 17851  006D04  6E10               	movwf	memcpy@d1^0,c
 17852  006D06  0E02               	movlw	high (_DKEY+4)
 17853  006D08  6E11               	movwf	(memcpy@d1+1)^0,c
 17854  006D0A  0E30               	movlw	low NormalKeyGen@Buffer
 17855  006D0C  6E12               	movwf	memcpy@s1^0,c
 17856  006D0E  6A13               	clrf	(memcpy@s1+1)^0,c
 17857  006D10  0E00               	movlw	0
 17858  006D12  6E15               	movwf	(memcpy@n+1)^0,c
 17859  006D14  0E04               	movlw	4
 17860  006D16  6E14               	movwf	memcpy@n^0,c
 17861  006D18  ECB1  F046         	call	_memcpy	;wreg free
 17862                           
 17863                           ;keeloqDecrypt_MC50.c: 113:     memcpy(DKEY, SKEYtemp, 4);
 17864  006D1C  0ED3               	movlw	low _DKEY
 17865  006D1E  6E10               	movwf	memcpy@d1^0,c
 17866  006D20  0E02               	movlw	high _DKEY
 17867  006D22  6E11               	movwf	(memcpy@d1+1)^0,c
 17868  006D24  0E2C               	movlw	low NormalKeyGen@SKEYtemp
 17869  006D26  6E12               	movwf	memcpy@s1^0,c
 17870  006D28  6A13               	clrf	(memcpy@s1+1)^0,c
 17871  006D2A  0E00               	movlw	0
 17872  006D2C  6E15               	movwf	(memcpy@n+1)^0,c
 17873  006D2E  0E04               	movlw	4
 17874  006D30  6E14               	movwf	memcpy@n^0,c
 17875  006D32  ECB1  F046         	call	_memcpy	;wreg free
 17876                           
 17877                           ;keeloqDecrypt_MC50.c: 116:     memcpy(Buffer, HOPtemp, 4);
 17878  006D36  0E30               	movlw	low NormalKeyGen@Buffer
 17879  006D38  6E10               	movwf	memcpy@d1^0,c
 17880  006D3A  6A11               	clrf	(memcpy@d1+1)^0,c
 17881  006D3C  0E28               	movlw	low NormalKeyGen@HOPtemp
 17882  006D3E  6E12               	movwf	memcpy@s1^0,c
 17883  006D40  6A13               	clrf	(memcpy@s1+1)^0,c
 17884  006D42  0E00               	movlw	0
 17885  006D44  6E15               	movwf	(memcpy@n+1)^0,c
 17886  006D46  0E04               	movlw	4
 17887  006D48  6E14               	movwf	memcpy@n^0,c
 17888  006D4A  ECB1  F046         	call	_memcpy	;wreg free
 17889  006D4E  0012               	return		;funcret
 17890  006D50                     __end_of_NormalKeyGen:
 17891                           	callstack 0
 17892                           
 17893 ;; *************** function _LoadManufCode *****************
 17894 ;; Defined at:
 17895 ;;		line 63 in file "keeloqDecrypt_MC50.c"
 17896 ;; Parameters:    Size  Location     Type
 17897 ;;		None
 17898 ;; Auto vars:     Size  Location     Type
 17899 ;;		None
 17900 ;; Return value:  Size  Location     Type
 17901 ;;                  1    wreg      void 
 17902 ;; Registers used:
 17903 ;;		wreg, status,2
 17904 ;; Tracked objects:
 17905 ;;		On entry : 0/2
 17906 ;;		On exit  : 3F/2
 17907 ;;		Unchanged: 0/0
 17908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17912 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17913 ;;Total ram usage:        0 bytes
 17914 ;; Hardware stack levels used: 1
 17915 ;; Hardware stack levels required when called: 4
 17916 ;; This function calls:
 17917 ;;		Nothing
 17918 ;; This function is called by:
 17919 ;;		_NormalKeyGen
 17920 ;; This function uses a non-reentrant model
 17921 ;;
 17922                           
 17923                           	psect	text61
 17924  009426                     __ptext61:
 17925                           	callstack 0
 17926  009426                     _LoadManufCode:
 17927                           	callstack 22
 17928                           
 17929                           ;keeloqDecrypt_MC50.c: 64:     DKEY[0] = 0xFF;
 17930                           
 17931                           ;incstack = 0
 17932  009426  0102               	movlb	2	; () banked
 17933  009428  69D3               	setf	_DKEY& (0+255),b
 17934                           
 17935                           ; BSR set to: 2
 17936                           ;keeloqDecrypt_MC50.c: 65:     DKEY[1] = 0xCA;
 17937  00942A  0ECA               	movlw	202
 17938  00942C  6FD4               	movwf	(_DKEY+1)& (0+255),b
 17939                           
 17940                           ;keeloqDecrypt_MC50.c: 66:     DKEY[2] = 0x76;
 17941  00942E  0E76               	movlw	118
 17942  009430  6FD5               	movwf	(_DKEY+2)& (0+255),b
 17943                           
 17944                           ;keeloqDecrypt_MC50.c: 67:     DKEY[3] = 0x94;
 17945  009432  0E94               	movlw	148
 17946  009434  6FD6               	movwf	(_DKEY+3)& (0+255),b
 17947                           
 17948                           ;keeloqDecrypt_MC50.c: 68:     DKEY[4] = 0x22;
 17949  009436  0E22               	movlw	34
 17950  009438  6FD7               	movwf	(_DKEY+4)& (0+255),b
 17951                           
 17952                           ;keeloqDecrypt_MC50.c: 69:     DKEY[5] = 0x68;
 17953  00943A  0E68               	movlw	104
 17954  00943C  6FD8               	movwf	(_DKEY+5)& (0+255),b
 17955                           
 17956                           ;keeloqDecrypt_MC50.c: 70:     DKEY[6] = 0x27;
 17957  00943E  0E27               	movlw	39
 17958  009440  6FD9               	movwf	(_DKEY+6)& (0+255),b
 17959                           
 17960                           ;keeloqDecrypt_MC50.c: 71:     DKEY[7] = 0x57;
 17961  009442  0E57               	movlw	87
 17962  009444  6FDA               	movwf	(_DKEY+7)& (0+255),b
 17963                           
 17964                           ; BSR set to: 2
 17965  009446  0012               	return		;funcret
 17966  009448                     __end_of_LoadManufCode:
 17967                           	callstack 0
 17968                           
 17969 ;; *************** function _Decrypt *****************
 17970 ;; Defined at:
 17971 ;;		line 142 in file "keeloqDecrypt_MC50.c"
 17972 ;; Parameters:    Size  Location     Type
 17973 ;;  packet          2   26[COMRAM] PTR unsigned char 
 17974 ;;		 -> SecureKeyGen@HOPtemp(4), NormalKeyGen@Buffer(8), classic_data(16), 
 17975 ;; Auto vars:     Size  Location     Type
 17976 ;;  Buffer          4   33[COMRAM] unsigned char [4]
 17977 ;;  aux             1   32[COMRAM] unsigned char 
 17978 ;;  p               1   31[COMRAM] char 
 17979 ;;  j               1   30[COMRAM] unsigned char 
 17980 ;;  i               1   29[COMRAM] unsigned char 
 17981 ;;  key             1   28[COMRAM] unsigned char 
 17982 ;; Return value:  Size  Location     Type
 17983 ;;                  1    wreg      void 
 17984 ;; Registers used:
 17985 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17986 ;; Tracked objects:
 17987 ;;		On entry : 0/0
 17988 ;;		On exit  : 0/0
 17989 ;;		Unchanged: 0/0
 17990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17991 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17992 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17994 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17995 ;;Total ram usage:       11 bytes
 17996 ;; Hardware stack levels used: 1
 17997 ;; Hardware stack levels required when called: 5
 17998 ;; This function calls:
 17999 ;;		_memcpy
 18000 ;; This function is called by:
 18001 ;;		_NormalKeyGen
 18002 ;;		_keeloq_classic_decrypt_packet
 18003 ;; This function uses a non-reentrant model
 18004 ;;
 18005                           
 18006                           	psect	text62
 18007  007310                     __ptext62:
 18008                           	callstack 0
 18009  007310                     _Decrypt:
 18010                           	callstack 21
 18011                           
 18012                           ;keeloqDecrypt_MC50.c: 143:     uint_fast8_t i, j;;keeloqDecrypt_MC50.c: 144:     uint8_
      +                          t key, aux;;keeloqDecrypt_MC50.c: 146:     int8_t p;;keeloqDecrypt_MC50.c: 147:     uint
      +                          8_t Buffer[4];;keeloqDecrypt_MC50.c: 149:     memcpy(Buffer, packet, 4);
 18013                           
 18014                           ; BSR set to: 2
 18015                           ;incstack = 0
 18016  007310  0E22               	movlw	low Decrypt@Buffer
 18017  007312  6E10               	movwf	memcpy@d1^0,c
 18018  007314  6A11               	clrf	(memcpy@d1+1)^0,c
 18019  007316  C01B  F012         	movff	Decrypt@packet,memcpy@s1
 18020  00731A  C01C  F013         	movff	Decrypt@packet+1,memcpy@s1+1
 18021  00731E  0E00               	movlw	0
 18022  007320  6E15               	movwf	(memcpy@n+1)^0,c
 18023  007322  0E04               	movlw	4
 18024  007324  6E14               	movwf	memcpy@n^0,c
 18025  007326  ECB1  F046         	call	_memcpy	;wreg free
 18026                           
 18027                           ;keeloqDecrypt_MC50.c: 151:     p = 1;
 18028  00732A  0E01               	movlw	1
 18029  00732C  6E20               	movwf	Decrypt@p^0,c
 18030                           
 18031                           ;keeloqDecrypt_MC50.c: 153:     for (j = 66; j > 0; j--) {
 18032  00732E  0E42               	movlw	66
 18033  007330  6E1F               	movwf	Decrypt@j^0,c
 18034  007332                     l19999:
 18035                           
 18036                           ;keeloqDecrypt_MC50.c: 154:         key = DKEY[p--];
 18037  007332  0ED3               	movlw	low _DKEY
 18038  007334  2420               	addwf	Decrypt@p^0,w,c
 18039  007336  6ED9               	movwf	fsr2l,c
 18040  007338  6ADA               	clrf	fsr2h,c
 18041  00733A  0E02               	movlw	high _DKEY
 18042  00733C  22DA               	addwfc	fsr2h,f,c
 18043  00733E  50DF               	movf	indf2,w,c
 18044  007340  6E1D               	movwf	Decrypt@key^0,c
 18045  007342  0620               	decf	Decrypt@p^0,f,c
 18046                           
 18047                           ;keeloqDecrypt_MC50.c: 155:         if (p < 0)
 18048  007344  AE20               	btfss	Decrypt@p^0,7,c
 18049  007346  D002               	goto	l20007
 18050                           
 18051                           ;keeloqDecrypt_MC50.c: 156:             p += 8;
 18052  007348  0E08               	movlw	8
 18053  00734A  2620               	addwf	Decrypt@p^0,f,c
 18054  00734C                     l20007:
 18055                           
 18056                           ;keeloqDecrypt_MC50.c: 157:         for (i = 8; i > 0; i--) {
 18057  00734C  0E08               	movlw	8
 18058  00734E  6E1E               	movwf	Decrypt@i^0,c
 18059  007350                     l1859:
 18060                           
 18061                           ;keeloqDecrypt_MC50.c: 159:             if ((( (Buffer[3]) & (1<<(6))) != 0)) {
 18062  007350  AC25               	btfss	(Decrypt@Buffer+3)^0,6,c
 18063  007352  D006               	goto	l1861
 18064                           
 18065                           ;keeloqDecrypt_MC50.c: 160:                 if (!(( (Buffer[3]) & (1<<(1))) != 0))
 18066  007354  B225               	btfsc	(Decrypt@Buffer+3)^0,1,c
 18067  007356  D002               	goto	l20017
 18068                           
 18069                           ;keeloqDecrypt_MC50.c: 161:                     aux = 0b00111010;
 18070  007358  0E3A               	movlw	58
 18071  00735A  D007               	goto	L81
 18072  00735C                     l20017:
 18073                           
 18074                           ;keeloqDecrypt_MC50.c: 163:                     aux = 0b01011100;
 18075  00735C  0E5C               	movlw	92
 18076  00735E  D005               	goto	L81
 18077  007360                     l1861:
 18078                           
 18079                           ;keeloqDecrypt_MC50.c: 165:                 if (!(( (Buffer[3]) & (1<<(1))) != 0))
 18080  007360  B225               	btfsc	(Decrypt@Buffer+3)^0,1,c
 18081  007362  D002               	goto	l20021
 18082                           
 18083                           ;keeloqDecrypt_MC50.c: 166:                     aux = 0b01110100;
 18084  007364  0E74               	movlw	116
 18085  007366  D001               	goto	L81
 18086  007368                     l20021:
 18087                           
 18088                           ;keeloqDecrypt_MC50.c: 168:                     aux = 0b00101110;
 18089  007368  0E2E               	movlw	46
 18090  00736A                     L81:
 18091  00736A  6E21               	movwf	Decrypt@aux^0,c
 18092                           
 18093                           ;keeloqDecrypt_MC50.c: 172:             if ((( (Buffer[2]) & (1<<(3))) != 0))
 18094  00736C  B624               	btfsc	(Decrypt@Buffer+2)^0,3,c
 18095                           
 18096                           ;keeloqDecrypt_MC50.c: 173:                 aux = (aux << 4) | (aux >> 4);
 18097  00736E  3A21               	swapf	Decrypt@aux^0,f,c
 18098                           
 18099                           ;keeloqDecrypt_MC50.c: 174:             if ((( (Buffer[1]) & (1<<(0))) != 0))
 18100  007370  A023               	btfss	(Decrypt@Buffer+1)^0,0,c
 18101  007372  D004               	goto	l20029
 18102                           
 18103                           ;keeloqDecrypt_MC50.c: 175:                 aux <<= 2;
 18104  007374  90D8               	bcf	status,0,c
 18105  007376  3621               	rlcf	Decrypt@aux^0,f,c
 18106  007378  90D8               	bcf	status,0,c
 18107  00737A  3621               	rlcf	Decrypt@aux^0,f,c
 18108  00737C                     l20029:
 18109                           
 18110                           ;keeloqDecrypt_MC50.c: 176:             if ((( (Buffer[0]) & (1<<(0))) != 0))
 18111  00737C  A022               	btfss	Decrypt@Buffer^0,0,c
 18112  00737E  D002               	goto	l1869
 18113                           
 18114                           ;keeloqDecrypt_MC50.c: 177:                 aux <<= 1;
 18115  007380  90D8               	bcf	status,0,c
 18116  007382  3621               	rlcf	Decrypt@aux^0,f,c
 18117  007384                     l1869:
 18118                           
 18119                           ;keeloqDecrypt_MC50.c: 180:             aux ^= Buffer[1] ^ Buffer[3] ^ key;
 18120  007384  5023               	movf	(Decrypt@Buffer+1)^0,w,c
 18121  007386  1825               	xorwf	(Decrypt@Buffer+3)^0,w,c
 18122  007388  181D               	xorwf	Decrypt@key^0,w,c
 18123  00738A  1A21               	xorwf	Decrypt@aux^0,f,c
 18124                           
 18125                           ;keeloqDecrypt_MC50.c: 182:             Buffer[3] = (Buffer[3] << 1) | (Buffer[2] >> 7);
 18126  00738C  90D8               	bcf	status,0,c
 18127  00738E  3424               	rlcf	(Decrypt@Buffer+2)^0,w,c
 18128  007390  3425               	rlcf	(Decrypt@Buffer+3)^0,w,c
 18129  007392  6E25               	movwf	(Decrypt@Buffer+3)^0,c
 18130                           
 18131                           ;keeloqDecrypt_MC50.c: 183:             Buffer[2] = (Buffer[2] << 1) | (Buffer[1] >> 7);
 18132  007394  90D8               	bcf	status,0,c
 18133  007396  3423               	rlcf	(Decrypt@Buffer+1)^0,w,c
 18134  007398  3424               	rlcf	(Decrypt@Buffer+2)^0,w,c
 18135  00739A  6E24               	movwf	(Decrypt@Buffer+2)^0,c
 18136                           
 18137                           ;keeloqDecrypt_MC50.c: 184:             Buffer[1] = (Buffer[1] << 1) | (Buffer[0] >> 7);
 18138  00739C  90D8               	bcf	status,0,c
 18139  00739E  3422               	rlcf	Decrypt@Buffer^0,w,c
 18140  0073A0  3423               	rlcf	(Decrypt@Buffer+1)^0,w,c
 18141  0073A2  6E23               	movwf	(Decrypt@Buffer+1)^0,c
 18142                           
 18143                           ;keeloqDecrypt_MC50.c: 185:             Buffer[0] = (Buffer[0] << 1) | (aux >> 7);
 18144  0073A4  90D8               	bcf	status,0,c
 18145  0073A6  3421               	rlcf	Decrypt@aux^0,w,c
 18146  0073A8  3422               	rlcf	Decrypt@Buffer^0,w,c
 18147  0073AA  6E22               	movwf	Decrypt@Buffer^0,c
 18148                           
 18149                           ;keeloqDecrypt_MC50.c: 188:             key <<= 1;
 18150  0073AC  90D8               	bcf	status,0,c
 18151  0073AE  361D               	rlcf	Decrypt@key^0,f,c
 18152                           
 18153                           ;keeloqDecrypt_MC50.c: 189:         }
 18154  0073B0  061E               	decf	Decrypt@i^0,f,c
 18155  0073B2  501E               	movf	Decrypt@i^0,w,c
 18156  0073B4  A4D8               	btfss	status,2,c
 18157  0073B6  D7CC               	goto	l1859
 18158                           
 18159                           ;keeloqDecrypt_MC50.c: 190:     }
 18160  0073B8  061F               	decf	Decrypt@j^0,f,c
 18161  0073BA  501F               	movf	Decrypt@j^0,w,c
 18162  0073BC  A4D8               	btfss	status,2,c
 18163  0073BE  D7B9               	goto	l19999
 18164                           
 18165                           ;keeloqDecrypt_MC50.c: 192:     memcpy(packet, Buffer, 4);
 18166  0073C0  C01B  F010         	movff	Decrypt@packet,memcpy@d1
 18167  0073C4  C01C  F011         	movff	Decrypt@packet+1,memcpy@d1+1
 18168  0073C8  0E22               	movlw	low Decrypt@Buffer
 18169  0073CA  6E12               	movwf	memcpy@s1^0,c
 18170  0073CC  6A13               	clrf	(memcpy@s1+1)^0,c
 18171  0073CE  0E00               	movlw	0
 18172  0073D0  6E15               	movwf	(memcpy@n+1)^0,c
 18173  0073D2  0E04               	movlw	4
 18174  0073D4  6E14               	movwf	memcpy@n^0,c
 18175  0073D6  ECB1  F046         	call	_memcpy	;wreg free
 18176  0073DA  0012               	return		;funcret
 18177  0073DC                     __end_of_Decrypt:
 18178                           	callstack 0
 18179                           
 18180 ;; *************** function _HopCHK *****************
 18181 ;; Defined at:
 18182 ;;		line 236 in file "keeloqDecrypt_MC50.c"
 18183 ;; Parameters:    Size  Location     Type
 18184 ;;  data            2   35[COMRAM] PTR struct .
 18185 ;;		 -> classic_data(16), 
 18186 ;; Auto vars:     Size  Location     Type
 18187 ;;  hopDiff         2   37[COMRAM] short 
 18188 ;; Return value:  Size  Location     Type
 18189 ;;                  1    wreg      enum E10730
 18190 ;; Registers used:
 18191 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18192 ;; Tracked objects:
 18193 ;;		On entry : 3F/0
 18194 ;;		On exit  : 3C/0
 18195 ;;		Unchanged: 0/0
 18196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18197 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18198 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18200 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18201 ;;Total ram usage:        4 bytes
 18202 ;; Hardware stack levels used: 1
 18203 ;; Hardware stack levels required when called: 6
 18204 ;; This function calls:
 18205 ;;		_ReqResync
 18206 ;;		_getHopCode
 18207 ;; This function is called by:
 18208 ;;		_keeloqDecryptPacket
 18209 ;; This function uses a non-reentrant model
 18210 ;;
 18211                           
 18212                           	psect	text63
 18213  007CC0                     __ptext63:
 18214                           	callstack 0
 18215  007CC0                     _HopCHK:
 18216                           	callstack 22
 18217                           
 18218                           ; BSR set to: 0
 18219                           ;keeloqDecrypt_MC50.c: 237:     int16_t hopDiff;;keeloqDecrypt_MC50.c: 238:     Hop = da
      +                          ta->sync;
 18220                           
 18221                           ;incstack = 0
 18222  007CC0  EE20 F008          	lfsr	2,8
 18223  007CC4  5024               	movf	HopCHK@data^0,w,c
 18224  007CC6  26D9               	addwf	fsr2l,f,c
 18225  007CC8  5025               	movf	(HopCHK@data+1)^0,w,c
 18226  007CCA  22DA               	addwfc	fsr2h,f,c
 18227  007CCC  CFDE F07C          	movff	postinc2,_Hop
 18228  007CD0  CFDD F07D          	movff	postdec2,_Hop+1
 18229                           
 18230                           ; BSR set to: 0
 18231                           ;keeloqDecrypt_MC50.c: 239:     EHop=getHopCode(data);
 18232  007CD4  C024  F016         	movff	HopCHK@data,getHopCode@data
 18233  007CD8  C025  F017         	movff	HopCHK@data+1,getHopCode@data+1
 18234  007CDC  EC45  F033         	call	_getHopCode	;wreg free
 18235  007CE0  C016  F28E         	movff	?_getHopCode,_EHop
 18236  007CE4  C017  F28F         	movff	?_getHopCode+1,_EHop+1
 18237                           
 18238                           ;keeloqDecrypt_MC50.c: 241:     if (F2Chance)
 18239  007CE8  0101               	movlb	1	; () banked
 18240  007CEA  5196               	movf	_F2Chance& (0+255),w,b
 18241  007CEC  B4D8               	btfsc	status,2,c
 18242  007CEE  D010               	goto	l20759
 18243                           
 18244                           ; BSR set to: 1
 18245                           ;keeloqDecrypt_MC50.c: 242:         if (NextHop == Hop) {
 18246  007CF0  0100               	movlb	0	; () banked
 18247  007CF2  517C               	movf	_Hop& (0+255),w,b
 18248  007CF4  0102               	movlb	2	; () banked
 18249  007CF6  1990               	xorwf	_NextHop& (0+255),w,b
 18250  007CF8  E10B               	bnz	l20759
 18251  007CFA  0100               	movlb	0	; () banked
 18252  007CFC  517D               	movf	(_Hop+1)& (0+255),w,b
 18253  007CFE  0102               	movlb	2	; () banked
 18254  007D00  1991               	xorwf	(_NextHop+1)& (0+255),w,b
 18255  007D02  A4D8               	btfss	status,2,c
 18256  007D04  D005               	goto	l20759
 18257                           
 18258                           ; BSR set to: 2
 18259                           ;keeloqDecrypt_MC50.c: 243:             F2Chance = 0;
 18260  007D06  0E00               	movlw	0
 18261  007D08  0101               	movlb	1	; () banked
 18262  007D0A  6F96               	movwf	_F2Chance& (0+255),b
 18263  007D0C                     l20755:
 18264                           
 18265                           ;keeloqDecrypt_MC50.c: 245:             return VALID_PACKET;
 18266  007D0C  0E01               	movlw	1
 18267  007D0E  0012               	return	
 18268  007D10                     l20759:
 18269                           
 18270                           ;keeloqDecrypt_MC50.c: 249:     hopDiff = Hop - EHop;
 18271  007D10  0102               	movlb	2	; () banked
 18272  007D12  518E               	movf	_EHop& (0+255),w,b
 18273  007D14  0100               	movlb	0	; () banked
 18274  007D16  5D7C               	subwf	_Hop& (0+255),w,b
 18275  007D18  6E26               	movwf	HopCHK@hopDiff^0,c
 18276  007D1A  0102               	movlb	2	; () banked
 18277  007D1C  518F               	movf	(_EHop+1)& (0+255),w,b
 18278  007D1E  0100               	movlb	0	; () banked
 18279  007D20  597D               	subwfb	(_Hop+1)& (0+255),w,b
 18280  007D22  6E27               	movwf	(HopCHK@hopDiff+1)^0,c
 18281                           
 18282                           ;keeloqDecrypt_MC50.c: 251:     if (hopDiff < 0) {
 18283  007D24  AE27               	btfss	(HopCHK@hopDiff+1)^0,7,c
 18284  007D26  D002               	goto	l20767
 18285                           
 18286                           ; BSR set to: 0
 18287                           ;keeloqDecrypt_MC50.c: 254:         return HOP_CHECK_FAIL;
 18288  007D28  0E0A               	movlw	10
 18289  007D2A  0012               	return	
 18290  007D2C                     l20767:
 18291                           
 18292                           ; BSR set to: 0
 18293  007D2C  BE27               	btfsc	(HopCHK@hopDiff+1)^0,7,c
 18294  007D2E  D7EE               	goto	l20755
 18295  007D30  5027               	movf	(HopCHK@hopDiff+1)^0,w,c
 18296  007D32  E104               	bnz	u23920
 18297  007D34  0E11               	movlw	17
 18298  007D36  5C26               	subwf	HopCHK@hopDiff^0,w,c
 18299  007D38  A0D8               	btfss	status,0,c
 18300  007D3A  D7E8               	goto	l20755
 18301  007D3C                     u23920:
 18302                           
 18303                           ; BSR set to: 0
 18304                           ;keeloqDecrypt_MC50.c: 257:         return ReqResync(Hop);
 18305  007D3C  C07C  F010         	movff	_Hop,ReqResync@CurrentHop
 18306  007D40  C07D  F011         	movff	_Hop+1,ReqResync@CurrentHop+1
 18307  007D44  ECDC  F04A         	call	_ReqResync	;wreg free
 18308  007D48  0012               	return		;funcret
 18309  007D4A                     __end_of_HopCHK:
 18310                           	callstack 0
 18311                           
 18312 ;; *************** function _getHopCode *****************
 18313 ;; Defined at:
 18314 ;;		line 266 in file "keeloqDecrypt_MC50.c"
 18315 ;; Parameters:    Size  Location     Type
 18316 ;;  data            2   21[COMRAM] PTR struct .
 18317 ;;		 -> classic_data(16), 
 18318 ;; Auto vars:     Size  Location     Type
 18319 ;;  tempHop         2   31[COMRAM] unsigned short 
 18320 ;;  i               1   34[COMRAM] unsigned char 
 18321 ;;  tempPos         1   33[COMRAM] char 
 18322 ;; Return value:  Size  Location     Type
 18323 ;;                  2   21[COMRAM] unsigned short 
 18324 ;; Registers used:
 18325 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18326 ;; Tracked objects:
 18327 ;;		On entry : 3F/0
 18328 ;;		On exit  : 3D/0
 18329 ;;		Unchanged: 0/0
 18330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18331 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18332 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18333 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18334 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18335 ;;Total ram usage:       14 bytes
 18336 ;; Hardware stack levels used: 1
 18337 ;; Hardware stack levels required when called: 5
 18338 ;; This function calls:
 18339 ;;		_ReqResync
 18340 ;;		___wmul
 18341 ;; This function is called by:
 18342 ;;		_HopCHK
 18343 ;; This function uses a non-reentrant model
 18344 ;;
 18345                           
 18346                           	psect	text64
 18347  00668A                     __ptext64:
 18348                           	callstack 0
 18349  00668A                     _getHopCode:
 18350                           	callstack 22
 18351                           
 18352                           ; BSR set to: 0
 18353                           ;keeloqDecrypt_MC50.c: 268:     uint16_t tempHop=0;
 18354                           
 18355                           ;incstack = 0
 18356  00668A  0E00               	movlw	0
 18357  00668C  6E21               	movwf	(getHopCode@tempHop+1)^0,c
 18358  00668E  0E00               	movlw	0
 18359  006690  6E20               	movwf	getHopCode@tempHop^0,c
 18360                           
 18361                           ; BSR set to: 0
 18362                           ;keeloqDecrypt_MC50.c: 269:     int8_t tempPos=-1;
 18363  006692  6822               	setf	getHopCode@tempPos^0,c
 18364                           
 18365                           ;keeloqDecrypt_MC50.c: 270:     for(i=0;i<25;i++)
 18366  006694  0E00               	movlw	0
 18367  006696  6E23               	movwf	getHopCode@i^0,c
 18368  006698                     l20247:
 18369                           
 18370                           ; BSR set to: 0
 18371                           ;keeloqDecrypt_MC50.c: 271:     {;keeloqDecrypt_MC50.c: 272:         if(listSyncValues[i
      +                          ].serial==data->serialnumber)
 18372  006698  EE20 F004          	lfsr	2,4
 18373  00669C  5016               	movf	getHopCode@data^0,w,c
 18374  00669E  26D9               	addwf	fsr2l,f,c
 18375  0066A0  5017               	movf	(getHopCode@data+1)^0,w,c
 18376  0066A2  22DA               	addwfc	fsr2h,f,c
 18377  0066A4  5023               	movf	getHopCode@i^0,w,c
 18378  0066A6  0D06               	mullw	6
 18379  0066A8  0E00               	movlw	low _listSyncValues
 18380  0066AA  24F3               	addwf	243,w,c
 18381  0066AC  6EE1               	movwf	fsr1l,c
 18382  0066AE  0E03               	movlw	high _listSyncValues
 18383  0066B0  20F4               	addwfc	prodh,w,c
 18384  0066B2  6EE2               	movwf	fsr1h,c
 18385  0066B4  50DE               	movf	postinc2,w,c
 18386  0066B6  18E6               	xorwf	postinc1,w,c
 18387  0066B8  E118               	bnz	l20253
 18388  0066BA  50DE               	movf	postinc2,w,c
 18389  0066BC  18E6               	xorwf	postinc1,w,c
 18390  0066BE  E115               	bnz	l20253
 18391  0066C0  50DE               	movf	postinc2,w,c
 18392  0066C2  18E6               	xorwf	postinc1,w,c
 18393  0066C4  E112               	bnz	l20253
 18394  0066C6  50DE               	movf	postinc2,w,c
 18395  0066C8  18E6               	xorwf	postinc1,w,c
 18396  0066CA  A4D8               	btfss	status,2,c
 18397  0066CC  D00E               	goto	l20253
 18398                           
 18399                           ; BSR set to: 0
 18400                           ;keeloqDecrypt_MC50.c: 273:         {;keeloqDecrypt_MC50.c: 274:             tempHop=lis
      +                          tSyncValues[i].sync;
 18401  0066CE  5023               	movf	getHopCode@i^0,w,c
 18402  0066D0  0D06               	mullw	6
 18403  0066D2  0E04               	movlw	low (_listSyncValues+4)
 18404  0066D4  24F3               	addwf	243,w,c
 18405  0066D6  6ED9               	movwf	fsr2l,c
 18406  0066D8  0E03               	movlw	high (_listSyncValues+4)
 18407  0066DA  20F4               	addwfc	prodh,w,c
 18408  0066DC  6EDA               	movwf	fsr2h,c
 18409  0066DE  CFDE F020          	movff	postinc2,getHopCode@tempHop
 18410  0066E2  CFDD F021          	movff	postdec2,getHopCode@tempHop+1
 18411                           
 18412                           ; BSR set to: 0
 18413                           ;keeloqDecrypt_MC50.c: 275:             tempPos=i;
 18414  0066E6  C023  F022         	movff	getHopCode@i,getHopCode@tempPos
 18415  0066EA                     l20253:
 18416                           
 18417                           ; BSR set to: 0
 18418                           ;keeloqDecrypt_MC50.c: 278:     }
 18419  0066EA  2A23               	incf	getHopCode@i^0,f,c
 18420                           
 18421                           ; BSR set to: 0
 18422  0066EC  0E18               	movlw	24
 18423  0066EE  6423               	cpfsgt	getHopCode@i^0,c
 18424  0066F0  D7D3               	goto	l20247
 18425                           
 18426                           ; BSR set to: 0
 18427                           ;keeloqDecrypt_MC50.c: 280:     if(tempPos<0)
 18428  0066F2  AE22               	btfss	getHopCode@tempPos^0,7,c
 18429  0066F4  D050               	goto	l20273
 18430                           
 18431                           ; BSR set to: 0
 18432                           ;keeloqDecrypt_MC50.c: 281:     {;keeloqDecrypt_MC50.c: 282:         listSyncValues[poin
      +                          tSync].serial=data->serialnumber;
 18433  0066F6  EE20 F004          	lfsr	2,4
 18434  0066FA  5016               	movf	getHopCode@data^0,w,c
 18435  0066FC  26D9               	addwf	fsr2l,f,c
 18436  0066FE  5017               	movf	(getHopCode@data+1)^0,w,c
 18437  006700  22DA               	addwfc	fsr2h,f,c
 18438  006702  C07A  F010         	movff	_pointSync,___wmul@multiplier	;volatile
 18439  006706  C07B  F011         	movff	_pointSync+1,___wmul@multiplier+1	;volatile
 18440  00670A  0E00               	movlw	0
 18441  00670C  6E13               	movwf	(___wmul@multiplicand+1)^0,c
 18442  00670E  0E06               	movlw	6
 18443  006710  6E12               	movwf	___wmul@multiplicand^0,c
 18444  006712  ECC8  F049         	call	___wmul	;wreg free
 18445  006716  0E00               	movlw	low _listSyncValues
 18446  006718  2410               	addwf	?___wmul^0,w,c
 18447  00671A  6EE1               	movwf	fsr1l,c
 18448  00671C  0E03               	movlw	high _listSyncValues
 18449  00671E  2011               	addwfc	(?___wmul+1)^0,w,c
 18450  006720  6EE2               	movwf	fsr1h,c
 18451  006722  CFDE FFE6          	movff	postinc2,postinc1
 18452  006726  CFDE FFE6          	movff	postinc2,postinc1
 18453  00672A  CFDE FFE6          	movff	postinc2,postinc1
 18454  00672E  CFDE FFE6          	movff	postinc2,postinc1
 18455                           
 18456                           ;keeloqDecrypt_MC50.c: 283:         listSyncValues[pointSync].sync=data->sync;
 18457  006732  EE20 F008          	lfsr	2,8
 18458  006736  5016               	movf	getHopCode@data^0,w,c
 18459  006738  26D9               	addwf	fsr2l,f,c
 18460  00673A  5017               	movf	(getHopCode@data+1)^0,w,c
 18461  00673C  22DA               	addwfc	fsr2h,f,c
 18462  00673E  C07A  F010         	movff	_pointSync,___wmul@multiplier	;volatile
 18463  006742  C07B  F011         	movff	_pointSync+1,___wmul@multiplier+1	;volatile
 18464  006746  0E00               	movlw	0
 18465  006748  6E13               	movwf	(___wmul@multiplicand+1)^0,c
 18466  00674A  0E06               	movlw	6
 18467  00674C  6E12               	movwf	___wmul@multiplicand^0,c
 18468  00674E  ECC8  F049         	call	___wmul	;wreg free
 18469  006752  0E04               	movlw	low (_listSyncValues+4)
 18470  006754  2410               	addwf	?___wmul^0,w,c
 18471  006756  6EE1               	movwf	fsr1l,c
 18472  006758  0E03               	movlw	high (_listSyncValues+4)
 18473  00675A  2011               	addwfc	(?___wmul+1)^0,w,c
 18474  00675C  6EE2               	movwf	fsr1h,c
 18475  00675E  CFDE FFE6          	movff	postinc2,postinc1
 18476  006762  CFDD FFE5          	movff	postdec2,postdec1
 18477                           
 18478                           ;keeloqDecrypt_MC50.c: 284:         pointSync++;
 18479  006766  0100               	movlb	0	; () banked
 18480  006768  4B7A               	infsnz	_pointSync& (0+255),f,b	;volatile
 18481  00676A  2B7B               	incf	(_pointSync+1)& (0+255),f,b	;volatile
 18482                           
 18483                           ; BSR set to: 0
 18484                           ;keeloqDecrypt_MC50.c: 285:         if(pointSync>=25)
 18485  00676C  517B               	movf	(_pointSync+1)& (0+255),w,b	;volatile
 18486  00676E  E104               	bnz	u23240
 18487  006770  0E19               	movlw	25
 18488  006772  5D7A               	subwf	_pointSync& (0+255),w,b	;volatile
 18489  006774  A0D8               	btfss	status,0,c
 18490  006776  D004               	goto	l20267
 18491  006778                     u23240:
 18492                           
 18493                           ; BSR set to: 0
 18494                           ;keeloqDecrypt_MC50.c: 286:         {;keeloqDecrypt_MC50.c: 287:             pointSync=0
      +                          ;
 18495  006778  0E00               	movlw	0
 18496  00677A  6F7B               	movwf	(_pointSync+1)& (0+255),b	;volatile
 18497  00677C  0E00               	movlw	0
 18498  00677E  6F7A               	movwf	_pointSync& (0+255),b	;volatile
 18499  006780                     l20267:
 18500                           
 18501                           ; BSR set to: 0
 18502                           ;keeloqDecrypt_MC50.c: 289:         return ReqResync(Hop);
 18503  006780  C07C  F010         	movff	_Hop,ReqResync@CurrentHop
 18504  006784  C07D  F011         	movff	_Hop+1,ReqResync@CurrentHop+1
 18505  006788  ECDC  F04A         	call	_ReqResync	;wreg free
 18506  00678C  6E18               	movwf	??_getHopCode^0,c
 18507  00678E  5018               	movf	??_getHopCode^0,w,c
 18508  006790  6E16               	movwf	?_getHopCode^0,c
 18509  006792  6A17               	clrf	(?_getHopCode+1)^0,c
 18510  006794  0012               	return	
 18511  006796                     l20273:
 18512                           
 18513                           ; BSR set to: 0
 18514                           ;keeloqDecrypt_MC50.c: 292:     {;keeloqDecrypt_MC50.c: 293:         listSyncValues[temp
      +                          Pos].sync=Hop;
 18515  006796  5022               	movf	getHopCode@tempPos^0,w,c
 18516  006798  0D06               	mullw	6
 18517  00679A  0E04               	movlw	low (_listSyncValues+4)
 18518  00679C  24F3               	addwf	243,w,c
 18519  00679E  6ED9               	movwf	fsr2l,c
 18520  0067A0  0E03               	movlw	high (_listSyncValues+4)
 18521  0067A2  20F4               	addwfc	prodh,w,c
 18522  0067A4  6EDA               	movwf	fsr2h,c
 18523  0067A6  C07C  FFDE         	movff	_Hop,postinc2
 18524  0067AA  C07D  FFDD         	movff	_Hop+1,postdec2
 18525                           
 18526                           ; BSR set to: 0
 18527                           ;keeloqDecrypt_MC50.c: 296:     return tempHop;
 18528  0067AE  C020  F016         	movff	getHopCode@tempHop,?_getHopCode
 18529  0067B2  C021  F017         	movff	getHopCode@tempHop+1,?_getHopCode+1
 18530  0067B6  0012               	return		;funcret
 18531  0067B8                     __end_of_getHopCode:
 18532                           	callstack 0
 18533                           
 18534 ;; *************** function _ReqResync *****************
 18535 ;; Defined at:
 18536 ;;		line 224 in file "keeloqDecrypt_MC50.c"
 18537 ;; Parameters:    Size  Location     Type
 18538 ;;  CurrentHop      2   15[COMRAM] unsigned short 
 18539 ;; Auto vars:     Size  Location     Type
 18540 ;;		None
 18541 ;; Return value:  Size  Location     Type
 18542 ;;                  1    wreg      enum E10730
 18543 ;; Registers used:
 18544 ;;		wreg, status,2, status,0
 18545 ;; Tracked objects:
 18546 ;;		On entry : 3F/0
 18547 ;;		On exit  : 3F/2
 18548 ;;		Unchanged: 0/0
 18549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18550 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18553 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18554 ;;Total ram usage:        2 bytes
 18555 ;; Hardware stack levels used: 1
 18556 ;; Hardware stack levels required when called: 4
 18557 ;; This function calls:
 18558 ;;		Nothing
 18559 ;; This function is called by:
 18560 ;;		_HopCHK
 18561 ;;		_getHopCode
 18562 ;; This function uses a non-reentrant model
 18563 ;;
 18564                           
 18565                           	psect	text65
 18566  0095B8                     __ptext65:
 18567                           	callstack 0
 18568  0095B8                     _ReqResync:
 18569                           	callstack 22
 18570                           
 18571                           ; BSR set to: 0
 18572                           ;keeloqDecrypt_MC50.c: 225:     F2Chance = 1;
 18573                           
 18574                           ;incstack = 0
 18575  0095B8  0E01               	movlw	1
 18576  0095BA  0101               	movlb	1	; () banked
 18577  0095BC  6F96               	movwf	_F2Chance& (0+255),b
 18578                           
 18579                           ; BSR set to: 1
 18580                           ;keeloqDecrypt_MC50.c: 226:     NextHop = CurrentHop + 1;
 18581  0095BE  0E01               	movlw	1
 18582  0095C0  2410               	addwf	ReqResync@CurrentHop^0,w,c
 18583  0095C2  0102               	movlb	2	; () banked
 18584  0095C4  6F90               	movwf	_NextHop& (0+255),b
 18585  0095C6  0E00               	movlw	0
 18586  0095C8  2011               	addwfc	(ReqResync@CurrentHop+1)^0,w,c
 18587  0095CA  6F91               	movwf	(_NextHop+1)& (0+255),b
 18588                           
 18589                           ; BSR set to: 2
 18590                           ;keeloqDecrypt_MC50.c: 228:     return RESYNC_REQ;
 18591  0095CC  0E09               	movlw	9
 18592                           
 18593                           ; BSR set to: 2
 18594  0095CE  0012               	return		;funcret
 18595  0095D0                     __end_of_ReqResync:
 18596                           	callstack 0
 18597                           
 18598 ;; *************** function _DecCHK *****************
 18599 ;; Defined at:
 18600 ;;		line 206 in file "keeloqDecrypt_MC50.c"
 18601 ;; Parameters:    Size  Location     Type
 18602 ;;  data            2   15[COMRAM] PTR struct .
 18603 ;;		 -> classic_data(16), 
 18604 ;; Auto vars:     Size  Location     Type
 18605 ;;		None
 18606 ;; Return value:  Size  Location     Type
 18607 ;;                  1    wreg      _Bool 
 18608 ;; Registers used:
 18609 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18610 ;; Tracked objects:
 18611 ;;		On entry : 3F/0
 18612 ;;		On exit  : 3F/0
 18613 ;;		Unchanged: 3F/0
 18614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18615 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18616 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18617 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18618 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18619 ;;Total ram usage:        4 bytes
 18620 ;; Hardware stack levels used: 1
 18621 ;; Hardware stack levels required when called: 4
 18622 ;; This function calls:
 18623 ;;		Nothing
 18624 ;; This function is called by:
 18625 ;;		_keeloqDecryptPacket
 18626 ;; This function uses a non-reentrant model
 18627 ;;
 18628                           
 18629                           	psect	text66
 18630  008FCA                     __ptext66:
 18631                           	callstack 0
 18632  008FCA                     _DecCHK:
 18633                           	callstack 24
 18634                           
 18635                           ; BSR set to: 0
 18636                           ;keeloqDecrypt_MC50.c: 208:     if (((data->fcode1 ^ data->fcode2) & 0x0f) != 0)
 18637                           
 18638                           ; BSR set to: 2
 18639                           ;incstack = 0
 18640  008FCA  EE20 F00D          	lfsr	2,13
 18641  008FCE  5010               	movf	DecCHK@data^0,w,c
 18642  008FD0  26D9               	addwf	fsr2l,f,c
 18643  008FD2  5011               	movf	(DecCHK@data+1)^0,w,c
 18644  008FD4  22DA               	addwfc	fsr2h,f,c
 18645  008FD6  50DF               	movf	indf2,w,c
 18646  008FD8  6E12               	movwf	??_DecCHK^0,c
 18647  008FDA  EE20 F00C          	lfsr	2,12
 18648  008FDE  5010               	movf	DecCHK@data^0,w,c
 18649  008FE0  26D9               	addwf	fsr2l,f,c
 18650  008FE2  5011               	movf	(DecCHK@data+1)^0,w,c
 18651  008FE4  22DA               	addwfc	fsr2h,f,c
 18652  008FE6  50DF               	movf	indf2,w,c
 18653  008FE8  1812               	xorwf	??_DecCHK^0,w,c
 18654  008FEA  6E13               	movwf	(??_DecCHK+1)^0,c
 18655  008FEC  0E0F               	movlw	15
 18656  008FEE  1613               	andwf	(??_DecCHK+1)^0,f,c
 18657  008FF0  B4D8               	btfsc	status,2,c
 18658  008FF2  D002               	goto	l20741
 18659                           
 18660                           ; BSR set to: 0
 18661                           ;keeloqDecrypt_MC50.c: 209:         return 0;
 18662  008FF4  0E00               	movlw	0
 18663  008FF6  0012               	return	
 18664  008FF8                     l20741:
 18665                           
 18666                           ; BSR set to: 0
 18667                           ;keeloqDecrypt_MC50.c: 211:     return 1;
 18668  008FF8  0E01               	movlw	1
 18669                           
 18670                           ; BSR set to: 0
 18671  008FFA  0012               	return		;funcret
 18672  008FFC                     __end_of_DecCHK:
 18673                           	callstack 0
 18674                           
 18675 ;; *************** function _DecryptPacket_12BIT *****************
 18676 ;; Defined at:
 18677 ;;		line 370 in file "keeloqDecrypt_MC50.c"
 18678 ;; Parameters:    Size  Location     Type
 18679 ;;  data            2    8[BANK0 ] PTR unsigned char 
 18680 ;;		 -> BufferRF(9), 
 18681 ;;  classic_data    2   10[BANK0 ] PTR struct .
 18682 ;;		 -> classic_data(16), 
 18683 ;; Auto vars:     Size  Location     Type
 18684 ;;  commandType     1   12[BANK0 ] enum E10539
 18685 ;; Return value:  Size  Location     Type
 18686 ;;                  1    wreg      enum E10539
 18687 ;; Registers used:
 18688 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18689 ;; Tracked objects:
 18690 ;;		On entry : 3F/0
 18691 ;;		On exit  : 3F/0
 18692 ;;		Unchanged: 0/0
 18693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18694 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18695 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18697 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18698 ;;Total ram usage:        5 bytes
 18699 ;; Hardware stack levels used: 1
 18700 ;; Hardware stack levels required when called: 14
 18701 ;; This function calls:
 18702 ;;		_memcpy
 18703 ;;		_validateRemoteSerialNumber
 18704 ;; This function is called by:
 18705 ;;		_readRFButtons
 18706 ;; This function uses a non-reentrant model
 18707 ;;
 18708                           
 18709                           	psect	text67
 18710  007B1C                     __ptext67:
 18711                           	callstack 0
 18712  007B1C                     _DecryptPacket_12BIT:
 18713                           	callstack 15
 18714                           
 18715                           ; BSR set to: 0
 18716                           ;keeloqDecrypt_MC50.c: 370: TypeCMD DecryptPacket_12BIT (char* data,classic_encoder_t* c
      +                          lassic_data);keeloqDecrypt_MC50.c: 371: {;keeloqDecrypt_MC50.c: 372:     TypeCMD command
      +                          Type;;keeloqDecrypt_MC50.c: 373:     memcpy(&classic_data->serialnumber, data, 4);
 18717                           
 18718                           ; BSR set to: 0
 18719                           ;incstack = 0
 18720  007B1C  0E04               	movlw	4
 18721  007B1E  25E2               	addwf	DecryptPacket_12BIT@classic_data& (0+255),w,b
 18722  007B20  6E10               	movwf	memcpy@d1^0,c
 18723  007B22  0E00               	movlw	0
 18724  007B24  21E3               	addwfc	(DecryptPacket_12BIT@classic_data+1)& (0+255),w,b
 18725  007B26  6E11               	movwf	(memcpy@d1+1)^0,c
 18726  007B28  C0E0  F012         	movff	DecryptPacket_12BIT@data,memcpy@s1
 18727  007B2C  C0E1  F013         	movff	DecryptPacket_12BIT@data+1,memcpy@s1+1
 18728  007B30  0E00               	movlw	0
 18729  007B32  6E15               	movwf	(memcpy@n+1)^0,c
 18730  007B34  0E04               	movlw	4
 18731  007B36  6E14               	movwf	memcpy@n^0,c
 18732  007B38  ECB1  F046         	call	_memcpy	;wreg free
 18733                           
 18734                           ;keeloqDecrypt_MC50.c: 374:     commandType=validateRemoteSerialNumber(classic_data->ser
      +                          ialnumber,NO,&classic_data->positionMem);
 18735  007B3C  0100               	movlb	0	; () banked
 18736  007B3E  EE20 F004          	lfsr	2,4
 18737  007B42  51E2               	movf	DecryptPacket_12BIT@classic_data& (0+255),w,b
 18738  007B44  26D9               	addwf	fsr2l,f,c
 18739  007B46  51E3               	movf	(DecryptPacket_12BIT@classic_data+1)& (0+255),w,b
 18740  007B48  22DA               	addwfc	fsr2h,f,c
 18741  007B4A  CFDE F02E          	movff	postinc2,validateRemoteSerialNumber@serial
 18742  007B4E  CFDE F02F          	movff	postinc2,validateRemoteSerialNumber@serial+1
 18743  007B52  CFDE F030          	movff	postinc2,validateRemoteSerialNumber@serial+2
 18744  007B56  CFDE F031          	movff	postinc2,validateRemoteSerialNumber@serial+3
 18745  007B5A  0E00               	movlw	0
 18746  007B5C  6E32               	movwf	validateRemoteSerialNumber@VerifyOnlySerial^0,c
 18747  007B5E  0E0F               	movlw	15
 18748  007B60  25E2               	addwf	DecryptPacket_12BIT@classic_data& (0+255),w,b
 18749  007B62  6E33               	movwf	validateRemoteSerialNumber@position^0,c
 18750  007B64  0E00               	movlw	0
 18751  007B66  21E3               	addwfc	(DecryptPacket_12BIT@classic_data+1)& (0+255),w,b
 18752  007B68  6E34               	movwf	(validateRemoteSerialNumber@position+1)^0,c
 18753  007B6A  EC2A  F02D         	call	_validateRemoteSerialNumber	;wreg free
 18754  007B6E  6FE4               	movwf	DecryptPacket_12BIT@commandType& (0+255),b
 18755                           
 18756                           ; BSR set to: 0
 18757                           ;keeloqDecrypt_MC50.c: 375:     classic_data->fcode1 = 0;
 18758  007B70  EE20 F00C          	lfsr	2,12
 18759  007B74  51E2               	movf	DecryptPacket_12BIT@classic_data& (0+255),w,b
 18760  007B76  26D9               	addwf	fsr2l,f,c
 18761  007B78  51E3               	movf	(DecryptPacket_12BIT@classic_data+1)& (0+255),w,b
 18762  007B7A  22DA               	addwfc	fsr2h,f,c
 18763  007B7C  0E00               	movlw	0
 18764  007B7E  6EDF               	movwf	indf2,c
 18765                           
 18766                           ; BSR set to: 0
 18767                           ;keeloqDecrypt_MC50.c: 376:     classic_data->sync = 0;
 18768  007B80  EE20 F008          	lfsr	2,8
 18769  007B84  51E2               	movf	DecryptPacket_12BIT@classic_data& (0+255),w,b
 18770  007B86  26D9               	addwf	fsr2l,f,c
 18771  007B88  51E3               	movf	(DecryptPacket_12BIT@classic_data+1)& (0+255),w,b
 18772  007B8A  22DA               	addwfc	fsr2h,f,c
 18773  007B8C  0E00               	movlw	0
 18774  007B8E  6EDE               	movwf	postinc2,c
 18775  007B90  0E00               	movlw	0
 18776  007B92  6EDD               	movwf	postdec2,c
 18777                           
 18778                           ; BSR set to: 0
 18779                           ;keeloqDecrypt_MC50.c: 377:     classic_data->type=DIP_12BIT;
 18780  007B94  EE20 F00E          	lfsr	2,14
 18781  007B98  51E2               	movf	DecryptPacket_12BIT@classic_data& (0+255),w,b
 18782  007B9A  26D9               	addwf	fsr2l,f,c
 18783  007B9C  51E3               	movf	(DecryptPacket_12BIT@classic_data+1)& (0+255),w,b
 18784  007B9E  22DA               	addwfc	fsr2h,f,c
 18785  007BA0  0E02               	movlw	2
 18786  007BA2  6EDF               	movwf	indf2,c
 18787                           
 18788                           ; BSR set to: 0
 18789                           ;keeloqDecrypt_MC50.c: 386:     return commandType;
 18790  007BA4  51E4               	movf	DecryptPacket_12BIT@commandType& (0+255),w,b
 18791                           
 18792                           ; BSR set to: 0
 18793  007BA6  0012               	return		;funcret
 18794  007BA8                     __end_of_DecryptPacket_12BIT:
 18795                           	callstack 0
 18796                           
 18797 ;; *************** function _readInputs *****************
 18798 ;; Defined at:
 18799 ;;		line 528 in file "inputs_MC50.c"
 18800 ;; Parameters:    Size  Location     Type
 18801 ;;		None
 18802 ;; Auto vars:     Size  Location     Type
 18803 ;;		None
 18804 ;; Return value:  Size  Location     Type
 18805 ;;                  1    wreg      void 
 18806 ;; Registers used:
 18807 ;;		wreg, status,2, status,0
 18808 ;; Tracked objects:
 18809 ;;		On entry : 3F/1
 18810 ;;		On exit  : 3E/0
 18811 ;;		Unchanged: 0/0
 18812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18814 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18816 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18817 ;;Total ram usage:        0 bytes
 18818 ;; Hardware stack levels used: 1
 18819 ;; Hardware stack levels required when called: 4
 18820 ;; This function calls:
 18821 ;;		Nothing
 18822 ;; This function is called by:
 18823 ;;		_main
 18824 ;; This function uses a non-reentrant model
 18825 ;;
 18826                           
 18827                           	psect	text68
 18828  006D50                     __ptext68:
 18829                           	callstack 0
 18830  006D50                     _readInputs:
 18831                           	callstack 26
 18832                           
 18833                           ; BSR set to: 1
 18834                           ;inputs_MC50.c: 533:     if(var_sys_NVM.Direction_motor == 0){fimdecurso.FimdeCursoClose
      +                          AUX=PORTAbits.RA1;}
 18835                           
 18836                           ; BSR set to: 0
 18837                           ;incstack = 0
 18838  006D50  0100               	movlb	0	; () banked
 18839  006D52  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 18840  006D54  A4D8               	btfss	status,2,c
 18841  006D56  D006               	goto	l16941
 18842                           
 18843                           ; BSR set to: 0
 18844  006D58  0E00               	movlw	0
 18845  006D5A  B28D               	btfsc	141,1,c	;volatile
 18846  006D5C  0E01               	movlw	1
 18847  006D5E  0101               	movlb	1	; () banked
 18848  006D60  6F78               	movwf	(_fimdecurso+3)& (0+255),b	;volatile
 18849  006D62  D005               	goto	l16943
 18850  006D64                     l16941:
 18851                           
 18852                           ; BSR set to: 0
 18853  006D64  0E00               	movlw	0
 18854  006D66  B48D               	btfsc	141,2,c	;volatile
 18855  006D68  0E01               	movlw	1
 18856  006D6A  0101               	movlb	1	; () banked
 18857  006D6C  6F78               	movwf	(_fimdecurso+3)& (0+255),b	;volatile
 18858  006D6E                     l16943:
 18859                           
 18860                           ; BSR set to: 1
 18861                           ;inputs_MC50.c: 541:     if (fimdecurso.FimdeCursoCloseAUX==fimdecurso.FimdeCursoCloseOL
      +                          D)
 18862  006D6E  5179               	movf	(_fimdecurso+4)& (0+255),w,b	;volatile
 18863  006D70  1978               	xorwf	(_fimdecurso+3)& (0+255),w,b	;volatile
 18864  006D72  A4D8               	btfss	status,2,c
 18865  006D74  D002               	goto	l1731
 18866                           
 18867                           ; BSR set to: 1
 18868                           ;inputs_MC50.c: 542:     {;inputs_MC50.c: 543:            fimdecurso.FimdeCursoCloseTime
      +                          r++;
 18869  006D76  2B7A               	incf	(_fimdecurso+5)& (0+255),f,b	;volatile
 18870                           
 18871                           ;inputs_MC50.c: 544:     }
 18872  006D78  D004               	goto	l1732
 18873  006D7A                     l1731:
 18874                           
 18875                           ; BSR set to: 1
 18876                           ;inputs_MC50.c: 547:     {;inputs_MC50.c: 548:             fimdecurso.FimdeCursoCloseOLD
      +                           = fimdecurso.FimdeCursoCloseAUX;
 18877  006D7A  C178  F179         	movff	_fimdecurso+3,_fimdecurso+4	;volatile
 18878                           
 18879                           ; BSR set to: 1
 18880                           ;inputs_MC50.c: 549:             fimdecurso.FimdeCursoCloseTimer=0;
 18881  006D7E  0E00               	movlw	0
 18882  006D80  6F7A               	movwf	(_fimdecurso+5)& (0+255),b	;volatile
 18883  006D82                     l1732:
 18884                           
 18885                           ; BSR set to: 1
 18886                           ;inputs_MC50.c: 553:     if (fimdecurso.FimdeCursoCloseTimer>=( 50/50))
 18887  006D82  517A               	movf	(_fimdecurso+5)& (0+255),w,b	;volatile
 18888  006D84  A4D8               	btfss	status,2,c
 18889                           
 18890                           ; BSR set to: 1
 18891                           ;inputs_MC50.c: 554:     {;inputs_MC50.c: 555:         var_sys.FimCurso_CloseIsEnabled=f
      +                          imdecurso.FimdeCursoCloseAUX;
 18892  006D86  C178  F103         	movff	_fimdecurso+3,_var_sys+3	;volatile
 18893                           
 18894                           ; BSR set to: 1
 18895                           ;inputs_MC50.c: 564:     if(var_sys_NVM.Direction_motor == 0){fimdecurso.FimdeCursoOpenA
      +                          UX=PORTAbits.RA2;}
 18896  006D8A  0100               	movlb	0	; () banked
 18897  006D8C  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 18898  006D8E  A4D8               	btfss	status,2,c
 18899  006D90  D006               	goto	l16955
 18900                           
 18901                           ; BSR set to: 0
 18902  006D92  0E00               	movlw	0
 18903  006D94  B48D               	btfsc	141,2,c	;volatile
 18904  006D96  0E01               	movlw	1
 18905  006D98  0101               	movlb	1	; () banked
 18906  006D9A  6F75               	movwf	_fimdecurso& (0+255),b	;volatile
 18907  006D9C  D005               	goto	l16957
 18908  006D9E                     l16955:
 18909                           
 18910                           ; BSR set to: 0
 18911  006D9E  0E00               	movlw	0
 18912  006DA0  B28D               	btfsc	141,1,c	;volatile
 18913  006DA2  0E01               	movlw	1
 18914  006DA4  0101               	movlb	1	; () banked
 18915  006DA6  6F75               	movwf	_fimdecurso& (0+255),b	;volatile
 18916  006DA8                     l16957:
 18917                           
 18918                           ; BSR set to: 1
 18919                           ;inputs_MC50.c: 570:     if (fimdecurso.FimdeCursoOpenAUX==fimdecurso.FimdeCursoOpenOLD)
 18920  006DA8  5175               	movf	_fimdecurso& (0+255),w,b	;volatile
 18921  006DAA  1976               	xorwf	(_fimdecurso+1)& (0+255),w,b	;volatile
 18922  006DAC  A4D8               	btfss	status,2,c
 18923  006DAE  D002               	goto	l1736
 18924                           
 18925                           ; BSR set to: 1
 18926                           ;inputs_MC50.c: 571:     {;inputs_MC50.c: 572:            fimdecurso.FimdeCursoOpenTimer
      +                          ++;
 18927  006DB0  2B77               	incf	(_fimdecurso+2)& (0+255),f,b	;volatile
 18928                           
 18929                           ;inputs_MC50.c: 573:     }
 18930  006DB2  D004               	goto	l1737
 18931  006DB4                     l1736:
 18932                           
 18933                           ; BSR set to: 1
 18934                           ;inputs_MC50.c: 576:     {;inputs_MC50.c: 577:             fimdecurso.FimdeCursoOpenOLD 
      +                          = fimdecurso.FimdeCursoOpenAUX;
 18935  006DB4  C175  F176         	movff	_fimdecurso,_fimdecurso+1	;volatile
 18936                           
 18937                           ; BSR set to: 1
 18938                           ;inputs_MC50.c: 578:             fimdecurso.FimdeCursoOpenTimer=0;
 18939  006DB8  0E00               	movlw	0
 18940  006DBA  6F77               	movwf	(_fimdecurso+2)& (0+255),b	;volatile
 18941  006DBC                     l1737:
 18942                           
 18943                           ; BSR set to: 1
 18944                           ;inputs_MC50.c: 582:     if (fimdecurso.FimdeCursoOpenTimer>=( 50/50))
 18945  006DBC  5177               	movf	(_fimdecurso+2)& (0+255),w,b	;volatile
 18946  006DBE  A4D8               	btfss	status,2,c
 18947                           
 18948                           ; BSR set to: 1
 18949                           ;inputs_MC50.c: 583:     {;inputs_MC50.c: 584:         var_sys.FimCurso_OpenIsEnabled=fi
      +                          mdecurso.FimdeCursoOpenAUX;
 18950  006DC0  C175  F104         	movff	_fimdecurso,_var_sys+4	;volatile
 18951                           
 18952                           ; BSR set to: 1
 18953                           ;inputs_MC50.c: 589:     security.PhotoCellAUX=PORTAbits.RA4;
 18954  006DC4  0E00               	movlw	0
 18955  006DC6  B88D               	btfsc	141,4,c	;volatile
 18956  006DC8  0E01               	movlw	1
 18957  006DCA  6F6A               	movwf	_security& (0+255),b	;volatile
 18958                           
 18959                           ; BSR set to: 1
 18960                           ;inputs_MC50.c: 594:     if (security.PhotoCellAUX==security.PhotoCellOLD)
 18961  006DCC  516A               	movf	_security& (0+255),w,b	;volatile
 18962  006DCE  196B               	xorwf	(_security+1)& (0+255),w,b	;volatile
 18963  006DD0  A4D8               	btfss	status,2,c
 18964  006DD2  D002               	goto	l1739
 18965                           
 18966                           ; BSR set to: 1
 18967                           ;inputs_MC50.c: 595:     {;inputs_MC50.c: 596:            security.PhotoCellTimer++;
 18968  006DD4  2B6C               	incf	(_security+2)& (0+255),f,b	;volatile
 18969                           
 18970                           ;inputs_MC50.c: 597:     }
 18971  006DD6  D004               	goto	l1740
 18972  006DD8                     l1739:
 18973                           
 18974                           ; BSR set to: 1
 18975                           ;inputs_MC50.c: 600:     {;inputs_MC50.c: 601:             security.PhotoCellOLD = secur
      +                          ity.PhotoCellAUX;
 18976  006DD8  C16A  F16B         	movff	_security,_security+1	;volatile
 18977                           
 18978                           ; BSR set to: 1
 18979                           ;inputs_MC50.c: 602:             security.PhotoCellTimer=0;
 18980  006DDC  0E00               	movlw	0
 18981  006DDE  6F6C               	movwf	(_security+2)& (0+255),b	;volatile
 18982  006DE0                     l1740:
 18983                           
 18984                           ; BSR set to: 1
 18985                           ;inputs_MC50.c: 606:     if (security.PhotoCellTimer>=( 50/50))
 18986  006DE0  516C               	movf	(_security+2)& (0+255),w,b	;volatile
 18987  006DE2  A4D8               	btfss	status,2,c
 18988                           
 18989                           ; BSR set to: 1
 18990                           ;inputs_MC50.c: 607:     {;inputs_MC50.c: 608:         var_sys.photoCellIsObstructed=sec
      +                          urity.PhotoCellAUX;
 18991  006DE4  C16A  F101         	movff	_security,_var_sys+1	;volatile
 18992                           
 18993                           ; BSR set to: 1
 18994                           ;inputs_MC50.c: 612:     security.SecurityBarAUX=PORTAbits.RA5;
 18995  006DE8  0E00               	movlw	0
 18996  006DEA  BA8D               	btfsc	141,5,c	;volatile
 18997  006DEC  0E01               	movlw	1
 18998  006DEE  6F6D               	movwf	(_security+3)& (0+255),b	;volatile
 18999                           
 19000                           ; BSR set to: 1
 19001                           ;inputs_MC50.c: 616:     if (security.SecurityBarAUX==security.SecurityBarOLD)
 19002  006DF0  516E               	movf	(_security+4)& (0+255),w,b	;volatile
 19003  006DF2  196D               	xorwf	(_security+3)& (0+255),w,b	;volatile
 19004  006DF4  A4D8               	btfss	status,2,c
 19005  006DF6  D002               	goto	l1742
 19006                           
 19007                           ; BSR set to: 1
 19008                           ;inputs_MC50.c: 617:     {;inputs_MC50.c: 618:            security.SecurityBarTimer++;
 19009  006DF8  2B6F               	incf	(_security+5)& (0+255),f,b	;volatile
 19010                           
 19011                           ;inputs_MC50.c: 619:     }
 19012  006DFA  D004               	goto	l1743
 19013  006DFC                     l1742:
 19014                           
 19015                           ; BSR set to: 1
 19016                           ;inputs_MC50.c: 622:     {;inputs_MC50.c: 623:             security.SecurityBarOLD = sec
      +                          urity.SecurityBarAUX;
 19017  006DFC  C16D  F16E         	movff	_security+3,_security+4	;volatile
 19018                           
 19019                           ; BSR set to: 1
 19020                           ;inputs_MC50.c: 624:             security.SecurityBarTimer=0;
 19021  006E00  0E00               	movlw	0
 19022  006E02  6F6F               	movwf	(_security+5)& (0+255),b	;volatile
 19023  006E04                     l1743:
 19024                           
 19025                           ; BSR set to: 1
 19026                           ;inputs_MC50.c: 628:     if (security.SecurityBarTimer>=( 50/50))
 19027  006E04  516F               	movf	(_security+5)& (0+255),w,b	;volatile
 19028  006E06  A4D8               	btfss	status,2,c
 19029                           
 19030                           ; BSR set to: 1
 19031                           ;inputs_MC50.c: 629:     {;inputs_MC50.c: 630:         security.SecurityBarSTATE=securit
      +                          y.SecurityBarAUX;
 19032  006E08  C16D  F170         	movff	_security+3,_security+6	;volatile
 19033                           
 19034                           ; BSR set to: 1
 19035                           ;inputs_MC50.c: 633:     security.SecurityBar8K2AUX=PORTAbits.RA6;
 19036  006E0C  0E00               	movlw	0
 19037  006E0E  BC8D               	btfsc	141,6,c	;volatile
 19038  006E10  0E01               	movlw	1
 19039  006E12  6F71               	movwf	(_security+7)& (0+255),b	;volatile
 19040                           
 19041                           ; BSR set to: 1
 19042                           ;inputs_MC50.c: 637:     if (security.SecurityBar8K2AUX==security.SecurityBar8K2OLD)
 19043  006E14  5172               	movf	(_security+8)& (0+255),w,b	;volatile
 19044  006E16  1971               	xorwf	(_security+7)& (0+255),w,b	;volatile
 19045  006E18  A4D8               	btfss	status,2,c
 19046  006E1A  D002               	goto	l1745
 19047                           
 19048                           ; BSR set to: 1
 19049                           ;inputs_MC50.c: 638:     {;inputs_MC50.c: 639:            security.SecurityBar8K2Timer++
      +                          ;
 19050  006E1C  2B73               	incf	(_security+9)& (0+255),f,b	;volatile
 19051                           
 19052                           ;inputs_MC50.c: 640:     }
 19053  006E1E  D004               	goto	l1746
 19054  006E20                     l1745:
 19055                           
 19056                           ; BSR set to: 1
 19057                           ;inputs_MC50.c: 643:     {;inputs_MC50.c: 644:             security.SecurityBar8K2OLD = 
      +                          security.SecurityBar8K2AUX;
 19058  006E20  C171  F172         	movff	_security+7,_security+8	;volatile
 19059                           
 19060                           ; BSR set to: 1
 19061                           ;inputs_MC50.c: 645:             security.SecurityBar8K2Timer=0;
 19062  006E24  0E00               	movlw	0
 19063  006E26  6F73               	movwf	(_security+9)& (0+255),b	;volatile
 19064  006E28                     l1746:
 19065                           
 19066                           ; BSR set to: 1
 19067                           ;inputs_MC50.c: 649:     if (security.SecurityBar8K2Timer>=( 50/50))
 19068  006E28  5173               	movf	(_security+9)& (0+255),w,b	;volatile
 19069  006E2A  A4D8               	btfss	status,2,c
 19070                           
 19071                           ; BSR set to: 1
 19072                           ;inputs_MC50.c: 650:     {;inputs_MC50.c: 651:         security.SecurityBar8K2STATE=secu
      +                          rity.SecurityBar8K2AUX;
 19073  006E2C  C171  F174         	movff	_security+7,_security+10	;volatile
 19074                           
 19075                           ; BSR set to: 1
 19076                           ;inputs_MC50.c: 655:     if (var_sys_NVM.securityBandType == 0)
 19077  006E30  0100               	movlb	0	; () banked
 19078  006E32  51A2               	movf	(_var_sys_NVM+10)& (0+255),w,b	;volatile
 19079  006E34  A4D8               	btfss	status,2,c
 19080  006E36  D00D               	goto	l1748
 19081                           
 19082                           ; BSR set to: 0
 19083                           ;inputs_MC50.c: 656:     {;inputs_MC50.c: 657:         if(security.SecurityBarSTATE==0 &
      +                          & security.SecurityBar8K2STATE==1)
 19084  006E38  0101               	movlb	1	; () banked
 19085  006E3A  5170               	movf	(_security+6)& (0+255),w,b	;volatile
 19086  006E3C  A4D8               	btfss	status,2,c
 19087  006E3E  D006               	goto	l17003
 19088                           
 19089                           ; BSR set to: 1
 19090  006E40  0574               	decf	(_security+10)& (0+255),w,b	;volatile
 19091  006E42  A4D8               	btfss	status,2,c
 19092  006E44  D003               	goto	l17003
 19093                           
 19094                           ; BSR set to: 1
 19095                           ;inputs_MC50.c: 658:         {;inputs_MC50.c: 659:             var_sys.SecurityBarIsObst
      +                          ructed = NO;
 19096  006E46  0E00               	movlw	0
 19097  006E48  6F02               	movwf	(_var_sys+2)& (0+255),b	;volatile
 19098                           
 19099                           ;inputs_MC50.c: 660:         }
 19100  006E4A  0012               	return	
 19101  006E4C                     l17003:
 19102                           
 19103                           ; BSR set to: 1
 19104                           ;inputs_MC50.c: 662:         {;inputs_MC50.c: 663:             var_sys.SecurityBarIsObst
      +                          ructed = YES;
 19105  006E4C  0E01               	movlw	1
 19106  006E4E  6F02               	movwf	(_var_sys+2)& (0+255),b	;volatile
 19107  006E50  0012               	return	
 19108  006E52                     l1748:
 19109                           
 19110                           ; BSR set to: 0
 19111                           ;inputs_MC50.c: 667:     {;inputs_MC50.c: 668:         var_sys.SecurityBarIsObstructed =
      +                           security.SecurityBarSTATE;
 19112  006E52  C170  F102         	movff	_security+6,_var_sys+2	;volatile
 19113  006E56  0012               	return		;funcret
 19114  006E58                     __end_of_readInputs:
 19115                           	callstack 0
 19116                           
 19117 ;; *************** function _loadNVM_VarSystem *****************
 19118 ;; Defined at:
 19119 ;;		line 151 in file "controlMemory_MC50.c"
 19120 ;; Parameters:    Size  Location     Type
 19121 ;;		None
 19122 ;; Auto vars:     Size  Location     Type
 19123 ;;		None
 19124 ;; Return value:  Size  Location     Type
 19125 ;;                  1    wreg      void 
 19126 ;; Registers used:
 19127 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19128 ;; Tracked objects:
 19129 ;;		On entry : 3F/0
 19130 ;;		On exit  : 0/0
 19131 ;;		Unchanged: 0/0
 19132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19136 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19137 ;;Total ram usage:        0 bytes
 19138 ;; Hardware stack levels used: 1
 19139 ;; Hardware stack levels required when called: 15
 19140 ;; This function calls:
 19141 ;;		_I2C1_Read1ByteRegister
 19142 ;;		_ResetDefaultMemory
 19143 ;;		_SaveNVM_VarSystem
 19144 ;;		_checkNVM_VarSystem
 19145 ;;		_i2c_readDataBlock
 19146 ;; This function is called by:
 19147 ;;		_main
 19148 ;; This function uses a non-reentrant model
 19149 ;;
 19150                           
 19151                           	psect	text69
 19152  0067B8                     __ptext69:
 19153                           	callstack 0
 19154  0067B8                     _loadNVM_VarSystem:
 19155                           	callstack 15
 19156                           
 19157                           ; BSR set to: 0
 19158                           ;controlMemory_MC50.c: 153:     if((I2C1_Read1ByteRegister(0x50, 0) == 0xFF) && (I2C1_Re
      +                          ad1ByteRegister(0x50, 16) == 0xFF))
 19159                           
 19160                           ;incstack = 0
 19161  0067B8  0E00               	movlw	0
 19162  0067BA  6E22               	movwf	I2C1_Read1ByteRegister@reg^0,c
 19163  0067BC  0E50               	movlw	80
 19164  0067BE  EC03  F044         	call	_I2C1_Read1ByteRegister
 19165  0067C2  0AFF               	xorlw	255
 19166  0067C4  A4D8               	btfss	status,2,c
 19167  0067C6  D04C               	goto	l23221
 19168  0067C8  0E10               	movlw	16
 19169  0067CA  6E22               	movwf	I2C1_Read1ByteRegister@reg^0,c
 19170  0067CC  0E50               	movlw	80
 19171  0067CE  EC03  F044         	call	_I2C1_Read1ByteRegister
 19172  0067D2  0AFF               	xorlw	255
 19173  0067D4  A4D8               	btfss	status,2,c
 19174  0067D6  D044               	goto	l23221
 19175                           
 19176                           ;controlMemory_MC50.c: 154:     {;controlMemory_MC50.c: 155:         ResetDefaultMemory(
      +                          SC);
 19177  0067D8  0E00               	movlw	0
 19178  0067DA  EC5D  F030         	call	_ResetDefaultMemory
 19179                           
 19180                           ;controlMemory_MC50.c: 156:         var_sys_NVM.learningTimeToClose = 0;
 19181  0067DE  0E00               	movlw	0
 19182  0067E0  0100               	movlb	0	; () banked
 19183  0067E2  6FD0               	movwf	(_var_sys_NVM+56)& (0+255),b	;volatile
 19184  0067E4  0E00               	movlw	0
 19185  0067E6  6FD1               	movwf	(_var_sys_NVM+57)& (0+255),b	;volatile
 19186  0067E8  0E00               	movlw	0
 19187  0067EA  6FD2               	movwf	(_var_sys_NVM+58)& (0+255),b	;volatile
 19188  0067EC  0E00               	movlw	0
 19189  0067EE  6FD3               	movwf	(_var_sys_NVM+59)& (0+255),b	;volatile
 19190                           
 19191                           ; BSR set to: 0
 19192                           ;controlMemory_MC50.c: 157:         var_sys_NVM.learningTimeToOpen = 0;
 19193  0067F0  0E00               	movlw	0
 19194  0067F2  6FCC               	movwf	(_var_sys_NVM+52)& (0+255),b	;volatile
 19195  0067F4  0E00               	movlw	0
 19196  0067F6  6FCD               	movwf	(_var_sys_NVM+53)& (0+255),b	;volatile
 19197  0067F8  0E00               	movlw	0
 19198  0067FA  6FCE               	movwf	(_var_sys_NVM+54)& (0+255),b	;volatile
 19199  0067FC  0E00               	movlw	0
 19200  0067FE  6FCF               	movwf	(_var_sys_NVM+55)& (0+255),b	;volatile
 19201                           
 19202                           ; BSR set to: 0
 19203                           ;controlMemory_MC50.c: 158:         var_sys_NVM.learningCurrentNormalClose = 0;
 19204  006800  0E00               	movlw	0
 19205  006802  6FC9               	movwf	(_var_sys_NVM+49)& (0+255),b	;volatile
 19206  006804  0E00               	movlw	0
 19207  006806  6FC8               	movwf	(_var_sys_NVM+48)& (0+255),b	;volatile
 19208                           
 19209                           ; BSR set to: 0
 19210                           ;controlMemory_MC50.c: 159:         var_sys_NVM.learningCurrentNormalOpen = 0;
 19211  006808  0E00               	movlw	0
 19212  00680A  6FCB               	movwf	(_var_sys_NVM+51)& (0+255),b	;volatile
 19213  00680C  0E00               	movlw	0
 19214  00680E  6FCA               	movwf	(_var_sys_NVM+50)& (0+255),b	;volatile
 19215                           
 19216                           ; BSR set to: 0
 19217                           ;controlMemory_MC50.c: 160:         var_sys_NVM.learningCurrentDecelarationClose = 0;
 19218  006810  0E00               	movlw	0
 19219  006812  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 19220  006814  0E00               	movlw	0
 19221  006816  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 19222  006818  0E00               	movlw	0
 19223  00681A  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 19224  00681C  0E00               	movlw	0
 19225  00681E  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 19226                           
 19227                           ; BSR set to: 0
 19228                           ;controlMemory_MC50.c: 161:         var_sys_NVM.learningCurrentDecelarationOpen = 0;
 19229  006820  0E00               	movlw	0
 19230  006822  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 19231  006824  0E00               	movlw	0
 19232  006826  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 19233  006828  0E00               	movlw	0
 19234  00682A  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 19235  00682C  0E00               	movlw	0
 19236  00682E  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 19237                           
 19238                           ;controlMemory_MC50.c: 162:         SaveNVM_VarSystem(pageMemoryLearningVars);
 19239  006830  0E03               	movlw	3
 19240  006832  ECAF  F047         	call	_SaveNVM_VarSystem
 19241                           
 19242                           ;controlMemory_MC50.c: 163:         var_sys_NVM.positionRemotesFull = 0;
 19243  006836  0E00               	movlw	0
 19244  006838  0100               	movlb	0	; () banked
 19245  00683A  6FB8               	movwf	(_var_sys_NVM+32)& (0+255),b	;volatile
 19246                           
 19247                           ; BSR set to: 0
 19248                           ;controlMemory_MC50.c: 164:         var_sys_NVM.positionRemotesWalk = 0;
 19249  00683C  0E00               	movlw	0
 19250  00683E  6FB9               	movwf	(_var_sys_NVM+33)& (0+255),b	;volatile
 19251                           
 19252                           ; BSR set to: 0
 19253                           ;controlMemory_MC50.c: 165:         var_sys_NVM.OnlyRollingCode = NO;
 19254  006840  0E00               	movlw	0
 19255  006842  6FBE               	movwf	(_var_sys_NVM+38)& (0+255),b	;volatile
 19256                           
 19257                           ; BSR set to: 0
 19258                           ;controlMemory_MC50.c: 166:         var_sys_NVM.counterMoves = 0;
 19259  006844  0E00               	movlw	0
 19260  006846  6FBA               	movwf	(_var_sys_NVM+34)& (0+255),b	;volatile
 19261  006848  0E00               	movlw	0
 19262  00684A  6FBB               	movwf	(_var_sys_NVM+35)& (0+255),b	;volatile
 19263  00684C  0E00               	movlw	0
 19264  00684E  6FBC               	movwf	(_var_sys_NVM+36)& (0+255),b	;volatile
 19265  006850  0E00               	movlw	0
 19266  006852  6FBD               	movwf	(_var_sys_NVM+37)& (0+255),b	;volatile
 19267                           
 19268                           ;controlMemory_MC50.c: 167:        SaveNVM_VarSystem(pageMemoryCounters);
 19269  006854  0E02               	movlw	2
 19270  006856  ECAF  F047         	call	_SaveNVM_VarSystem
 19271                           
 19272                           ;controlMemory_MC50.c: 169:          var_sys_NVM.TypeofMotor = 0;
 19273  00685A  0E00               	movlw	0
 19274  00685C  0100               	movlb	0	; () banked
 19275  00685E  6FB4               	movwf	(_var_sys_NVM+28)& (0+255),b	;volatile
 19276  006860                     l23221:
 19277                           
 19278                           ;controlMemory_MC50.c: 172:     i2c_readDataBlock(0x50, (uint16_t)(pageMemoryP * 16),(ch
      +                          ar*)&var_sys_NVM,16);
 19279  006860  0E00               	movlw	0
 19280  006862  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 19281  006864  0E00               	movlw	0
 19282  006866  6E22               	movwf	i2c_readDataBlock@reg^0,c
 19283  006868  0E98               	movlw	low _var_sys_NVM
 19284  00686A  6E24               	movwf	i2c_readDataBlock@data^0,c
 19285  00686C  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
 19286  00686E  0E00               	movlw	0
 19287  006870  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 19288  006872  0E10               	movlw	16
 19289  006874  6E26               	movwf	i2c_readDataBlock@len^0,c
 19290  006876  0E50               	movlw	80
 19291  006878  EC1F  F041         	call	_i2c_readDataBlock
 19292                           
 19293                           ;controlMemory_MC50.c: 173:     i2c_readDataBlock(0x50, (uint16_t)(pageMemoryE * 16),(ch
      +                          ar*)&var_sys_NVM.homemPresente, 16);
 19294  00687C  0E00               	movlw	0
 19295  00687E  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 19296  006880  0E10               	movlw	16
 19297  006882  6E22               	movwf	i2c_readDataBlock@reg^0,c
 19298  006884  0EA8               	movlw	low (_var_sys_NVM+16)
 19299  006886  6E24               	movwf	i2c_readDataBlock@data^0,c
 19300  006888  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
 19301  00688A  0E00               	movlw	0
 19302  00688C  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 19303  00688E  0E10               	movlw	16
 19304  006890  6E26               	movwf	i2c_readDataBlock@len^0,c
 19305  006892  0E50               	movlw	80
 19306  006894  EC1F  F041         	call	_i2c_readDataBlock
 19307                           
 19308                           ;controlMemory_MC50.c: 174:     i2c_readDataBlock(0x50, (uint16_t)(pageMemoryCounters * 
      +                          16),(char*)&var_sys_NVM.positionRemotesFull,16);
 19309  006898  0E00               	movlw	0
 19310  00689A  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 19311  00689C  0E20               	movlw	32
 19312  00689E  6E22               	movwf	i2c_readDataBlock@reg^0,c
 19313  0068A0  0EB8               	movlw	low (_var_sys_NVM+32)
 19314  0068A2  6E24               	movwf	i2c_readDataBlock@data^0,c
 19315  0068A4  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
 19316  0068A6  0E00               	movlw	0
 19317  0068A8  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 19318  0068AA  0E10               	movlw	16
 19319  0068AC  6E26               	movwf	i2c_readDataBlock@len^0,c
 19320  0068AE  0E50               	movlw	80
 19321  0068B0  EC1F  F041         	call	_i2c_readDataBlock
 19322                           
 19323                           ;controlMemory_MC50.c: 175:     i2c_readDataBlock(0x50, (uint16_t)(pageMemoryLearningVar
      +                          s * 16),(char*)&var_sys_NVM.learningCurrentNormalClose, 16);
 19324  0068B4  0E00               	movlw	0
 19325  0068B6  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 19326  0068B8  0E30               	movlw	48
 19327  0068BA  6E22               	movwf	i2c_readDataBlock@reg^0,c
 19328  0068BC  0EC8               	movlw	low (_var_sys_NVM+48)
 19329  0068BE  6E24               	movwf	i2c_readDataBlock@data^0,c
 19330  0068C0  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
 19331  0068C2  0E00               	movlw	0
 19332  0068C4  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 19333  0068C6  0E10               	movlw	16
 19334  0068C8  6E26               	movwf	i2c_readDataBlock@len^0,c
 19335  0068CA  0E50               	movlw	80
 19336  0068CC  EC1F  F041         	call	_i2c_readDataBlock
 19337                           
 19338                           ;controlMemory_MC50.c: 178:     checkNVM_VarSystem();
 19339  0068D0  EC5A  F02C         	call	_checkNVM_VarSystem	;wreg free
 19340                           
 19341                           ;controlMemory_MC50.c: 180:     var_sys.actualCounterMoves=var_sys_NVM.counterMoves;
 19342  0068D4  C0BA  F13C         	movff	_var_sys_NVM+34,_var_sys+60	;volatile
 19343  0068D8  C0BB  F13D         	movff	_var_sys_NVM+35,_var_sys+61	;volatile
 19344  0068DC  C0BC  F13E         	movff	_var_sys_NVM+36,_var_sys+62	;volatile
 19345  0068E0  C0BD  F13F         	movff	_var_sys_NVM+37,_var_sys+63	;volatile
 19346  0068E4  0012               	return		;funcret
 19347  0068E6                     __end_of_loadNVM_VarSystem:
 19348                           	callstack 0
 19349                           
 19350 ;; *************** function _checkNVM_VarSystem *****************
 19351 ;; Defined at:
 19352 ;;		line 326 in file "controlMemory_MC50.c"
 19353 ;; Parameters:    Size  Location     Type
 19354 ;;		None
 19355 ;; Auto vars:     Size  Location     Type
 19356 ;;  saveParam       1   57[COMRAM] unsigned char 
 19357 ;; Return value:  Size  Location     Type
 19358 ;;                  1    wreg      void 
 19359 ;; Registers used:
 19360 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19361 ;; Tracked objects:
 19362 ;;		On entry : 0/2
 19363 ;;		On exit  : 0/0
 19364 ;;		Unchanged: 0/0
 19365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19367 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19369 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19370 ;;Total ram usage:        1 bytes
 19371 ;; Hardware stack levels used: 1
 19372 ;; Hardware stack levels required when called: 14
 19373 ;; This function calls:
 19374 ;;		_SaveNVM_VarSystem
 19375 ;; This function is called by:
 19376 ;;		_loadNVM_VarSystem
 19377 ;; This function uses a non-reentrant model
 19378 ;;
 19379                           
 19380                           	psect	text70
 19381  0058B4                     __ptext70:
 19382                           	callstack 0
 19383  0058B4                     _checkNVM_VarSystem:
 19384                           	callstack 15
 19385                           
 19386                           ;controlMemory_MC50.c: 328:     char saveParam;;controlMemory_MC50.c: 331:     saveParam
      +                           = 0;
 19387                           
 19388                           ;incstack = 0
 19389  0058B4  0E00               	movlw	0
 19390  0058B6  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19391                           
 19392                           ;controlMemory_MC50.c: 339:     if ( var_sys_NVM.decelarationOpen>45 )
 19393  0058B8  0E2D               	movlw	45
 19394  0058BA  0100               	movlb	0	; () banked
 19395  0058BC  6598               	cpfsgt	_var_sys_NVM& (0+255),b	;volatile
 19396  0058BE  D004               	goto	l21671
 19397                           
 19398                           ; BSR set to: 0
 19399                           ;controlMemory_MC50.c: 340:     {;controlMemory_MC50.c: 342:         var_sys_NVM.decelar
      +                          ationOpen = 3;
 19400  0058C0  0E03               	movlw	3
 19401  0058C2  6F98               	movwf	_var_sys_NVM& (0+255),b	;volatile
 19402                           
 19403                           ;controlMemory_MC50.c: 343:         saveParam=1;
 19404  0058C4  0E01               	movlw	1
 19405  0058C6  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19406  0058C8                     l21671:
 19407                           
 19408                           ; BSR set to: 0
 19409                           ;controlMemory_MC50.c: 346:     if ( var_sys_NVM.decelarationClose>45 )
 19410  0058C8  0E2D               	movlw	45
 19411  0058CA  6599               	cpfsgt	(_var_sys_NVM+1)& (0+255),b	;volatile
 19412  0058CC  D004               	goto	l1495
 19413                           
 19414                           ; BSR set to: 0
 19415                           ;controlMemory_MC50.c: 347:     {;controlMemory_MC50.c: 349:         var_sys_NVM.decelar
      +                          ationClose = 3;
 19416  0058CE  0E03               	movlw	3
 19417  0058D0  6F99               	movwf	(_var_sys_NVM+1)& (0+255),b	;volatile
 19418                           
 19419                           ;controlMemory_MC50.c: 350:         saveParam=1;
 19420  0058D2  0E01               	movlw	1
 19421  0058D4  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19422  0058D6                     l1495:
 19423                           
 19424                           ; BSR set to: 0
 19425                           ;controlMemory_MC50.c: 353:     if ( (var_sys_NVM.motorPower<1) || (var_sys_NVM.motorPow
      +                          er>9) )
 19426  0058D6  519A               	movf	(_var_sys_NVM+2)& (0+255),w,b	;volatile
 19427  0058D8  B4D8               	btfsc	status,2,c
 19428  0058DA  D003               	goto	u24950
 19429                           
 19430                           ; BSR set to: 0
 19431  0058DC  0E09               	movlw	9
 19432  0058DE  659A               	cpfsgt	(_var_sys_NVM+2)& (0+255),b	;volatile
 19433  0058E0  D004               	goto	l21679
 19434  0058E2                     u24950:
 19435                           
 19436                           ; BSR set to: 0
 19437                           ;controlMemory_MC50.c: 354:     {;controlMemory_MC50.c: 356:         var_sys_NVM.motorPo
      +                          wer = 9;
 19438  0058E2  0E09               	movlw	9
 19439  0058E4  6F9A               	movwf	(_var_sys_NVM+2)& (0+255),b	;volatile
 19440                           
 19441                           ;controlMemory_MC50.c: 357:         saveParam=1;
 19442  0058E6  0E01               	movlw	1
 19443  0058E8  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19444  0058EA                     l21679:
 19445                           
 19446                           ; BSR set to: 0
 19447                           ;controlMemory_MC50.c: 360:     if ( var_sys_NVM.motorSensitivity>9 )
 19448  0058EA  0E09               	movlw	9
 19449  0058EC  659B               	cpfsgt	(_var_sys_NVM+3)& (0+255),b	;volatile
 19450  0058EE  D004               	goto	l21683
 19451                           
 19452                           ; BSR set to: 0
 19453                           ;controlMemory_MC50.c: 361:     {;controlMemory_MC50.c: 363:         var_sys_NVM.motorSe
      +                          nsitivity = 0;
 19454  0058F0  0E00               	movlw	0
 19455  0058F2  6F9B               	movwf	(_var_sys_NVM+3)& (0+255),b	;volatile
 19456                           
 19457                           ;controlMemory_MC50.c: 364:         saveParam=1;
 19458  0058F4  0E01               	movlw	1
 19459  0058F6  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19460  0058F8                     l21683:
 19461                           
 19462                           ; BSR set to: 0
 19463                           ;controlMemory_MC50.c: 367:     if ( var_sys_NVM.walkTime>99 )
 19464  0058F8  0E63               	movlw	99
 19465  0058FA  659C               	cpfsgt	(_var_sys_NVM+4)& (0+255),b	;volatile
 19466  0058FC  D004               	goto	l21687
 19467                           
 19468                           ; BSR set to: 0
 19469                           ;controlMemory_MC50.c: 368:     {;controlMemory_MC50.c: 370:         var_sys_NVM.walkTim
      +                          e = 10;
 19470  0058FE  0E0A               	movlw	10
 19471  005900  6F9C               	movwf	(_var_sys_NVM+4)& (0+255),b	;volatile
 19472                           
 19473                           ;controlMemory_MC50.c: 371:         saveParam=1;
 19474  005902  0E01               	movlw	1
 19475  005904  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19476  005906                     l21687:
 19477                           
 19478                           ; BSR set to: 0
 19479                           ;controlMemory_MC50.c: 374:     if ( var_sys_NVM.autoTimeFullClose>99 )
 19480  005906  0E63               	movlw	99
 19481  005908  659D               	cpfsgt	(_var_sys_NVM+5)& (0+255),b	;volatile
 19482  00590A  D004               	goto	l21691
 19483                           
 19484                           ; BSR set to: 0
 19485                           ;controlMemory_MC50.c: 375:     {;controlMemory_MC50.c: 377:         var_sys_NVM.autoTim
      +                          eFullClose = 0;
 19486  00590C  0E00               	movlw	0
 19487  00590E  6F9D               	movwf	(_var_sys_NVM+5)& (0+255),b	;volatile
 19488                           
 19489                           ;controlMemory_MC50.c: 378:         saveParam=1;
 19490  005910  0E01               	movlw	1
 19491  005912  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19492  005914                     l21691:
 19493                           
 19494                           ; BSR set to: 0
 19495                           ;controlMemory_MC50.c: 381:     if ( var_sys_NVM.autoTimeWalkClose>99 )
 19496  005914  0E63               	movlw	99
 19497  005916  659E               	cpfsgt	(_var_sys_NVM+6)& (0+255),b	;volatile
 19498  005918  D004               	goto	l21695
 19499                           
 19500                           ; BSR set to: 0
 19501                           ;controlMemory_MC50.c: 382:     {;controlMemory_MC50.c: 384:         var_sys_NVM.autoTim
      +                          eWalkClose = 0;
 19502  00591A  0E00               	movlw	0
 19503  00591C  6F9E               	movwf	(_var_sys_NVM+6)& (0+255),b	;volatile
 19504                           
 19505                           ;controlMemory_MC50.c: 385:         saveParam=1;
 19506  00591E  0E01               	movlw	1
 19507  005920  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19508  005922                     l21695:
 19509                           
 19510                           ; BSR set to: 0
 19511                           ;controlMemory_MC50.c: 388:     if ( var_sys_NVM.photoCellIsON>1 )
 19512  005922  0E01               	movlw	1
 19513  005924  659F               	cpfsgt	(_var_sys_NVM+7)& (0+255),b	;volatile
 19514  005926  D004               	goto	l21699
 19515                           
 19516                           ; BSR set to: 0
 19517                           ;controlMemory_MC50.c: 389:     {;controlMemory_MC50.c: 391:         var_sys_NVM.photoCe
      +                          llIsON = 0;
 19518  005928  0E00               	movlw	0
 19519  00592A  6F9F               	movwf	(_var_sys_NVM+7)& (0+255),b	;volatile
 19520                           
 19521                           ;controlMemory_MC50.c: 392:         saveParam=1;
 19522  00592C  0E01               	movlw	1
 19523  00592E  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19524  005930                     l21699:
 19525                           
 19526                           ; BSR set to: 0
 19527                           ;controlMemory_MC50.c: 395:     if ( var_sys_NVM.photoCellInOpen>1 )
 19528  005930  0E01               	movlw	1
 19529  005932  65A0               	cpfsgt	(_var_sys_NVM+8)& (0+255),b	;volatile
 19530  005934  D004               	goto	l21703
 19531                           
 19532                           ; BSR set to: 0
 19533                           ;controlMemory_MC50.c: 396:     {;controlMemory_MC50.c: 398:         var_sys_NVM.photoCe
      +                          llInOpen = 0;
 19534  005936  0E00               	movlw	0
 19535  005938  6FA0               	movwf	(_var_sys_NVM+8)& (0+255),b	;volatile
 19536                           
 19537                           ;controlMemory_MC50.c: 399:         saveParam=1;
 19538  00593A  0E01               	movlw	1
 19539  00593C  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19540  00593E                     l21703:
 19541                           
 19542                           ; BSR set to: 0
 19543                           ;controlMemory_MC50.c: 402:     if ( var_sys_NVM.securityBandIsON>1 )
 19544  00593E  0E01               	movlw	1
 19545  005940  65A1               	cpfsgt	(_var_sys_NVM+9)& (0+255),b	;volatile
 19546  005942  D004               	goto	l21707
 19547                           
 19548                           ; BSR set to: 0
 19549                           ;controlMemory_MC50.c: 403:     {;controlMemory_MC50.c: 405:         var_sys_NVM.securit
      +                          yBandIsON = 0 ;
 19550  005944  0E00               	movlw	0
 19551  005946  6FA1               	movwf	(_var_sys_NVM+9)& (0+255),b	;volatile
 19552                           
 19553                           ;controlMemory_MC50.c: 406:         saveParam=1;
 19554  005948  0E01               	movlw	1
 19555  00594A  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19556  00594C                     l21707:
 19557                           
 19558                           ; BSR set to: 0
 19559                           ;controlMemory_MC50.c: 409:     if ( var_sys_NVM.securityBandType>1 )
 19560  00594C  0E01               	movlw	1
 19561  00594E  65A2               	cpfsgt	(_var_sys_NVM+10)& (0+255),b	;volatile
 19562  005950  D004               	goto	l21711
 19563                           
 19564                           ; BSR set to: 0
 19565                           ;controlMemory_MC50.c: 410:     {;controlMemory_MC50.c: 412:         var_sys_NVM.securit
      +                          yBandType = 1;
 19566  005952  0E01               	movlw	1
 19567  005954  6FA2               	movwf	(_var_sys_NVM+10)& (0+255),b	;volatile
 19568                           
 19569                           ;controlMemory_MC50.c: 413:         saveParam=1;
 19570  005956  0E01               	movlw	1
 19571  005958  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19572  00595A                     l21711:
 19573                           
 19574                           ; BSR set to: 0
 19575                           ;controlMemory_MC50.c: 416:     if ( var_sys_NVM.securityBandInOpen>1 )
 19576  00595A  0E01               	movlw	1
 19577  00595C  65A3               	cpfsgt	(_var_sys_NVM+11)& (0+255),b	;volatile
 19578  00595E  D004               	goto	l21715
 19579                           
 19580                           ; BSR set to: 0
 19581                           ;controlMemory_MC50.c: 417:     {;controlMemory_MC50.c: 419:         var_sys_NVM.securit
      +                          yBandInOpen = 0;
 19582  005960  0E00               	movlw	0
 19583  005962  6FA3               	movwf	(_var_sys_NVM+11)& (0+255),b	;volatile
 19584                           
 19585                           ;controlMemory_MC50.c: 420:         saveParam=1;
 19586  005964  0E01               	movlw	1
 19587  005966  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19588  005968                     l21715:
 19589                           
 19590                           ; BSR set to: 0
 19591                           ;controlMemory_MC50.c: 423:     if ( var_sys_NVM.operationMode>2 )
 19592  005968  0E02               	movlw	2
 19593  00596A  65A4               	cpfsgt	(_var_sys_NVM+12)& (0+255),b	;volatile
 19594  00596C  D004               	goto	l21719
 19595                           
 19596                           ; BSR set to: 0
 19597                           ;controlMemory_MC50.c: 424:     {;controlMemory_MC50.c: 426:         var_sys_NVM.operati
      +                          onMode = 0;
 19598  00596E  0E00               	movlw	0
 19599  005970  6FA4               	movwf	(_var_sys_NVM+12)& (0+255),b	;volatile
 19600                           
 19601                           ;controlMemory_MC50.c: 427:         saveParam=1;
 19602  005972  0E01               	movlw	1
 19603  005974  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19604  005976                     l21719:
 19605                           
 19606                           ; BSR set to: 0
 19607                           ;controlMemory_MC50.c: 430:     if ( var_sys_NVM.flashLightMode>3 )
 19608  005976  0E03               	movlw	3
 19609  005978  65A5               	cpfsgt	(_var_sys_NVM+13)& (0+255),b	;volatile
 19610  00597A  D004               	goto	l21723
 19611                           
 19612                           ; BSR set to: 0
 19613                           ;controlMemory_MC50.c: 431:     {;controlMemory_MC50.c: 433:         var_sys_NVM.flashLi
      +                          ghtMode = 0;
 19614  00597C  0E00               	movlw	0
 19615  00597E  6FA5               	movwf	(_var_sys_NVM+13)& (0+255),b	;volatile
 19616                           
 19617                           ;controlMemory_MC50.c: 434:         saveParam=1;
 19618  005980  0E01               	movlw	1
 19619  005982  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19620  005984                     l21723:
 19621                           
 19622                           ; BSR set to: 0
 19623                           ;controlMemory_MC50.c: 437:     if ( var_sys_NVM.programmingDistance>1 )
 19624  005984  0E01               	movlw	1
 19625  005986  65A6               	cpfsgt	(_var_sys_NVM+14)& (0+255),b	;volatile
 19626  005988  D004               	goto	l21727
 19627                           
 19628                           ; BSR set to: 0
 19629                           ;controlMemory_MC50.c: 438:     {;controlMemory_MC50.c: 440:         var_sys_NVM.program
      +                          mingDistance = 0;
 19630  00598A  0E00               	movlw	0
 19631  00598C  6FA6               	movwf	(_var_sys_NVM+14)& (0+255),b	;volatile
 19632                           
 19633                           ;controlMemory_MC50.c: 441:         saveParam=1;
 19634  00598E  0E01               	movlw	1
 19635  005990  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19636  005992                     l21727:
 19637                           
 19638                           ; BSR set to: 0
 19639                           ;controlMemory_MC50.c: 444:     if ( var_sys_NVM.decelarationSensivity>9 )
 19640  005992  0E09               	movlw	9
 19641  005994  65A7               	cpfsgt	(_var_sys_NVM+15)& (0+255),b	;volatile
 19642  005996  D004               	goto	l21731
 19643                           
 19644                           ; BSR set to: 0
 19645                           ;controlMemory_MC50.c: 445:     {;controlMemory_MC50.c: 447:         var_sys_NVM.decelar
      +                          ationSensivity = 0;
 19646  005998  0E00               	movlw	0
 19647  00599A  6FA7               	movwf	(_var_sys_NVM+15)& (0+255),b	;volatile
 19648                           
 19649                           ;controlMemory_MC50.c: 448:         saveParam=1;
 19650  00599C  0E01               	movlw	1
 19651  00599E  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19652  0059A0                     l21731:
 19653                           
 19654                           ; BSR set to: 0
 19655                           ;controlMemory_MC50.c: 453:     if ( var_sys_NVM.homemPresente>2 )
 19656  0059A0  0E02               	movlw	2
 19657  0059A2  65A8               	cpfsgt	(_var_sys_NVM+16)& (0+255),b	;volatile
 19658  0059A4  D004               	goto	l21735
 19659                           
 19660                           ; BSR set to: 0
 19661                           ;controlMemory_MC50.c: 454:     {;controlMemory_MC50.c: 456:         var_sys_NVM.homemPr
      +                          esente = 0;
 19662  0059A6  0E00               	movlw	0
 19663  0059A8  6FA8               	movwf	(_var_sys_NVM+16)& (0+255),b	;volatile
 19664                           
 19665                           ;controlMemory_MC50.c: 457:         saveParam=1;
 19666  0059AA  0E01               	movlw	1
 19667  0059AC  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19668  0059AE                     l21735:
 19669                           
 19670                           ; BSR set to: 0
 19671                           ;controlMemory_MC50.c: 460:     if ( var_sys_NVM.logicDigital>1 )
 19672  0059AE  0E01               	movlw	1
 19673  0059B0  65A9               	cpfsgt	(_var_sys_NVM+17)& (0+255),b	;volatile
 19674  0059B2  D004               	goto	l21739
 19675                           
 19676                           ; BSR set to: 0
 19677                           ;controlMemory_MC50.c: 461:     {;controlMemory_MC50.c: 463:         var_sys_NVM.logicDi
      +                          gital = 0;
 19678  0059B4  0E00               	movlw	0
 19679  0059B6  6FA9               	movwf	(_var_sys_NVM+17)& (0+255),b	;volatile
 19680                           
 19681                           ;controlMemory_MC50.c: 464:         saveParam=1;
 19682  0059B8  0E01               	movlw	1
 19683  0059BA  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19684  0059BC                     l21739:
 19685                           
 19686                           ; BSR set to: 0
 19687                           ;controlMemory_MC50.c: 467:     if ( var_sys_NVM.softStart>9 )
 19688  0059BC  0E09               	movlw	9
 19689  0059BE  65AA               	cpfsgt	(_var_sys_NVM+18)& (0+255),b	;volatile
 19690  0059C0  D004               	goto	l21743
 19691                           
 19692                           ; BSR set to: 0
 19693                           ;controlMemory_MC50.c: 468:     {;controlMemory_MC50.c: 470:         var_sys_NVM.softSta
      +                          rt = 0;
 19694  0059C2  0E00               	movlw	0
 19695  0059C4  6FAA               	movwf	(_var_sys_NVM+18)& (0+255),b	;volatile
 19696                           
 19697                           ;controlMemory_MC50.c: 471:         saveParam=1;
 19698  0059C6  0E01               	movlw	1
 19699  0059C8  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19700  0059CA                     l21743:
 19701                           
 19702                           ; BSR set to: 0
 19703                           ;controlMemory_MC50.c: 475:     if ( var_sys_NVM.ligthTime>99 )
 19704  0059CA  0E63               	movlw	99
 19705  0059CC  65AC               	cpfsgt	(_var_sys_NVM+20)& (0+255),b	;volatile
 19706  0059CE  D004               	goto	l21747
 19707                           
 19708                           ; BSR set to: 0
 19709                           ;controlMemory_MC50.c: 476:     {;controlMemory_MC50.c: 478:         var_sys_NVM.ligthTi
      +                          me = 3;
 19710  0059D0  0E03               	movlw	3
 19711  0059D2  6FAC               	movwf	(_var_sys_NVM+20)& (0+255),b	;volatile
 19712                           
 19713                           ;controlMemory_MC50.c: 479:         saveParam=1;
 19714  0059D4  0E01               	movlw	1
 19715  0059D6  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19716  0059D8                     l21747:
 19717                           
 19718                           ; BSR set to: 0
 19719                           ;controlMemory_MC50.c: 482:     if ( var_sys_NVM.folow_me>9 )
 19720  0059D8  0E09               	movlw	9
 19721  0059DA  65AD               	cpfsgt	(_var_sys_NVM+21)& (0+255),b	;volatile
 19722  0059DC  D004               	goto	l21751
 19723                           
 19724                           ; BSR set to: 0
 19725                           ;controlMemory_MC50.c: 483:     {;controlMemory_MC50.c: 485:         var_sys_NVM.folow_m
      +                          e = 0;
 19726  0059DE  0E00               	movlw	0
 19727  0059E0  6FAD               	movwf	(_var_sys_NVM+21)& (0+255),b	;volatile
 19728                           
 19729                           ;controlMemory_MC50.c: 486:         saveParam=1;
 19730  0059E2  0E01               	movlw	1
 19731  0059E4  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19732  0059E6                     l21751:
 19733                           
 19734                           ; BSR set to: 0
 19735                           ;controlMemory_MC50.c: 491:     if ( var_sys_NVM.electricBrake>1 )
 19736  0059E6  0E01               	movlw	1
 19737  0059E8  65AF               	cpfsgt	(_var_sys_NVM+23)& (0+255),b	;volatile
 19738  0059EA  D004               	goto	l1517
 19739                           
 19740                           ; BSR set to: 0
 19741                           ;controlMemory_MC50.c: 492:     {;controlMemory_MC50.c: 494:         var_sys_NVM.electri
      +                          cBrake = 0;
 19742  0059EC  0E00               	movlw	0
 19743  0059EE  6FAF               	movwf	(_var_sys_NVM+23)& (0+255),b	;volatile
 19744                           
 19745                           ;controlMemory_MC50.c: 495:         saveParam=1;
 19746  0059F0  0E01               	movlw	1
 19747  0059F2  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19748  0059F4                     l1517:
 19749                           
 19750                           ; BSR set to: 0
 19751                           ;controlMemory_MC50.c: 498:     if ( (var_sys_NVM.velocityDecelaration<1) || (var_sys_NV
      +                          M.velocityDecelaration>9) )
 19752  0059F4  51B0               	movf	(_var_sys_NVM+24)& (0+255),w,b	;volatile
 19753  0059F6  B4D8               	btfsc	status,2,c
 19754  0059F8  D003               	goto	u25160
 19755                           
 19756                           ; BSR set to: 0
 19757  0059FA  0E09               	movlw	9
 19758  0059FC  65B0               	cpfsgt	(_var_sys_NVM+24)& (0+255),b	;volatile
 19759  0059FE  D004               	goto	l21759
 19760  005A00                     u25160:
 19761                           
 19762                           ; BSR set to: 0
 19763                           ;controlMemory_MC50.c: 499:     {;controlMemory_MC50.c: 501:         var_sys_NVM.velocit
      +                          yDecelaration = 5;
 19764  005A00  0E05               	movlw	5
 19765  005A02  6FB0               	movwf	(_var_sys_NVM+24)& (0+255),b	;volatile
 19766                           
 19767                           ;controlMemory_MC50.c: 502:         saveParam=1;
 19768  005A04  0E01               	movlw	1
 19769  005A06  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19770  005A08                     l21759:
 19771                           
 19772                           ; BSR set to: 0
 19773                           ;controlMemory_MC50.c: 505:     if ( var_sys_NVM.flashRGBMode>3 )
 19774  005A08  0E03               	movlw	3
 19775  005A0A  65B1               	cpfsgt	(_var_sys_NVM+25)& (0+255),b	;volatile
 19776  005A0C  D004               	goto	l21763
 19777                           
 19778                           ; BSR set to: 0
 19779                           ;controlMemory_MC50.c: 506:     {;controlMemory_MC50.c: 508:         var_sys_NVM.flashRG
      +                          BMode = 3;
 19780  005A0E  0E03               	movlw	3
 19781  005A10  6FB1               	movwf	(_var_sys_NVM+25)& (0+255),b	;volatile
 19782                           
 19783                           ;controlMemory_MC50.c: 509:         saveParam=1;
 19784  005A12  0E01               	movlw	1
 19785  005A14  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19786  005A16                     l21763:
 19787                           
 19788                           ; BSR set to: 0
 19789                           ;controlMemory_MC50.c: 511:         if ( var_sys_NVM.Stopboton > 1 )
 19790  005A16  0E01               	movlw	1
 19791  005A18  65AE               	cpfsgt	(_var_sys_NVM+22)& (0+255),b	;volatile
 19792  005A1A  D004               	goto	l21767
 19793                           
 19794                           ; BSR set to: 0
 19795                           ;controlMemory_MC50.c: 512:     {;controlMemory_MC50.c: 514:         var_sys_NVM.Stopbot
      +                          on = 0 ;
 19796  005A1C  0E00               	movlw	0
 19797  005A1E  6FAE               	movwf	(_var_sys_NVM+22)& (0+255),b	;volatile
 19798                           
 19799                           ;controlMemory_MC50.c: 515:         saveParam=1;
 19800  005A20  0E01               	movlw	1
 19801  005A22  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19802  005A24                     l21767:
 19803                           
 19804                           ; BSR set to: 0
 19805                           ;controlMemory_MC50.c: 517:         if ( var_sys_NVM.Direction_motor>1 )
 19806  005A24  0E01               	movlw	1
 19807  005A26  65B3               	cpfsgt	(_var_sys_NVM+27)& (0+255),b	;volatile
 19808  005A28  D004               	goto	l21771
 19809                           
 19810                           ; BSR set to: 0
 19811                           ;controlMemory_MC50.c: 518:     {;controlMemory_MC50.c: 520:         var_sys_NVM.Directi
      +                          on_motor = 1;
 19812  005A2A  0E01               	movlw	1
 19813  005A2C  6FB3               	movwf	(_var_sys_NVM+27)& (0+255),b	;volatile
 19814                           
 19815                           ;controlMemory_MC50.c: 521:         saveParam=1;
 19816  005A2E  0E01               	movlw	1
 19817  005A30  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19818  005A32                     l21771:
 19819                           
 19820                           ; BSR set to: 0
 19821                           ;controlMemory_MC50.c: 523:         if ( var_sys_NVM.softstop>9 )
 19822  005A32  0E09               	movlw	9
 19823  005A34  65AB               	cpfsgt	(_var_sys_NVM+19)& (0+255),b	;volatile
 19824  005A36  D004               	goto	l1524
 19825                           
 19826                           ; BSR set to: 0
 19827                           ;controlMemory_MC50.c: 524:     {;controlMemory_MC50.c: 526:         var_sys_NVM.softsto
      +                          p = 0;
 19828  005A38  0E00               	movlw	0
 19829  005A3A  6FAB               	movwf	(_var_sys_NVM+19)& (0+255),b	;volatile
 19830                           
 19831                           ;controlMemory_MC50.c: 527:         saveParam=1;
 19832  005A3C  0E01               	movlw	1
 19833  005A3E  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19834  005A40                     l1524:
 19835                           
 19836                           ; BSR set to: 0
 19837                           ;controlMemory_MC50.c: 552:     if ( saveParam != 0 )
 19838  005A40  503A               	movf	checkNVM_VarSystem@saveParam^0,w,c
 19839  005A42  B4D8               	btfsc	status,2,c
 19840  005A44  0012               	return	
 19841                           
 19842                           ; BSR set to: 0
 19843                           ;controlMemory_MC50.c: 553:     {;controlMemory_MC50.c: 554:         SaveNVM_VarSystem(p
      +                          ageMemoryP);
 19844  005A46  0E00               	movlw	0
 19845  005A48  ECAF  F047         	call	_SaveNVM_VarSystem
 19846                           
 19847                           ;controlMemory_MC50.c: 555:         SaveNVM_VarSystem(pageMemoryE);
 19848  005A4C  0E01               	movlw	1
 19849  005A4E  ECAF  F047         	call	_SaveNVM_VarSystem
 19850  005A52  0012               	return		;funcret
 19851  005A54                     __end_of_checkNVM_VarSystem:
 19852                           	callstack 0
 19853                           
 19854 ;; *************** function _ResetDefaultMemory *****************
 19855 ;; Defined at:
 19856 ;;		line 198 in file "controlMemory_MC50.c"
 19857 ;; Parameters:    Size  Location     Type
 19858 ;;  type            1    wreg     unsigned char 
 19859 ;; Auto vars:     Size  Location     Type
 19860 ;;  type            1   57[COMRAM] unsigned char 
 19861 ;; Return value:  Size  Location     Type
 19862 ;;                  1    wreg      void 
 19863 ;; Registers used:
 19864 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19865 ;; Tracked objects:
 19866 ;;		On entry : 31/0
 19867 ;;		On exit  : 0/0
 19868 ;;		Unchanged: 0/0
 19869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19871 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19873 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19874 ;;Total ram usage:        1 bytes
 19875 ;; Hardware stack levels used: 1
 19876 ;; Hardware stack levels required when called: 14
 19877 ;; This function calls:
 19878 ;;		_SaveNVM_VarSystem
 19879 ;; This function is called by:
 19880 ;;		_loadNVM_VarSystem
 19881 ;;		_sm_execute_menuConfiguration
 19882 ;; This function uses a non-reentrant model
 19883 ;;
 19884                           
 19885                           	psect	text71
 19886  0060BA                     __ptext71:
 19887                           	callstack 0
 19888  0060BA                     _ResetDefaultMemory:
 19889                           	callstack 14
 19890                           
 19891                           ;incstack = 0
 19892                           ;ResetDefaultMemory@type stored from wreg
 19893  0060BA  6E3A               	movwf	ResetDefaultMemory@type^0,c
 19894                           
 19895                           ;controlMemory_MC50.c: 198: void ResetDefaultMemory(unsigned char type);controlMemory_MC
      +                          50.c: 199: {;controlMemory_MC50.c: 202:     var_sys_NVM.decelarationOpen = 3;
 19896  0060BC  0E03               	movlw	3
 19897  0060BE  0100               	movlb	0	; () banked
 19898  0060C0  6F98               	movwf	_var_sys_NVM& (0+255),b	;volatile
 19899                           
 19900                           ;controlMemory_MC50.c: 203:     var_sys_NVM.motorPower = 9;
 19901  0060C2  0E09               	movlw	9
 19902  0060C4  6F9A               	movwf	(_var_sys_NVM+2)& (0+255),b	;volatile
 19903                           
 19904                           ;controlMemory_MC50.c: 204:     var_sys_NVM.decelarationClose = 3;
 19905  0060C6  0E03               	movlw	3
 19906  0060C8  6F99               	movwf	(_var_sys_NVM+1)& (0+255),b	;volatile
 19907                           
 19908                           ;controlMemory_MC50.c: 205:     var_sys_NVM.photoCellIsON = 0;
 19909  0060CA  0E00               	movlw	0
 19910  0060CC  6F9F               	movwf	(_var_sys_NVM+7)& (0+255),b	;volatile
 19911                           
 19912                           ;controlMemory_MC50.c: 206:     var_sys_NVM.photoCellInOpen = 0;
 19913  0060CE  0E00               	movlw	0
 19914  0060D0  6FA0               	movwf	(_var_sys_NVM+8)& (0+255),b	;volatile
 19915                           
 19916                           ;controlMemory_MC50.c: 207:     var_sys_NVM.securityBandIsON = 0 ;
 19917  0060D2  0E00               	movlw	0
 19918  0060D4  6FA1               	movwf	(_var_sys_NVM+9)& (0+255),b	;volatile
 19919                           
 19920                           ;controlMemory_MC50.c: 208:     var_sys_NVM.securityBandType = 1;
 19921  0060D6  0E01               	movlw	1
 19922  0060D8  6FA2               	movwf	(_var_sys_NVM+10)& (0+255),b	;volatile
 19923                           
 19924                           ;controlMemory_MC50.c: 209:     var_sys_NVM.securityBandInOpen = 0;
 19925  0060DA  0E00               	movlw	0
 19926  0060DC  6FA3               	movwf	(_var_sys_NVM+11)& (0+255),b	;volatile
 19927                           
 19928                           ;controlMemory_MC50.c: 210:     var_sys_NVM.flashLightMode = 0;
 19929  0060DE  0E00               	movlw	0
 19930  0060E0  6FA5               	movwf	(_var_sys_NVM+13)& (0+255),b	;volatile
 19931                           
 19932                           ;controlMemory_MC50.c: 211:     var_sys_NVM.programmingDistance = 0;
 19933  0060E2  0E00               	movlw	0
 19934  0060E4  6FA6               	movwf	(_var_sys_NVM+14)& (0+255),b	;volatile
 19935                           
 19936                           ;controlMemory_MC50.c: 212:     var_sys_NVM.decelarationSensivity = 0;
 19937  0060E6  0E00               	movlw	0
 19938  0060E8  6FA7               	movwf	(_var_sys_NVM+15)& (0+255),b	;volatile
 19939                           
 19940                           ;controlMemory_MC50.c: 213:     var_sys_NVM.homemPresente = 0;
 19941  0060EA  0E00               	movlw	0
 19942  0060EC  6FA8               	movwf	(_var_sys_NVM+16)& (0+255),b	;volatile
 19943                           
 19944                           ;controlMemory_MC50.c: 214:     var_sys_NVM.autoTimeWalkClose = 0;
 19945  0060EE  0E00               	movlw	0
 19946  0060F0  6F9E               	movwf	(_var_sys_NVM+6)& (0+255),b	;volatile
 19947                           
 19948                           ;controlMemory_MC50.c: 215:     var_sys_NVM.ligthTime = 3;
 19949  0060F2  0E03               	movlw	3
 19950  0060F4  6FAC               	movwf	(_var_sys_NVM+20)& (0+255),b	;volatile
 19951                           
 19952                           ;controlMemory_MC50.c: 216:     var_sys_NVM.folow_me = 0;
 19953  0060F6  0E00               	movlw	0
 19954  0060F8  6FAD               	movwf	(_var_sys_NVM+21)& (0+255),b	;volatile
 19955                           
 19956                           ;controlMemory_MC50.c: 217:     var_sys_NVM.electricBrake = 0;
 19957  0060FA  0E00               	movlw	0
 19958  0060FC  6FAF               	movwf	(_var_sys_NVM+23)& (0+255),b	;volatile
 19959                           
 19960                           ;controlMemory_MC50.c: 218:     var_sys_NVM.autoTimeWalkClose = 0;
 19961  0060FE  0E00               	movlw	0
 19962  006100  6F9E               	movwf	(_var_sys_NVM+6)& (0+255),b	;volatile
 19963                           
 19964                           ;controlMemory_MC50.c: 219:     var_sys_NVM.Direction_motor = 1 ;
 19965  006102  0E01               	movlw	1
 19966  006104  6FB3               	movwf	(_var_sys_NVM+27)& (0+255),b	;volatile
 19967                           
 19968                           ; BSR set to: 0
 19969                           ;controlMemory_MC50.c: 222:     if (type == SC){
 19970  006106  503A               	movf	ResetDefaultMemory@type^0,w,c
 19971  006108  A4D8               	btfss	status,2,c
 19972  00610A  D014               	goto	l20467
 19973                           
 19974                           ; BSR set to: 0
 19975                           ;controlMemory_MC50.c: 224:         var_sys_NVM.motorSensitivity = 0;
 19976  00610C  0E00               	movlw	0
 19977  00610E  6F9B               	movwf	(_var_sys_NVM+3)& (0+255),b	;volatile
 19978                           
 19979                           ;controlMemory_MC50.c: 225:         var_sys_NVM.logicDigital = 0;
 19980  006110  0E00               	movlw	0
 19981  006112  6FA9               	movwf	(_var_sys_NVM+17)& (0+255),b	;volatile
 19982                           
 19983                           ;controlMemory_MC50.c: 226:         var_sys_NVM.Stopboton = 0;
 19984  006114  0E00               	movlw	0
 19985  006116  6FAE               	movwf	(_var_sys_NVM+22)& (0+255),b	;volatile
 19986                           
 19987                           ;controlMemory_MC50.c: 227:         var_sys_NVM.autoTimeFullClose = 0;
 19988  006118  0E00               	movlw	0
 19989  00611A  6F9D               	movwf	(_var_sys_NVM+5)& (0+255),b	;volatile
 19990                           
 19991                           ;controlMemory_MC50.c: 228:         var_sys_NVM.operationMode = 0;
 19992  00611C  0E00               	movlw	0
 19993  00611E  6FA4               	movwf	(_var_sys_NVM+12)& (0+255),b	;volatile
 19994                           
 19995                           ;controlMemory_MC50.c: 229:         var_sys_NVM.velocityDecelaration = 5;
 19996  006120  0E05               	movlw	5
 19997  006122  6FB0               	movwf	(_var_sys_NVM+24)& (0+255),b	;volatile
 19998                           
 19999                           ;controlMemory_MC50.c: 230:         var_sys_NVM.flashRGBMode = 3;
 20000  006124  0E03               	movlw	3
 20001  006126  6FB1               	movwf	(_var_sys_NVM+25)& (0+255),b	;volatile
 20002                           
 20003                           ;controlMemory_MC50.c: 231:         var_sys_NVM.softstop = 0;
 20004  006128  0E00               	movlw	0
 20005  00612A  6FAB               	movwf	(_var_sys_NVM+19)& (0+255),b	;volatile
 20006                           
 20007                           ;controlMemory_MC50.c: 232:         var_sys_NVM.softStart = 0;
 20008  00612C  0E00               	movlw	0
 20009  00612E  6FAA               	movwf	(_var_sys_NVM+18)& (0+255),b	;volatile
 20010                           
 20011                           ;controlMemory_MC50.c: 233:         var_sys_NVM.walkTime = 10;
 20012  006130  0E0A               	movlw	10
 20013  006132  D039               	goto	L82
 20014  006134                     l20467:
 20015                           
 20016                           ; BSR set to: 0
 20017  006134  043A               	decf	ResetDefaultMemory@type^0,w,c
 20018  006136  A4D8               	btfss	status,2,c
 20019  006138  D01B               	goto	l20471
 20020                           
 20021                           ; BSR set to: 0
 20022                           ;controlMemory_MC50.c: 237:         var_sys_NVM.decelarationClose = 4;
 20023  00613A  0E04               	movlw	4
 20024  00613C  6F99               	movwf	(_var_sys_NVM+1)& (0+255),b	;volatile
 20025                           
 20026                           ;controlMemory_MC50.c: 238:         var_sys_NVM.decelarationOpen = 4;
 20027  00613E  0E04               	movlw	4
 20028  006140  6F98               	movwf	_var_sys_NVM& (0+255),b	;volatile
 20029                           
 20030                           ;controlMemory_MC50.c: 239:         var_sys_NVM.motorSensitivity = 4;
 20031  006142  0E04               	movlw	4
 20032  006144  6F9B               	movwf	(_var_sys_NVM+3)& (0+255),b	;volatile
 20033                           
 20034                           ;controlMemory_MC50.c: 240:         var_sys_NVM.logicDigital = 1;
 20035  006146  0E01               	movlw	1
 20036  006148  6FA9               	movwf	(_var_sys_NVM+17)& (0+255),b	;volatile
 20037                           
 20038                           ;controlMemory_MC50.c: 241:         var_sys_NVM.Stopboton = 1;
 20039  00614A  0E01               	movlw	1
 20040  00614C  6FAE               	movwf	(_var_sys_NVM+22)& (0+255),b	;volatile
 20041                           
 20042                           ;controlMemory_MC50.c: 242:         var_sys_NVM.autoTimeFullClose = 0;
 20043  00614E  0E00               	movlw	0
 20044  006150  6F9D               	movwf	(_var_sys_NVM+5)& (0+255),b	;volatile
 20045                           
 20046                           ;controlMemory_MC50.c: 243:         var_sys_NVM.operationMode = 0;
 20047  006152  0E00               	movlw	0
 20048  006154  6FA4               	movwf	(_var_sys_NVM+12)& (0+255),b	;volatile
 20049                           
 20050                           ;controlMemory_MC50.c: 244:         var_sys_NVM.velocityDecelaration = 5;
 20051  006156  0E05               	movlw	5
 20052  006158  6FB0               	movwf	(_var_sys_NVM+24)& (0+255),b	;volatile
 20053                           
 20054                           ;controlMemory_MC50.c: 245:         var_sys_NVM.flashRGBMode = 3;
 20055  00615A  0E03               	movlw	3
 20056  00615C  6FB1               	movwf	(_var_sys_NVM+25)& (0+255),b	;volatile
 20057                           
 20058                           ;controlMemory_MC50.c: 246:         var_sys_NVM.softstop = 0;
 20059  00615E  0E00               	movlw	0
 20060  006160  6FAB               	movwf	(_var_sys_NVM+19)& (0+255),b	;volatile
 20061                           
 20062                           ;controlMemory_MC50.c: 247:         var_sys_NVM.softStart = 5;
 20063  006162  0E05               	movlw	5
 20064  006164  6FAA               	movwf	(_var_sys_NVM+18)& (0+255),b	;volatile
 20065                           
 20066                           ;controlMemory_MC50.c: 248:         var_sys_NVM.walkTime = 0;
 20067  006166  0E00               	movlw	0
 20068  006168  6F9C               	movwf	(_var_sys_NVM+4)& (0+255),b	;volatile
 20069                           
 20070                           ;controlMemory_MC50.c: 249:         var_sys_NVM.Direction_motor = 0 ;
 20071  00616A  0E00               	movlw	0
 20072  00616C  6FB3               	movwf	(_var_sys_NVM+27)& (0+255),b	;volatile
 20073                           
 20074                           ;controlMemory_MC50.c: 251:     }
 20075  00616E  D01C               	goto	l20475
 20076  006170                     l20471:
 20077                           
 20078                           ; BSR set to: 0
 20079  006170  0E02               	movlw	2
 20080  006172  183A               	xorwf	ResetDefaultMemory@type^0,w,c
 20081  006174  A4D8               	btfss	status,2,c
 20082  006176  D018               	goto	l20475
 20083                           
 20084                           ; BSR set to: 0
 20085                           ;controlMemory_MC50.c: 253:         var_sys_NVM.decelarationClose = 6;
 20086  006178  0E06               	movlw	6
 20087  00617A  6F99               	movwf	(_var_sys_NVM+1)& (0+255),b	;volatile
 20088                           
 20089                           ;controlMemory_MC50.c: 254:         var_sys_NVM.decelarationOpen = 2;
 20090  00617C  0E02               	movlw	2
 20091  00617E  6F98               	movwf	_var_sys_NVM& (0+255),b	;volatile
 20092                           
 20093                           ;controlMemory_MC50.c: 255:         var_sys_NVM.motorSensitivity = 0;
 20094  006180  0E00               	movlw	0
 20095  006182  6F9B               	movwf	(_var_sys_NVM+3)& (0+255),b	;volatile
 20096                           
 20097                           ;controlMemory_MC50.c: 256:         var_sys_NVM.logicDigital = 0;
 20098  006184  0E00               	movlw	0
 20099  006186  6FA9               	movwf	(_var_sys_NVM+17)& (0+255),b	;volatile
 20100                           
 20101                           ;controlMemory_MC50.c: 257:         var_sys_NVM.Stopboton = 0;
 20102  006188  0E00               	movlw	0
 20103  00618A  6FAE               	movwf	(_var_sys_NVM+22)& (0+255),b	;volatile
 20104                           
 20105                           ;controlMemory_MC50.c: 258:         var_sys_NVM.autoTimeFullClose = 0;
 20106  00618C  0E00               	movlw	0
 20107  00618E  6F9D               	movwf	(_var_sys_NVM+5)& (0+255),b	;volatile
 20108                           
 20109                           ;controlMemory_MC50.c: 259:         var_sys_NVM.operationMode = 2;
 20110  006190  0E02               	movlw	2
 20111  006192  6FA4               	movwf	(_var_sys_NVM+12)& (0+255),b	;volatile
 20112                           
 20113                           ;controlMemory_MC50.c: 260:         var_sys_NVM.velocityDecelaration = 5;
 20114  006194  0E05               	movlw	5
 20115  006196  6FB0               	movwf	(_var_sys_NVM+24)& (0+255),b	;volatile
 20116                           
 20117                           ;controlMemory_MC50.c: 261:         var_sys_NVM.flashRGBMode = 1;
 20118  006198  0E01               	movlw	1
 20119  00619A  6FB1               	movwf	(_var_sys_NVM+25)& (0+255),b	;volatile
 20120                           
 20121                           ;controlMemory_MC50.c: 262:         var_sys_NVM.softstop = 5;
 20122  00619C  0E05               	movlw	5
 20123  00619E  6FAB               	movwf	(_var_sys_NVM+19)& (0+255),b	;volatile
 20124                           
 20125                           ;controlMemory_MC50.c: 263:         var_sys_NVM.softStart = 0;
 20126  0061A0  0E00               	movlw	0
 20127  0061A2  6FAA               	movwf	(_var_sys_NVM+18)& (0+255),b	;volatile
 20128                           
 20129                           ;controlMemory_MC50.c: 264:         var_sys_NVM.walkTime = 0;
 20130  0061A4  0E00               	movlw	0
 20131  0061A6                     L82:
 20132  0061A6  6F9C               	movwf	(_var_sys_NVM+4)& (0+255),b	;volatile
 20133  0061A8                     l20475:
 20134                           
 20135                           ; BSR set to: 0
 20136                           ;controlMemory_MC50.c: 272:     SaveNVM_VarSystem(pageMemoryE);
 20137  0061A8  0E01               	movlw	1
 20138  0061AA  ECAF  F047         	call	_SaveNVM_VarSystem
 20139                           
 20140                           ;controlMemory_MC50.c: 273:     SaveNVM_VarSystem(pageMemoryP);
 20141  0061AE  0E00               	movlw	0
 20142  0061B0  ECAF  F047         	call	_SaveNVM_VarSystem
 20143                           
 20144                           ;controlMemory_MC50.c: 278:     var_sys_NVM.learningTimeToClose = 0;
 20145  0061B4  0E00               	movlw	0
 20146  0061B6  0100               	movlb	0	; () banked
 20147  0061B8  6FD0               	movwf	(_var_sys_NVM+56)& (0+255),b	;volatile
 20148  0061BA  0E00               	movlw	0
 20149  0061BC  6FD1               	movwf	(_var_sys_NVM+57)& (0+255),b	;volatile
 20150  0061BE  0E00               	movlw	0
 20151  0061C0  6FD2               	movwf	(_var_sys_NVM+58)& (0+255),b	;volatile
 20152  0061C2  0E00               	movlw	0
 20153  0061C4  6FD3               	movwf	(_var_sys_NVM+59)& (0+255),b	;volatile
 20154                           
 20155                           ;controlMemory_MC50.c: 279:     var_sys_NVM.learningTimeToOpen = 0;
 20156  0061C6  0E00               	movlw	0
 20157  0061C8  6FCC               	movwf	(_var_sys_NVM+52)& (0+255),b	;volatile
 20158  0061CA  0E00               	movlw	0
 20159  0061CC  6FCD               	movwf	(_var_sys_NVM+53)& (0+255),b	;volatile
 20160  0061CE  0E00               	movlw	0
 20161  0061D0  6FCE               	movwf	(_var_sys_NVM+54)& (0+255),b	;volatile
 20162  0061D2  0E00               	movlw	0
 20163  0061D4  6FCF               	movwf	(_var_sys_NVM+55)& (0+255),b	;volatile
 20164                           
 20165                           ;controlMemory_MC50.c: 280:     var_sys_NVM.learningCurrentNormalClose = 0;
 20166  0061D6  0E00               	movlw	0
 20167  0061D8  6FC9               	movwf	(_var_sys_NVM+49)& (0+255),b	;volatile
 20168  0061DA  0E00               	movlw	0
 20169  0061DC  6FC8               	movwf	(_var_sys_NVM+48)& (0+255),b	;volatile
 20170                           
 20171                           ;controlMemory_MC50.c: 281:     var_sys_NVM.learningCurrentNormalOpen = 0;
 20172  0061DE  0E00               	movlw	0
 20173  0061E0  6FCB               	movwf	(_var_sys_NVM+51)& (0+255),b	;volatile
 20174  0061E2  0E00               	movlw	0
 20175  0061E4  6FCA               	movwf	(_var_sys_NVM+50)& (0+255),b	;volatile
 20176                           
 20177                           ;controlMemory_MC50.c: 282:     var_sys_NVM.learningCurrentDecelarationClose = 0;
 20178  0061E6  0E00               	movlw	0
 20179  0061E8  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 20180  0061EA  0E00               	movlw	0
 20181  0061EC  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 20182  0061EE  0E00               	movlw	0
 20183  0061F0  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 20184  0061F2  0E00               	movlw	0
 20185  0061F4  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 20186                           
 20187                           ;controlMemory_MC50.c: 283:     var_sys_NVM.learningCurrentDecelarationOpen = 0;
 20188  0061F6  0E00               	movlw	0
 20189  0061F8  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 20190  0061FA  0E00               	movlw	0
 20191  0061FC  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 20192  0061FE  0E00               	movlw	0
 20193  006200  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 20194  006202  0E00               	movlw	0
 20195  006204  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 20196                           
 20197                           ; BSR set to: 0
 20198                           ;controlMemory_MC50.c: 289:     if ((PORTAbits.RA2 == 0) && (PORTAbits.RA1 == 0) && (POR
      +                          TBbits.RB0 == 0)&&(PORTAbits.RA5==0)){
 20199  006206  A48D               	btfss	141,2,c	;volatile
 20200                           
 20201                           ; BSR set to: 0
 20202  006208  B28D               	btfsc	141,1,c	;volatile
 20203  00620A  D015               	goto	l20489
 20204                           
 20205                           ; BSR set to: 0
 20206  00620C  A08E               	btfss	142,0,c	;volatile
 20207                           
 20208                           ; BSR set to: 0
 20209  00620E  BA8D               	btfsc	141,5,c	;volatile
 20210  006210  D012               	goto	l20489
 20211                           
 20212                           ; BSR set to: 0
 20213                           ;controlMemory_MC50.c: 290:      var_sys.actualCounterMoves = 0;
 20214  006212  0E00               	movlw	0
 20215  006214  0101               	movlb	1	; () banked
 20216  006216  6F3C               	movwf	(_var_sys+60)& (0+255),b	;volatile
 20217  006218  0E00               	movlw	0
 20218  00621A  6F3D               	movwf	(_var_sys+61)& (0+255),b	;volatile
 20219  00621C  0E00               	movlw	0
 20220  00621E  6F3E               	movwf	(_var_sys+62)& (0+255),b	;volatile
 20221  006220  0E00               	movlw	0
 20222  006222  6F3F               	movwf	(_var_sys+63)& (0+255),b	;volatile
 20223                           
 20224                           ;controlMemory_MC50.c: 291:      var_sys_NVM.counterMoves = 0;
 20225  006224  0E00               	movlw	0
 20226  006226  0100               	movlb	0	; () banked
 20227  006228  6FBA               	movwf	(_var_sys_NVM+34)& (0+255),b	;volatile
 20228  00622A  0E00               	movlw	0
 20229  00622C  6FBB               	movwf	(_var_sys_NVM+35)& (0+255),b	;volatile
 20230  00622E  0E00               	movlw	0
 20231  006230  6FBC               	movwf	(_var_sys_NVM+36)& (0+255),b	;volatile
 20232  006232  0E00               	movlw	0
 20233  006234  6FBD               	movwf	(_var_sys_NVM+37)& (0+255),b	;volatile
 20234  006236                     l20489:
 20235                           
 20236                           ; BSR set to: 0
 20237                           ;controlMemory_MC50.c: 296:     SaveNVM_VarSystem(pageMemoryCounters);
 20238  006236  0E02               	movlw	2
 20239  006238  ECAF  F047         	call	_SaveNVM_VarSystem
 20240                           
 20241                           ;controlMemory_MC50.c: 297:     SaveNVM_VarSystem(pageMemoryLearningVars);
 20242  00623C  0E03               	movlw	3
 20243  00623E  ECAF  F047         	call	_SaveNVM_VarSystem
 20244  006242  0012               	return		;funcret
 20245  006244                     __end_of_ResetDefaultMemory:
 20246                           	callstack 0
 20247                           
 20248 ;; *************** function _I2C1_Read1ByteRegister *****************
 20249 ;; Defined at:
 20250 ;;		line 65 in file "mcc_generated_files/examples/i2c1_master_example.c"
 20251 ;; Parameters:    Size  Location     Type
 20252 ;;  address         1    wreg     unsigned char 
 20253 ;;  reg             1   33[COMRAM] unsigned char 
 20254 ;; Auto vars:     Size  Location     Type
 20255 ;;  address         1   34[COMRAM] unsigned char 
 20256 ;;  returnValue     1   35[COMRAM] unsigned char 
 20257 ;; Return value:  Size  Location     Type
 20258 ;;                  1    wreg      unsigned char 
 20259 ;; Registers used:
 20260 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20261 ;; Tracked objects:
 20262 ;;		On entry : 31/0
 20263 ;;		On exit  : 33/2
 20264 ;;		Unchanged: 0/0
 20265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20266 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20267 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20269 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20270 ;;Total ram usage:        3 bytes
 20271 ;; Hardware stack levels used: 1
 20272 ;; Hardware stack levels required when called: 12
 20273 ;; This function calls:
 20274 ;;		_I2C1_Close
 20275 ;;		_I2C1_MasterWrite
 20276 ;;		_I2C1_Open
 20277 ;;		_I2C1_SetAddressNackCallback
 20278 ;;		_I2C1_SetBuffer
 20279 ;;		_I2C1_SetDataCompleteCallback
 20280 ;; This function is called by:
 20281 ;;		_loadNVM_VarSystem
 20282 ;; This function uses a non-reentrant model
 20283 ;;
 20284                           
 20285                           	psect	text72
 20286  008806                     __ptext72:
 20287                           	callstack 0
 20288  008806                     _I2C1_Read1ByteRegister:
 20289                           	callstack 17
 20290                           
 20291                           ;incstack = 0
 20292                           ;I2C1_Read1ByteRegister@address stored from wreg
 20293  008806  6E23               	movwf	I2C1_Read1ByteRegister@address^0,c
 20294                           
 20295                           ;mcc_generated_files/examples/i2c1_master_example.c: 65: uint8_t I2C1_Read1ByteRegister(
      +                          i2c1_address_t address, uint8_t reg);mcc_generated_files/examples/i2c1_master_example.c:
      +                           66: {;mcc_generated_files/examples/i2c1_master_example.c: 67:     uint8_t returnValue =
      +                           0x00;
 20296  008808  0E00               	movlw	0
 20297  00880A  6E24               	movwf	I2C1_Read1ByteRegister@returnValue^0,c
 20298  00880C                     l21643:
 20299  00880C  5023               	movf	I2C1_Read1ByteRegister@address^0,w,c
 20300  00880E  EC2A  F03F         	call	_I2C1_Open
 20301  008812  0900               	iorlw	0
 20302  008814  B4D8               	btfsc	status,2,c
 20303  008816  D7FA               	goto	l21643
 20304                           
 20305                           ;mcc_generated_files/examples/i2c1_master_example.c: 70:     I2C1_SetDataCompleteCallbac
      +                          k(rd1RegCompleteHandler,&returnValue);
 20306  008818  0EC0               	movlw	low _rd1RegCompleteHandler@i2c1_master_example$F500
 20307  00881A  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 20308  00881C  0E91               	movlw	high _rd1RegCompleteHandler@i2c1_master_example$F500
 20309  00881E  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 20310  008820  0E24               	movlw	low I2C1_Read1ByteRegister@returnValue
 20311  008822  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 20312  008824  6A18               	clrf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 20313  008826  EC0C  F04B         	call	_I2C1_SetDataCompleteCallback	;wreg free
 20314                           
 20315                           ;mcc_generated_files/examples/i2c1_master_example.c: 71:     I2C1_SetBuffer(&reg,1);
 20316  00882A  0E22               	movlw	low I2C1_Read1ByteRegister@reg
 20317  00882C  6E10               	movwf	I2C1_SetBuffer@buffer^0,c
 20318  00882E  6A11               	clrf	(I2C1_SetBuffer@buffer+1)^0,c
 20319  008830  0E00               	movlw	0
 20320  008832  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 20321  008834  0E01               	movlw	1
 20322  008836  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 20323  008838  ECC3  F04A         	call	_I2C1_SetBuffer	;wreg free
 20324                           
 20325                           ; BSR set to: 2
 20326                           ;mcc_generated_files/examples/i2c1_master_example.c: 72:     I2C1_SetAddressNackCallback
      +                          (((void*)0),((void*)0));
 20327  00883C  0E00               	movlw	0
 20328  00883E  6E15               	movwf	I2C1_SetAddressNackCallback@cb^0,c
 20329  008840  0E00               	movlw	0
 20330  008842  6E16               	movwf	(I2C1_SetAddressNackCallback@cb+1)^0,c
 20331  008844  0E00               	movlw	0
 20332  008846  6E17               	movwf	I2C1_SetAddressNackCallback@ptr^0,c
 20333  008848  0E00               	movlw	0
 20334  00884A  6E18               	movwf	(I2C1_SetAddressNackCallback@ptr+1)^0,c
 20335  00884C  ECF4  F04A         	call	_I2C1_SetAddressNackCallback	;wreg free
 20336                           
 20337                           ;mcc_generated_files/examples/i2c1_master_example.c: 73:     I2C1_MasterWrite();
 20338  008850  ECC2  F04B         	call	_I2C1_MasterWrite	;wreg free
 20339  008854                     l21653:
 20340  008854  EC35  F04A         	call	_I2C1_Close	;wreg free
 20341  008858  06E8               	decf	wreg,f,c
 20342  00885A  B4D8               	btfsc	status,2,c
 20343  00885C  D7FB               	goto	l21653
 20344                           
 20345                           ;mcc_generated_files/examples/i2c1_master_example.c: 76:     return returnValue;
 20346  00885E  5024               	movf	I2C1_Read1ByteRegister@returnValue^0,w,c
 20347  008860  0012               	return		;funcret
 20348  008862                     __end_of_I2C1_Read1ByteRegister:
 20349                           	callstack 0
 20350                           
 20351 ;; *************** function _getKeyPressed *****************
 20352 ;; Defined at:
 20353 ;;		line 217 in file "inputs_MC50.c"
 20354 ;; Parameters:    Size  Location     Type
 20355 ;;		None
 20356 ;; Auto vars:     Size  Location     Type
 20357 ;;  temp            1   15[COMRAM] char 
 20358 ;; Return value:  Size  Location     Type
 20359 ;;                  1    wreg      char 
 20360 ;; Registers used:
 20361 ;;		wreg, status,2, status,0
 20362 ;; Tracked objects:
 20363 ;;		On entry : 3E/1
 20364 ;;		On exit  : 3D/0
 20365 ;;		Unchanged: 0/0
 20366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20368 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20370 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20371 ;;Total ram usage:        1 bytes
 20372 ;; Hardware stack levels used: 1
 20373 ;; Hardware stack levels required when called: 4
 20374 ;; This function calls:
 20375 ;;		Nothing
 20376 ;; This function is called by:
 20377 ;;		_main
 20378 ;; This function uses a non-reentrant model
 20379 ;;
 20380                           
 20381                           	psect	text73
 20382  0095D0                     __ptext73:
 20383                           	callstack 0
 20384  0095D0                     _getKeyPressed:
 20385                           	callstack 26
 20386                           
 20387                           ;inputs_MC50.c: 218:     signed char temp=-1;
 20388                           
 20389                           ;incstack = 0
 20390  0095D0  6810               	setf	getKeyPressed@temp^0,c
 20391                           
 20392                           ;inputs_MC50.c: 219:     if(RFFull)
 20393  0095D2  0100               	movlb	0	; () banked
 20394  0095D4  518B               	movf	_RFFull& (0+255),w,b	;volatile
 20395  0095D6  B4D8               	btfsc	status,2,c
 20396  0095D8  D005               	goto	l16835
 20397                           
 20398                           ; BSR set to: 0
 20399                           ;inputs_MC50.c: 220:     {;inputs_MC50.c: 221:         temp=(BufferRF[7]&0xF0)>>4;
 20400  0095DA  0102               	movlb	2	; () banked
 20401  0095DC  39D1               	swapf	(_BufferRF+7)& (0+255),w,b
 20402  0095DE  0B0F               	andlw	15
 20403  0095E0  0B0F               	andlw	15
 20404  0095E2  6E10               	movwf	getKeyPressed@temp^0,c
 20405  0095E4                     l16835:
 20406                           
 20407                           ;inputs_MC50.c: 223:     return temp;
 20408  0095E4  5010               	movf	getKeyPressed@temp^0,w,c
 20409  0095E6  0012               	return		;funcret
 20410  0095E8                     __end_of_getKeyPressed:
 20411                           	callstack 0
 20412                           
 20413 ;; *************** function _eusartparser *****************
 20414 ;; Defined at:
 20415 ;;		line 458 in file "eusartparser.c"
 20416 ;; Parameters:    Size  Location     Type
 20417 ;;  package         1    8[BANK0 ] PTR struct package_t
 20418 ;;		 -> main@package(7), 
 20419 ;; Auto vars:     Size  Location     Type
 20420 ;;  i               1   21[BANK0 ] unsigned char 
 20421 ;;  i               1   23[BANK0 ] unsigned char 
 20422 ;;  i               1   22[BANK0 ] unsigned char 
 20423 ;;  i               1   20[BANK0 ] unsigned char 
 20424 ;;  i               1   19[BANK0 ] unsigned char 
 20425 ;;  i               1   17[BANK0 ] unsigned char 
 20426 ;;  i               1   16[BANK0 ] unsigned char 
 20427 ;;  a               7    0        struct package_t
 20428 ;;  serial          4   24[BANK0 ] unsigned long 
 20429 ;;  relcounter      1   18[BANK0 ] unsigned char 
 20430 ;;  pos             1   15[BANK0 ] unsigned char 
 20431 ;; Return value:  Size  Location     Type
 20432 ;;                  1    wreg      void 
 20433 ;; Registers used:
 20434 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 20435 ;; Tracked objects:
 20436 ;;		On entry : 3F/0
 20437 ;;		On exit  : 0/0
 20438 ;;		Unchanged: 0/0
 20439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20440 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20441 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20442 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20443 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20444 ;;Total ram usage:       20 bytes
 20445 ;; Hardware stack levels used: 1
 20446 ;; Hardware stack levels required when called: 14
 20447 ;; This function calls:
 20448 ;;		_ReadSerial
 20449 ;;		_RemoveSerial
 20450 ;;		_SaveNVM_VarSystem
 20451 ;;		_cmdMemoryIsEmpty
 20452 ;;		_confirmpackage
 20453 ;;		_read_eusartparser
 20454 ;;		_saveNewSerial
 20455 ;;		_validateRemoteSerialNumber
 20456 ;;		_write_eusartparser
 20457 ;;		_write_package
 20458 ;; This function is called by:
 20459 ;;		_main
 20460 ;; This function uses a non-reentrant model
 20461 ;;
 20462                           
 20463                           	psect	text74
 20464  001F94                     __ptext74:
 20465                           	callstack 0
 20466  001F94                     _eusartparser:
 20467                           	callstack 16
 20468                           
 20469                           ; BSR set to: 0
 20470                           ;eusartparser.c: 459:         struct package_t a;;eusartparser.c: 460:         uint8_t r
      +                          elcounter;;eusartparser.c: 461:         static _Bool save_f=0;;eusartparser.c: 462:     
      +                              static uint16_t buffer=0x0000;;eusartparser.c: 463:         uint32_t serial;;eusartp
      +                          arser.c: 464:         char pos;;eusartparser.c: 466:         switch(package->functioncod
      +                          e){
 20471                           
 20472                           ;incstack = 0
 20473  001F94  D27C               	goto	l23555
 20474  001F96                     l23315:
 20475                           
 20476                           ; BSR set to: 0
 20477                           ;eusartparser.c: 468:                 if(programmer_enable)
 20478  001F96  5185               	movf	_programmer_enable& (0+255),w,b
 20479  001F98  B4D8               	btfsc	status,2,c
 20480  001F9A  D004               	goto	l23319
 20481                           
 20482                           ; BSR set to: 0
 20483                           ;eusartparser.c: 469:                     read_eusartparser(package);
 20484  001F9C  C0E0  F018         	movff	eusartparser@package,read_eusartparser@package
 20485  001FA0  EC7E  F017         	call	_read_eusartparser	;wreg free
 20486  001FA4                     l23319:
 20487                           
 20488                           ;eusartparser.c: 470:                 confirmpackage(package, 1);
 20489  001FA4  C0E0  F011         	movff	eusartparser@package,confirmpackage@package
 20490  001FA8  0E01               	movlw	1
 20491  001FAA  6E12               	movwf	confirmpackage@confirm^0,c
 20492  001FAC  ECD5  F045         	call	_confirmpackage	;wreg free
 20493  001FB0                     l23321:
 20494                           
 20495                           ;eusartparser.c: 471:                 write_package(*package);
 20496  001FB0  0100               	movlb	0	; () banked
 20497  001FB2  51E0               	movf	eusartparser@package& (0+255),w,b
 20498  001FB4  6ED9               	movwf	fsr2l,c
 20499  001FB6  6ADA               	clrf	fsr2h,c
 20500  001FB8  EE00  F011         	lfsr	0,write_package@package
 20501  001FBC  0E06               	movlw	6
 20502  001FBE                     u28421:
 20503  001FBE  CFDB FFEB          	movff	plusw2,plusw0
 20504  001FC2  06E8               	decf	wreg,f,c
 20505  001FC4  E2FC               	bc	u28421
 20506  001FC6  EC5C  F048         	call	_write_package	;wreg free
 20507                           
 20508                           ;eusartparser.c: 472:                 break;
 20509  001FCA  0012               	return	
 20510  001FCC                     l23323:
 20511                           
 20512                           ; BSR set to: 0
 20513                           ;eusartparser.c: 475:                 if(programmer_enable)
 20514  001FCC  5185               	movf	_programmer_enable& (0+255),w,b
 20515  001FCE  B4D8               	btfsc	status,2,c
 20516  001FD0  D7E9               	goto	l23319
 20517                           
 20518                           ; BSR set to: 0
 20519                           ;eusartparser.c: 476:                     write_eusartparser(*package);
 20520  001FD2  51E0               	movf	eusartparser@package& (0+255),w,b
 20521  001FD4  6ED9               	movwf	fsr2l,c
 20522  001FD6  6ADA               	clrf	fsr2h,c
 20523  001FD8  EE00  F010         	lfsr	0,write_eusartparser@package
 20524  001FDC  0E06               	movlw	6
 20525  001FDE                     u28441:
 20526  001FDE  CFDB FFEB          	movff	plusw2,plusw0
 20527  001FE2  06E8               	decf	wreg,f,c
 20528  001FE4  E2FC               	bc	u28441
 20529  001FE6  EC02  F01A         	call	_write_eusartparser	;wreg free
 20530  001FEA  D7DC               	goto	l23319
 20531  001FEC                     l23331:
 20532                           
 20533                           ; BSR set to: 0
 20534                           ;eusartparser.c: 482:                 if(programmer_enable){
 20535  001FEC  5185               	movf	_programmer_enable& (0+255),w,b
 20536  001FEE  B4D8               	btfsc	status,2,c
 20537  001FF0  D008               	goto	l23337
 20538                           
 20539                           ; BSR set to: 0
 20540                           ;eusartparser.c: 483:                     SaveNVM_VarSystem(pageMemoryE);
 20541  001FF2  0E01               	movlw	1
 20542  001FF4  ECAF  F047         	call	_SaveNVM_VarSystem
 20543                           
 20544                           ;eusartparser.c: 484:                     SaveNVM_VarSystem(pageMemoryP);
 20545  001FF8  0E00               	movlw	0
 20546  001FFA  ECAF  F047         	call	_SaveNVM_VarSystem
 20547                           
 20548                           ;eusartparser.c: 485:                     programmer_enable=0;
 20549  001FFE  0E00               	movlw	0
 20550  002000  D005               	goto	L83
 20551  002002                     l23337:
 20552                           
 20553                           ; BSR set to: 0
 20554                           ;eusartparser.c: 488:                     if((sm_state_Main_t)main_stateMachine.current_
      +                          state==st_standBy)
 20555  002002  0101               	movlb	1	; () banked
 20556  002004  51EE               	movf	_main_stateMachine& (0+255),w,b
 20557  002006  A4D8               	btfss	status,2,c
 20558  002008  D004               	goto	l23341
 20559                           
 20560                           ; BSR set to: 1
 20561                           ;eusartparser.c: 489:                         programmer_enable=1;
 20562  00200A  0E01               	movlw	1
 20563  00200C                     L83:
 20564  00200C  0100               	movlb	0	; () banked
 20565  00200E  6F85               	movwf	_programmer_enable& (0+255),b
 20566  002010  D017               	goto	l23349
 20567  002012                     l23341:
 20568                           
 20569                           ; BSR set to: 1
 20570                           ;eusartparser.c: 491:                         package->data.data16=(uint16_t)2;
 20571  002012  0100               	movlb	0	; () banked
 20572  002014  51E0               	movf	eusartparser@package& (0+255),w,b
 20573  002016  6ED9               	movwf	fsr2l,c
 20574  002018  6ADA               	clrf	fsr2h,c
 20575  00201A  0E02               	movlw	2
 20576  00201C  26D9               	addwf	fsr2l,f,c
 20577  00201E  0E02               	movlw	2
 20578  002020  6EDE               	movwf	postinc2,c
 20579  002022  0E00               	movlw	0
 20580  002024  6EDD               	movwf	postdec2,c
 20581  002026                     l23343:
 20582                           
 20583                           ; BSR set to: 0
 20584                           ;eusartparser.c: 492:                         write_package(*package);
 20585  002026  51E0               	movf	eusartparser@package& (0+255),w,b
 20586  002028  6ED9               	movwf	fsr2l,c
 20587  00202A  6ADA               	clrf	fsr2h,c
 20588  00202C  EE00  F011         	lfsr	0,write_package@package
 20589  002030  0E06               	movlw	6
 20590  002032                     u28471:
 20591  002032  CFDB FFEB          	movff	plusw2,plusw0
 20592  002036  06E8               	decf	wreg,f,c
 20593  002038  E2FC               	bc	u28471
 20594  00203A  EC5C  F048         	call	_write_package	;wreg free
 20595  00203E  D7B2               	goto	l23319
 20596  002040                     l23349:
 20597                           
 20598                           ; BSR set to: 0
 20599                           ;eusartparser.c: 499:                 package->data.data16=(uint16_t)programmer_enable;
 20600  002040  5185               	movf	_programmer_enable& (0+255),w,b
 20601  002042  6FE1               	movwf	??_eusartparser& (0+255),b
 20602  002044  6BE2               	clrf	(??_eusartparser+1)& (0+255),b
 20603  002046  51E0               	movf	eusartparser@package& (0+255),w,b
 20604  002048  6ED9               	movwf	fsr2l,c
 20605  00204A  6ADA               	clrf	fsr2h,c
 20606  00204C  0E02               	movlw	2
 20607  00204E  26D9               	addwf	fsr2l,f,c
 20608  002050  C0E1  FFDE         	movff	??_eusartparser,postinc2
 20609  002054  C0E2  FFDD         	movff	??_eusartparser+1,postdec2
 20610  002058  D7E6               	goto	l23343
 20611  00205A                     l23361:
 20612                           
 20613                           ; BSR set to: 0
 20614                           ;eusartparser.c: 509:                 package->address=0x00;
 20615  00205A  51E0               	movf	eusartparser@package& (0+255),w,b
 20616  00205C  6ED9               	movwf	fsr2l,c
 20617  00205E  6ADA               	clrf	fsr2h,c
 20618  002060  0E01               	movlw	1
 20619  002062  26D9               	addwf	fsr2l,f,c
 20620  002064  0E00               	movlw	0
 20621  002066  6EDF               	movwf	indf2,c
 20622                           
 20623                           ;eusartparser.c: 510:                 package->data.data16=var_sys_NVM.positionRemotesFu
      +                          ll;
 20624  002068  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 20625  00206A  6FE1               	movwf	??_eusartparser& (0+255),b
 20626  00206C  6BE2               	clrf	(??_eusartparser+1)& (0+255),b
 20627  00206E  51E0               	movf	eusartparser@package& (0+255),w,b
 20628  002070  6ED9               	movwf	fsr2l,c
 20629  002072  6ADA               	clrf	fsr2h,c
 20630  002074  0E02               	movlw	2
 20631  002076  26D9               	addwf	fsr2l,f,c
 20632  002078  C0E1  FFDE         	movff	??_eusartparser,postinc2
 20633  00207C  C0E2  FFDD         	movff	??_eusartparser+1,postdec2
 20634                           
 20635                           ; BSR set to: 0
 20636                           ;eusartparser.c: 511:                 for(uint8_t i=0;i<var_sys_NVM.positionRemotesFull;
      +                          i++)
 20637  002080  0E00               	movlw	0
 20638  002082  6FE8               	movwf	eusartparser@i& (0+255),b
 20639  002084  D013               	goto	l23371
 20640  002086                     l23365:
 20641                           
 20642                           ; BSR set to: 0
 20643                           ;eusartparser.c: 512:                 if(cmdMemoryIsEmpty(0,i)==1)
 20644  002086  C0E8  F02E         	movff	eusartparser@i,cmdMemoryIsEmpty@position
 20645  00208A  0E00               	movlw	0
 20646  00208C  ECFD  F03C         	call	_cmdMemoryIsEmpty
 20647  002090  06E8               	decf	wreg,f,c
 20648  002092  A4D8               	btfss	status,2,c
 20649  002094  D009               	goto	l23369
 20650                           
 20651                           ;eusartparser.c: 513:                     package->data.data16--;
 20652  002096  0100               	movlb	0	; () banked
 20653  002098  51E0               	movf	eusartparser@package& (0+255),w,b
 20654  00209A  6ED9               	movwf	fsr2l,c
 20655  00209C  6ADA               	clrf	fsr2h,c
 20656  00209E  0E02               	movlw	2
 20657  0020A0  26D9               	addwf	fsr2l,f,c
 20658  0020A2  06DE               	decf	postinc2,f,c
 20659  0020A4  0E00               	movlw	0
 20660  0020A6  5ADD               	subwfb	postdec2,f,c
 20661  0020A8                     l23369:
 20662  0020A8  0100               	movlb	0	; () banked
 20663  0020AA  2BE8               	incf	eusartparser@i& (0+255),f,b
 20664  0020AC                     l23371:
 20665                           
 20666                           ; BSR set to: 0
 20667  0020AC  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 20668  0020AE  5DE8               	subwf	eusartparser@i& (0+255),w,b
 20669  0020B0  B0D8               	btfsc	status,0,c
 20670  0020B2  D7B9               	goto	l23343
 20671  0020B4  D7E8               	goto	l23365
 20672  0020B6                     l23379:
 20673                           
 20674                           ; BSR set to: 0
 20675                           ;eusartparser.c: 519:                 package->address=0x00;
 20676  0020B6  51E0               	movf	eusartparser@package& (0+255),w,b
 20677  0020B8  6ED9               	movwf	fsr2l,c
 20678  0020BA  6ADA               	clrf	fsr2h,c
 20679  0020BC  0E01               	movlw	1
 20680  0020BE  26D9               	addwf	fsr2l,f,c
 20681  0020C0  0E00               	movlw	0
 20682  0020C2  6EDF               	movwf	indf2,c
 20683                           
 20684                           ;eusartparser.c: 520:                 package->data.data16=0;
 20685  0020C4  51E0               	movf	eusartparser@package& (0+255),w,b
 20686  0020C6  6ED9               	movwf	fsr2l,c
 20687  0020C8  6ADA               	clrf	fsr2h,c
 20688  0020CA  0E02               	movlw	2
 20689  0020CC  26D9               	addwf	fsr2l,f,c
 20690  0020CE  0E00               	movlw	0
 20691  0020D0  6EDE               	movwf	postinc2,c
 20692  0020D2  0E00               	movlw	0
 20693  0020D4  6EDD               	movwf	postdec2,c
 20694                           
 20695                           ; BSR set to: 0
 20696                           ;eusartparser.c: 521:                 for(uint8_t i=0;i<var_sys_NVM.positionRemotesFull;
      +                          i++)
 20697  0020D6  0E00               	movlw	0
 20698  0020D8  6FE9               	movwf	eusartparser@i_7280& (0+255),b
 20699  0020DA  D013               	goto	l23389
 20700  0020DC                     l23383:
 20701                           
 20702                           ; BSR set to: 0
 20703                           ;eusartparser.c: 522:                 if(cmdMemoryIsEmpty(0,i)==1)
 20704  0020DC  C0E9  F02E         	movff	eusartparser@i_7280,cmdMemoryIsEmpty@position
 20705  0020E0  0E00               	movlw	0
 20706  0020E2  ECFD  F03C         	call	_cmdMemoryIsEmpty
 20707  0020E6  06E8               	decf	wreg,f,c
 20708  0020E8  A4D8               	btfss	status,2,c
 20709  0020EA  D009               	goto	l23387
 20710                           
 20711                           ;eusartparser.c: 523:                     package->data.data16++;
 20712  0020EC  0100               	movlb	0	; () banked
 20713  0020EE  51E0               	movf	eusartparser@package& (0+255),w,b
 20714  0020F0  6ED9               	movwf	fsr2l,c
 20715  0020F2  6ADA               	clrf	fsr2h,c
 20716  0020F4  0E02               	movlw	2
 20717  0020F6  26D9               	addwf	fsr2l,f,c
 20718  0020F8  2ADE               	incf	postinc2,f,c
 20719  0020FA  0E00               	movlw	0
 20720  0020FC  22DD               	addwfc	postdec2,f,c
 20721  0020FE                     l23387:
 20722  0020FE  0100               	movlb	0	; () banked
 20723  002100  2BE9               	incf	eusartparser@i_7280& (0+255),f,b
 20724  002102                     l23389:
 20725                           
 20726                           ; BSR set to: 0
 20727  002102  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 20728  002104  5DE9               	subwf	eusartparser@i_7280& (0+255),w,b
 20729  002106  B0D8               	btfsc	status,0,c
 20730  002108  D78E               	goto	l23343
 20731  00210A  D7E8               	goto	l23383
 20732  00210C                     l23397:
 20733                           
 20734                           ; BSR set to: 0
 20735                           ;eusartparser.c: 529:                 relcounter=0;
 20736  00210C  0E00               	movlw	0
 20737  00210E  6FEA               	movwf	eusartparser@relcounter& (0+255),b
 20738                           
 20739                           ;eusartparser.c: 530:                 for(uint8_t i=0;i<var_sys_NVM.positionRemotesFull;
      +                          i++)
 20740  002110  0E00               	movlw	0
 20741  002112  6FEB               	movwf	eusartparser@i_7281& (0+255),b
 20742  002114  D02B               	goto	l23409
 20743  002116                     l23399:
 20744                           
 20745                           ; BSR set to: 0
 20746                           ;eusartparser.c: 531:                     if(cmdMemoryIsEmpty(0,i)==0){
 20747  002116  C0EB  F02E         	movff	eusartparser@i_7281,cmdMemoryIsEmpty@position
 20748  00211A  0E00               	movlw	0
 20749  00211C  ECFD  F03C         	call	_cmdMemoryIsEmpty
 20750  002120  0900               	iorlw	0
 20751  002122  A4D8               	btfss	status,2,c
 20752  002124  D021               	goto	l23407
 20753                           
 20754                           ;eusartparser.c: 532:                         package->data.data16=(uint16_t)i;
 20755  002126  0100               	movlb	0	; () banked
 20756  002128  51EB               	movf	eusartparser@i_7281& (0+255),w,b
 20757  00212A  6FE1               	movwf	??_eusartparser& (0+255),b
 20758  00212C  6BE2               	clrf	(??_eusartparser+1)& (0+255),b
 20759  00212E  51E0               	movf	eusartparser@package& (0+255),w,b
 20760  002130  6ED9               	movwf	fsr2l,c
 20761  002132  6ADA               	clrf	fsr2h,c
 20762  002134  0E02               	movlw	2
 20763  002136  26D9               	addwf	fsr2l,f,c
 20764  002138  C0E1  FFDE         	movff	??_eusartparser,postinc2
 20765  00213C  C0E2  FFDD         	movff	??_eusartparser+1,postdec2
 20766                           
 20767                           ;eusartparser.c: 533:                         package->address=relcounter;
 20768  002140  51E0               	movf	eusartparser@package& (0+255),w,b
 20769  002142  6ED9               	movwf	fsr2l,c
 20770  002144  6ADA               	clrf	fsr2h,c
 20771  002146  0E01               	movlw	1
 20772  002148  26D9               	addwf	fsr2l,f,c
 20773  00214A  C0EA  FFDF         	movff	eusartparser@relcounter,indf2
 20774                           
 20775                           ; BSR set to: 0
 20776                           ;eusartparser.c: 534:                         relcounter++;
 20777  00214E  2BEA               	incf	eusartparser@relcounter& (0+255),f,b
 20778                           
 20779                           ; BSR set to: 0
 20780                           ;eusartparser.c: 535:                         write_package(*package);
 20781  002150  51E0               	movf	eusartparser@package& (0+255),w,b
 20782  002152  6ED9               	movwf	fsr2l,c
 20783  002154  6ADA               	clrf	fsr2h,c
 20784  002156  EE00  F011         	lfsr	0,write_package@package
 20785  00215A  0E06               	movlw	6
 20786  00215C                     u28531:
 20787  00215C  CFDB FFEB          	movff	plusw2,plusw0
 20788  002160  06E8               	decf	wreg,f,c
 20789  002162  E2FC               	bc	u28531
 20790  002164  EC5C  F048         	call	_write_package	;wreg free
 20791  002168                     l23407:
 20792  002168  0100               	movlb	0	; () banked
 20793  00216A  2BEB               	incf	eusartparser@i_7281& (0+255),f,b
 20794  00216C                     l23409:
 20795                           
 20796                           ; BSR set to: 0
 20797  00216C  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 20798  00216E  5DEB               	subwf	eusartparser@i_7281& (0+255),w,b
 20799  002170  B0D8               	btfsc	status,0,c
 20800  002172  D718               	goto	l23319
 20801  002174  D7D0               	goto	l23399
 20802  002176                     l23415:
 20803                           
 20804                           ; BSR set to: 0
 20805                           ;eusartparser.c: 541:                 relcounter=0;
 20806  002176  0E00               	movlw	0
 20807  002178  6FEA               	movwf	eusartparser@relcounter& (0+255),b
 20808                           
 20809                           ;eusartparser.c: 542:                 for(uint8_t i=0;i<var_sys_NVM.positionRemotesFull;
      +                          i++)
 20810  00217A  0E00               	movlw	0
 20811  00217C  6FEC               	movwf	eusartparser@i_7282& (0+255),b
 20812  00217E  D02B               	goto	l23427
 20813  002180                     l23417:
 20814                           
 20815                           ; BSR set to: 0
 20816                           ;eusartparser.c: 543:                     if(cmdMemoryIsEmpty(0,i)==1){
 20817  002180  C0EC  F02E         	movff	eusartparser@i_7282,cmdMemoryIsEmpty@position
 20818  002184  0E00               	movlw	0
 20819  002186  ECFD  F03C         	call	_cmdMemoryIsEmpty
 20820  00218A  06E8               	decf	wreg,f,c
 20821  00218C  A4D8               	btfss	status,2,c
 20822  00218E  D021               	goto	l23425
 20823                           
 20824                           ;eusartparser.c: 544:                         package->data.data16=(uint16_t)i;
 20825  002190  0100               	movlb	0	; () banked
 20826  002192  51EC               	movf	eusartparser@i_7282& (0+255),w,b
 20827  002194  6FE1               	movwf	??_eusartparser& (0+255),b
 20828  002196  6BE2               	clrf	(??_eusartparser+1)& (0+255),b
 20829  002198  51E0               	movf	eusartparser@package& (0+255),w,b
 20830  00219A  6ED9               	movwf	fsr2l,c
 20831  00219C  6ADA               	clrf	fsr2h,c
 20832  00219E  0E02               	movlw	2
 20833  0021A0  26D9               	addwf	fsr2l,f,c
 20834  0021A2  C0E1  FFDE         	movff	??_eusartparser,postinc2
 20835  0021A6  C0E2  FFDD         	movff	??_eusartparser+1,postdec2
 20836                           
 20837                           ;eusartparser.c: 545:                         package->address=relcounter;
 20838  0021AA  51E0               	movf	eusartparser@package& (0+255),w,b
 20839  0021AC  6ED9               	movwf	fsr2l,c
 20840  0021AE  6ADA               	clrf	fsr2h,c
 20841  0021B0  0E01               	movlw	1
 20842  0021B2  26D9               	addwf	fsr2l,f,c
 20843  0021B4  C0EA  FFDF         	movff	eusartparser@relcounter,indf2
 20844                           
 20845                           ; BSR set to: 0
 20846                           ;eusartparser.c: 546:                         relcounter++;
 20847  0021B8  2BEA               	incf	eusartparser@relcounter& (0+255),f,b
 20848                           
 20849                           ; BSR set to: 0
 20850                           ;eusartparser.c: 547:                         write_package(*package);
 20851  0021BA  51E0               	movf	eusartparser@package& (0+255),w,b
 20852  0021BC  6ED9               	movwf	fsr2l,c
 20853  0021BE  6ADA               	clrf	fsr2h,c
 20854  0021C0  EE00  F011         	lfsr	0,write_package@package
 20855  0021C4  0E06               	movlw	6
 20856  0021C6                     u28561:
 20857  0021C6  CFDB FFEB          	movff	plusw2,plusw0
 20858  0021CA  06E8               	decf	wreg,f,c
 20859  0021CC  E2FC               	bc	u28561
 20860  0021CE  EC5C  F048         	call	_write_package	;wreg free
 20861  0021D2                     l23425:
 20862  0021D2  0100               	movlb	0	; () banked
 20863  0021D4  2BEC               	incf	eusartparser@i_7282& (0+255),f,b
 20864  0021D6                     l23427:
 20865                           
 20866                           ; BSR set to: 0
 20867  0021D6  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 20868  0021D8  5DEC               	subwf	eusartparser@i_7282& (0+255),w,b
 20869  0021DA  B0D8               	btfsc	status,0,c
 20870  0021DC  D6E3               	goto	l23319
 20871  0021DE  D7D0               	goto	l23417
 20872  0021E0                     l23433:
 20873                           
 20874                           ; BSR set to: 0
 20875                           ;eusartparser.c: 553:                 if(save_f==0){
 20876  0021E0  0101               	movlb	1	; () banked
 20877  0021E2  518B               	movf	eusartparser@save_f& (0+255),w,b
 20878  0021E4  A4D8               	btfss	status,2,c
 20879  0021E6  D021               	goto	l23443
 20880                           
 20881                           ; BSR set to: 1
 20882                           ;eusartparser.c: 554:                     buffer=package->data.data16;
 20883  0021E8  0100               	movlb	0	; () banked
 20884  0021EA  51E0               	movf	eusartparser@package& (0+255),w,b
 20885  0021EC  6ED9               	movwf	fsr2l,c
 20886  0021EE  6ADA               	clrf	fsr2h,c
 20887  0021F0  0E02               	movlw	2
 20888  0021F2  26D9               	addwf	fsr2l,f,c
 20889  0021F4  CFDE F28C          	movff	postinc2,eusartparser@buffer
 20890  0021F8  CFDD F28D          	movff	postdec2,eusartparser@buffer+1
 20891                           
 20892                           ; BSR set to: 0
 20893                           ;eusartparser.c: 555:                     confirmpackage(package, 1);
 20894  0021FC  C0E0  F011         	movff	eusartparser@package,confirmpackage@package
 20895  002200  0E01               	movlw	1
 20896  002202  6E12               	movwf	confirmpackage@confirm^0,c
 20897  002204  ECD5  F045         	call	_confirmpackage	;wreg free
 20898                           
 20899                           ;eusartparser.c: 556:                     write_package(*package);
 20900  002208  0100               	movlb	0	; () banked
 20901  00220A  51E0               	movf	eusartparser@package& (0+255),w,b
 20902  00220C  6ED9               	movwf	fsr2l,c
 20903  00220E  6ADA               	clrf	fsr2h,c
 20904  002210  EE00  F011         	lfsr	0,write_package@package
 20905  002214  0E06               	movlw	6
 20906  002216                     u28591:
 20907  002216  CFDB FFEB          	movff	plusw2,plusw0
 20908  00221A  06E8               	decf	wreg,f,c
 20909  00221C  E2FC               	bc	u28591
 20910  00221E  EC5C  F048         	call	_write_package	;wreg free
 20911                           
 20912                           ;eusartparser.c: 557:                     save_f=1;
 20913  002222  0E01               	movlw	1
 20914  002224  0101               	movlb	1	; () banked
 20915  002226  6F8B               	movwf	eusartparser@save_f& (0+255),b
 20916                           
 20917                           ;eusartparser.c: 558:                 }
 20918  002228  0012               	return	
 20919  00222A                     l23443:
 20920                           
 20921                           ; BSR set to: 1
 20922                           ;eusartparser.c: 560:                     serial=((uint32_t)buffer<<16)+(uint32_t)packag
      +                          e->data.data16;
 20923  00222A  0100               	movlb	0	; () banked
 20924  00222C  51E0               	movf	eusartparser@package& (0+255),w,b
 20925  00222E  6ED9               	movwf	fsr2l,c
 20926  002230  6ADA               	clrf	fsr2h,c
 20927  002232  0E02               	movlw	2
 20928  002234  26D9               	addwf	fsr2l,f,c
 20929  002236  CFDE F0E1          	movff	postinc2,??_eusartparser
 20930  00223A  CFDD F0E2          	movff	postdec2,??_eusartparser+1
 20931  00223E  0102               	movlb	2	; () banked
 20932  002240  518C               	movf	eusartparser@buffer& (0+255),w,b
 20933  002242  0100               	movlb	0	; () banked
 20934  002244  6FE3               	movwf	(??_eusartparser+2)& (0+255),b
 20935  002246  0102               	movlb	2	; () banked
 20936  002248  518D               	movf	(eusartparser@buffer+1)& (0+255),w,b
 20937  00224A  0100               	movlb	0	; () banked
 20938  00224C  6FE4               	movwf	(??_eusartparser+3)& (0+255),b
 20939  00224E  6BE5               	clrf	(??_eusartparser+4)& (0+255),b
 20940  002250  6BE6               	clrf	(??_eusartparser+5)& (0+255),b
 20941  002252  C0E4  F0E6         	movff	??_eusartparser+3,??_eusartparser+5
 20942  002256  C0E3  F0E5         	movff	??_eusartparser+2,??_eusartparser+4
 20943  00225A  6BE4               	clrf	(??_eusartparser+3)& (0+255),b
 20944  00225C  6BE3               	clrf	(??_eusartparser+2)& (0+255),b
 20945  00225E  51E1               	movf	??_eusartparser& (0+255),w,b
 20946  002260  25E3               	addwf	(??_eusartparser+2)& (0+255),w,b
 20947  002262  6FF0               	movwf	eusartparser@serial& (0+255),b
 20948  002264  51E2               	movf	(??_eusartparser+1)& (0+255),w,b
 20949  002266  21E4               	addwfc	(??_eusartparser+3)& (0+255),w,b
 20950  002268  6FF1               	movwf	(eusartparser@serial+1)& (0+255),b
 20951  00226A  0E00               	movlw	0
 20952  00226C  21E5               	addwfc	(??_eusartparser+4)& (0+255),w,b
 20953  00226E  6FF2               	movwf	(eusartparser@serial+2)& (0+255),b
 20954  002270  0E00               	movlw	0
 20955  002272  21E6               	addwfc	(??_eusartparser+5)& (0+255),w,b
 20956  002274  6FF3               	movwf	(eusartparser@serial+3)& (0+255),b
 20957                           
 20958                           ; BSR set to: 0
 20959                           ;eusartparser.c: 561:                     if(validateRemoteSerialNumber(serial, NO, &pos
      +                          )==NoCMD){
 20960  002276  C0F0  F02E         	movff	eusartparser@serial,validateRemoteSerialNumber@serial
 20961  00227A  C0F1  F02F         	movff	eusartparser@serial+1,validateRemoteSerialNumber@serial+1
 20962  00227E  C0F2  F030         	movff	eusartparser@serial+2,validateRemoteSerialNumber@serial+2
 20963  002282  C0F3  F031         	movff	eusartparser@serial+3,validateRemoteSerialNumber@serial+3
 20964  002286  0E00               	movlw	0
 20965  002288  6E32               	movwf	validateRemoteSerialNumber@VerifyOnlySerial^0,c
 20966  00228A  0EE7               	movlw	low eusartparser@pos
 20967  00228C  6E33               	movwf	validateRemoteSerialNumber@position^0,c
 20968  00228E  6A34               	clrf	(validateRemoteSerialNumber@position+1)^0,c
 20969  002290  EC2A  F02D         	call	_validateRemoteSerialNumber	;wreg free
 20970  002294  0900               	iorlw	0
 20971  002296  A4D8               	btfss	status,2,c
 20972  002298  D049               	goto	u28650
 20973                           
 20974                           ; BSR set to: 0
 20975                           ;eusartparser.c: 562:                         for(uint8_t i=0;;i++)
 20976  00229A  0E00               	movlw	0
 20977  00229C  6FED               	movwf	eusartparser@i_7283& (0+255),b
 20978  00229E                     l23449:
 20979                           
 20980                           ; BSR set to: 0
 20981                           ;eusartparser.c: 563:                             if(cmdMemoryIsEmpty(0,i)==1&&package->
      +                          address==0){
 20982  00229E  C0ED  F02E         	movff	eusartparser@i_7283,cmdMemoryIsEmpty@position
 20983  0022A2  0E00               	movlw	0
 20984  0022A4  ECFD  F03C         	call	_cmdMemoryIsEmpty
 20985  0022A8  06E8               	decf	wreg,f,c
 20986  0022AA  A4D8               	btfss	status,2,c
 20987  0022AC  D02A               	goto	l23461
 20988  0022AE  0100               	movlb	0	; () banked
 20989  0022B0  51E0               	movf	eusartparser@package& (0+255),w,b
 20990  0022B2  6ED9               	movwf	fsr2l,c
 20991  0022B4  6ADA               	clrf	fsr2h,c
 20992  0022B6  0E01               	movlw	1
 20993  0022B8  26D9               	addwf	fsr2l,f,c
 20994  0022BA  50DF               	movf	indf2,w,c
 20995  0022BC  A4D8               	btfss	status,2,c
 20996  0022BE  D021               	goto	l23461
 20997                           
 20998                           ; BSR set to: 0
 20999                           ;eusartparser.c: 564:                                 saveNewSerial(0,serial,i);
 21000  0022C0  C0F0  F0D8         	movff	eusartparser@serial,saveNewSerial@tempSerial
 21001  0022C4  C0F1  F0D9         	movff	eusartparser@serial+1,saveNewSerial@tempSerial+1
 21002  0022C8  C0F2  F0DA         	movff	eusartparser@serial+2,saveNewSerial@tempSerial+2
 21003  0022CC  C0F3  F0DB         	movff	eusartparser@serial+3,saveNewSerial@tempSerial+3
 21004  0022D0  C0ED  F0DC         	movff	eusartparser@i_7283,saveNewSerial@position
 21005  0022D4  0E00               	movlw	0
 21006  0022D6  ECCC  F041         	call	_saveNewSerial
 21007  0022DA                     l23455:
 21008                           
 21009                           ;eusartparser.c: 565:                                 confirmpackage(package, 1);
 21010  0022DA  C0E0  F011         	movff	eusartparser@package,confirmpackage@package
 21011  0022DE  0E01               	movlw	1
 21012  0022E0  6E12               	movwf	confirmpackage@confirm^0,c
 21013  0022E2  ECD5  F045         	call	_confirmpackage	;wreg free
 21014  0022E6                     l23457:
 21015                           
 21016                           ;eusartparser.c: 566:                                 write_package(*package);
 21017  0022E6  0100               	movlb	0	; () banked
 21018  0022E8  51E0               	movf	eusartparser@package& (0+255),w,b
 21019  0022EA  6ED9               	movwf	fsr2l,c
 21020  0022EC  6ADA               	clrf	fsr2h,c
 21021  0022EE  EE00  F011         	lfsr	0,write_package@package
 21022  0022F2  0E06               	movlw	6
 21023  0022F4                     u28631:
 21024  0022F4  CFDB FFEB          	movff	plusw2,plusw0
 21025  0022F8  06E8               	decf	wreg,f,c
 21026  0022FA  E2FC               	bc	u28631
 21027  0022FC  EC5C  F048         	call	_write_package	;wreg free
 21028                           
 21029                           ;eusartparser.c: 567:                                 break;
 21030  002300  D01E               	goto	l23477
 21031  002302                     l23461:
 21032  002302  C0ED  F02E         	movff	eusartparser@i_7283,cmdMemoryIsEmpty@position
 21033  002306  0E00               	movlw	0
 21034  002308  ECFD  F03C         	call	_cmdMemoryIsEmpty
 21035  00230C  06E8               	decf	wreg,f,c
 21036  00230E  A4D8               	btfss	status,2,c
 21037  002310  D008               	goto	l23465
 21038                           
 21039                           ;eusartparser.c: 570:                                 package->address--;
 21040  002312  0100               	movlb	0	; () banked
 21041  002314  51E0               	movf	eusartparser@package& (0+255),w,b
 21042  002316  6ED9               	movwf	fsr2l,c
 21043  002318  6ADA               	clrf	fsr2h,c
 21044  00231A  0E01               	movlw	1
 21045  00231C  26D9               	addwf	fsr2l,f,c
 21046  00231E  06DF               	decf	indf2,f,c
 21047                           
 21048                           ;eusartparser.c: 571:                             }
 21049  002320  D00C               	goto	l23471
 21050  002322                     l23465:
 21051  002322  0100               	movlb	0	; () banked
 21052  002324  51ED               	movf	eusartparser@i_7283& (0+255),w,b
 21053  002326  19B8               	xorwf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 21054  002328  A4D8               	btfss	status,2,c
 21055  00232A  D007               	goto	l23471
 21056  00232C                     u28650:
 21057                           
 21058                           ; BSR set to: 0
 21059                           ;eusartparser.c: 573:                                 confirmpackage(package, 0);
 21060  00232C  C0E0  F011         	movff	eusartparser@package,confirmpackage@package
 21061  002330  0E00               	movlw	0
 21062  002332  6E12               	movwf	confirmpackage@confirm^0,c
 21063  002334  ECD5  F045         	call	_confirmpackage	;wreg free
 21064  002338  D7D6               	goto	l23457
 21065  00233A                     l23471:
 21066                           
 21067                           ; BSR set to: 0
 21068  00233A  2BED               	incf	eusartparser@i_7283& (0+255),f,b
 21069  00233C  D7B0               	goto	l23449
 21070  00233E                     l23477:
 21071                           
 21072                           ;eusartparser.c: 582:                     save_f=0;
 21073  00233E  0E00               	movlw	0
 21074  002340  0101               	movlb	1	; () banked
 21075  002342  6F8B               	movwf	eusartparser@save_f& (0+255),b
 21076  002344  0012               	return	
 21077  002346                     l23479:
 21078                           
 21079                           ; BSR set to: 0
 21080                           ;eusartparser.c: 586:                 for(uint8_t i=0;;i++)
 21081  002346  0E00               	movlw	0
 21082  002348  6FEE               	movwf	eusartparser@i_7284& (0+255),b
 21083  00234A                     l23481:
 21084                           
 21085                           ; BSR set to: 0
 21086                           ;eusartparser.c: 587:                     if(cmdMemoryIsEmpty(0,i)==0&&package->address=
      +                          =0){
 21087  00234A  C0EE  F02E         	movff	eusartparser@i_7284,cmdMemoryIsEmpty@position
 21088  00234E  0E00               	movlw	0
 21089  002350  ECFD  F03C         	call	_cmdMemoryIsEmpty
 21090  002354  0900               	iorlw	0
 21091  002356  A4D8               	btfss	status,2,c
 21092  002358  D00F               	goto	l23495
 21093  00235A  0100               	movlb	0	; () banked
 21094  00235C  51E0               	movf	eusartparser@package& (0+255),w,b
 21095  00235E  6ED9               	movwf	fsr2l,c
 21096  002360  6ADA               	clrf	fsr2h,c
 21097  002362  0E01               	movlw	1
 21098  002364  26D9               	addwf	fsr2l,f,c
 21099  002366  50DF               	movf	indf2,w,c
 21100  002368  A4D8               	btfss	status,2,c
 21101  00236A  D006               	goto	l23495
 21102                           
 21103                           ; BSR set to: 0
 21104                           ;eusartparser.c: 588:                         RemoveSerial(0, i);
 21105  00236C  C0EE  F03A         	movff	eusartparser@i_7284,RemoveSerial@position
 21106  002370  0E00               	movlw	0
 21107  002372  ECAD  F03F         	call	_RemoveSerial
 21108  002376  D7B1               	goto	l23455
 21109  002378                     l23495:
 21110  002378  C0EE  F02E         	movff	eusartparser@i_7284,cmdMemoryIsEmpty@position
 21111  00237C  0E00               	movlw	0
 21112  00237E  ECFD  F03C         	call	_cmdMemoryIsEmpty
 21113  002382  0900               	iorlw	0
 21114  002384  A4D8               	btfss	status,2,c
 21115  002386  D008               	goto	l23499
 21116                           
 21117                           ;eusartparser.c: 595:                         package->address--;
 21118  002388  0100               	movlb	0	; () banked
 21119  00238A  51E0               	movf	eusartparser@package& (0+255),w,b
 21120  00238C  6ED9               	movwf	fsr2l,c
 21121  00238E  6ADA               	clrf	fsr2h,c
 21122  002390  0E01               	movlw	1
 21123  002392  26D9               	addwf	fsr2l,f,c
 21124  002394  06DF               	decf	indf2,f,c
 21125                           
 21126                           ;eusartparser.c: 596:                     }
 21127  002396  D005               	goto	l23507
 21128  002398                     l23499:
 21129  002398  0100               	movlb	0	; () banked
 21130  00239A  51EE               	movf	eusartparser@i_7284& (0+255),w,b
 21131  00239C  19B8               	xorwf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 21132  00239E  B4D8               	btfsc	status,2,c
 21133  0023A0  D7C5               	goto	u28650
 21134  0023A2                     l23507:
 21135                           
 21136                           ; BSR set to: 0
 21137  0023A2  2BEE               	incf	eusartparser@i_7284& (0+255),f,b
 21138  0023A4  D7D2               	goto	l23481
 21139  0023A6                     l23509:
 21140                           
 21141                           ; BSR set to: 0
 21142                           ;eusartparser.c: 605:                 for(uint8_t i=0;;i++)
 21143  0023A6  0E00               	movlw	0
 21144  0023A8  6FEF               	movwf	eusartparser@i_7285& (0+255),b
 21145  0023AA                     l23511:
 21146                           
 21147                           ; BSR set to: 0
 21148                           ;eusartparser.c: 606:                     if(cmdMemoryIsEmpty(0,i)==0&&package->address=
      +                          =0){
 21149  0023AA  C0EF  F02E         	movff	eusartparser@i_7285,cmdMemoryIsEmpty@position
 21150  0023AE  0E00               	movlw	0
 21151  0023B0  ECFD  F03C         	call	_cmdMemoryIsEmpty
 21152  0023B4  0900               	iorlw	0
 21153  0023B6  A4D8               	btfss	status,2,c
 21154  0023B8  D03D               	goto	l23533
 21155  0023BA  0100               	movlb	0	; () banked
 21156  0023BC  51E0               	movf	eusartparser@package& (0+255),w,b
 21157  0023BE  6ED9               	movwf	fsr2l,c
 21158  0023C0  6ADA               	clrf	fsr2h,c
 21159  0023C2  0E01               	movlw	1
 21160  0023C4  26D9               	addwf	fsr2l,f,c
 21161  0023C6  50DF               	movf	indf2,w,c
 21162  0023C8  A4D8               	btfss	status,2,c
 21163  0023CA  D034               	goto	l23533
 21164                           
 21165                           ; BSR set to: 0
 21166                           ;eusartparser.c: 607:                         ReadSerial(0, &serial, i);
 21167  0023CC  0EF0               	movlw	low eusartparser@serial
 21168  0023CE  6E2E               	movwf	ReadSerial@tempSerial^0,c
 21169  0023D0  C0EF  F02F         	movff	eusartparser@i_7285,ReadSerial@position
 21170  0023D4  0E00               	movlw	0
 21171  0023D6  EC04  F042         	call	_ReadSerial
 21172                           
 21173                           ;eusartparser.c: 608:                         package->data.data16=(uint16_t)serial;
 21174  0023DA  0100               	movlb	0	; () banked
 21175  0023DC  51E0               	movf	eusartparser@package& (0+255),w,b
 21176  0023DE  6ED9               	movwf	fsr2l,c
 21177  0023E0  6ADA               	clrf	fsr2h,c
 21178  0023E2  0E02               	movlw	2
 21179  0023E4  26D9               	addwf	fsr2l,f,c
 21180  0023E6  C0F0  FFDE         	movff	eusartparser@serial,postinc2
 21181  0023EA  C0F1  FFDD         	movff	eusartparser@serial+1,postdec2
 21182                           
 21183                           ; BSR set to: 0
 21184                           ;eusartparser.c: 609:                         write_package(*package);
 21185  0023EE  51E0               	movf	eusartparser@package& (0+255),w,b
 21186  0023F0  6ED9               	movwf	fsr2l,c
 21187  0023F2  6ADA               	clrf	fsr2h,c
 21188  0023F4  EE00  F011         	lfsr	0,write_package@package
 21189  0023F8  0E06               	movlw	6
 21190  0023FA                     u28721:
 21191  0023FA  CFDB FFEB          	movff	plusw2,plusw0
 21192  0023FE  06E8               	decf	wreg,f,c
 21193  002400  E2FC               	bc	u28721
 21194  002402  EC5C  F048         	call	_write_package	;wreg free
 21195                           
 21196                           ;eusartparser.c: 610:                         package->data.data16=(uint16_t)(serial>>16
      +                          );
 21197  002406  0100               	movlb	0	; () banked
 21198  002408  51E0               	movf	eusartparser@package& (0+255),w,b
 21199  00240A  6ED9               	movwf	fsr2l,c
 21200  00240C  6ADA               	clrf	fsr2h,c
 21201  00240E  0E02               	movlw	2
 21202  002410  26D9               	addwf	fsr2l,f,c
 21203  002412  C0F2  FFDE         	movff	eusartparser@serial+2,postinc2
 21204  002416  C0F3  FFDD         	movff	eusartparser@serial+3,postdec2
 21205                           
 21206                           ; BSR set to: 0
 21207                           ;eusartparser.c: 611:                         write_package(*package);
 21208  00241A  51E0               	movf	eusartparser@package& (0+255),w,b
 21209  00241C  6ED9               	movwf	fsr2l,c
 21210  00241E  6ADA               	clrf	fsr2h,c
 21211  002420  EE00  F011         	lfsr	0,write_package@package
 21212  002424  0E06               	movlw	6
 21213  002426                     u28731:
 21214  002426  CFDB FFEB          	movff	plusw2,plusw0
 21215  00242A  06E8               	decf	wreg,f,c
 21216  00242C  E2FC               	bc	u28731
 21217  00242E  EC5C  F048         	call	_write_package	;wreg free
 21218  002432  D753               	goto	l23455
 21219  002434                     l23533:
 21220  002434  C0EF  F02E         	movff	eusartparser@i_7285,cmdMemoryIsEmpty@position
 21221  002438  0E00               	movlw	0
 21222  00243A  ECFD  F03C         	call	_cmdMemoryIsEmpty
 21223  00243E  0900               	iorlw	0
 21224  002440  A4D8               	btfss	status,2,c
 21225  002442  D008               	goto	l23537
 21226                           
 21227                           ;eusartparser.c: 618:                         package->address--;
 21228  002444  0100               	movlb	0	; () banked
 21229  002446  51E0               	movf	eusartparser@package& (0+255),w,b
 21230  002448  6ED9               	movwf	fsr2l,c
 21231  00244A  6ADA               	clrf	fsr2h,c
 21232  00244C  0E01               	movlw	1
 21233  00244E  26D9               	addwf	fsr2l,f,c
 21234  002450  06DF               	decf	indf2,f,c
 21235                           
 21236                           ;eusartparser.c: 619:                     }
 21237  002452  D005               	goto	l23545
 21238  002454                     l23537:
 21239  002454  0100               	movlb	0	; () banked
 21240  002456  51EF               	movf	eusartparser@i_7285& (0+255),w,b
 21241  002458  19B8               	xorwf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 21242  00245A  B4D8               	btfsc	status,2,c
 21243  00245C  D767               	goto	u28650
 21244  00245E                     l23545:
 21245                           
 21246                           ; BSR set to: 0
 21247  00245E  2BEF               	incf	eusartparser@i_7285& (0+255),f,b
 21248  002460  D7A4               	goto	l23511
 21249  002462                     l23547:
 21250                           
 21251                           ; BSR set to: 0
 21252                           ;eusartparser.c: 629:                 package->functioncode=0x03;
 21253  002462  51E0               	movf	eusartparser@package& (0+255),w,b
 21254  002464  6ED9               	movwf	fsr2l,c
 21255  002466  6ADA               	clrf	fsr2h,c
 21256  002468  0E03               	movlw	3
 21257  00246A  6EDF               	movwf	indf2,c
 21258                           
 21259                           ; BSR set to: 0
 21260                           ;eusartparser.c: 630:                 package->address=0x00;
 21261  00246C  51E0               	movf	eusartparser@package& (0+255),w,b
 21262  00246E  6ED9               	movwf	fsr2l,c
 21263  002470  6ADA               	clrf	fsr2h,c
 21264  002472  0E01               	movlw	1
 21265  002474  26D9               	addwf	fsr2l,f,c
 21266  002476  0E00               	movlw	0
 21267  002478  6EDF               	movwf	indf2,c
 21268                           
 21269                           ; BSR set to: 0
 21270                           ;eusartparser.c: 631:                 package->data.data16=0x0000;
 21271  00247A  51E0               	movf	eusartparser@package& (0+255),w,b
 21272  00247C  6ED9               	movwf	fsr2l,c
 21273  00247E  6ADA               	clrf	fsr2h,c
 21274  002480  0E02               	movlw	2
 21275  002482  26D9               	addwf	fsr2l,f,c
 21276  002484  0E00               	movlw	0
 21277  002486  6EDE               	movwf	postinc2,c
 21278  002488  0E00               	movlw	0
 21279  00248A  6EDD               	movwf	postdec2,c
 21280  00248C  D591               	goto	l23321
 21281  00248E                     l23555:
 21282                           
 21283                           ; BSR set to: 0
 21284  00248E  51E0               	movf	eusartparser@package& (0+255),w,b
 21285  002490  6ED9               	movwf	fsr2l,c
 21286  002492  6ADA               	clrf	fsr2h,c
 21287  002494  50DF               	movf	indf2,w,c
 21288  002496  6FE1               	movwf	??_eusartparser& (0+255),b
 21289  002498  6BE2               	clrf	(??_eusartparser+1)& (0+255),b
 21290                           
 21291                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21292                           ; Switch size 1, requested type "simple"
 21293                           ; Number of cases is 1, Range of values is 0 to 0
 21294                           ; switch strategies available:
 21295                           ; Name         Instructions Cycles
 21296                           ; simple_byte            4     3 (average)
 21297                           ;	Chosen strategy is simple_byte
 21298  00249A  51E2               	movf	(??_eusartparser+1)& (0+255),w,b
 21299  00249C  0A00               	xorlw	0	; case 0
 21300  00249E  A4D8               	btfss	status,2,c
 21301  0024A0  D7E0               	goto	l23547
 21302                           
 21303                           ; BSR set to: 0
 21304                           ; Switch size 1, requested type "simple"
 21305                           ; Number of cases is 11, Range of values is 0 to 10
 21306                           ; switch strategies available:
 21307                           ; Name         Instructions Cycles
 21308                           ; simple_byte           34    18 (average)
 21309                           ;	Chosen strategy is simple_byte
 21310  0024A2  51E1               	movf	??_eusartparser& (0+255),w,b
 21311  0024A4  0A00               	xorlw	0	; case 0
 21312  0024A6  B4D8               	btfsc	status,2,c
 21313  0024A8  D576               	goto	l23315
 21314  0024AA  0A01               	xorlw	1	; case 1
 21315  0024AC  B4D8               	btfsc	status,2,c
 21316  0024AE  D58E               	goto	l23323
 21317  0024B0  0A03               	xorlw	3	; case 2
 21318  0024B2  B4D8               	btfsc	status,2,c
 21319  0024B4  D59B               	goto	l23331
 21320  0024B6  0A01               	xorlw	1	; case 3
 21321  0024B8  B4D8               	btfsc	status,2,c
 21322  0024BA  D574               	goto	l23319
 21323  0024BC  0A07               	xorlw	7	; case 4
 21324  0024BE  B4D8               	btfsc	status,2,c
 21325  0024C0  D5CC               	goto	l23361
 21326  0024C2  0A01               	xorlw	1	; case 5
 21327  0024C4  B4D8               	btfsc	status,2,c
 21328  0024C6  D5F7               	goto	l23379
 21329  0024C8  0A03               	xorlw	3	; case 6
 21330  0024CA  B4D8               	btfsc	status,2,c
 21331  0024CC  D61F               	goto	l23397
 21332  0024CE  0A01               	xorlw	1	; case 7
 21333  0024D0  B4D8               	btfsc	status,2,c
 21334  0024D2  D651               	goto	l23415
 21335  0024D4  0A0F               	xorlw	15	; case 8
 21336  0024D6  B4D8               	btfsc	status,2,c
 21337  0024D8  D683               	goto	l23433
 21338  0024DA  0A01               	xorlw	1	; case 9
 21339  0024DC  B4D8               	btfsc	status,2,c
 21340  0024DE  D733               	goto	l23479
 21341  0024E0  0A03               	xorlw	3	; case 10
 21342  0024E2  B4D8               	btfsc	status,2,c
 21343  0024E4  D760               	goto	l23509
 21344  0024E6  D7BD               	goto	l23547
 21345  0024E8                     __end_of_eusartparser:
 21346                           	callstack 0
 21347                           
 21348 ;; *************** function _write_eusartparser *****************
 21349 ;; Defined at:
 21350 ;;		line 248 in file "eusartparser.c"
 21351 ;; Parameters:    Size  Location     Type
 21352 ;;  package         7   15[COMRAM] struct package_t
 21353 ;; Auto vars:     Size  Location     Type
 21354 ;;  debug2          2   32[COMRAM] volatile int 
 21355 ;;  debug           2   30[COMRAM] volatile int 
 21356 ;; Return value:  Size  Location     Type
 21357 ;;                  1    wreg      void 
 21358 ;; Registers used:
 21359 ;;		wreg, status,2, status,0
 21360 ;; Tracked objects:
 21361 ;;		On entry : 3F/0
 21362 ;;		On exit  : 3F/0
 21363 ;;		Unchanged: 0/0
 21364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21365 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21366 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21367 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21368 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21369 ;;Total ram usage:       19 bytes
 21370 ;; Hardware stack levels used: 1
 21371 ;; Hardware stack levels required when called: 4
 21372 ;; This function calls:
 21373 ;;		Nothing
 21374 ;; This function is called by:
 21375 ;;		_eusartparser
 21376 ;; This function uses a non-reentrant model
 21377 ;;
 21378                           
 21379                           	psect	text75
 21380  003404                     __ptext75:
 21381                           	callstack 0
 21382  003404                     _write_eusartparser:
 21383                           	callstack 25
 21384                           
 21385                           ; BSR set to: 0
 21386                           ;eusartparser.c: 249:         volatile int debug=(uint8_t)package.address;
 21387                           
 21388                           ;incstack = 0
 21389  003404  C011  F01F         	movff	write_eusartparser@package+1,write_eusartparser@debug	;volatile
 21390  003408  6A20               	clrf	(write_eusartparser@debug+1)^0,c	;volatile
 21391                           
 21392                           ; BSR set to: 0
 21393                           ;eusartparser.c: 250:         volatile int debug2=0x10;
 21394  00340A  0E00               	movlw	0
 21395  00340C  6E22               	movwf	(write_eusartparser@debug2+1)^0,c	;volatile
 21396  00340E  0E10               	movlw	16
 21397  003410  6E21               	movwf	write_eusartparser@debug2^0,c	;volatile
 21398                           
 21399                           ;eusartparser.c: 251:         switch((uint8_t)package.address){
 21400  003412  D180               	goto	l16515
 21401  003414                     l3604:
 21402                           
 21403                           ; BSR set to: 0
 21404                           ;eusartparser.c: 256:                 var_sys_NVM.decelarationOpen=package.data.data8[0]
      +                          ;
 21405  003414  C012  F098         	movff	write_eusartparser@package+2,_var_sys_NVM	;volatile
 21406                           
 21407                           ;eusartparser.c: 257:                 var_sys_NVM.decelarationClose=package.data.data8[1
      +                          ];
 21408  003418  C013  F099         	movff	write_eusartparser@package+3,_var_sys_NVM+1	;volatile
 21409                           
 21410                           ;eusartparser.c: 258:                 break;
 21411  00341C  0012               	return	
 21412  00341E                     l3606:
 21413                           
 21414                           ; BSR set to: 0
 21415                           ;eusartparser.c: 262:                 var_sys_NVM.motorPower=package.data.data8[0];
 21416  00341E  C012  F09A         	movff	write_eusartparser@package+2,_var_sys_NVM+2	;volatile
 21417                           
 21418                           ;eusartparser.c: 263:                 var_sys_NVM.motorSensitivity=package.data.data8[1]
      +                          ;
 21419  003422  C013  F09B         	movff	write_eusartparser@package+3,_var_sys_NVM+3	;volatile
 21420                           
 21421                           ;eusartparser.c: 264:                 break;
 21422  003426  0012               	return	
 21423  003428                     l3607:
 21424                           
 21425                           ; BSR set to: 0
 21426                           ;eusartparser.c: 268:                 var_sys_NVM.walkTime=package.data.data8[1];
 21427  003428  C013  F09C         	movff	write_eusartparser@package+3,_var_sys_NVM+4	;volatile
 21428                           
 21429                           ;eusartparser.c: 269:                 break;
 21430  00342C  0012               	return	
 21431  00342E                     l3609:
 21432                           
 21433                           ; BSR set to: 0
 21434                           ;eusartparser.c: 274:                 var_sys_NVM.autoTimeFullClose=package.data.data8[0
      +                          ];
 21435  00342E  C012  F09D         	movff	write_eusartparser@package+2,_var_sys_NVM+5	;volatile
 21436                           
 21437                           ;eusartparser.c: 275:                 var_sys_NVM.autoTimeWalkClose=package.data.data8[1
      +                          ];
 21438  003432  C013  F09E         	movff	write_eusartparser@package+3,_var_sys_NVM+6	;volatile
 21439                           
 21440                           ;eusartparser.c: 276:                 break;
 21441  003436  0012               	return	
 21442  003438                     l3611:
 21443                           
 21444                           ; BSR set to: 0
 21445                           ;eusartparser.c: 281:                 var_sys_NVM.photoCellIsON=package.data.data8[0];
 21446  003438  C012  F09F         	movff	write_eusartparser@package+2,_var_sys_NVM+7	;volatile
 21447                           
 21448                           ;eusartparser.c: 282:                 var_sys_NVM.photoCellInOpen=package.data.data8[1];
 21449  00343C  C013  F0A0         	movff	write_eusartparser@package+3,_var_sys_NVM+8	;volatile
 21450                           
 21451                           ;eusartparser.c: 283:                 break;
 21452  003440  0012               	return	
 21453  003442                     l3612:
 21454                           
 21455                           ; BSR set to: 0
 21456                           ;eusartparser.c: 287:                 var_sys_NVM.securityBandIsON=package.data.data8[0]
      +                          ;
 21457  003442  C012  F0A1         	movff	write_eusartparser@package+2,_var_sys_NVM+9	;volatile
 21458                           
 21459                           ;eusartparser.c: 288:                 var_sys_NVM.securityBandType=package.data.data8[1]
      +                          ;
 21460  003446  C013  F0A2         	movff	write_eusartparser@package+3,_var_sys_NVM+10	;volatile
 21461                           
 21462                           ;eusartparser.c: 289:                 break;
 21463  00344A  0012               	return	
 21464  00344C                     l3613:
 21465                           
 21466                           ; BSR set to: 0
 21467                           ;eusartparser.c: 293:                 var_sys_NVM.securityBandInOpen=package.data.data8[
      +                          1];
 21468  00344C  C013  F0A3         	movff	write_eusartparser@package+3,_var_sys_NVM+11	;volatile
 21469                           
 21470                           ;eusartparser.c: 294:                 break;
 21471  003450  0012               	return	
 21472  003452                     l3614:
 21473                           
 21474                           ; BSR set to: 0
 21475                           ;eusartparser.c: 298:                 var_sys_NVM.operationMode=package.data.data8[1];
 21476  003452  C013  F0A4         	movff	write_eusartparser@package+3,_var_sys_NVM+12	;volatile
 21477                           
 21478                           ;eusartparser.c: 299:                 break;
 21479  003456  0012               	return	
 21480  003458                     l3615:
 21481                           
 21482                           ; BSR set to: 0
 21483                           ;eusartparser.c: 303:                 var_sys_NVM.flashLightMode=package.data.data8[1];
 21484  003458  C013  F0A5         	movff	write_eusartparser@package+3,_var_sys_NVM+13	;volatile
 21485                           
 21486                           ;eusartparser.c: 304:                 break;
 21487  00345C  0012               	return	
 21488  00345E                     l3616:
 21489                           
 21490                           ; BSR set to: 0
 21491                           ;eusartparser.c: 308:                 var_sys_NVM.programmingDistance=package.data.data8
      +                          [1];
 21492  00345E  C013  F0A6         	movff	write_eusartparser@package+3,_var_sys_NVM+14	;volatile
 21493                           
 21494                           ;eusartparser.c: 309:                 break;
 21495  003462  0012               	return	
 21496  003464                     l3617:
 21497                           
 21498                           ; BSR set to: 0
 21499                           ;eusartparser.c: 313:                 var_sys_NVM.decelarationSensivity=package.data.dat
      +                          a8[1];
 21500  003464  C013  F0A7         	movff	write_eusartparser@package+3,_var_sys_NVM+15	;volatile
 21501                           
 21502                           ;eusartparser.c: 314:                 break;
 21503  003468  0012               	return	
 21504  00346A                     l3618:
 21505                           
 21506                           ; BSR set to: 0
 21507                           ;eusartparser.c: 319:                 var_sys_NVM.homemPresente=package.data.data8[1];
 21508  00346A  C013  F0A8         	movff	write_eusartparser@package+3,_var_sys_NVM+16	;volatile
 21509                           
 21510                           ;eusartparser.c: 320:                 break;
 21511  00346E  0012               	return	
 21512  003470                     l3620:
 21513                           
 21514                           ; BSR set to: 0
 21515                           ;eusartparser.c: 325:                 var_sys_NVM.logicDigital=package.data.data8[1];
 21516  003470  C013  F0A9         	movff	write_eusartparser@package+3,_var_sys_NVM+17	;volatile
 21517                           
 21518                           ;eusartparser.c: 326:                 break;
 21519  003474  0012               	return	
 21520  003476                     l3621:
 21521                           
 21522                           ; BSR set to: 0
 21523                           ;eusartparser.c: 330:                 var_sys_NVM.softStart=package.data.data8[0];
 21524  003476  C012  F0AA         	movff	write_eusartparser@package+2,_var_sys_NVM+18	;volatile
 21525                           
 21526                           ;eusartparser.c: 331:                 var_sys_NVM.softstop=package.data.data8[1];
 21527  00347A  C013  F0AB         	movff	write_eusartparser@package+3,_var_sys_NVM+19	;volatile
 21528                           
 21529                           ;eusartparser.c: 332:                 break;
 21530  00347E  0012               	return	
 21531  003480                     l3623:
 21532                           
 21533                           ; BSR set to: 0
 21534                           ;eusartparser.c: 337:                 var_sys_NVM.ligthTime=package.data.data8[1];
 21535  003480  C013  F0AC         	movff	write_eusartparser@package+3,_var_sys_NVM+20	;volatile
 21536                           
 21537                           ;eusartparser.c: 338:                 break;
 21538  003484  0012               	return	
 21539  003486                     l3625:
 21540                           
 21541                           ; BSR set to: 0
 21542                           ;eusartparser.c: 343:                 var_sys_NVM.folow_me=package.data.data8[1];
 21543  003486  C013  F0AD         	movff	write_eusartparser@package+3,_var_sys_NVM+21	;volatile
 21544                           
 21545                           ;eusartparser.c: 344:                 break;
 21546  00348A  0012               	return	
 21547  00348C                     l3626:
 21548                           
 21549                           ; BSR set to: 0
 21550                           ;eusartparser.c: 348:                 var_sys_NVM.Stopboton=package.data.data8[1];
 21551  00348C  C013  F0AE         	movff	write_eusartparser@package+3,_var_sys_NVM+22	;volatile
 21552                           
 21553                           ;eusartparser.c: 349:                 break;
 21554  003490  0012               	return	
 21555  003492                     l3627:
 21556                           
 21557                           ; BSR set to: 0
 21558                           ;eusartparser.c: 353:                 var_sys_NVM.electricBrake=package.data.data8[1];
 21559  003492  C013  F0AF         	movff	write_eusartparser@package+3,_var_sys_NVM+23	;volatile
 21560                           
 21561                           ;eusartparser.c: 354:                 break;
 21562  003496  0012               	return	
 21563  003498                     l3628:
 21564                           
 21565                           ; BSR set to: 0
 21566                           ;eusartparser.c: 358:                 var_sys_NVM.velocityDecelaration=package.data.data
      +                          8[1];
 21567  003498  C013  F0B0         	movff	write_eusartparser@package+3,_var_sys_NVM+24	;volatile
 21568                           
 21569                           ;eusartparser.c: 359:                 break;
 21570  00349C  0012               	return	
 21571  00349E                     l3630:
 21572                           
 21573                           ; BSR set to: 0
 21574                           ;eusartparser.c: 364:                 var_sys_NVM.flashRGBMode=package.data.data8[1];
 21575  00349E  C013  F0B1         	movff	write_eusartparser@package+3,_var_sys_NVM+25	;volatile
 21576                           
 21577                           ;eusartparser.c: 365:                 break;
 21578  0034A2  0012               	return	
 21579  0034A4                     l3631:
 21580                           
 21581                           ; BSR set to: 0
 21582                           ;eusartparser.c: 369:                 var_sys_NVM.Direction_motor=package.data.data8[1];
 21583  0034A4  C013  F0B3         	movff	write_eusartparser@package+3,_var_sys_NVM+27	;volatile
 21584                           
 21585                           ;eusartparser.c: 370:                 break;
 21586  0034A8  0012               	return	
 21587  0034AA                     l3632:
 21588                           
 21589                           ; BSR set to: 0
 21590                           ;eusartparser.c: 374:                 var_sys_NVM.TypeofMotor=package.data.data8[1];
 21591  0034AA  C013  F0B4         	movff	write_eusartparser@package+3,_var_sys_NVM+28	;volatile
 21592                           
 21593                           ;eusartparser.c: 375:                 break;
 21594  0034AE  0012               	return	
 21595  0034B0                     l3633:
 21596                           
 21597                           ; BSR set to: 0
 21598                           ;eusartparser.c: 379:                 var_sys_NVM.positionRemotesFull=package.data.data8
      +                          [0];
 21599  0034B0  C012  F0B8         	movff	write_eusartparser@package+2,_var_sys_NVM+32	;volatile
 21600                           
 21601                           ;eusartparser.c: 380:                 var_sys_NVM.positionRemotesWalk=package.data.data8
      +                          [1];
 21602  0034B4  C013  F0B9         	movff	write_eusartparser@package+3,_var_sys_NVM+33	;volatile
 21603                           
 21604                           ;eusartparser.c: 381:                 break;
 21605  0034B8  0012               	return	
 21606  0034BA                     l16493:
 21607                           
 21608                           ; BSR set to: 0
 21609                           ;eusartparser.c: 384:                 var_sys_NVM.counterMoves=var_sys_NVM.counterMoves|
      +                          ((uint32_t)(package.data.data16&0xFFFF)<<(uint8_t)(1*16));
 21610  0034BA  5012               	movf	(write_eusartparser@package+2)^0,w,c
 21611  0034BC  6E17               	movwf	??_write_eusartparser^0,c
 21612  0034BE  5013               	movf	(write_eusartparser@package+3)^0,w,c
 21613  0034C0  6E18               	movwf	(??_write_eusartparser+1)^0,c
 21614  0034C2  6A19               	clrf	(??_write_eusartparser+2)^0,c
 21615  0034C4  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 21616  0034C6  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 21617  0034CA  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 21618  0034CE  6A18               	clrf	(??_write_eusartparser+1)^0,c
 21619  0034D0  6A17               	clrf	??_write_eusartparser^0,c
 21620  0034D2  51BA               	movf	(_var_sys_NVM+34)& (0+255),w,b	;volatile
 21621  0034D4  1017               	iorwf	??_write_eusartparser^0,w,c
 21622  0034D6  6FBA               	movwf	(_var_sys_NVM+34)& (0+255),b	;volatile
 21623  0034D8  51BB               	movf	(_var_sys_NVM+35)& (0+255),w,b	;volatile
 21624  0034DA  1018               	iorwf	(??_write_eusartparser+1)^0,w,c
 21625  0034DC  6FBB               	movwf	(_var_sys_NVM+35)& (0+255),b	;volatile
 21626  0034DE  51BC               	movf	(_var_sys_NVM+36)& (0+255),w,b	;volatile
 21627  0034E0  1019               	iorwf	(??_write_eusartparser+2)^0,w,c
 21628  0034E2  6FBC               	movwf	(_var_sys_NVM+36)& (0+255),b	;volatile
 21629  0034E4  51BD               	movf	(_var_sys_NVM+37)& (0+255),w,b	;volatile
 21630  0034E6  101A               	iorwf	(??_write_eusartparser+3)^0,w,c
 21631  0034E8  6FBD               	movwf	(_var_sys_NVM+37)& (0+255),b	;volatile
 21632                           
 21633                           ;eusartparser.c: 385:                 var_sys_NVM.counterMoves=var_sys_NVM.counterMoves&
      +                          ~((uint32_t)(~package.data.data16&0xFFFF)<<(uint8_t)(1*16));
 21634  0034EA  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 21635  0034EC  6E17               	movwf	??_write_eusartparser^0,c
 21636  0034EE  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 21637  0034F0  6E18               	movwf	(??_write_eusartparser+1)^0,c
 21638  0034F2  6A19               	clrf	(??_write_eusartparser+2)^0,c
 21639  0034F4  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 21640  0034F6  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 21641  0034FA  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 21642  0034FE  6A18               	clrf	(??_write_eusartparser+1)^0,c
 21643  003500  6A17               	clrf	??_write_eusartparser^0,c
 21644  003502  1C17               	comf	??_write_eusartparser^0,w,c
 21645  003504  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 21646  003506  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 21647  003508  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 21648  00350A  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 21649  00350C  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 21650  00350E  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 21651  003510  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 21652  003512  51BA               	movf	(_var_sys_NVM+34)& (0+255),w,b	;volatile
 21653  003514  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 21654  003516  6FBA               	movwf	(_var_sys_NVM+34)& (0+255),b	;volatile
 21655  003518  51BB               	movf	(_var_sys_NVM+35)& (0+255),w,b	;volatile
 21656  00351A  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 21657  00351C  6FBB               	movwf	(_var_sys_NVM+35)& (0+255),b	;volatile
 21658  00351E  51BC               	movf	(_var_sys_NVM+36)& (0+255),w,b	;volatile
 21659  003520  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 21660  003522  6FBC               	movwf	(_var_sys_NVM+36)& (0+255),b	;volatile
 21661  003524  51BD               	movf	(_var_sys_NVM+37)& (0+255),w,b	;volatile
 21662  003526  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 21663  003528  6FBD               	movwf	(_var_sys_NVM+37)& (0+255),b	;volatile
 21664                           
 21665                           ;eusartparser.c: 386:                 break;
 21666  00352A  0012               	return	
 21667  00352C                     l16495:
 21668                           
 21669                           ; BSR set to: 0
 21670                           ;eusartparser.c: 388:                 var_sys_NVM.counterMoves=var_sys_NVM.counterMoves|
      +                          ((uint32_t)(package.data.data16&0xFFFF)<<(uint8_t)(0*16));
 21671  00352C  5012               	movf	(write_eusartparser@package+2)^0,w,c
 21672  00352E  11BA               	iorwf	(_var_sys_NVM+34)& (0+255),w,b	;volatile
 21673  003530  6FBA               	movwf	(_var_sys_NVM+34)& (0+255),b	;volatile
 21674  003532  5013               	movf	(write_eusartparser@package+3)^0,w,c
 21675  003534  11BB               	iorwf	(_var_sys_NVM+35)& (0+255),w,b	;volatile
 21676  003536  6FBB               	movwf	(_var_sys_NVM+35)& (0+255),b	;volatile
 21677  003538  0E00               	movlw	0
 21678  00353A  11BC               	iorwf	(_var_sys_NVM+36)& (0+255),w,b	;volatile
 21679  00353C  6FBC               	movwf	(_var_sys_NVM+36)& (0+255),b	;volatile
 21680  00353E  0E00               	movlw	0
 21681  003540  11BD               	iorwf	(_var_sys_NVM+37)& (0+255),w,b	;volatile
 21682  003542  6FBD               	movwf	(_var_sys_NVM+37)& (0+255),b	;volatile
 21683                           
 21684                           ;eusartparser.c: 389:                 var_sys_NVM.counterMoves=var_sys_NVM.counterMoves&
      +                          ~((uint32_t)(~package.data.data16&0xFFFF)<<(uint8_t)(0*16));
 21685  003544  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 21686  003546  6E17               	movwf	??_write_eusartparser^0,c
 21687  003548  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 21688  00354A  6E18               	movwf	(??_write_eusartparser+1)^0,c
 21689  00354C  6A19               	clrf	(??_write_eusartparser+2)^0,c
 21690  00354E  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 21691  003550  1C17               	comf	??_write_eusartparser^0,w,c
 21692  003552  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 21693  003554  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 21694  003556  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 21695  003558  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 21696  00355A  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 21697  00355C  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 21698  00355E  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 21699  003560  51BA               	movf	(_var_sys_NVM+34)& (0+255),w,b	;volatile
 21700  003562  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 21701  003564  6FBA               	movwf	(_var_sys_NVM+34)& (0+255),b	;volatile
 21702  003566  51BB               	movf	(_var_sys_NVM+35)& (0+255),w,b	;volatile
 21703  003568  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 21704  00356A  6FBB               	movwf	(_var_sys_NVM+35)& (0+255),b	;volatile
 21705  00356C  51BC               	movf	(_var_sys_NVM+36)& (0+255),w,b	;volatile
 21706  00356E  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 21707  003570  6FBC               	movwf	(_var_sys_NVM+36)& (0+255),b	;volatile
 21708  003572  51BD               	movf	(_var_sys_NVM+37)& (0+255),w,b	;volatile
 21709  003574  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 21710  003576  6FBD               	movwf	(_var_sys_NVM+37)& (0+255),b	;volatile
 21711                           
 21712                           ;eusartparser.c: 390:                 break;
 21713  003578  0012               	return	
 21714  00357A                     l3636:
 21715                           
 21716                           ; BSR set to: 0
 21717                           ;eusartparser.c: 395:                 var_sys_NVM.OnlyRollingCode=package.data.data8[1];
 21718  00357A  C013  F0BE         	movff	write_eusartparser@package+3,_var_sys_NVM+38	;volatile
 21719                           
 21720                           ;eusartparser.c: 396:                 break;
 21721  00357E  0012               	return	
 21722  003580                     l16497:
 21723                           
 21724                           ; BSR set to: 0
 21725                           ;eusartparser.c: 399:                 var_sys_NVM.learningCurrentDecelarationClose=var_s
      +                          ys_NVM.learningCurrentDecelarationClose|((uint32_t)(package.data.data16&0xFFFF)<<(uint8_
      +                          t)(1*16));
 21726  003580  5012               	movf	(write_eusartparser@package+2)^0,w,c
 21727  003582  6E17               	movwf	??_write_eusartparser^0,c
 21728  003584  5013               	movf	(write_eusartparser@package+3)^0,w,c
 21729  003586  6E18               	movwf	(??_write_eusartparser+1)^0,c
 21730  003588  6A19               	clrf	(??_write_eusartparser+2)^0,c
 21731  00358A  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 21732  00358C  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 21733  003590  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 21734  003594  6A18               	clrf	(??_write_eusartparser+1)^0,c
 21735  003596  6A17               	clrf	??_write_eusartparser^0,c
 21736  003598  51C0               	movf	(_var_sys_NVM+40)& (0+255),w,b	;volatile
 21737  00359A  1017               	iorwf	??_write_eusartparser^0,w,c
 21738  00359C  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 21739  00359E  51C1               	movf	(_var_sys_NVM+41)& (0+255),w,b	;volatile
 21740  0035A0  1018               	iorwf	(??_write_eusartparser+1)^0,w,c
 21741  0035A2  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 21742  0035A4  51C2               	movf	(_var_sys_NVM+42)& (0+255),w,b	;volatile
 21743  0035A6  1019               	iorwf	(??_write_eusartparser+2)^0,w,c
 21744  0035A8  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 21745  0035AA  51C3               	movf	(_var_sys_NVM+43)& (0+255),w,b	;volatile
 21746  0035AC  101A               	iorwf	(??_write_eusartparser+3)^0,w,c
 21747  0035AE  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 21748                           
 21749                           ;eusartparser.c: 400:                 var_sys_NVM.learningCurrentDecelarationClose=var_s
      +                          ys_NVM.learningCurrentDecelarationClose&~((uint32_t)(~package.data.data16&0xFFFF)<<(uint
      +                          8_t)(1*16));
 21750  0035B0  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 21751  0035B2  6E17               	movwf	??_write_eusartparser^0,c
 21752  0035B4  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 21753  0035B6  6E18               	movwf	(??_write_eusartparser+1)^0,c
 21754  0035B8  6A19               	clrf	(??_write_eusartparser+2)^0,c
 21755  0035BA  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 21756  0035BC  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 21757  0035C0  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 21758  0035C4  6A18               	clrf	(??_write_eusartparser+1)^0,c
 21759  0035C6  6A17               	clrf	??_write_eusartparser^0,c
 21760  0035C8  1C17               	comf	??_write_eusartparser^0,w,c
 21761  0035CA  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 21762  0035CC  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 21763  0035CE  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 21764  0035D0  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 21765  0035D2  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 21766  0035D4  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 21767  0035D6  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 21768  0035D8  51C0               	movf	(_var_sys_NVM+40)& (0+255),w,b	;volatile
 21769  0035DA  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 21770  0035DC  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 21771  0035DE  51C1               	movf	(_var_sys_NVM+41)& (0+255),w,b	;volatile
 21772  0035E0  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 21773  0035E2  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 21774  0035E4  51C2               	movf	(_var_sys_NVM+42)& (0+255),w,b	;volatile
 21775  0035E6  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 21776  0035E8  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 21777  0035EA  51C3               	movf	(_var_sys_NVM+43)& (0+255),w,b	;volatile
 21778  0035EC  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 21779  0035EE  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 21780                           
 21781                           ;eusartparser.c: 401:                 break;
 21782  0035F0  0012               	return	
 21783  0035F2                     l16499:
 21784                           
 21785                           ; BSR set to: 0
 21786                           ;eusartparser.c: 403:                 var_sys_NVM.learningCurrentDecelarationClose=var_s
      +                          ys_NVM.learningCurrentDecelarationClose|((uint32_t)(package.data.data16&0xFFFF)<<(uint8_
      +                          t)(0*16));
 21787  0035F2  5012               	movf	(write_eusartparser@package+2)^0,w,c
 21788  0035F4  11C0               	iorwf	(_var_sys_NVM+40)& (0+255),w,b	;volatile
 21789  0035F6  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 21790  0035F8  5013               	movf	(write_eusartparser@package+3)^0,w,c
 21791  0035FA  11C1               	iorwf	(_var_sys_NVM+41)& (0+255),w,b	;volatile
 21792  0035FC  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 21793  0035FE  0E00               	movlw	0
 21794  003600  11C2               	iorwf	(_var_sys_NVM+42)& (0+255),w,b	;volatile
 21795  003602  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 21796  003604  0E00               	movlw	0
 21797  003606  11C3               	iorwf	(_var_sys_NVM+43)& (0+255),w,b	;volatile
 21798  003608  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 21799                           
 21800                           ;eusartparser.c: 404:                 var_sys_NVM.learningCurrentDecelarationClose=var_s
      +                          ys_NVM.learningCurrentDecelarationClose&~((uint32_t)(~package.data.data16&0xFFFF)<<(uint
      +                          8_t)(0*16));
 21801  00360A  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 21802  00360C  6E17               	movwf	??_write_eusartparser^0,c
 21803  00360E  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 21804  003610  6E18               	movwf	(??_write_eusartparser+1)^0,c
 21805  003612  6A19               	clrf	(??_write_eusartparser+2)^0,c
 21806  003614  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 21807  003616  1C17               	comf	??_write_eusartparser^0,w,c
 21808  003618  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 21809  00361A  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 21810  00361C  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 21811  00361E  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 21812  003620  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 21813  003622  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 21814  003624  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 21815  003626  51C0               	movf	(_var_sys_NVM+40)& (0+255),w,b	;volatile
 21816  003628  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 21817  00362A  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 21818  00362C  51C1               	movf	(_var_sys_NVM+41)& (0+255),w,b	;volatile
 21819  00362E  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 21820  003630  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 21821  003632  51C2               	movf	(_var_sys_NVM+42)& (0+255),w,b	;volatile
 21822  003634  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 21823  003636  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 21824  003638  51C3               	movf	(_var_sys_NVM+43)& (0+255),w,b	;volatile
 21825  00363A  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 21826  00363C  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 21827                           
 21828                           ;eusartparser.c: 405:                 break;
 21829  00363E  0012               	return	
 21830  003640                     l16501:
 21831                           
 21832                           ; BSR set to: 0
 21833                           ;eusartparser.c: 408:                 var_sys_NVM.learningCurrentDecelarationOpen=var_sy
      +                          s_NVM.learningCurrentDecelarationOpen|((uint32_t)(package.data.data16&0xFFFF)<<(uint8_t)
      +                          (1*16));
 21834  003640  5012               	movf	(write_eusartparser@package+2)^0,w,c
 21835  003642  6E17               	movwf	??_write_eusartparser^0,c
 21836  003644  5013               	movf	(write_eusartparser@package+3)^0,w,c
 21837  003646  6E18               	movwf	(??_write_eusartparser+1)^0,c
 21838  003648  6A19               	clrf	(??_write_eusartparser+2)^0,c
 21839  00364A  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 21840  00364C  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 21841  003650  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 21842  003654  6A18               	clrf	(??_write_eusartparser+1)^0,c
 21843  003656  6A17               	clrf	??_write_eusartparser^0,c
 21844  003658  51C4               	movf	(_var_sys_NVM+44)& (0+255),w,b	;volatile
 21845  00365A  1017               	iorwf	??_write_eusartparser^0,w,c
 21846  00365C  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 21847  00365E  51C5               	movf	(_var_sys_NVM+45)& (0+255),w,b	;volatile
 21848  003660  1018               	iorwf	(??_write_eusartparser+1)^0,w,c
 21849  003662  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 21850  003664  51C6               	movf	(_var_sys_NVM+46)& (0+255),w,b	;volatile
 21851  003666  1019               	iorwf	(??_write_eusartparser+2)^0,w,c
 21852  003668  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 21853  00366A  51C7               	movf	(_var_sys_NVM+47)& (0+255),w,b	;volatile
 21854  00366C  101A               	iorwf	(??_write_eusartparser+3)^0,w,c
 21855  00366E  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 21856                           
 21857                           ;eusartparser.c: 409:                 var_sys_NVM.learningCurrentDecelarationOpen=var_sy
      +                          s_NVM.learningCurrentDecelarationOpen&~((uint32_t)(~package.data.data16&0xFFFF)<<(uint8_
      +                          t)(1*16));
 21858  003670  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 21859  003672  6E17               	movwf	??_write_eusartparser^0,c
 21860  003674  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 21861  003676  6E18               	movwf	(??_write_eusartparser+1)^0,c
 21862  003678  6A19               	clrf	(??_write_eusartparser+2)^0,c
 21863  00367A  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 21864  00367C  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 21865  003680  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 21866  003684  6A18               	clrf	(??_write_eusartparser+1)^0,c
 21867  003686  6A17               	clrf	??_write_eusartparser^0,c
 21868  003688  1C17               	comf	??_write_eusartparser^0,w,c
 21869  00368A  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 21870  00368C  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 21871  00368E  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 21872  003690  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 21873  003692  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 21874  003694  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 21875  003696  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 21876  003698  51C4               	movf	(_var_sys_NVM+44)& (0+255),w,b	;volatile
 21877  00369A  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 21878  00369C  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 21879  00369E  51C5               	movf	(_var_sys_NVM+45)& (0+255),w,b	;volatile
 21880  0036A0  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 21881  0036A2  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 21882  0036A4  51C6               	movf	(_var_sys_NVM+46)& (0+255),w,b	;volatile
 21883  0036A6  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 21884  0036A8  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 21885  0036AA  51C7               	movf	(_var_sys_NVM+47)& (0+255),w,b	;volatile
 21886  0036AC  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 21887  0036AE  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 21888                           
 21889                           ;eusartparser.c: 410:                 break;
 21890  0036B0  0012               	return	
 21891  0036B2                     l16503:
 21892                           
 21893                           ; BSR set to: 0
 21894                           ;eusartparser.c: 412:                 var_sys_NVM.learningCurrentDecelarationOpen=var_sy
      +                          s_NVM.learningCurrentDecelarationOpen|((uint32_t)(package.data.data16&0xFFFF)<<(uint8_t)
      +                          (0*16));
 21895  0036B2  5012               	movf	(write_eusartparser@package+2)^0,w,c
 21896  0036B4  11C4               	iorwf	(_var_sys_NVM+44)& (0+255),w,b	;volatile
 21897  0036B6  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 21898  0036B8  5013               	movf	(write_eusartparser@package+3)^0,w,c
 21899  0036BA  11C5               	iorwf	(_var_sys_NVM+45)& (0+255),w,b	;volatile
 21900  0036BC  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 21901  0036BE  0E00               	movlw	0
 21902  0036C0  11C6               	iorwf	(_var_sys_NVM+46)& (0+255),w,b	;volatile
 21903  0036C2  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 21904  0036C4  0E00               	movlw	0
 21905  0036C6  11C7               	iorwf	(_var_sys_NVM+47)& (0+255),w,b	;volatile
 21906  0036C8  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 21907                           
 21908                           ;eusartparser.c: 413:                 var_sys_NVM.learningCurrentDecelarationOpen=var_sy
      +                          s_NVM.learningCurrentDecelarationOpen&~((uint32_t)(~package.data.data16&0xFFFF)<<(uint8_
      +                          t)(0*16));
 21909  0036CA  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 21910  0036CC  6E17               	movwf	??_write_eusartparser^0,c
 21911  0036CE  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 21912  0036D0  6E18               	movwf	(??_write_eusartparser+1)^0,c
 21913  0036D2  6A19               	clrf	(??_write_eusartparser+2)^0,c
 21914  0036D4  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 21915  0036D6  1C17               	comf	??_write_eusartparser^0,w,c
 21916  0036D8  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 21917  0036DA  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 21918  0036DC  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 21919  0036DE  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 21920  0036E0  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 21921  0036E2  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 21922  0036E4  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 21923  0036E6  51C4               	movf	(_var_sys_NVM+44)& (0+255),w,b	;volatile
 21924  0036E8  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 21925  0036EA  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 21926  0036EC  51C5               	movf	(_var_sys_NVM+45)& (0+255),w,b	;volatile
 21927  0036EE  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 21928  0036F0  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 21929  0036F2  51C6               	movf	(_var_sys_NVM+46)& (0+255),w,b	;volatile
 21930  0036F4  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 21931  0036F6  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 21932  0036F8  51C7               	movf	(_var_sys_NVM+47)& (0+255),w,b	;volatile
 21933  0036FA  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 21934  0036FC  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 21935                           
 21936                           ;eusartparser.c: 414:                 break;
 21937  0036FE  0012               	return	
 21938  003700                     l3641:
 21939                           
 21940                           ; BSR set to: 0
 21941                           ;eusartparser.c: 417:                 var_sys_NVM.learningCurrentNormalClose=package.dat
      +                          a.data16;
 21942  003700  C012  F0C8         	movff	write_eusartparser@package+2,_var_sys_NVM+48	;volatile
 21943  003704  C013  F0C9         	movff	write_eusartparser@package+3,_var_sys_NVM+49	;volatile
 21944                           
 21945                           ;eusartparser.c: 418:                 break;
 21946  003708  0012               	return	
 21947  00370A                     l3642:
 21948                           
 21949                           ; BSR set to: 0
 21950                           ;eusartparser.c: 421:                 var_sys_NVM.learningCurrentNormalOpen=package.data
      +                          .data16;
 21951  00370A  C012  F0CA         	movff	write_eusartparser@package+2,_var_sys_NVM+50	;volatile
 21952  00370E  C013  F0CB         	movff	write_eusartparser@package+3,_var_sys_NVM+51	;volatile
 21953                           
 21954                           ;eusartparser.c: 422:                 break;
 21955  003712  0012               	return	
 21956  003714                     l16515:
 21957                           
 21958                           ; BSR set to: 0
 21959  003714  5011               	movf	(write_eusartparser@package+1)^0,w,c
 21960  003716  6E17               	movwf	??_write_eusartparser^0,c
 21961  003718  6A18               	clrf	(??_write_eusartparser+1)^0,c
 21962                           
 21963                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21964                           ; Switch size 1, requested type "simple"
 21965                           ; Number of cases is 1, Range of values is 0 to 0
 21966                           ; switch strategies available:
 21967                           ; Name         Instructions Cycles
 21968                           ; simple_byte            4     3 (average)
 21969                           ;	Chosen strategy is simple_byte
 21970  00371A  5018               	movf	(??_write_eusartparser+1)^0,w,c
 21971  00371C  0A00               	xorlw	0	; case 0
 21972  00371E  A4D8               	btfss	status,2,c
 21973  003720  0012               	return	
 21974                           
 21975                           ; BSR set to: 0
 21976                           ; Switch size 1, requested type "simple"
 21977                           ; Number of cases is 43, Range of values is 0 to 51
 21978                           ; switch strategies available:
 21979                           ; Name         Instructions Cycles
 21980                           ; simple_byte          130    66 (average)
 21981                           ;	Chosen strategy is simple_byte
 21982  003722  5017               	movf	??_write_eusartparser^0,w,c
 21983  003724  0A00               	xorlw	0	; case 0
 21984  003726  B4D8               	btfsc	status,2,c
 21985  003728  D675               	goto	l3604
 21986  00372A  0A02               	xorlw	2	; case 2
 21987  00372C  B4D8               	btfsc	status,2,c
 21988  00372E  D67F               	goto	l3609
 21989  003730  0A01               	xorlw	1	; case 3
 21990  003732  B4D8               	btfsc	status,2,c
 21991  003734  D6A5               	goto	l3623
 21992  003736  0A06               	xorlw	6	; case 5
 21993  003738  B4D8               	btfsc	status,2,c
 21994  00373A  D67E               	goto	l3611
 21995  00373C  0A02               	xorlw	2	; case 7
 21996  00373E  B4D8               	btfsc	status,2,c
 21997  003740  D697               	goto	l3620
 21998  003742  0A0F               	xorlw	15	; case 8
 21999  003744  B4D8               	btfsc	status,2,c
 22000  003746  D6AB               	goto	l3630
 22001  003748  0A02               	xorlw	2	; case 10
 22002  00374A  B4D8               	btfsc	status,2,c
 22003  00374C  D69C               	goto	l3625
 22004  00374E  0A1A               	xorlw	26	; case 16
 22005  003750  B4D8               	btfsc	status,2,c
 22006  003752  D660               	goto	l3604
 22007  003754  0A01               	xorlw	1	; case 17
 22008  003756  B4D8               	btfsc	status,2,c
 22009  003758  D662               	goto	l3606
 22010  00375A  0A03               	xorlw	3	; case 18
 22011  00375C  B4D8               	btfsc	status,2,c
 22012  00375E  D664               	goto	l3607
 22013  003760  0A01               	xorlw	1	; case 19
 22014  003762  B4D8               	btfsc	status,2,c
 22015  003764  D664               	goto	l3609
 22016  003766  0A07               	xorlw	7	; case 20
 22017  003768  B4D8               	btfsc	status,2,c
 22018  00376A  D666               	goto	l3611
 22019  00376C  0A01               	xorlw	1	; case 21
 22020  00376E  B4D8               	btfsc	status,2,c
 22021  003770  D668               	goto	l3612
 22022  003772  0A03               	xorlw	3	; case 22
 22023  003774  B4D8               	btfsc	status,2,c
 22024  003776  D66A               	goto	l3613
 22025  003778  0A01               	xorlw	1	; case 23
 22026  00377A  B4D8               	btfsc	status,2,c
 22027  00377C  D66A               	goto	l3614
 22028  00377E  0A0F               	xorlw	15	; case 24
 22029  003780  B4D8               	btfsc	status,2,c
 22030  003782  D66A               	goto	l3615
 22031  003784  0A01               	xorlw	1	; case 25
 22032  003786  B4D8               	btfsc	status,2,c
 22033  003788  D66A               	goto	l3616
 22034  00378A  0A03               	xorlw	3	; case 26
 22035  00378C  B4D8               	btfsc	status,2,c
 22036  00378E  D66A               	goto	l3617
 22037  003790  0A01               	xorlw	1	; case 27
 22038  003792  B4D8               	btfsc	status,2,c
 22039  003794  D66A               	goto	l3618
 22040  003796  0A07               	xorlw	7	; case 28
 22041  003798  B4D8               	btfsc	status,2,c
 22042  00379A  D66A               	goto	l3620
 22043  00379C  0A01               	xorlw	1	; case 29
 22044  00379E  B4D8               	btfsc	status,2,c
 22045  0037A0  D66A               	goto	l3621
 22046  0037A2  0A03               	xorlw	3	; case 30
 22047  0037A4  B4D8               	btfsc	status,2,c
 22048  0037A6  D66C               	goto	l3623
 22049  0037A8  0A01               	xorlw	1	; case 31
 22050  0037AA  B4D8               	btfsc	status,2,c
 22051  0037AC  D66C               	goto	l3625
 22052  0037AE  0A3F               	xorlw	63	; case 32
 22053  0037B0  B4D8               	btfsc	status,2,c
 22054  0037B2  D66C               	goto	l3626
 22055  0037B4  0A01               	xorlw	1	; case 33
 22056  0037B6  B4D8               	btfsc	status,2,c
 22057  0037B8  D66C               	goto	l3627
 22058  0037BA  0A03               	xorlw	3	; case 34
 22059  0037BC  B4D8               	btfsc	status,2,c
 22060  0037BE  D66C               	goto	l3628
 22061  0037C0  0A01               	xorlw	1	; case 35
 22062  0037C2  B4D8               	btfsc	status,2,c
 22063  0037C4  D66C               	goto	l3630
 22064  0037C6  0A07               	xorlw	7	; case 36
 22065  0037C8  B4D8               	btfsc	status,2,c
 22066  0037CA  D66C               	goto	l3631
 22067  0037CC  0A01               	xorlw	1	; case 37
 22068  0037CE  B4D8               	btfsc	status,2,c
 22069  0037D0  D66C               	goto	l3632
 22070  0037D2  0A03               	xorlw	3	; case 38
 22071  0037D4  B4D8               	btfsc	status,2,c
 22072  0037D6  D66C               	goto	l3633
 22073  0037D8  0A01               	xorlw	1	; case 39
 22074  0037DA  B4D8               	btfsc	status,2,c
 22075  0037DC  D66E               	goto	l16493
 22076  0037DE  0A0F               	xorlw	15	; case 40
 22077  0037E0  B4D8               	btfsc	status,2,c
 22078  0037E2  D6A4               	goto	l16495
 22079  0037E4  0A01               	xorlw	1	; case 41
 22080  0037E6  B4D8               	btfsc	status,2,c
 22081  0037E8  D6C8               	goto	l3636
 22082  0037EA  0A03               	xorlw	3	; case 42
 22083  0037EC  B4D8               	btfsc	status,2,c
 22084  0037EE  D6C8               	goto	l16497
 22085  0037F0  0A01               	xorlw	1	; case 43
 22086  0037F2  B4D8               	btfsc	status,2,c
 22087  0037F4  D6FE               	goto	l16499
 22088  0037F6  0A07               	xorlw	7	; case 44
 22089  0037F8  B4D8               	btfsc	status,2,c
 22090  0037FA  D722               	goto	l16501
 22091  0037FC  0A01               	xorlw	1	; case 45
 22092  0037FE  B4D8               	btfsc	status,2,c
 22093  003800  D758               	goto	l16503
 22094  003802  0A03               	xorlw	3	; case 46
 22095  003804  B4D8               	btfsc	status,2,c
 22096  003806  D77C               	goto	l3641
 22097  003808  0A01               	xorlw	1	; case 47
 22098  00380A  B4D8               	btfsc	status,2,c
 22099  00380C  D77E               	goto	l3642
 22100  00380E  0A1F               	xorlw	31	; case 48
 22101  003810  B4D8               	btfsc	status,2,c
 22102  003812  D716               	goto	l16501
 22103  003814  0A01               	xorlw	1	; case 49
 22104  003816  B4D8               	btfsc	status,2,c
 22105  003818  D74C               	goto	l16503
 22106  00381A  0A03               	xorlw	3	; case 50
 22107  00381C  B4D8               	btfsc	status,2,c
 22108  00381E  D710               	goto	l16501
 22109  003820  0A01               	xorlw	1	; case 51
 22110  003822  A4D8               	btfss	status,2,c
 22111  003824  0012               	return	
 22112  003826  D745               	goto	l16503
 22113  003828                     __end_of_write_eusartparser:
 22114                           	callstack 0
 22115                           
 22116 ;; *************** function _validateRemoteSerialNumber *****************
 22117 ;; Defined at:
 22118 ;;		line 27 in file "controlMemory_MC50.c"
 22119 ;; Parameters:    Size  Location     Type
 22120 ;;  serial          4   45[COMRAM] unsigned long 
 22121 ;;  VerifyOnlySe    1   49[COMRAM] enum E10564
 22122 ;;  position        2   50[COMRAM] PTR unsigned char 
 22123 ;;		 -> eusartparser@pos(1), controlSelectRemote@pos(1), classic_data(16), 
 22124 ;; Auto vars:     Size  Location     Type
 22125 ;;  mask            4   52[COMRAM] unsigned long 
 22126 ;;  i               1   57[COMRAM] unsigned char 
 22127 ;;  j               1   56[COMRAM] unsigned char 
 22128 ;; Return value:  Size  Location     Type
 22129 ;;                  1    wreg      enum E10539
 22130 ;; Registers used:
 22131 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22132 ;; Tracked objects:
 22133 ;;		On entry : 3F/0
 22134 ;;		On exit  : 3F/0
 22135 ;;		Unchanged: 0/0
 22136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22137 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22138 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22139 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22140 ;;      Totals:        13       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22141 ;;Total ram usage:       21 bytes
 22142 ;; Hardware stack levels used: 1
 22143 ;; Hardware stack levels required when called: 13
 22144 ;; This function calls:
 22145 ;;		_i2c_readDataBlock
 22146 ;; This function is called by:
 22147 ;;		_keeloqDecryptPacket
 22148 ;;		_DecryptPacket_12BIT
 22149 ;;		_controlSelectRemote
 22150 ;;		_eusartparser
 22151 ;; This function uses a non-reentrant model
 22152 ;;
 22153                           
 22154                           	psect	text76
 22155  005A54                     __ptext76:
 22156                           	callstack 0
 22157  005A54                     _validateRemoteSerialNumber:
 22158                           	callstack 14
 22159                           
 22160                           ; BSR set to: 0
 22161                           ;controlMemory_MC50.c: 29:     char j=0;
 22162                           
 22163                           ; BSR set to: 0
 22164                           ;incstack = 0
 22165  005A54  0E00               	movlw	0
 22166  005A56  6E39               	movwf	validateRemoteSerialNumber@j^0,c
 22167                           
 22168                           ; BSR set to: 0
 22169                           ;controlMemory_MC50.c: 30:     unsigned long mask;;controlMemory_MC50.c: 33:     if(Veri
      +                          fyOnlySerial==YES)
 22170  005A58  0432               	decf	validateRemoteSerialNumber@VerifyOnlySerial^0,w,c
 22171  005A5A  A4D8               	btfss	status,2,c
 22172  005A5C  D009               	goto	l1436
 22173                           
 22174                           ; BSR set to: 0
 22175                           ;controlMemory_MC50.c: 34:     {;controlMemory_MC50.c: 35:         mask=0x0FFFFFFF;
 22176  005A5E  0EFF               	movlw	255
 22177  005A60  6E35               	movwf	validateRemoteSerialNumber@mask^0,c
 22178  005A62  0EFF               	movlw	255
 22179  005A64  6E36               	movwf	(validateRemoteSerialNumber@mask+1)^0,c
 22180  005A66  0EFF               	movlw	255
 22181  005A68  6E37               	movwf	(validateRemoteSerialNumber@mask+2)^0,c
 22182  005A6A  0E0F               	movlw	15
 22183  005A6C  6E38               	movwf	(validateRemoteSerialNumber@mask+3)^0,c
 22184                           
 22185                           ;controlMemory_MC50.c: 36:     }
 22186  005A6E  D004               	goto	l20101
 22187  005A70                     l1436:
 22188                           
 22189                           ; BSR set to: 0
 22190                           ;controlMemory_MC50.c: 38:     {;controlMemory_MC50.c: 39:         mask=0xFFFFFFFF;
 22191  005A70  6835               	setf	validateRemoteSerialNumber@mask^0,c
 22192  005A72  6836               	setf	(validateRemoteSerialNumber@mask+1)^0,c
 22193  005A74  6837               	setf	(validateRemoteSerialNumber@mask+2)^0,c
 22194  005A76  6838               	setf	(validateRemoteSerialNumber@mask+3)^0,c
 22195  005A78                     l20101:
 22196                           
 22197                           ; BSR set to: 0
 22198                           ;controlMemory_MC50.c: 42:     for (i=0;i<var_sys_NVM.positionRemotesFull;i++)
 22199  005A78  0E00               	movlw	0
 22200  005A7A  6E3A               	movwf	validateRemoteSerialNumber@i^0,c
 22201  005A7C  D056               	goto	l20119
 22202  005A7E                     l20103:
 22203                           
 22204                           ; BSR set to: 0
 22205                           ;controlMemory_MC50.c: 43:     {;controlMemory_MC50.c: 44:         if(i%4==0)
 22206  005A7E  C03A  F0D8         	movff	validateRemoteSerialNumber@i,??_validateRemoteSerialNumber
 22207  005A82  0E03               	movlw	3
 22208  005A84  17D8               	andwf	??_validateRemoteSerialNumber& (0+255),f,b
 22209  005A86  A4D8               	btfss	status,2,c
 22210  005A88  D01C               	goto	l20109
 22211                           
 22212                           ; BSR set to: 0
 22213                           ;controlMemory_MC50.c: 45:         {;controlMemory_MC50.c: 46:             j=0;
 22214  005A8A  0E00               	movlw	0
 22215  005A8C  6E39               	movwf	validateRemoteSerialNumber@j^0,c
 22216                           
 22217                           ; BSR set to: 0
 22218                           ;controlMemory_MC50.c: 48:             i2c_readDataBlock(0x50, (uint16_t)(0x0200 + (i * 
      +                          4)),(char*)memoryTEMP, 16);
 22219  005A8E  503A               	movf	validateRemoteSerialNumber@i^0,w,c
 22220  005A90  6FD8               	movwf	??_validateRemoteSerialNumber& (0+255),b
 22221  005A92  6BD9               	clrf	(??_validateRemoteSerialNumber+1)& (0+255),b
 22222  005A94  90D8               	bcf	status,0,c
 22223  005A96  37D8               	rlcf	??_validateRemoteSerialNumber& (0+255),f,b
 22224  005A98  37D9               	rlcf	(??_validateRemoteSerialNumber+1)& (0+255),f,b
 22225  005A9A  90D8               	bcf	status,0,c
 22226  005A9C  37D8               	rlcf	??_validateRemoteSerialNumber& (0+255),f,b
 22227  005A9E  37D9               	rlcf	(??_validateRemoteSerialNumber+1)& (0+255),f,b
 22228  005AA0  0E00               	movlw	0
 22229  005AA2  25D8               	addwf	??_validateRemoteSerialNumber& (0+255),w,b
 22230  005AA4  6E22               	movwf	i2c_readDataBlock@reg^0,c
 22231  005AA6  0E02               	movlw	2
 22232  005AA8  21D9               	addwfc	(??_validateRemoteSerialNumber+1)& (0+255),w,b
 22233  005AAA  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 22234  005AAC  0EA4               	movlw	low _memoryTEMP
 22235  005AAE  6E24               	movwf	i2c_readDataBlock@data^0,c
 22236  005AB0  0E02               	movlw	high _memoryTEMP
 22237  005AB2  6E25               	movwf	(i2c_readDataBlock@data+1)^0,c
 22238  005AB4  0E00               	movlw	0
 22239  005AB6  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 22240  005AB8  0E10               	movlw	16
 22241  005ABA  6E26               	movwf	i2c_readDataBlock@len^0,c
 22242  005ABC  0E50               	movlw	80
 22243  005ABE  EC1F  F041         	call	_i2c_readDataBlock
 22244  005AC2                     l20109:
 22245                           
 22246                           ;controlMemory_MC50.c: 50:         if((unsigned long)serial==((unsigned long)memoryTEMP[
      +                          j]&mask))
 22247  005AC2  5039               	movf	validateRemoteSerialNumber@j^0,w,c
 22248  005AC4  0D04               	mullw	4
 22249  005AC6  0EA4               	movlw	low _memoryTEMP
 22250  005AC8  24F3               	addwf	243,w,c
 22251  005ACA  6ED9               	movwf	fsr2l,c
 22252  005ACC  0E02               	movlw	high _memoryTEMP
 22253  005ACE  20F4               	addwfc	prodh,w,c
 22254  005AD0  6EDA               	movwf	fsr2h,c
 22255  005AD2  CFDE F0D8          	movff	postinc2,??_validateRemoteSerialNumber
 22256  005AD6  CFDE F0D9          	movff	postinc2,??_validateRemoteSerialNumber+1
 22257  005ADA  CFDE F0DA          	movff	postinc2,??_validateRemoteSerialNumber+2
 22258  005ADE  CFDE F0DB          	movff	postinc2,??_validateRemoteSerialNumber+3
 22259  005AE2  5035               	movf	validateRemoteSerialNumber@mask^0,w,c
 22260  005AE4  0100               	movlb	0	; () banked
 22261  005AE6  15D8               	andwf	??_validateRemoteSerialNumber& (0+255),w,b
 22262  005AE8  6FDC               	movwf	(??_validateRemoteSerialNumber+4)& (0+255),b
 22263  005AEA  5036               	movf	(validateRemoteSerialNumber@mask+1)^0,w,c
 22264  005AEC  15D9               	andwf	(??_validateRemoteSerialNumber+1)& (0+255),w,b
 22265  005AEE  6FDD               	movwf	(??_validateRemoteSerialNumber+5)& (0+255),b
 22266  005AF0  5037               	movf	(validateRemoteSerialNumber@mask+2)^0,w,c
 22267  005AF2  15DA               	andwf	(??_validateRemoteSerialNumber+2)& (0+255),w,b
 22268  005AF4  6FDE               	movwf	(??_validateRemoteSerialNumber+6)& (0+255),b
 22269  005AF6  5038               	movf	(validateRemoteSerialNumber@mask+3)^0,w,c
 22270  005AF8  15DB               	andwf	(??_validateRemoteSerialNumber+3)& (0+255),w,b
 22271  005AFA  6FDF               	movwf	(??_validateRemoteSerialNumber+7)& (0+255),b
 22272  005AFC  502E               	movf	validateRemoteSerialNumber@serial^0,w,c
 22273  005AFE  19DC               	xorwf	(??_validateRemoteSerialNumber+4)& (0+255),w,b
 22274  005B00  E112               	bnz	l20117
 22275  005B02  502F               	movf	(validateRemoteSerialNumber@serial+1)^0,w,c
 22276  005B04  19DD               	xorwf	(??_validateRemoteSerialNumber+5)& (0+255),w,b
 22277  005B06  E10F               	bnz	l20117
 22278  005B08  5030               	movf	(validateRemoteSerialNumber@serial+2)^0,w,c
 22279  005B0A  19DE               	xorwf	(??_validateRemoteSerialNumber+6)& (0+255),w,b
 22280  005B0C  E10C               	bnz	l20117
 22281  005B0E  5031               	movf	(validateRemoteSerialNumber@serial+3)^0,w,c
 22282  005B10  19DF               	xorwf	(??_validateRemoteSerialNumber+7)& (0+255),w,b
 22283  005B12  A4D8               	btfss	status,2,c
 22284  005B14  D008               	goto	l20117
 22285                           
 22286                           ; BSR set to: 0
 22287                           ;controlMemory_MC50.c: 51:         {;controlMemory_MC50.c: 53:             position[0]=i
      +                          ;
 22288  005B16  C033  FFD9         	movff	validateRemoteSerialNumber@position,fsr2l
 22289  005B1A  C034  FFDA         	movff	validateRemoteSerialNumber@position+1,fsr2h
 22290  005B1E  C03A  FFDF         	movff	validateRemoteSerialNumber@i,indf2
 22291                           
 22292                           ; BSR set to: 0
 22293                           ;controlMemory_MC50.c: 54:             return TypeFull;
 22294  005B22  0E01               	movlw	1
 22295  005B24  0012               	return	
 22296  005B26                     l20117:
 22297                           
 22298                           ; BSR set to: 0
 22299                           ;controlMemory_MC50.c: 57:         j++;
 22300  005B26  2A39               	incf	validateRemoteSerialNumber@j^0,f,c
 22301                           
 22302                           ;controlMemory_MC50.c: 59:     }
 22303  005B28  2A3A               	incf	validateRemoteSerialNumber@i^0,f,c
 22304  005B2A                     l20119:
 22305                           
 22306                           ; BSR set to: 0
 22307  005B2A  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 22308  005B2C  5C3A               	subwf	validateRemoteSerialNumber@i^0,w,c
 22309  005B2E  A0D8               	btfss	status,0,c
 22310  005B30  D7A6               	goto	l20103
 22311                           
 22312                           ; BSR set to: 0
 22313                           ;controlMemory_MC50.c: 61:     for (i=0;i<var_sys_NVM.positionRemotesWalk;i++)
 22314  005B32  0E00               	movlw	0
 22315  005B34  6E3A               	movwf	validateRemoteSerialNumber@i^0,c
 22316  005B36  D056               	goto	l20139
 22317  005B38                     l20123:
 22318                           
 22319                           ; BSR set to: 0
 22320                           ;controlMemory_MC50.c: 62:     {;controlMemory_MC50.c: 63:         if(i%4==0)
 22321  005B38  C03A  F0D8         	movff	validateRemoteSerialNumber@i,??_validateRemoteSerialNumber
 22322  005B3C  0E03               	movlw	3
 22323  005B3E  17D8               	andwf	??_validateRemoteSerialNumber& (0+255),f,b
 22324  005B40  A4D8               	btfss	status,2,c
 22325  005B42  D01C               	goto	l20129
 22326                           
 22327                           ; BSR set to: 0
 22328                           ;controlMemory_MC50.c: 64:         {;controlMemory_MC50.c: 65:             j=0;
 22329  005B44  0E00               	movlw	0
 22330  005B46  6E39               	movwf	validateRemoteSerialNumber@j^0,c
 22331                           
 22332                           ; BSR set to: 0
 22333                           ;controlMemory_MC50.c: 66:             i2c_readDataBlock(0x50, (uint16_t)(0x0500 + (i * 
      +                          4)),(char*)memoryTEMP, 16);
 22334  005B48  503A               	movf	validateRemoteSerialNumber@i^0,w,c
 22335  005B4A  6FD8               	movwf	??_validateRemoteSerialNumber& (0+255),b
 22336  005B4C  6BD9               	clrf	(??_validateRemoteSerialNumber+1)& (0+255),b
 22337  005B4E  90D8               	bcf	status,0,c
 22338  005B50  37D8               	rlcf	??_validateRemoteSerialNumber& (0+255),f,b
 22339  005B52  37D9               	rlcf	(??_validateRemoteSerialNumber+1)& (0+255),f,b
 22340  005B54  90D8               	bcf	status,0,c
 22341  005B56  37D8               	rlcf	??_validateRemoteSerialNumber& (0+255),f,b
 22342  005B58  37D9               	rlcf	(??_validateRemoteSerialNumber+1)& (0+255),f,b
 22343  005B5A  0E00               	movlw	0
 22344  005B5C  25D8               	addwf	??_validateRemoteSerialNumber& (0+255),w,b
 22345  005B5E  6E22               	movwf	i2c_readDataBlock@reg^0,c
 22346  005B60  0E05               	movlw	5
 22347  005B62  21D9               	addwfc	(??_validateRemoteSerialNumber+1)& (0+255),w,b
 22348  005B64  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 22349  005B66  0EA4               	movlw	low _memoryTEMP
 22350  005B68  6E24               	movwf	i2c_readDataBlock@data^0,c
 22351  005B6A  0E02               	movlw	high _memoryTEMP
 22352  005B6C  6E25               	movwf	(i2c_readDataBlock@data+1)^0,c
 22353  005B6E  0E00               	movlw	0
 22354  005B70  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 22355  005B72  0E10               	movlw	16
 22356  005B74  6E26               	movwf	i2c_readDataBlock@len^0,c
 22357  005B76  0E50               	movlw	80
 22358  005B78  EC1F  F041         	call	_i2c_readDataBlock
 22359  005B7C                     l20129:
 22360                           
 22361                           ;controlMemory_MC50.c: 69:         if((unsigned long)serial==((unsigned long)memoryTEMP[
      +                          j]&mask))
 22362  005B7C  5039               	movf	validateRemoteSerialNumber@j^0,w,c
 22363  005B7E  0D04               	mullw	4
 22364  005B80  0EA4               	movlw	low _memoryTEMP
 22365  005B82  24F3               	addwf	243,w,c
 22366  005B84  6ED9               	movwf	fsr2l,c
 22367  005B86  0E02               	movlw	high _memoryTEMP
 22368  005B88  20F4               	addwfc	prodh,w,c
 22369  005B8A  6EDA               	movwf	fsr2h,c
 22370  005B8C  CFDE F0D8          	movff	postinc2,??_validateRemoteSerialNumber
 22371  005B90  CFDE F0D9          	movff	postinc2,??_validateRemoteSerialNumber+1
 22372  005B94  CFDE F0DA          	movff	postinc2,??_validateRemoteSerialNumber+2
 22373  005B98  CFDE F0DB          	movff	postinc2,??_validateRemoteSerialNumber+3
 22374  005B9C  5035               	movf	validateRemoteSerialNumber@mask^0,w,c
 22375  005B9E  0100               	movlb	0	; () banked
 22376  005BA0  15D8               	andwf	??_validateRemoteSerialNumber& (0+255),w,b
 22377  005BA2  6FDC               	movwf	(??_validateRemoteSerialNumber+4)& (0+255),b
 22378  005BA4  5036               	movf	(validateRemoteSerialNumber@mask+1)^0,w,c
 22379  005BA6  15D9               	andwf	(??_validateRemoteSerialNumber+1)& (0+255),w,b
 22380  005BA8  6FDD               	movwf	(??_validateRemoteSerialNumber+5)& (0+255),b
 22381  005BAA  5037               	movf	(validateRemoteSerialNumber@mask+2)^0,w,c
 22382  005BAC  15DA               	andwf	(??_validateRemoteSerialNumber+2)& (0+255),w,b
 22383  005BAE  6FDE               	movwf	(??_validateRemoteSerialNumber+6)& (0+255),b
 22384  005BB0  5038               	movf	(validateRemoteSerialNumber@mask+3)^0,w,c
 22385  005BB2  15DB               	andwf	(??_validateRemoteSerialNumber+3)& (0+255),w,b
 22386  005BB4  6FDF               	movwf	(??_validateRemoteSerialNumber+7)& (0+255),b
 22387  005BB6  502E               	movf	validateRemoteSerialNumber@serial^0,w,c
 22388  005BB8  19DC               	xorwf	(??_validateRemoteSerialNumber+4)& (0+255),w,b
 22389  005BBA  E112               	bnz	l20137
 22390  005BBC  502F               	movf	(validateRemoteSerialNumber@serial+1)^0,w,c
 22391  005BBE  19DD               	xorwf	(??_validateRemoteSerialNumber+5)& (0+255),w,b
 22392  005BC0  E10F               	bnz	l20137
 22393  005BC2  5030               	movf	(validateRemoteSerialNumber@serial+2)^0,w,c
 22394  005BC4  19DE               	xorwf	(??_validateRemoteSerialNumber+6)& (0+255),w,b
 22395  005BC6  E10C               	bnz	l20137
 22396  005BC8  5031               	movf	(validateRemoteSerialNumber@serial+3)^0,w,c
 22397  005BCA  19DF               	xorwf	(??_validateRemoteSerialNumber+7)& (0+255),w,b
 22398  005BCC  A4D8               	btfss	status,2,c
 22399  005BCE  D008               	goto	l20137
 22400                           
 22401                           ; BSR set to: 0
 22402                           ;controlMemory_MC50.c: 70:         {;controlMemory_MC50.c: 72:             position[0]=i
      +                          ;
 22403  005BD0  C033  FFD9         	movff	validateRemoteSerialNumber@position,fsr2l
 22404  005BD4  C034  FFDA         	movff	validateRemoteSerialNumber@position+1,fsr2h
 22405  005BD8  C03A  FFDF         	movff	validateRemoteSerialNumber@i,indf2
 22406                           
 22407                           ; BSR set to: 0
 22408                           ;controlMemory_MC50.c: 73:             return TypeWalk;
 22409  005BDC  0E02               	movlw	2
 22410  005BDE  0012               	return	
 22411  005BE0                     l20137:
 22412                           
 22413                           ; BSR set to: 0
 22414                           ;controlMemory_MC50.c: 75:         j++;
 22415  005BE0  2A39               	incf	validateRemoteSerialNumber@j^0,f,c
 22416                           
 22417                           ;controlMemory_MC50.c: 76:     }
 22418  005BE2  2A3A               	incf	validateRemoteSerialNumber@i^0,f,c
 22419  005BE4                     l20139:
 22420                           
 22421                           ; BSR set to: 0
 22422  005BE4  51B9               	movf	(_var_sys_NVM+33)& (0+255),w,b	;volatile
 22423  005BE6  5C3A               	subwf	validateRemoteSerialNumber@i^0,w,c
 22424  005BE8  A0D8               	btfss	status,0,c
 22425  005BEA  D7A6               	goto	l20123
 22426                           
 22427                           ; BSR set to: 0
 22428                           ;controlMemory_MC50.c: 78:     return NoCMD;
 22429  005BEC  0E00               	movlw	0
 22430                           
 22431                           ; BSR set to: 0
 22432  005BEE  0012               	return		;funcret
 22433  005BF0                     __end_of_validateRemoteSerialNumber:
 22434                           	callstack 0
 22435                           
 22436 ;; *************** function _saveNewSerial *****************
 22437 ;; Defined at:
 22438 ;;		line 81 in file "controlMemory_MC50.c"
 22439 ;; Parameters:    Size  Location     Type
 22440 ;;  cmdType         1    wreg     unsigned char 
 22441 ;;  tempSerial      4    0[BANK0 ] unsigned long 
 22442 ;;  position        1    4[BANK0 ] unsigned char 
 22443 ;; Auto vars:     Size  Location     Type
 22444 ;;  cmdType         1   57[COMRAM] unsigned char 
 22445 ;; Return value:  Size  Location     Type
 22446 ;;                  1    wreg      void 
 22447 ;; Registers used:
 22448 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22449 ;; Tracked objects:
 22450 ;;		On entry : 3E/1
 22451 ;;		On exit  : 0/0
 22452 ;;		Unchanged: 0/0
 22453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22454 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22455 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22456 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22457 ;;      Totals:         1       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22458 ;;Total ram usage:        8 bytes
 22459 ;; Hardware stack levels used: 1
 22460 ;; Hardware stack levels required when called: 13
 22461 ;; This function calls:
 22462 ;;		_i2c_writeNBytes
 22463 ;; This function is called by:
 22464 ;;		_controlSelectRemote
 22465 ;;		_eusartparser
 22466 ;; This function uses a non-reentrant model
 22467 ;;
 22468                           
 22469                           	psect	text77
 22470  008398                     __ptext77:
 22471                           	callstack 0
 22472  008398                     _saveNewSerial:
 22473                           	callstack 14
 22474                           
 22475                           ; BSR set to: 0
 22476                           ;incstack = 0
 22477                           ;saveNewSerial@cmdType stored from wreg
 22478  008398  6E3A               	movwf	saveNewSerial@cmdType^0,c
 22479                           
 22480                           ;controlMemory_MC50.c: 81: void saveNewSerial(char cmdType,unsigned long tempSerial, cha
      +                          r position);controlMemory_MC50.c: 82: {;controlMemory_MC50.c: 83:     if(cmdType==0)
 22481  00839A  503A               	movf	saveNewSerial@cmdType^0,w,c
 22482  00839C  A4D8               	btfss	status,2,c
 22483  00839E  D01A               	goto	l20149
 22484                           
 22485                           ;controlMemory_MC50.c: 84:     {;controlMemory_MC50.c: 86:         i2c_writeNBytes(0x50,
      +                           (uint16_t)(0x0200 + (position * 4)), (char*)&tempSerial, 4);
 22486  0083A0  0100               	movlb	0	; () banked
 22487  0083A2  51DC               	movf	saveNewSerial@position& (0+255),w,b
 22488  0083A4  6FDD               	movwf	??_saveNewSerial& (0+255),b
 22489  0083A6  6BDE               	clrf	(??_saveNewSerial+1)& (0+255),b
 22490  0083A8  90D8               	bcf	status,0,c
 22491  0083AA  37DD               	rlcf	??_saveNewSerial& (0+255),f,b
 22492  0083AC  37DE               	rlcf	(??_saveNewSerial+1)& (0+255),f,b
 22493  0083AE  90D8               	bcf	status,0,c
 22494  0083B0  37DD               	rlcf	??_saveNewSerial& (0+255),f,b
 22495  0083B2  37DE               	rlcf	(??_saveNewSerial+1)& (0+255),f,b
 22496  0083B4  0E00               	movlw	0
 22497  0083B6  25DD               	addwf	??_saveNewSerial& (0+255),w,b
 22498  0083B8  6E22               	movwf	i2c_writeNBytes@reg^0,c
 22499  0083BA  0E02               	movlw	2
 22500  0083BC  21DE               	addwfc	(??_saveNewSerial+1)& (0+255),w,b
 22501  0083BE  6E23               	movwf	(i2c_writeNBytes@reg+1)^0,c
 22502  0083C0  0ED8               	movlw	low saveNewSerial@tempSerial
 22503  0083C2  6E24               	movwf	i2c_writeNBytes@data^0,c
 22504  0083C4  0E00               	movlw	0
 22505  0083C6  6E26               	movwf	(i2c_writeNBytes@len+1)^0,c
 22506  0083C8  0E04               	movlw	4
 22507  0083CA  6E25               	movwf	i2c_writeNBytes@len^0,c
 22508  0083CC  0E50               	movlw	80
 22509  0083CE  EC5A  F041         	call	_i2c_writeNBytes
 22510                           
 22511                           ;controlMemory_MC50.c: 87:     }
 22512  0083D2  0012               	return	
 22513  0083D4                     l20149:
 22514                           
 22515                           ;controlMemory_MC50.c: 89:     {;controlMemory_MC50.c: 91:         i2c_writeNBytes(0x50,
      +                           (uint16_t)(0x0500 + (position * 4)), (char*)&tempSerial, 4);
 22516  0083D4  0100               	movlb	0	; () banked
 22517  0083D6  51DC               	movf	saveNewSerial@position& (0+255),w,b
 22518  0083D8  6FDD               	movwf	??_saveNewSerial& (0+255),b
 22519  0083DA  6BDE               	clrf	(??_saveNewSerial+1)& (0+255),b
 22520  0083DC  90D8               	bcf	status,0,c
 22521  0083DE  37DD               	rlcf	??_saveNewSerial& (0+255),f,b
 22522  0083E0  37DE               	rlcf	(??_saveNewSerial+1)& (0+255),f,b
 22523  0083E2  90D8               	bcf	status,0,c
 22524  0083E4  37DD               	rlcf	??_saveNewSerial& (0+255),f,b
 22525  0083E6  37DE               	rlcf	(??_saveNewSerial+1)& (0+255),f,b
 22526  0083E8  0E00               	movlw	0
 22527  0083EA  25DD               	addwf	??_saveNewSerial& (0+255),w,b
 22528  0083EC  6E22               	movwf	i2c_writeNBytes@reg^0,c
 22529  0083EE  0E05               	movlw	5
 22530  0083F0  21DE               	addwfc	(??_saveNewSerial+1)& (0+255),w,b
 22531  0083F2  6E23               	movwf	(i2c_writeNBytes@reg+1)^0,c
 22532  0083F4  0ED8               	movlw	low saveNewSerial@tempSerial
 22533  0083F6  6E24               	movwf	i2c_writeNBytes@data^0,c
 22534  0083F8  0E00               	movlw	0
 22535  0083FA  6E26               	movwf	(i2c_writeNBytes@len+1)^0,c
 22536  0083FC  0E04               	movlw	4
 22537  0083FE  6E25               	movwf	i2c_writeNBytes@len^0,c
 22538  008400  0E50               	movlw	80
 22539  008402  EC5A  F041         	call	_i2c_writeNBytes
 22540  008406  0012               	return		;funcret
 22541  008408                     __end_of_saveNewSerial:
 22542                           	callstack 0
 22543                           
 22544 ;; *************** function _read_eusartparser *****************
 22545 ;; Defined at:
 22546 ;;		line 12 in file "eusartparser.c"
 22547 ;; Parameters:    Size  Location     Type
 22548 ;;  package         1   23[COMRAM] PTR struct package_t
 22549 ;;		 -> main@package(7), 
 22550 ;; Auto vars:     Size  Location     Type
 22551 ;;		None
 22552 ;; Return value:  Size  Location     Type
 22553 ;;                  1    wreg      void 
 22554 ;; Registers used:
 22555 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 22556 ;; Tracked objects:
 22557 ;;		On entry : 3F/0
 22558 ;;		On exit  : 0/0
 22559 ;;		Unchanged: 0/0
 22560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22561 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22563 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22564 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22565 ;;Total ram usage:        3 bytes
 22566 ;; Hardware stack levels used: 1
 22567 ;; Hardware stack levels required when called: 6
 22568 ;; This function calls:
 22569 ;;		_write_package
 22570 ;; This function is called by:
 22571 ;;		_eusartparser
 22572 ;; This function uses a non-reentrant model
 22573 ;;
 22574                           
 22575                           	psect	text78
 22576  002EFC                     __ptext78:
 22577                           	callstack 0
 22578  002EFC                     _read_eusartparser:
 22579                           	callstack 23
 22580                           
 22581                           ; BSR set to: 0
 22582                           ;eusartparser.c: 13:         switch(package->address){
 22583                           
 22584                           ;incstack = 0
 22585  002EFC  D203               	goto	l16483
 22586  002EFE                     l16347:
 22587                           
 22588                           ; BSR set to: 0
 22589                           ;eusartparser.c: 18:                 package->data.data8[1]=var_sys_NVM.decelarationClos
      +                          e;
 22590  002EFE  5018               	movf	read_eusartparser@package^0,w,c
 22591  002F00  6ED9               	movwf	fsr2l,c
 22592  002F02  6ADA               	clrf	fsr2h,c
 22593  002F04  0E03               	movlw	3
 22594  002F06  26D9               	addwf	fsr2l,f,c
 22595  002F08  C099  FFDF         	movff	_var_sys_NVM+1,indf2	;volatile
 22596                           
 22597                           ;eusartparser.c: 19:                 package->data.data8[0]=var_sys_NVM.decelarationOpen
      +                          ;
 22598  002F0C  5018               	movf	read_eusartparser@package^0,w,c
 22599  002F0E  6ED9               	movwf	fsr2l,c
 22600  002F10  6ADA               	clrf	fsr2h,c
 22601  002F12  0E02               	movlw	2
 22602  002F14  26D9               	addwf	fsr2l,f,c
 22603  002F16  C098  FFDF         	movff	_var_sys_NVM,indf2	;volatile
 22604  002F1A                     l16349:
 22605                           
 22606                           ; BSR set to: 0
 22607                           ;eusartparser.c: 20:                 write_package(*package);
 22608  002F1A  5018               	movf	read_eusartparser@package^0,w,c
 22609  002F1C  6ED9               	movwf	fsr2l,c
 22610  002F1E  6ADA               	clrf	fsr2h,c
 22611  002F20  EE00  F011         	lfsr	0,write_package@package
 22612  002F24  0E06               	movlw	6
 22613  002F26                     u18421:
 22614  002F26  CFDB FFEB          	movff	plusw2,plusw0
 22615  002F2A  06E8               	decf	wreg,f,c
 22616  002F2C  E2FC               	bc	u18421
 22617  002F2E  EC5C  F048         	call	_write_package	;wreg free
 22618                           
 22619                           ;eusartparser.c: 21:                 break;
 22620  002F32  0012               	return	
 22621  002F34                     l16351:
 22622                           
 22623                           ; BSR set to: 0
 22624                           ;eusartparser.c: 25:                 package->data.data8[1]=var_sys_NVM.motorSensitivity
      +                          ;
 22625  002F34  5018               	movf	read_eusartparser@package^0,w,c
 22626  002F36  6ED9               	movwf	fsr2l,c
 22627  002F38  6ADA               	clrf	fsr2h,c
 22628  002F3A  0E03               	movlw	3
 22629  002F3C  26D9               	addwf	fsr2l,f,c
 22630  002F3E  C09B  FFDF         	movff	_var_sys_NVM+3,indf2	;volatile
 22631                           
 22632                           ;eusartparser.c: 26:                 package->data.data8[0]=var_sys_NVM.motorPower;
 22633  002F42  5018               	movf	read_eusartparser@package^0,w,c
 22634  002F44  6ED9               	movwf	fsr2l,c
 22635  002F46  6ADA               	clrf	fsr2h,c
 22636  002F48  0E02               	movlw	2
 22637  002F4A  26D9               	addwf	fsr2l,f,c
 22638  002F4C  C09A  FFDF         	movff	_var_sys_NVM+2,indf2	;volatile
 22639  002F50  D7E4               	goto	l16349
 22640  002F52                     l16355:
 22641                           
 22642                           ; BSR set to: 0
 22643                           ;eusartparser.c: 32:                 package->data.data8[1]=var_sys_NVM.walkTime;
 22644  002F52  5018               	movf	read_eusartparser@package^0,w,c
 22645  002F54  6ED9               	movwf	fsr2l,c
 22646  002F56  6ADA               	clrf	fsr2h,c
 22647  002F58  0E03               	movlw	3
 22648  002F5A  26D9               	addwf	fsr2l,f,c
 22649  002F5C  C09C  FFDF         	movff	_var_sys_NVM+4,indf2	;volatile
 22650  002F60  D0F9               	goto	L99
 22651  002F62                     l16359:
 22652                           
 22653                           ; BSR set to: 0
 22654                           ;eusartparser.c: 40:                 package->data.data8[1]=var_sys_NVM.autoTimeWalkClos
      +                          e;
 22655  002F62  5018               	movf	read_eusartparser@package^0,w,c
 22656  002F64  6ED9               	movwf	fsr2l,c
 22657  002F66  6ADA               	clrf	fsr2h,c
 22658  002F68  0E03               	movlw	3
 22659  002F6A  26D9               	addwf	fsr2l,f,c
 22660  002F6C  C09E  FFDF         	movff	_var_sys_NVM+6,indf2	;volatile
 22661                           
 22662                           ;eusartparser.c: 41:                 package->data.data8[0]=var_sys_NVM.autoTimeFullClos
      +                          e;
 22663  002F70  5018               	movf	read_eusartparser@package^0,w,c
 22664  002F72  6ED9               	movwf	fsr2l,c
 22665  002F74  6ADA               	clrf	fsr2h,c
 22666  002F76  0E02               	movlw	2
 22667  002F78  26D9               	addwf	fsr2l,f,c
 22668  002F7A  C09D  FFDF         	movff	_var_sys_NVM+5,indf2	;volatile
 22669  002F7E  D7CD               	goto	l16349
 22670  002F80                     l16363:
 22671                           
 22672                           ; BSR set to: 0
 22673                           ;eusartparser.c: 48:                 package->data.data8[1]=var_sys_NVM.photoCellInOpen;
 22674  002F80  5018               	movf	read_eusartparser@package^0,w,c
 22675  002F82  6ED9               	movwf	fsr2l,c
 22676  002F84  6ADA               	clrf	fsr2h,c
 22677  002F86  0E03               	movlw	3
 22678  002F88  26D9               	addwf	fsr2l,f,c
 22679  002F8A  C0A0  FFDF         	movff	_var_sys_NVM+8,indf2	;volatile
 22680                           
 22681                           ;eusartparser.c: 49:                 package->data.data8[0]=var_sys_NVM.photoCellIsON;
 22682  002F8E  5018               	movf	read_eusartparser@package^0,w,c
 22683  002F90  6ED9               	movwf	fsr2l,c
 22684  002F92  6ADA               	clrf	fsr2h,c
 22685  002F94  0E02               	movlw	2
 22686  002F96  26D9               	addwf	fsr2l,f,c
 22687  002F98  C09F  FFDF         	movff	_var_sys_NVM+7,indf2	;volatile
 22688  002F9C  D7BE               	goto	l16349
 22689  002F9E                     l16367:
 22690                           
 22691                           ; BSR set to: 0
 22692                           ;eusartparser.c: 55:                 package->data.data8[1]=var_sys_NVM.securityBandType
      +                          ;
 22693  002F9E  5018               	movf	read_eusartparser@package^0,w,c
 22694  002FA0  6ED9               	movwf	fsr2l,c
 22695  002FA2  6ADA               	clrf	fsr2h,c
 22696  002FA4  0E03               	movlw	3
 22697  002FA6  26D9               	addwf	fsr2l,f,c
 22698  002FA8  C0A2  FFDF         	movff	_var_sys_NVM+10,indf2	;volatile
 22699                           
 22700                           ;eusartparser.c: 56:                 package->data.data8[0]=var_sys_NVM.securityBandIsON
      +                          ;
 22701  002FAC  5018               	movf	read_eusartparser@package^0,w,c
 22702  002FAE  6ED9               	movwf	fsr2l,c
 22703  002FB0  6ADA               	clrf	fsr2h,c
 22704  002FB2  0E02               	movlw	2
 22705  002FB4  26D9               	addwf	fsr2l,f,c
 22706  002FB6  C0A1  FFDF         	movff	_var_sys_NVM+9,indf2	;volatile
 22707  002FBA  D7AF               	goto	l16349
 22708  002FBC                     l16371:
 22709                           
 22710                           ; BSR set to: 0
 22711                           ;eusartparser.c: 62:                 package->data.data8[1]=var_sys_NVM.securityBandInOp
      +                          en;
 22712  002FBC  5018               	movf	read_eusartparser@package^0,w,c
 22713  002FBE  6ED9               	movwf	fsr2l,c
 22714  002FC0  6ADA               	clrf	fsr2h,c
 22715  002FC2  0E03               	movlw	3
 22716  002FC4  26D9               	addwf	fsr2l,f,c
 22717  002FC6  C0A3  FFDF         	movff	_var_sys_NVM+11,indf2	;volatile
 22718  002FCA  D0C4               	goto	L99
 22719  002FCC                     l16375:
 22720                           
 22721                           ; BSR set to: 0
 22722                           ;eusartparser.c: 69:                 package->data.data8[1]=var_sys_NVM.operationMode;
 22723  002FCC  5018               	movf	read_eusartparser@package^0,w,c
 22724  002FCE  6ED9               	movwf	fsr2l,c
 22725  002FD0  6ADA               	clrf	fsr2h,c
 22726  002FD2  0E03               	movlw	3
 22727  002FD4  26D9               	addwf	fsr2l,f,c
 22728  002FD6  C0A4  FFDF         	movff	_var_sys_NVM+12,indf2	;volatile
 22729  002FDA  D0BC               	goto	L99
 22730  002FDC                     l16379:
 22731                           
 22732                           ; BSR set to: 0
 22733                           ;eusartparser.c: 76:                 package->data.data8[1]=var_sys_NVM.flashLightMode;
 22734  002FDC  5018               	movf	read_eusartparser@package^0,w,c
 22735  002FDE  6ED9               	movwf	fsr2l,c
 22736  002FE0  6ADA               	clrf	fsr2h,c
 22737  002FE2  0E03               	movlw	3
 22738  002FE4  26D9               	addwf	fsr2l,f,c
 22739  002FE6  C0A5  FFDF         	movff	_var_sys_NVM+13,indf2	;volatile
 22740  002FEA  D0B4               	goto	L99
 22741  002FEC                     l16383:
 22742                           
 22743                           ; BSR set to: 0
 22744                           ;eusartparser.c: 83:                 package->data.data8[1]=var_sys_NVM.programmingDista
      +                          nce;
 22745  002FEC  5018               	movf	read_eusartparser@package^0,w,c
 22746  002FEE  6ED9               	movwf	fsr2l,c
 22747  002FF0  6ADA               	clrf	fsr2h,c
 22748  002FF2  0E03               	movlw	3
 22749  002FF4  26D9               	addwf	fsr2l,f,c
 22750  002FF6  C0A6  FFDF         	movff	_var_sys_NVM+14,indf2	;volatile
 22751  002FFA  D0AC               	goto	L99
 22752  002FFC                     l16387:
 22753                           
 22754                           ; BSR set to: 0
 22755                           ;eusartparser.c: 90:                 package->data.data8[1]=var_sys_NVM.decelarationSens
      +                          ivity;
 22756  002FFC  5018               	movf	read_eusartparser@package^0,w,c
 22757  002FFE  6ED9               	movwf	fsr2l,c
 22758  003000  6ADA               	clrf	fsr2h,c
 22759  003002  0E03               	movlw	3
 22760  003004  26D9               	addwf	fsr2l,f,c
 22761  003006  C0A7  FFDF         	movff	_var_sys_NVM+15,indf2	;volatile
 22762  00300A  D0A4               	goto	L99
 22763  00300C                     l16391:
 22764                           
 22765                           ; BSR set to: 0
 22766                           ;eusartparser.c: 98:                 package->data.data8[1]=var_sys_NVM.homemPresente;
 22767  00300C  5018               	movf	read_eusartparser@package^0,w,c
 22768  00300E  6ED9               	movwf	fsr2l,c
 22769  003010  6ADA               	clrf	fsr2h,c
 22770  003012  0E03               	movlw	3
 22771  003014  26D9               	addwf	fsr2l,f,c
 22772  003016  C0A8  FFDF         	movff	_var_sys_NVM+16,indf2	;volatile
 22773  00301A  D09C               	goto	L99
 22774  00301C                     l16395:
 22775                           
 22776                           ; BSR set to: 0
 22777                           ;eusartparser.c: 106:                 package->data.data8[1]=var_sys_NVM.logicDigital;
 22778  00301C  5018               	movf	read_eusartparser@package^0,w,c
 22779  00301E  6ED9               	movwf	fsr2l,c
 22780  003020  6ADA               	clrf	fsr2h,c
 22781  003022  0E03               	movlw	3
 22782  003024  26D9               	addwf	fsr2l,f,c
 22783  003026  C0A9  FFDF         	movff	_var_sys_NVM+17,indf2	;volatile
 22784  00302A  D094               	goto	L99
 22785  00302C                     l16399:
 22786                           
 22787                           ; BSR set to: 0
 22788                           ;eusartparser.c: 113:                 package->data.data8[1]=var_sys_NVM.softstop;
 22789  00302C  5018               	movf	read_eusartparser@package^0,w,c
 22790  00302E  6ED9               	movwf	fsr2l,c
 22791  003030  6ADA               	clrf	fsr2h,c
 22792  003032  0E03               	movlw	3
 22793  003034  26D9               	addwf	fsr2l,f,c
 22794  003036  C0AB  FFDF         	movff	_var_sys_NVM+19,indf2	;volatile
 22795                           
 22796                           ;eusartparser.c: 114:                 package->data.data8[0]=var_sys_NVM.softStart;
 22797  00303A  5018               	movf	read_eusartparser@package^0,w,c
 22798  00303C  6ED9               	movwf	fsr2l,c
 22799  00303E  6ADA               	clrf	fsr2h,c
 22800  003040  0E02               	movlw	2
 22801  003042  26D9               	addwf	fsr2l,f,c
 22802  003044  C0AA  FFDF         	movff	_var_sys_NVM+18,indf2	;volatile
 22803  003048  D768               	goto	l16349
 22804  00304A                     l16403:
 22805                           
 22806                           ; BSR set to: 0
 22807                           ;eusartparser.c: 121:                 package->data.data8[1]=var_sys_NVM.ligthTime;
 22808  00304A  5018               	movf	read_eusartparser@package^0,w,c
 22809  00304C  6ED9               	movwf	fsr2l,c
 22810  00304E  6ADA               	clrf	fsr2h,c
 22811  003050  0E03               	movlw	3
 22812  003052  26D9               	addwf	fsr2l,f,c
 22813  003054  C0AC  FFDF         	movff	_var_sys_NVM+20,indf2	;volatile
 22814  003058  D07D               	goto	L99
 22815  00305A                     l16407:
 22816                           
 22817                           ; BSR set to: 0
 22818                           ;eusartparser.c: 129:                 package->data.data8[1]=var_sys_NVM.folow_me;
 22819  00305A  5018               	movf	read_eusartparser@package^0,w,c
 22820  00305C  6ED9               	movwf	fsr2l,c
 22821  00305E  6ADA               	clrf	fsr2h,c
 22822  003060  0E03               	movlw	3
 22823  003062  26D9               	addwf	fsr2l,f,c
 22824  003064  C0AD  FFDF         	movff	_var_sys_NVM+21,indf2	;volatile
 22825  003068  D075               	goto	L99
 22826  00306A                     l16411:
 22827                           
 22828                           ; BSR set to: 0
 22829                           ;eusartparser.c: 136:                 package->data.data8[1]=var_sys_NVM.Stopboton;
 22830  00306A  5018               	movf	read_eusartparser@package^0,w,c
 22831  00306C  6ED9               	movwf	fsr2l,c
 22832  00306E  6ADA               	clrf	fsr2h,c
 22833  003070  0E03               	movlw	3
 22834  003072  26D9               	addwf	fsr2l,f,c
 22835  003074  C0AE  FFDF         	movff	_var_sys_NVM+22,indf2	;volatile
 22836  003078  D06D               	goto	L99
 22837  00307A                     l16415:
 22838                           
 22839                           ; BSR set to: 0
 22840                           ;eusartparser.c: 143:                 package->data.data8[1]=var_sys_NVM.electricBrake;
 22841  00307A  5018               	movf	read_eusartparser@package^0,w,c
 22842  00307C  6ED9               	movwf	fsr2l,c
 22843  00307E  6ADA               	clrf	fsr2h,c
 22844  003080  0E03               	movlw	3
 22845  003082  26D9               	addwf	fsr2l,f,c
 22846  003084  C0AF  FFDF         	movff	_var_sys_NVM+23,indf2	;volatile
 22847  003088  D065               	goto	L99
 22848  00308A                     l16419:
 22849                           
 22850                           ; BSR set to: 0
 22851                           ;eusartparser.c: 150:                 package->data.data8[1]=var_sys_NVM.velocityDecelar
      +                          ation;
 22852  00308A  5018               	movf	read_eusartparser@package^0,w,c
 22853  00308C  6ED9               	movwf	fsr2l,c
 22854  00308E  6ADA               	clrf	fsr2h,c
 22855  003090  0E03               	movlw	3
 22856  003092  26D9               	addwf	fsr2l,f,c
 22857  003094  C0B0  FFDF         	movff	_var_sys_NVM+24,indf2	;volatile
 22858  003098  D05D               	goto	L99
 22859  00309A                     l16423:
 22860                           
 22861                           ; BSR set to: 0
 22862                           ;eusartparser.c: 158:                 package->data.data8[1]=var_sys_NVM.flashRGBMode;
 22863  00309A  5018               	movf	read_eusartparser@package^0,w,c
 22864  00309C  6ED9               	movwf	fsr2l,c
 22865  00309E  6ADA               	clrf	fsr2h,c
 22866  0030A0  0E03               	movlw	3
 22867  0030A2  26D9               	addwf	fsr2l,f,c
 22868  0030A4  C0B1  FFDF         	movff	_var_sys_NVM+25,indf2	;volatile
 22869  0030A8  D055               	goto	L99
 22870  0030AA                     l16427:
 22871                           
 22872                           ; BSR set to: 0
 22873                           ;eusartparser.c: 165:                 package->data.data8[1]=var_sys_NVM.Direction_motor
      +                          ;
 22874  0030AA  5018               	movf	read_eusartparser@package^0,w,c
 22875  0030AC  6ED9               	movwf	fsr2l,c
 22876  0030AE  6ADA               	clrf	fsr2h,c
 22877  0030B0  0E03               	movlw	3
 22878  0030B2  26D9               	addwf	fsr2l,f,c
 22879  0030B4  C0B3  FFDF         	movff	_var_sys_NVM+27,indf2	;volatile
 22880  0030B8  D04D               	goto	L99
 22881  0030BA                     l16431:
 22882                           
 22883                           ; BSR set to: 0
 22884                           ;eusartparser.c: 172:                 package->data.data8[1]=var_sys_NVM.TypeofMotor;
 22885  0030BA  5018               	movf	read_eusartparser@package^0,w,c
 22886  0030BC  6ED9               	movwf	fsr2l,c
 22887  0030BE  6ADA               	clrf	fsr2h,c
 22888  0030C0  0E03               	movlw	3
 22889  0030C2  26D9               	addwf	fsr2l,f,c
 22890  0030C4  C0B4  FFDF         	movff	_var_sys_NVM+28,indf2	;volatile
 22891  0030C8  D045               	goto	L99
 22892  0030CA                     l16435:
 22893                           
 22894                           ; BSR set to: 0
 22895                           ;eusartparser.c: 179:                 package->data.data8[1]=var_sys_NVM.positionRemotes
      +                          Walk;
 22896  0030CA  5018               	movf	read_eusartparser@package^0,w,c
 22897  0030CC  6ED9               	movwf	fsr2l,c
 22898  0030CE  6ADA               	clrf	fsr2h,c
 22899  0030D0  0E03               	movlw	3
 22900  0030D2  26D9               	addwf	fsr2l,f,c
 22901  0030D4  C0B9  FFDF         	movff	_var_sys_NVM+33,indf2	;volatile
 22902                           
 22903                           ;eusartparser.c: 180:                 package->data.data8[0]=var_sys_NVM.positionRemotes
      +                          Full;
 22904  0030D8  5018               	movf	read_eusartparser@package^0,w,c
 22905  0030DA  6ED9               	movwf	fsr2l,c
 22906  0030DC  6ADA               	clrf	fsr2h,c
 22907  0030DE  0E02               	movlw	2
 22908  0030E0  26D9               	addwf	fsr2l,f,c
 22909  0030E2  C0B8  FFDF         	movff	_var_sys_NVM+32,indf2	;volatile
 22910  0030E6  D719               	goto	l16349
 22911  0030E8                     l16439:
 22912                           
 22913                           ; BSR set to: 0
 22914                           ;eusartparser.c: 186:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.c
      +                          ounterMoves))+1);
 22915  0030E8  EE20  F0BC         	lfsr	2,_var_sys_NVM+36
 22916  0030EC  5018               	movf	read_eusartparser@package^0,w,c
 22917  0030EE  6EE1               	movwf	fsr1l,c
 22918  0030F0  6AE2               	clrf	fsr1h,c
 22919  0030F2  0E02               	movlw	2
 22920  0030F4  26E1               	addwf	fsr1l,f,c
 22921  0030F6  CFDE FFE6          	movff	postinc2,postinc1
 22922  0030FA  CFDD FFE5          	movff	postdec2,postdec1
 22923                           
 22924                           ; BSR set to: 0
 22925                           ;eusartparser.c: 187:                 write_package(*package);
 22926  0030FE  5018               	movf	read_eusartparser@package^0,w,c
 22927  003100  6ED9               	movwf	fsr2l,c
 22928  003102  6ADA               	clrf	fsr2h,c
 22929  003104  EE00  F011         	lfsr	0,write_package@package
 22930  003108  0E06               	movlw	6
 22931  00310A                     u18431:
 22932  00310A  CFDB FFEB          	movff	plusw2,plusw0
 22933  00310E  06E8               	decf	wreg,f,c
 22934  003110  E2FC               	bc	u18431
 22935  003112  EC5C  F048         	call	_write_package	;wreg free
 22936                           
 22937                           ;eusartparser.c: 188:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.c
      +                          ounterMoves))+0);
 22938  003116  EE20  F0BA         	lfsr	2,_var_sys_NVM+34
 22939  00311A  5018               	movf	read_eusartparser@package^0,w,c
 22940  00311C  6EE1               	movwf	fsr1l,c
 22941  00311E  6AE2               	clrf	fsr1h,c
 22942  003120  0E02               	movlw	2
 22943  003122  26E1               	addwf	fsr1l,f,c
 22944  003124  CFDE FFE6          	movff	postinc2,postinc1
 22945  003128  CFDD FFE5          	movff	postdec2,postdec1
 22946                           
 22947                           ;eusartparser.c: 189:                 write_package(*package);
 22948  00312C  5018               	movf	read_eusartparser@package^0,w,c
 22949  00312E  6ED9               	movwf	fsr2l,c
 22950  003130  6ADA               	clrf	fsr2h,c
 22951  003132  EE00  F011         	lfsr	0,write_package@package
 22952  003136  0E06               	movlw	6
 22953  003138                     u18441:
 22954  003138  CFDB FFEB          	movff	plusw2,plusw0
 22955  00313C  06E8               	decf	wreg,f,c
 22956  00313E  E2FC               	bc	u18441
 22957  003140  EC5C  F048         	call	_write_package	;wreg free
 22958                           
 22959                           ;eusartparser.c: 190:                 break;
 22960  003144  0012               	return	
 22961  003146                     l16445:
 22962                           
 22963                           ; BSR set to: 0
 22964                           ;eusartparser.c: 194:                 package->data.data8[1]=var_sys_NVM.OnlyRollingCode
      +                          ;
 22965  003146  5018               	movf	read_eusartparser@package^0,w,c
 22966  003148  6ED9               	movwf	fsr2l,c
 22967  00314A  6ADA               	clrf	fsr2h,c
 22968  00314C  0E03               	movlw	3
 22969  00314E  26D9               	addwf	fsr2l,f,c
 22970  003150  C0BE  FFDF         	movff	_var_sys_NVM+38,indf2	;volatile
 22971  003154                     L99:
 22972                           
 22973                           ;eusartparser.c: 195:                 package->data.data8[0]=0x00;
 22974  003154  5018               	movf	read_eusartparser@package^0,w,c
 22975  003156  6ED9               	movwf	fsr2l,c
 22976  003158  6ADA               	clrf	fsr2h,c
 22977  00315A  0E02               	movlw	2
 22978  00315C  26D9               	addwf	fsr2l,f,c
 22979  00315E  0E00               	movlw	0
 22980  003160  6EDF               	movwf	indf2,c
 22981  003162  D6DB               	goto	l16349
 22982  003164                     l16449:
 22983                           
 22984                           ; BSR set to: 0
 22985                           ;eusartparser.c: 201:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.l
      +                          earningCurrentDecelarationClose))+1);
 22986  003164  EE20  F0C2         	lfsr	2,_var_sys_NVM+42
 22987  003168  5018               	movf	read_eusartparser@package^0,w,c
 22988  00316A  6EE1               	movwf	fsr1l,c
 22989  00316C  6AE2               	clrf	fsr1h,c
 22990  00316E  0E02               	movlw	2
 22991  003170  26E1               	addwf	fsr1l,f,c
 22992  003172  CFDE FFE6          	movff	postinc2,postinc1
 22993  003176  CFDD FFE5          	movff	postdec2,postdec1
 22994                           
 22995                           ; BSR set to: 0
 22996                           ;eusartparser.c: 202:                 write_package(*package);
 22997  00317A  5018               	movf	read_eusartparser@package^0,w,c
 22998  00317C  6ED9               	movwf	fsr2l,c
 22999  00317E  6ADA               	clrf	fsr2h,c
 23000  003180  EE00  F011         	lfsr	0,write_package@package
 23001  003184  0E06               	movlw	6
 23002  003186                     u18451:
 23003  003186  CFDB FFEB          	movff	plusw2,plusw0
 23004  00318A  06E8               	decf	wreg,f,c
 23005  00318C  E2FC               	bc	u18451
 23006  00318E  EC5C  F048         	call	_write_package	;wreg free
 23007                           
 23008                           ;eusartparser.c: 203:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.l
      +                          earningCurrentDecelarationClose))+0);
 23009  003192  EE20  F0C0         	lfsr	2,_var_sys_NVM+40
 23010  003196  5018               	movf	read_eusartparser@package^0,w,c
 23011  003198  6EE1               	movwf	fsr1l,c
 23012  00319A  6AE2               	clrf	fsr1h,c
 23013  00319C  0E02               	movlw	2
 23014  00319E  26E1               	addwf	fsr1l,f,c
 23015  0031A0  CFDE FFE6          	movff	postinc2,postinc1
 23016  0031A4  CFDD FFE5          	movff	postdec2,postdec1
 23017                           
 23018                           ;eusartparser.c: 204:                 write_package(*package);
 23019  0031A8  5018               	movf	read_eusartparser@package^0,w,c
 23020  0031AA  6ED9               	movwf	fsr2l,c
 23021  0031AC  6ADA               	clrf	fsr2h,c
 23022  0031AE  EE00  F011         	lfsr	0,write_package@package
 23023  0031B2  0E06               	movlw	6
 23024  0031B4                     u18461:
 23025  0031B4  CFDB FFEB          	movff	plusw2,plusw0
 23026  0031B8  06E8               	decf	wreg,f,c
 23027  0031BA  E2FC               	bc	u18461
 23028  0031BC  EC5C  F048         	call	_write_package	;wreg free
 23029                           
 23030                           ;eusartparser.c: 205:                 break;
 23031  0031C0  0012               	return	
 23032  0031C2                     l16455:
 23033                           
 23034                           ; BSR set to: 0
 23035                           ;eusartparser.c: 209:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.l
      +                          earningCurrentDecelarationOpen))+1);
 23036  0031C2  EE20  F0C6         	lfsr	2,_var_sys_NVM+46
 23037  0031C6  5018               	movf	read_eusartparser@package^0,w,c
 23038  0031C8  6EE1               	movwf	fsr1l,c
 23039  0031CA  6AE2               	clrf	fsr1h,c
 23040  0031CC  0E02               	movlw	2
 23041  0031CE  26E1               	addwf	fsr1l,f,c
 23042  0031D0  CFDE FFE6          	movff	postinc2,postinc1
 23043  0031D4  CFDD FFE5          	movff	postdec2,postdec1
 23044                           
 23045                           ; BSR set to: 0
 23046                           ;eusartparser.c: 210:                 write_package(*package);
 23047  0031D8  5018               	movf	read_eusartparser@package^0,w,c
 23048  0031DA  6ED9               	movwf	fsr2l,c
 23049  0031DC  6ADA               	clrf	fsr2h,c
 23050  0031DE  EE00  F011         	lfsr	0,write_package@package
 23051  0031E2  0E06               	movlw	6
 23052  0031E4                     u18471:
 23053  0031E4  CFDB FFEB          	movff	plusw2,plusw0
 23054  0031E8  06E8               	decf	wreg,f,c
 23055  0031EA  E2FC               	bc	u18471
 23056  0031EC  EC5C  F048         	call	_write_package	;wreg free
 23057                           
 23058                           ;eusartparser.c: 211:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.l
      +                          earningCurrentDecelarationOpen))+0);
 23059  0031F0  EE20  F0C4         	lfsr	2,_var_sys_NVM+44
 23060  0031F4  5018               	movf	read_eusartparser@package^0,w,c
 23061  0031F6  6EE1               	movwf	fsr1l,c
 23062  0031F8  6AE2               	clrf	fsr1h,c
 23063  0031FA  0E02               	movlw	2
 23064  0031FC  26E1               	addwf	fsr1l,f,c
 23065  0031FE  CFDE FFE6          	movff	postinc2,postinc1
 23066  003202  CFDD FFE5          	movff	postdec2,postdec1
 23067                           
 23068                           ;eusartparser.c: 212:                 write_package(*package);
 23069  003206  5018               	movf	read_eusartparser@package^0,w,c
 23070  003208  6ED9               	movwf	fsr2l,c
 23071  00320A  6ADA               	clrf	fsr2h,c
 23072  00320C  EE00  F011         	lfsr	0,write_package@package
 23073  003210  0E06               	movlw	6
 23074  003212                     u18481:
 23075  003212  CFDB FFEB          	movff	plusw2,plusw0
 23076  003216  06E8               	decf	wreg,f,c
 23077  003218  E2FC               	bc	u18481
 23078  00321A  EC5C  F048         	call	_write_package	;wreg free
 23079                           
 23080                           ;eusartparser.c: 213:                 break;
 23081  00321E  0012               	return	
 23082  003220                     l16461:
 23083                           
 23084                           ; BSR set to: 0
 23085                           ;eusartparser.c: 217:                 package->data.data16=var_sys_NVM.learningCurrentNo
      +                          rmalClose;
 23086  003220  5018               	movf	read_eusartparser@package^0,w,c
 23087  003222  6ED9               	movwf	fsr2l,c
 23088  003224  6ADA               	clrf	fsr2h,c
 23089  003226  0E02               	movlw	2
 23090  003228  26D9               	addwf	fsr2l,f,c
 23091  00322A  C0C8  FFDE         	movff	_var_sys_NVM+48,postinc2	;volatile
 23092  00322E  C0C9  FFDD         	movff	_var_sys_NVM+49,postdec2	;volatile
 23093  003232  D673               	goto	l16349
 23094  003234                     l16465:
 23095                           
 23096                           ; BSR set to: 0
 23097                           ;eusartparser.c: 223:                 package->data.data16=var_sys_NVM.learningCurrentNo
      +                          rmalOpen;
 23098  003234  5018               	movf	read_eusartparser@package^0,w,c
 23099  003236  6ED9               	movwf	fsr2l,c
 23100  003238  6ADA               	clrf	fsr2h,c
 23101  00323A  0E02               	movlw	2
 23102  00323C  26D9               	addwf	fsr2l,f,c
 23103  00323E  C0CA  FFDE         	movff	_var_sys_NVM+50,postinc2	;volatile
 23104  003242  C0CB  FFDD         	movff	_var_sys_NVM+51,postdec2	;volatile
 23105  003246  D669               	goto	l16349
 23106  003248                     l16469:
 23107                           
 23108                           ; BSR set to: 0
 23109                           ;eusartparser.c: 229:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.l
      +                          earningTimeToOpen))+1);
 23110  003248  EE20  F0CE         	lfsr	2,_var_sys_NVM+54
 23111  00324C  5018               	movf	read_eusartparser@package^0,w,c
 23112  00324E  6EE1               	movwf	fsr1l,c
 23113  003250  6AE2               	clrf	fsr1h,c
 23114  003252  0E02               	movlw	2
 23115  003254  26E1               	addwf	fsr1l,f,c
 23116  003256  CFDE FFE6          	movff	postinc2,postinc1
 23117  00325A  CFDD FFE5          	movff	postdec2,postdec1
 23118                           
 23119                           ; BSR set to: 0
 23120                           ;eusartparser.c: 230:                 write_package(*package);
 23121  00325E  5018               	movf	read_eusartparser@package^0,w,c
 23122  003260  6ED9               	movwf	fsr2l,c
 23123  003262  6ADA               	clrf	fsr2h,c
 23124  003264  EE00  F011         	lfsr	0,write_package@package
 23125  003268  0E06               	movlw	6
 23126  00326A                     u18491:
 23127  00326A  CFDB FFEB          	movff	plusw2,plusw0
 23128  00326E  06E8               	decf	wreg,f,c
 23129  003270  E2FC               	bc	u18491
 23130  003272  EC5C  F048         	call	_write_package	;wreg free
 23131                           
 23132                           ;eusartparser.c: 231:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.l
      +                          earningTimeToOpen))+0);
 23133  003276  EE20  F0CC         	lfsr	2,_var_sys_NVM+52
 23134  00327A  5018               	movf	read_eusartparser@package^0,w,c
 23135  00327C  6EE1               	movwf	fsr1l,c
 23136  00327E  6AE2               	clrf	fsr1h,c
 23137  003280  0E02               	movlw	2
 23138  003282  26E1               	addwf	fsr1l,f,c
 23139  003284  CFDE FFE6          	movff	postinc2,postinc1
 23140  003288  CFDD FFE5          	movff	postdec2,postdec1
 23141                           
 23142                           ;eusartparser.c: 232:                 write_package(*package);
 23143  00328C  5018               	movf	read_eusartparser@package^0,w,c
 23144  00328E  6ED9               	movwf	fsr2l,c
 23145  003290  6ADA               	clrf	fsr2h,c
 23146  003292  EE00  F011         	lfsr	0,write_package@package
 23147  003296  0E06               	movlw	6
 23148  003298                     u18501:
 23149  003298  CFDB FFEB          	movff	plusw2,plusw0
 23150  00329C  06E8               	decf	wreg,f,c
 23151  00329E  E2FC               	bc	u18501
 23152  0032A0  EC5C  F048         	call	_write_package	;wreg free
 23153                           
 23154                           ;eusartparser.c: 233:                 break;
 23155  0032A4  0012               	return	
 23156  0032A6                     l16475:
 23157                           
 23158                           ; BSR set to: 0
 23159                           ;eusartparser.c: 237:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.l
      +                          earningTimeToClose))+1);
 23160  0032A6  EE20  F0D2         	lfsr	2,_var_sys_NVM+58
 23161  0032AA  5018               	movf	read_eusartparser@package^0,w,c
 23162  0032AC  6EE1               	movwf	fsr1l,c
 23163  0032AE  6AE2               	clrf	fsr1h,c
 23164  0032B0  0E02               	movlw	2
 23165  0032B2  26E1               	addwf	fsr1l,f,c
 23166  0032B4  CFDE FFE6          	movff	postinc2,postinc1
 23167  0032B8  CFDD FFE5          	movff	postdec2,postdec1
 23168                           
 23169                           ; BSR set to: 0
 23170                           ;eusartparser.c: 238:                 write_package(*package);
 23171  0032BC  5018               	movf	read_eusartparser@package^0,w,c
 23172  0032BE  6ED9               	movwf	fsr2l,c
 23173  0032C0  6ADA               	clrf	fsr2h,c
 23174  0032C2  EE00  F011         	lfsr	0,write_package@package
 23175  0032C6  0E06               	movlw	6
 23176  0032C8                     u18511:
 23177  0032C8  CFDB FFEB          	movff	plusw2,plusw0
 23178  0032CC  06E8               	decf	wreg,f,c
 23179  0032CE  E2FC               	bc	u18511
 23180  0032D0  EC5C  F048         	call	_write_package	;wreg free
 23181                           
 23182                           ;eusartparser.c: 239:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.l
      +                          earningTimeToClose))+0);
 23183  0032D4  EE20  F0D0         	lfsr	2,_var_sys_NVM+56
 23184  0032D8  5018               	movf	read_eusartparser@package^0,w,c
 23185  0032DA  6EE1               	movwf	fsr1l,c
 23186  0032DC  6AE2               	clrf	fsr1h,c
 23187  0032DE  0E02               	movlw	2
 23188  0032E0  26E1               	addwf	fsr1l,f,c
 23189  0032E2  CFDE FFE6          	movff	postinc2,postinc1
 23190  0032E6  CFDD FFE5          	movff	postdec2,postdec1
 23191                           
 23192                           ;eusartparser.c: 240:                 write_package(*package);
 23193  0032EA  5018               	movf	read_eusartparser@package^0,w,c
 23194  0032EC  6ED9               	movwf	fsr2l,c
 23195  0032EE  6ADA               	clrf	fsr2h,c
 23196  0032F0  EE00  F011         	lfsr	0,write_package@package
 23197  0032F4  0E06               	movlw	6
 23198  0032F6                     u18521:
 23199  0032F6  CFDB FFEB          	movff	plusw2,plusw0
 23200  0032FA  06E8               	decf	wreg,f,c
 23201  0032FC  E2FC               	bc	u18521
 23202  0032FE  EC5C  F048         	call	_write_package	;wreg free
 23203                           
 23204                           ;eusartparser.c: 241:                 break;
 23205  003302  0012               	return	
 23206  003304                     l16483:
 23207                           
 23208                           ; BSR set to: 0
 23209  003304  5018               	movf	read_eusartparser@package^0,w,c
 23210  003306  6ED9               	movwf	fsr2l,c
 23211  003308  6ADA               	clrf	fsr2h,c
 23212  00330A  0E01               	movlw	1
 23213  00330C  26D9               	addwf	fsr2l,f,c
 23214  00330E  50DF               	movf	indf2,w,c
 23215  003310  6E19               	movwf	??_read_eusartparser^0,c
 23216  003312  6A1A               	clrf	(??_read_eusartparser+1)^0,c
 23217                           
 23218                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 23219                           ; Switch size 1, requested type "simple"
 23220                           ; Number of cases is 1, Range of values is 0 to 0
 23221                           ; switch strategies available:
 23222                           ; Name         Instructions Cycles
 23223                           ; simple_byte            4     3 (average)
 23224                           ;	Chosen strategy is simple_byte
 23225  003314  501A               	movf	(??_read_eusartparser+1)^0,w,c
 23226  003316  0A00               	xorlw	0	; case 0
 23227  003318  A4D8               	btfss	status,2,c
 23228  00331A  0012               	return	
 23229                           
 23230                           ; BSR set to: 0
 23231                           ; Switch size 1, requested type "simple"
 23232                           ; Number of cases is 38, Range of values is 0 to 50
 23233                           ; switch strategies available:
 23234                           ; Name         Instructions Cycles
 23235                           ; simple_byte          115    58 (average)
 23236                           ;	Chosen strategy is simple_byte
 23237  00331C  5019               	movf	??_read_eusartparser^0,w,c
 23238  00331E  0A00               	xorlw	0	; case 0
 23239  003320  B4D8               	btfsc	status,2,c
 23240  003322  D5ED               	goto	l16347
 23241  003324  0A02               	xorlw	2	; case 2
 23242  003326  B4D8               	btfsc	status,2,c
 23243  003328  D61C               	goto	l16359
 23244  00332A  0A01               	xorlw	1	; case 3
 23245  00332C  B4D8               	btfsc	status,2,c
 23246  00332E  D68D               	goto	l16403
 23247  003330  0A06               	xorlw	6	; case 5
 23248  003332  B4D8               	btfsc	status,2,c
 23249  003334  D625               	goto	l16363
 23250  003336  0A02               	xorlw	2	; case 7
 23251  003338  B4D8               	btfsc	status,2,c
 23252  00333A  D670               	goto	l16395
 23253  00333C  0A0F               	xorlw	15	; case 8
 23254  00333E  B4D8               	btfsc	status,2,c
 23255  003340  D6AC               	goto	l16423
 23256  003342  0A02               	xorlw	2	; case 10
 23257  003344  B4D8               	btfsc	status,2,c
 23258  003346  D689               	goto	l16407
 23259  003348  0A1A               	xorlw	26	; case 16
 23260  00334A  B4D8               	btfsc	status,2,c
 23261  00334C  D5D8               	goto	l16347
 23262  00334E  0A01               	xorlw	1	; case 17
 23263  003350  B4D8               	btfsc	status,2,c
 23264  003352  D5F0               	goto	l16351
 23265  003354  0A03               	xorlw	3	; case 18
 23266  003356  B4D8               	btfsc	status,2,c
 23267  003358  D5FC               	goto	l16355
 23268  00335A  0A01               	xorlw	1	; case 19
 23269  00335C  B4D8               	btfsc	status,2,c
 23270  00335E  D601               	goto	l16359
 23271  003360  0A07               	xorlw	7	; case 20
 23272  003362  B4D8               	btfsc	status,2,c
 23273  003364  D60D               	goto	l16363
 23274  003366  0A01               	xorlw	1	; case 21
 23275  003368  B4D8               	btfsc	status,2,c
 23276  00336A  D619               	goto	l16367
 23277  00336C  0A03               	xorlw	3	; case 22
 23278  00336E  B4D8               	btfsc	status,2,c
 23279  003370  D625               	goto	l16371
 23280  003372  0A01               	xorlw	1	; case 23
 23281  003374  B4D8               	btfsc	status,2,c
 23282  003376  D62A               	goto	l16375
 23283  003378  0A0F               	xorlw	15	; case 24
 23284  00337A  B4D8               	btfsc	status,2,c
 23285  00337C  D62F               	goto	l16379
 23286  00337E  0A01               	xorlw	1	; case 25
 23287  003380  B4D8               	btfsc	status,2,c
 23288  003382  D634               	goto	l16383
 23289  003384  0A03               	xorlw	3	; case 26
 23290  003386  B4D8               	btfsc	status,2,c
 23291  003388  D639               	goto	l16387
 23292  00338A  0A01               	xorlw	1	; case 27
 23293  00338C  B4D8               	btfsc	status,2,c
 23294  00338E  D63E               	goto	l16391
 23295  003390  0A07               	xorlw	7	; case 28
 23296  003392  B4D8               	btfsc	status,2,c
 23297  003394  D643               	goto	l16395
 23298  003396  0A01               	xorlw	1	; case 29
 23299  003398  B4D8               	btfsc	status,2,c
 23300  00339A  D648               	goto	l16399
 23301  00339C  0A03               	xorlw	3	; case 30
 23302  00339E  B4D8               	btfsc	status,2,c
 23303  0033A0  D654               	goto	l16403
 23304  0033A2  0A01               	xorlw	1	; case 31
 23305  0033A4  B4D8               	btfsc	status,2,c
 23306  0033A6  D659               	goto	l16407
 23307  0033A8  0A3F               	xorlw	63	; case 32
 23308  0033AA  B4D8               	btfsc	status,2,c
 23309  0033AC  D65E               	goto	l16411
 23310  0033AE  0A01               	xorlw	1	; case 33
 23311  0033B0  B4D8               	btfsc	status,2,c
 23312  0033B2  D663               	goto	l16415
 23313  0033B4  0A03               	xorlw	3	; case 34
 23314  0033B6  B4D8               	btfsc	status,2,c
 23315  0033B8  D668               	goto	l16419
 23316  0033BA  0A01               	xorlw	1	; case 35
 23317  0033BC  B4D8               	btfsc	status,2,c
 23318  0033BE  D66D               	goto	l16423
 23319  0033C0  0A07               	xorlw	7	; case 36
 23320  0033C2  B4D8               	btfsc	status,2,c
 23321  0033C4  D672               	goto	l16427
 23322  0033C6  0A01               	xorlw	1	; case 37
 23323  0033C8  B4D8               	btfsc	status,2,c
 23324  0033CA  D677               	goto	l16431
 23325  0033CC  0A03               	xorlw	3	; case 38
 23326  0033CE  B4D8               	btfsc	status,2,c
 23327  0033D0  D67C               	goto	l16435
 23328  0033D2  0A01               	xorlw	1	; case 39
 23329  0033D4  B4D8               	btfsc	status,2,c
 23330  0033D6  D688               	goto	l16439
 23331  0033D8  0A0E               	xorlw	14	; case 41
 23332  0033DA  B4D8               	btfsc	status,2,c
 23333  0033DC  D6B4               	goto	l16445
 23334  0033DE  0A03               	xorlw	3	; case 42
 23335  0033E0  B4D8               	btfsc	status,2,c
 23336  0033E2  D6C0               	goto	l16449
 23337  0033E4  0A06               	xorlw	6	; case 44
 23338  0033E6  B4D8               	btfsc	status,2,c
 23339  0033E8  D6EC               	goto	l16455
 23340  0033EA  0A02               	xorlw	2	; case 46
 23341  0033EC  B4D8               	btfsc	status,2,c
 23342  0033EE  D718               	goto	l16461
 23343  0033F0  0A01               	xorlw	1	; case 47
 23344  0033F2  B4D8               	btfsc	status,2,c
 23345  0033F4  D71F               	goto	l16465
 23346  0033F6  0A1F               	xorlw	31	; case 48
 23347  0033F8  B4D8               	btfsc	status,2,c
 23348  0033FA  D726               	goto	l16469
 23349  0033FC  0A02               	xorlw	2	; case 50
 23350  0033FE  A4D8               	btfss	status,2,c
 23351  003400  0012               	return	
 23352  003402  D751               	goto	l16475
 23353  003404                     __end_of_read_eusartparser:
 23354                           	callstack 0
 23355                           
 23356 ;; *************** function _write_package *****************
 23357 ;; Defined at:
 23358 ;;		line 50 in file "eusartpackage.c"
 23359 ;; Parameters:    Size  Location     Type
 23360 ;;  package         7   16[COMRAM] const struct package_t
 23361 ;; Auto vars:     Size  Location     Type
 23362 ;;		None
 23363 ;; Return value:  Size  Location     Type
 23364 ;;                  1    wreg      void 
 23365 ;; Registers used:
 23366 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23367 ;; Tracked objects:
 23368 ;;		On entry : 0/0
 23369 ;;		On exit  : 0/0
 23370 ;;		Unchanged: 0/0
 23371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23372 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23375 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23376 ;;Total ram usage:        7 bytes
 23377 ;; Hardware stack levels used: 1
 23378 ;; Hardware stack levels required when called: 5
 23379 ;; This function calls:
 23380 ;;		_EUSART1_Write
 23381 ;; This function is called by:
 23382 ;;		_read_eusartparser
 23383 ;;		_eusartparser
 23384 ;; This function uses a non-reentrant model
 23385 ;;
 23386                           
 23387                           	psect	text79
 23388  0090B8                     __ptext79:
 23389                           	callstack 0
 23390  0090B8                     _write_package:
 23391                           	callstack 24
 23392                           
 23393                           ;eusartpackage.c: 52:         if(package.valid==0)
 23394                           
 23395                           ;incstack = 0
 23396  0090B8  5017               	movf	(write_package@package+6)^0,w,c
 23397  0090BA  B4D8               	btfsc	status,2,c
 23398  0090BC  0012               	return	
 23399                           
 23400                           ;eusartpackage.c: 56:         EUSART1_Write(package.startbyte);
 23401  0090BE  5015               	movf	(write_package@package+4)^0,w,c
 23402  0090C0  ECF4  F046         	call	_EUSART1_Write
 23403                           
 23404                           ;eusartpackage.c: 57:         EUSART1_Write(package.functioncode);
 23405  0090C4  5011               	movf	write_package@package^0,w,c
 23406  0090C6  ECF4  F046         	call	_EUSART1_Write
 23407                           
 23408                           ;eusartpackage.c: 58:         EUSART1_Write(package.address);
 23409  0090CA  5012               	movf	(write_package@package+1)^0,w,c
 23410  0090CC  ECF4  F046         	call	_EUSART1_Write
 23411                           
 23412                           ;eusartpackage.c: 59:         EUSART1_Write(package.data.data8[0]);
 23413  0090D0  5013               	movf	(write_package@package+2)^0,w,c
 23414  0090D2  ECF4  F046         	call	_EUSART1_Write
 23415                           
 23416                           ;eusartpackage.c: 60:         EUSART1_Write(package.data.data8[1]);
 23417  0090D6  5014               	movf	(write_package@package+3)^0,w,c
 23418  0090D8  ECF4  F046         	call	_EUSART1_Write
 23419                           
 23420                           ;eusartpackage.c: 61:         EUSART1_Write(package.endbyte);
 23421  0090DC  5016               	movf	(write_package@package+5)^0,w,c
 23422  0090DE  ECF4  F046         	call	_EUSART1_Write
 23423  0090E2  0012               	return		;funcret
 23424  0090E4                     __end_of_write_package:
 23425                           	callstack 0
 23426                           
 23427 ;; *************** function _EUSART1_Write *****************
 23428 ;; Defined at:
 23429 ;;		line 173 in file "mcc_generated_files/eusart1.c"
 23430 ;; Parameters:    Size  Location     Type
 23431 ;;  txData          1    wreg     unsigned char 
 23432 ;; Auto vars:     Size  Location     Type
 23433 ;;  txData          1   15[COMRAM] unsigned char 
 23434 ;; Return value:  Size  Location     Type
 23435 ;;                  1    wreg      void 
 23436 ;; Registers used:
 23437 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 23438 ;; Tracked objects:
 23439 ;;		On entry : 0/0
 23440 ;;		On exit  : 3F/E
 23441 ;;		Unchanged: 0/0
 23442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23444 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23446 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23447 ;;Total ram usage:        1 bytes
 23448 ;; Hardware stack levels used: 1
 23449 ;; Hardware stack levels required when called: 4
 23450 ;; This function calls:
 23451 ;;		Nothing
 23452 ;; This function is called by:
 23453 ;;		_write_package
 23454 ;; This function uses a non-reentrant model
 23455 ;;
 23456                           
 23457                           	psect	text80
 23458  008DE8                     __ptext80:
 23459                           	callstack 0
 23460  008DE8                     _EUSART1_Write:
 23461                           	callstack 24
 23462                           
 23463                           ;incstack = 0
 23464                           ;EUSART1_Write@txData stored from wreg
 23465  008DE8  6E10               	movwf	EUSART1_Write@txData^0,c
 23466  008DEA                     
 23467                           ;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBufferRemaining)
 23468                           
 23469                           ;mcc_generated_files/eusart1.c: 173: void EUSART1_Write(uint8_t txData);mcc_generated_fi
      +                          les/eusart1.c: 174: {;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBuffer
      +                          Remaining)
 23470  008DEA  0101               	movlb	1	; () banked
 23471  008DEC  51FF               	movf	_eusart1TxBufferRemaining& (0+255),w,b	;volatile
 23472  008DEE  B4D8               	btfsc	status,2,c
 23473  008DF0  D7FC               	goto	l12319
 23474                           
 23475                           ; BSR set to: 1
 23476                           ;mcc_generated_files/eusart1.c: 179:     if(0 == PIE3bits.TX1IE)
 23477  008DF2  010E               	movlb	14	; () banked
 23478  008DF4  B9C5               	btfsc	197,4,b	;volatile
 23479  008DF6  D003               	goto	l100
 23480                           
 23481                           ; BSR set to: 14
 23482                           ;mcc_generated_files/eusart1.c: 180:     {;mcc_generated_files/eusart1.c: 181:         T
      +                          X1REG = txData;
 23483  008DF8  C010  FF9A         	movff	EUSART1_Write@txData,3994	;volatile
 23484                           
 23485                           ;mcc_generated_files/eusart1.c: 182:     }
 23486  008DFC  D012               	goto	l12335
 23487  008DFE                     l100:
 23488                           
 23489                           ; BSR set to: 14
 23490                           ;mcc_generated_files/eusart1.c: 184:     {;mcc_generated_files/eusart1.c: 185:         P
      +                          IE3bits.TX1IE = 0;
 23491  008DFE  99C5               	bcf	197,4,b	;volatile
 23492                           
 23493                           ; BSR set to: 14
 23494                           ;mcc_generated_files/eusart1.c: 186:         eusart1TxBuffer[eusart1TxHead++] = txData;
 23495  008E00  0E84               	movlw	low _eusart1TxBuffer
 23496  008E02  0100               	movlb	0	; () banked
 23497  008E04  2597               	addwf	_eusart1TxHead& (0+255),w,b	;volatile
 23498  008E06  6ED9               	movwf	fsr2l,c
 23499  008E08  6ADA               	clrf	fsr2h,c
 23500  008E0A  0E02               	movlw	high _eusart1TxBuffer
 23501  008E0C  22DA               	addwfc	fsr2h,f,c
 23502  008E0E  C010  FFDF         	movff	EUSART1_Write@txData,indf2
 23503                           
 23504                           ; BSR set to: 0
 23505  008E12  2B97               	incf	_eusart1TxHead& (0+255),f,b	;volatile
 23506                           
 23507                           ; BSR set to: 0
 23508                           ;mcc_generated_files/eusart1.c: 187:         if(sizeof(eusart1TxBuffer) <= eusart1TxHead
      +                          )
 23509  008E14  0E07               	movlw	7
 23510  008E16  6597               	cpfsgt	_eusart1TxHead& (0+255),b
 23511  008E18  D002               	goto	l12333
 23512                           
 23513                           ; BSR set to: 0
 23514                           ;mcc_generated_files/eusart1.c: 188:         {;mcc_generated_files/eusart1.c: 189:      
      +                                 eusart1TxHead = 0;
 23515  008E1A  0E00               	movlw	0
 23516  008E1C  6F97               	movwf	_eusart1TxHead& (0+255),b	;volatile
 23517  008E1E                     l12333:
 23518                           
 23519                           ; BSR set to: 0
 23520                           ;mcc_generated_files/eusart1.c: 191:         eusart1TxBufferRemaining--;
 23521  008E1E  0101               	movlb	1	; () banked
 23522  008E20  07FF               	decf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
 23523  008E22                     l12335:
 23524                           
 23525                           ;mcc_generated_files/eusart1.c: 193:     PIE3bits.TX1IE = 1;
 23526  008E22  010E               	movlb	14	; () banked
 23527  008E24  89C5               	bsf	197,4,b	;volatile
 23528                           
 23529                           ; BSR set to: 14
 23530  008E26  0012               	return		;funcret
 23531  008E28                     __end_of_EUSART1_Write:
 23532                           	callstack 0
 23533                           
 23534 ;; *************** function _confirmpackage *****************
 23535 ;; Defined at:
 23536 ;;		line 448 in file "eusartparser.c"
 23537 ;; Parameters:    Size  Location     Type
 23538 ;;  package         1   16[COMRAM] PTR struct package_t
 23539 ;;		 -> main@package(7), 
 23540 ;;  confirm         1   17[COMRAM] _Bool 
 23541 ;; Auto vars:     Size  Location     Type
 23542 ;;		None
 23543 ;; Return value:  Size  Location     Type
 23544 ;;                  1    wreg      void 
 23545 ;; Registers used:
 23546 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23547 ;; Tracked objects:
 23548 ;;		On entry : 0/0
 23549 ;;		On exit  : 0/0
 23550 ;;		Unchanged: 0/0
 23551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23552 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23555 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23556 ;;Total ram usage:        2 bytes
 23557 ;; Hardware stack levels used: 1
 23558 ;; Hardware stack levels required when called: 5
 23559 ;; This function calls:
 23560 ;;		_init_package
 23561 ;; This function is called by:
 23562 ;;		_eusartparser
 23563 ;; This function uses a non-reentrant model
 23564 ;;
 23565                           
 23566                           	psect	text81
 23567  008BAA                     __ptext81:
 23568                           	callstack 0
 23569  008BAA                     _confirmpackage:
 23570                           	callstack 24
 23571                           
 23572                           ;eusartparser.c: 449:         init_package(package);
 23573                           
 23574                           ; BSR set to: 14
 23575                           ;incstack = 0
 23576  008BAA  C011  F010         	movff	confirmpackage@package,init_package@package
 23577  008BAE  EC72  F048         	call	_init_package	;wreg free
 23578                           
 23579                           ;eusartparser.c: 450:         package->functioncode=0x03;
 23580  008BB2  5011               	movf	confirmpackage@package^0,w,c
 23581  008BB4  6ED9               	movwf	fsr2l,c
 23582  008BB6  6ADA               	clrf	fsr2h,c
 23583  008BB8  0E03               	movlw	3
 23584  008BBA  6EDF               	movwf	indf2,c
 23585                           
 23586                           ;eusartparser.c: 451:         package->address=0x00;
 23587  008BBC  5011               	movf	confirmpackage@package^0,w,c
 23588  008BBE  6ED9               	movwf	fsr2l,c
 23589  008BC0  6ADA               	clrf	fsr2h,c
 23590  008BC2  0E01               	movlw	1
 23591  008BC4  26D9               	addwf	fsr2l,f,c
 23592  008BC6  0E00               	movlw	0
 23593  008BC8  6EDF               	movwf	indf2,c
 23594                           
 23595                           ;eusartparser.c: 452:         if(confirm==1)
 23596  008BCA  0412               	decf	confirmpackage@confirm^0,w,c
 23597  008BCC  A4D8               	btfss	status,2,c
 23598  008BCE  D00A               	goto	l16531
 23599                           
 23600                           ;eusartparser.c: 453:             package->data.data16=0x0001;
 23601  008BD0  5011               	movf	confirmpackage@package^0,w,c
 23602  008BD2  6ED9               	movwf	fsr2l,c
 23603  008BD4  6ADA               	clrf	fsr2h,c
 23604  008BD6  0E02               	movlw	2
 23605  008BD8  26D9               	addwf	fsr2l,f,c
 23606  008BDA  0E01               	movlw	1
 23607  008BDC  6EDE               	movwf	postinc2,c
 23608  008BDE  0E00               	movlw	0
 23609  008BE0  6EDD               	movwf	postdec2,c
 23610  008BE2  0012               	return	
 23611  008BE4                     l16531:
 23612                           
 23613                           ;eusartparser.c: 455:             package->data.data16=0x0000;
 23614  008BE4  5011               	movf	confirmpackage@package^0,w,c
 23615  008BE6  6ED9               	movwf	fsr2l,c
 23616  008BE8  6ADA               	clrf	fsr2h,c
 23617  008BEA  0E02               	movlw	2
 23618  008BEC  26D9               	addwf	fsr2l,f,c
 23619  008BEE  0E00               	movlw	0
 23620  008BF0  6EDE               	movwf	postinc2,c
 23621  008BF2  0E00               	movlw	0
 23622  008BF4  6EDD               	movwf	postdec2,c
 23623  008BF6  0012               	return		;funcret
 23624  008BF8                     __end_of_confirmpackage:
 23625                           	callstack 0
 23626                           
 23627 ;; *************** function _init_package *****************
 23628 ;; Defined at:
 23629 ;;		line 11 in file "eusartpackage.c"
 23630 ;; Parameters:    Size  Location     Type
 23631 ;;  package         1   15[COMRAM] PTR struct package_t
 23632 ;;		 -> main@package(7), 
 23633 ;; Auto vars:     Size  Location     Type
 23634 ;;		None
 23635 ;; Return value:  Size  Location     Type
 23636 ;;                  1    wreg      void 
 23637 ;; Registers used:
 23638 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 23639 ;; Tracked objects:
 23640 ;;		On entry : 0/0
 23641 ;;		On exit  : 0/0
 23642 ;;		Unchanged: 0/0
 23643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23644 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23647 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23648 ;;Total ram usage:        1 bytes
 23649 ;; Hardware stack levels used: 1
 23650 ;; Hardware stack levels required when called: 4
 23651 ;; This function calls:
 23652 ;;		Nothing
 23653 ;; This function is called by:
 23654 ;;		_confirmpackage
 23655 ;; This function uses a non-reentrant model
 23656 ;;
 23657                           
 23658                           	psect	text82
 23659  0090E4                     __ptext82:
 23660                           	callstack 0
 23661  0090E4                     _init_package:
 23662                           	callstack 24
 23663                           
 23664                           ;eusartpackage.c: 12:         package->startbyte=0x0A;
 23665                           
 23666                           ;incstack = 0
 23667  0090E4  5010               	movf	init_package@package^0,w,c
 23668  0090E6  6ED9               	movwf	fsr2l,c
 23669  0090E8  6ADA               	clrf	fsr2h,c
 23670  0090EA  0E04               	movlw	4
 23671  0090EC  26D9               	addwf	fsr2l,f,c
 23672  0090EE  0E0A               	movlw	10
 23673  0090F0  6EDF               	movwf	indf2,c
 23674                           
 23675                           ;eusartpackage.c: 13:         package->endbyte=0x0D;
 23676  0090F2  5010               	movf	init_package@package^0,w,c
 23677  0090F4  6ED9               	movwf	fsr2l,c
 23678  0090F6  6ADA               	clrf	fsr2h,c
 23679  0090F8  0E05               	movlw	5
 23680  0090FA  26D9               	addwf	fsr2l,f,c
 23681  0090FC  0E0D               	movlw	13
 23682  0090FE  6EDF               	movwf	indf2,c
 23683                           
 23684                           ;eusartpackage.c: 14:         package->valid=1;
 23685  009100  5010               	movf	init_package@package^0,w,c
 23686  009102  6ED9               	movwf	fsr2l,c
 23687  009104  6ADA               	clrf	fsr2h,c
 23688  009106  0E06               	movlw	6
 23689  009108  26D9               	addwf	fsr2l,f,c
 23690  00910A  0E01               	movlw	1
 23691  00910C  6EDF               	movwf	indf2,c
 23692  00910E  0012               	return		;funcret
 23693  009110                     __end_of_init_package:
 23694                           	callstack 0
 23695                           
 23696 ;; *************** function _cmdMemoryIsEmpty *****************
 23697 ;; Defined at:
 23698 ;;		line 122 in file "controlMemory_MC50.c"
 23699 ;; Parameters:    Size  Location     Type
 23700 ;;  cmdType         1    wreg     unsigned char 
 23701 ;;  position        1   45[COMRAM] unsigned char 
 23702 ;; Auto vars:     Size  Location     Type
 23703 ;;  cmdType         1   48[COMRAM] unsigned char 
 23704 ;;  tempSerial      4   49[COMRAM] unsigned long 
 23705 ;; Return value:  Size  Location     Type
 23706 ;;                  1    wreg      unsigned char 
 23707 ;; Registers used:
 23708 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23709 ;; Tracked objects:
 23710 ;;		On entry : 0/1
 23711 ;;		On exit  : 0/0
 23712 ;;		Unchanged: 0/0
 23713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23714 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23715 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23716 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23717 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23718 ;;Total ram usage:        8 bytes
 23719 ;; Hardware stack levels used: 1
 23720 ;; Hardware stack levels required when called: 13
 23721 ;; This function calls:
 23722 ;;		_i2c_readDataBlock
 23723 ;; This function is called by:
 23724 ;;		_setValueToEdit
 23725 ;;		_controlSelectRemote
 23726 ;;		_eusartparser
 23727 ;; This function uses a non-reentrant model
 23728 ;;
 23729                           
 23730                           	psect	text83
 23731  0079FA                     __ptext83:
 23732                           	callstack 0
 23733  0079FA                     _cmdMemoryIsEmpty:
 23734                           	callstack 14
 23735                           
 23736                           ;incstack = 0
 23737                           ;cmdMemoryIsEmpty@cmdType stored from wreg
 23738  0079FA  6E31               	movwf	cmdMemoryIsEmpty@cmdType^0,c
 23739                           
 23740                           ;controlMemory_MC50.c: 122: char cmdMemoryIsEmpty(char cmdType, char position);controlMe
      +                          mory_MC50.c: 123: {;controlMemory_MC50.c: 124:     unsigned long tempSerial=0;
 23741  0079FC  0E00               	movlw	0
 23742  0079FE  6E32               	movwf	cmdMemoryIsEmpty@tempSerial^0,c
 23743  007A00  0E00               	movlw	0
 23744  007A02  6E33               	movwf	(cmdMemoryIsEmpty@tempSerial+1)^0,c
 23745  007A04  0E00               	movlw	0
 23746  007A06  6E34               	movwf	(cmdMemoryIsEmpty@tempSerial+2)^0,c
 23747  007A08  0E00               	movlw	0
 23748  007A0A  6E35               	movwf	(cmdMemoryIsEmpty@tempSerial+3)^0,c
 23749                           
 23750                           ;controlMemory_MC50.c: 127:      if(cmdType==0)
 23751  007A0C  5031               	movf	cmdMemoryIsEmpty@cmdType^0,w,c
 23752  007A0E  A4D8               	btfss	status,2,c
 23753  007A10  D01A               	goto	l20165
 23754                           
 23755                           ;controlMemory_MC50.c: 128:     {;controlMemory_MC50.c: 129:          i2c_readDataBlock(
      +                          0x50, (uint16_t)(0x0200 + (position * 4)),(char*)&tempSerial, 4);
 23756  007A12  502E               	movf	cmdMemoryIsEmpty@position^0,w,c
 23757  007A14  6E2F               	movwf	??_cmdMemoryIsEmpty^0,c
 23758  007A16  6A30               	clrf	(??_cmdMemoryIsEmpty+1)^0,c
 23759  007A18  90D8               	bcf	status,0,c
 23760  007A1A  362F               	rlcf	??_cmdMemoryIsEmpty^0,f,c
 23761  007A1C  3630               	rlcf	(??_cmdMemoryIsEmpty+1)^0,f,c
 23762  007A1E  90D8               	bcf	status,0,c
 23763  007A20  362F               	rlcf	??_cmdMemoryIsEmpty^0,f,c
 23764  007A22  3630               	rlcf	(??_cmdMemoryIsEmpty+1)^0,f,c
 23765  007A24  0E00               	movlw	0
 23766  007A26  242F               	addwf	??_cmdMemoryIsEmpty^0,w,c
 23767  007A28  6E22               	movwf	i2c_readDataBlock@reg^0,c
 23768  007A2A  0E02               	movlw	2
 23769  007A2C  2030               	addwfc	(??_cmdMemoryIsEmpty+1)^0,w,c
 23770  007A2E  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 23771  007A30  0E32               	movlw	low cmdMemoryIsEmpty@tempSerial
 23772  007A32  6E24               	movwf	i2c_readDataBlock@data^0,c
 23773  007A34  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
 23774  007A36  0E00               	movlw	0
 23775  007A38  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 23776  007A3A  0E04               	movlw	4
 23777  007A3C  6E26               	movwf	i2c_readDataBlock@len^0,c
 23778  007A3E  0E50               	movlw	80
 23779  007A40  EC1F  F041         	call	_i2c_readDataBlock
 23780                           
 23781                           ;controlMemory_MC50.c: 130:     }
 23782  007A44  D019               	goto	l20167
 23783  007A46                     l20165:
 23784                           
 23785                           ;controlMemory_MC50.c: 132:     {;controlMemory_MC50.c: 133:          i2c_readDataBlock(
      +                          0x50, (uint16_t)(0x0500 + (position * 4)),(char*)&tempSerial, 4);
 23786  007A46  502E               	movf	cmdMemoryIsEmpty@position^0,w,c
 23787  007A48  6E2F               	movwf	??_cmdMemoryIsEmpty^0,c
 23788  007A4A  6A30               	clrf	(??_cmdMemoryIsEmpty+1)^0,c
 23789  007A4C  90D8               	bcf	status,0,c
 23790  007A4E  362F               	rlcf	??_cmdMemoryIsEmpty^0,f,c
 23791  007A50  3630               	rlcf	(??_cmdMemoryIsEmpty+1)^0,f,c
 23792  007A52  90D8               	bcf	status,0,c
 23793  007A54  362F               	rlcf	??_cmdMemoryIsEmpty^0,f,c
 23794  007A56  3630               	rlcf	(??_cmdMemoryIsEmpty+1)^0,f,c
 23795  007A58  0E00               	movlw	0
 23796  007A5A  242F               	addwf	??_cmdMemoryIsEmpty^0,w,c
 23797  007A5C  6E22               	movwf	i2c_readDataBlock@reg^0,c
 23798  007A5E  0E05               	movlw	5
 23799  007A60  2030               	addwfc	(??_cmdMemoryIsEmpty+1)^0,w,c
 23800  007A62  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 23801  007A64  0E32               	movlw	low cmdMemoryIsEmpty@tempSerial
 23802  007A66  6E24               	movwf	i2c_readDataBlock@data^0,c
 23803  007A68  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
 23804  007A6A  0E00               	movlw	0
 23805  007A6C  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 23806  007A6E  0E04               	movlw	4
 23807  007A70  6E26               	movwf	i2c_readDataBlock@len^0,c
 23808  007A72  0E50               	movlw	80
 23809  007A74  EC1F  F041         	call	_i2c_readDataBlock
 23810  007A78                     l20167:
 23811                           
 23812                           ;controlMemory_MC50.c: 136:      if( tempSerial==0)
 23813  007A78  5032               	movf	cmdMemoryIsEmpty@tempSerial^0,w,c
 23814  007A7A  1033               	iorwf	(cmdMemoryIsEmpty@tempSerial+1)^0,w,c
 23815  007A7C  1034               	iorwf	(cmdMemoryIsEmpty@tempSerial+2)^0,w,c
 23816  007A7E  1035               	iorwf	(cmdMemoryIsEmpty@tempSerial+3)^0,w,c
 23817  007A80  A4D8               	btfss	status,2,c
 23818  007A82  D002               	goto	l20175
 23819                           
 23820                           ;controlMemory_MC50.c: 137:      {;controlMemory_MC50.c: 138:          return 1;
 23821  007A84  0E01               	movlw	1
 23822  007A86  0012               	return	
 23823  007A88                     l20175:
 23824                           
 23825                           ;controlMemory_MC50.c: 141:      {;controlMemory_MC50.c: 142:          return 0;
 23826  007A88  0E00               	movlw	0
 23827  007A8A  0012               	return		;funcret
 23828  007A8C                     __end_of_cmdMemoryIsEmpty:
 23829                           	callstack 0
 23830                           
 23831 ;; *************** function _RemoveSerial *****************
 23832 ;; Defined at:
 23833 ;;		line 95 in file "controlMemory_MC50.c"
 23834 ;; Parameters:    Size  Location     Type
 23835 ;;  cmdType         1    wreg     unsigned char 
 23836 ;;  position        1   57[COMRAM] unsigned char 
 23837 ;; Auto vars:     Size  Location     Type
 23838 ;;  cmdType         1    2[BANK0 ] unsigned char 
 23839 ;;  tempSerial      4    3[BANK0 ] unsigned long 
 23840 ;; Return value:  Size  Location     Type
 23841 ;;                  1    wreg      void 
 23842 ;; Registers used:
 23843 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23844 ;; Tracked objects:
 23845 ;;		On entry : 3E/1
 23846 ;;		On exit  : 0/0
 23847 ;;		Unchanged: 0/0
 23848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23849 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23850 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23851 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23852 ;;      Totals:         1       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23853 ;;Total ram usage:        8 bytes
 23854 ;; Hardware stack levels used: 1
 23855 ;; Hardware stack levels required when called: 13
 23856 ;; This function calls:
 23857 ;;		_i2c_writeNBytes
 23858 ;; This function is called by:
 23859 ;;		_controlSelectRemote
 23860 ;;		_eusartparser
 23861 ;; This function uses a non-reentrant model
 23862 ;;
 23863                           
 23864                           	psect	text84
 23865  007F5A                     __ptext84:
 23866                           	callstack 0
 23867  007F5A                     _RemoveSerial:
 23868                           	callstack 14
 23869                           
 23870                           ;incstack = 0
 23871                           ;RemoveSerial@cmdType stored from wreg
 23872  007F5A  0100               	movlb	0	; () banked
 23873  007F5C  6FDA               	movwf	RemoveSerial@cmdType& (0+255),b
 23874                           
 23875                           ;controlMemory_MC50.c: 95: void RemoveSerial(char cmdType, char position);controlMemory_
      +                          MC50.c: 96: {;controlMemory_MC50.c: 97:     unsigned long tempSerial=0;
 23876  007F5E  0E00               	movlw	0
 23877  007F60  0100               	movlb	0	; () banked
 23878  007F62  6FDB               	movwf	RemoveSerial@tempSerial& (0+255),b
 23879  007F64  0E00               	movlw	0
 23880  007F66  6FDC               	movwf	(RemoveSerial@tempSerial+1)& (0+255),b
 23881  007F68  0E00               	movlw	0
 23882  007F6A  6FDD               	movwf	(RemoveSerial@tempSerial+2)& (0+255),b
 23883  007F6C  0E00               	movlw	0
 23884  007F6E  6FDE               	movwf	(RemoveSerial@tempSerial+3)& (0+255),b
 23885                           
 23886                           ; BSR set to: 0
 23887                           ;controlMemory_MC50.c: 100:     if(cmdType==0)
 23888  007F70  51DA               	movf	RemoveSerial@cmdType& (0+255),w,b
 23889  007F72  A4D8               	btfss	status,2,c
 23890  007F74  D019               	goto	l20157
 23891                           
 23892                           ; BSR set to: 0
 23893                           ;controlMemory_MC50.c: 101:     {;controlMemory_MC50.c: 102:        i2c_writeNBytes(0x50
      +                          , (uint16_t)(0x0200 + (position * 4)), (char*)&tempSerial, 4);
 23894  007F76  503A               	movf	RemoveSerial@position^0,w,c
 23895  007F78  6FD8               	movwf	??_RemoveSerial& (0+255),b
 23896  007F7A  6BD9               	clrf	(??_RemoveSerial+1)& (0+255),b
 23897  007F7C  90D8               	bcf	status,0,c
 23898  007F7E  37D8               	rlcf	??_RemoveSerial& (0+255),f,b
 23899  007F80  37D9               	rlcf	(??_RemoveSerial+1)& (0+255),f,b
 23900  007F82  90D8               	bcf	status,0,c
 23901  007F84  37D8               	rlcf	??_RemoveSerial& (0+255),f,b
 23902  007F86  37D9               	rlcf	(??_RemoveSerial+1)& (0+255),f,b
 23903  007F88  0E00               	movlw	0
 23904  007F8A  25D8               	addwf	??_RemoveSerial& (0+255),w,b
 23905  007F8C  6E22               	movwf	i2c_writeNBytes@reg^0,c
 23906  007F8E  0E02               	movlw	2
 23907  007F90  21D9               	addwfc	(??_RemoveSerial+1)& (0+255),w,b
 23908  007F92  6E23               	movwf	(i2c_writeNBytes@reg+1)^0,c
 23909  007F94  0EDB               	movlw	low RemoveSerial@tempSerial
 23910  007F96  6E24               	movwf	i2c_writeNBytes@data^0,c
 23911  007F98  0E00               	movlw	0
 23912  007F9A  6E26               	movwf	(i2c_writeNBytes@len+1)^0,c
 23913  007F9C  0E04               	movlw	4
 23914  007F9E  6E25               	movwf	i2c_writeNBytes@len^0,c
 23915  007FA0  0E50               	movlw	80
 23916  007FA2  EC5A  F041         	call	_i2c_writeNBytes
 23917                           
 23918                           ;controlMemory_MC50.c: 103:     }
 23919  007FA6  0012               	return	
 23920  007FA8                     l20157:
 23921                           
 23922                           ; BSR set to: 0
 23923                           ;controlMemory_MC50.c: 105:     {;controlMemory_MC50.c: 106:        i2c_writeNBytes(0x50
      +                          , (uint16_t)(0x0500 + (position * 4)), (char*)&tempSerial, 4);
 23924  007FA8  503A               	movf	RemoveSerial@position^0,w,c
 23925  007FAA  6FD8               	movwf	??_RemoveSerial& (0+255),b
 23926  007FAC  6BD9               	clrf	(??_RemoveSerial+1)& (0+255),b
 23927  007FAE  90D8               	bcf	status,0,c
 23928  007FB0  37D8               	rlcf	??_RemoveSerial& (0+255),f,b
 23929  007FB2  37D9               	rlcf	(??_RemoveSerial+1)& (0+255),f,b
 23930  007FB4  90D8               	bcf	status,0,c
 23931  007FB6  37D8               	rlcf	??_RemoveSerial& (0+255),f,b
 23932  007FB8  37D9               	rlcf	(??_RemoveSerial+1)& (0+255),f,b
 23933  007FBA  0E00               	movlw	0
 23934  007FBC  25D8               	addwf	??_RemoveSerial& (0+255),w,b
 23935  007FBE  6E22               	movwf	i2c_writeNBytes@reg^0,c
 23936  007FC0  0E05               	movlw	5
 23937  007FC2  21D9               	addwfc	(??_RemoveSerial+1)& (0+255),w,b
 23938  007FC4  6E23               	movwf	(i2c_writeNBytes@reg+1)^0,c
 23939  007FC6  0EDB               	movlw	low RemoveSerial@tempSerial
 23940  007FC8  6E24               	movwf	i2c_writeNBytes@data^0,c
 23941  007FCA  0E00               	movlw	0
 23942  007FCC  6E26               	movwf	(i2c_writeNBytes@len+1)^0,c
 23943  007FCE  0E04               	movlw	4
 23944  007FD0  6E25               	movwf	i2c_writeNBytes@len^0,c
 23945  007FD2  0E50               	movlw	80
 23946  007FD4  EC5A  F041         	call	_i2c_writeNBytes
 23947  007FD8  0012               	return		;funcret
 23948  007FDA                     __end_of_RemoveSerial:
 23949                           	callstack 0
 23950                           
 23951 ;; *************** function _ReadSerial *****************
 23952 ;; Defined at:
 23953 ;;		line 110 in file "controlMemory_MC50.c"
 23954 ;; Parameters:    Size  Location     Type
 23955 ;;  cmdType         1    wreg     unsigned char 
 23956 ;;  tempSerial      1   45[COMRAM] PTR unsigned long 
 23957 ;;		 -> eusartparser@serial(4), 
 23958 ;;  position        1   46[COMRAM] unsigned char 
 23959 ;; Auto vars:     Size  Location     Type
 23960 ;;  cmdType         1   49[COMRAM] unsigned char 
 23961 ;; Return value:  Size  Location     Type
 23962 ;;                  1    wreg      void 
 23963 ;; Registers used:
 23964 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23965 ;; Tracked objects:
 23966 ;;		On entry : 3F/0
 23967 ;;		On exit  : 0/0
 23968 ;;		Unchanged: 0/0
 23969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23970 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23971 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23972 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23973 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23974 ;;Total ram usage:        5 bytes
 23975 ;; Hardware stack levels used: 1
 23976 ;; Hardware stack levels required when called: 13
 23977 ;; This function calls:
 23978 ;;		_i2c_readDataBlock
 23979 ;; This function is called by:
 23980 ;;		_eusartparser
 23981 ;; This function uses a non-reentrant model
 23982 ;;
 23983                           
 23984                           	psect	text85
 23985  008408                     __ptext85:
 23986                           	callstack 0
 23987  008408                     _ReadSerial:
 23988                           	callstack 16
 23989                           
 23990                           ;incstack = 0
 23991                           ;ReadSerial@cmdType stored from wreg
 23992  008408  6E32               	movwf	ReadSerial@cmdType^0,c
 23993                           
 23994                           ;controlMemory_MC50.c: 110: void ReadSerial(char cmdType, unsigned long* tempSerial, cha
      +                          r position);controlMemory_MC50.c: 111: {;controlMemory_MC50.c: 112:     if(cmdType==0)
 23995  00840A  5032               	movf	ReadSerial@cmdType^0,w,c
 23996  00840C  A4D8               	btfss	status,2,c
 23997  00840E  D01A               	goto	l21663
 23998                           
 23999                           ;controlMemory_MC50.c: 113:     {;controlMemory_MC50.c: 114:        i2c_readDataBlock(0x
      +                          50, (uint16_t)(0x0200 + (position * 4)), (char*)tempSerial, 4);
 24000  008410  502F               	movf	ReadSerial@position^0,w,c
 24001  008412  6E30               	movwf	??_ReadSerial^0,c
 24002  008414  6A31               	clrf	(??_ReadSerial+1)^0,c
 24003  008416  90D8               	bcf	status,0,c
 24004  008418  3630               	rlcf	??_ReadSerial^0,f,c
 24005  00841A  3631               	rlcf	(??_ReadSerial+1)^0,f,c
 24006  00841C  90D8               	bcf	status,0,c
 24007  00841E  3630               	rlcf	??_ReadSerial^0,f,c
 24008  008420  3631               	rlcf	(??_ReadSerial+1)^0,f,c
 24009  008422  0E00               	movlw	0
 24010  008424  2430               	addwf	??_ReadSerial^0,w,c
 24011  008426  6E22               	movwf	i2c_readDataBlock@reg^0,c
 24012  008428  0E02               	movlw	2
 24013  00842A  2031               	addwfc	(??_ReadSerial+1)^0,w,c
 24014  00842C  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 24015  00842E  C02E  F024         	movff	ReadSerial@tempSerial,i2c_readDataBlock@data
 24016  008432  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
 24017  008434  0E00               	movlw	0
 24018  008436  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 24019  008438  0E04               	movlw	4
 24020  00843A  6E26               	movwf	i2c_readDataBlock@len^0,c
 24021  00843C  0E50               	movlw	80
 24022  00843E  EC1F  F041         	call	_i2c_readDataBlock
 24023                           
 24024                           ;controlMemory_MC50.c: 115:     }
 24025  008442  0012               	return	
 24026  008444                     l21663:
 24027                           
 24028                           ;controlMemory_MC50.c: 117:     {;controlMemory_MC50.c: 118:        i2c_readDataBlock(0x
      +                          50, (uint16_t)(0x0500 + (position * 4)), (char*)tempSerial, 4);
 24029  008444  502F               	movf	ReadSerial@position^0,w,c
 24030  008446  6E30               	movwf	??_ReadSerial^0,c
 24031  008448  6A31               	clrf	(??_ReadSerial+1)^0,c
 24032  00844A  90D8               	bcf	status,0,c
 24033  00844C  3630               	rlcf	??_ReadSerial^0,f,c
 24034  00844E  3631               	rlcf	(??_ReadSerial+1)^0,f,c
 24035  008450  90D8               	bcf	status,0,c
 24036  008452  3630               	rlcf	??_ReadSerial^0,f,c
 24037  008454  3631               	rlcf	(??_ReadSerial+1)^0,f,c
 24038  008456  0E00               	movlw	0
 24039  008458  2430               	addwf	??_ReadSerial^0,w,c
 24040  00845A  6E22               	movwf	i2c_readDataBlock@reg^0,c
 24041  00845C  0E05               	movlw	5
 24042  00845E  2031               	addwfc	(??_ReadSerial+1)^0,w,c
 24043  008460  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 24044  008462  C02E  F024         	movff	ReadSerial@tempSerial,i2c_readDataBlock@data
 24045  008466  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
 24046  008468  0E00               	movlw	0
 24047  00846A  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 24048  00846C  0E04               	movlw	4
 24049  00846E  6E26               	movwf	i2c_readDataBlock@len^0,c
 24050  008470  0E50               	movlw	80
 24051  008472  EC1F  F041         	call	_i2c_readDataBlock
 24052  008476  0012               	return		;funcret
 24053  008478                     __end_of_ReadSerial:
 24054                           	callstack 0
 24055                           
 24056 ;; *************** function _i2c_readDataBlock *****************
 24057 ;; Defined at:
 24058 ;;		line 147 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 24059 ;; Parameters:    Size  Location     Type
 24060 ;;  address         1    wreg     unsigned char 
 24061 ;;  reg             2   33[COMRAM] unsigned short 
 24062 ;;  data            2   35[COMRAM] PTR void 
 24063 ;;		 -> eusartparser@serial(4), var_sys_NVM.homemPresente(1), cmdMemoryIsEmpty@tempSerial(4), var_sys_NVM.positionRemote
      +sFull(1), 
 24064 ;;		 -> memoryTEMP(16), var_sys_NVM.learningCurrentNormalClose(2), var_sys_NVM(64), 
 24065 ;;  len             2   37[COMRAM] unsigned int 
 24066 ;; Auto vars:     Size  Location     Type
 24067 ;;  address         1   40[COMRAM] unsigned char 
 24068 ;;  d               4   41[COMRAM] struct .
 24069 ;; Return value:  Size  Location     Type
 24070 ;;                  1    wreg      void 
 24071 ;; Registers used:
 24072 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24073 ;; Tracked objects:
 24074 ;;		On entry : 0/2
 24075 ;;		On exit  : 0/0
 24076 ;;		Unchanged: 0/0
 24077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24078 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24079 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24080 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24081 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24082 ;;Total ram usage:       12 bytes
 24083 ;; Hardware stack levels used: 1
 24084 ;; Hardware stack levels required when called: 12
 24085 ;; This function calls:
 24086 ;;		_I2C1_Close
 24087 ;;		_I2C1_MasterWrite
 24088 ;;		_I2C1_Open
 24089 ;;		_I2C1_SetAddressNackCallback
 24090 ;;		_I2C1_SetBuffer
 24091 ;;		_I2C1_SetDataCompleteCallback
 24092 ;; This function is called by:
 24093 ;;		_validateRemoteSerialNumber
 24094 ;;		_ReadSerial
 24095 ;;		_cmdMemoryIsEmpty
 24096 ;;		_loadNVM_VarSystem
 24097 ;; This function uses a non-reentrant model
 24098 ;;
 24099                           
 24100                           	psect	text86
 24101  00823E                     __ptext86:
 24102                           	callstack 0
 24103  00823E                     _i2c_readDataBlock:
 24104                           	callstack 14
 24105                           
 24106                           ;incstack = 0
 24107                           ;i2c_readDataBlock@address stored from wreg
 24108  00823E  6E29               	movwf	i2c_readDataBlock@address^0,c
 24109                           
 24110                           ;mcc_generated_files/drivers/i2c_simple_master.c: 147: void i2c_readDataBlock(i2c1_addre
      +                          ss_t address, uint16_t reg, void *data, size_t len);mcc_generated_files/drivers/i2c_simp
      +                          le_master.c: 148: {;mcc_generated_files/drivers/i2c_simple_master.c: 149:     buf_t d;;m
      +                          cc_generated_files/drivers/i2c_simple_master.c: 150:     d.data = data;
 24111  008240  C024  F02C         	movff	i2c_readDataBlock@data,i2c_readDataBlock@d+2
 24112  008244  C025  F02D         	movff	i2c_readDataBlock@data+1,i2c_readDataBlock@d+3
 24113                           
 24114                           ;mcc_generated_files/drivers/i2c_simple_master.c: 151:     d.len = len;
 24115  008248  C026  F02A         	movff	i2c_readDataBlock@len,i2c_readDataBlock@d
 24116  00824C  C027  F02B         	movff	i2c_readDataBlock@len+1,i2c_readDataBlock@d+1
 24117  008250                     l19969:
 24118  008250  5023               	movf	(i2c_readDataBlock@reg+1)^0,w,c
 24119  008252  1029               	iorwf	i2c_readDataBlock@address^0,w,c
 24120  008254  EC2A  F03F         	call	_I2C1_Open
 24121  008258  0900               	iorlw	0
 24122  00825A  B4D8               	btfsc	status,2,c
 24123  00825C  D7F9               	goto	l19969
 24124                           
 24125                           ;mcc_generated_files/drivers/i2c_simple_master.c: 154:     I2C1_SetDataCompleteCallback(
      +                          rdBlkRegCompleteHandler,&d);
 24126  00825E  0E68               	movlw	low _rdBlkRegCompleteHandler
 24127  008260  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 24128  008262  0E8E               	movlw	high _rdBlkRegCompleteHandler
 24129  008264  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 24130  008266  0E2A               	movlw	low i2c_readDataBlock@d
 24131  008268  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 24132  00826A  6A18               	clrf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 24133  00826C  EC0C  F04B         	call	_I2C1_SetDataCompleteCallback	;wreg free
 24134                           
 24135                           ;mcc_generated_files/drivers/i2c_simple_master.c: 155:     I2C1_SetBuffer(&reg,1);
 24136  008270  0E22               	movlw	low i2c_readDataBlock@reg
 24137  008272  6E10               	movwf	I2C1_SetBuffer@buffer^0,c
 24138  008274  6A11               	clrf	(I2C1_SetBuffer@buffer+1)^0,c
 24139  008276  0E00               	movlw	0
 24140  008278  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 24141  00827A  0E01               	movlw	1
 24142  00827C  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 24143  00827E  ECC3  F04A         	call	_I2C1_SetBuffer	;wreg free
 24144                           
 24145                           ; BSR set to: 2
 24146                           ;mcc_generated_files/drivers/i2c_simple_master.c: 156:     I2C1_SetAddressNackCallback((
      +                          (void*)0),((void*)0));
 24147  008282  0E00               	movlw	0
 24148  008284  6E15               	movwf	I2C1_SetAddressNackCallback@cb^0,c
 24149  008286  0E00               	movlw	0
 24150  008288  6E16               	movwf	(I2C1_SetAddressNackCallback@cb+1)^0,c
 24151  00828A  0E00               	movlw	0
 24152  00828C  6E17               	movwf	I2C1_SetAddressNackCallback@ptr^0,c
 24153  00828E  0E00               	movlw	0
 24154  008290  6E18               	movwf	(I2C1_SetAddressNackCallback@ptr+1)^0,c
 24155  008292  ECF4  F04A         	call	_I2C1_SetAddressNackCallback	;wreg free
 24156                           
 24157                           ;mcc_generated_files/drivers/i2c_simple_master.c: 157:     I2C1_MasterWrite();
 24158  008296  ECC2  F04B         	call	_I2C1_MasterWrite	;wreg free
 24159  00829A                     l19979:
 24160  00829A  EC35  F04A         	call	_I2C1_Close	;wreg free
 24161  00829E  06E8               	decf	wreg,f,c
 24162  0082A0  B4D8               	btfsc	status,2,c
 24163  0082A2  D7FB               	goto	l19979
 24164                           
 24165                           ;mcc_generated_files/drivers/i2c_simple_master.c: 159:     _delay((unsigned long)((10)*(
      +                          64000000/4000.0)));
 24166  0082A4  0ED0               	movlw	208
 24167  0082A6  6E28               	movwf	??_i2c_readDataBlock^0,c
 24168  0082A8  0ECA               	movlw	202
 24169  0082AA                     u29817:
 24170  0082AA  2EE8               	decfsz	wreg,f,c
 24171  0082AC  D7FE               	bra	u29817
 24172  0082AE  2E28               	decfsz	??_i2c_readDataBlock^0,f,c
 24173  0082B0  D7FC               	bra	u29817
 24174  0082B2  0012               	return		;funcret
 24175  0082B4                     __end_of_i2c_readDataBlock:
 24176                           	callstack 0
 24177                           
 24178 ;; *************** function _WWDT_TimerClear *****************
 24179 ;; Defined at:
 24180 ;;		line 128 in file "mcc_generated_files/mcc.c"
 24181 ;; Parameters:    Size  Location     Type
 24182 ;;		None
 24183 ;; Auto vars:     Size  Location     Type
 24184 ;;  state           1   15[COMRAM] _Bool 
 24185 ;;  readBack        1    0        unsigned char 
 24186 ;; Return value:  Size  Location     Type
 24187 ;;                  1    wreg      void 
 24188 ;; Registers used:
 24189 ;;		wreg, status,2
 24190 ;; Tracked objects:
 24191 ;;		On entry : 0/0
 24192 ;;		On exit  : 0/0
 24193 ;;		Unchanged: 0/0
 24194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24196 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24198 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24199 ;;Total ram usage:        1 bytes
 24200 ;; Hardware stack levels used: 1
 24201 ;; Hardware stack levels required when called: 4
 24202 ;; This function calls:
 24203 ;;		Nothing
 24204 ;; This function is called by:
 24205 ;;		_main
 24206 ;; This function uses a non-reentrant model
 24207 ;;
 24208                           
 24209                           	psect	text87
 24210  0094CA                     __ptext87:
 24211                           	callstack 0
 24212  0094CA                     _WWDT_TimerClear:
 24213                           	callstack 26
 24214                           
 24215                           ;mcc_generated_files/mcc.c: 134:     _Bool state = GIE;
 24216                           
 24217                           ;incstack = 0
 24218  0094CA  0E00               	movlw	0
 24219  0094CC  BEF2               	btfsc	4082,7,c	;volatile
 24220  0094CE  0E01               	movlw	1
 24221  0094D0  6E10               	movwf	WWDT_TimerClear@state^0,c
 24222                           
 24223                           ;mcc_generated_files/mcc.c: 135:     GIE = 0;
 24224  0094D2  9EF2               	bcf	4082,7,c	;volatile
 24225  0094D4  010E               	movlb	14	; () banked
 24226  0094D6  51D2               	movf	210,w,b	;volatile
 24227  0094D8  0004               	clrwdt		;# 
 24228                           
 24229                           ;mcc_generated_files/mcc.c: 138:     GIE = state;
 24230  0094DA  B010               	btfsc	WWDT_TimerClear@state^0,0,c
 24231  0094DC  D002               	bra	u18945
 24232  0094DE  9EF2               	bcf	4082,7,c	;volatile
 24233  0094E0  D001               	bra	u18946
 24234  0094E2                     u18945:
 24235  0094E2  8EF2               	bsf	4082,7,c	;volatile
 24236  0094E4                     u18946:
 24237  0094E4  0012               	return		;funcret
 24238  0094E6                     __end_of_WWDT_TimerClear:
 24239                           	callstack 0
 24240                           
 24241 ;; *************** function _WWDT_SoftEnable *****************
 24242 ;; Defined at:
 24243 ;;		line 104 in file "mcc_generated_files/mcc.c"
 24244 ;; Parameters:    Size  Location     Type
 24245 ;;		None
 24246 ;; Auto vars:     Size  Location     Type
 24247 ;;		None
 24248 ;; Return value:  Size  Location     Type
 24249 ;;                  1    wreg      void 
 24250 ;; Registers used:
 24251 ;;		None
 24252 ;; Tracked objects:
 24253 ;;		On entry : 3F/E
 24254 ;;		On exit  : 3F/E
 24255 ;;		Unchanged: 0/0
 24256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24260 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24261 ;;Total ram usage:        0 bytes
 24262 ;; Hardware stack levels used: 1
 24263 ;; Hardware stack levels required when called: 4
 24264 ;; This function calls:
 24265 ;;		Nothing
 24266 ;; This function is called by:
 24267 ;;		_main
 24268 ;; This function uses a non-reentrant model
 24269 ;;
 24270                           
 24271                           	psect	text88
 24272  00980A                     __ptext88:
 24273                           	callstack 0
 24274  00980A                     _WWDT_SoftEnable:
 24275                           	callstack 26
 24276                           
 24277                           ; BSR set to: 14
 24278                           ;mcc_generated_files/mcc.c: 107:     WDTCON0bits.SEN=1;
 24279                           
 24280                           ;incstack = 0
 24281  00980A  81D2               	bsf	210,0,b	;volatile
 24282                           
 24283                           ; BSR set to: 14
 24284  00980C  0012               	return		;funcret
 24285  00980E                     __end_of_WWDT_SoftEnable:
 24286                           	callstack 0
 24287                           
 24288 ;; *************** function _ShowVersion *****************
 24289 ;; Defined at:
 24290 ;;		line 254 in file "main_MC50.c"
 24291 ;; Parameters:    Size  Location     Type
 24292 ;;		None
 24293 ;; Auto vars:     Size  Location     Type
 24294 ;;		None
 24295 ;; Return value:  Size  Location     Type
 24296 ;;                  1    wreg      void 
 24297 ;; Registers used:
 24298 ;;		wreg, status,2, status,0, cstack
 24299 ;; Tracked objects:
 24300 ;;		On entry : 3F/1
 24301 ;;		On exit  : 3F/1
 24302 ;;		Unchanged: 0/0
 24303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24305 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24307 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24308 ;;Total ram usage:        0 bytes
 24309 ;; Hardware stack levels used: 1
 24310 ;; Hardware stack levels required when called: 5
 24311 ;; This function calls:
 24312 ;;		_SetSegmentValue
 24313 ;; This function is called by:
 24314 ;;		_main
 24315 ;; This function uses a non-reentrant model
 24316 ;;
 24317                           
 24318                           	psect	text89
 24319  008628                     __ptext89:
 24320                           	callstack 0
 24321  008628                     _ShowVersion:
 24322                           	callstack 25
 24323                           
 24324                           ; BSR set to: 1
 24325                           ;main_MC50.c: 256:     if(ts_system.TimeShowVersion<=0)
 24326                           
 24327                           ; BSR set to: 14
 24328                           ;incstack = 0
 24329  008628  BFD8               	btfsc	(_ts_system+61)& (0+255),7,b	;volatile
 24330  00862A  D005               	goto	u20320
 24331  00862C  51D8               	movf	(_ts_system+61)& (0+255),w,b	;volatile
 24332  00862E  E12E               	bnz	l2044
 24333  008630  05D7               	decf	(_ts_system+60)& (0+255),w,b	;volatile
 24334  008632  B0D8               	btfsc	status,0,c
 24335  008634  0012               	return	
 24336  008636                     u20320:
 24337                           
 24338                           ; BSR set to: 1
 24339                           ;main_MC50.c: 257:     {;main_MC50.c: 259:             if(var_sys.StateVersion==0)
 24340  008636  5149               	movf	(_var_sys+73)& (0+255),w,b	;volatile
 24341  008638  A4D8               	btfss	status,2,c
 24342  00863A  D006               	goto	l17373
 24343                           
 24344                           ; BSR set to: 1
 24345                           ;main_MC50.c: 260:             {;main_MC50.c: 261:                 SetSegmentValue((1/10
      +                          )%10,(1/1)%10);
 24346  00863C  0E01               	movlw	1
 24347  00863E  6E1C               	movwf	SetSegmentValue@d2^0,c
 24348  008640  0E00               	movlw	0
 24349  008642  ECB6  F04A         	call	_SetSegmentValue
 24350                           
 24351                           ;main_MC50.c: 262:             }
 24352  008646  D01C               	goto	l2039
 24353  008648                     l17373:
 24354                           
 24355                           ; BSR set to: 1
 24356  008648  0549               	decf	(_var_sys+73)& (0+255),w,b	;volatile
 24357  00864A  A4D8               	btfss	status,2,c
 24358  00864C  D006               	goto	l17377
 24359                           
 24360                           ; BSR set to: 1
 24361                           ;main_MC50.c: 264:             {;main_MC50.c: 265:                 SetSegmentValue(dr, (
      +                          180/100)%10);
 24362  00864E  0E01               	movlw	1
 24363  008650  6E1C               	movwf	SetSegmentValue@d2^0,c
 24364  008652  0E14               	movlw	20
 24365  008654  ECB6  F04A         	call	_SetSegmentValue
 24366                           
 24367                           ;main_MC50.c: 266:             }
 24368  008658  D013               	goto	l2039
 24369  00865A                     l17377:
 24370                           
 24371                           ; BSR set to: 1
 24372  00865A  0E02               	movlw	2
 24373  00865C  1949               	xorwf	(_var_sys+73)& (0+255),w,b	;volatile
 24374  00865E  A4D8               	btfss	status,2,c
 24375  008660  D006               	goto	l17381
 24376                           
 24377                           ; BSR set to: 1
 24378                           ;main_MC50.c: 268:             {;main_MC50.c: 269:                 SetSegmentValue((180/
      +                          10)%10,(180/1)%10);
 24379  008662  0E00               	movlw	0
 24380  008664  6E1C               	movwf	SetSegmentValue@d2^0,c
 24381  008666  0E08               	movlw	8
 24382  008668  ECB6  F04A         	call	_SetSegmentValue
 24383                           
 24384                           ;main_MC50.c: 270:             }
 24385  00866C  D009               	goto	l2039
 24386  00866E                     l17381:
 24387                           
 24388                           ; BSR set to: 1
 24389  00866E  0E03               	movlw	3
 24390  008670  1949               	xorwf	(_var_sys+73)& (0+255),w,b	;volatile
 24391  008672  A4D8               	btfss	status,2,c
 24392  008674  D005               	goto	l2039
 24393                           
 24394                           ; BSR set to: 1
 24395                           ;main_MC50.c: 272:             {;main_MC50.c: 273:                SetSegmentValue(dr, d2
      +                          );
 24396  008676  0E02               	movlw	2
 24397  008678  6E1C               	movwf	SetSegmentValue@d2^0,c
 24398  00867A  0E14               	movlw	20
 24399  00867C  ECB6  F04A         	call	_SetSegmentValue
 24400  008680                     l2039:
 24401                           
 24402                           ;main_MC50.c: 282:         var_sys.StateVersion++;
 24403                           
 24404                           ; BSR set to: 1
 24405  008680  0101               	movlb	1	; () banked
 24406  008682  2B49               	incf	(_var_sys+73)& (0+255),f,b	;volatile
 24407                           
 24408                           ; BSR set to: 1
 24409                           ;main_MC50.c: 283:         ts_system.TimeShowVersion=(1000/50);
 24410  008684  0E00               	movlw	0
 24411  008686  6FD8               	movwf	(_ts_system+61)& (0+255),b	;volatile
 24412  008688  0E14               	movlw	20
 24413  00868A  6FD7               	movwf	(_ts_system+60)& (0+255),b	;volatile
 24414  00868C                     l2044:
 24415                           
 24416                           ; BSR set to: 1
 24417  00868C  0012               	return		;funcret
 24418  00868E                     __end_of_ShowVersion:
 24419                           	callstack 0
 24420                           
 24421 ;; *************** function _SetSegmentValue *****************
 24422 ;; Defined at:
 24423 ;;		line 112 in file "outputs_MC50.c"
 24424 ;; Parameters:    Size  Location     Type
 24425 ;;  d1              1    wreg     unsigned char 
 24426 ;;  d2              1   27[COMRAM] unsigned char 
 24427 ;; Auto vars:     Size  Location     Type
 24428 ;;  d1              1   28[COMRAM] unsigned char 
 24429 ;; Return value:  Size  Location     Type
 24430 ;;                  1    wreg      void 
 24431 ;; Registers used:
 24432 ;;		wreg, status,2
 24433 ;; Tracked objects:
 24434 ;;		On entry : 0/0
 24435 ;;		On exit  : 3F/0
 24436 ;;		Unchanged: 0/0
 24437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24438 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24439 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24441 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24442 ;;Total ram usage:        2 bytes
 24443 ;; Hardware stack levels used: 1
 24444 ;; Hardware stack levels required when called: 4
 24445 ;; This function calls:
 24446 ;;		Nothing
 24447 ;; This function is called by:
 24448 ;;		_main
 24449 ;;		_ShowVersion
 24450 ;;		_controlSelectRemote
 24451 ;; This function uses a non-reentrant model
 24452 ;;
 24453                           
 24454                           	psect	text90
 24455  00956C                     __ptext90:
 24456                           	callstack 0
 24457  00956C                     _SetSegmentValue:
 24458                           	callstack 23
 24459                           
 24460                           ; BSR set to: 1
 24461                           ;incstack = 0
 24462                           ;SetSegmentValue@d1 stored from wreg
 24463  00956C  6E1D               	movwf	SetSegmentValue@d1^0,c
 24464                           
 24465                           ;outputs_MC50.c: 112: void SetSegmentValue(char d1, char d2);outputs_MC50.c: 113: {;outp
      +                          uts_MC50.c: 117:         dispStruct.display_grp.value_display1=d1;
 24466  00956E  C01D  F072         	movff	SetSegmentValue@d1,_dispStruct	;volatile
 24467                           
 24468                           ;outputs_MC50.c: 118:         dispStruct.display_grp.value_display2=d2;
 24469  009572  C01C  F073         	movff	SetSegmentValue@d2,_dispStruct+1	;volatile
 24470                           
 24471                           ;outputs_MC50.c: 119:         dispStruct.intermitentFreq=0;
 24472  009576  0E00               	movlw	0
 24473  009578  0100               	movlb	0	; () banked
 24474  00957A  6F76               	movwf	(_dispStruct+4)& (0+255),b	;volatile
 24475  00957C  0E00               	movlw	0
 24476  00957E  6F75               	movwf	(_dispStruct+3)& (0+255),b	;volatile
 24477                           
 24478                           ; BSR set to: 0
 24479                           ;outputs_MC50.c: 120:         dispStruct.upFase=0;
 24480  009580  0E00               	movlw	0
 24481  009582  6F77               	movwf	(_dispStruct+5)& (0+255),b	;volatile
 24482                           
 24483                           ; BSR set to: 0
 24484  009584  0012               	return		;funcret
 24485  009586                     __end_of_SetSegmentValue:
 24486                           	callstack 0
 24487                           
 24488 ;; *************** function _SYSTEM_Initialize *****************
 24489 ;; Defined at:
 24490 ;;		line 50 in file "mcc_generated_files/mcc.c"
 24491 ;; Parameters:    Size  Location     Type
 24492 ;;		None
 24493 ;; Auto vars:     Size  Location     Type
 24494 ;;		None
 24495 ;; Return value:  Size  Location     Type
 24496 ;;                  1    wreg      void 
 24497 ;; Registers used:
 24498 ;;		wreg, status,2, status,0, cstack
 24499 ;; Tracked objects:
 24500 ;;		On entry : 3F/0
 24501 ;;		On exit  : 3F/E
 24502 ;;		Unchanged: 0/0
 24503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24507 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24508 ;;Total ram usage:        0 bytes
 24509 ;; Hardware stack levels used: 1
 24510 ;; Hardware stack levels required when called: 6
 24511 ;; This function calls:
 24512 ;;		_ADCC_Initialize
 24513 ;;		_EUSART1_Initialize
 24514 ;;		_I2C1_Initialize
 24515 ;;		_INTERRUPT_Initialize
 24516 ;;		_OSCILLATOR_Initialize
 24517 ;;		_PIN_MANAGER_Initialize
 24518 ;;		_PMD_Initialize
 24519 ;;		_TMR0_Initialize
 24520 ;;		_TMR1_Initialize
 24521 ;;		_TMR2_Initialize
 24522 ;;		_WWDT_Initialize
 24523 ;; This function is called by:
 24524 ;;		_main
 24525 ;; This function uses a non-reentrant model
 24526 ;;
 24527                           
 24528                           	psect	text91
 24529  00905E                     __ptext91:
 24530                           	callstack 0
 24531  00905E                     _SYSTEM_Initialize:
 24532                           	callstack 24
 24533                           
 24534                           ; BSR set to: 0
 24535                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 24536                           
 24537                           ; BSR set to: 0
 24538                           ;incstack = 0
 24539  00905E  EC07  F04C         	call	_INTERRUPT_Initialize	;wreg free
 24540                           
 24541                           ; BSR set to: 0
 24542                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 24543  009062  EC73  F04A         	call	_PMD_Initialize	;wreg free
 24544                           
 24545                           ; BSR set to: 14
 24546                           ;mcc_generated_files/mcc.c: 54:     I2C1_Initialize();
 24547  009066  EC42  F04B         	call	_I2C1_Initialize	;wreg free
 24548                           
 24549                           ; BSR set to: 14
 24550                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
 24551  00906A  ECB1  F03C         	call	_PIN_MANAGER_Initialize	;wreg free
 24552                           
 24553                           ; BSR set to: 14
 24554                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
 24555  00906E  EC18  F04B         	call	_OSCILLATOR_Initialize	;wreg free
 24556                           
 24557                           ; BSR set to: 14
 24558                           ;mcc_generated_files/mcc.c: 57:     WWDT_Initialize();
 24559  009072  EC86  F04B         	call	_WWDT_Initialize	;wreg free
 24560                           
 24561                           ; BSR set to: 14
 24562                           ;mcc_generated_files/mcc.c: 58:     ADCC_Initialize();
 24563  009076  EC86  F045         	call	_ADCC_Initialize	;wreg free
 24564                           
 24565                           ; BSR set to: 15
 24566                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
 24567  00907A  EC88  F048         	call	_TMR2_Initialize	;wreg free
 24568                           
 24569                           ; BSR set to: 14
 24570                           ;mcc_generated_files/mcc.c: 60:     TMR1_Initialize();
 24571  00907E  ECD3  F046         	call	_TMR1_Initialize	;wreg free
 24572                           
 24573                           ; BSR set to: 14
 24574                           ;mcc_generated_files/mcc.c: 61:     TMR0_Initialize();
 24575  009082  EC24  F04A         	call	_TMR0_Initialize	;wreg free
 24576                           
 24577                           ; BSR set to: 14
 24578                           ;mcc_generated_files/mcc.c: 62:     EUSART1_Initialize();
 24579  009086  ECED  F03F         	call	_EUSART1_Initialize	;wreg free
 24580                           
 24581                           ; BSR set to: 14
 24582  00908A  0012               	return		;funcret
 24583  00908C                     __end_of_SYSTEM_Initialize:
 24584                           	callstack 0
 24585                           
 24586 ;; *************** function _WWDT_Initialize *****************
 24587 ;; Defined at:
 24588 ;;		line 96 in file "mcc_generated_files/mcc.c"
 24589 ;; Parameters:    Size  Location     Type
 24590 ;;		None
 24591 ;; Auto vars:     Size  Location     Type
 24592 ;;		None
 24593 ;; Return value:  Size  Location     Type
 24594 ;;                  1    wreg      void 
 24595 ;; Registers used:
 24596 ;;		wreg, status,2
 24597 ;; Tracked objects:
 24598 ;;		On entry : 3F/E
 24599 ;;		On exit  : 3F/E
 24600 ;;		Unchanged: 0/0
 24601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24605 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24606 ;;Total ram usage:        0 bytes
 24607 ;; Hardware stack levels used: 1
 24608 ;; Hardware stack levels required when called: 4
 24609 ;; This function calls:
 24610 ;;		Nothing
 24611 ;; This function is called by:
 24612 ;;		_SYSTEM_Initialize
 24613 ;; This function uses a non-reentrant model
 24614 ;;
 24615                           
 24616                           	psect	text92
 24617  00970C                     __ptext92:
 24618                           	callstack 0
 24619  00970C                     _WWDT_Initialize:
 24620                           	callstack 25
 24621                           
 24622                           ; BSR set to: 14
 24623                           ;mcc_generated_files/mcc.c: 99:     WDTCON0 = 22;
 24624                           
 24625                           ; BSR set to: 14
 24626                           ;incstack = 0
 24627  00970C  0E16               	movlw	22
 24628  00970E  6FD2               	movwf	210,b	;volatile
 24629                           
 24630                           ;mcc_generated_files/mcc.c: 100:     WDTCON1 = 7|32;
 24631  009710  0E27               	movlw	39
 24632  009712  6FD3               	movwf	211,b	;volatile
 24633                           
 24634                           ; BSR set to: 14
 24635  009714  0012               	return		;funcret
 24636  009716                     __end_of_WWDT_Initialize:
 24637                           	callstack 0
 24638                           
 24639 ;; *************** function _TMR2_Initialize *****************
 24640 ;; Defined at:
 24641 ;;		line 79 in file "mcc_generated_files/tmr2.c"
 24642 ;; Parameters:    Size  Location     Type
 24643 ;;		None
 24644 ;; Auto vars:     Size  Location     Type
 24645 ;;		None
 24646 ;; Return value:  Size  Location     Type
 24647 ;;                  1    wreg      void 
 24648 ;; Registers used:
 24649 ;;		wreg, status,2, status,0, cstack
 24650 ;; Tracked objects:
 24651 ;;		On entry : 3F/F
 24652 ;;		On exit  : 3F/E
 24653 ;;		Unchanged: 0/0
 24654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24658 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24659 ;;Total ram usage:        0 bytes
 24660 ;; Hardware stack levels used: 1
 24661 ;; Hardware stack levels required when called: 5
 24662 ;; This function calls:
 24663 ;;		_TMR2_SetInterruptHandler
 24664 ;; This function is called by:
 24665 ;;		_SYSTEM_Initialize
 24666 ;; This function uses a non-reentrant model
 24667 ;;
 24668                           
 24669                           	psect	text93
 24670  009110                     __ptext93:
 24671                           	callstack 0
 24672  009110                     _TMR2_Initialize:
 24673                           	callstack 24
 24674                           
 24675                           ; BSR set to: 15
 24676                           ;mcc_generated_files/tmr2.c: 84:     T2CLKCON = 0x02;
 24677                           
 24678                           ; BSR set to: 14
 24679                           ;incstack = 0
 24680  009110  0E02               	movlw	2
 24681  009112  6EBF               	movwf	191,c	;volatile
 24682                           
 24683                           ;mcc_generated_files/tmr2.c: 87:     T2HLT = 0x40;
 24684  009114  0E40               	movlw	64
 24685  009116  6EBE               	movwf	190,c	;volatile
 24686                           
 24687                           ;mcc_generated_files/tmr2.c: 90:     T2RST = 0x00;
 24688  009118  0E00               	movlw	0
 24689  00911A  6EC0               	movwf	192,c	;volatile
 24690                           
 24691                           ;mcc_generated_files/tmr2.c: 93:     T2PR = 0xC7;
 24692  00911C  0EC7               	movlw	199
 24693  00911E  6EBC               	movwf	188,c	;volatile
 24694                           
 24695                           ;mcc_generated_files/tmr2.c: 96:     T2TMR = 0x00;
 24696  009120  0E00               	movlw	0
 24697  009122  6EBB               	movwf	187,c	;volatile
 24698                           
 24699                           ; BSR set to: 15
 24700                           ;mcc_generated_files/tmr2.c: 99:     PIR4bits.TMR2IF = 0;
 24701  009124  010E               	movlb	14	; () banked
 24702  009126  93CE               	bcf	206,1,b	;volatile
 24703                           
 24704                           ; BSR set to: 14
 24705                           ;mcc_generated_files/tmr2.c: 102:     PIE4bits.TMR2IE = 1;
 24706  009128  83C6               	bsf	198,1,b	;volatile
 24707                           
 24708                           ; BSR set to: 14
 24709                           ;mcc_generated_files/tmr2.c: 105:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHand
      +                          ler);
 24710  00912A  0E3A               	movlw	low _TMR2_DefaultInterruptHandler
 24711  00912C  6E10               	movwf	TMR2_SetInterruptHandler@InterruptHandler^0,c
 24712  00912E  0E98               	movlw	high _TMR2_DefaultInterruptHandler
 24713  009130  6E11               	movwf	(TMR2_SetInterruptHandler@InterruptHandler+1)^0,c
 24714  009132  EC8B  F04B         	call	_TMR2_SetInterruptHandler	;wreg free
 24715                           
 24716                           ; BSR set to: 14
 24717                           ;mcc_generated_files/tmr2.c: 108:     T2CON = 0xD9;
 24718  009136  0ED9               	movlw	217
 24719  009138  6EBD               	movwf	189,c	;volatile
 24720                           
 24721                           ; BSR set to: 14
 24722  00913A  0012               	return		;funcret
 24723  00913C                     __end_of_TMR2_Initialize:
 24724                           	callstack 0
 24725                           
 24726 ;; *************** function _TMR2_SetInterruptHandler *****************
 24727 ;; Defined at:
 24728 ;;		line 342 in file "mcc_generated_files/tmr2.c"
 24729 ;; Parameters:    Size  Location     Type
 24730 ;;  InterruptHan    2   15[COMRAM] PTR FTN()void 
 24731 ;;		 -> TMR2_DefaultInterruptHandler(1), 
 24732 ;; Auto vars:     Size  Location     Type
 24733 ;;		None
 24734 ;; Return value:  Size  Location     Type
 24735 ;;                  1    wreg      void 
 24736 ;; Registers used:
 24737 ;;		wreg, status,2, status,0
 24738 ;; Tracked objects:
 24739 ;;		On entry : 3F/E
 24740 ;;		On exit  : 3F/E
 24741 ;;		Unchanged: 3F/0
 24742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24743 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24746 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24747 ;;Total ram usage:        2 bytes
 24748 ;; Hardware stack levels used: 1
 24749 ;; Hardware stack levels required when called: 4
 24750 ;; This function calls:
 24751 ;;		Nothing
 24752 ;; This function is called by:
 24753 ;;		_TMR2_Initialize
 24754 ;; This function uses a non-reentrant model
 24755 ;;
 24756                           
 24757                           	psect	text94
 24758  009716                     __ptext94:
 24759                           	callstack 0
 24760  009716                     _TMR2_SetInterruptHandler:
 24761                           	callstack 24
 24762                           
 24763                           ; BSR set to: 14
 24764                           ;mcc_generated_files/tmr2.c: 343:     TMR2_InterruptHandler = InterruptHandler;
 24765                           
 24766                           ; BSR set to: 14
 24767                           ;incstack = 0
 24768  009716  C010  F2DF         	movff	TMR2_SetInterruptHandler@InterruptHandler,_TMR2_InterruptHandler
 24769  00971A  C011  F2E0         	movff	TMR2_SetInterruptHandler@InterruptHandler+1,_TMR2_InterruptHandler+1
 24770                           
 24771                           ; BSR set to: 14
 24772  00971E  0012               	return		;funcret
 24773  009720                     __end_of_TMR2_SetInterruptHandler:
 24774                           	callstack 0
 24775                           
 24776 ;; *************** function _TMR1_Initialize *****************
 24777 ;; Defined at:
 24778 ;;		line 66 in file "mcc_generated_files/tmr1.c"
 24779 ;; Parameters:    Size  Location     Type
 24780 ;;		None
 24781 ;; Auto vars:     Size  Location     Type
 24782 ;;		None
 24783 ;; Return value:  Size  Location     Type
 24784 ;;                  1    wreg      void 
 24785 ;; Registers used:
 24786 ;;		wreg, status,2, status,0, cstack
 24787 ;; Tracked objects:
 24788 ;;		On entry : 3F/E
 24789 ;;		On exit  : 3F/E
 24790 ;;		Unchanged: 0/0
 24791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24794 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24795 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24796 ;;Total ram usage:        2 bytes
 24797 ;; Hardware stack levels used: 1
 24798 ;; Hardware stack levels required when called: 5
 24799 ;; This function calls:
 24800 ;;		_TMR1_SetInterruptHandler
 24801 ;; This function is called by:
 24802 ;;		_SYSTEM_Initialize
 24803 ;; This function uses a non-reentrant model
 24804 ;;
 24805                           
 24806                           	psect	text95
 24807  008DA6                     __ptext95:
 24808                           	callstack 0
 24809  008DA6                     _TMR1_Initialize:
 24810                           	callstack 24
 24811                           
 24812                           ; BSR set to: 14
 24813                           ;mcc_generated_files/tmr1.c: 71:     T1GCON = 0x00;
 24814                           
 24815                           ; BSR set to: 14
 24816                           ;incstack = 0
 24817  008DA6  0E00               	movlw	0
 24818  008DA8  6ED0               	movwf	208,c	;volatile
 24819                           
 24820                           ;mcc_generated_files/tmr1.c: 74:     T1GATE = 0x00;
 24821  008DAA  0E00               	movlw	0
 24822  008DAC  6ED1               	movwf	209,c	;volatile
 24823                           
 24824                           ;mcc_generated_files/tmr1.c: 77:     T1CLK = 0x01;
 24825  008DAE  0E01               	movlw	1
 24826  008DB0  6ED2               	movwf	210,c	;volatile
 24827                           
 24828                           ; BSR set to: 14
 24829                           ;mcc_generated_files/tmr1.c: 80:     TMR1H = 0xFF;
 24830  008DB2  68CE               	setf	206,c	;volatile
 24831                           
 24832                           ;mcc_generated_files/tmr1.c: 83:     TMR1L = 0x38;
 24833  008DB4  0E38               	movlw	56
 24834  008DB6  6ECD               	movwf	205,c	;volatile
 24835                           
 24836                           ; BSR set to: 14
 24837                           ;mcc_generated_files/tmr1.c: 86:     PIR4bits.TMR1IF = 0;
 24838  008DB8  91CE               	bcf	206,0,b	;volatile
 24839                           
 24840                           ; BSR set to: 14
 24841                           ;mcc_generated_files/tmr1.c: 89:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
 24842  008DBA  50CD               	movf	205,w,c	;volatile
 24843  008DBC  CFCE F012          	movff	4046,??_TMR1_Initialize	;volatile
 24844  008DC0  6A13               	clrf	(??_TMR1_Initialize+1)^0,c
 24845  008DC2  C012  F013         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
 24846  008DC6  6A12               	clrf	??_TMR1_Initialize^0,c
 24847  008DC8  1012               	iorwf	??_TMR1_Initialize^0,w,c
 24848  008DCA  0102               	movlb	2	; () banked
 24849  008DCC  6FE3               	movwf	_timer1ReloadVal& (0+255),b	;volatile
 24850  008DCE  5013               	movf	(??_TMR1_Initialize+1)^0,w,c
 24851  008DD0  6FE4               	movwf	(_timer1ReloadVal+1)& (0+255),b	;volatile
 24852                           
 24853                           ; BSR set to: 2
 24854                           ;mcc_generated_files/tmr1.c: 92:     PIE4bits.TMR1IE = 1;
 24855  008DD2  010E               	movlb	14	; () banked
 24856  008DD4  81C6               	bsf	198,0,b	;volatile
 24857                           
 24858                           ; BSR set to: 14
 24859                           ;mcc_generated_files/tmr1.c: 95:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
 24860  008DD6  0E3C               	movlw	low _TMR1_DefaultInterruptHandler
 24861  008DD8  6E10               	movwf	TMR1_SetInterruptHandler@InterruptHandler^0,c
 24862  008DDA  0E98               	movlw	high _TMR1_DefaultInterruptHandler
 24863  008DDC  6E11               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)^0,c
 24864  008DDE  EC90  F04B         	call	_TMR1_SetInterruptHandler	;wreg free
 24865                           
 24866                           ; BSR set to: 14
 24867                           ;mcc_generated_files/tmr1.c: 98:     T1CON = 0x31;
 24868  008DE2  0E31               	movlw	49
 24869  008DE4  6ECF               	movwf	207,c	;volatile
 24870                           
 24871                           ; BSR set to: 14
 24872  008DE6  0012               	return		;funcret
 24873  008DE8                     __end_of_TMR1_Initialize:
 24874                           	callstack 0
 24875                           
 24876 ;; *************** function _TMR1_SetInterruptHandler *****************
 24877 ;; Defined at:
 24878 ;;		line 192 in file "mcc_generated_files/tmr1.c"
 24879 ;; Parameters:    Size  Location     Type
 24880 ;;  InterruptHan    2   15[COMRAM] PTR FTN()void 
 24881 ;;		 -> TMR1_DefaultInterruptHandler(1), 
 24882 ;; Auto vars:     Size  Location     Type
 24883 ;;		None
 24884 ;; Return value:  Size  Location     Type
 24885 ;;                  1    wreg      void 
 24886 ;; Registers used:
 24887 ;;		wreg, status,2, status,0
 24888 ;; Tracked objects:
 24889 ;;		On entry : 3F/E
 24890 ;;		On exit  : 3F/E
 24891 ;;		Unchanged: 3F/0
 24892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24893 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24894 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24896 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24897 ;;Total ram usage:        2 bytes
 24898 ;; Hardware stack levels used: 1
 24899 ;; Hardware stack levels required when called: 4
 24900 ;; This function calls:
 24901 ;;		Nothing
 24902 ;; This function is called by:
 24903 ;;		_TMR1_Initialize
 24904 ;; This function uses a non-reentrant model
 24905 ;;
 24906                           
 24907                           	psect	text96
 24908  009720                     __ptext96:
 24909                           	callstack 0
 24910  009720                     _TMR1_SetInterruptHandler:
 24911                           	callstack 24
 24912                           
 24913                           ; BSR set to: 14
 24914                           ;mcc_generated_files/tmr1.c: 193:     TMR1_InterruptHandler = InterruptHandler;
 24915                           
 24916                           ; BSR set to: 14
 24917                           ;incstack = 0
 24918  009720  C010  F2E1         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
 24919  009724  C011  F2E2         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
 24920                           
 24921                           ; BSR set to: 14
 24922  009728  0012               	return		;funcret
 24923  00972A                     __end_of_TMR1_SetInterruptHandler:
 24924                           	callstack 0
 24925                           
 24926 ;; *************** function _TMR0_Initialize *****************
 24927 ;; Defined at:
 24928 ;;		line 67 in file "mcc_generated_files/tmr0.c"
 24929 ;; Parameters:    Size  Location     Type
 24930 ;;		None
 24931 ;; Auto vars:     Size  Location     Type
 24932 ;;		None
 24933 ;; Return value:  Size  Location     Type
 24934 ;;                  1    wreg      void 
 24935 ;; Registers used:
 24936 ;;		wreg, status,2, status,0, cstack
 24937 ;; Tracked objects:
 24938 ;;		On entry : 3F/E
 24939 ;;		On exit  : 3F/E
 24940 ;;		Unchanged: 0/0
 24941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24945 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24946 ;;Total ram usage:        0 bytes
 24947 ;; Hardware stack levels used: 1
 24948 ;; Hardware stack levels required when called: 5
 24949 ;; This function calls:
 24950 ;;		_TMR0_SetInterruptHandler
 24951 ;; This function is called by:
 24952 ;;		_SYSTEM_Initialize
 24953 ;; This function uses a non-reentrant model
 24954 ;;
 24955                           
 24956                           	psect	text97
 24957  009448                     __ptext97:
 24958                           	callstack 0
 24959  009448                     _TMR0_Initialize:
 24960                           	callstack 24
 24961                           
 24962                           ; BSR set to: 14
 24963                           ;mcc_generated_files/tmr0.c: 72:     T0CON1 = 0x41;
 24964                           
 24965                           ; BSR set to: 14
 24966                           ;incstack = 0
 24967  009448  0E41               	movlw	65
 24968  00944A  6ED6               	movwf	214,c	;volatile
 24969                           
 24970                           ;mcc_generated_files/tmr0.c: 75:     TMR0H = 0x84;
 24971  00944C  0E84               	movlw	132
 24972  00944E  6ED4               	movwf	212,c	;volatile
 24973                           
 24974                           ;mcc_generated_files/tmr0.c: 78:     TMR0L = 0x00;
 24975  009450  0E00               	movlw	0
 24976  009452  6ED3               	movwf	211,c	;volatile
 24977                           
 24978                           ; BSR set to: 14
 24979                           ;mcc_generated_files/tmr0.c: 81:     PIR0bits.TMR0IF = 0;
 24980  009454  9BCA               	bcf	202,5,b	;volatile
 24981                           
 24982                           ; BSR set to: 14
 24983                           ;mcc_generated_files/tmr0.c: 84:     PIE0bits.TMR0IE = 1;
 24984  009456  8BC2               	bsf	194,5,b	;volatile
 24985                           
 24986                           ; BSR set to: 14
 24987                           ;mcc_generated_files/tmr0.c: 87:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
 24988  009458  0E3E               	movlw	low _TMR0_DefaultInterruptHandler
 24989  00945A  6E10               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
 24990  00945C  0E98               	movlw	high _TMR0_DefaultInterruptHandler
 24991  00945E  6E11               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
 24992  009460  EC95  F04B         	call	_TMR0_SetInterruptHandler	;wreg free
 24993                           
 24994                           ; BSR set to: 14
 24995                           ;mcc_generated_files/tmr0.c: 90:     T0CON0 = 0x87;
 24996  009464  0E87               	movlw	135
 24997  009466  6ED5               	movwf	213,c	;volatile
 24998                           
 24999                           ; BSR set to: 14
 25000  009468  0012               	return		;funcret
 25001  00946A                     __end_of_TMR0_Initialize:
 25002                           	callstack 0
 25003                           
 25004 ;; *************** function _TMR0_SetInterruptHandler *****************
 25005 ;; Defined at:
 25006 ;;		line 143 in file "mcc_generated_files/tmr0.c"
 25007 ;; Parameters:    Size  Location     Type
 25008 ;;  InterruptHan    2   15[COMRAM] PTR FTN()void 
 25009 ;;		 -> TMR0_DefaultInterruptHandler(1), 
 25010 ;; Auto vars:     Size  Location     Type
 25011 ;;		None
 25012 ;; Return value:  Size  Location     Type
 25013 ;;                  1    wreg      void 
 25014 ;; Registers used:
 25015 ;;		wreg, status,2, status,0
 25016 ;; Tracked objects:
 25017 ;;		On entry : 3F/E
 25018 ;;		On exit  : 3F/E
 25019 ;;		Unchanged: 3F/0
 25020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25021 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25022 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25024 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25025 ;;Total ram usage:        2 bytes
 25026 ;; Hardware stack levels used: 1
 25027 ;; Hardware stack levels required when called: 4
 25028 ;; This function calls:
 25029 ;;		Nothing
 25030 ;; This function is called by:
 25031 ;;		_TMR0_Initialize
 25032 ;; This function uses a non-reentrant model
 25033 ;;
 25034                           
 25035                           	psect	text98
 25036  00972A                     __ptext98:
 25037                           	callstack 0
 25038  00972A                     _TMR0_SetInterruptHandler:
 25039                           	callstack 24
 25040                           
 25041                           ; BSR set to: 14
 25042                           ;mcc_generated_files/tmr0.c: 144:     TMR0_InterruptHandler = InterruptHandler;
 25043                           
 25044                           ; BSR set to: 14
 25045                           ;incstack = 0
 25046  00972A  C010  F2E5         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
 25047  00972E  C011  F2E6         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
 25048                           
 25049                           ; BSR set to: 14
 25050  009732  0012               	return		;funcret
 25051  009734                     __end_of_TMR0_SetInterruptHandler:
 25052                           	callstack 0
 25053                           
 25054 ;; *************** function _PMD_Initialize *****************
 25055 ;; Defined at:
 25056 ;;		line 79 in file "mcc_generated_files/mcc.c"
 25057 ;; Parameters:    Size  Location     Type
 25058 ;;		None
 25059 ;; Auto vars:     Size  Location     Type
 25060 ;;		None
 25061 ;; Return value:  Size  Location     Type
 25062 ;;                  1    wreg      void 
 25063 ;; Registers used:
 25064 ;;		wreg, status,2
 25065 ;; Tracked objects:
 25066 ;;		On entry : 3F/0
 25067 ;;		On exit  : 3F/E
 25068 ;;		Unchanged: 0/0
 25069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25073 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25074 ;;Total ram usage:        0 bytes
 25075 ;; Hardware stack levels used: 1
 25076 ;; Hardware stack levels required when called: 4
 25077 ;; This function calls:
 25078 ;;		Nothing
 25079 ;; This function is called by:
 25080 ;;		_SYSTEM_Initialize
 25081 ;; This function uses a non-reentrant model
 25082 ;;
 25083                           
 25084                           	psect	text99
 25085  0094E6                     __ptext99:
 25086                           	callstack 0
 25087  0094E6                     _PMD_Initialize:
 25088                           	callstack 25
 25089                           
 25090                           ; BSR set to: 0
 25091                           ;mcc_generated_files/mcc.c: 82:     PMD0 = 0x00;
 25092                           
 25093                           ; BSR set to: 14
 25094                           ;incstack = 0
 25095  0094E6  0E00               	movlw	0
 25096  0094E8  010E               	movlb	14	; () banked
 25097  0094EA  6FE1               	movwf	225,b	;volatile
 25098                           
 25099                           ;mcc_generated_files/mcc.c: 84:     PMD1 = 0x00;
 25100  0094EC  0E00               	movlw	0
 25101  0094EE  6FE2               	movwf	226,b	;volatile
 25102                           
 25103                           ;mcc_generated_files/mcc.c: 86:     PMD2 = 0x00;
 25104  0094F0  0E00               	movlw	0
 25105  0094F2  6FE3               	movwf	227,b	;volatile
 25106                           
 25107                           ;mcc_generated_files/mcc.c: 88:     PMD3 = 0x00;
 25108  0094F4  0E00               	movlw	0
 25109  0094F6  6FE4               	movwf	228,b	;volatile
 25110                           
 25111                           ;mcc_generated_files/mcc.c: 90:     PMD4 = 0x00;
 25112  0094F8  0E00               	movlw	0
 25113  0094FA  6FE5               	movwf	229,b	;volatile
 25114                           
 25115                           ;mcc_generated_files/mcc.c: 92:     PMD5 = 0x00;
 25116  0094FC  0E00               	movlw	0
 25117  0094FE  6FE6               	movwf	230,b	;volatile
 25118                           
 25119                           ; BSR set to: 14
 25120  009500  0012               	return		;funcret
 25121  009502                     __end_of_PMD_Initialize:
 25122                           	callstack 0
 25123                           
 25124 ;; *************** function _PIN_MANAGER_Initialize *****************
 25125 ;; Defined at:
 25126 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 25127 ;; Parameters:    Size  Location     Type
 25128 ;;		None
 25129 ;; Auto vars:     Size  Location     Type
 25130 ;;		None
 25131 ;; Return value:  Size  Location     Type
 25132 ;;                  1    wreg      void 
 25133 ;; Registers used:
 25134 ;;		wreg, status,2
 25135 ;; Tracked objects:
 25136 ;;		On entry : 3F/E
 25137 ;;		On exit  : 3F/E
 25138 ;;		Unchanged: 0/0
 25139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25143 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25144 ;;Total ram usage:        0 bytes
 25145 ;; Hardware stack levels used: 1
 25146 ;; Hardware stack levels required when called: 4
 25147 ;; This function calls:
 25148 ;;		Nothing
 25149 ;; This function is called by:
 25150 ;;		_SYSTEM_Initialize
 25151 ;; This function uses a non-reentrant model
 25152 ;;
 25153                           
 25154                           	psect	text100
 25155  007962                     __ptext100:
 25156                           	callstack 0
 25157  007962                     _PIN_MANAGER_Initialize:
 25158                           	callstack 25
 25159                           
 25160                           ; BSR set to: 14
 25161                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
 25162                           
 25163                           ; BSR set to: 14
 25164                           ;incstack = 0
 25165  007962  0E00               	movlw	0
 25166  007964  6E87               	movwf	135,c	;volatile
 25167                           
 25168                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
 25169  007966  0E00               	movlw	0
 25170  007968  6E86               	movwf	134,c	;volatile
 25171                           
 25172                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
 25173  00796A  0E00               	movlw	0
 25174  00796C  6E83               	movwf	131,c	;volatile
 25175                           
 25176                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
 25177  00796E  0E00               	movlw	0
 25178  007970  6E84               	movwf	132,c	;volatile
 25179                           
 25180                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
 25181  007972  0E00               	movlw	0
 25182  007974  6E85               	movwf	133,c	;volatile
 25183                           
 25184                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x00;
 25185  007976  0E00               	movlw	0
 25186  007978  6E8C               	movwf	140,c	;volatile
 25187                           
 25188                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0x7F;
 25189  00797A  0E7F               	movlw	127
 25190  00797C  6E88               	movwf	136,c	;volatile
 25191                           
 25192                           ; BSR set to: 14
 25193                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
 25194  00797E  6889               	setf	137,c	;volatile
 25195                           
 25196                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0x58;
 25197  007980  0E58               	movlw	88
 25198  007982  6E8A               	movwf	138,c	;volatile
 25199                           
 25200                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0x00;
 25201  007984  0E00               	movlw	0
 25202  007986  6E8B               	movwf	139,c	;volatile
 25203                           
 25204                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0x00;
 25205  007988  0E00               	movlw	0
 25206  00798A  010F               	movlb	15	; () banked
 25207  00798C  6F26               	movwf	38,b	;volatile
 25208                           
 25209                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0x00;
 25210  00798E  0E00               	movlw	0
 25211  007990  6F21               	movwf	33,b	;volatile
 25212                           
 25213                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0x00;
 25214  007992  0E00               	movlw	0
 25215  007994  6F19               	movwf	25,b	;volatile
 25216                           
 25217                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x00;
 25218  007996  0E00               	movlw	0
 25219  007998  6F2E               	movwf	46,b	;volatile
 25220                           
 25221                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0x01;
 25222  00799A  0E01               	movlw	1
 25223  00799C  6F11               	movwf	17,b	;volatile
 25224                           
 25225                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
 25226  00799E  0E00               	movlw	0
 25227  0079A0  6F25               	movwf	37,b	;volatile
 25228                           
 25229                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
 25230  0079A2  0E00               	movlw	0
 25231  0079A4  6F2D               	movwf	45,b	;volatile
 25232                           
 25233                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0xF7;
 25234  0079A6  0EF7               	movlw	247
 25235  0079A8  6F18               	movwf	24,b	;volatile
 25236                           
 25237                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
 25238  0079AA  0E00               	movlw	0
 25239  0079AC  6F10               	movwf	16,b	;volatile
 25240                           
 25241                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
 25242  0079AE  0E00               	movlw	0
 25243  0079B0  6F20               	movwf	32,b	;volatile
 25244                           
 25245                           ;mcc_generated_files/pin_manager.c: 96:     ODCONE = 0x00;
 25246  0079B2  0E00               	movlw	0
 25247  0079B4  6F2C               	movwf	44,b	;volatile
 25248                           
 25249                           ;mcc_generated_files/pin_manager.c: 97:     ODCONA = 0x00;
 25250  0079B6  0E00               	movlw	0
 25251  0079B8  6F0F               	movwf	15,b	;volatile
 25252                           
 25253                           ;mcc_generated_files/pin_manager.c: 98:     ODCONB = 0x00;
 25254  0079BA  0E00               	movlw	0
 25255  0079BC  6F17               	movwf	23,b	;volatile
 25256                           
 25257                           ;mcc_generated_files/pin_manager.c: 99:     ODCONC = 0x00;
 25258  0079BE  0E00               	movlw	0
 25259  0079C0  6F1F               	movwf	31,b	;volatile
 25260                           
 25261                           ;mcc_generated_files/pin_manager.c: 100:     ODCOND = 0x00;
 25262  0079C2  0E00               	movlw	0
 25263  0079C4  6F24               	movwf	36,b	;volatile
 25264                           
 25265                           ; BSR set to: 15
 25266                           ;mcc_generated_files/pin_manager.c: 105:     SLRCONA = 0xFF;
 25267  0079C6  690E               	setf	14,b	;volatile
 25268                           
 25269                           ; BSR set to: 15
 25270                           ;mcc_generated_files/pin_manager.c: 106:     SLRCONB = 0xFF;
 25271  0079C8  6916               	setf	22,b	;volatile
 25272                           
 25273                           ; BSR set to: 15
 25274                           ;mcc_generated_files/pin_manager.c: 107:     SLRCONC = 0xFF;
 25275  0079CA  691E               	setf	30,b	;volatile
 25276                           
 25277                           ; BSR set to: 15
 25278                           ;mcc_generated_files/pin_manager.c: 108:     SLRCOND = 0xFF;
 25279  0079CC  6923               	setf	35,b	;volatile
 25280                           
 25281                           ;mcc_generated_files/pin_manager.c: 109:     SLRCONE = 0x07;
 25282  0079CE  0E07               	movlw	7
 25283  0079D0  6F2B               	movwf	43,b	;volatile
 25284                           
 25285                           ; BSR set to: 15
 25286                           ;mcc_generated_files/pin_manager.c: 114:     INLVLA = 0xFF;
 25287  0079D2  690D               	setf	13,b	;volatile
 25288                           
 25289                           ; BSR set to: 15
 25290                           ;mcc_generated_files/pin_manager.c: 115:     INLVLB = 0xFF;
 25291  0079D4  6915               	setf	21,b	;volatile
 25292                           
 25293                           ; BSR set to: 15
 25294                           ;mcc_generated_files/pin_manager.c: 116:     INLVLC = 0xFF;
 25295  0079D6  691D               	setf	29,b	;volatile
 25296                           
 25297                           ; BSR set to: 15
 25298                           ;mcc_generated_files/pin_manager.c: 117:     INLVLD = 0xFF;
 25299  0079D8  6922               	setf	34,b	;volatile
 25300                           
 25301                           ;mcc_generated_files/pin_manager.c: 118:     INLVLE = 0x0F;
 25302  0079DA  0E0F               	movlw	15
 25303  0079DC  6F2A               	movwf	42,b	;volatile
 25304                           
 25305                           ;mcc_generated_files/pin_manager.c: 127:     SSP1CLKPPS = 0x13;
 25306  0079DE  0E13               	movlw	19
 25307  0079E0  010E               	movlb	14	; () banked
 25308  0079E2  6FB7               	movwf	183,b	;volatile
 25309                           
 25310                           ;mcc_generated_files/pin_manager.c: 128:     RX1PPS = 0x16;
 25311  0079E4  0E16               	movlw	22
 25312  0079E6  6FB5               	movwf	181,b	;volatile
 25313                           
 25314                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x0F;
 25315  0079E8  0E0F               	movlw	15
 25316  0079EA  6FFA               	movwf	250,b	;volatile
 25317                           
 25318                           ;mcc_generated_files/pin_manager.c: 130:     RC4PPS = 0x10;
 25319  0079EC  0E10               	movlw	16
 25320  0079EE  6FFB               	movwf	251,b	;volatile
 25321                           
 25322                           ;mcc_generated_files/pin_manager.c: 131:     RC7PPS = 0x09;
 25323  0079F0  0E09               	movlw	9
 25324  0079F2  6FFE               	movwf	254,b	;volatile
 25325                           
 25326                           ;mcc_generated_files/pin_manager.c: 132:     SSP1DATPPS = 0x14;
 25327  0079F4  0E14               	movlw	20
 25328  0079F6  6FB8               	movwf	184,b	;volatile
 25329                           
 25330                           ; BSR set to: 14
 25331  0079F8  0012               	return		;funcret
 25332  0079FA                     __end_of_PIN_MANAGER_Initialize:
 25333                           	callstack 0
 25334                           
 25335 ;; *************** function _OSCILLATOR_Initialize *****************
 25336 ;; Defined at:
 25337 ;;		line 65 in file "mcc_generated_files/mcc.c"
 25338 ;; Parameters:    Size  Location     Type
 25339 ;;		None
 25340 ;; Auto vars:     Size  Location     Type
 25341 ;;		None
 25342 ;; Return value:  Size  Location     Type
 25343 ;;                  1    wreg      void 
 25344 ;; Registers used:
 25345 ;;		wreg, status,2
 25346 ;; Tracked objects:
 25347 ;;		On entry : 3F/E
 25348 ;;		On exit  : 3F/E
 25349 ;;		Unchanged: 0/0
 25350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25354 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25355 ;;Total ram usage:        0 bytes
 25356 ;; Hardware stack levels used: 1
 25357 ;; Hardware stack levels required when called: 4
 25358 ;; This function calls:
 25359 ;;		Nothing
 25360 ;; This function is called by:
 25361 ;;		_SYSTEM_Initialize
 25362 ;; This function uses a non-reentrant model
 25363 ;;
 25364                           
 25365                           	psect	text101
 25366  009630                     __ptext101:
 25367                           	callstack 0
 25368  009630                     _OSCILLATOR_Initialize:
 25369                           	callstack 25
 25370                           
 25371                           ; BSR set to: 14
 25372                           ;mcc_generated_files/mcc.c: 68:     OSCCON1 = 0x60;
 25373                           
 25374                           ; BSR set to: 14
 25375                           ;incstack = 0
 25376  009630  0E60               	movlw	96
 25377  009632  6FD8               	movwf	216,b	;volatile
 25378                           
 25379                           ;mcc_generated_files/mcc.c: 70:     OSCCON3 = 0x00;
 25380  009634  0E00               	movlw	0
 25381  009636  6FDA               	movwf	218,b	;volatile
 25382                           
 25383                           ;mcc_generated_files/mcc.c: 72:     OSCEN = 0x00;
 25384  009638  0E00               	movlw	0
 25385  00963A  6FDC               	movwf	220,b	;volatile
 25386                           
 25387                           ;mcc_generated_files/mcc.c: 74:     OSCFRQ = 0x08;
 25388  00963C  0E08               	movlw	8
 25389  00963E  6FDE               	movwf	222,b	;volatile
 25390                           
 25391                           ;mcc_generated_files/mcc.c: 76:     OSCTUNE = 0x00;
 25392  009640  0E00               	movlw	0
 25393  009642  6FDD               	movwf	221,b	;volatile
 25394                           
 25395                           ; BSR set to: 14
 25396  009644  0012               	return		;funcret
 25397  009646                     __end_of_OSCILLATOR_Initialize:
 25398                           	callstack 0
 25399                           
 25400 ;; *************** function _INTERRUPT_Initialize *****************
 25401 ;; Defined at:
 25402 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 25403 ;; Parameters:    Size  Location     Type
 25404 ;;		None
 25405 ;; Auto vars:     Size  Location     Type
 25406 ;;		None
 25407 ;; Return value:  Size  Location     Type
 25408 ;;                  1    wreg      void 
 25409 ;; Registers used:
 25410 ;;		None
 25411 ;; Tracked objects:
 25412 ;;		On entry : 3F/0
 25413 ;;		On exit  : 3F/0
 25414 ;;		Unchanged: 3F/0
 25415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25419 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25420 ;;Total ram usage:        0 bytes
 25421 ;; Hardware stack levels used: 1
 25422 ;; Hardware stack levels required when called: 4
 25423 ;; This function calls:
 25424 ;;		Nothing
 25425 ;; This function is called by:
 25426 ;;		_SYSTEM_Initialize
 25427 ;; This function uses a non-reentrant model
 25428 ;;
 25429                           
 25430                           	psect	text102
 25431  00980E                     __ptext102:
 25432                           	callstack 0
 25433  00980E                     _INTERRUPT_Initialize:
 25434                           	callstack 25
 25435                           
 25436                           ; BSR set to: 0
 25437                           ;mcc_generated_files/interrupt_manager.c: 55:     INTCONbits.IPEN = 0;
 25438                           
 25439                           ; BSR set to: 14
 25440                           ;incstack = 0
 25441  00980E  9AF2               	bcf	242,5,c	;volatile
 25442                           
 25443                           ; BSR set to: 0
 25444  009810  0012               	return		;funcret
 25445  009812                     __end_of_INTERRUPT_Initialize:
 25446                           	callstack 0
 25447                           
 25448 ;; *************** function _I2C1_Initialize *****************
 25449 ;; Defined at:
 25450 ;;		line 167 in file "mcc_generated_files/i2c1_master.c"
 25451 ;; Parameters:    Size  Location     Type
 25452 ;;		None
 25453 ;; Auto vars:     Size  Location     Type
 25454 ;;		None
 25455 ;; Return value:  Size  Location     Type
 25456 ;;                  1    wreg      void 
 25457 ;; Registers used:
 25458 ;;		wreg, status,2
 25459 ;; Tracked objects:
 25460 ;;		On entry : 3F/E
 25461 ;;		On exit  : 3F/E
 25462 ;;		Unchanged: 3F/0
 25463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25467 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25468 ;;Total ram usage:        0 bytes
 25469 ;; Hardware stack levels used: 1
 25470 ;; Hardware stack levels required when called: 4
 25471 ;; This function calls:
 25472 ;;		Nothing
 25473 ;; This function is called by:
 25474 ;;		_SYSTEM_Initialize
 25475 ;; This function uses a non-reentrant model
 25476 ;;
 25477                           
 25478                           	psect	text103
 25479  009684                     __ptext103:
 25480                           	callstack 0
 25481  009684                     _I2C1_Initialize:
 25482                           	callstack 25
 25483                           
 25484                           ; BSR set to: 14
 25485                           ;mcc_generated_files/i2c1_master.c: 169:     SSP1STAT = 0x80;
 25486                           
 25487                           ; BSR set to: 0
 25488                           ;incstack = 0
 25489  009684  0E80               	movlw	128
 25490  009686  6E95               	movwf	149,c	;volatile
 25491                           
 25492                           ;mcc_generated_files/i2c1_master.c: 170:     SSP1CON1 = 0x08;
 25493  009688  0E08               	movlw	8
 25494  00968A  6E96               	movwf	150,c	;volatile
 25495                           
 25496                           ;mcc_generated_files/i2c1_master.c: 171:     SSP1CON2 = 0x00;
 25497  00968C  0E00               	movlw	0
 25498  00968E  6E97               	movwf	151,c	;volatile
 25499                           
 25500                           ;mcc_generated_files/i2c1_master.c: 172:     SSP1ADD = 0x9F;
 25501  009690  0E9F               	movlw	159
 25502  009692  6E93               	movwf	147,c	;volatile
 25503                           
 25504                           ; BSR set to: 14
 25505                           ;mcc_generated_files/i2c1_master.c: 173:     SSP1CON1bits.SSPEN = 0;
 25506  009694  9A96               	bcf	150,5,c	;volatile
 25507                           
 25508                           ; BSR set to: 14
 25509  009696  0012               	return		;funcret
 25510  009698                     __end_of_I2C1_Initialize:
 25511                           	callstack 0
 25512                           
 25513 ;; *************** function _EUSART1_Initialize *****************
 25514 ;; Defined at:
 25515 ;;		line 88 in file "mcc_generated_files/eusart1.c"
 25516 ;; Parameters:    Size  Location     Type
 25517 ;;		None
 25518 ;; Auto vars:     Size  Location     Type
 25519 ;;		None
 25520 ;; Return value:  Size  Location     Type
 25521 ;;                  1    wreg      void 
 25522 ;; Registers used:
 25523 ;;		wreg, status,2, status,0, cstack
 25524 ;; Tracked objects:
 25525 ;;		On entry : 3F/E
 25526 ;;		On exit  : 3F/E
 25527 ;;		Unchanged: 0/0
 25528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25532 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25533 ;;Total ram usage:        0 bytes
 25534 ;; Hardware stack levels used: 1
 25535 ;; Hardware stack levels required when called: 5
 25536 ;; This function calls:
 25537 ;;		_EUSART1_SetErrorHandler
 25538 ;;		_EUSART1_SetFramingErrorHandler
 25539 ;;		_EUSART1_SetOverrunErrorHandler
 25540 ;;		_EUSART1_SetRxInterruptHandler
 25541 ;;		_EUSART1_SetTxInterruptHandler
 25542 ;; This function is called by:
 25543 ;;		_SYSTEM_Initialize
 25544 ;; This function uses a non-reentrant model
 25545 ;;
 25546                           
 25547                           	psect	text104
 25548  007FDA                     __ptext104:
 25549                           	callstack 0
 25550  007FDA                     _EUSART1_Initialize:
 25551                           	callstack 24
 25552                           
 25553                           ; BSR set to: 14
 25554                           ;mcc_generated_files/eusart1.c: 91:     PIE3bits.RC1IE = 0;
 25555                           
 25556                           ; BSR set to: 14
 25557                           ;incstack = 0
 25558  007FDA  9BC5               	bcf	197,5,b	;volatile
 25559                           
 25560                           ; BSR set to: 14
 25561                           ;mcc_generated_files/eusart1.c: 92:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
 25562  007FDC  0EC8               	movlw	low _EUSART1_Receive_ISR
 25563  007FDE  6E10               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler^0,c
 25564  007FE0  0E78               	movlw	high _EUSART1_Receive_ISR
 25565  007FE2  6E11               	movwf	(EUSART1_SetRxInterruptHandler@interruptHandler+1)^0,c
 25566  007FE4  EC9F  F04B         	call	_EUSART1_SetRxInterruptHandler	;wreg free
 25567                           
 25568                           ; BSR set to: 14
 25569                           ;mcc_generated_files/eusart1.c: 93:     PIE3bits.TX1IE = 0;
 25570  007FE8  99C5               	bcf	197,4,b	;volatile
 25571                           
 25572                           ;mcc_generated_files/eusart1.c: 94:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
 25573  007FEA  0EFC               	movlw	low _EUSART1_Transmit_ISR
 25574  007FEC  6E10               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler^0,c
 25575  007FEE  0E8F               	movlw	high _EUSART1_Transmit_ISR
 25576  007FF0  6E11               	movwf	(EUSART1_SetTxInterruptHandler@interruptHandler+1)^0,c
 25577  007FF2  EC9A  F04B         	call	_EUSART1_SetTxInterruptHandler	;wreg free
 25578                           
 25579                           ; BSR set to: 14
 25580                           ;mcc_generated_files/eusart1.c: 98:     BAUD1CON = 0x08;
 25581  007FF6  0E08               	movlw	8
 25582  007FF8  6E9F               	movwf	159,c	;volatile
 25583                           
 25584                           ; BSR set to: 14
 25585                           ;mcc_generated_files/eusart1.c: 101:     RC1STA = 0x90;
 25586  007FFA  0E90               	movlw	144
 25587  007FFC  6E9D               	movwf	157,c	;volatile
 25588                           
 25589                           ; BSR set to: 14
 25590                           ;mcc_generated_files/eusart1.c: 104:     TX1STA = 0x24;
 25591  007FFE  0E24               	movlw	36
 25592  008000  6E9E               	movwf	158,c	;volatile
 25593                           
 25594                           ; BSR set to: 14
 25595                           ;mcc_generated_files/eusart1.c: 107:     SP1BRGL = 0x82;
 25596  008002  0E82               	movlw	130
 25597  008004  6E9B               	movwf	155,c	;volatile
 25598                           
 25599                           ; BSR set to: 14
 25600                           ;mcc_generated_files/eusart1.c: 110:     SP1BRGH = 0x06;
 25601  008006  0E06               	movlw	6
 25602  008008  6E9C               	movwf	156,c	;volatile
 25603                           
 25604                           ; BSR set to: 14
 25605                           ;mcc_generated_files/eusart1.c: 113:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
 25606  00800A  0E40               	movlw	low _EUSART1_DefaultFramingErrorHandler
 25607  00800C  6E10               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
 25608  00800E  0E98               	movlw	high _EUSART1_DefaultFramingErrorHandler
 25609  008010  6E11               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
 25610  008012  ECA9  F04B         	call	_EUSART1_SetFramingErrorHandler	;wreg free
 25611                           
 25612                           ; BSR set to: 14
 25613                           ;mcc_generated_files/eusart1.c: 114:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
 25614  008016  0EF8               	movlw	low _EUSART1_DefaultOverrunErrorHandler
 25615  008018  6E10               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
 25616  00801A  0E97               	movlw	high _EUSART1_DefaultOverrunErrorHandler
 25617  00801C  6E11               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
 25618  00801E  ECA4  F04B         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
 25619                           
 25620                           ; BSR set to: 14
 25621                           ;mcc_generated_files/eusart1.c: 115:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
 25622  008022  0EFE               	movlw	low _EUSART1_DefaultErrorHandler
 25623  008024  6E10               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
 25624  008026  0E97               	movlw	high _EUSART1_DefaultErrorHandler
 25625  008028  6E11               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
 25626  00802A  ECAE  F04B         	call	_EUSART1_SetErrorHandler	;wreg free
 25627                           
 25628                           ;mcc_generated_files/eusart1.c: 117:     eusart1RxLastError.status = 0;
 25629  00802E  0E00               	movlw	0
 25630  008030  0101               	movlb	1	; () banked
 25631  008032  6F9A               	movwf	_eusart1RxLastError& (0+255),b	;volatile
 25632                           
 25633                           ;mcc_generated_files/eusart1.c: 120:     eusart1TxHead = 0;
 25634  008034  0E00               	movlw	0
 25635  008036  0100               	movlb	0	; () banked
 25636  008038  6F97               	movwf	_eusart1TxHead& (0+255),b	;volatile
 25637                           
 25638                           ;mcc_generated_files/eusart1.c: 121:     eusart1TxTail = 0;
 25639  00803A  0E00               	movlw	0
 25640  00803C  6F96               	movwf	_eusart1TxTail& (0+255),b	;volatile
 25641                           
 25642                           ;mcc_generated_files/eusart1.c: 122:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
 25643  00803E  0E08               	movlw	8
 25644  008040  0101               	movlb	1	; () banked
 25645  008042  6FFF               	movwf	_eusart1TxBufferRemaining& (0+255),b	;volatile
 25646                           
 25647                           ;mcc_generated_files/eusart1.c: 124:     eusart1RxHead = 0;
 25648  008044  0E00               	movlw	0
 25649  008046  0100               	movlb	0	; () banked
 25650  008048  6F95               	movwf	_eusart1RxHead& (0+255),b	;volatile
 25651                           
 25652                           ;mcc_generated_files/eusart1.c: 125:     eusart1RxTail = 0;
 25653  00804A  0E00               	movlw	0
 25654  00804C  6F94               	movwf	_eusart1RxTail& (0+255),b	;volatile
 25655                           
 25656                           ;mcc_generated_files/eusart1.c: 126:     eusart1RxCount = 0;
 25657  00804E  0E00               	movlw	0
 25658  008050  6F93               	movwf	_eusart1RxCount& (0+255),b	;volatile
 25659                           
 25660                           ; BSR set to: 0
 25661                           ;mcc_generated_files/eusart1.c: 129:     PIE3bits.RC1IE = 1;
 25662  008052  010E               	movlb	14	; () banked
 25663  008054  8BC5               	bsf	197,5,b	;volatile
 25664                           
 25665                           ; BSR set to: 14
 25666  008056  0012               	return		;funcret
 25667  008058                     __end_of_EUSART1_Initialize:
 25668                           	callstack 0
 25669                           
 25670 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
 25671 ;; Defined at:
 25672 ;;		line 276 in file "mcc_generated_files/eusart1.c"
 25673 ;; Parameters:    Size  Location     Type
 25674 ;;  interruptHan    2   15[COMRAM] PTR FTN()void 
 25675 ;;		 -> EUSART1_Transmit_ISR(1), 
 25676 ;; Auto vars:     Size  Location     Type
 25677 ;;		None
 25678 ;; Return value:  Size  Location     Type
 25679 ;;                  1    wreg      void 
 25680 ;; Registers used:
 25681 ;;		wreg, status,2, status,0
 25682 ;; Tracked objects:
 25683 ;;		On entry : 3F/E
 25684 ;;		On exit  : 3F/E
 25685 ;;		Unchanged: 3F/0
 25686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25687 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25690 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25691 ;;Total ram usage:        2 bytes
 25692 ;; Hardware stack levels used: 1
 25693 ;; Hardware stack levels required when called: 4
 25694 ;; This function calls:
 25695 ;;		Nothing
 25696 ;; This function is called by:
 25697 ;;		_EUSART1_Initialize
 25698 ;; This function uses a non-reentrant model
 25699 ;;
 25700                           
 25701                           	psect	text105
 25702  009734                     __ptext105:
 25703                           	callstack 0
 25704  009734                     _EUSART1_SetTxInterruptHandler:
 25705                           	callstack 24
 25706                           
 25707                           ; BSR set to: 14
 25708                           ;mcc_generated_files/eusart1.c: 277:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
 25709                           
 25710                           ; BSR set to: 14
 25711                           ;incstack = 0
 25712  009734  C010  F2EF         	movff	EUSART1_SetTxInterruptHandler@interruptHandler,_EUSART1_TxDefaultInterruptHandler
 25713  009738  C011  F2F0         	movff	EUSART1_SetTxInterruptHandler@interruptHandler+1,_EUSART1_TxDefaultInterruptHandl
      +                          er+1
 25714                           
 25715                           ; BSR set to: 14
 25716  00973C  0012               	return		;funcret
 25717  00973E                     __end_of_EUSART1_SetTxInterruptHandler:
 25718                           	callstack 0
 25719                           
 25720 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
 25721 ;; Defined at:
 25722 ;;		line 280 in file "mcc_generated_files/eusart1.c"
 25723 ;; Parameters:    Size  Location     Type
 25724 ;;  interruptHan    2   15[COMRAM] PTR FTN()void 
 25725 ;;		 -> EUSART1_Receive_ISR(1), 
 25726 ;; Auto vars:     Size  Location     Type
 25727 ;;		None
 25728 ;; Return value:  Size  Location     Type
 25729 ;;                  1    wreg      void 
 25730 ;; Registers used:
 25731 ;;		wreg, status,2, status,0
 25732 ;; Tracked objects:
 25733 ;;		On entry : 3F/E
 25734 ;;		On exit  : 3F/E
 25735 ;;		Unchanged: 3F/0
 25736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25737 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25740 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25741 ;;Total ram usage:        2 bytes
 25742 ;; Hardware stack levels used: 1
 25743 ;; Hardware stack levels required when called: 4
 25744 ;; This function calls:
 25745 ;;		Nothing
 25746 ;; This function is called by:
 25747 ;;		_EUSART1_Initialize
 25748 ;; This function uses a non-reentrant model
 25749 ;;
 25750                           
 25751                           	psect	text106
 25752  00973E                     __ptext106:
 25753                           	callstack 0
 25754  00973E                     _EUSART1_SetRxInterruptHandler:
 25755                           	callstack 24
 25756                           
 25757                           ; BSR set to: 14
 25758                           ;mcc_generated_files/eusart1.c: 281:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
 25759                           
 25760                           ; BSR set to: 14
 25761                           ;incstack = 0
 25762  00973E  C010  F2ED         	movff	EUSART1_SetRxInterruptHandler@interruptHandler,_EUSART1_RxDefaultInterruptHandler
 25763  009742  C011  F2EE         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+1,_EUSART1_RxDefaultInterruptHandl
      +                          er+1
 25764                           
 25765                           ; BSR set to: 14
 25766  009746  0012               	return		;funcret
 25767  009748                     __end_of_EUSART1_SetRxInterruptHandler:
 25768                           	callstack 0
 25769                           
 25770 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
 25771 ;; Defined at:
 25772 ;;		line 268 in file "mcc_generated_files/eusart1.c"
 25773 ;; Parameters:    Size  Location     Type
 25774 ;;  interruptHan    2   15[COMRAM] PTR FTN()void 
 25775 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
 25776 ;; Auto vars:     Size  Location     Type
 25777 ;;		None
 25778 ;; Return value:  Size  Location     Type
 25779 ;;                  1    wreg      void 
 25780 ;; Registers used:
 25781 ;;		wreg, status,2, status,0
 25782 ;; Tracked objects:
 25783 ;;		On entry : 3F/E
 25784 ;;		On exit  : 3F/E
 25785 ;;		Unchanged: 3F/0
 25786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25787 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25790 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25791 ;;Total ram usage:        2 bytes
 25792 ;; Hardware stack levels used: 1
 25793 ;; Hardware stack levels required when called: 4
 25794 ;; This function calls:
 25795 ;;		Nothing
 25796 ;; This function is called by:
 25797 ;;		_EUSART1_Initialize
 25798 ;; This function uses a non-reentrant model
 25799 ;;
 25800                           
 25801                           	psect	text107
 25802  009748                     __ptext107:
 25803                           	callstack 0
 25804  009748                     _EUSART1_SetOverrunErrorHandler:
 25805                           	callstack 24
 25806                           
 25807                           ; BSR set to: 14
 25808                           ;mcc_generated_files/eusart1.c: 269:     EUSART1_OverrunErrorHandler = interruptHandler;
 25809                           
 25810                           ; BSR set to: 14
 25811                           ;incstack = 0
 25812  009748  C010  F2E9         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
 25813  00974C  C011  F2EA         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
 25814                           
 25815                           ; BSR set to: 14
 25816  009750  0012               	return		;funcret
 25817  009752                     __end_of_EUSART1_SetOverrunErrorHandler:
 25818                           	callstack 0
 25819                           
 25820 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
 25821 ;; Defined at:
 25822 ;;		line 264 in file "mcc_generated_files/eusart1.c"
 25823 ;; Parameters:    Size  Location     Type
 25824 ;;  interruptHan    2   15[COMRAM] PTR FTN()void 
 25825 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
 25826 ;; Auto vars:     Size  Location     Type
 25827 ;;		None
 25828 ;; Return value:  Size  Location     Type
 25829 ;;                  1    wreg      void 
 25830 ;; Registers used:
 25831 ;;		wreg, status,2, status,0
 25832 ;; Tracked objects:
 25833 ;;		On entry : 3F/E
 25834 ;;		On exit  : 3F/E
 25835 ;;		Unchanged: 3F/0
 25836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25837 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25838 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25840 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25841 ;;Total ram usage:        2 bytes
 25842 ;; Hardware stack levels used: 1
 25843 ;; Hardware stack levels required when called: 4
 25844 ;; This function calls:
 25845 ;;		Nothing
 25846 ;; This function is called by:
 25847 ;;		_EUSART1_Initialize
 25848 ;; This function uses a non-reentrant model
 25849 ;;
 25850                           
 25851                           	psect	text108
 25852  009752                     __ptext108:
 25853                           	callstack 0
 25854  009752                     _EUSART1_SetFramingErrorHandler:
 25855                           	callstack 24
 25856                           
 25857                           ; BSR set to: 14
 25858                           ;mcc_generated_files/eusart1.c: 265:     EUSART1_FramingErrorHandler = interruptHandler;
 25859                           
 25860                           ; BSR set to: 14
 25861                           ;incstack = 0
 25862  009752  C010  F2EB         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
 25863  009756  C011  F2EC         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
 25864                           
 25865                           ; BSR set to: 14
 25866  00975A  0012               	return		;funcret
 25867  00975C                     __end_of_EUSART1_SetFramingErrorHandler:
 25868                           	callstack 0
 25869                           
 25870 ;; *************** function _EUSART1_SetErrorHandler *****************
 25871 ;; Defined at:
 25872 ;;		line 272 in file "mcc_generated_files/eusart1.c"
 25873 ;; Parameters:    Size  Location     Type
 25874 ;;  interruptHan    2   15[COMRAM] PTR FTN()void 
 25875 ;;		 -> EUSART1_DefaultErrorHandler(1), 
 25876 ;; Auto vars:     Size  Location     Type
 25877 ;;		None
 25878 ;; Return value:  Size  Location     Type
 25879 ;;                  1    wreg      void 
 25880 ;; Registers used:
 25881 ;;		wreg, status,2, status,0
 25882 ;; Tracked objects:
 25883 ;;		On entry : 3F/E
 25884 ;;		On exit  : 3F/E
 25885 ;;		Unchanged: 3F/0
 25886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25887 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25890 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25891 ;;Total ram usage:        2 bytes
 25892 ;; Hardware stack levels used: 1
 25893 ;; Hardware stack levels required when called: 4
 25894 ;; This function calls:
 25895 ;;		Nothing
 25896 ;; This function is called by:
 25897 ;;		_EUSART1_Initialize
 25898 ;; This function uses a non-reentrant model
 25899 ;;
 25900                           
 25901                           	psect	text109
 25902  00975C                     __ptext109:
 25903                           	callstack 0
 25904  00975C                     _EUSART1_SetErrorHandler:
 25905                           	callstack 24
 25906                           
 25907                           ; BSR set to: 14
 25908                           ;mcc_generated_files/eusart1.c: 273:     EUSART1_ErrorHandler = interruptHandler;
 25909                           
 25910                           ; BSR set to: 14
 25911                           ;incstack = 0
 25912  00975C  C010  F2E7         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
 25913  009760  C011  F2E8         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
 25914                           
 25915                           ; BSR set to: 14
 25916  009764  0012               	return		;funcret
 25917  009766                     __end_of_EUSART1_SetErrorHandler:
 25918                           	callstack 0
 25919                           
 25920 ;; *************** function _ADCC_Initialize *****************
 25921 ;; Defined at:
 25922 ;;		line 62 in file "mcc_generated_files/adcc.c"
 25923 ;; Parameters:    Size  Location     Type
 25924 ;;		None
 25925 ;; Auto vars:     Size  Location     Type
 25926 ;;		None
 25927 ;; Return value:  Size  Location     Type
 25928 ;;                  1    wreg      void 
 25929 ;; Registers used:
 25930 ;;		wreg, status,2
 25931 ;; Tracked objects:
 25932 ;;		On entry : 3F/E
 25933 ;;		On exit  : 3F/F
 25934 ;;		Unchanged: 0/0
 25935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25939 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25940 ;;Total ram usage:        0 bytes
 25941 ;; Hardware stack levels used: 1
 25942 ;; Hardware stack levels required when called: 4
 25943 ;; This function calls:
 25944 ;;		Nothing
 25945 ;; This function is called by:
 25946 ;;		_SYSTEM_Initialize
 25947 ;; This function uses a non-reentrant model
 25948 ;;
 25949                           
 25950                           	psect	text110
 25951  008B0C                     __ptext110:
 25952                           	callstack 0
 25953  008B0C                     _ADCC_Initialize:
 25954                           	callstack 25
 25955                           
 25956                           ; BSR set to: 14
 25957                           ;mcc_generated_files/adcc.c: 66:     ADLTHL = 0x00;
 25958                           
 25959                           ; BSR set to: 14
 25960                           ;incstack = 0
 25961  008B0C  0E00               	movlw	0
 25962  008B0E  6E6A               	movwf	106,c	;volatile
 25963                           
 25964                           ;mcc_generated_files/adcc.c: 68:     ADLTHH = 0x00;
 25965  008B10  0E00               	movlw	0
 25966  008B12  6E6B               	movwf	107,c	;volatile
 25967                           
 25968                           ;mcc_generated_files/adcc.c: 70:     ADUTHL = 0x00;
 25969  008B14  0E00               	movlw	0
 25970  008B16  6E6C               	movwf	108,c	;volatile
 25971                           
 25972                           ;mcc_generated_files/adcc.c: 72:     ADUTHH = 0x00;
 25973  008B18  0E00               	movlw	0
 25974  008B1A  6E6D               	movwf	109,c	;volatile
 25975                           
 25976                           ;mcc_generated_files/adcc.c: 74:     ADSTPTL = 0x00;
 25977  008B1C  0E00               	movlw	0
 25978  008B1E  6E68               	movwf	104,c	;volatile
 25979                           
 25980                           ;mcc_generated_files/adcc.c: 76:     ADSTPTH = 0x00;
 25981  008B20  0E00               	movlw	0
 25982  008B22  6E69               	movwf	105,c	;volatile
 25983                           
 25984                           ;mcc_generated_files/adcc.c: 78:     ADRPT = 0x00;
 25985  008B24  0E00               	movlw	0
 25986  008B26  6E66               	movwf	102,c	;volatile
 25987                           
 25988                           ;mcc_generated_files/adcc.c: 80:     ADPCH = 0x00;
 25989  008B28  0E00               	movlw	0
 25990  008B2A  010F               	movlb	15	; () banked
 25991  008B2C  6F5F               	movwf	95,b	;volatile
 25992                           
 25993                           ;mcc_generated_files/adcc.c: 82:     ADCAP = 0x00;
 25994  008B2E  0E00               	movlw	0
 25995  008B30  6F5D               	movwf	93,b	;volatile
 25996                           
 25997                           ;mcc_generated_files/adcc.c: 84:     ADPRE = 0x00;
 25998  008B32  0E00               	movlw	0
 25999  008B34  6F5E               	movwf	94,b	;volatile
 26000                           
 26001                           ;mcc_generated_files/adcc.c: 86:     ADCON1 = 0x00;
 26002  008B36  0E00               	movlw	0
 26003  008B38  6F59               	movwf	89,b	;volatile
 26004                           
 26005                           ;mcc_generated_files/adcc.c: 88:     ADCON2 = 0x00;
 26006  008B3A  0E00               	movlw	0
 26007  008B3C  6F5A               	movwf	90,b	;volatile
 26008                           
 26009                           ;mcc_generated_files/adcc.c: 90:     ADCON3 = 0x00;
 26010  008B3E  0E00               	movlw	0
 26011  008B40  6F5B               	movwf	91,b	;volatile
 26012                           
 26013                           ;mcc_generated_files/adcc.c: 92:     ADSTAT = 0x00;
 26014  008B42  0E00               	movlw	0
 26015  008B44  6E65               	movwf	101,c	;volatile
 26016                           
 26017                           ;mcc_generated_files/adcc.c: 94:     ADREF = 0x00;
 26018  008B46  0E00               	movlw	0
 26019  008B48  6F58               	movwf	88,b	;volatile
 26020                           
 26021                           ;mcc_generated_files/adcc.c: 96:     ADACT = 0x00;
 26022  008B4A  0E00               	movlw	0
 26023  008B4C  6F56               	movwf	86,b	;volatile
 26024                           
 26025                           ;mcc_generated_files/adcc.c: 98:     ADCLK = 0x3F;
 26026  008B4E  0E3F               	movlw	63
 26027  008B50  6F57               	movwf	87,b	;volatile
 26028                           
 26029                           ;mcc_generated_files/adcc.c: 100:     ADCON0 = 0x80;
 26030  008B52  0E80               	movlw	128
 26031  008B54  6E60               	movwf	96,c	;volatile
 26032                           
 26033                           ;mcc_generated_files/adcc.c: 102:     ADACQ = 0x00;
 26034  008B56  0E00               	movlw	0
 26035  008B58  6F5C               	movwf	92,b	;volatile
 26036                           
 26037                           ; BSR set to: 15
 26038  008B5A  0012               	return		;funcret
 26039  008B5C                     __end_of_ADCC_Initialize:
 26040                           	callstack 0
 26041                           
 26042 ;; *************** function _EUSART1_is_rx_ready *****************
 26043 ;; Defined at:
 26044 ;;		line 137 in file "mcc_generated_files/eusart1.c"
 26045 ;; Parameters:    Size  Location     Type
 26046 ;;		None
 26047 ;; Auto vars:     Size  Location     Type
 26048 ;;		None
 26049 ;; Return value:  Size  Location     Type
 26050 ;;                  1    wreg      _Bool 
 26051 ;; Registers used:
 26052 ;;		wreg, status,2
 26053 ;; Tracked objects:
 26054 ;;		On entry : 0/1
 26055 ;;		On exit  : 3F/0
 26056 ;;		Unchanged: 0/0
 26057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26061 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26062 ;;Total ram usage:        0 bytes
 26063 ;; Hardware stack levels used: 1
 26064 ;; Hardware stack levels required when called: 4
 26065 ;; This function calls:
 26066 ;;		Nothing
 26067 ;; This function is called by:
 26068 ;;		_main
 26069 ;; This function uses a non-reentrant model
 26070 ;;
 26071                           
 26072                           	psect	text111
 26073  0096AA                     __ptext111:
 26074                           	callstack 0
 26075  0096AA                     _EUSART1_is_rx_ready:
 26076                           	callstack 26
 26077                           
 26078                           ;mcc_generated_files/eusart1.c: 139:     return (eusart1RxCount ? 1 : 0);
 26079                           
 26080                           ; BSR set to: 15
 26081                           ;incstack = 0
 26082  0096AA  0100               	movlb	0	; () banked
 26083  0096AC  5193               	movf	_eusart1RxCount& (0+255),w,b	;volatile
 26084  0096AE  B4D8               	btfsc	status,2,c
 26085  0096B0  D002               	goto	u18540
 26086  0096B2  0E01               	movlw	1
 26087  0096B4  0012               	return	
 26088  0096B6                     u18540:
 26089  0096B6  0E00               	movlw	0
 26090                           
 26091                           ; BSR set to: 0
 26092  0096B8  0012               	return		;funcret
 26093  0096BA                     __end_of_EUSART1_is_rx_ready:
 26094                           	callstack 0
 26095                           
 26096 ;; *************** function _ControlMotor *****************
 26097 ;; Defined at:
 26098 ;;		line 703 in file "outputs_MC50.c"
 26099 ;; Parameters:    Size  Location     Type
 26100 ;;		None
 26101 ;; Auto vars:     Size  Location     Type
 26102 ;;  stateMotor      1   23[COMRAM] enum E10381
 26103 ;; Return value:  Size  Location     Type
 26104 ;;                  1    wreg      void 
 26105 ;; Registers used:
 26106 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 26107 ;; Tracked objects:
 26108 ;;		On entry : 3E/1
 26109 ;;		On exit  : 3E/0
 26110 ;;		Unchanged: 0/0
 26111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26113 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26114 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26115 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26116 ;;Total ram usage:        7 bytes
 26117 ;; Hardware stack levels used: 1
 26118 ;; Hardware stack levels required when called: 5
 26119 ;; This function calls:
 26120 ;;		_VerifyElectricalBrake
 26121 ;; This function is called by:
 26122 ;;		_main
 26123 ;; This function uses a non-reentrant model
 26124 ;;
 26125                           
 26126                           	psect	text112
 26127  004CA2                     __ptext112:
 26128                           	callstack 0
 26129  004CA2                     _ControlMotor:
 26130                           	callstack 25
 26131                           
 26132                           ;outputs_MC50.c: 707:     if((var_sys.TimeMaxMotorIsON<=0) && (var_sys.WorkTimeMaxAlarmS
      +                          tate!=Clear) && (var_sys.LearningIsEnabled==NO) && (var_sys.PositionIsLost==NO)){
 26133                           
 26134                           ; BSR set to: 0
 26135                           ;incstack = 0
 26136  004CA2  0101               	movlb	1	; () banked
 26137  004CA4  5118               	movf	(_var_sys+24)& (0+255),w,b	;volatile
 26138  004CA6  1119               	iorwf	(_var_sys+25)& (0+255),w,b	;volatile
 26139  004CA8  111A               	iorwf	(_var_sys+26)& (0+255),w,b	;volatile
 26140  004CAA  111B               	iorwf	(_var_sys+27)& (0+255),w,b	;volatile
 26141  004CAC  A4D8               	btfss	status,2,c
 26142  004CAE  D00D               	goto	l17399
 26143                           
 26144                           ; BSR set to: 1
 26145  004CB0  5142               	movf	(_var_sys+66)& (0+255),w,b	;volatile
 26146  004CB2  B4D8               	btfsc	status,2,c
 26147  004CB4  D00A               	goto	l17399
 26148                           
 26149                           ; BSR set to: 1
 26150  004CB6  5126               	movf	(_var_sys+38)& (0+255),w,b	;volatile
 26151  004CB8  A4D8               	btfss	status,2,c
 26152  004CBA  D007               	goto	l17399
 26153                           
 26154                           ; BSR set to: 1
 26155  004CBC  5148               	movf	(_var_sys+72)& (0+255),w,b	;volatile
 26156  004CBE  A4D8               	btfss	status,2,c
 26157  004CC0  D004               	goto	l17399
 26158                           
 26159                           ; BSR set to: 1
 26160                           ;outputs_MC50.c: 708:         var_sys.StateMotor = Stopped;
 26161  004CC2  0E00               	movlw	0
 26162  004CC4  6F00               	movwf	_var_sys& (0+255),b	;volatile
 26163                           
 26164                           ;outputs_MC50.c: 709:         var_sys.WorkTimeMaxAlarmState=EmAlarme;
 26165  004CC6  0E02               	movlw	2
 26166  004CC8  D007               	goto	L100
 26167  004CCA                     l17399:
 26168                           
 26169                           ; BSR set to: 1
 26170  004CCA  0542               	decf	(_var_sys+66)& (0+255),w,b	;volatile
 26171  004CCC  A4D8               	btfss	status,2,c
 26172  004CCE  D005               	goto	l17405
 26173                           
 26174                           ; BSR set to: 1
 26175  004CD0  5100               	movf	_var_sys& (0+255),w,b	;volatile
 26176  004CD2  A4D8               	btfss	status,2,c
 26177  004CD4  D002               	goto	l17405
 26178                           
 26179                           ; BSR set to: 1
 26180                           ;outputs_MC50.c: 716:     {;outputs_MC50.c: 717:          var_sys.WorkTimeMaxAlarmState=
      +                          Clear;
 26181  004CD6  0E00               	movlw	0
 26182  004CD8                     L100:
 26183  004CD8  6F42               	movwf	(_var_sys+66)& (0+255),b	;volatile
 26184  004CDA                     l17405:
 26185                           
 26186                           ; BSR set to: 1
 26187                           ;outputs_MC50.c: 721:     stateMotor_enum stateMotor=VerifyElectricalBrake(var_sys.State
      +                          Motor);
 26188  004CDA  5100               	movf	_var_sys& (0+255),w,b	;volatile
 26189  004CDC  ECA7  F040         	call	_VerifyElectricalBrake
 26190  004CE0  6E18               	movwf	ControlMotor@stateMotor^0,c
 26191                           
 26192                           ;outputs_MC50.c: 722:     if(stateMotor == Stopped )
 26193  004CE2  5018               	movf	ControlMotor@stateMotor^0,w,c
 26194  004CE4  A4D8               	btfss	status,2,c
 26195  004CE6  D00A               	goto	l17415
 26196                           
 26197                           ;outputs_MC50.c: 723:     {;outputs_MC50.c: 724:         var_sys.InStoping = YES;
 26198  004CE8  0E01               	movlw	1
 26199  004CEA  0101               	movlb	1	; () banked
 26200  004CEC  6F0D               	movwf	(_var_sys+13)& (0+255),b	;volatile
 26201                           
 26202                           ; BSR set to: 1
 26203                           ;outputs_MC50.c: 725:         if(ts_system.ts_TRIACWait>=0)
 26204  004CEE  BFA2               	btfsc	(_ts_system+7)& (0+255),7,b	;volatile
 26205  004CF0  0012               	return	
 26206                           
 26207                           ; BSR set to: 1
 26208                           
 26209                           ;outputs_MC50.c: 726:         {;outputs_MC50.c: 727:             do { LATEbits.LATE1 = 0
      +                          ; } while(0);
 26210  004CF2  9287               	bcf	135,1,c	;volatile
 26211                           
 26212                           ; BSR set to: 1
 26213                           
 26214                           ;outputs_MC50.c: 728:             do { LATEbits.LATE0 = 0; } while(0);
 26215  004CF4  9087               	bcf	135,0,c	;volatile
 26216  004CF6                     l17413:
 26217                           
 26218                           ; BSR set to: 1
 26219                           ;outputs_MC50.c: 729:             var_sys.Activatecounter = stoped ;
 26220  004CF6  0E00               	movlw	0
 26221  004CF8  6F16               	movwf	(_var_sys+22)& (0+255),b	;volatile
 26222  004CFA  0012               	return	
 26223  004CFC                     l17415:
 26224  004CFC  0100               	movlb	0	; () banked
 26225  004CFE  05AF               	decf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 26226  004D00  A4D8               	btfss	status,2,c
 26227  004D02  D022               	goto	l17431
 26228                           
 26229                           ; BSR set to: 0
 26230  004D04  0579               	decf	(_brakeElectric_st+1)& (0+255),w,b
 26231  004D06  A4D8               	btfss	status,2,c
 26232  004D08  D01F               	goto	l17431
 26233                           
 26234                           ; BSR set to: 0
 26235  004D0A  0101               	movlb	1	; () banked
 26236  004D0C  5100               	movf	_var_sys& (0+255),w,b	;volatile
 26237  004D0E  A4D8               	btfss	status,2,c
 26238  004D10  D01B               	goto	l17431
 26239                           
 26240                           ; BSR set to: 1
 26241  004D12  5018               	movf	ControlMotor@stateMotor^0,w,c
 26242  004D14  A4D8               	btfss	status,2,c
 26243                           
 26244                           ; BSR set to: 1
 26245  004D16  BFC4               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 26246  004D18  D017               	goto	l17431
 26247  004D1A  51C4               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 26248  004D1C  E103               	bnz	u20490
 26249  004D1E  05C3               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 26250  004D20  A0D8               	btfss	status,0,c
 26251  004D22  D012               	goto	l17431
 26252  004D24                     u20490:
 26253                           
 26254                           ; BSR set to: 1
 26255  004D24  BFDC               	btfsc	(_ts_system+65)& (0+255),7,b	;volatile
 26256  004D26  D005               	goto	u20500
 26257  004D28  51DC               	movf	(_ts_system+65)& (0+255),w,b	;volatile
 26258  004D2A  E10E               	bnz	l17431
 26259  004D2C  05DB               	decf	(_ts_system+64)& (0+255),w,b	;volatile
 26260  004D2E  B0D8               	btfsc	status,0,c
 26261  004D30  D00B               	goto	l17431
 26262  004D32                     u20500:
 26263                           
 26264                           ; BSR set to: 1
 26265                           ;outputs_MC50.c: 739:     {;outputs_MC50.c: 742:         if ( ts_system.TimeElectricBrak
      +                          e<(((5+6)*( 100/50))-(2*( 100/50))) )
 26266  004D32  BFC4               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 26267  004D34  D006               	goto	u20510
 26268  004D36  51C4               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 26269  004D38  E103               	bnz	u20511
 26270  004D3A  0E12               	movlw	18
 26271  004D3C  5DC3               	subwf	(_ts_system+40)& (0+255),w,b	;volatile
 26272  004D3E  B0D8               	btfsc	status,0,c
 26273  004D40                     u20511:
 26274  004D40  0012               	return	
 26275  004D42                     u20510:
 26276                           
 26277                           ; BSR set to: 1
 26278                           
 26279                           ;outputs_MC50.c: 743:         {;outputs_MC50.c: 748:             do { LATEbits.LATE1 = 1
      +                          ; } while(0);
 26280  004D42  8287               	bsf	135,1,c	;volatile
 26281                           
 26282                           ; BSR set to: 1
 26283                           
 26284                           ;outputs_MC50.c: 749:             do { LATEbits.LATE0 = 1; } while(0);
 26285  004D44  8087               	bsf	135,0,c	;volatile
 26286  004D46  D7D7               	goto	l17413
 26287  004D48                     l17431:
 26288  004D48  0418               	decf	ControlMotor@stateMotor^0,w,c
 26289  004D4A  B4D8               	btfsc	status,2,c
 26290  004D4C  D004               	goto	u20530
 26291  004D4E  0E02               	movlw	2
 26292  004D50  1818               	xorwf	ControlMotor@stateMotor^0,w,c
 26293  004D52  A4D8               	btfss	status,2,c
 26294  004D54  D063               	goto	l17461
 26295  004D56                     u20530:
 26296  004D56  0101               	movlb	1	; () banked
 26297  004D58  5104               	movf	(_var_sys+4)& (0+255),w,b	;volatile
 26298  004D5A  A4D8               	btfss	status,2,c
 26299  004D5C  D05F               	goto	l17461
 26300                           
 26301                           ; BSR set to: 1
 26302                           ;outputs_MC50.c: 761:     {;outputs_MC50.c: 762:         if((PORTEbits.RE1==0 && var_sys
      +                          _NVM.Direction_motor == 0)||(PORTEbits.RE0==0 && var_sys_NVM.Direction_motor == 1))
 26303  004D5E  B291               	btfsc	145,1,c	;volatile
 26304  004D60  D004               	goto	u20560
 26305                           
 26306                           ; BSR set to: 1
 26307  004D62  0100               	movlb	0	; () banked
 26308  004D64  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 26309  004D66  B4D8               	btfsc	status,2,c
 26310  004D68  D006               	goto	u20580
 26311  004D6A                     u20560:
 26312  004D6A  B091               	btfsc	145,0,c	;volatile
 26313  004D6C  D04F               	goto	l2353
 26314  004D6E  0100               	movlb	0	; () banked
 26315  004D70  05B3               	decf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 26316  004D72  A4D8               	btfss	status,2,c
 26317  004D74  D04B               	goto	l2353
 26318  004D76                     u20580:
 26319                           
 26320                           ; BSR set to: 0
 26321                           ;outputs_MC50.c: 763:         {;outputs_MC50.c: 764:             if((PORTEbits.RE0==0 &&
      +                           var_sys_NVM.Direction_motor == 0)||(PORTEbits.RE1==0 && var_sys_NVM.Direction_motor == 
      +                          1))
 26322  004D76  B091               	btfsc	145,0,c	;volatile
 26323  004D78  D003               	goto	u20600
 26324                           
 26325                           ; BSR set to: 0
 26326  004D7A  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 26327  004D7C  B4D8               	btfsc	status,2,c
 26328  004D7E  D005               	goto	u20620
 26329  004D80                     u20600:
 26330                           
 26331                           ; BSR set to: 0
 26332  004D80  B291               	btfsc	145,1,c	;volatile
 26333  004D82  D03A               	goto	l17457
 26334                           
 26335                           ; BSR set to: 0
 26336  004D84  05B3               	decf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 26337  004D86  A4D8               	btfss	status,2,c
 26338  004D88  D037               	goto	l17457
 26339  004D8A                     u20620:
 26340                           
 26341                           ; BSR set to: 0
 26342                           ;outputs_MC50.c: 765:             {;outputs_MC50.c: 766:                 var_sys.InStopi
      +                          ng = NO;
 26343  004D8A  0E00               	movlw	0
 26344  004D8C  0101               	movlb	1	; () banked
 26345  004D8E  6F0D               	movwf	(_var_sys+13)& (0+255),b	;volatile
 26346                           
 26347                           ;outputs_MC50.c: 767:                 ts_system.ts_TRIACWait=200;
 26348  004D90  0E00               	movlw	0
 26349  004D92  6FA2               	movwf	(_ts_system+7)& (0+255),b	;volatile
 26350  004D94  0EC8               	movlw	200
 26351  004D96  6FA1               	movwf	(_ts_system+6)& (0+255),b	;volatile
 26352                           
 26353                           ;outputs_MC50.c: 768:                 ts_system.TimeChargeCondesador=(1000/50);
 26354  004D98  0E00               	movlw	0
 26355  004D9A  6FB6               	movwf	(_ts_system+27)& (0+255),b	;volatile
 26356  004D9C  0E14               	movlw	20
 26357  004D9E  6FB5               	movwf	(_ts_system+26)& (0+255),b	;volatile
 26358                           
 26359                           ; BSR set to: 1
 26360                           ;outputs_MC50.c: 769:                 if (var_sys.FimCurso_CloseIsEnabled == YES|| var_s
      +                          ys.Statedoorcontrol == st_Closed ){
 26361  004DA0  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
 26362  004DA2  B4D8               	btfsc	status,2,c
 26363  004DA4  D003               	goto	u20640
 26364                           
 26365                           ; BSR set to: 1
 26366  004DA6  051C               	decf	(_var_sys+28)& (0+255),w,b	;volatile
 26367  004DA8  A4D8               	btfss	status,2,c
 26368  004DAA  D024               	goto	l17455
 26369  004DAC                     u20640:
 26370                           
 26371                           ; BSR set to: 1
 26372                           ;outputs_MC50.c: 770:                 var_sys.TimeMaxMotorIsON=((unsigned int)var_sys_NV
      +                          M.velocityDecelaration+((unsigned int)var_sys_NVM.decelarationOpen)*( 500/50))+var_sys_N
      +                          VM.learningTimeToOpen + (1000/50)*4;
 26373  004DAC  0100               	movlb	0	; () banked
 26374  004DAE  5198               	movf	_var_sys_NVM& (0+255),w,b	;volatile
 26375  004DB0  0D0A               	mullw	10
 26376  004DB2  CFF3 F012          	movff	prodl,??_ControlMotor
 26377  004DB6  CFF4 F013          	movff	prodh,??_ControlMotor+1
 26378  004DBA  51B0               	movf	(_var_sys_NVM+24)& (0+255),w,b	;volatile
 26379  004DBC  2612               	addwf	??_ControlMotor^0,f,c
 26380  004DBE  0E00               	movlw	0
 26381  004DC0  2213               	addwfc	(??_ControlMotor+1)^0,f,c
 26382  004DC2  5012               	movf	??_ControlMotor^0,w,c
 26383  004DC4  25CC               	addwf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 26384  004DC6  6E14               	movwf	(??_ControlMotor+2)^0,c
 26385  004DC8  5013               	movf	(??_ControlMotor+1)^0,w,c
 26386  004DCA  21CD               	addwfc	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 26387  004DCC  6E15               	movwf	(??_ControlMotor+3)^0,c
 26388  004DCE  0E00               	movlw	0
 26389  004DD0  21CE               	addwfc	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 26390  004DD2  6E16               	movwf	(??_ControlMotor+4)^0,c
 26391  004DD4  0E00               	movlw	0
 26392  004DD6  21CF               	addwfc	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 26393  004DD8  6E17               	movwf	(??_ControlMotor+5)^0,c
 26394  004DDA  0E50               	movlw	80
 26395  004DDC  2414               	addwf	(??_ControlMotor+2)^0,w,c
 26396  004DDE  0101               	movlb	1	; () banked
 26397  004DE0  6F18               	movwf	(_var_sys+24)& (0+255),b	;volatile
 26398  004DE2  0E00               	movlw	0
 26399  004DE4  2015               	addwfc	(??_ControlMotor+3)^0,w,c
 26400  004DE6  6F19               	movwf	(_var_sys+25)& (0+255),b	;volatile
 26401  004DE8  0E00               	movlw	0
 26402  004DEA  2016               	addwfc	(??_ControlMotor+4)^0,w,c
 26403  004DEC  6F1A               	movwf	(_var_sys+26)& (0+255),b	;volatile
 26404  004DEE  0E00               	movlw	0
 26405  004DF0  2017               	addwfc	(??_ControlMotor+5)^0,w,c
 26406  004DF2  6F1B               	movwf	(_var_sys+27)& (0+255),b	;volatile
 26407  004DF4                     l17455:
 26408                           
 26409                           ; BSR set to: 1
 26410                           ;outputs_MC50.c: 775:                 var_sys.Statedoorcontrol = st_Opening;
 26411  004DF4  0E02               	movlw	2
 26412  004DF6  6F1C               	movwf	(_var_sys+28)& (0+255),b	;volatile
 26413  004DF8                     l17457:
 26414                           
 26415                           ;outputs_MC50.c: 779:             if (var_sys_NVM.Direction_motor == 0){do { LATEbits.LA
      +                          TE0 = 1; } while(0);}
 26416  004DF8  0100               	movlb	0	; () banked
 26417  004DFA  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 26418  004DFC  A4D8               	btfss	status,2,c
 26419  004DFE  D002               	goto	l2370
 26420                           
 26421                           ; BSR set to: 0
 26422  004E00  8087               	bsf	135,0,c	;volatile
 26423  004E02  D001               	goto	l17459
 26424  004E04                     l2370:
 26425                           
 26426                           ; BSR set to: 0
 26427  004E04  8287               	bsf	135,1,c	;volatile
 26428  004E06                     l17459:
 26429                           
 26430                           ; BSR set to: 0
 26431                           ;outputs_MC50.c: 781:             var_sys.Activatecounter = open ;
 26432  004E06  0E01               	movlw	1
 26433  004E08  0101               	movlb	1	; () banked
 26434  004E0A  6F16               	movwf	(_var_sys+22)& (0+255),b	;volatile
 26435  004E0C                     l2353:
 26436                           
 26437                           ;outputs_MC50.c: 785:            if (var_sys_NVM.Direction_motor == 0){do { LATEbits.LAT
      +                          E1 = 0; } while(0);}
 26438  004E0C  0100               	movlb	0	; () banked
 26439  004E0E  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 26440  004E10  A4D8               	btfss	status,2,c
 26441  004E12  D002               	goto	l2376
 26442                           
 26443                           ; BSR set to: 0
 26444  004E14  9287               	bcf	135,1,c	;volatile
 26445  004E16  0012               	return	
 26446  004E18                     l2376:
 26447                           
 26448                           ; BSR set to: 0
 26449  004E18  9087               	bcf	135,0,c	;volatile
 26450  004E1A  0012               	return	
 26451  004E1C                     l17461:
 26452  004E1C  0E03               	movlw	3
 26453  004E1E  1818               	xorwf	ControlMotor@stateMotor^0,w,c
 26454  004E20  A4D8               	btfss	status,2,c
 26455  004E22  0012               	return	
 26456  004E24  0101               	movlb	1	; () banked
 26457  004E26  5103               	movf	(_var_sys+3)& (0+255),w,b	;volatile
 26458  004E28  A4D8               	btfss	status,2,c
 26459  004E2A  0012               	return	
 26460                           
 26461                           ; BSR set to: 1
 26462                           ;outputs_MC50.c: 791:     {;outputs_MC50.c: 792:         if((PORTEbits.RE0==0 && var_sys
      +                          _NVM.Direction_motor == 0)||(PORTEbits.RE1==0 && var_sys_NVM.Direction_motor == 1))
 26463  004E2C  B091               	btfsc	145,0,c	;volatile
 26464  004E2E  D004               	goto	u20700
 26465                           
 26466                           ; BSR set to: 1
 26467  004E30  0100               	movlb	0	; () banked
 26468  004E32  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 26469  004E34  B4D8               	btfsc	status,2,c
 26470  004E36  D006               	goto	u20720
 26471  004E38                     u20700:
 26472  004E38  B291               	btfsc	145,1,c	;volatile
 26473  004E3A  D050               	goto	l2380
 26474  004E3C  0100               	movlb	0	; () banked
 26475  004E3E  05B3               	decf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 26476  004E40  A4D8               	btfss	status,2,c
 26477  004E42  D04C               	goto	l2380
 26478  004E44                     u20720:
 26479                           
 26480                           ; BSR set to: 0
 26481                           ;outputs_MC50.c: 793:         {;outputs_MC50.c: 794:             if((PORTEbits.RE1==0 &&
      +                           var_sys_NVM.Direction_motor == 0)||(PORTEbits.RE0==0 && var_sys_NVM.Direction_motor == 
      +                          1))
 26482  004E44  B291               	btfsc	145,1,c	;volatile
 26483  004E46  D003               	goto	u20740
 26484                           
 26485                           ; BSR set to: 0
 26486  004E48  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 26487  004E4A  B4D8               	btfsc	status,2,c
 26488  004E4C  D005               	goto	u20760
 26489  004E4E                     u20740:
 26490                           
 26491                           ; BSR set to: 0
 26492  004E4E  B091               	btfsc	145,0,c	;volatile
 26493  004E50  D03B               	goto	l17485
 26494                           
 26495                           ; BSR set to: 0
 26496  004E52  05B3               	decf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 26497  004E54  A4D8               	btfss	status,2,c
 26498  004E56  D038               	goto	l17485
 26499  004E58                     u20760:
 26500                           
 26501                           ; BSR set to: 0
 26502                           ;outputs_MC50.c: 795:             {;outputs_MC50.c: 796:                 var_sys.InStopi
      +                          ng = NO;
 26503  004E58  0E00               	movlw	0
 26504  004E5A  0101               	movlb	1	; () banked
 26505  004E5C  6F0D               	movwf	(_var_sys+13)& (0+255),b	;volatile
 26506                           
 26507                           ;outputs_MC50.c: 797:                 ts_system.ts_TRIACWait=200;
 26508  004E5E  0E00               	movlw	0
 26509  004E60  6FA2               	movwf	(_ts_system+7)& (0+255),b	;volatile
 26510  004E62  0EC8               	movlw	200
 26511  004E64  6FA1               	movwf	(_ts_system+6)& (0+255),b	;volatile
 26512                           
 26513                           ;outputs_MC50.c: 798:                 ts_system.TimeChargeCondesador=(1000/50);
 26514  004E66  0E00               	movlw	0
 26515  004E68  6FB6               	movwf	(_ts_system+27)& (0+255),b	;volatile
 26516  004E6A  0E14               	movlw	20
 26517  004E6C  6FB5               	movwf	(_ts_system+26)& (0+255),b	;volatile
 26518                           
 26519                           ; BSR set to: 1
 26520                           ;outputs_MC50.c: 799:                 if (var_sys.FimCurso_OpenIsEnabled == YES|| var_sy
      +                          s.Statedoorcontrol == st_Opened){
 26521  004E6E  0504               	decf	(_var_sys+4)& (0+255),w,b	;volatile
 26522  004E70  B4D8               	btfsc	status,2,c
 26523  004E72  D004               	goto	u20780
 26524                           
 26525                           ; BSR set to: 1
 26526  004E74  0E04               	movlw	4
 26527  004E76  191C               	xorwf	(_var_sys+28)& (0+255),w,b	;volatile
 26528  004E78  A4D8               	btfss	status,2,c
 26529  004E7A  D024               	goto	l17483
 26530  004E7C                     u20780:
 26531                           
 26532                           ; BSR set to: 1
 26533                           ;outputs_MC50.c: 800:                 var_sys.TimeMaxMotorIsON=((unsigned int)var_sys_NV
      +                          M.velocityDecelaration+(unsigned int)var_sys_NVM.decelarationClose*( 500/50))+var_sys_NV
      +                          M.learningTimeToClose + (1000/50)*4;
 26534  004E7C  0100               	movlb	0	; () banked
 26535  004E7E  5199               	movf	(_var_sys_NVM+1)& (0+255),w,b	;volatile
 26536  004E80  0D0A               	mullw	10
 26537  004E82  CFF3 F012          	movff	prodl,??_ControlMotor
 26538  004E86  CFF4 F013          	movff	prodh,??_ControlMotor+1
 26539  004E8A  51B0               	movf	(_var_sys_NVM+24)& (0+255),w,b	;volatile
 26540  004E8C  2612               	addwf	??_ControlMotor^0,f,c
 26541  004E8E  0E00               	movlw	0
 26542  004E90  2213               	addwfc	(??_ControlMotor+1)^0,f,c
 26543  004E92  5012               	movf	??_ControlMotor^0,w,c
 26544  004E94  25D0               	addwf	(_var_sys_NVM+56)& (0+255),w,b	;volatile
 26545  004E96  6E14               	movwf	(??_ControlMotor+2)^0,c
 26546  004E98  5013               	movf	(??_ControlMotor+1)^0,w,c
 26547  004E9A  21D1               	addwfc	(_var_sys_NVM+57)& (0+255),w,b	;volatile
 26548  004E9C  6E15               	movwf	(??_ControlMotor+3)^0,c
 26549  004E9E  0E00               	movlw	0
 26550  004EA0  21D2               	addwfc	(_var_sys_NVM+58)& (0+255),w,b	;volatile
 26551  004EA2  6E16               	movwf	(??_ControlMotor+4)^0,c
 26552  004EA4  0E00               	movlw	0
 26553  004EA6  21D3               	addwfc	(_var_sys_NVM+59)& (0+255),w,b	;volatile
 26554  004EA8  6E17               	movwf	(??_ControlMotor+5)^0,c
 26555  004EAA  0E50               	movlw	80
 26556  004EAC  2414               	addwf	(??_ControlMotor+2)^0,w,c
 26557  004EAE  0101               	movlb	1	; () banked
 26558  004EB0  6F18               	movwf	(_var_sys+24)& (0+255),b	;volatile
 26559  004EB2  0E00               	movlw	0
 26560  004EB4  2015               	addwfc	(??_ControlMotor+3)^0,w,c
 26561  004EB6  6F19               	movwf	(_var_sys+25)& (0+255),b	;volatile
 26562  004EB8  0E00               	movlw	0
 26563  004EBA  2016               	addwfc	(??_ControlMotor+4)^0,w,c
 26564  004EBC  6F1A               	movwf	(_var_sys+26)& (0+255),b	;volatile
 26565  004EBE  0E00               	movlw	0
 26566  004EC0  2017               	addwfc	(??_ControlMotor+5)^0,w,c
 26567  004EC2  6F1B               	movwf	(_var_sys+27)& (0+255),b	;volatile
 26568  004EC4                     l17483:
 26569                           
 26570                           ; BSR set to: 1
 26571                           ;outputs_MC50.c: 803:                 var_sys.Statedoorcontrol = st_Closing;
 26572  004EC4  0E03               	movlw	3
 26573  004EC6  6F1C               	movwf	(_var_sys+28)& (0+255),b	;volatile
 26574  004EC8                     l17485:
 26575                           
 26576                           ;outputs_MC50.c: 806:             if (var_sys_NVM.Direction_motor == 0){do { LATEbits.LA
      +                          TE1 = 1; } while(0);}
 26577  004EC8  0100               	movlb	0	; () banked
 26578  004ECA  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 26579  004ECC  A4D8               	btfss	status,2,c
 26580  004ECE  D002               	goto	l2397
 26581                           
 26582                           ; BSR set to: 0
 26583  004ED0  8287               	bsf	135,1,c	;volatile
 26584  004ED2  D001               	goto	l17487
 26585  004ED4                     l2397:
 26586                           
 26587                           ; BSR set to: 0
 26588  004ED4  8087               	bsf	135,0,c	;volatile
 26589  004ED6                     l17487:
 26590                           
 26591                           ; BSR set to: 0
 26592                           ;outputs_MC50.c: 808:             var_sys.Activatecounter = close ;
 26593  004ED6  0E02               	movlw	2
 26594  004ED8  0101               	movlb	1	; () banked
 26595  004EDA  6F16               	movwf	(_var_sys+22)& (0+255),b	;volatile
 26596  004EDC                     l2380:
 26597                           
 26598                           ;outputs_MC50.c: 811:            if (var_sys_NVM.Direction_motor == 0){do { LATEbits.LAT
      +                          E0 = 0; } while(0);}
 26599  004EDC  0100               	movlb	0	; () banked
 26600  004EDE  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 26601  004EE0  A4D8               	btfss	status,2,c
 26602  004EE2  D002               	goto	l2403
 26603                           
 26604                           ; BSR set to: 0
 26605  004EE4  9087               	bcf	135,0,c	;volatile
 26606  004EE6  0012               	return	
 26607  004EE8                     l2403:
 26608                           
 26609                           ; BSR set to: 0
 26610  004EE8  9287               	bcf	135,1,c	;volatile
 26611  004EEA  0012               	return		;funcret
 26612  004EEC                     __end_of_ControlMotor:
 26613                           	callstack 0
 26614                           
 26615 ;; *************** function _VerifyElectricalBrake *****************
 26616 ;; Defined at:
 26617 ;;		line 658 in file "outputs_MC50.c"
 26618 ;; Parameters:    Size  Location     Type
 26619 ;;  actualState     1    wreg     enum E10381
 26620 ;; Auto vars:     Size  Location     Type
 26621 ;;  actualState     1   16[COMRAM] enum E10381
 26622 ;;  tempState       1   15[COMRAM] enum E10381
 26623 ;; Return value:  Size  Location     Type
 26624 ;;                  1    wreg      enum E10381
 26625 ;; Registers used:
 26626 ;;		wreg, status,2, status,0
 26627 ;; Tracked objects:
 26628 ;;		On entry : 3F/1
 26629 ;;		On exit  : 3E/0
 26630 ;;		Unchanged: 0/0
 26631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26633 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26635 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26636 ;;Total ram usage:        2 bytes
 26637 ;; Hardware stack levels used: 1
 26638 ;; Hardware stack levels required when called: 4
 26639 ;; This function calls:
 26640 ;;		Nothing
 26641 ;; This function is called by:
 26642 ;;		_ControlMotor
 26643 ;; This function uses a non-reentrant model
 26644 ;;
 26645                           
 26646                           	psect	text113
 26647  00814E                     __ptext113:
 26648                           	callstack 0
 26649  00814E                     _VerifyElectricalBrake:
 26650                           	callstack 25
 26651                           
 26652                           ;incstack = 0
 26653                           ;VerifyElectricalBrake@actualState stored from wreg
 26654  00814E  6E11               	movwf	VerifyElectricalBrake@actualState^0,c
 26655                           
 26656                           ;outputs_MC50.c: 658: stateMotor_enum VerifyElectricalBrake(stateMotor_enum actualState)
      +                          ;outputs_MC50.c: 659: {;outputs_MC50.c: 660:     stateMotor_enum tempState;;outputs_MC50
      +                          .c: 661:     tempState=actualState;
 26657  008150  C011  F010         	movff	VerifyElectricalBrake@actualState,VerifyElectricalBrake@tempState
 26658                           
 26659                           ;outputs_MC50.c: 662:     if(var_sys_NVM.electricBrake==1 && actualState==Stopped && ts_
      +                          system.TimeStopElectricBrake<=0)
 26660  008154  0100               	movlb	0	; () banked
 26661  008156  05AF               	decf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 26662  008158  A4D8               	btfss	status,2,c
 26663  00815A  D02E               	goto	l2323
 26664                           
 26665                           ; BSR set to: 0
 26666  00815C  5011               	movf	VerifyElectricalBrake@actualState^0,w,c
 26667  00815E  A4D8               	btfss	status,2,c
 26668  008160  D02B               	goto	l2323
 26669                           
 26670                           ; BSR set to: 0
 26671  008162  0101               	movlb	1	; () banked
 26672  008164  BFDC               	btfsc	(_ts_system+65)& (0+255),7,b	;volatile
 26673  008166  D005               	goto	u15610
 26674  008168  51DC               	movf	(_ts_system+65)& (0+255),w,b	;volatile
 26675  00816A  E126               	bnz	l2323
 26676  00816C  05DB               	decf	(_ts_system+64)& (0+255),w,b	;volatile
 26677  00816E  B0D8               	btfsc	status,0,c
 26678  008170  D023               	goto	l2323
 26679  008172                     u15610:
 26680                           
 26681                           ; BSR set to: 1
 26682                           ;outputs_MC50.c: 663:     {;outputs_MC50.c: 664:         if(actualState!=brakeElectric_s
      +                          t.lastState && brakeElectric_st.ElectricBrakeIsActive==NO )
 26683  008172  5011               	movf	VerifyElectricalBrake@actualState^0,w,c
 26684  008174  0100               	movlb	0	; () banked
 26685  008176  1978               	xorwf	_brakeElectric_st& (0+255),w,b
 26686  008178  B4D8               	btfsc	status,2,c
 26687  00817A  D00B               	goto	l15021
 26688                           
 26689                           ; BSR set to: 0
 26690  00817C  5179               	movf	(_brakeElectric_st+1)& (0+255),w,b
 26691  00817E  A4D8               	btfss	status,2,c
 26692  008180  D008               	goto	l15021
 26693                           
 26694                           ; BSR set to: 0
 26695                           ;outputs_MC50.c: 665:         {;outputs_MC50.c: 666:             brakeElectric_st.Electr
      +                          icBrakeIsActive=YES;
 26696  008182  0E01               	movlw	1
 26697  008184  6F79               	movwf	(_brakeElectric_st+1)& (0+255),b
 26698                           
 26699                           ;outputs_MC50.c: 668:             ts_system.TimeElectricBrake=((5+6)*( 100/50));
 26700  008186  0E00               	movlw	0
 26701  008188  0101               	movlb	1	; () banked
 26702  00818A  6FC4               	movwf	(_ts_system+41)& (0+255),b	;volatile
 26703  00818C  0E16               	movlw	22
 26704  00818E  6FC3               	movwf	(_ts_system+40)& (0+255),b	;volatile
 26705                           
 26706                           ;outputs_MC50.c: 670:         }
 26707  008190  D018               	goto	l2328
 26708  008192                     l15021:
 26709                           
 26710                           ; BSR set to: 0
 26711  008192  0579               	decf	(_brakeElectric_st+1)& (0+255),w,b
 26712  008194  A4D8               	btfss	status,2,c
 26713  008196  D00B               	goto	l15027
 26714                           
 26715                           ; BSR set to: 0
 26716  008198  0101               	movlb	1	; () banked
 26717  00819A  BFC4               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 26718  00819C  D008               	goto	l15027
 26719  00819E  51C4               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 26720  0081A0  E103               	bnz	u15650
 26721  0081A2  05C3               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 26722  0081A4  A0D8               	btfss	status,0,c
 26723  0081A6  D003               	goto	l15027
 26724  0081A8                     u15650:
 26725                           
 26726                           ; BSR set to: 1
 26727                           ;outputs_MC50.c: 672:         {;outputs_MC50.c: 673:             tempState=InOpenFull;
 26728  0081A8  0E01               	movlw	1
 26729  0081AA  6E10               	movwf	VerifyElectricalBrake@tempState^0,c
 26730                           
 26731                           ;outputs_MC50.c: 686:         }
 26732  0081AC  D00A               	goto	l2328
 26733  0081AE                     l15027:
 26734                           
 26735                           ;outputs_MC50.c: 688:         {;outputs_MC50.c: 689:             brakeElectric_st.lastSt
      +                          ate=Stopped;
 26736  0081AE  0E00               	movlw	0
 26737  0081B0  0100               	movlb	0	; () banked
 26738  0081B2  6F78               	movwf	_brakeElectric_st& (0+255),b
 26739                           
 26740                           ;outputs_MC50.c: 690:             brakeElectric_st.ElectricBrakeIsActive=NO;
 26741  0081B4  0E00               	movlw	0
 26742  0081B6  D004               	goto	L101
 26743  0081B8                     l2323:
 26744                           
 26745                           ;outputs_MC50.c: 695:     {;outputs_MC50.c: 696:         brakeElectric_st.lastState=actu
      +                          alState;
 26746  0081B8  C011  F078         	movff	VerifyElectricalBrake@actualState,_brakeElectric_st
 26747                           
 26748                           ;outputs_MC50.c: 697:         brakeElectric_st.ElectricBrakeIsActive=NO;
 26749  0081BC  0E00               	movlw	0
 26750  0081BE  0100               	movlb	0	; () banked
 26751  0081C0                     L101:
 26752  0081C0  6F79               	movwf	(_brakeElectric_st+1)& (0+255),b
 26753  0081C2                     l2328:
 26754                           
 26755                           ;outputs_MC50.c: 700:     return tempState;
 26756  0081C2  5010               	movf	VerifyElectricalBrake@tempState^0,w,c
 26757  0081C4  0012               	return		;funcret
 26758  0081C6                     __end_of_VerifyElectricalBrake:
 26759                           	callstack 0
 26760                           
 26761 ;; *************** function _ControlLights *****************
 26762 ;; Defined at:
 26763 ;;		line 816 in file "outputs_MC50.c"
 26764 ;; Parameters:    Size  Location     Type
 26765 ;;		None
 26766 ;; Auto vars:     Size  Location     Type
 26767 ;;		None
 26768 ;; Return value:  Size  Location     Type
 26769 ;;                  1    wreg      void 
 26770 ;; Registers used:
 26771 ;;		wreg, status,2, status,0, cstack
 26772 ;; Tracked objects:
 26773 ;;		On entry : 3E/1
 26774 ;;		On exit  : 3E/0
 26775 ;;		Unchanged: 0/0
 26776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26780 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26781 ;;Total ram usage:        0 bytes
 26782 ;; Hardware stack levels used: 1
 26783 ;; Hardware stack levels required when called: 6
 26784 ;; This function calls:
 26785 ;;		_setFlashLigth_ON
 26786 ;;		_setRGB_ON
 26787 ;; This function is called by:
 26788 ;;		_main
 26789 ;; This function uses a non-reentrant model
 26790 ;;
 26791                           
 26792                           	psect	text114
 26793  003F32                     __ptext114:
 26794                           	callstack 0
 26795  003F32                     _ControlLights:
 26796                           	callstack 24
 26797                           
 26798                           ;outputs_MC50.c: 818:     if(var_sys.DistanceProgrammingActive==YES)
 26799                           
 26800                           ;incstack = 0
 26801  003F32  0101               	movlb	1	; () banked
 26802  003F34  0540               	decf	(_var_sys+64)& (0+255),w,b	;volatile
 26803  003F36  A4D8               	btfss	status,2,c
 26804  003F38  D007               	goto	l17493
 26805                           
 26806                           ; BSR set to: 1
 26807                           ;outputs_MC50.c: 819:     {;outputs_MC50.c: 820:         setFlashLigth_ON((1000/50));
 26808  003F3A  0E00               	movlw	0
 26809  003F3C  6E11               	movwf	(setFlashLigth_ON@Freq+1)^0,c
 26810  003F3E  0E14               	movlw	20
 26811  003F40  6E10               	movwf	setFlashLigth_ON@Freq^0,c
 26812  003F42  EC74  F047         	call	_setFlashLigth_ON	;wreg free
 26813                           
 26814                           ;outputs_MC50.c: 821:     }
 26815  003F46  D010               	goto	l17499
 26816  003F48                     l17493:
 26817                           
 26818                           ; BSR set to: 1
 26819  003F48  51E3               	movf	_controlGate_stateMachine& (0+255),w,b
 26820  003F4A  11E4               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
 26821  003F4C  A4D8               	btfss	status,2,c
 26822  003F4E  D00C               	goto	l17499
 26823                           
 26824                           ; BSR set to: 1
 26825                           ;outputs_MC50.c: 823:     {;outputs_MC50.c: 824:         var_sys.ControlReleCapacitorOpe
      +                          n = 0;
 26826  003F50  0E00               	movlw	0
 26827  003F52  6F28               	movwf	(_var_sys+40)& (0+255),b	;volatile
 26828                           
 26829                           ;outputs_MC50.c: 825:         var_sys.ControlReleCapacitorClose = 0;
 26830  003F54  0E00               	movlw	0
 26831  003F56  6F29               	movwf	(_var_sys+41)& (0+255),b	;volatile
 26832                           
 26833                           ; BSR set to: 1
 26834                           ;outputs_MC50.c: 826:         if (var_sys_NVM.flashLightMode !=3){
 26835  003F58  0E03               	movlw	3
 26836  003F5A  0100               	movlb	0	; () banked
 26837  003F5C  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 26838  003F5E  B4D8               	btfsc	status,2,c
 26839  003F60  D002               	goto	l2415
 26840                           
 26841                           ; BSR set to: 0
 26842                           
 26843                           ;outputs_MC50.c: 827:            do { LATEbits.LATE2 = 0; } while(0);
 26844  003F62  9487               	bcf	135,2,c	;volatile
 26845  003F64  D001               	goto	l17499
 26846  003F66                     l2415:
 26847                           
 26848                           ; BSR set to: 0
 26849  003F66  8487               	bsf	135,2,c	;volatile
 26850  003F68                     l17499:
 26851                           
 26852                           ;outputs_MC50.c: 835:     if (((var_sys.preflashingcontrol == YES || controlGate_stateMa
      +                          chine.current_state==st_Opened) && (ts_system.timeWaitToClose >0) && (ts_system.timeWait
      +                          ToClose <= 3 * (1000/50))) && var_sys_NVM.flashRGBMode == rgb_pre){
 26853  003F68  0101               	movlb	1	; () banked
 26854  003F6A  051D               	decf	(_var_sys+29)& (0+255),w,b	;volatile
 26855  003F6C  B4D8               	btfsc	status,2,c
 26856  003F6E  D005               	goto	u20850
 26857                           
 26858                           ; BSR set to: 1
 26859  003F70  0E04               	movlw	4
 26860  003F72  19E3               	xorwf	_controlGate_stateMachine& (0+255),w,b
 26861  003F74  11E4               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
 26862  003F76  A4D8               	btfss	status,2,c
 26863  003F78  D01C               	goto	l17511
 26864  003F7A                     u20850:
 26865                           
 26866                           ; BSR set to: 1
 26867  003F7A  BFAE               	btfsc	(_ts_system+19)& (0+255),7,b	;volatile
 26868  003F7C  D01A               	goto	l17511
 26869  003F7E  51AE               	movf	(_ts_system+19)& (0+255),w,b	;volatile
 26870  003F80  E103               	bnz	u20860
 26871  003F82  05AD               	decf	(_ts_system+18)& (0+255),w,b	;volatile
 26872  003F84  A0D8               	btfss	status,0,c
 26873  003F86  D015               	goto	l17511
 26874  003F88                     u20860:
 26875                           
 26876                           ; BSR set to: 1
 26877  003F88  BFAE               	btfsc	(_ts_system+19)& (0+255),7,b	;volatile
 26878  003F8A  D006               	goto	u20870
 26879  003F8C  51AE               	movf	(_ts_system+19)& (0+255),w,b	;volatile
 26880  003F8E  E111               	bnz	l17511
 26881  003F90  0E3D               	movlw	61
 26882  003F92  5DAD               	subwf	(_ts_system+18)& (0+255),w,b	;volatile
 26883  003F94  B0D8               	btfsc	status,0,c
 26884  003F96  D00D               	goto	l17511
 26885  003F98                     u20870:
 26886                           
 26887                           ; BSR set to: 1
 26888  003F98  0E02               	movlw	2
 26889  003F9A  0100               	movlb	0	; () banked
 26890  003F9C  19B1               	xorwf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 26891  003F9E  A4D8               	btfss	status,2,c
 26892  003FA0  D008               	goto	l17511
 26893                           
 26894                           ; BSR set to: 0
 26895                           ;outputs_MC50.c: 836:         setRGB_ON(BLUE,( 200/50));
 26896  003FA2  0E00               	movlw	0
 26897  003FA4  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 26898  003FA6  0E04               	movlw	4
 26899  003FA8  6E11               	movwf	setRGB_ON@Freq^0,c
 26900  003FAA  0E01               	movlw	1
 26901  003FAC  EC46  F03D         	call	_setRGB_ON
 26902                           
 26903                           ;outputs_MC50.c: 838:     }
 26904  003FB0  0012               	return	
 26905  003FB2                     l17511:
 26906  003FB2  0E03               	movlw	3
 26907  003FB4  0101               	movlb	1	; () banked
 26908  003FB6  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 26909  003FB8  A4D8               	btfss	status,2,c
 26910  003FBA  D04F               	goto	l17541
 26911                           
 26912                           ; BSR set to: 1
 26913                           ;outputs_MC50.c: 842:     {;outputs_MC50.c: 843:         var_sys.ControlReleCapacitorOpe
      +                          n = 0;
 26914  003FBC  0E00               	movlw	0
 26915  003FBE  6F28               	movwf	(_var_sys+40)& (0+255),b	;volatile
 26916                           
 26917                           ;outputs_MC50.c: 846:         if (var_sys.ControlReleCapacitorClose==0 && var_sys_NVM.fl
      +                          ashRGBMode==rgb_capacitor)
 26918  003FC0  5129               	movf	(_var_sys+41)& (0+255),w,b	;volatile
 26919  003FC2  A4D8               	btfss	status,2,c
 26920  003FC4  D013               	goto	l17523
 26921                           
 26922                           ; BSR set to: 1
 26923  003FC6  0E03               	movlw	3
 26924  003FC8  0100               	movlb	0	; () banked
 26925  003FCA  19B1               	xorwf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 26926  003FCC  A4D8               	btfss	status,2,c
 26927  003FCE  D00E               	goto	l17523
 26928                           
 26929                           ; BSR set to: 0
 26930                           ;outputs_MC50.c: 847:         {;outputs_MC50.c: 848:          ts_system.TimeReleCapacito
      +                          r = (1000/50)*2;
 26931  003FD0  0E00               	movlw	0
 26932  003FD2  0101               	movlb	1	; () banked
 26933  003FD4  6FDE               	movwf	(_ts_system+67)& (0+255),b	;volatile
 26934  003FD6  0E28               	movlw	40
 26935  003FD8  6FDD               	movwf	(_ts_system+66)& (0+255),b	;volatile
 26936                           
 26937                           ; BSR set to: 1
 26938                           ;outputs_MC50.c: 849:             setRGB_ON(YELLOW,0);
 26939  003FDA  0E00               	movlw	0
 26940  003FDC  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 26941  003FDE  0E00               	movlw	0
 26942  003FE0  6E11               	movwf	setRGB_ON@Freq^0,c
 26943  003FE2  0E04               	movlw	4
 26944  003FE4  EC46  F03D         	call	_setRGB_ON
 26945                           
 26946                           ; BSR set to: 1
 26947                           ;outputs_MC50.c: 850:          var_sys.ControlReleCapacitorClose = 1;
 26948  003FE8  0E01               	movlw	1
 26949  003FEA  6F29               	movwf	(_var_sys+41)& (0+255),b	;volatile
 26950  003FEC                     l17523:
 26951                           
 26952                           ;outputs_MC50.c: 852:         if(ts_system.TimeReleCapacitor<=0 && var_sys_NVM.flashRGBM
      +                          ode==rgb_capacitor)
 26953  003FEC  0101               	movlb	1	; () banked
 26954  003FEE  BFDE               	btfsc	(_ts_system+67)& (0+255),7,b	;volatile
 26955  003FF0  D005               	goto	u20920
 26956  003FF2  51DE               	movf	(_ts_system+67)& (0+255),w,b	;volatile
 26957  003FF4  E105               	bnz	l17527
 26958  003FF6  05DD               	decf	(_ts_system+66)& (0+255),w,b	;volatile
 26959  003FF8  B0D8               	btfsc	status,0,c
 26960  003FFA  D002               	goto	l17527
 26961  003FFC                     u20920:
 26962                           
 26963                           ; BSR set to: 1
 26964  003FFC  0100               	movlb	0	; () banked
 26965  003FFE  51B1               	movf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 26966  004000                     l17527:
 26967                           
 26968                           ;outputs_MC50.c: 858:         if(var_sys_NVM.flashRGBMode==rgb_pisca && ts_system.TimeRe
      +                          leCapacitor<=0)
 26969  004000  0100               	movlb	0	; () banked
 26970  004002  05B1               	decf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 26971  004004  A4D8               	btfss	status,2,c
 26972  004006  D010               	goto	l17533
 26973                           
 26974                           ; BSR set to: 0
 26975  004008  0101               	movlb	1	; () banked
 26976  00400A  BFDE               	btfsc	(_ts_system+67)& (0+255),7,b	;volatile
 26977  00400C  D005               	goto	u20940
 26978  00400E  51DE               	movf	(_ts_system+67)& (0+255),w,b	;volatile
 26979  004010  E10B               	bnz	l17533
 26980  004012  05DD               	decf	(_ts_system+66)& (0+255),w,b	;volatile
 26981  004014  B0D8               	btfsc	status,0,c
 26982  004016  D008               	goto	l17533
 26983  004018                     u20940:
 26984                           
 26985                           ; BSR set to: 1
 26986                           ;outputs_MC50.c: 860:         {;outputs_MC50.c: 861:             setRGB_ON(RED,( 200/50)
      +                           +( 50/50));
 26987  004018  0E00               	movlw	0
 26988  00401A  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 26989  00401C  0E05               	movlw	5
 26990  00401E  6E11               	movwf	setRGB_ON@Freq^0,c
 26991  004020  0E03               	movlw	3
 26992  004022  EC46  F03D         	call	_setRGB_ON
 26993                           
 26994                           ;outputs_MC50.c: 862:         }
 26995  004026  D007               	goto	l17535
 26996  004028                     l17533:
 26997                           
 26998                           ;outputs_MC50.c: 864:         {;outputs_MC50.c: 865:             setRGB_ON(RED,0);
 26999  004028  0E00               	movlw	0
 27000  00402A  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 27001  00402C  0E00               	movlw	0
 27002  00402E  6E11               	movwf	setRGB_ON@Freq^0,c
 27003  004030  0E03               	movlw	3
 27004  004032  EC46  F03D         	call	_setRGB_ON
 27005  004036                     l17535:
 27006                           
 27007                           ; BSR set to: 1
 27008                           ;outputs_MC50.c: 868:         if(var_sys_NVM.flashLightMode==fixo)
 27009  004036  0100               	movlb	0	; () banked
 27010  004038  51A5               	movf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 27011  00403A  A4D8               	btfss	status,2,c
 27012  00403C  D007               	goto	l17539
 27013                           
 27014                           ; BSR set to: 0
 27015                           ;outputs_MC50.c: 869:         {;outputs_MC50.c: 871:             setFlashLigth_ON(( 500/
      +                          50));
 27016  00403E  0E00               	movlw	0
 27017  004040  6E11               	movwf	(setFlashLigth_ON@Freq+1)^0,c
 27018  004042  0E0A               	movlw	10
 27019  004044  6E10               	movwf	setFlashLigth_ON@Freq^0,c
 27020  004046  EC74  F047         	call	_setFlashLigth_ON	;wreg free
 27021                           
 27022                           ;outputs_MC50.c: 873:         }
 27023  00404A  0012               	return	
 27024  00404C                     l17539:
 27025                           
 27026                           ;outputs_MC50.c: 875:             setFlashLigth_ON(0);
 27027  00404C  0E00               	movlw	0
 27028  00404E  6E11               	movwf	(setFlashLigth_ON@Freq+1)^0,c
 27029  004050  0E00               	movlw	0
 27030  004052  6E10               	movwf	setFlashLigth_ON@Freq^0,c
 27031  004054  EC74  F047         	call	_setFlashLigth_ON	;wreg free
 27032  004058  0012               	return	
 27033  00405A                     l17541:
 27034                           
 27035                           ; BSR set to: 1
 27036  00405A  5100               	movf	_var_sys& (0+255),w,b	;volatile
 27037  00405C  A4D8               	btfss	status,2,c
 27038  00405E  D042               	goto	l17569
 27039                           
 27040                           ; BSR set to: 1
 27041  004060  05E3               	decf	_controlGate_stateMachine& (0+255),w,b
 27042  004062  11E4               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
 27043  004064  A4D8               	btfss	status,2,c
 27044  004066  D03E               	goto	l17569
 27045                           
 27046                           ; BSR set to: 1
 27047                           ;outputs_MC50.c: 881:     {;outputs_MC50.c: 882:         if(var_sys.preflashingcontrol !
      +                          = YES){
 27048  004068  051D               	decf	(_var_sys+29)& (0+255),w,b	;volatile
 27049  00406A  A4D8               	btfss	status,2,c
 27050                           
 27051                           ; BSR set to: 1
 27052                           
 27053                           ;outputs_MC50.c: 883:             do { LATAbits.LATA7 = 1; } while(0);
 27054  00406C  8E83               	bsf	131,7,c	;volatile
 27055                           
 27056                           ; BSR set to: 1
 27057                           ;outputs_MC50.c: 888:         if(var_sys_NVM.flashRGBMode==rgb_pisca)
 27058  00406E  0100               	movlb	0	; () banked
 27059  004070  05B1               	decf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 27060  004072  A4D8               	btfss	status,2,c
 27061  004074  D017               	goto	l17557
 27062                           
 27063                           ; BSR set to: 0
 27064                           ;outputs_MC50.c: 889:         {;outputs_MC50.c: 890:             if (var_sys_NVM.TypeofM
      +                          otor == br || var_sys_NVM.TypeofMotor == SE)setRGB_ON(YELLOW,0);
 27065  004076  0E02               	movlw	2
 27066  004078  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 27067  00407A  B4D8               	btfsc	status,2,c
 27068  00407C  D003               	goto	u21010
 27069                           
 27070                           ; BSR set to: 0
 27071  00407E  05B4               	decf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 27072  004080  A4D8               	btfss	status,2,c
 27073  004082  D008               	goto	l17555
 27074  004084                     u21010:
 27075                           
 27076                           ; BSR set to: 0
 27077  004084  0E00               	movlw	0
 27078  004086  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 27079  004088  0E00               	movlw	0
 27080  00408A  6E11               	movwf	setRGB_ON@Freq^0,c
 27081  00408C  0E04               	movlw	4
 27082  00408E  EC46  F03D         	call	_setRGB_ON
 27083  004092  D013               	goto	l17561
 27084  004094                     l17555:
 27085                           
 27086                           ; BSR set to: 0
 27087  004094  0E00               	movlw	0
 27088  004096  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 27089  004098  0E28               	movlw	40
 27090  00409A  6E11               	movwf	setRGB_ON@Freq^0,c
 27091  00409C  0E04               	movlw	4
 27092  00409E  EC46  F03D         	call	_setRGB_ON
 27093  0040A2  D00B               	goto	l17561
 27094  0040A4                     l17557:
 27095                           
 27096                           ; BSR set to: 0
 27097  0040A4  0E03               	movlw	3
 27098  0040A6  19B1               	xorwf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 27099  0040A8  B4D8               	btfsc	status,2,c
 27100  0040AA  D007               	goto	l17561
 27101                           
 27102                           ; BSR set to: 0
 27103  0040AC  0E00               	movlw	0
 27104  0040AE  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 27105  0040B0  0E00               	movlw	0
 27106  0040B2  6E11               	movwf	setRGB_ON@Freq^0,c
 27107  0040B4  0E04               	movlw	4
 27108  0040B6  EC46  F03D         	call	_setRGB_ON
 27109  0040BA                     l17561:
 27110                           
 27111                           ;outputs_MC50.c: 895:         if (var_sys_NVM.flashLightMode != electroiman)
 27112  0040BA  0E03               	movlw	3
 27113  0040BC  0100               	movlb	0	; () banked
 27114  0040BE  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 27115  0040C0  B4D8               	btfsc	status,2,c
 27116  0040C2  0012               	return	
 27117                           
 27118                           ; BSR set to: 0
 27119                           ;outputs_MC50.c: 896:         {;outputs_MC50.c: 897:         if (ts_system.TimeOnFlashLi
      +                          gth>0)
 27120  0040C4  0101               	movlb	1	; () banked
 27121  0040C6  BFBE               	btfsc	(_ts_system+35)& (0+255),7,b	;volatile
 27122  0040C8  D007               	goto	l2443
 27123  0040CA  51BE               	movf	(_ts_system+35)& (0+255),w,b	;volatile
 27124  0040CC  11BD               	iorwf	(_ts_system+34)& (0+255),w,b	;volatile
 27125  0040CE  11BC               	iorwf	(_ts_system+33)& (0+255),w,b	;volatile
 27126  0040D0  E1BD               	bnz	l17539
 27127  0040D2  05BB               	decf	(_ts_system+32)& (0+255),w,b	;volatile
 27128  0040D4  B0D8               	btfsc	status,0,c
 27129  0040D6  D7BA               	goto	l17539
 27130  0040D8                     l2443:
 27131                           
 27132                           ; BSR set to: 1
 27133  0040D8  9487               	bcf	135,2,c	;volatile
 27134                           
 27135                           ; BSR set to: 1
 27136                           ;outputs_MC50.c: 904:             ts_system.timeFreqFlashligth=0;
 27137  0040DA  0E00               	movlw	0
 27138  0040DC  6FBA               	movwf	(_ts_system+31)& (0+255),b	;volatile
 27139  0040DE  0E00               	movlw	0
 27140  0040E0  6FB9               	movwf	(_ts_system+30)& (0+255),b	;volatile
 27141                           
 27142                           ; BSR set to: 0
 27143                           ;outputs_MC50.c: 907:     }
 27144                           
 27145                           ;outputs_MC50.c: 906:         }
 27146  0040E2  0012               	return	
 27147  0040E4                     l17569:
 27148                           
 27149                           ; BSR set to: 1
 27150  0040E4  5100               	movf	_var_sys& (0+255),w,b	;volatile
 27151  0040E6  A4D8               	btfss	status,2,c
 27152  0040E8  D048               	goto	l17603
 27153                           
 27154                           ; BSR set to: 1
 27155                           ;outputs_MC50.c: 911:     {;outputs_MC50.c: 912:         if (( var_sys_NVM.autoTimeFullC
      +                          lose==0 && var_sys.StateMotor == InOpenFull)||((var_sys_NVM.autoTimeWalkClose==0) && var
      +                          _sys_NVM.walkTime >0 && var_sys.StateMotor == InOpenWalk))
 27156  0040EA  0100               	movlb	0	; () banked
 27157  0040EC  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 27158  0040EE  A4D8               	btfss	status,2,c
 27159  0040F0  D004               	goto	u21070
 27160                           
 27161                           ; BSR set to: 0
 27162  0040F2  0101               	movlb	1	; () banked
 27163  0040F4  0500               	decf	_var_sys& (0+255),w,b	;volatile
 27164  0040F6  B4D8               	btfsc	status,2,c
 27165  0040F8  D00C               	goto	u21100
 27166  0040FA                     u21070:
 27167  0040FA  0100               	movlb	0	; () banked
 27168  0040FC  519E               	movf	(_var_sys_NVM+6)& (0+255),w,b	;volatile
 27169  0040FE  A4D8               	btfss	status,2,c
 27170  004100  D017               	goto	l17587
 27171                           
 27172                           ; BSR set to: 0
 27173  004102  519C               	movf	(_var_sys_NVM+4)& (0+255),w,b	;volatile
 27174  004104  B4D8               	btfsc	status,2,c
 27175  004106  D014               	goto	l17587
 27176                           
 27177                           ; BSR set to: 0
 27178  004108  0E02               	movlw	2
 27179  00410A  0101               	movlb	1	; () banked
 27180  00410C  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 27181  00410E  A4D8               	btfss	status,2,c
 27182  004110  D00F               	goto	l17587
 27183  004112                     u21100:
 27184                           
 27185                           ; BSR set to: 1
 27186                           ;outputs_MC50.c: 913:         {;outputs_MC50.c: 916:             var_sys.ControlReleCapa
      +                          citorOpen = 0;
 27187  004112  0E00               	movlw	0
 27188  004114  6F28               	movwf	(_var_sys+40)& (0+255),b	;volatile
 27189                           
 27190                           ;outputs_MC50.c: 917:             var_sys.ControlReleCapacitorClose = 0;
 27191  004116  0E00               	movlw	0
 27192  004118  6F29               	movwf	(_var_sys+41)& (0+255),b	;volatile
 27193                           
 27194                           ; BSR set to: 1
 27195                           ;outputs_MC50.c: 921:             if (var_sys_NVM.flashLightMode != electroiman && var_s
      +                          ys_NVM.flashLightMode != condominio ){
 27196  00411A  0E03               	movlw	3
 27197  00411C  0100               	movlb	0	; () banked
 27198  00411E  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 27199  004120  B4D8               	btfsc	status,2,c
 27200  004122  0012               	return	
 27201                           
 27202                           ; BSR set to: 0
 27203  004124  0E02               	movlw	2
 27204  004126  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 27205  004128  B4D8               	btfsc	status,2,c
 27206  00412A  0012               	return	
 27207                           
 27208                           ; BSR set to: 0
 27209                           
 27210                           ;outputs_MC50.c: 922:               do { LATEbits.LATE2 = 0; } while(0);
 27211  00412C  9487               	bcf	135,2,c	;volatile
 27212  00412E  0012               	return	
 27213  004130                     l17587:
 27214                           
 27215                           ;outputs_MC50.c: 927:         {;outputs_MC50.c: 928:             if(var_sys_NVM.flashRGB
      +                          Mode==rgb_pisca)
 27216  004130  0100               	movlb	0	; () banked
 27217  004132  05B1               	decf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 27218  004134  A4D8               	btfss	status,2,c
 27219  004136  D008               	goto	l17591
 27220                           
 27221                           ; BSR set to: 0
 27222                           ;outputs_MC50.c: 929:             {;outputs_MC50.c: 930:                 setRGB_ON(BLUE,
      +                          (1000/50));
 27223  004138  0E00               	movlw	0
 27224  00413A  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 27225  00413C  0E14               	movlw	20
 27226  00413E  6E11               	movwf	setRGB_ON@Freq^0,c
 27227  004140  0E01               	movlw	1
 27228  004142  EC46  F03D         	call	_setRGB_ON
 27229                           
 27230                           ;outputs_MC50.c: 932:             }
 27231  004146  D007               	goto	l17593
 27232  004148                     l17591:
 27233                           
 27234                           ; BSR set to: 0
 27235                           ;outputs_MC50.c: 934:             {;outputs_MC50.c: 935:                 setRGB_ON(BLUE,
      +                          0);
 27236  004148  0E00               	movlw	0
 27237  00414A  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 27238  00414C  0E00               	movlw	0
 27239  00414E  6E11               	movwf	setRGB_ON@Freq^0,c
 27240  004150  0E01               	movlw	1
 27241  004152  EC46  F03D         	call	_setRGB_ON
 27242  004156                     l17593:
 27243                           
 27244                           ; BSR set to: 1
 27245                           ;outputs_MC50.c: 939:             if(var_sys_NVM.flashLightMode==pisca ||var_sys_NVM.fla
      +                          shLightMode==electroiman)
 27246  004156  0100               	movlb	0	; () banked
 27247  004158  05A5               	decf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 27248  00415A  B4D8               	btfsc	status,2,c
 27249  00415C  D004               	goto	u21150
 27250                           
 27251                           ; BSR set to: 0
 27252  00415E  0E03               	movlw	3
 27253  004160  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 27254  004162  A4D8               	btfss	status,2,c
 27255  004164  D002               	goto	l17597
 27256  004166                     u21150:
 27257                           
 27258                           ; BSR set to: 0
 27259                           
 27260                           ;outputs_MC50.c: 940:             {;outputs_MC50.c: 941:                  do { LATEbits.
      +                          LATE2 = 0; } while(0);
 27261  004166  9487               	bcf	135,2,c	;volatile
 27262  004168  0012               	return	
 27263  00416A                     l17597:
 27264                           
 27265                           ; BSR set to: 0
 27266  00416A  51A5               	movf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 27267  00416C  B4D8               	btfsc	status,2,c
 27268  00416E  D76E               	goto	l17539
 27269                           
 27270                           ; BSR set to: 0
 27271  004170  0E02               	movlw	2
 27272  004172  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 27273  004174  A4D8               	btfss	status,2,c
 27274  004176  0012               	return	
 27275  004178  D769               	goto	l17539
 27276  00417A                     l17603:
 27277                           
 27278                           ; BSR set to: 1
 27279                           ;outputs_MC50.c: 955:     {;outputs_MC50.c: 957:         var_sys.ControlReleCapacitorClo
      +                          se=0;
 27280  00417A  0E00               	movlw	0
 27281  00417C  6F29               	movwf	(_var_sys+41)& (0+255),b	;volatile
 27282                           
 27283                           ;outputs_MC50.c: 958:         if (var_sys.ControlReleCapacitorOpen==0 && var_sys_NVM.fla
      +                          shRGBMode==rgb_capacitor)
 27284  00417E  5128               	movf	(_var_sys+40)& (0+255),w,b	;volatile
 27285  004180  A4D8               	btfss	status,2,c
 27286  004182  D00C               	goto	l17609
 27287                           
 27288                           ; BSR set to: 1
 27289  004184  0E03               	movlw	3
 27290  004186  0100               	movlb	0	; () banked
 27291  004188  19B1               	xorwf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 27292  00418A  A4D8               	btfss	status,2,c
 27293  00418C  D007               	goto	l17609
 27294                           
 27295                           ; BSR set to: 0
 27296                           ;outputs_MC50.c: 959:         {;outputs_MC50.c: 960:          ts_system.TimeReleCapacito
      +                          r = (1000/50)*2;
 27297  00418E  0E00               	movlw	0
 27298  004190  0101               	movlb	1	; () banked
 27299  004192  6FDE               	movwf	(_ts_system+67)& (0+255),b	;volatile
 27300  004194  0E28               	movlw	40
 27301  004196  6FDD               	movwf	(_ts_system+66)& (0+255),b	;volatile
 27302                           
 27303                           ;outputs_MC50.c: 962:          var_sys.ControlReleCapacitorOpen = 1;
 27304  004198  0E01               	movlw	1
 27305  00419A  6F28               	movwf	(_var_sys+40)& (0+255),b	;volatile
 27306  00419C                     l17609:
 27307                           
 27308                           ;outputs_MC50.c: 964:         if(ts_system.TimeReleCapacitor <=0 && var_sys_NVM.flashRGB
      +                          Mode==rgb_capacitor)
 27309  00419C  0101               	movlb	1	; () banked
 27310  00419E  BFDE               	btfsc	(_ts_system+67)& (0+255),7,b	;volatile
 27311  0041A0  D005               	goto	u21200
 27312  0041A2  51DE               	movf	(_ts_system+67)& (0+255),w,b	;volatile
 27313  0041A4  E105               	bnz	l17613
 27314  0041A6  05DD               	decf	(_ts_system+66)& (0+255),w,b	;volatile
 27315  0041A8  B0D8               	btfsc	status,0,c
 27316  0041AA  D002               	goto	l17613
 27317  0041AC                     u21200:
 27318                           
 27319                           ; BSR set to: 1
 27320  0041AC  0100               	movlb	0	; () banked
 27321  0041AE  51B1               	movf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 27322  0041B0                     l17613:
 27323                           
 27324                           ;outputs_MC50.c: 969:         if (controlGate_stateMachine.current_state==st_Opened)
 27325  0041B0  0E04               	movlw	4
 27326  0041B2  0101               	movlb	1	; () banked
 27327  0041B4  19E3               	xorwf	_controlGate_stateMachine& (0+255),w,b
 27328  0041B6  11E4               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
 27329  0041B8  A4D8               	btfss	status,2,c
 27330  0041BA  D01B               	goto	l17625
 27331                           
 27332                           ; BSR set to: 1
 27333                           ;outputs_MC50.c: 970:         {;outputs_MC50.c: 973:             var_sys.ControlReleCapa
      +                          citorOpen = 0;
 27334  0041BC  0E00               	movlw	0
 27335  0041BE  6F28               	movwf	(_var_sys+40)& (0+255),b	;volatile
 27336                           
 27337                           ;outputs_MC50.c: 974:             var_sys.ControlReleCapacitorClose = 0;
 27338  0041C0  0E00               	movlw	0
 27339  0041C2  6F29               	movwf	(_var_sys+41)& (0+255),b	;volatile
 27340                           
 27341                           ;outputs_MC50.c: 977:             if (var_sys_NVM.autoTimeFullClose != 0 || ((var_sys_NV
      +                          M.autoTimeWalkClose!=0) && var_sys_NVM.walkTime >0)|| var_sys_NVM.operationMode==2)
 27342  0041C4  0100               	movlb	0	; () banked
 27343  0041C6  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 27344  0041C8  A4D8               	btfss	status,2,c
 27345  0041CA  D00A               	goto	u21250
 27346                           
 27347                           ; BSR set to: 0
 27348  0041CC  519E               	movf	(_var_sys_NVM+6)& (0+255),w,b	;volatile
 27349  0041CE  B4D8               	btfsc	status,2,c
 27350  0041D0  D003               	goto	u21240
 27351                           
 27352                           ; BSR set to: 0
 27353  0041D2  519C               	movf	(_var_sys_NVM+4)& (0+255),w,b	;volatile
 27354  0041D4  A4D8               	btfss	status,2,c
 27355  0041D6  D004               	goto	u21250
 27356  0041D8                     u21240:
 27357                           
 27358                           ; BSR set to: 0
 27359  0041D8  0E02               	movlw	2
 27360  0041DA  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 27361  0041DC  A4D8               	btfss	status,2,c
 27362  0041DE  D007               	goto	l2477
 27363  0041E0                     u21250:
 27364                           
 27365                           ; BSR set to: 0
 27366                           ;outputs_MC50.c: 978:             {;outputs_MC50.c: 979:                    setRGB_ON(BL
      +                          UE,0);
 27367  0041E0  0E00               	movlw	0
 27368  0041E2  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 27369  0041E4  0E00               	movlw	0
 27370  0041E6  6E11               	movwf	setRGB_ON@Freq^0,c
 27371  0041E8  0E01               	movlw	1
 27372  0041EA  EC46  F03D         	call	_setRGB_ON
 27373  0041EE                     l2477:
 27374  0041EE  9487               	bcf	135,2,c	;volatile
 27375  0041F0  0012               	return	
 27376  0041F2                     l17625:
 27377                           
 27378                           ; BSR set to: 1
 27379                           ;outputs_MC50.c: 993:         {;outputs_MC50.c: 996:             if(var_sys_NVM.flashRGB
      +                          Mode==rgb_pisca)
 27380  0041F2  0100               	movlb	0	; () banked
 27381  0041F4  05B1               	decf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 27382  0041F6  A4D8               	btfss	status,2,c
 27383  0041F8  D008               	goto	l17629
 27384                           
 27385                           ; BSR set to: 0
 27386                           ;outputs_MC50.c: 997:             {;outputs_MC50.c: 998:                 setRGB_ON(GREEN
      +                          ,( 500/50));
 27387  0041FA  0E00               	movlw	0
 27388  0041FC  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 27389  0041FE  0E0A               	movlw	10
 27390  004200  6E11               	movwf	setRGB_ON@Freq^0,c
 27391  004202  0E02               	movlw	2
 27392  004204  EC46  F03D         	call	_setRGB_ON
 27393                           
 27394                           ;outputs_MC50.c: 999:             }
 27395  004208  D007               	goto	l17631
 27396  00420A                     l17629:
 27397                           
 27398                           ; BSR set to: 0
 27399                           ;outputs_MC50.c: 1001:             {;outputs_MC50.c: 1002:                 setRGB_ON(GRE
      +                          EN,0);
 27400  00420A  0E00               	movlw	0
 27401  00420C  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 27402  00420E  0E00               	movlw	0
 27403  004210  6E11               	movwf	setRGB_ON@Freq^0,c
 27404  004212  0E02               	movlw	2
 27405  004214  EC46  F03D         	call	_setRGB_ON
 27406  004218                     l17631:
 27407                           
 27408                           ; BSR set to: 1
 27409                           ;outputs_MC50.c: 1006:             if(var_sys_NVM.flashLightMode==fixo)
 27410  004218  0100               	movlb	0	; () banked
 27411  00421A  51A5               	movf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 27412  00421C  A4D8               	btfss	status,2,c
 27413  00421E  D007               	goto	l17635
 27414                           
 27415                           ; BSR set to: 0
 27416                           ;outputs_MC50.c: 1007:             {;outputs_MC50.c: 1010:                 setFlashLigth
      +                          _ON((1000/50));
 27417  004220  0E00               	movlw	0
 27418  004222  6E11               	movwf	(setFlashLigth_ON@Freq+1)^0,c
 27419  004224  0E14               	movlw	20
 27420  004226  6E10               	movwf	setFlashLigth_ON@Freq^0,c
 27421  004228  EC74  F047         	call	_setFlashLigth_ON	;wreg free
 27422                           
 27423                           ;outputs_MC50.c: 1011:             }
 27424  00422C  D00D               	goto	l17641
 27425  00422E                     l17635:
 27426                           
 27427                           ; BSR set to: 0
 27428  00422E  05A5               	decf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 27429  004230  B4D8               	btfsc	status,2,c
 27430  004232  D004               	goto	u21290
 27431                           
 27432                           ; BSR set to: 0
 27433  004234  0E02               	movlw	2
 27434  004236  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 27435  004238  A4D8               	btfss	status,2,c
 27436  00423A  D006               	goto	l17641
 27437  00423C                     u21290:
 27438                           
 27439                           ; BSR set to: 0
 27440                           ;outputs_MC50.c: 1013:             {;outputs_MC50.c: 1014:                 setFlashLigth
      +                          _ON(0);
 27441  00423C  0E00               	movlw	0
 27442  00423E  6E11               	movwf	(setFlashLigth_ON@Freq+1)^0,c
 27443  004240  0E00               	movlw	0
 27444  004242  6E10               	movwf	setFlashLigth_ON@Freq^0,c
 27445  004244  EC74  F047         	call	_setFlashLigth_ON	;wreg free
 27446  004248                     l17641:
 27447                           
 27448                           ;outputs_MC50.c: 1017:             if (var_sys_NVM.flashLightMode == electroiman)
 27449  004248  0E03               	movlw	3
 27450  00424A  0100               	movlb	0	; () banked
 27451  00424C  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 27452  00424E  A4D8               	btfss	status,2,c
 27453  004250  0012               	return	
 27454                           
 27455                           ; BSR set to: 0
 27456                           
 27457                           ;outputs_MC50.c: 1018:             {;outputs_MC50.c: 1019:             do { LATEbits.LAT
      +                          E2 = 0; } while(0);
 27458  004252  9487               	bcf	135,2,c	;volatile
 27459  004254  0012               	return		;funcret
 27460  004256                     __end_of_ControlLights:
 27461                           	callstack 0
 27462                           
 27463 ;; *************** function _setRGB_ON *****************
 27464 ;; Defined at:
 27465 ;;		line 1028 in file "outputs_MC50.c"
 27466 ;; Parameters:    Size  Location     Type
 27467 ;;  RGBLigth        1    wreg     enum E10611
 27468 ;;  Freq            2   16[COMRAM] int 
 27469 ;; Auto vars:     Size  Location     Type
 27470 ;;  RGBLigth        1   20[COMRAM] enum E10611
 27471 ;; Return value:  Size  Location     Type
 27472 ;;                  1    wreg      void 
 27473 ;; Registers used:
 27474 ;;		wreg, status,2, status,0, cstack
 27475 ;; Tracked objects:
 27476 ;;		On entry : 3E/0
 27477 ;;		On exit  : 3F/1
 27478 ;;		Unchanged: 0/0
 27479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27480 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27481 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27482 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27483 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27484 ;;Total ram usage:        5 bytes
 27485 ;; Hardware stack levels used: 1
 27486 ;; Hardware stack levels required when called: 5
 27487 ;; This function calls:
 27488 ;;		_RGB_Set
 27489 ;; This function is called by:
 27490 ;;		_ControlLights
 27491 ;; This function uses a non-reentrant model
 27492 ;;
 27493                           
 27494                           	psect	text115
 27495  007A8C                     __ptext115:
 27496                           	callstack 0
 27497  007A8C                     _setRGB_ON:
 27498                           	callstack 24
 27499                           
 27500                           ;incstack = 0
 27501                           ;setRGB_ON@RGBLigth stored from wreg
 27502  007A8C  6E15               	movwf	setRGB_ON@RGBLigth^0,c
 27503                           
 27504                           ;outputs_MC50.c: 1028: void setRGB_ON(RGBY_enum RGBLigth,int Freq);outputs_MC50.c: 1029:
      +                           {;outputs_MC50.c: 1031:     do { LATAbits.LATA7 = 1; } while(0);
 27505  007A8E  8E83               	bsf	131,7,c	;volatile
 27506                           
 27507                           ;outputs_MC50.c: 1037:     if(Freq==0 || var_sys.upFaseRGB==1)
 27508  007A90  5011               	movf	setRGB_ON@Freq^0,w,c
 27509  007A92  1012               	iorwf	(setRGB_ON@Freq+1)^0,w,c
 27510  007A94  B4D8               	btfsc	status,2,c
 27511  007A96  D015               	goto	l15059
 27512  007A98  0101               	movlb	1	; () banked
 27513  007A9A  0524               	decf	(_var_sys+36)& (0+255),w,b	;volatile
 27514  007A9C  B4D8               	btfsc	status,2,c
 27515  007A9E  D011               	goto	l15059
 27516  007AA0  D024               	goto	l15061
 27517  007AA2                     l15049:
 27518                           
 27519                           ;outputs_MC50.c: 1043:                 RGB_Set(0x20);
 27520  007AA2  0E20               	movlw	32
 27521  007AA4  EC65  F04B         	call	_RGB_Set
 27522                           
 27523                           ;outputs_MC50.c: 1044:             break;
 27524  007AA8  D020               	goto	l15061
 27525  007AAA                     l15051:
 27526                           
 27527                           ;outputs_MC50.c: 1047:                 RGB_Set(0x04);
 27528  007AAA  0E04               	movlw	4
 27529  007AAC  EC65  F04B         	call	_RGB_Set
 27530                           
 27531                           ;outputs_MC50.c: 1048:             break;
 27532  007AB0  D01C               	goto	l15061
 27533  007AB2                     l15053:
 27534                           
 27535                           ;outputs_MC50.c: 1051:                 RGB_Set(0x00);
 27536  007AB2  0E00               	movlw	0
 27537  007AB4  EC65  F04B         	call	_RGB_Set
 27538                           
 27539                           ;outputs_MC50.c: 1052:             break;
 27540  007AB8  D018               	goto	l15061
 27541  007ABA                     l15055:
 27542                           
 27543                           ;outputs_MC50.c: 1055:                 RGB_Set(0x24);
 27544  007ABA  0E24               	movlw	36
 27545  007ABC  EC65  F04B         	call	_RGB_Set
 27546                           
 27547                           ;outputs_MC50.c: 1056:             break;
 27548  007AC0  D014               	goto	l15061
 27549  007AC2                     l15059:
 27550  007AC2  5015               	movf	setRGB_ON@RGBLigth^0,w,c
 27551  007AC4  6E13               	movwf	??_setRGB_ON^0,c
 27552  007AC6  6A14               	clrf	(??_setRGB_ON+1)^0,c
 27553                           
 27554                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 27555                           ; Switch size 1, requested type "simple"
 27556                           ; Number of cases is 1, Range of values is 0 to 0
 27557                           ; switch strategies available:
 27558                           ; Name         Instructions Cycles
 27559                           ; simple_byte            4     3 (average)
 27560                           ;	Chosen strategy is simple_byte
 27561  007AC8  5014               	movf	(??_setRGB_ON+1)^0,w,c
 27562  007ACA  0A00               	xorlw	0	; case 0
 27563  007ACC  A4D8               	btfss	status,2,c
 27564  007ACE  D00D               	goto	l15061
 27565                           
 27566                           ; Switch size 1, requested type "simple"
 27567                           ; Number of cases is 4, Range of values is 1 to 4
 27568                           ; switch strategies available:
 27569                           ; Name         Instructions Cycles
 27570                           ; simple_byte           13     7 (average)
 27571                           ;	Chosen strategy is simple_byte
 27572  007AD0  5013               	movf	??_setRGB_ON^0,w,c
 27573  007AD2  0A01               	xorlw	1	; case 1
 27574  007AD4  B4D8               	btfsc	status,2,c
 27575  007AD6  D7ED               	goto	l15053
 27576  007AD8  0A03               	xorlw	3	; case 2
 27577  007ADA  B4D8               	btfsc	status,2,c
 27578  007ADC  D7E6               	goto	l15051
 27579  007ADE  0A01               	xorlw	1	; case 3
 27580  007AE0  B4D8               	btfsc	status,2,c
 27581  007AE2  D7DF               	goto	l15049
 27582  007AE4  0A07               	xorlw	7	; case 4
 27583  007AE6  B4D8               	btfsc	status,2,c
 27584  007AE8  D7E8               	goto	l15055
 27585  007AEA                     l15061:
 27586                           
 27587                           ;outputs_MC50.c: 1061:     if(ts_system.timeFreqRGB<=0 && Freq!=0)
 27588  007AEA  0101               	movlb	1	; () banked
 27589  007AEC  BFB8               	btfsc	(_ts_system+29)& (0+255),7,b	;volatile
 27590  007AEE  D005               	goto	u15720
 27591  007AF0  51B8               	movf	(_ts_system+29)& (0+255),w,b	;volatile
 27592  007AF2  E113               	bnz	l2507
 27593  007AF4  05B7               	decf	(_ts_system+28)& (0+255),w,b	;volatile
 27594  007AF6  B0D8               	btfsc	status,0,c
 27595  007AF8  0012               	return	
 27596  007AFA                     u15720:
 27597                           
 27598                           ; BSR set to: 1
 27599  007AFA  5011               	movf	setRGB_ON@Freq^0,w,c
 27600  007AFC  1012               	iorwf	(setRGB_ON@Freq+1)^0,w,c
 27601  007AFE  B4D8               	btfsc	status,2,c
 27602  007B00  0012               	return	
 27603                           
 27604                           ; BSR set to: 1
 27605                           ;outputs_MC50.c: 1062:     {;outputs_MC50.c: 1063:         ts_system.timeFreqRGB=Freq;
 27606  007B02  C011  F1B7         	movff	setRGB_ON@Freq,_ts_system+28	;volatile
 27607  007B06  C012  F1B8         	movff	setRGB_ON@Freq+1,_ts_system+29	;volatile
 27608                           
 27609                           ; BSR set to: 1
 27610                           ;outputs_MC50.c: 1064:         if(var_sys.upFaseRGB==1)
 27611  007B0A  0524               	decf	(_var_sys+36)& (0+255),w,b	;volatile
 27612  007B0C  A4D8               	btfss	status,2,c
 27613  007B0E  D003               	goto	l15071
 27614                           
 27615                           ; BSR set to: 1
 27616                           ;outputs_MC50.c: 1065:         {;outputs_MC50.c: 1066:             var_sys.upFaseRGB=0;
 27617  007B10  0E00               	movlw	0
 27618  007B12  6F24               	movwf	(_var_sys+36)& (0+255),b	;volatile
 27619                           
 27620                           ;outputs_MC50.c: 1067:         }
 27621  007B14  0012               	return	
 27622  007B16                     l15071:
 27623                           
 27624                           ; BSR set to: 1
 27625                           ;outputs_MC50.c: 1069:         {;outputs_MC50.c: 1070:             var_sys.upFaseRGB=1;
 27626  007B16  0E01               	movlw	1
 27627  007B18  6F24               	movwf	(_var_sys+36)& (0+255),b	;volatile
 27628  007B1A                     l2507:
 27629                           
 27630                           ; BSR set to: 1
 27631  007B1A  0012               	return		;funcret
 27632  007B1C                     __end_of_setRGB_ON:
 27633                           	callstack 0
 27634                           
 27635 ;; *************** function _RGB_Set *****************
 27636 ;; Defined at:
 27637 ;;		line 98 in file "outputs_MC50.c"
 27638 ;; Parameters:    Size  Location     Type
 27639 ;;  value           1    wreg     unsigned char 
 27640 ;; Auto vars:     Size  Location     Type
 27641 ;;  value           1   15[COMRAM] unsigned char 
 27642 ;; Return value:  Size  Location     Type
 27643 ;;                  1    wreg      void 
 27644 ;; Registers used:
 27645 ;;		wreg, status,2, status,0
 27646 ;; Tracked objects:
 27647 ;;		On entry : 0/0
 27648 ;;		On exit  : 0/0
 27649 ;;		Unchanged: 0/0
 27650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27652 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27654 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27655 ;;Total ram usage:        1 bytes
 27656 ;; Hardware stack levels used: 1
 27657 ;; Hardware stack levels required when called: 4
 27658 ;; This function calls:
 27659 ;;		Nothing
 27660 ;; This function is called by:
 27661 ;;		_setRGB_ON
 27662 ;; This function uses a non-reentrant model
 27663 ;;
 27664                           
 27665                           	psect	text116
 27666  0096CA                     __ptext116:
 27667                           	callstack 0
 27668  0096CA                     _RGB_Set:
 27669                           	callstack 24
 27670                           
 27671                           ; BSR set to: 1
 27672                           ;incstack = 0
 27673                           ;RGB_Set@value stored from wreg
 27674  0096CA  6E10               	movwf	RGB_Set@value^0,c
 27675                           
 27676                           ;outputs_MC50.c: 98: void RGB_Set(char value);outputs_MC50.c: 99: {;outputs_MC50.c: 100:
      +                              LATC &= 0xdb ;
 27677  0096CC  0EDB               	movlw	219
 27678  0096CE  1685               	andwf	133,f,c	;volatile
 27679                           
 27680                           ;outputs_MC50.c: 101:    LATC |= value;
 27681  0096D0  5010               	movf	RGB_Set@value^0,w,c	;volatile
 27682  0096D2  1285               	iorwf	133,f,c	;volatile
 27683  0096D4  9E83               	bcf	131,7,c	;volatile
 27684  0096D6  0012               	return		;funcret
 27685  0096D8                     __end_of_RGB_Set:
 27686                           	callstack 0
 27687                           
 27688 ;; *************** function _setFlashLigth_ON *****************
 27689 ;; Defined at:
 27690 ;;		line 1077 in file "outputs_MC50.c"
 27691 ;; Parameters:    Size  Location     Type
 27692 ;;  Freq            2   15[COMRAM] int 
 27693 ;; Auto vars:     Size  Location     Type
 27694 ;;		None
 27695 ;; Return value:  Size  Location     Type
 27696 ;;                  1    wreg      void 
 27697 ;; Registers used:
 27698 ;;		wreg, status,2, status,0
 27699 ;; Tracked objects:
 27700 ;;		On entry : 3E/1
 27701 ;;		On exit  : 3F/1
 27702 ;;		Unchanged: 0/0
 27703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27704 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27707 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27708 ;;Total ram usage:        2 bytes
 27709 ;; Hardware stack levels used: 1
 27710 ;; Hardware stack levels required when called: 4
 27711 ;; This function calls:
 27712 ;;		Nothing
 27713 ;; This function is called by:
 27714 ;;		_ControlLights
 27715 ;; This function uses a non-reentrant model
 27716 ;;
 27717                           
 27718                           	psect	text117
 27719  008EE8                     __ptext117:
 27720                           	callstack 0
 27721  008EE8                     _setFlashLigth_ON:
 27722                           	callstack 25
 27723                           
 27724                           ;outputs_MC50.c: 1077: void setFlashLigth_ON(int Freq);outputs_MC50.c: 1078: {;outputs_M
      +                          C50.c: 1079:     if(Freq==0 || var_sys.upFaseFlashligth==1)
 27725                           
 27726                           ;incstack = 0
 27727  008EE8  5010               	movf	setFlashLigth_ON@Freq^0,w,c
 27728  008EEA  1011               	iorwf	(setFlashLigth_ON@Freq+1)^0,w,c
 27729  008EEC  B4D8               	btfsc	status,2,c
 27730  008EEE  D004               	goto	u15670
 27731  008EF0  0101               	movlb	1	; () banked
 27732  008EF2  0525               	decf	(_var_sys+37)& (0+255),w,b	;volatile
 27733  008EF4  A4D8               	btfss	status,2,c
 27734  008EF6  D002               	goto	l2516
 27735  008EF8                     u15670:
 27736                           
 27737                           ;outputs_MC50.c: 1080:     {;outputs_MC50.c: 1081:         do { LATEbits.LATE2 = 1; } wh
      +                          ile(0);
 27738  008EF8  8487               	bsf	135,2,c	;volatile
 27739  008EFA  D001               	goto	l15037
 27740  008EFC                     l2516:
 27741                           
 27742                           ; BSR set to: 1
 27743  008EFC  9487               	bcf	135,2,c	;volatile
 27744  008EFE                     l15037:
 27745                           
 27746                           ;outputs_MC50.c: 1088:     if(ts_system.timeFreqFlashligth<=0 && Freq!=0)
 27747  008EFE  0101               	movlb	1	; () banked
 27748  008F00  BFBA               	btfsc	(_ts_system+31)& (0+255),7,b	;volatile
 27749  008F02  D005               	goto	u15680
 27750  008F04  51BA               	movf	(_ts_system+31)& (0+255),w,b	;volatile
 27751  008F06  E10D               	bnz	l2519
 27752  008F08  05B9               	decf	(_ts_system+30)& (0+255),w,b	;volatile
 27753  008F0A  B0D8               	btfsc	status,0,c
 27754  008F0C  0012               	return	
 27755  008F0E                     u15680:
 27756                           
 27757                           ; BSR set to: 1
 27758  008F0E  5010               	movf	setFlashLigth_ON@Freq^0,w,c
 27759  008F10  1011               	iorwf	(setFlashLigth_ON@Freq+1)^0,w,c
 27760  008F12  B4D8               	btfsc	status,2,c
 27761  008F14  0012               	return	
 27762                           
 27763                           ; BSR set to: 1
 27764                           ;outputs_MC50.c: 1089:     {;outputs_MC50.c: 1090:         ts_system.timeFreqFlashligth=
      +                          Freq;
 27765  008F16  C010  F1B9         	movff	setFlashLigth_ON@Freq,_ts_system+30	;volatile
 27766  008F1A  C011  F1BA         	movff	setFlashLigth_ON@Freq+1,_ts_system+31	;volatile
 27767                           
 27768                           ; BSR set to: 1
 27769                           ;outputs_MC50.c: 1091:         var_sys.upFaseFlashligth ^= (1 << 0);
 27770  008F1E  0E01               	movlw	1
 27771  008F20  1B25               	xorwf	(_var_sys+37)& (0+255),f,b	;volatile
 27772  008F22                     l2519:
 27773                           
 27774                           ; BSR set to: 1
 27775  008F22  0012               	return		;funcret
 27776  008F24                     __end_of_setFlashLigth_ON:
 27777                           	callstack 0
 27778                           
 27779 ;; *************** function _ControlInputs *****************
 27780 ;; Defined at:
 27781 ;;		line 674 in file "inputs_MC50.c"
 27782 ;; Parameters:    Size  Location     Type
 27783 ;;		None
 27784 ;; Auto vars:     Size  Location     Type
 27785 ;;		None
 27786 ;; Return value:  Size  Location     Type
 27787 ;;                  1    wreg      void 
 27788 ;; Registers used:
 27789 ;;		wreg, status,2, status,0
 27790 ;; Tracked objects:
 27791 ;;		On entry : 3E/1
 27792 ;;		On exit  : 3E/0
 27793 ;;		Unchanged: 0/0
 27794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27796 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27798 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27799 ;;Total ram usage:        0 bytes
 27800 ;; Hardware stack levels used: 1
 27801 ;; Hardware stack levels required when called: 4
 27802 ;; This function calls:
 27803 ;;		Nothing
 27804 ;; This function is called by:
 27805 ;;		_main
 27806 ;; This function uses a non-reentrant model
 27807 ;;
 27808                           
 27809                           	psect	text118
 27810  006A0E                     __ptext118:
 27811                           	callstack 0
 27812  006A0E                     _ControlInputs:
 27813                           	callstack 26
 27814                           
 27815                           ;inputs_MC50.c: 678:     if (( var_sys.StateMotor==InClose || (((PORTEbits.RE1 == 1)&& v
      +                          ar_sys_NVM.Direction_motor == 0)||((PORTEbits.RE0 == 1)&&var_sys_NVM.Direction_motor == 
      +                          1))) && (var_sys.FimCurso_CloseIsEnabled == YES))
 27816                           
 27817                           ; BSR set to: 1
 27818                           ;incstack = 0
 27819  006A0E  0E03               	movlw	3
 27820  006A10  0101               	movlb	1	; () banked
 27821  006A12  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 27822  006A14  B4D8               	btfsc	status,2,c
 27823  006A16  D00C               	goto	u19640
 27824                           
 27825                           ; BSR set to: 1
 27826  006A18  A291               	btfss	145,1,c	;volatile
 27827  006A1A  D004               	goto	u19620
 27828                           
 27829                           ; BSR set to: 1
 27830  006A1C  0100               	movlb	0	; () banked
 27831  006A1E  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 27832  006A20  B4D8               	btfsc	status,2,c
 27833  006A22  D006               	goto	u19640
 27834  006A24                     u19620:
 27835  006A24  A091               	btfss	145,0,c	;volatile
 27836  006A26  D00A               	goto	l17017
 27837  006A28  0100               	movlb	0	; () banked
 27838  006A2A  05B3               	decf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 27839  006A2C  A4D8               	btfss	status,2,c
 27840  006A2E  D006               	goto	l17017
 27841  006A30                     u19640:
 27842  006A30  0101               	movlb	1	; () banked
 27843  006A32  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
 27844  006A34  A4D8               	btfss	status,2,c
 27845  006A36  D002               	goto	l17017
 27846                           
 27847                           ; BSR set to: 1
 27848                           ;inputs_MC50.c: 679:     {;inputs_MC50.c: 680:         var_sys.StateMotor = Stopped;
 27849  006A38  0E00               	movlw	0
 27850  006A3A  6F00               	movwf	_var_sys& (0+255),b	;volatile
 27851  006A3C                     l17017:
 27852                           
 27853                           ;inputs_MC50.c: 683:     if((var_sys.StateMotor==InOpenFull || var_sys.StateMotor==InOpe
      +                          nWalk || (((PORTEbits.RE0 == 1) &&var_sys_NVM.Direction_motor == 0)||((PORTEbits.RE1 == 
      +                          1) && var_sys_NVM.Direction_motor == 1))) && (var_sys.FimCurso_OpenIsEnabled == YES))
 27854  006A3C  0101               	movlb	1	; () banked
 27855  006A3E  0500               	decf	_var_sys& (0+255),w,b	;volatile
 27856  006A40  B4D8               	btfsc	status,2,c
 27857  006A42  D010               	goto	u19710
 27858                           
 27859                           ; BSR set to: 1
 27860  006A44  0E02               	movlw	2
 27861  006A46  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 27862  006A48  B4D8               	btfsc	status,2,c
 27863  006A4A  D00C               	goto	u19710
 27864                           
 27865                           ; BSR set to: 1
 27866  006A4C  A091               	btfss	145,0,c	;volatile
 27867  006A4E  D004               	goto	u19690
 27868                           
 27869                           ; BSR set to: 1
 27870  006A50  0100               	movlb	0	; () banked
 27871  006A52  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 27872  006A54  B4D8               	btfsc	status,2,c
 27873  006A56  D006               	goto	u19710
 27874  006A58                     u19690:
 27875  006A58  A291               	btfss	145,1,c	;volatile
 27876  006A5A  D00A               	goto	l17031
 27877  006A5C  0100               	movlb	0	; () banked
 27878  006A5E  05B3               	decf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 27879  006A60  A4D8               	btfss	status,2,c
 27880  006A62  D006               	goto	l17031
 27881  006A64                     u19710:
 27882  006A64  0101               	movlb	1	; () banked
 27883  006A66  0504               	decf	(_var_sys+4)& (0+255),w,b	;volatile
 27884  006A68  A4D8               	btfss	status,2,c
 27885  006A6A  D002               	goto	l17031
 27886                           
 27887                           ; BSR set to: 1
 27888                           ;inputs_MC50.c: 684:     {;inputs_MC50.c: 685:         var_sys.StateMotor = Stopped;
 27889  006A6C  0E00               	movlw	0
 27890  006A6E  6F00               	movwf	_var_sys& (0+255),b	;volatile
 27891  006A70                     l17031:
 27892                           
 27893                           ;inputs_MC50.c: 688:     if (var_sys.LearningIsEnabled != YES){
 27894  006A70  0101               	movlb	1	; () banked
 27895  006A72  0526               	decf	(_var_sys+38)& (0+255),w,b	;volatile
 27896  006A74  B4D8               	btfsc	status,2,c
 27897  006A76  0012               	return	
 27898                           
 27899                           ; BSR set to: 1
 27900                           ;inputs_MC50.c: 690:         if((var_sys_NVM.photoCellIsON == 1) && (var_sys.photoCellIs
      +                          Obstructed == YES) && var_sys.AutoInversionActive==NO)
 27901  006A78  0100               	movlb	0	; () banked
 27902  006A7A  059F               	decf	(_var_sys_NVM+7)& (0+255),w,b	;volatile
 27903  006A7C  A4D8               	btfss	status,2,c
 27904  006A7E  D02B               	goto	l17057
 27905                           
 27906                           ; BSR set to: 0
 27907  006A80  0101               	movlb	1	; () banked
 27908  006A82  0501               	decf	(_var_sys+1)& (0+255),w,b	;volatile
 27909  006A84  A4D8               	btfss	status,2,c
 27910  006A86  D027               	goto	l17057
 27911                           
 27912                           ; BSR set to: 1
 27913  006A88  5127               	movf	(_var_sys+39)& (0+255),w,b	;volatile
 27914  006A8A  A4D8               	btfss	status,2,c
 27915  006A8C  D024               	goto	l17057
 27916                           
 27917                           ; BSR set to: 1
 27918                           ;inputs_MC50.c: 691:         {;inputs_MC50.c: 699:             if((var_sys.StateMotor==I
      +                          nOpenFull || var_sys.StateMotor==InOpenWalk) && (var_sys_NVM.photoCellInOpen==1))
 27919  006A8E  0500               	decf	_var_sys& (0+255),w,b	;volatile
 27920  006A90  B4D8               	btfsc	status,2,c
 27921  006A92  D004               	goto	u19780
 27922                           
 27923                           ; BSR set to: 1
 27924  006A94  0E02               	movlw	2
 27925  006A96  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 27926  006A98  A4D8               	btfss	status,2,c
 27927  006A9A  D007               	goto	l17047
 27928  006A9C                     u19780:
 27929                           
 27930                           ; BSR set to: 1
 27931  006A9C  0100               	movlb	0	; () banked
 27932  006A9E  05A0               	decf	(_var_sys_NVM+8)& (0+255),w,b	;volatile
 27933  006AA0  A4D8               	btfss	status,2,c
 27934  006AA2  D003               	goto	l17047
 27935                           
 27936                           ; BSR set to: 0
 27937                           ;inputs_MC50.c: 700:             {;inputs_MC50.c: 701:                 var_sys.StateMoto
      +                          r = Stopped;
 27938  006AA4  0E00               	movlw	0
 27939  006AA6  0101               	movlb	1	; () banked
 27940  006AA8  D015               	goto	L102
 27941  006AAA                     l17047:
 27942  006AAA  0E03               	movlw	3
 27943  006AAC  0101               	movlb	1	; () banked
 27944  006AAE  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 27945  006AB0  A4D8               	btfss	status,2,c
 27946  006AB2  D011               	goto	l17057
 27947                           
 27948                           ; BSR set to: 1
 27949  006AB4  0100               	movlb	0	; () banked
 27950  006AB6  51A0               	movf	(_var_sys_NVM+8)& (0+255),w,b	;volatile
 27951  006AB8  A4D8               	btfss	status,2,c
 27952  006ABA  D00D               	goto	l17057
 27953                           
 27954                           ; BSR set to: 0
 27955  006ABC  0101               	movlb	1	; () banked
 27956  006ABE  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 27957  006AC0  D005               	goto	u19820
 27958  006AC2  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 27959  006AC4  E108               	bnz	l17057
 27960  006AC6  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 27961  006AC8  B0D8               	btfsc	status,0,c
 27962  006ACA  D005               	goto	l17057
 27963  006ACC                     u19820:
 27964                           
 27965                           ; BSR set to: 1
 27966  006ACC  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 27967  006ACE  A4D8               	btfss	status,2,c
 27968  006AD0  D002               	goto	l17057
 27969                           
 27970                           ; BSR set to: 1
 27971                           ;inputs_MC50.c: 706:             {;inputs_MC50.c: 707:                 var_sys.StateMoto
      +                          r = Stopped;
 27972  006AD2  0E00               	movlw	0
 27973  006AD4                     L102:
 27974  006AD4  6F00               	movwf	_var_sys& (0+255),b	;volatile
 27975  006AD6                     l17057:
 27976                           
 27977                           ;inputs_MC50.c: 713:         if((var_sys_NVM.securityBandIsON == 1 || var_sys_NVM.Stopbo
      +                          ton == 1) && (var_sys.SecurityBarIsObstructed == YES && var_sys.AutoInversionActive == N
      +                          O))
 27978  006AD6  0100               	movlb	0	; () banked
 27979  006AD8  05A1               	decf	(_var_sys_NVM+9)& (0+255),w,b	;volatile
 27980  006ADA  B4D8               	btfsc	status,2,c
 27981  006ADC  D003               	goto	u19850
 27982                           
 27983                           ; BSR set to: 0
 27984  006ADE  05AE               	decf	(_var_sys_NVM+22)& (0+255),w,b	;volatile
 27985  006AE0  A4D8               	btfss	status,2,c
 27986  006AE2  0012               	return	
 27987  006AE4                     u19850:
 27988                           
 27989                           ; BSR set to: 0
 27990  006AE4  0101               	movlb	1	; () banked
 27991  006AE6  0502               	decf	(_var_sys+2)& (0+255),w,b	;volatile
 27992  006AE8  A4D8               	btfss	status,2,c
 27993  006AEA  0012               	return	
 27994                           
 27995                           ; BSR set to: 1
 27996  006AEC  5127               	movf	(_var_sys+39)& (0+255),w,b	;volatile
 27997  006AEE  A4D8               	btfss	status,2,c
 27998  006AF0  0012               	return	
 27999                           
 28000                           ; BSR set to: 1
 28001                           ;inputs_MC50.c: 714:         {;inputs_MC50.c: 723:             if(var_sys.StateMotor == 
      +                          InClose && (var_sys_NVM.securityBandInOpen == 0))
 28002  006AF2  0E03               	movlw	3
 28003  006AF4  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 28004  006AF6  A4D8               	btfss	status,2,c
 28005  006AF8  D008               	goto	l17071
 28006                           
 28007                           ; BSR set to: 1
 28008  006AFA  0100               	movlb	0	; () banked
 28009  006AFC  51A3               	movf	(_var_sys_NVM+11)& (0+255),w,b	;volatile
 28010  006AFE  A4D8               	btfss	status,2,c
 28011  006B00  D004               	goto	l17071
 28012                           
 28013                           ; BSR set to: 0
 28014                           ;inputs_MC50.c: 724:             {;inputs_MC50.c: 725:                 var_sys.StateMoto
      +                          r = Stopped;
 28015  006B02  0E00               	movlw	0
 28016  006B04  0101               	movlb	1	; () banked
 28017  006B06  6F00               	movwf	_var_sys& (0+255),b	;volatile
 28018                           
 28019                           ;inputs_MC50.c: 727:             }
 28020  006B08  0012               	return	
 28021  006B0A                     l17071:
 28022  006B0A  0101               	movlb	1	; () banked
 28023  006B0C  0500               	decf	_var_sys& (0+255),w,b	;volatile
 28024  006B0E  B4D8               	btfsc	status,2,c
 28025  006B10  D004               	goto	u19910
 28026                           
 28027                           ; BSR set to: 1
 28028  006B12  0E02               	movlw	2
 28029  006B14  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 28030  006B16  A4D8               	btfss	status,2,c
 28031  006B18  D004               	goto	u19920
 28032  006B1A                     u19910:
 28033                           
 28034                           ; BSR set to: 1
 28035  006B1A  0100               	movlb	0	; () banked
 28036  006B1C  05A3               	decf	(_var_sys_NVM+11)& (0+255),w,b	;volatile
 28037  006B1E  B4D8               	btfsc	status,2,c
 28038  006B20  D004               	goto	u19930
 28039  006B22                     u19920:
 28040  006B22  0100               	movlb	0	; () banked
 28041  006B24  05AE               	decf	(_var_sys_NVM+22)& (0+255),w,b	;volatile
 28042  006B26  A4D8               	btfss	status,2,c
 28043  006B28  0012               	return	
 28044  006B2A                     u19930:
 28045                           
 28046                           ; BSR set to: 0
 28047                           ;inputs_MC50.c: 730:             {;inputs_MC50.c: 731:                 var_sys.StateMoto
      +                          r = Stopped;
 28048  006B2A  0E00               	movlw	0
 28049  006B2C  0101               	movlb	1	; () banked
 28050  006B2E  6F00               	movwf	_var_sys& (0+255),b	;volatile
 28051  006B30  0012               	return	
 28052  006B32                     __end_of_ControlInputs:
 28053                           	callstack 0
 28054                           
 28055 ;; *************** function _ControlCurrent *****************
 28056 ;; Defined at:
 28057 ;;		line 342 in file "controlCurrent_MC50.c"
 28058 ;; Parameters:    Size  Location     Type
 28059 ;;		None
 28060 ;; Auto vars:     Size  Location     Type
 28061 ;;		None
 28062 ;; Return value:  Size  Location     Type
 28063 ;;                  1    wreg      void 
 28064 ;; Registers used:
 28065 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28066 ;; Tracked objects:
 28067 ;;		On entry : 3E/1
 28068 ;;		On exit  : 3E/0
 28069 ;;		Unchanged: 0/0
 28070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28073 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28074 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28075 ;;Total ram usage:        4 bytes
 28076 ;; Hardware stack levels used: 1
 28077 ;; Hardware stack levels required when called: 6
 28078 ;; This function calls:
 28079 ;;		_GetMotorPower
 28080 ;;		_getCurrentComparator
 28081 ;;		_refreshADCZeroOffset
 28082 ;;		_refreshCurrent
 28083 ;; This function is called by:
 28084 ;;		_main
 28085 ;; This function uses a non-reentrant model
 28086 ;;
 28087                           
 28088                           	psect	text119
 28089  0063C8                     __ptext119:
 28090                           	callstack 0
 28091  0063C8                     _ControlCurrent:
 28092                           	callstack 24
 28093                           
 28094                           ;controlCurrent_MC50.c: 345:     refreshCurrent();
 28095                           
 28096                           ;incstack = 0
 28097  0063C8  EC6C  F046         	call	_refreshCurrent	;wreg free
 28098                           
 28099                           ;controlCurrent_MC50.c: 351:     refreshADCZeroOffset();
 28100  0063CC  EC2C  F037         	call	_refreshADCZeroOffset	;wreg free
 28101                           
 28102                           ;controlCurrent_MC50.c: 354:     var_sys.velocityActual = GetMotorPower();
 28103  0063D0  ECEE  F039         	call	_GetMotorPower	;wreg free
 28104  0063D4  6E23               	movwf	??_ControlCurrent^0,c
 28105  0063D6  5023               	movf	??_ControlCurrent^0,w,c
 28106  0063D8  6F38               	movwf	(_var_sys+56)& (0+255),b	;volatile
 28107  0063DA  6B39               	clrf	(_var_sys+57)& (0+255),b	;volatile
 28108                           
 28109                           ; BSR set to: 1
 28110                           ;controlCurrent_MC50.c: 355:     var_sys.ActualComparatorCurrent = getCurrentComparator(
      +                          );
 28111  0063DC  ECF8  F02D         	call	_getCurrentComparator	;wreg free
 28112  0063E0  C016  F134         	movff	?_getCurrentComparator,_var_sys+52	;volatile
 28113  0063E4  C017  F135         	movff	?_getCurrentComparator+1,_var_sys+53	;volatile
 28114  0063E8  C018  F136         	movff	?_getCurrentComparator+2,_var_sys+54	;volatile
 28115  0063EC  C019  F137         	movff	?_getCurrentComparator+3,_var_sys+55	;volatile
 28116                           
 28117                           ; BSR set to: 1
 28118                           ;controlCurrent_MC50.c: 357:     if(var_sys.StateMotor == Stopped)
 28119  0063F0  5100               	movf	_var_sys& (0+255),w,b	;volatile
 28120  0063F2  A4D8               	btfss	status,2,c
 28121  0063F4  D00F               	goto	l23141
 28122                           
 28123                           ; BSR set to: 1
 28124                           ;controlCurrent_MC50.c: 358:     {;controlCurrent_MC50.c: 360:         numberOfErrorCurr
      +                          ent=0;
 28125  0063F6  0E00               	movlw	0
 28126  0063F8  0100               	movlb	0	; () banked
 28127  0063FA  6F8E               	movwf	_numberOfErrorCurrent& (0+255),b	;volatile
 28128                           
 28129                           ;controlCurrent_MC50.c: 361:         var_sys.CurrentAlarmIsOn=NO;
 28130  0063FC  0E00               	movlw	0
 28131  0063FE  0101               	movlb	1	; () banked
 28132  006400  6F41               	movwf	(_var_sys+65)& (0+255),b	;volatile
 28133                           
 28134                           ;controlCurrent_MC50.c: 362:         var_sys.InvertionCurrentOpening=NO;
 28135  006402  0E00               	movlw	0
 28136  006404  6F45               	movwf	(_var_sys+69)& (0+255),b	;volatile
 28137                           
 28138                           ;controlCurrent_MC50.c: 363:         var_sys.InvertionCurrentClosing=NO;
 28139  006406  0E00               	movlw	0
 28140  006408  6F44               	movwf	(_var_sys+68)& (0+255),b	;volatile
 28141                           
 28142                           ;controlCurrent_MC50.c: 364:         ts_system.TimeTransitionDecelaration=(1000/50);
 28143  00640A  0E00               	movlw	0
 28144  00640C  6FD4               	movwf	(_ts_system+57)& (0+255),b	;volatile
 28145  00640E  0E14               	movlw	20
 28146  006410  6FD3               	movwf	(_ts_system+56)& (0+255),b	;volatile
 28147                           
 28148                           ;controlCurrent_MC50.c: 365:     }
 28149  006412  0012               	return	
 28150  006414                     l23141:
 28151                           
 28152                           ; BSR set to: 1
 28153  006414  517B               	movf	_powerControl_st& (0+255),w,b
 28154  006416  A4D8               	btfss	status,2,c
 28155  006418  D05D               	goto	l23175
 28156                           
 28157                           ; BSR set to: 1
 28158                           ;controlCurrent_MC50.c: 368:     {;controlCurrent_MC50.c: 376:         ts_system.TimeTra
      +                          nsitionDecelaration=(1000/50);
 28159  00641A  0E00               	movlw	0
 28160  00641C  6FD4               	movwf	(_ts_system+57)& (0+255),b	;volatile
 28161  00641E  0E14               	movlw	20
 28162  006420  6FD3               	movwf	(_ts_system+56)& (0+255),b	;volatile
 28163                           
 28164                           ; BSR set to: 1
 28165                           ;controlCurrent_MC50.c: 377:         if (( var_sys.ActualCurrent>var_sys.ActualComparato
      +                          rCurrent ) && (ts_system.TimeChargeCondesador<=0)&&var_sys_NVM.motorSensitivity!=0 && ts
      +                          _system.TimeReleCapacitor<=0)
 28166  006422  512E               	movf	(_var_sys+46)& (0+255),w,b	;volatile
 28167  006424  6E23               	movwf	??_ControlCurrent^0,c
 28168  006426  512F               	movf	(_var_sys+47)& (0+255),w,b	;volatile
 28169  006428  6E24               	movwf	(??_ControlCurrent+1)^0,c
 28170  00642A  6A25               	clrf	(??_ControlCurrent+2)^0,c
 28171  00642C  6A26               	clrf	(??_ControlCurrent+3)^0,c
 28172  00642E  5023               	movf	??_ControlCurrent^0,w,c
 28173  006430  5D34               	subwf	(_var_sys+52)& (0+255),w,b	;volatile
 28174  006432  5024               	movf	(??_ControlCurrent+1)^0,w,c
 28175  006434  5935               	subwfb	(_var_sys+53)& (0+255),w,b	;volatile
 28176  006436  5025               	movf	(??_ControlCurrent+2)^0,w,c
 28177  006438  5936               	subwfb	(_var_sys+54)& (0+255),w,b	;volatile
 28178  00643A  5026               	movf	(??_ControlCurrent+3)^0,w,c
 28179  00643C  5937               	subwfb	(_var_sys+55)& (0+255),w,b	;volatile
 28180  00643E  B0D8               	btfsc	status,0,c
 28181  006440  D03E               	goto	l23173
 28182                           
 28183                           ; BSR set to: 1
 28184  006442  BFB6               	btfsc	(_ts_system+27)& (0+255),7,b	;volatile
 28185  006444  D005               	goto	u28020
 28186  006446  51B6               	movf	(_ts_system+27)& (0+255),w,b	;volatile
 28187  006448  E13A               	bnz	l23173
 28188  00644A  05B5               	decf	(_ts_system+26)& (0+255),w,b	;volatile
 28189  00644C  B0D8               	btfsc	status,0,c
 28190  00644E  D037               	goto	l23173
 28191  006450                     u28020:
 28192                           
 28193                           ; BSR set to: 1
 28194  006450  0100               	movlb	0	; () banked
 28195  006452  519B               	movf	(_var_sys_NVM+3)& (0+255),w,b	;volatile
 28196  006454  B4D8               	btfsc	status,2,c
 28197  006456  D033               	goto	l23173
 28198                           
 28199                           ; BSR set to: 0
 28200  006458  0101               	movlb	1	; () banked
 28201  00645A  BFDE               	btfsc	(_ts_system+67)& (0+255),7,b	;volatile
 28202  00645C  D005               	goto	u28040
 28203  00645E  51DE               	movf	(_ts_system+67)& (0+255),w,b	;volatile
 28204  006460  E12E               	bnz	l23173
 28205  006462  05DD               	decf	(_ts_system+66)& (0+255),w,b	;volatile
 28206  006464  B0D8               	btfsc	status,0,c
 28207  006466  D02B               	goto	l23173
 28208  006468                     u28040:
 28209                           
 28210                           ; BSR set to: 1
 28211                           ;controlCurrent_MC50.c: 378:         {;controlCurrent_MC50.c: 379:              if (numb
      +                          erOfErrorCurrent >=1)
 28212  006468  0100               	movlb	0	; () banked
 28213  00646A  518E               	movf	_numberOfErrorCurrent& (0+255),w,b	;volatile
 28214  00646C  B4D8               	btfsc	status,2,c
 28215  00646E  D00B               	goto	l23159
 28216                           
 28217                           ; BSR set to: 0
 28218                           ;controlCurrent_MC50.c: 380:              {;controlCurrent_MC50.c: 381:                 
      +                           if(erroranterior > var_sys.ActualCurrent )
 28219  006470  0101               	movlb	1	; () banked
 28220  006472  5189               	movf	_erroranterior& (0+255),w,b	;volatile
 28221  006474  5D2E               	subwf	(_var_sys+46)& (0+255),w,b	;volatile
 28222  006476  518A               	movf	(_erroranterior+1)& (0+255),w,b	;volatile
 28223  006478  592F               	subwfb	(_var_sys+47)& (0+255),w,b	;volatile
 28224  00647A  B0D8               	btfsc	status,0,c
 28225  00647C  D004               	goto	l23159
 28226                           
 28227                           ; BSR set to: 1
 28228                           ;controlCurrent_MC50.c: 382:                  {;controlCurrent_MC50.c: 383:             
      +                                 numberOfErrorCurrent = 0;
 28229  00647E  0E00               	movlw	0
 28230  006480  0100               	movlb	0	; () banked
 28231  006482  6F8E               	movwf	_numberOfErrorCurrent& (0+255),b	;volatile
 28232                           
 28233                           ;controlCurrent_MC50.c: 384:                  }
 28234  006484  D002               	goto	l23161
 28235  006486                     l23159:
 28236                           
 28237                           ;controlCurrent_MC50.c: 386:                  {;controlCurrent_MC50.c: 387:             
      +                                 numberOfErrorCurrent++;
 28238  006486  0100               	movlb	0	; () banked
 28239  006488  2B8E               	incf	_numberOfErrorCurrent& (0+255),f,b	;volatile
 28240  00648A                     l23161:
 28241                           
 28242                           ; BSR set to: 0
 28243                           ;controlCurrent_MC50.c: 389:                  erroranterior = var_sys.ActualCurrent;
 28244  00648A  C12E  F189         	movff	_var_sys+46,_erroranterior	;volatile
 28245  00648E  C12F  F18A         	movff	_var_sys+47,_erroranterior+1	;volatile
 28246                           
 28247                           ; BSR set to: 0
 28248                           ;controlCurrent_MC50.c: 398:             if(ts_system.TimeCurrentWaitForAlarm<=0&&number
      +                          OfErrorCurrent>1)
 28249                           
 28250                           ;controlCurrent_MC50.c: 390:              }
 28251  006492  0101               	movlb	1	; () banked
 28252  006494  BFCA               	btfsc	(_ts_system+47)& (0+255),7,b	;volatile
 28253  006496  D005               	goto	u28070
 28254  006498  51CA               	movf	(_ts_system+47)& (0+255),w,b	;volatile
 28255  00649A  E14F               	bnz	l1405
 28256  00649C  05C9               	decf	(_ts_system+46)& (0+255),w,b	;volatile
 28257  00649E  B0D8               	btfsc	status,0,c
 28258  0064A0  0012               	return	
 28259  0064A2                     u28070:
 28260                           
 28261                           ; BSR set to: 1
 28262  0064A2  0E01               	movlw	1
 28263  0064A4  0100               	movlb	0	; () banked
 28264  0064A6  658E               	cpfsgt	_numberOfErrorCurrent& (0+255),b	;volatile
 28265  0064A8  0012               	return	
 28266                           
 28267                           ; BSR set to: 0
 28268                           ;controlCurrent_MC50.c: 399:             {;controlCurrent_MC50.c: 400:                 v
      +                          ar_sys.StateMotor = Stopped;
 28269  0064AA  0E00               	movlw	0
 28270  0064AC  0101               	movlb	1	; () banked
 28271  0064AE  6F00               	movwf	_var_sys& (0+255),b	;volatile
 28272                           
 28273                           ;controlCurrent_MC50.c: 401:                 ts_system.TimeCurrentAlarm= (1000/50)*10;
 28274  0064B0  0E00               	movlw	0
 28275  0064B2  6FC6               	movwf	(_ts_system+43)& (0+255),b	;volatile
 28276  0064B4  0EC8               	movlw	200
 28277  0064B6  6FC5               	movwf	(_ts_system+42)& (0+255),b	;volatile
 28278                           
 28279                           ;controlCurrent_MC50.c: 402:                 var_sys.CurrentAlarmIsOn=YES;
 28280  0064B8  0E01               	movlw	1
 28281  0064BA  6F41               	movwf	(_var_sys+65)& (0+255),b	;volatile
 28282  0064BC  0012               	return	
 28283  0064BE                     l23173:
 28284                           
 28285                           ;controlCurrent_MC50.c: 409:         {;controlCurrent_MC50.c: 410:             numberOfE
      +                          rrorCurrent=0;
 28286  0064BE  0E00               	movlw	0
 28287  0064C0  0100               	movlb	0	; () banked
 28288  0064C2  6F8E               	movwf	_numberOfErrorCurrent& (0+255),b	;volatile
 28289                           
 28290                           ;controlCurrent_MC50.c: 411:             var_sys.CurrentAlarmIsOn=NO;
 28291  0064C4  0E00               	movlw	0
 28292  0064C6  0101               	movlb	1	; () banked
 28293  0064C8  6F41               	movwf	(_var_sys+65)& (0+255),b	;volatile
 28294                           
 28295                           ;controlCurrent_MC50.c: 412:             var_sys.InvertionCurrentOpening=NO;
 28296  0064CA  0E00               	movlw	0
 28297  0064CC  6F45               	movwf	(_var_sys+69)& (0+255),b	;volatile
 28298                           
 28299                           ;controlCurrent_MC50.c: 413:             var_sys.InvertionCurrentClosing=NO;
 28300  0064CE  0E00               	movlw	0
 28301  0064D0  6F44               	movwf	(_var_sys+68)& (0+255),b	;volatile
 28302  0064D2  0012               	return	
 28303  0064D4                     l23175:
 28304                           
 28305                           ; BSR set to: 1
 28306                           ;controlCurrent_MC50.c: 419:     {;controlCurrent_MC50.c: 420:         if( ( var_sys.Act
      +                          ualHistCurrent<var_sys.ActualComparatorCurrent ) && (ts_system.TimeChargeCondesador<=0)&
      +                          &ts_system.TimeTransitionDecelaration<=0&&var_sys_NVM.decelarationSensivity!=0)
 28307  0064D4  5134               	movf	(_var_sys+52)& (0+255),w,b	;volatile
 28308  0064D6  5D30               	subwf	(_var_sys+48)& (0+255),w,b	;volatile
 28309  0064D8  5135               	movf	(_var_sys+53)& (0+255),w,b	;volatile
 28310  0064DA  5931               	subwfb	(_var_sys+49)& (0+255),w,b	;volatile
 28311  0064DC  5136               	movf	(_var_sys+54)& (0+255),w,b	;volatile
 28312  0064DE  5932               	subwfb	(_var_sys+50)& (0+255),w,b	;volatile
 28313  0064E0  5137               	movf	(_var_sys+55)& (0+255),w,b	;volatile
 28314  0064E2  5933               	subwfb	(_var_sys+51)& (0+255),w,b	;volatile
 28315  0064E4  B0D8               	btfsc	status,0,c
 28316  0064E6  D7EB               	goto	l23173
 28317                           
 28318                           ; BSR set to: 1
 28319  0064E8  BFB6               	btfsc	(_ts_system+27)& (0+255),7,b	;volatile
 28320  0064EA  D005               	goto	u28100
 28321  0064EC  51B6               	movf	(_ts_system+27)& (0+255),w,b	;volatile
 28322  0064EE  E1E7               	bnz	l23173
 28323  0064F0  05B5               	decf	(_ts_system+26)& (0+255),w,b	;volatile
 28324  0064F2  B0D8               	btfsc	status,0,c
 28325  0064F4  D7E4               	goto	l23173
 28326  0064F6                     u28100:
 28327                           
 28328                           ; BSR set to: 1
 28329  0064F6  BFD4               	btfsc	(_ts_system+57)& (0+255),7,b	;volatile
 28330  0064F8  D005               	goto	u28110
 28331  0064FA  51D4               	movf	(_ts_system+57)& (0+255),w,b	;volatile
 28332  0064FC  E1E0               	bnz	l23173
 28333  0064FE  05D3               	decf	(_ts_system+56)& (0+255),w,b	;volatile
 28334  006500  B0D8               	btfsc	status,0,c
 28335  006502  D7DD               	goto	l23173
 28336  006504                     u28110:
 28337                           
 28338                           ; BSR set to: 1
 28339  006504  0100               	movlb	0	; () banked
 28340  006506  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
 28341  006508  B4D8               	btfsc	status,2,c
 28342  00650A  D7D9               	goto	l23173
 28343                           
 28344                           ; BSR set to: 0
 28345                           ;controlCurrent_MC50.c: 421:         {;controlCurrent_MC50.c: 423:             numberOfE
      +                          rrorCurrent++;
 28346  00650C  2B8E               	incf	_numberOfErrorCurrent& (0+255),f,b	;volatile
 28347                           
 28348                           ; BSR set to: 0
 28349                           ;controlCurrent_MC50.c: 424:             if(ts_system.TimeCurrentWaitForAlarm<=0&&number
      +                          OfErrorCurrent>2)
 28350  00650E  0101               	movlb	1	; () banked
 28351  006510  BFCA               	btfsc	(_ts_system+47)& (0+255),7,b	;volatile
 28352  006512  D005               	goto	u28130
 28353  006514  51CA               	movf	(_ts_system+47)& (0+255),w,b	;volatile
 28354  006516  E111               	bnz	l1405
 28355  006518  05C9               	decf	(_ts_system+46)& (0+255),w,b	;volatile
 28356  00651A  B0D8               	btfsc	status,0,c
 28357  00651C  0012               	return	
 28358  00651E                     u28130:
 28359                           
 28360                           ; BSR set to: 1
 28361  00651E  0E02               	movlw	2
 28362  006520  0100               	movlb	0	; () banked
 28363  006522  658E               	cpfsgt	_numberOfErrorCurrent& (0+255),b	;volatile
 28364  006524  0012               	return	
 28365                           
 28366                           ; BSR set to: 0
 28367                           ;controlCurrent_MC50.c: 425:             {;controlCurrent_MC50.c: 426:                 v
      +                          ar_sys.StateMotor = Stopped;
 28368  006526  0E00               	movlw	0
 28369  006528  0101               	movlb	1	; () banked
 28370  00652A  6F00               	movwf	_var_sys& (0+255),b	;volatile
 28371                           
 28372                           ;controlCurrent_MC50.c: 427:                 ts_system.TimeCurrentAlarm= (1000/50)*10;
 28373  00652C  0E00               	movlw	0
 28374  00652E  6FC6               	movwf	(_ts_system+43)& (0+255),b	;volatile
 28375  006530  0EC8               	movlw	200
 28376  006532  6FC5               	movwf	(_ts_system+42)& (0+255),b	;volatile
 28377                           
 28378                           ;controlCurrent_MC50.c: 428:                 var_sys.CurrentAlarmIsOn=YES;
 28379  006534  0E01               	movlw	1
 28380  006536  6F41               	movwf	(_var_sys+65)& (0+255),b	;volatile
 28381  006538  0012               	return	
 28382  00653A                     l1405:
 28383  00653A  0012               	return		;funcret
 28384  00653C                     __end_of_ControlCurrent:
 28385                           	callstack 0
 28386                           
 28387 ;; *************** function _refreshCurrent *****************
 28388 ;; Defined at:
 28389 ;;		line 233 in file "controlCurrent_MC50.c"
 28390 ;; Parameters:    Size  Location     Type
 28391 ;;		None
 28392 ;; Auto vars:     Size  Location     Type
 28393 ;;		None
 28394 ;; Return value:  Size  Location     Type
 28395 ;;                  1    wreg      void 
 28396 ;; Registers used:
 28397 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28398 ;; Tracked objects:
 28399 ;;		On entry : 3E/1
 28400 ;;		On exit  : 3F/0
 28401 ;;		Unchanged: 0/0
 28402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28406 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28407 ;;Total ram usage:        0 bytes
 28408 ;; Hardware stack levels used: 1
 28409 ;; Hardware stack levels required when called: 5
 28410 ;; This function calls:
 28411 ;;		_saveEnergyADCHist
 28412 ;;		_sumEnergyADC
 28413 ;;		_sumHIST
 28414 ;; This function is called by:
 28415 ;;		_ControlCurrent
 28416 ;; This function uses a non-reentrant model
 28417 ;;
 28418                           
 28419                           	psect	text120
 28420  008CD8                     __ptext120:
 28421                           	callstack 0
 28422  008CD8                     _refreshCurrent:
 28423                           	callstack 24
 28424                           
 28425                           ;controlCurrent_MC50.c: 238:     if ( (var_sys_NVM.electricBrake==1) && (ts_system.TimeE
      +                          lectricBrake>0) )
 28426                           
 28427                           ;incstack = 0
 28428  008CD8  0100               	movlb	0	; () banked
 28429  008CDA  05AF               	decf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 28430  008CDC  A4D8               	btfss	status,2,c
 28431  008CDE  D008               	goto	l14761
 28432                           
 28433                           ; BSR set to: 0
 28434  008CE0  0101               	movlb	1	; () banked
 28435  008CE2  BFC4               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 28436  008CE4  D005               	goto	l14761
 28437  008CE6  51C4               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 28438  008CE8  E109               	bnz	l1372
 28439  008CEA  05C3               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 28440  008CEC  B0D8               	btfsc	status,0,c
 28441  008CEE  D006               	goto	l1372
 28442  008CF0                     l14761:
 28443                           
 28444                           ;controlCurrent_MC50.c: 243:     {;controlCurrent_MC50.c: 245:         var_sys.ActualCur
      +                          rent=sumEnergyADC();
 28445  008CF0  ECD4  F03D         	call	_sumEnergyADC	;wreg free
 28446  008CF4  C010  F12E         	movff	?_sumEnergyADC,_var_sys+46	;volatile
 28447  008CF8  C011  F12F         	movff	?_sumEnergyADC+1,_var_sys+47	;volatile
 28448  008CFC                     l1372:
 28449                           
 28450                           ; BSR set to: 1
 28451                           ;controlCurrent_MC50.c: 248:     saveEnergyADCHist(var_sys.ActualCurrent);
 28452  008CFC  C12E  F010         	movff	_var_sys+46,saveEnergyADCHist@valueToSave	;volatile
 28453  008D00  C12F  F011         	movff	_var_sys+47,saveEnergyADCHist@valueToSave+1	;volatile
 28454  008D04  EC8E  F049         	call	_saveEnergyADCHist	;wreg free
 28455                           
 28456                           ;controlCurrent_MC50.c: 250:     var_sys.ActualHistCurrent=sumHIST();
 28457  008D08  EC29  F038         	call	_sumHIST	;wreg free
 28458  008D0C  C010  F130         	movff	?_sumHIST,_var_sys+48	;volatile
 28459  008D10  C011  F131         	movff	?_sumHIST+1,_var_sys+49	;volatile
 28460  008D14  C012  F132         	movff	?_sumHIST+2,_var_sys+50	;volatile
 28461  008D18  C013  F133         	movff	?_sumHIST+3,_var_sys+51	;volatile
 28462                           
 28463                           ; BSR set to: 0
 28464  008D1C  0012               	return		;funcret
 28465  008D1E                     __end_of_refreshCurrent:
 28466                           	callstack 0
 28467                           
 28468 ;; *************** function _sumHIST *****************
 28469 ;; Defined at:
 28470 ;;		line 199 in file "controlCurrent_MC50.c"
 28471 ;; Parameters:    Size  Location     Type
 28472 ;;		None
 28473 ;; Auto vars:     Size  Location     Type
 28474 ;;  sumH            4   27[COMRAM] unsigned long 
 28475 ;;  min             2   25[COMRAM] unsigned int 
 28476 ;;  max             2   23[COMRAM] unsigned int 
 28477 ;;  i               1   31[COMRAM] unsigned char 
 28478 ;; Return value:  Size  Location     Type
 28479 ;;                  4   15[COMRAM] unsigned long 
 28480 ;; Registers used:
 28481 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 28482 ;; Tracked objects:
 28483 ;;		On entry : 3F/0
 28484 ;;		On exit  : 3F/0
 28485 ;;		Unchanged: 3F/0
 28486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28487 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28488 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28489 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28490 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28491 ;;Total ram usage:       17 bytes
 28492 ;; Hardware stack levels used: 1
 28493 ;; Hardware stack levels required when called: 4
 28494 ;; This function calls:
 28495 ;;		Nothing
 28496 ;; This function is called by:
 28497 ;;		_refreshCurrent
 28498 ;; This function uses a non-reentrant model
 28499 ;;
 28500                           
 28501                           	psect	text121
 28502  007052                     __ptext121:
 28503                           	callstack 0
 28504  007052                     _sumHIST:
 28505                           	callstack 24
 28506                           
 28507                           ; BSR set to: 0
 28508                           ;controlCurrent_MC50.c: 201:     unsigned char i;;controlCurrent_MC50.c: 202:     unsign
      +                          ed long sumH = 0;
 28509                           
 28510                           ; BSR set to: 0
 28511                           ;incstack = 0
 28512  007052  0E00               	movlw	0
 28513  007054  6E1C               	movwf	sumHIST@sumH^0,c
 28514  007056  0E00               	movlw	0
 28515  007058  6E1D               	movwf	(sumHIST@sumH+1)^0,c
 28516  00705A  0E00               	movlw	0
 28517  00705C  6E1E               	movwf	(sumHIST@sumH+2)^0,c
 28518  00705E  0E00               	movlw	0
 28519  007060  6E1F               	movwf	(sumHIST@sumH+3)^0,c
 28520                           
 28521                           ;controlCurrent_MC50.c: 203:     unsigned int max=0;
 28522  007062  0E00               	movlw	0
 28523  007064  6E19               	movwf	(sumHIST@max+1)^0,c
 28524  007066  0E00               	movlw	0
 28525  007068  6E18               	movwf	sumHIST@max^0,c
 28526                           
 28527                           ; BSR set to: 0
 28528                           ;controlCurrent_MC50.c: 204:     unsigned int min=0xFFFF;
 28529  00706A  681A               	setf	sumHIST@min^0,c
 28530  00706C  681B               	setf	(sumHIST@min+1)^0,c
 28531                           
 28532                           ;controlCurrent_MC50.c: 207:     for( i = 0; i<(10); i++)
 28533  00706E  0E00               	movlw	0
 28534  007070  6E20               	movwf	sumHIST@i^0,c
 28535  007072                     l12913:
 28536                           
 28537                           ; BSR set to: 0
 28538                           ;controlCurrent_MC50.c: 208:     {;controlCurrent_MC50.c: 209:         sumH=sumH+SumEner
      +                          gyADCHist_array[i];
 28539  007072  5020               	movf	sumHIST@i^0,w,c
 28540  007074  0D02               	mullw	2
 28541  007076  0E60               	movlw	low _SumEnergyADCHist_array
 28542  007078  24F3               	addwf	243,w,c
 28543  00707A  6ED9               	movwf	fsr2l,c
 28544  00707C  0E02               	movlw	high _SumEnergyADCHist_array
 28545  00707E  20F4               	addwfc	prodh,w,c
 28546  007080  6EDA               	movwf	fsr2h,c
 28547  007082  CFDE F014          	movff	postinc2,??_sumHIST
 28548  007086  CFDD F015          	movff	postdec2,??_sumHIST+1
 28549  00708A  5014               	movf	??_sumHIST^0,w,c
 28550  00708C  241C               	addwf	sumHIST@sumH^0,w,c
 28551  00708E  6E1C               	movwf	sumHIST@sumH^0,c
 28552  007090  5015               	movf	(??_sumHIST+1)^0,w,c
 28553  007092  201D               	addwfc	(sumHIST@sumH+1)^0,w,c
 28554  007094  6E1D               	movwf	(sumHIST@sumH+1)^0,c
 28555  007096  0E00               	movlw	0
 28556  007098  201E               	addwfc	(sumHIST@sumH+2)^0,w,c
 28557  00709A  6E1E               	movwf	(sumHIST@sumH+2)^0,c
 28558  00709C  0E00               	movlw	0
 28559  00709E  201F               	addwfc	(sumHIST@sumH+3)^0,w,c
 28560  0070A0  6E1F               	movwf	(sumHIST@sumH+3)^0,c
 28561                           
 28562                           ;controlCurrent_MC50.c: 212:         if(SumEnergyADCHist_array[i]>max)
 28563  0070A2  5020               	movf	sumHIST@i^0,w,c
 28564  0070A4  0D02               	mullw	2
 28565  0070A6  0E60               	movlw	low _SumEnergyADCHist_array
 28566  0070A8  24F3               	addwf	243,w,c
 28567  0070AA  6ED9               	movwf	fsr2l,c
 28568  0070AC  0E02               	movlw	high _SumEnergyADCHist_array
 28569  0070AE  20F4               	addwfc	prodh,w,c
 28570  0070B0  6EDA               	movwf	fsr2h,c
 28571  0070B2  50DE               	movf	postinc2,w,c
 28572  0070B4  5C18               	subwf	sumHIST@max^0,w,c
 28573  0070B6  50DE               	movf	postinc2,w,c
 28574  0070B8  5819               	subwfb	(sumHIST@max+1)^0,w,c
 28575  0070BA  B0D8               	btfsc	status,0,c
 28576  0070BC  D00C               	goto	l1366
 28577                           
 28578                           ; BSR set to: 0
 28579                           ;controlCurrent_MC50.c: 213:         {;controlCurrent_MC50.c: 214:             max=SumEn
      +                          ergyADCHist_array[i];
 28580  0070BE  5020               	movf	sumHIST@i^0,w,c
 28581  0070C0  0D02               	mullw	2
 28582  0070C2  0E60               	movlw	low _SumEnergyADCHist_array
 28583  0070C4  24F3               	addwf	243,w,c
 28584  0070C6  6ED9               	movwf	fsr2l,c
 28585  0070C8  0E02               	movlw	high _SumEnergyADCHist_array
 28586  0070CA  20F4               	addwfc	prodh,w,c
 28587  0070CC  6EDA               	movwf	fsr2h,c
 28588  0070CE  CFDE F018          	movff	postinc2,sumHIST@max
 28589  0070D2  CFDD F019          	movff	postdec2,sumHIST@max+1
 28590  0070D6                     l1366:
 28591                           
 28592                           ; BSR set to: 0
 28593                           ;controlCurrent_MC50.c: 218:         if(SumEnergyADCHist_array[i]<min)
 28594  0070D6  5020               	movf	sumHIST@i^0,w,c
 28595  0070D8  0D02               	mullw	2
 28596  0070DA  0E60               	movlw	low _SumEnergyADCHist_array
 28597  0070DC  24F3               	addwf	243,w,c
 28598  0070DE  6ED9               	movwf	fsr2l,c
 28599  0070E0  0E02               	movlw	high _SumEnergyADCHist_array
 28600  0070E2  20F4               	addwfc	prodh,w,c
 28601  0070E4  6EDA               	movwf	fsr2h,c
 28602  0070E6  501A               	movf	sumHIST@min^0,w,c
 28603  0070E8  5CDE               	subwf	postinc2,w,c
 28604  0070EA  501B               	movf	(sumHIST@min+1)^0,w,c
 28605  0070EC  58DE               	subwfb	postinc2,w,c
 28606  0070EE  B0D8               	btfsc	status,0,c
 28607  0070F0  D00C               	goto	l12919
 28608                           
 28609                           ; BSR set to: 0
 28610                           ;controlCurrent_MC50.c: 219:         {;controlCurrent_MC50.c: 220:             min=SumEn
      +                          ergyADCHist_array[i];
 28611  0070F2  5020               	movf	sumHIST@i^0,w,c
 28612  0070F4  0D02               	mullw	2
 28613  0070F6  0E60               	movlw	low _SumEnergyADCHist_array
 28614  0070F8  24F3               	addwf	243,w,c
 28615  0070FA  6ED9               	movwf	fsr2l,c
 28616  0070FC  0E02               	movlw	high _SumEnergyADCHist_array
 28617  0070FE  20F4               	addwfc	prodh,w,c
 28618  007100  6EDA               	movwf	fsr2h,c
 28619  007102  CFDE F01A          	movff	postinc2,sumHIST@min
 28620  007106  CFDD F01B          	movff	postdec2,sumHIST@min+1
 28621  00710A                     l12919:
 28622                           
 28623                           ; BSR set to: 0
 28624                           ;controlCurrent_MC50.c: 222:     }
 28625  00710A  2A20               	incf	sumHIST@i^0,f,c
 28626                           
 28627                           ; BSR set to: 0
 28628  00710C  0E09               	movlw	9
 28629  00710E  6420               	cpfsgt	sumHIST@i^0,c
 28630  007110  D7B0               	goto	l12913
 28631                           
 28632                           ; BSR set to: 0
 28633                           ;controlCurrent_MC50.c: 224:     sumH = sumH - ( max+min );
 28634  007112  501A               	movf	sumHIST@min^0,w,c
 28635  007114  2418               	addwf	sumHIST@max^0,w,c
 28636  007116  6E14               	movwf	??_sumHIST^0,c
 28637  007118  501B               	movf	(sumHIST@min+1)^0,w,c
 28638  00711A  2019               	addwfc	(sumHIST@max+1)^0,w,c
 28639  00711C  6E15               	movwf	(??_sumHIST+1)^0,c
 28640  00711E  6A16               	clrf	(??_sumHIST+2)^0,c
 28641  007120  6A17               	clrf	(??_sumHIST+3)^0,c
 28642  007122  5014               	movf	??_sumHIST^0,w,c
 28643  007124  5C1C               	subwf	sumHIST@sumH^0,w,c
 28644  007126  6E1C               	movwf	sumHIST@sumH^0,c
 28645  007128  5015               	movf	(??_sumHIST+1)^0,w,c
 28646  00712A  581D               	subwfb	(sumHIST@sumH+1)^0,w,c
 28647  00712C  6E1D               	movwf	(sumHIST@sumH+1)^0,c
 28648  00712E  5016               	movf	(??_sumHIST+2)^0,w,c
 28649  007130  581E               	subwfb	(sumHIST@sumH+2)^0,w,c
 28650  007132  6E1E               	movwf	(sumHIST@sumH+2)^0,c
 28651  007134  5017               	movf	(??_sumHIST+3)^0,w,c
 28652  007136  581F               	subwfb	(sumHIST@sumH+3)^0,w,c
 28653  007138  6E1F               	movwf	(sumHIST@sumH+3)^0,c
 28654                           
 28655                           ; BSR set to: 0
 28656                           ;controlCurrent_MC50.c: 226:     return sumH;
 28657  00713A  C01C  F010         	movff	sumHIST@sumH,?_sumHIST
 28658  00713E  C01D  F011         	movff	sumHIST@sumH+1,?_sumHIST+1
 28659  007142  C01E  F012         	movff	sumHIST@sumH+2,?_sumHIST+2
 28660  007146  C01F  F013         	movff	sumHIST@sumH+3,?_sumHIST+3
 28661                           
 28662                           ; BSR set to: 0
 28663  00714A  0012               	return		;funcret
 28664  00714C                     __end_of_sumHIST:
 28665                           	callstack 0
 28666                           
 28667 ;; *************** function _sumEnergyADC *****************
 28668 ;; Defined at:
 28669 ;;		line 59 in file "controlCurrent_MC50.c"
 28670 ;; Parameters:    Size  Location     Type
 28671 ;;		None
 28672 ;; Auto vars:     Size  Location     Type
 28673 ;;  auxValue        2   21[COMRAM] unsigned int 
 28674 ;;  sumE            2   19[COMRAM] unsigned int 
 28675 ;;  i               1   23[COMRAM] unsigned char 
 28676 ;; Return value:  Size  Location     Type
 28677 ;;                  2   15[COMRAM] unsigned int 
 28678 ;; Registers used:
 28679 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 28680 ;; Tracked objects:
 28681 ;;		On entry : 3E/0
 28682 ;;		On exit  : 3F/1
 28683 ;;		Unchanged: 0/0
 28684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28685 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28686 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28687 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28688 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28689 ;;Total ram usage:        9 bytes
 28690 ;; Hardware stack levels used: 1
 28691 ;; Hardware stack levels required when called: 4
 28692 ;; This function calls:
 28693 ;;		Nothing
 28694 ;; This function is called by:
 28695 ;;		_refreshCurrent
 28696 ;; This function uses a non-reentrant model
 28697 ;;
 28698                           
 28699                           	psect	text122
 28700  007BA8                     __ptext122:
 28701                           	callstack 0
 28702  007BA8                     _sumEnergyADC:
 28703                           	callstack 24
 28704                           
 28705                           ;controlCurrent_MC50.c: 61:     unsigned char i;;controlCurrent_MC50.c: 63:     unsigned
      +                           int sumE = 0;
 28706                           
 28707                           ; BSR set to: 0
 28708                           ;incstack = 0
 28709  007BA8  0E00               	movlw	0
 28710  007BAA  6E15               	movwf	(sumEnergyADC@sumE+1)^0,c
 28711  007BAC  0E00               	movlw	0
 28712  007BAE  6E14               	movwf	sumEnergyADC@sumE^0,c
 28713                           
 28714                           ;controlCurrent_MC50.c: 72:     for ( i=0 ; i<(30) ; i++ )
 28715  007BB0  0E00               	movlw	0
 28716  007BB2  6E18               	movwf	sumEnergyADC@i^0,c
 28717  007BB4                     l12885:
 28718                           
 28719                           ;controlCurrent_MC50.c: 73:     {;controlCurrent_MC50.c: 83:         if ( ADC_array[i] >
      +                           var_sys.ADCZeroOffset )
 28720  007BB4  5018               	movf	sumEnergyADC@i^0,w,c
 28721  007BB6  0D02               	mullw	2
 28722  007BB8  0E00               	movlw	low _ADC_array
 28723  007BBA  24F3               	addwf	243,w,c
 28724  007BBC  6ED9               	movwf	fsr2l,c
 28725  007BBE  0E02               	movlw	high _ADC_array
 28726  007BC0  20F4               	addwfc	prodh,w,c
 28727  007BC2  6EDA               	movwf	fsr2h,c
 28728  007BC4  50DE               	movf	postinc2,w,c
 28729  007BC6  0101               	movlb	1	; () banked
 28730  007BC8  5D4B               	subwf	(_var_sys+75)& (0+255),w,b	;volatile
 28731  007BCA  50DE               	movf	postinc2,w,c
 28732  007BCC  594C               	subwfb	(_var_sys+76)& (0+255),w,b	;volatile
 28733  007BCE  B0D8               	btfsc	status,0,c
 28734  007BD0  D012               	goto	l12889
 28735                           
 28736                           ; BSR set to: 1
 28737                           ;controlCurrent_MC50.c: 84:         {;controlCurrent_MC50.c: 85:             auxValue = 
      +                          ( ADC_array[i] - var_sys.ADCZeroOffset );
 28738  007BD2  5018               	movf	sumEnergyADC@i^0,w,c
 28739  007BD4  0D02               	mullw	2
 28740  007BD6  0E00               	movlw	low _ADC_array
 28741  007BD8  24F3               	addwf	243,w,c
 28742  007BDA  6ED9               	movwf	fsr2l,c
 28743  007BDC  0E02               	movlw	high _ADC_array
 28744  007BDE  20F4               	addwfc	prodh,w,c
 28745  007BE0  6EDA               	movwf	fsr2h,c
 28746  007BE2  CFDE F012          	movff	postinc2,??_sumEnergyADC
 28747  007BE6  CFDD F013          	movff	postdec2,??_sumEnergyADC+1
 28748  007BEA  514B               	movf	(_var_sys+75)& (0+255),w,b	;volatile
 28749  007BEC  5C12               	subwf	??_sumEnergyADC^0,w,c
 28750  007BEE  6E16               	movwf	sumEnergyADC@auxValue^0,c
 28751  007BF0  514C               	movf	(_var_sys+76)& (0+255),w,b	;volatile
 28752  007BF2  5813               	subwfb	(??_sumEnergyADC+1)^0,w,c
 28753  007BF4  D011               	goto	L103
 28754  007BF6                     l12889:
 28755                           
 28756                           ; BSR set to: 1
 28757                           ;controlCurrent_MC50.c: 88:         {;controlCurrent_MC50.c: 89:            auxValue = (
      +                           var_sys.ADCZeroOffset - ADC_array[i] );
 28758  007BF6  5018               	movf	sumEnergyADC@i^0,w,c
 28759  007BF8  0D02               	mullw	2
 28760  007BFA  0E00               	movlw	low _ADC_array
 28761  007BFC  24F3               	addwf	243,w,c
 28762  007BFE  6ED9               	movwf	fsr2l,c
 28763  007C00  0E02               	movlw	high _ADC_array
 28764  007C02  20F4               	addwfc	prodh,w,c
 28765  007C04  6EDA               	movwf	fsr2h,c
 28766  007C06  CFDE F012          	movff	postinc2,??_sumEnergyADC
 28767  007C0A  CFDD F013          	movff	postdec2,??_sumEnergyADC+1
 28768  007C0E  5012               	movf	??_sumEnergyADC^0,w,c
 28769  007C10  5D4B               	subwf	(_var_sys+75)& (0+255),w,b	;volatile
 28770  007C12  6E16               	movwf	sumEnergyADC@auxValue^0,c
 28771  007C14  5013               	movf	(??_sumEnergyADC+1)^0,w,c
 28772  007C16  594C               	subwfb	(_var_sys+76)& (0+255),w,b	;volatile
 28773  007C18                     L103:
 28774  007C18  6E17               	movwf	(sumEnergyADC@auxValue+1)^0,c
 28775                           
 28776                           ; BSR set to: 1
 28777                           ;controlCurrent_MC50.c: 91:         sumE += auxValue;
 28778  007C1A  5016               	movf	sumEnergyADC@auxValue^0,w,c
 28779  007C1C  2614               	addwf	sumEnergyADC@sumE^0,f,c
 28780  007C1E  5017               	movf	(sumEnergyADC@auxValue+1)^0,w,c
 28781  007C20  2215               	addwfc	(sumEnergyADC@sumE+1)^0,f,c
 28782                           
 28783                           ; BSR set to: 1
 28784                           ;controlCurrent_MC50.c: 94:     }
 28785  007C22  2A18               	incf	sumEnergyADC@i^0,f,c
 28786                           
 28787                           ; BSR set to: 1
 28788  007C24  0E1D               	movlw	29
 28789  007C26  6418               	cpfsgt	sumEnergyADC@i^0,c
 28790  007C28  D7C5               	goto	l12885
 28791                           
 28792                           ; BSR set to: 1
 28793                           ;controlCurrent_MC50.c: 96:     return sumE;
 28794  007C2A  C014  F010         	movff	sumEnergyADC@sumE,?_sumEnergyADC
 28795  007C2E  C015  F011         	movff	sumEnergyADC@sumE+1,?_sumEnergyADC+1
 28796                           
 28797                           ; BSR set to: 1
 28798  007C32  0012               	return		;funcret
 28799  007C34                     __end_of_sumEnergyADC:
 28800                           	callstack 0
 28801                           
 28802 ;; *************** function _saveEnergyADCHist *****************
 28803 ;; Defined at:
 28804 ;;		line 182 in file "controlCurrent_MC50.c"
 28805 ;; Parameters:    Size  Location     Type
 28806 ;;  valueToSave     2   15[COMRAM] unsigned int 
 28807 ;; Auto vars:     Size  Location     Type
 28808 ;;		None
 28809 ;; Return value:  Size  Location     Type
 28810 ;;                  1    wreg      void 
 28811 ;; Registers used:
 28812 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 28813 ;; Tracked objects:
 28814 ;;		On entry : 3F/1
 28815 ;;		On exit  : 3F/0
 28816 ;;		Unchanged: 0/0
 28817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28818 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28821 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28822 ;;Total ram usage:        2 bytes
 28823 ;; Hardware stack levels used: 1
 28824 ;; Hardware stack levels required when called: 4
 28825 ;; This function calls:
 28826 ;;		Nothing
 28827 ;; This function is called by:
 28828 ;;		_refreshCurrent
 28829 ;; This function uses a non-reentrant model
 28830 ;;
 28831                           
 28832                           	psect	text123
 28833  00931C                     __ptext123:
 28834                           	callstack 0
 28835  00931C                     _saveEnergyADCHist:
 28836                           	callstack 24
 28837                           
 28838                           ; BSR set to: 1
 28839                           ;controlCurrent_MC50.c: 182: void saveEnergyADCHist(unsigned int valueToSave);controlCur
      +                          rent_MC50.c: 183: {;controlCurrent_MC50.c: 184:     if(idxSaveEnergyADCHist>=10)
 28840                           
 28841                           ; BSR set to: 1
 28842                           ;incstack = 0
 28843  00931C  0E09               	movlw	9
 28844  00931E  0100               	movlb	0	; () banked
 28845  009320  6590               	cpfsgt	_idxSaveEnergyADCHist& (0+255),b	;volatile
 28846  009322  D002               	goto	l12901
 28847                           
 28848                           ; BSR set to: 0
 28849                           ;controlCurrent_MC50.c: 185:     {;controlCurrent_MC50.c: 186:         idxSaveEnergyADCH
      +                          ist=0;
 28850  009324  0E00               	movlw	0
 28851  009326  6F90               	movwf	_idxSaveEnergyADCHist& (0+255),b	;volatile
 28852  009328                     l12901:
 28853                           
 28854                           ; BSR set to: 0
 28855                           ;controlCurrent_MC50.c: 189:     SumEnergyADCHist_array[idxSaveEnergyADCHist]=valueToSav
      +                          e;
 28856  009328  5190               	movf	_idxSaveEnergyADCHist& (0+255),w,b	;volatile
 28857  00932A  0D02               	mullw	2
 28858  00932C  0E60               	movlw	low _SumEnergyADCHist_array
 28859  00932E  24F3               	addwf	243,w,c
 28860  009330  6ED9               	movwf	fsr2l,c
 28861  009332  0E02               	movlw	high _SumEnergyADCHist_array
 28862  009334  20F4               	addwfc	prodh,w,c
 28863  009336  6EDA               	movwf	fsr2h,c
 28864  009338  C010  FFDE         	movff	saveEnergyADCHist@valueToSave,postinc2
 28865  00933C  C011  FFDD         	movff	saveEnergyADCHist@valueToSave+1,postdec2
 28866                           
 28867                           ; BSR set to: 0
 28868                           ;controlCurrent_MC50.c: 190:     idxSaveEnergyADCHist++;
 28869  009340  2B90               	incf	_idxSaveEnergyADCHist& (0+255),f,b	;volatile
 28870                           
 28871                           ; BSR set to: 0
 28872  009342  0012               	return		;funcret
 28873  009344                     __end_of_saveEnergyADCHist:
 28874                           	callstack 0
 28875                           
 28876 ;; *************** function _refreshADCZeroOffset *****************
 28877 ;; Defined at:
 28878 ;;		line 103 in file "controlCurrent_MC50.c"
 28879 ;; Parameters:    Size  Location     Type
 28880 ;;		None
 28881 ;; Auto vars:     Size  Location     Type
 28882 ;;  media           2   23[COMRAM] unsigned int 
 28883 ;;  i               1   22[COMRAM] unsigned char 
 28884 ;; Return value:  Size  Location     Type
 28885 ;;                  1    wreg      void 
 28886 ;; Registers used:
 28887 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28888 ;; Tracked objects:
 28889 ;;		On entry : 3F/0
 28890 ;;		On exit  : 3E/0
 28891 ;;		Unchanged: 0/0
 28892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28893 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28894 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28896 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28897 ;;Total ram usage:        3 bytes
 28898 ;; Hardware stack levels used: 1
 28899 ;; Hardware stack levels required when called: 5
 28900 ;; This function calls:
 28901 ;;		___lwdiv
 28902 ;; This function is called by:
 28903 ;;		_ControlCurrent
 28904 ;; This function uses a non-reentrant model
 28905 ;;
 28906                           
 28907                           	psect	text124
 28908  006E58                     __ptext124:
 28909                           	callstack 0
 28910  006E58                     _refreshADCZeroOffset:
 28911                           	callstack 24
 28912                           
 28913                           ; BSR set to: 0
 28914                           ;controlCurrent_MC50.c: 105:     unsigned char i;;controlCurrent_MC50.c: 106:     unsign
      +                          ed int media = 0;
 28915                           
 28916                           ; BSR set to: 0
 28917                           ;incstack = 0
 28918  006E58  0E00               	movlw	0
 28919  006E5A  6E19               	movwf	(refreshADCZeroOffset@media+1)^0,c
 28920  006E5C  0E00               	movlw	0
 28921  006E5E  6E18               	movwf	refreshADCZeroOffset@media^0,c
 28922                           
 28923                           ;controlCurrent_MC50.c: 109:     if ( var_sys.StateMotor == Stopped )
 28924  006E60  0101               	movlb	1	; () banked
 28925  006E62  5100               	movf	_var_sys& (0+255),w,b	;volatile
 28926  006E64  A4D8               	btfss	status,2,c
 28927  006E66  0012               	return	
 28928                           
 28929                           ; BSR set to: 1
 28930                           ;controlCurrent_MC50.c: 110:     {;controlCurrent_MC50.c: 111:         if ( ts_system.Ti
      +                          meStopADCZeroOffsetCalc <= 0 )
 28931  006E68  BFDA               	btfsc	(_ts_system+63)& (0+255),7,b	;volatile
 28932  006E6A  D005               	goto	u15020
 28933  006E6C  51DA               	movf	(_ts_system+63)& (0+255),w,b	;volatile
 28934  006E6E  E172               	bnz	l1357
 28935  006E70  05D9               	decf	(_ts_system+62)& (0+255),w,b	;volatile
 28936  006E72  B0D8               	btfsc	status,0,c
 28937  006E74  0012               	return	
 28938  006E76                     u15020:
 28939                           
 28940                           ; BSR set to: 1
 28941                           ;controlCurrent_MC50.c: 112:         {;controlCurrent_MC50.c: 113:             ts_system
      +                          .TimeStopADCZeroOffsetCalc = (1000/50);
 28942  006E76  0E00               	movlw	0
 28943  006E78  6FDA               	movwf	(_ts_system+63)& (0+255),b	;volatile
 28944  006E7A  0E14               	movlw	20
 28945  006E7C  6FD9               	movwf	(_ts_system+62)& (0+255),b	;volatile
 28946                           
 28947                           ;controlCurrent_MC50.c: 121:             for ( i=0 ; i<(30) ; i++ )
 28948  006E7E  0E00               	movlw	0
 28949  006E80  6E17               	movwf	refreshADCZeroOffset@i^0,c
 28950  006E82                     l14713:
 28951                           
 28952                           ;controlCurrent_MC50.c: 122:             {;controlCurrent_MC50.c: 126:                 m
      +                          edia += ADC_array[i];
 28953  006E82  5017               	movf	refreshADCZeroOffset@i^0,w,c
 28954  006E84  0D02               	mullw	2
 28955  006E86  0E00               	movlw	low _ADC_array
 28956  006E88  24F3               	addwf	243,w,c
 28957  006E8A  6ED9               	movwf	fsr2l,c
 28958  006E8C  0E02               	movlw	high _ADC_array
 28959  006E8E  20F4               	addwfc	prodh,w,c
 28960  006E90  6EDA               	movwf	fsr2h,c
 28961  006E92  50DE               	movf	postinc2,w,c
 28962  006E94  2618               	addwf	refreshADCZeroOffset@media^0,f,c
 28963  006E96  50DD               	movf	postdec2,w,c
 28964  006E98  2219               	addwfc	(refreshADCZeroOffset@media+1)^0,f,c
 28965                           
 28966                           ;controlCurrent_MC50.c: 128:             }
 28967  006E9A  2A17               	incf	refreshADCZeroOffset@i^0,f,c
 28968  006E9C  0E1D               	movlw	29
 28969  006E9E  6417               	cpfsgt	refreshADCZeroOffset@i^0,c
 28970  006EA0  D7F0               	goto	l14713
 28971                           
 28972                           ;controlCurrent_MC50.c: 130:             media = media/30;
 28973  006EA2  C018  F010         	movff	refreshADCZeroOffset@media,___lwdiv@dividend
 28974  006EA6  C019  F011         	movff	refreshADCZeroOffset@media+1,___lwdiv@dividend+1
 28975  006EAA  0E00               	movlw	0
 28976  006EAC  6E13               	movwf	(___lwdiv@divisor+1)^0,c
 28977  006EAE  0E1E               	movlw	30
 28978  006EB0  6E12               	movwf	___lwdiv@divisor^0,c
 28979  006EB2  EC35  F045         	call	___lwdiv	;wreg free
 28980  006EB6  C010  F018         	movff	?___lwdiv,refreshADCZeroOffset@media
 28981  006EBA  C011  F019         	movff	?___lwdiv+1,refreshADCZeroOffset@media+1
 28982                           
 28983                           ;controlCurrent_MC50.c: 131:             if ( (media>(510 -20)) && (media<(510 +20)) )
 28984  006EBE  0EEB               	movlw	235
 28985  006EC0  5C18               	subwf	refreshADCZeroOffset@media^0,w,c
 28986  006EC2  0E01               	movlw	1
 28987  006EC4  5819               	subwfb	(refreshADCZeroOffset@media+1)^0,w,c
 28988  006EC6  A0D8               	btfss	status,0,c
 28989  006EC8  D006               	goto	l14727
 28990  006ECA  0E12               	movlw	18
 28991  006ECC  5C18               	subwf	refreshADCZeroOffset@media^0,w,c
 28992  006ECE  0E02               	movlw	2
 28993  006ED0  5819               	subwfb	(refreshADCZeroOffset@media+1)^0,w,c
 28994  006ED2  A0D8               	btfss	status,0,c
 28995  006ED4  D004               	goto	l14729
 28996  006ED6                     l14727:
 28997                           
 28998                           ;controlCurrent_MC50.c: 136:             {;controlCurrent_MC50.c: 138:                 m
      +                          edia = 510;
 28999  006ED6  0E01               	movlw	1
 29000  006ED8  6E19               	movwf	(refreshADCZeroOffset@media+1)^0,c
 29001  006EDA  0EFE               	movlw	254
 29002  006EDC  6E18               	movwf	refreshADCZeroOffset@media^0,c
 29003  006EDE                     l14729:
 29004                           
 29005                           ;controlCurrent_MC50.c: 142:             if ( idxAdcZeroAquisition >= 30 )
 29006  006EDE  0E1D               	movlw	29
 29007  006EE0  0100               	movlb	0	; () banked
 29008  006EE2  658F               	cpfsgt	_idxAdcZeroAquisition& (0+255),b	;volatile
 29009  006EE4  D002               	goto	l14733
 29010                           
 29011                           ; BSR set to: 0
 29012                           ;controlCurrent_MC50.c: 143:             {;controlCurrent_MC50.c: 144:                 i
      +                          dxAdcZeroAquisition = 0;
 29013  006EE6  0E00               	movlw	0
 29014  006EE8  6F8F               	movwf	_idxAdcZeroAquisition& (0+255),b	;volatile
 29015  006EEA                     l14733:
 29016                           
 29017                           ; BSR set to: 0
 29018                           ;controlCurrent_MC50.c: 146:             ADC_zero_array[idxAdcZeroAquisition] = media;
 29019  006EEA  518F               	movf	_idxAdcZeroAquisition& (0+255),w,b	;volatile
 29020  006EEC  0D02               	mullw	2
 29021  006EEE  0E96               	movlw	low _ADC_zero_array
 29022  006EF0  24F3               	addwf	243,w,c
 29023  006EF2  6ED9               	movwf	fsr2l,c
 29024  006EF4  0E03               	movlw	high _ADC_zero_array
 29025  006EF6  20F4               	addwfc	prodh,w,c
 29026  006EF8  6EDA               	movwf	fsr2h,c
 29027  006EFA  C018  FFDE         	movff	refreshADCZeroOffset@media,postinc2
 29028  006EFE  C019  FFDD         	movff	refreshADCZeroOffset@media+1,postdec2
 29029                           
 29030                           ; BSR set to: 0
 29031                           ;controlCurrent_MC50.c: 147:             idxAdcZeroAquisition++;
 29032  006F02  2B8F               	incf	_idxAdcZeroAquisition& (0+255),f,b	;volatile
 29033                           
 29034                           ; BSR set to: 0
 29035                           ;controlCurrent_MC50.c: 150:             media = 0;
 29036  006F04  0E00               	movlw	0
 29037  006F06  6E19               	movwf	(refreshADCZeroOffset@media+1)^0,c
 29038  006F08  0E00               	movlw	0
 29039  006F0A  6E18               	movwf	refreshADCZeroOffset@media^0,c
 29040                           
 29041                           ; BSR set to: 0
 29042                           ;controlCurrent_MC50.c: 151:             for ( i=0 ; i<(30) ; i++ )
 29043  006F0C  0E00               	movlw	0
 29044  006F0E  6E17               	movwf	refreshADCZeroOffset@i^0,c
 29045  006F10                     l14745:
 29046                           
 29047                           ; BSR set to: 0
 29048                           ;controlCurrent_MC50.c: 152:             {;controlCurrent_MC50.c: 158:                 m
      +                          edia += ADC_zero_array[i];
 29049  006F10  5017               	movf	refreshADCZeroOffset@i^0,w,c
 29050  006F12  0D02               	mullw	2
 29051  006F14  0E96               	movlw	low _ADC_zero_array
 29052  006F16  24F3               	addwf	243,w,c
 29053  006F18  6ED9               	movwf	fsr2l,c
 29054  006F1A  0E03               	movlw	high _ADC_zero_array
 29055  006F1C  20F4               	addwfc	prodh,w,c
 29056  006F1E  6EDA               	movwf	fsr2h,c
 29057  006F20  50DE               	movf	postinc2,w,c
 29058  006F22  2618               	addwf	refreshADCZeroOffset@media^0,f,c
 29059  006F24  50DD               	movf	postdec2,w,c
 29060  006F26  2219               	addwfc	(refreshADCZeroOffset@media+1)^0,f,c
 29061                           
 29062                           ; BSR set to: 0
 29063                           ;controlCurrent_MC50.c: 159:             }
 29064  006F28  2A17               	incf	refreshADCZeroOffset@i^0,f,c
 29065                           
 29066                           ; BSR set to: 0
 29067  006F2A  0E1D               	movlw	29
 29068  006F2C  6417               	cpfsgt	refreshADCZeroOffset@i^0,c
 29069  006F2E  D7F0               	goto	l14745
 29070                           
 29071                           ; BSR set to: 0
 29072                           ;controlCurrent_MC50.c: 160:             media = media/30;
 29073  006F30  C018  F010         	movff	refreshADCZeroOffset@media,___lwdiv@dividend
 29074  006F34  C019  F011         	movff	refreshADCZeroOffset@media+1,___lwdiv@dividend+1
 29075  006F38  0E00               	movlw	0
 29076  006F3A  6E13               	movwf	(___lwdiv@divisor+1)^0,c
 29077  006F3C  0E1E               	movlw	30
 29078  006F3E  6E12               	movwf	___lwdiv@divisor^0,c
 29079  006F40  EC35  F045         	call	___lwdiv	;wreg free
 29080  006F44  C010  F018         	movff	?___lwdiv,refreshADCZeroOffset@media
 29081  006F48  C011  F019         	movff	?___lwdiv+1,refreshADCZeroOffset@media+1
 29082                           
 29083                           ;controlCurrent_MC50.c: 162:             var_sys.ADCZeroOffset = media;
 29084  006F4C  C018  F14B         	movff	refreshADCZeroOffset@media,_var_sys+75	;volatile
 29085  006F50  C019  F14C         	movff	refreshADCZeroOffset@media+1,_var_sys+76	;volatile
 29086  006F54                     l1357:
 29087  006F54  0012               	return		;funcret
 29088  006F56                     __end_of_refreshADCZeroOffset:
 29089                           	callstack 0
 29090                           
 29091 ;; *************** function ___lwdiv *****************
 29092 ;; Defined at:
 29093 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\lwdiv.c"
 29094 ;; Parameters:    Size  Location     Type
 29095 ;;  dividend        2   15[COMRAM] unsigned int 
 29096 ;;  divisor         2   17[COMRAM] unsigned int 
 29097 ;; Auto vars:     Size  Location     Type
 29098 ;;  quotient        2   19[COMRAM] unsigned int 
 29099 ;;  counter         1   21[COMRAM] unsigned char 
 29100 ;; Return value:  Size  Location     Type
 29101 ;;                  2   15[COMRAM] unsigned int 
 29102 ;; Registers used:
 29103 ;;		wreg, status,2, status,0
 29104 ;; Tracked objects:
 29105 ;;		On entry : 3E/1
 29106 ;;		On exit  : 3E/0
 29107 ;;		Unchanged: 3E/0
 29108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29109 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29110 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29112 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29113 ;;Total ram usage:        7 bytes
 29114 ;; Hardware stack levels used: 1
 29115 ;; Hardware stack levels required when called: 4
 29116 ;; This function calls:
 29117 ;;		Nothing
 29118 ;; This function is called by:
 29119 ;;		_refreshADCZeroOffset
 29120 ;;		_sm_execute_menuConfiguration
 29121 ;; This function uses a non-reentrant model
 29122 ;;
 29123                           
 29124                           	psect	text125
 29125  008A6A                     __ptext125:
 29126                           	callstack 0
 29127  008A6A                     ___lwdiv:
 29128                           	callstack 24
 29129                           
 29130                           ;incstack = 0
 29131  008A6A  0E00               	movlw	0
 29132  008A6C  6E15               	movwf	(___lwdiv@quotient+1)^0,c
 29133  008A6E  0E00               	movlw	0
 29134  008A70  6E14               	movwf	___lwdiv@quotient^0,c
 29135  008A72  5012               	movf	___lwdiv@divisor^0,w,c
 29136  008A74  1013               	iorwf	(___lwdiv@divisor+1)^0,w,c
 29137  008A76  B4D8               	btfsc	status,2,c
 29138  008A78  D01C               	goto	l4215
 29139  008A7A  0E01               	movlw	1
 29140  008A7C  6E16               	movwf	___lwdiv@counter^0,c
 29141  008A7E  D004               	goto	l14193
 29142  008A80                     l14191:
 29143  008A80  90D8               	bcf	status,0,c
 29144  008A82  3612               	rlcf	___lwdiv@divisor^0,f,c
 29145  008A84  3613               	rlcf	(___lwdiv@divisor+1)^0,f,c
 29146  008A86  2A16               	incf	___lwdiv@counter^0,f,c
 29147  008A88                     l14193:
 29148  008A88  AE13               	btfss	(___lwdiv@divisor+1)^0,7,c
 29149  008A8A  D7FA               	goto	l14191
 29150  008A8C                     u14040:
 29151  008A8C  90D8               	bcf	status,0,c
 29152  008A8E  3614               	rlcf	___lwdiv@quotient^0,f,c
 29153  008A90  3615               	rlcf	(___lwdiv@quotient+1)^0,f,c
 29154  008A92  5012               	movf	___lwdiv@divisor^0,w,c
 29155  008A94  5C10               	subwf	___lwdiv@dividend^0,w,c
 29156  008A96  5013               	movf	(___lwdiv@divisor+1)^0,w,c
 29157  008A98  5811               	subwfb	(___lwdiv@dividend+1)^0,w,c
 29158  008A9A  A0D8               	btfss	status,0,c
 29159  008A9C  D005               	goto	l14203
 29160  008A9E  5012               	movf	___lwdiv@divisor^0,w,c
 29161  008AA0  5E10               	subwf	___lwdiv@dividend^0,f,c
 29162  008AA2  5013               	movf	(___lwdiv@divisor+1)^0,w,c
 29163  008AA4  5A11               	subwfb	(___lwdiv@dividend+1)^0,f,c
 29164  008AA6  8014               	bsf	___lwdiv@quotient^0,0,c
 29165  008AA8                     l14203:
 29166  008AA8  90D8               	bcf	status,0,c
 29167  008AAA  3213               	rrcf	(___lwdiv@divisor+1)^0,f,c
 29168  008AAC  3212               	rrcf	___lwdiv@divisor^0,f,c
 29169  008AAE  2E16               	decfsz	___lwdiv@counter^0,f,c
 29170  008AB0  D7ED               	goto	u14040
 29171  008AB2                     l4215:
 29172  008AB2  C014  F010         	movff	___lwdiv@quotient,?___lwdiv
 29173  008AB6  C015  F011         	movff	___lwdiv@quotient+1,?___lwdiv+1
 29174  008ABA  0012               	return		;funcret
 29175  008ABC                     __end_of___lwdiv:
 29176                           	callstack 0
 29177                           
 29178 ;; *************** function _getCurrentComparator *****************
 29179 ;; Defined at:
 29180 ;;		line 264 in file "controlCurrent_MC50.c"
 29181 ;; Parameters:    Size  Location     Type
 29182 ;;		None
 29183 ;; Auto vars:     Size  Location     Type
 29184 ;;  x               1   33[COMRAM] unsigned char 
 29185 ;;  tempOffset      2   31[COMRAM] unsigned int 
 29186 ;; Return value:  Size  Location     Type
 29187 ;;                  4   21[COMRAM] unsigned long 
 29188 ;; Registers used:
 29189 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 29190 ;; Tracked objects:
 29191 ;;		On entry : 3F/1
 29192 ;;		On exit  : 3F/1
 29193 ;;		Unchanged: 0/0
 29194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29195 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29196 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29197 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29198 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29199 ;;Total ram usage:       13 bytes
 29200 ;; Hardware stack levels used: 1
 29201 ;; Hardware stack levels required when called: 5
 29202 ;; This function calls:
 29203 ;;		___wmul
 29204 ;; This function is called by:
 29205 ;;		_ControlCurrent
 29206 ;; This function uses a non-reentrant model
 29207 ;;
 29208                           
 29209                           	psect	text126
 29210  005BF0                     __ptext126:
 29211                           	callstack 0
 29212  005BF0                     _getCurrentComparator:
 29213                           	callstack 24
 29214                           
 29215                           ; BSR set to: 1
 29216                           ;controlCurrent_MC50.c: 269:     if(ts_system.timeSoftStart>0)
 29217                           
 29218                           ; BSR set to: 1
 29219                           
 29220                           ;incstack = 0
 29221  005BF0  BFB2               	btfsc	(_ts_system+23)& (0+255),7,b	;volatile
 29222  005BF2  D00A               	goto	l14769
 29223  005BF4  51B2               	movf	(_ts_system+23)& (0+255),w,b	;volatile
 29224  005BF6  E103               	bnz	u15100
 29225  005BF8  05B1               	decf	(_ts_system+22)& (0+255),w,b	;volatile
 29226  005BFA  A0D8               	btfss	status,0,c
 29227  005BFC  D005               	goto	l14769
 29228  005BFE                     u15100:
 29229                           
 29230                           ; BSR set to: 1
 29231                           ;controlCurrent_MC50.c: 270:     {;controlCurrent_MC50.c: 271:         ts_system.timewai
      +                          tBeforeSoftStart=(1000/50);
 29232  005BFE  0E00               	movlw	0
 29233  005C00  6FD6               	movwf	(_ts_system+59)& (0+255),b	;volatile
 29234  005C02  0E14               	movlw	20
 29235  005C04  6FD5               	movwf	(_ts_system+58)& (0+255),b	;volatile
 29236  005C06  D007               	goto	u15110
 29237  005C08                     l14769:
 29238                           
 29239                           ; BSR set to: 1
 29240  005C08  BFD6               	btfsc	(_ts_system+59)& (0+255),7,b	;volatile
 29241  005C0A  D009               	goto	l14773
 29242  005C0C  51D6               	movf	(_ts_system+59)& (0+255),w,b	;volatile
 29243  005C0E  E103               	bnz	u15110
 29244  005C10  05D5               	decf	(_ts_system+58)& (0+255),w,b	;volatile
 29245  005C12  A0D8               	btfss	status,0,c
 29246  005C14  D004               	goto	l14773
 29247  005C16                     u15110:
 29248                           
 29249                           ; BSR set to: 1
 29250                           ;controlCurrent_MC50.c: 276:     {;controlCurrent_MC50.c: 277:         tempOffset=1200;
 29251  005C16  0E04               	movlw	4
 29252  005C18  6E21               	movwf	(getCurrentComparator@tempOffset+1)^0,c
 29253  005C1A  0EB0               	movlw	176
 29254  005C1C  D003               	goto	L104
 29255  005C1E                     l14773:
 29256                           
 29257                           ; BSR set to: 1
 29258                           ;controlCurrent_MC50.c: 280:     {;controlCurrent_MC50.c: 281:         tempOffset=0;
 29259  005C1E  0E00               	movlw	0
 29260  005C20  6E21               	movwf	(getCurrentComparator@tempOffset+1)^0,c
 29261  005C22  0E00               	movlw	0
 29262  005C24                     L104:
 29263  005C24  6E20               	movwf	getCurrentComparator@tempOffset^0,c
 29264                           
 29265                           ; BSR set to: 1
 29266                           ;controlCurrent_MC50.c: 284:     if(powerControl_st.decelarationActive==NO)
 29267  005C26  517B               	movf	_powerControl_st& (0+255),w,b
 29268  005C28  A4D8               	btfss	status,2,c
 29269  005C2A  D05B               	goto	l14789
 29270                           
 29271                           ; BSR set to: 1
 29272                           ;controlCurrent_MC50.c: 285:     {;controlCurrent_MC50.c: 286:         if(var_sys.StateM
      +                          otor==InClose)
 29273  005C2C  0E03               	movlw	3
 29274  005C2E  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 29275  005C30  A4D8               	btfss	status,2,c
 29276  005C32  D005               	goto	l14779
 29277                           
 29278                           ; BSR set to: 1
 29279                           ;controlCurrent_MC50.c: 287:         {;controlCurrent_MC50.c: 288:             var_sys.A
      +                          ctualComparatorCurrent=var_sys_NVM.learningCurrentNormalClose;
 29280  005C34  C0C8  F134         	movff	_var_sys_NVM+48,_var_sys+52	;volatile
 29281  005C38  C0C9  F135         	movff	_var_sys_NVM+49,_var_sys+53	;volatile
 29282  005C3C  D004               	goto	L105
 29283  005C3E                     l14779:
 29284                           
 29285                           ; BSR set to: 1
 29286                           ;controlCurrent_MC50.c: 291:         {;controlCurrent_MC50.c: 292:             var_sys.A
      +                          ctualComparatorCurrent=var_sys_NVM.learningCurrentNormalOpen;
 29287  005C3E  C0CA  F134         	movff	_var_sys_NVM+50,_var_sys+52	;volatile
 29288  005C42  C0CB  F135         	movff	_var_sys_NVM+51,_var_sys+53	;volatile
 29289  005C46                     L105:
 29290  005C46  6B36               	clrf	(_var_sys+54)& (0+255),b	;volatile
 29291  005C48  6B37               	clrf	(_var_sys+55)& (0+255),b	;volatile
 29292                           
 29293                           ; BSR set to: 1
 29294                           ;controlCurrent_MC50.c: 295:         if(var_sys.ActualComparatorCurrent<=100||(var_sys.A
      +                          ctualComparatorCurrent>(510*30)))
 29295  005C4A  5137               	movf	(_var_sys+55)& (0+255),w,b	;volatile
 29296  005C4C  1136               	iorwf	(_var_sys+54)& (0+255),w,b	;volatile
 29297  005C4E  1135               	iorwf	(_var_sys+53)& (0+255),w,b	;volatile
 29298  005C50  E104               	bnz	u15140
 29299  005C52  0E65               	movlw	101
 29300  005C54  5D34               	subwf	(_var_sys+52)& (0+255),w,b	;volatile
 29301  005C56  A0D8               	btfss	status,0,c
 29302  005C58  D009               	goto	u15150
 29303  005C5A                     u15140:
 29304                           
 29305                           ; BSR set to: 1
 29306  005C5A  5137               	movf	(_var_sys+55)& (0+255),w,b	;volatile
 29307  005C5C  1136               	iorwf	(_var_sys+54)& (0+255),w,b	;volatile
 29308  005C5E  E106               	bnz	u15150
 29309  005C60  0EC5               	movlw	197
 29310  005C62  5D34               	subwf	(_var_sys+52)& (0+255),w,b	;volatile
 29311  005C64  0E3B               	movlw	59
 29312  005C66  5935               	subwfb	(_var_sys+53)& (0+255),w,b	;volatile
 29313  005C68  A0D8               	btfss	status,0,c
 29314  005C6A  D004               	goto	l1383
 29315  005C6C                     u15150:
 29316                           
 29317                           ; BSR set to: 1
 29318                           ;controlCurrent_MC50.c: 296:         {;controlCurrent_MC50.c: 297:              var_sys.
      +                          ActualComparatorCurrent=(510*30);
 29319  005C6C  0EC4               	movlw	196
 29320  005C6E  6F34               	movwf	(_var_sys+52)& (0+255),b	;volatile
 29321  005C70  0E3B               	movlw	59
 29322  005C72  D058               	goto	L107
 29323  005C74                     l1383:
 29324                           
 29325                           ; BSR set to: 1
 29326                           ;controlCurrent_MC50.c: 300:         {;controlCurrent_MC50.c: 301:             unsigned 
      +                          char x=var_sys_NVM.motorSensitivity;
 29327  005C74  C09B  F022         	movff	_var_sys_NVM+3,getCurrentComparator@x	;volatile
 29328                           
 29329                           ; BSR set to: 1
 29330                           ;controlCurrent_MC50.c: 307:            var_sys.ActualComparatorCurrent=var_sys.ActualCo
      +                          mparatorCurrent+((10*(x*x))+(-200*x)+1300);
 29331  005C78  5022               	movf	getCurrentComparator@x^0,w,c
 29332  005C7A  0222               	mulwf	getCurrentComparator@x^0,c
 29333  005C7C  CFF3 F010          	movff	prodl,___wmul@multiplier
 29334  005C80  CFF4 F011          	movff	prodh,___wmul@multiplier+1
 29335  005C84  0E00               	movlw	0
 29336  005C86  6E13               	movwf	(___wmul@multiplicand+1)^0,c
 29337  005C88  0E0A               	movlw	10
 29338  005C8A  6E12               	movwf	___wmul@multiplicand^0,c
 29339  005C8C  ECC8  F049         	call	___wmul	;wreg free
 29340  005C90  C010  F01A         	movff	?___wmul,??_getCurrentComparator
 29341  005C94  C011  F01B         	movff	?___wmul+1,??_getCurrentComparator+1
 29342  005C98  C022  F010         	movff	getCurrentComparator@x,___wmul@multiplier
 29343  005C9C  6A11               	clrf	(___wmul@multiplier+1)^0,c
 29344  005C9E  0EFF               	movlw	255
 29345  005CA0  6E13               	movwf	(___wmul@multiplicand+1)^0,c
 29346  005CA2  0E38               	movlw	56
 29347  005CA4  6E12               	movwf	___wmul@multiplicand^0,c
 29348  005CA6  ECC8  F049         	call	___wmul	;wreg free
 29349  005CAA  5010               	movf	?___wmul^0,w,c
 29350  005CAC  261A               	addwf	??_getCurrentComparator^0,f,c
 29351  005CAE  5011               	movf	(?___wmul+1)^0,w,c
 29352  005CB0  221B               	addwfc	(??_getCurrentComparator+1)^0,f,c
 29353  005CB2  0E14               	movlw	20
 29354  005CB4  241A               	addwf	??_getCurrentComparator^0,w,c
 29355  005CB6  6E1C               	movwf	(??_getCurrentComparator+2)^0,c
 29356  005CB8  0E05               	movlw	5
 29357  005CBA  201B               	addwfc	(??_getCurrentComparator+1)^0,w,c
 29358  005CBC  6E1D               	movwf	(??_getCurrentComparator+3)^0,c
 29359  005CBE  6A1E               	clrf	(??_getCurrentComparator+4)^0,c
 29360  005CC0  BE1D               	btfsc	(??_getCurrentComparator+3)^0,7,c
 29361  005CC2  061E               	decf	(??_getCurrentComparator+4)^0,f,c
 29362  005CC4  501E               	movf	(??_getCurrentComparator+4)^0,w,c
 29363  005CC6  6E1F               	movwf	(??_getCurrentComparator+5)^0,c
 29364  005CC8  0101               	movlb	1	; () banked
 29365  005CCA  5134               	movf	(_var_sys+52)& (0+255),w,b	;volatile
 29366  005CCC  241C               	addwf	(??_getCurrentComparator+2)^0,w,c
 29367  005CCE  6F34               	movwf	(_var_sys+52)& (0+255),b	;volatile
 29368  005CD0  5135               	movf	(_var_sys+53)& (0+255),w,b	;volatile
 29369  005CD2  201D               	addwfc	(??_getCurrentComparator+3)^0,w,c
 29370  005CD4  6F35               	movwf	(_var_sys+53)& (0+255),b	;volatile
 29371  005CD6  5136               	movf	(_var_sys+54)& (0+255),w,b	;volatile
 29372  005CD8  201E               	addwfc	(??_getCurrentComparator+4)^0,w,c
 29373  005CDA  6F36               	movwf	(_var_sys+54)& (0+255),b	;volatile
 29374  005CDC  5137               	movf	(_var_sys+55)& (0+255),w,b	;volatile
 29375  005CDE  201F               	addwfc	(??_getCurrentComparator+5)^0,w,c
 29376  005CE0  D046               	goto	L106
 29377  005CE2                     l14789:
 29378                           
 29379                           ; BSR set to: 1
 29380                           ;controlCurrent_MC50.c: 311:     {;controlCurrent_MC50.c: 312:         if(var_sys.StateM
      +                          otor==InClose)
 29381  005CE2  0E03               	movlw	3
 29382  005CE4  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 29383  005CE6  A4D8               	btfss	status,2,c
 29384  005CE8  D009               	goto	l1388
 29385                           
 29386                           ; BSR set to: 1
 29387                           ;controlCurrent_MC50.c: 313:         {;controlCurrent_MC50.c: 314:             var_sys.A
      +                          ctualComparatorCurrent=var_sys_NVM.learningCurrentDecelarationClose;
 29388  005CEA  C0C0  F134         	movff	_var_sys_NVM+40,_var_sys+52	;volatile
 29389  005CEE  C0C1  F135         	movff	_var_sys_NVM+41,_var_sys+53	;volatile
 29390  005CF2  C0C2  F136         	movff	_var_sys_NVM+42,_var_sys+54	;volatile
 29391  005CF6  C0C3  F137         	movff	_var_sys_NVM+43,_var_sys+55	;volatile
 29392                           
 29393                           ;controlCurrent_MC50.c: 315:         }
 29394  005CFA  D008               	goto	l14793
 29395  005CFC                     l1388:
 29396                           
 29397                           ; BSR set to: 1
 29398                           ;controlCurrent_MC50.c: 317:         {;controlCurrent_MC50.c: 318:             var_sys.A
      +                          ctualComparatorCurrent=var_sys_NVM.learningCurrentDecelarationOpen ;
 29399  005CFC  C0C4  F134         	movff	_var_sys_NVM+44,_var_sys+52	;volatile
 29400  005D00  C0C5  F135         	movff	_var_sys_NVM+45,_var_sys+53	;volatile
 29401  005D04  C0C6  F136         	movff	_var_sys_NVM+46,_var_sys+54	;volatile
 29402  005D08  C0C7  F137         	movff	_var_sys_NVM+47,_var_sys+55	;volatile
 29403  005D0C                     l14793:
 29404                           
 29405                           ; BSR set to: 1
 29406                           ;controlCurrent_MC50.c: 321:         if(var_sys.ActualComparatorCurrent<=5000)
 29407  005D0C  5137               	movf	(_var_sys+55)& (0+255),w,b	;volatile
 29408  005D0E  1136               	iorwf	(_var_sys+54)& (0+255),w,b	;volatile
 29409  005D10  E10E               	bnz	l14797
 29410  005D12  0E89               	movlw	137
 29411  005D14  5D34               	subwf	(_var_sys+52)& (0+255),w,b	;volatile
 29412  005D16  0E13               	movlw	19
 29413  005D18  5935               	subwfb	(_var_sys+53)& (0+255),w,b	;volatile
 29414  005D1A  B0D8               	btfsc	status,0,c
 29415  005D1C  D008               	goto	l14797
 29416                           
 29417                           ; BSR set to: 1
 29418                           ;controlCurrent_MC50.c: 322:         {;controlCurrent_MC50.c: 323:             var_sys.A
      +                          ctualComparatorCurrent=5000;
 29419  005D1E  0E88               	movlw	136
 29420  005D20  6F34               	movwf	(_var_sys+52)& (0+255),b	;volatile
 29421  005D22  0E13               	movlw	19
 29422  005D24                     L107:
 29423  005D24  6F35               	movwf	(_var_sys+53)& (0+255),b	;volatile
 29424  005D26  0E00               	movlw	0
 29425  005D28  6F36               	movwf	(_var_sys+54)& (0+255),b	;volatile
 29426  005D2A  0E00               	movlw	0
 29427  005D2C  D020               	goto	L106
 29428  005D2E                     l14797:
 29429                           
 29430                           ; BSR set to: 1
 29431                           ;controlCurrent_MC50.c: 326:         {;controlCurrent_MC50.c: 327:             var_sys.A
      +                          ctualComparatorCurrent=var_sys.ActualComparatorCurrent-(1200 +(500*(10-var_sys_NVM.decel
      +                          arationSensivity)));
 29432  005D2E  C0A7  F010         	movff	_var_sys_NVM+15,___wmul@multiplier	;volatile
 29433  005D32  6A11               	clrf	(___wmul@multiplier+1)^0,c
 29434  005D34  0EFE               	movlw	254
 29435  005D36  6E13               	movwf	(___wmul@multiplicand+1)^0,c
 29436  005D38  0E0C               	movlw	12
 29437  005D3A  6E12               	movwf	___wmul@multiplicand^0,c
 29438  005D3C  ECC8  F049         	call	___wmul	;wreg free
 29439  005D40  0E38               	movlw	56
 29440  005D42  2410               	addwf	?___wmul^0,w,c
 29441  005D44  6E1A               	movwf	??_getCurrentComparator^0,c
 29442  005D46  0E18               	movlw	24
 29443  005D48  2011               	addwfc	(?___wmul+1)^0,w,c
 29444  005D4A  6E1B               	movwf	(??_getCurrentComparator+1)^0,c
 29445  005D4C  6A1C               	clrf	(??_getCurrentComparator+2)^0,c
 29446  005D4E  BE1B               	btfsc	(??_getCurrentComparator+1)^0,7,c
 29447  005D50  061C               	decf	(??_getCurrentComparator+2)^0,f,c
 29448  005D52  501C               	movf	(??_getCurrentComparator+2)^0,w,c
 29449  005D54  6E1D               	movwf	(??_getCurrentComparator+3)^0,c
 29450  005D56  501A               	movf	??_getCurrentComparator^0,w,c
 29451  005D58  0101               	movlb	1	; () banked
 29452  005D5A  5D34               	subwf	(_var_sys+52)& (0+255),w,b	;volatile
 29453  005D5C  6F34               	movwf	(_var_sys+52)& (0+255),b	;volatile
 29454  005D5E  501B               	movf	(??_getCurrentComparator+1)^0,w,c
 29455  005D60  5935               	subwfb	(_var_sys+53)& (0+255),w,b	;volatile
 29456  005D62  6F35               	movwf	(_var_sys+53)& (0+255),b	;volatile
 29457  005D64  501C               	movf	(??_getCurrentComparator+2)^0,w,c
 29458  005D66  5936               	subwfb	(_var_sys+54)& (0+255),w,b	;volatile
 29459  005D68  6F36               	movwf	(_var_sys+54)& (0+255),b	;volatile
 29460  005D6A  501D               	movf	(??_getCurrentComparator+3)^0,w,c
 29461  005D6C  5937               	subwfb	(_var_sys+55)& (0+255),w,b	;volatile
 29462  005D6E                     L106:
 29463  005D6E  6F37               	movwf	(_var_sys+55)& (0+255),b	;volatile
 29464                           
 29465                           ; BSR set to: 1
 29466                           ;controlCurrent_MC50.c: 332:     return var_sys.ActualComparatorCurrent+tempOffset;
 29467  005D70  5020               	movf	getCurrentComparator@tempOffset^0,w,c
 29468  005D72  2534               	addwf	(_var_sys+52)& (0+255),w,b	;volatile
 29469  005D74  6E16               	movwf	?_getCurrentComparator^0,c
 29470  005D76  5021               	movf	(getCurrentComparator@tempOffset+1)^0,w,c
 29471  005D78  2135               	addwfc	(_var_sys+53)& (0+255),w,b	;volatile
 29472  005D7A  6E17               	movwf	(?_getCurrentComparator+1)^0,c
 29473  005D7C  0E00               	movlw	0
 29474  005D7E  2136               	addwfc	(_var_sys+54)& (0+255),w,b	;volatile
 29475  005D80  6E18               	movwf	(?_getCurrentComparator+2)^0,c
 29476  005D82  0E00               	movlw	0
 29477  005D84  2137               	addwfc	(_var_sys+55)& (0+255),w,b	;volatile
 29478  005D86  6E19               	movwf	(?_getCurrentComparator+3)^0,c
 29479                           
 29480                           ; BSR set to: 1
 29481  005D88  0012               	return		;funcret
 29482  005D8A                     __end_of_getCurrentComparator:
 29483                           	callstack 0
 29484                           
 29485 ;; *************** function ___wmul *****************
 29486 ;; Defined at:
 29487 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul16.c"
 29488 ;; Parameters:    Size  Location     Type
 29489 ;;  multiplier      2   15[COMRAM] unsigned int 
 29490 ;;  multiplicand    2   17[COMRAM] unsigned int 
 29491 ;; Auto vars:     Size  Location     Type
 29492 ;;  product         2   19[COMRAM] unsigned int 
 29493 ;; Return value:  Size  Location     Type
 29494 ;;                  2   15[COMRAM] unsigned int 
 29495 ;; Registers used:
 29496 ;;		wreg, status,2, status,0, prodl, prodh
 29497 ;; Tracked objects:
 29498 ;;		On entry : 0/0
 29499 ;;		On exit  : 0/0
 29500 ;;		Unchanged: 0/0
 29501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29502 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29503 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29505 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29506 ;;Total ram usage:        6 bytes
 29507 ;; Hardware stack levels used: 1
 29508 ;; Hardware stack levels required when called: 4
 29509 ;; This function calls:
 29510 ;;		Nothing
 29511 ;; This function is called by:
 29512 ;;		_getCurrentComparator
 29513 ;;		_getHopCode
 29514 ;; This function uses a non-reentrant model
 29515 ;;
 29516                           
 29517                           	psect	text127
 29518  009390                     __ptext127:
 29519                           	callstack 0
 29520  009390                     ___wmul:
 29521                           	callstack 22
 29522                           
 29523                           ; BSR set to: 1
 29524                           ;incstack = 0
 29525  009390  5010               	movf	___wmul@multiplier^0,w,c
 29526  009392  0212               	mulwf	___wmul@multiplicand^0,c
 29527  009394  CFF3 F014          	movff	prodl,___wmul@product
 29528  009398  CFF4 F015          	movff	prodh,___wmul@product+1
 29529  00939C  5010               	movf	___wmul@multiplier^0,w,c
 29530  00939E  0213               	mulwf	(___wmul@multiplicand+1)^0,c
 29531  0093A0  50F3               	movf	243,w,c
 29532  0093A2  2615               	addwf	(___wmul@product+1)^0,f,c
 29533  0093A4  5011               	movf	(___wmul@multiplier+1)^0,w,c
 29534  0093A6  0212               	mulwf	___wmul@multiplicand^0,c
 29535  0093A8  50F3               	movf	243,w,c
 29536  0093AA  2615               	addwf	(___wmul@product+1)^0,f,c
 29537  0093AC  C014  F010         	movff	___wmul@product,?___wmul
 29538  0093B0  C015  F011         	movff	___wmul@product+1,?___wmul+1
 29539  0093B4  0012               	return		;funcret
 29540  0093B6                     __end_of___wmul:
 29541                           	callstack 0
 29542                           
 29543 ;; *************** function _GetMotorPower *****************
 29544 ;; Defined at:
 29545 ;;		line 405 in file "outputs_MC50.c"
 29546 ;; Parameters:    Size  Location     Type
 29547 ;;		None
 29548 ;; Auto vars:     Size  Location     Type
 29549 ;;  defineatraso    1   18[COMRAM] unsigned char 
 29550 ;; Return value:  Size  Location     Type
 29551 ;;                  1    wreg      unsigned char 
 29552 ;; Registers used:
 29553 ;;		wreg, status,2, status,0, prodl, prodh
 29554 ;; Tracked objects:
 29555 ;;		On entry : 3E/1
 29556 ;;		On exit  : 3F/1
 29557 ;;		Unchanged: 0/0
 29558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29560 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29561 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29562 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29563 ;;Total ram usage:        4 bytes
 29564 ;; Hardware stack levels used: 1
 29565 ;; Hardware stack levels required when called: 4
 29566 ;; This function calls:
 29567 ;;		Nothing
 29568 ;; This function is called by:
 29569 ;;		_ControlCurrent
 29570 ;;		_InitSoftStart
 29571 ;;		_InitSoftStop
 29572 ;; This function uses a non-reentrant model
 29573 ;;
 29574                           
 29575                           	psect	text128
 29576  0073DC                     __ptext128:
 29577                           	callstack 0
 29578  0073DC                     _GetMotorPower:
 29579                           	callstack 22
 29580                           
 29581                           ;outputs_MC50.c: 408:     unsigned char defineatraso;;outputs_MC50.c: 413:     if(powerC
      +                          ontrol_st.decelarationActive==YES)
 29582                           
 29583                           ;incstack = 0
 29584  0073DC  0101               	movlb	1	; () banked
 29585  0073DE  057B               	decf	_powerControl_st& (0+255),w,b
 29586  0073E0  A4D8               	btfss	status,2,c
 29587  0073E2  D006               	goto	l19901
 29588                           
 29589                           ; BSR set to: 1
 29590                           ;outputs_MC50.c: 414:     {;outputs_MC50.c: 415:        temppower=(var_sys_NVM.motorPowe
      +                          r*6);
 29591  0073E4  0100               	movlb	0	; () banked
 29592  0073E6  519A               	movf	(_var_sys_NVM+2)& (0+255),w,b	;volatile
 29593  0073E8  0D06               	mullw	6
 29594  0073EA  CFF3 F18F          	movff	prodl,_temppower
 29595                           
 29596                           ;outputs_MC50.c: 416:     }
 29597  0073EE  D043               	goto	l2240
 29598  0073F0                     l19901:
 29599                           
 29600                           ; BSR set to: 1
 29601                           ;outputs_MC50.c: 418:     {;outputs_MC50.c: 419:         fullmotorPower=(var_sys_NVM.mot
      +                          orPower*6);
 29602  0073F0  0100               	movlb	0	; () banked
 29603  0073F2  519A               	movf	(_var_sys_NVM+2)& (0+255),w,b	;volatile
 29604  0073F4  0D06               	mullw	6
 29605  0073F6  CFF3 F082          	movff	prodl,_fullmotorPower
 29606                           
 29607                           ; BSR set to: 0
 29608                           ;outputs_MC50.c: 421:         if(var_sys.velocityFactor>0)
 29609  0073FA  0101               	movlb	1	; () banked
 29610  0073FC  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 29611  0073FE  D01C               	goto	l19911
 29612  007400  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 29613  007402  E103               	bnz	u22710
 29614  007404  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 29615  007406  A0D8               	btfss	status,0,c
 29616  007408  D017               	goto	l19911
 29617  00740A                     u22710:
 29618                           
 29619                           ; BSR set to: 1
 29620                           ;outputs_MC50.c: 422:         {;outputs_MC50.c: 423:             if(var_sys.velocityFact
      +                          or>fullmotorPower)
 29621  00740A  0100               	movlb	0	; () banked
 29622  00740C  5182               	movf	_fullmotorPower& (0+255),w,b
 29623  00740E  6E10               	movwf	??_GetMotorPower^0,c
 29624  007410  6A11               	clrf	(??_GetMotorPower+1)^0,c
 29625  007412  0101               	movlb	1	; () banked
 29626  007414  510E               	movf	(_var_sys+14)& (0+255),w,b	;volatile
 29627  007416  5C10               	subwf	??_GetMotorPower^0,w,c
 29628  007418  5011               	movf	(??_GetMotorPower+1)^0,w,c
 29629  00741A  0A80               	xorlw	128
 29630  00741C  6E12               	movwf	(??_GetMotorPower+2)^0,c
 29631  00741E  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 29632  007420  0A80               	xorlw	128
 29633  007422  5812               	subwfb	(??_GetMotorPower+2)^0,w,c
 29634  007424  B0D8               	btfsc	status,0,c
 29635  007426  D002               	goto	l19909
 29636                           
 29637                           ; BSR set to: 1
 29638                           ;outputs_MC50.c: 424:             {;outputs_MC50.c: 425:                 temppower=1;
 29639  007428  0E01               	movlw	1
 29640  00742A  D004               	goto	L109
 29641  00742C                     l19909:
 29642                           
 29643                           ; BSR set to: 1
 29644                           ;outputs_MC50.c: 428:             {;outputs_MC50.c: 430:                 temppower =full
      +                          motorPower-var_sys.velocityFactor;
 29645  00742C  510E               	movf	(_var_sys+14)& (0+255),w,b	;volatile
 29646  00742E  0100               	movlb	0	; () banked
 29647  007430  5D82               	subwf	_fullmotorPower& (0+255),w,b
 29648  007432  D017               	goto	L110
 29649  007434                     L109:
 29650  007434  6F8F               	movwf	_temppower& (0+255),b
 29651  007436  D01F               	goto	l2240
 29652  007438                     l19911:
 29653                           
 29654                           ; BSR set to: 1
 29655  007438  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 29656  00743A  D005               	goto	u22730
 29657  00743C  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 29658  00743E  E113               	bnz	l19921
 29659  007440  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 29660  007442  B0D8               	btfsc	status,0,c
 29661  007444  D010               	goto	l19921
 29662  007446                     u22730:
 29663                           
 29664                           ; BSR set to: 1
 29665  007446  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 29666  007448  D005               	goto	u22740
 29667  00744A  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 29668  00744C  E10C               	bnz	l19921
 29669  00744E  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 29670  007450  B0D8               	btfsc	status,0,c
 29671  007452  D009               	goto	l19921
 29672  007454                     u22740:
 29673                           
 29674                           ; BSR set to: 1
 29675                           ;outputs_MC50.c: 434:         {;outputs_MC50.c: 435:             temppower =fullmotorPow
      +                          er;
 29676  007454  C082  F18F         	movff	_fullmotorPower,_temppower
 29677                           
 29678                           ; BSR set to: 1
 29679                           ;outputs_MC50.c: 438:             if ( var_sys_NVM.motorPower>8 )
 29680  007458  0E08               	movlw	8
 29681  00745A  0100               	movlb	0	; () banked
 29682  00745C  659A               	cpfsgt	(_var_sys_NVM+2)& (0+255),b	;volatile
 29683  00745E  D00B               	goto	l2240
 29684                           
 29685                           ; BSR set to: 0
 29686                           ;outputs_MC50.c: 439:             {;outputs_MC50.c: 440:                 temppower = 80 
      +                          -23 +1;
 29687  007460  0E3A               	movlw	58
 29688  007462                     L110:
 29689  007462  0101               	movlb	1	; () banked
 29690  007464  D7E7               	goto	L109
 29691  007466                     l19921:
 29692                           
 29693                           ; BSR set to: 1
 29694  007466  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 29695  007468  D006               	goto	l2240
 29696  00746A  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 29697  00746C  E102               	bnz	u22760
 29698  00746E  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 29699  007470  B0D8               	btfsc	status,0,c
 29700  007472                     u22760:
 29701                           
 29702                           ; BSR set to: 1
 29703                           ;outputs_MC50.c: 447:                 temppower = var_sys.velocityFactorstop;
 29704  007472  C110  F18F         	movff	_var_sys+16,_temppower	;volatile
 29705  007476                     l2240:
 29706                           
 29707                           ;outputs_MC50.c: 451:     if ((var_sys.velocityFactorstop > 0)&&(var_sys.velocityFactor 
      +                          <= 0 )){
 29708  007476  0101               	movlb	1	; () banked
 29709  007478  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 29710  00747A  D00E               	goto	l19931
 29711  00747C  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 29712  00747E  E103               	bnz	u22770
 29713  007480  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 29714  007482  A0D8               	btfss	status,0,c
 29715  007484  D009               	goto	l19931
 29716  007486                     u22770:
 29717                           
 29718                           ; BSR set to: 1
 29719  007486  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 29720  007488  D005               	goto	u22780
 29721  00748A  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 29722  00748C  E105               	bnz	l19931
 29723  00748E  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 29724  007490  B0D8               	btfsc	status,0,c
 29725  007492  D002               	goto	l19931
 29726  007494                     u22780:
 29727                           
 29728                           ; BSR set to: 1
 29729                           ;outputs_MC50.c: 452:     defineatraso = 5;
 29730  007494  0E05               	movlw	5
 29731  007496  D001               	goto	L108
 29732  007498                     l19931:
 29733                           
 29734                           ; BSR set to: 1
 29735                           ;outputs_MC50.c: 455:     {;outputs_MC50.c: 456:     defineatraso = 23;
 29736  007498  0E17               	movlw	23
 29737  00749A                     L108:
 29738  00749A  6E13               	movwf	GetMotorPower@defineatraso^0,c
 29739                           
 29740                           ; BSR set to: 1
 29741                           ;outputs_MC50.c: 459:     return temppower+defineatraso;
 29742  00749C  518F               	movf	_temppower& (0+255),w,b
 29743  00749E  2413               	addwf	GetMotorPower@defineatraso^0,w,c
 29744                           
 29745                           ; BSR set to: 1
 29746  0074A0  0012               	return		;funcret
 29747  0074A2                     __end_of_GetMotorPower:
 29748                           	callstack 0
 29749                           
 29750 ;; *************** function _ControlCounterMoves *****************
 29751 ;; Defined at:
 29752 ;;		line 305 in file "controlMemory_MC50.c"
 29753 ;; Parameters:    Size  Location     Type
 29754 ;;		None
 29755 ;; Auto vars:     Size  Location     Type
 29756 ;;		None
 29757 ;; Return value:  Size  Location     Type
 29758 ;;                  1    wreg      void 
 29759 ;; Registers used:
 29760 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29761 ;; Tracked objects:
 29762 ;;		On entry : 3E/1
 29763 ;;		On exit  : 0/0
 29764 ;;		Unchanged: 0/0
 29765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29769 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29770 ;;Total ram usage:        0 bytes
 29771 ;; Hardware stack levels used: 1
 29772 ;; Hardware stack levels required when called: 14
 29773 ;; This function calls:
 29774 ;;		_SaveNVM_VarSystem
 29775 ;; This function is called by:
 29776 ;;		_main
 29777 ;; This function uses a non-reentrant model
 29778 ;;
 29779                           
 29780                           	psect	text129
 29781  008862                     __ptext129:
 29782                           	callstack 0
 29783  008862                     _ControlCounterMoves:
 29784                           	callstack 16
 29785                           
 29786                           ;controlMemory_MC50.c: 308:     if(ts_system.timeBetweenSaveCounters<=0)
 29787                           
 29788                           ; BSR set to: 1
 29789                           ;incstack = 0
 29790  008862  0101               	movlb	1	; () banked
 29791  008864  BFC2               	btfsc	(_ts_system+39)& (0+255),7,b	;volatile
 29792  008866  D005               	goto	u28170
 29793  008868  51C2               	movf	(_ts_system+39)& (0+255),w,b	;volatile
 29794  00886A  E127               	bnz	l1491
 29795  00886C  05C1               	decf	(_ts_system+38)& (0+255),w,b	;volatile
 29796  00886E  B0D8               	btfsc	status,0,c
 29797  008870  0012               	return	
 29798  008872                     u28170:
 29799                           
 29800                           ; BSR set to: 1
 29801                           ;controlMemory_MC50.c: 309:     {;controlMemory_MC50.c: 310:        ts_system.timeBetwee
      +                          nSaveCounters=((1000/50)*60)*5;
 29802  008872  0E17               	movlw	23
 29803  008874  6FC2               	movwf	(_ts_system+39)& (0+255),b	;volatile
 29804  008876  0E70               	movlw	112
 29805  008878  6FC1               	movwf	(_ts_system+38)& (0+255),b	;volatile
 29806                           
 29807                           ; BSR set to: 1
 29808                           ;controlMemory_MC50.c: 312:        if(var_sys.actualCounterMoves!=var_sys_NVM.counterMov
      +                          es)
 29809  00887A  0100               	movlb	0	; () banked
 29810  00887C  51BA               	movf	(_var_sys_NVM+34)& (0+255),w,b	;volatile
 29811  00887E  0101               	movlb	1	; () banked
 29812  008880  193C               	xorwf	(_var_sys+60)& (0+255),w,b	;volatile
 29813  008882  E110               	bnz	u28180
 29814  008884  0100               	movlb	0	; () banked
 29815  008886  51BB               	movf	(_var_sys_NVM+35)& (0+255),w,b	;volatile
 29816  008888  0101               	movlb	1	; () banked
 29817  00888A  193D               	xorwf	(_var_sys+61)& (0+255),w,b	;volatile
 29818  00888C  E10B               	bnz	u28180
 29819  00888E  0100               	movlb	0	; () banked
 29820  008890  51BC               	movf	(_var_sys_NVM+36)& (0+255),w,b	;volatile
 29821  008892  0101               	movlb	1	; () banked
 29822  008894  193E               	xorwf	(_var_sys+62)& (0+255),w,b	;volatile
 29823  008896  E106               	bnz	u28180
 29824  008898  0100               	movlb	0	; () banked
 29825  00889A  51BD               	movf	(_var_sys_NVM+37)& (0+255),w,b	;volatile
 29826  00889C  0101               	movlb	1	; () banked
 29827  00889E  193F               	xorwf	(_var_sys+63)& (0+255),w,b	;volatile
 29828  0088A0  B4D8               	btfsc	status,2,c
 29829  0088A2  0012               	return	
 29830  0088A4                     u28180:
 29831                           
 29832                           ; BSR set to: 1
 29833                           ;controlMemory_MC50.c: 313:        {;controlMemory_MC50.c: 314:            var_sys_NVM.c
      +                          ounterMoves=var_sys.actualCounterMoves;
 29834  0088A4  C13C  F0BA         	movff	_var_sys+60,_var_sys_NVM+34	;volatile
 29835  0088A8  C13D  F0BB         	movff	_var_sys+61,_var_sys_NVM+35	;volatile
 29836  0088AC  C13E  F0BC         	movff	_var_sys+62,_var_sys_NVM+36	;volatile
 29837  0088B0  C13F  F0BD         	movff	_var_sys+63,_var_sys_NVM+37	;volatile
 29838                           
 29839                           ; BSR set to: 1
 29840                           ;controlMemory_MC50.c: 315:            SaveNVM_VarSystem(pageMemoryCounters);
 29841  0088B4  0E02               	movlw	2
 29842  0088B6  ECAF  F047         	call	_SaveNVM_VarSystem
 29843  0088BA                     l1491:
 29844  0088BA  0012               	return		;funcret
 29845  0088BC                     __end_of_ControlCounterMoves:
 29846                           	callstack 0
 29847                           
 29848 ;; *************** function _SaveNVM_VarSystem *****************
 29849 ;; Defined at:
 29850 ;;		line 187 in file "controlMemory_MC50.c"
 29851 ;; Parameters:    Size  Location     Type
 29852 ;;  page            1    wreg     unsigned char 
 29853 ;; Auto vars:     Size  Location     Type
 29854 ;;  page            1    0[BANK0 ] unsigned char 
 29855 ;;  tempAdd         2    1[BANK0 ] unsigned int 
 29856 ;;  point           1    3[BANK0 ] PTR unsigned char 
 29857 ;;		 -> var_sys_NVM(64), 
 29858 ;; Return value:  Size  Location     Type
 29859 ;;                  1    wreg      void 
 29860 ;; Registers used:
 29861 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29862 ;; Tracked objects:
 29863 ;;		On entry : 0/0
 29864 ;;		On exit  : 0/0
 29865 ;;		Unchanged: 0/0
 29866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29868 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29870 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29871 ;;Total ram usage:        4 bytes
 29872 ;; Hardware stack levels used: 1
 29873 ;; Hardware stack levels required when called: 13
 29874 ;; This function calls:
 29875 ;;		_i2c_writeNBytes
 29876 ;; This function is called by:
 29877 ;;		_loadNVM_VarSystem
 29878 ;;		_ResetDefaultMemory
 29879 ;;		_ControlCounterMoves
 29880 ;;		_checkNVM_VarSystem
 29881 ;;		_sm_execute_ControlLearning
 29882 ;;		_sm_execute_menuConfiguration
 29883 ;;		_setValueToEdit
 29884 ;;		_controlSelectRemote
 29885 ;;		_eusartparser
 29886 ;; This function uses a non-reentrant model
 29887 ;;
 29888                           
 29889                           	psect	text130
 29890  008F5E                     __ptext130:
 29891                           	callstack 0
 29892  008F5E                     _SaveNVM_VarSystem:
 29893                           	callstack 14
 29894                           
 29895                           ;incstack = 0
 29896                           ;SaveNVM_VarSystem@page stored from wreg
 29897  008F5E  0100               	movlb	0	; () banked
 29898  008F60  6FD8               	movwf	SaveNVM_VarSystem@page& (0+255),b
 29899                           
 29900                           ;controlMemory_MC50.c: 187: void SaveNVM_VarSystem(unsigned char page);controlMemory_MC5
      +                          0.c: 188: {;controlMemory_MC50.c: 189:     unsigned int tempAdd=page*16;
 29901  008F62  0100               	movlb	0	; () banked
 29902  008F64  51D8               	movf	SaveNVM_VarSystem@page& (0+255),w,b
 29903  008F66  0D10               	mullw	16
 29904  008F68  CFF3 F0D9          	movff	prodl,SaveNVM_VarSystem@tempAdd
 29905  008F6C  CFF4 F0DA          	movff	prodh,SaveNVM_VarSystem@tempAdd+1
 29906                           
 29907                           ; BSR set to: 0
 29908                           ;controlMemory_MC50.c: 190:     char* point=(char*)&var_sys_NVM;
 29909  008F70  0E98               	movlw	low _var_sys_NVM
 29910  008F72  6FDB               	movwf	SaveNVM_VarSystem@point& (0+255),b
 29911                           
 29912                           ; BSR set to: 0
 29913                           ;controlMemory_MC50.c: 191:     point=point+tempAdd;
 29914  008F74  51DB               	movf	SaveNVM_VarSystem@point& (0+255),w,b
 29915  008F76  25D9               	addwf	SaveNVM_VarSystem@tempAdd& (0+255),w,b
 29916  008F78  6FDB               	movwf	SaveNVM_VarSystem@point& (0+255),b
 29917                           
 29918                           ; BSR set to: 0
 29919                           ;controlMemory_MC50.c: 192:    i2c_writeNBytes(0x50, tempAdd, point, 16);
 29920  008F7A  C0D9  F022         	movff	SaveNVM_VarSystem@tempAdd,i2c_writeNBytes@reg
 29921  008F7E  C0DA  F023         	movff	SaveNVM_VarSystem@tempAdd+1,i2c_writeNBytes@reg+1
 29922  008F82  C0DB  F024         	movff	SaveNVM_VarSystem@point,i2c_writeNBytes@data
 29923  008F86  0E00               	movlw	0
 29924  008F88  6E26               	movwf	(i2c_writeNBytes@len+1)^0,c
 29925  008F8A  0E10               	movlw	16
 29926  008F8C  6E25               	movwf	i2c_writeNBytes@len^0,c
 29927  008F8E  0E50               	movlw	80
 29928  008F90  EC5A  F041         	call	_i2c_writeNBytes
 29929  008F94  0012               	return		;funcret
 29930  008F96                     __end_of_SaveNVM_VarSystem:
 29931                           	callstack 0
 29932                           
 29933 ;; *************** function _i2c_writeNBytes *****************
 29934 ;; Defined at:
 29935 ;;		line 50 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 29936 ;; Parameters:    Size  Location     Type
 29937 ;;  address         1    wreg     unsigned char 
 29938 ;;  reg             2   33[COMRAM] unsigned short 
 29939 ;;  data            1   35[COMRAM] PTR void 
 29940 ;;		 -> RemoveSerial@tempSerial(4), saveNewSerial@tempSerial(4), var_sys_NVM(64), 
 29941 ;;  len             2   36[COMRAM] unsigned int 
 29942 ;; Auto vars:     Size  Location     Type
 29943 ;;  address         1   56[COMRAM] unsigned char 
 29944 ;;  dat            17   39[COMRAM] unsigned char [17]
 29945 ;; Return value:  Size  Location     Type
 29946 ;;                  1    wreg      void 
 29947 ;; Registers used:
 29948 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29949 ;; Tracked objects:
 29950 ;;		On entry : 3F/0
 29951 ;;		On exit  : 0/0
 29952 ;;		Unchanged: 0/0
 29953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29954 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29955 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29956 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29957 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29958 ;;Total ram usage:       24 bytes
 29959 ;; Hardware stack levels used: 1
 29960 ;; Hardware stack levels required when called: 12
 29961 ;; This function calls:
 29962 ;;		_I2C1_Close
 29963 ;;		_I2C1_MasterWrite
 29964 ;;		_I2C1_Open
 29965 ;;		_I2C1_SetAddressNackCallback
 29966 ;;		_I2C1_SetBuffer
 29967 ;;		_memcpy
 29968 ;; This function is called by:
 29969 ;;		_saveNewSerial
 29970 ;;		_RemoveSerial
 29971 ;;		_SaveNVM_VarSystem
 29972 ;; This function uses a non-reentrant model
 29973 ;;
 29974                           
 29975                           	psect	text131
 29976  0082B4                     __ptext131:
 29977                           	callstack 0
 29978  0082B4                     _i2c_writeNBytes:
 29979                           	callstack 14
 29980                           
 29981                           ;incstack = 0
 29982                           ;i2c_writeNBytes@address stored from wreg
 29983  0082B4  6E39               	movwf	i2c_writeNBytes@address^0,c
 29984                           
 29985                           ;mcc_generated_files/drivers/i2c_simple_master.c: 50: void i2c_writeNBytes(i2c1_address_
      +                          t address, uint16_t reg, void* data, size_t len);mcc_generated_files/drivers/i2c_simple_
      +                          master.c: 51: {;mcc_generated_files/drivers/i2c_simple_master.c: 52:     uint8_t dat[17]
      +                          ;;mcc_generated_files/drivers/i2c_simple_master.c: 53:     dat[0] = reg;
 29986  0082B6  C022  F028         	movff	i2c_writeNBytes@reg,i2c_writeNBytes@dat
 29987                           
 29988                           ;mcc_generated_files/drivers/i2c_simple_master.c: 54:     memcpy(dat + 1, data, len);
 29989  0082BA  0E29               	movlw	low (i2c_writeNBytes@dat+1)
 29990  0082BC  6E10               	movwf	memcpy@d1^0,c
 29991  0082BE  6A11               	clrf	(memcpy@d1+1)^0,c
 29992  0082C0  C024  F012         	movff	i2c_writeNBytes@data,memcpy@s1
 29993  0082C4  6A13               	clrf	(memcpy@s1+1)^0,c
 29994  0082C6  C025  F014         	movff	i2c_writeNBytes@len,memcpy@n
 29995  0082CA  C026  F015         	movff	i2c_writeNBytes@len+1,memcpy@n+1
 29996  0082CE  ECB1  F046         	call	_memcpy	;wreg free
 29997  0082D2                     l19955:
 29998  0082D2  5023               	movf	(i2c_writeNBytes@reg+1)^0,w,c
 29999  0082D4  1039               	iorwf	i2c_writeNBytes@address^0,w,c
 30000  0082D6  EC2A  F03F         	call	_I2C1_Open
 30001  0082DA  0900               	iorlw	0
 30002  0082DC  B4D8               	btfsc	status,2,c
 30003  0082DE  D7F9               	goto	l19955
 30004                           
 30005                           ;mcc_generated_files/drivers/i2c_simple_master.c: 56:     I2C1_SetBuffer(dat,len + 1);
 30006  0082E0  0E28               	movlw	low i2c_writeNBytes@dat
 30007  0082E2  6E10               	movwf	I2C1_SetBuffer@buffer^0,c
 30008  0082E4  6A11               	clrf	(I2C1_SetBuffer@buffer+1)^0,c
 30009  0082E6  0E01               	movlw	1
 30010  0082E8  2425               	addwf	i2c_writeNBytes@len^0,w,c
 30011  0082EA  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 30012  0082EC  0E00               	movlw	0
 30013  0082EE  2026               	addwfc	(i2c_writeNBytes@len+1)^0,w,c
 30014  0082F0  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 30015  0082F2  ECC3  F04A         	call	_I2C1_SetBuffer	;wreg free
 30016                           
 30017                           ; BSR set to: 2
 30018                           ;mcc_generated_files/drivers/i2c_simple_master.c: 57:     I2C1_SetAddressNackCallback(((
      +                          void*)0),((void*)0));
 30019  0082F6  0E00               	movlw	0
 30020  0082F8  6E15               	movwf	I2C1_SetAddressNackCallback@cb^0,c
 30021  0082FA  0E00               	movlw	0
 30022  0082FC  6E16               	movwf	(I2C1_SetAddressNackCallback@cb+1)^0,c
 30023  0082FE  0E00               	movlw	0
 30024  008300  6E17               	movwf	I2C1_SetAddressNackCallback@ptr^0,c
 30025  008302  0E00               	movlw	0
 30026  008304  6E18               	movwf	(I2C1_SetAddressNackCallback@ptr+1)^0,c
 30027  008306  ECF4  F04A         	call	_I2C1_SetAddressNackCallback	;wreg free
 30028                           
 30029                           ;mcc_generated_files/drivers/i2c_simple_master.c: 58:     I2C1_MasterWrite();
 30030  00830A  ECC2  F04B         	call	_I2C1_MasterWrite	;wreg free
 30031  00830E                     l19963:
 30032  00830E  EC35  F04A         	call	_I2C1_Close	;wreg free
 30033  008312  06E8               	decf	wreg,f,c
 30034  008314  B4D8               	btfsc	status,2,c
 30035  008316  D7FB               	goto	l19963
 30036                           
 30037                           ;mcc_generated_files/drivers/i2c_simple_master.c: 60:     _delay((unsigned long)((10)*(6
      +                          4000000/4000.0)));
 30038  008318  0ED0               	movlw	208
 30039  00831A  6E27               	movwf	??_i2c_writeNBytes^0,c
 30040  00831C  0ECA               	movlw	202
 30041  00831E                     u29827:
 30042  00831E  2EE8               	decfsz	wreg,f,c
 30043  008320  D7FE               	bra	u29827
 30044  008322  2E27               	decfsz	??_i2c_writeNBytes^0,f,c
 30045  008324  D7FC               	bra	u29827
 30046  008326  0012               	return		;funcret
 30047  008328                     __end_of_i2c_writeNBytes:
 30048                           	callstack 0
 30049                           
 30050 ;; *************** function _memcpy *****************
 30051 ;; Defined at:
 30052 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\memcpy.c"
 30053 ;; Parameters:    Size  Location     Type
 30054 ;;  d1              2   15[COMRAM] PTR void 
 30055 ;;		 -> controlSelectRemote@tempSerial(4), Decrypt@Buffer(4), SecureKeyGen@SKEYtemp(8), SecureKeyGen@HOPtemp(4), 
 30056 ;;		 -> SecureKeyGen@Buffer(8), NormalKeyGen@SKEYtemp(4), NormalKeyGen@SEED(4), NormalKeyGen@HOPtemp(4), 
 30057 ;;		 -> NormalKeyGen@Buffer(8), DKEY(8), classic_data(16), I2C1_WriteNBytes@dat(17), 
 30058 ;;		 -> i2c_writeNBytes@dat(17), 
 30059 ;;  s1              2   17[COMRAM] PTR const void 
 30060 ;;		 -> classic_data.raw_data(4), Decrypt@Buffer(4), SecureKeyGen@SKEYtemp(8), SecureKeyGen@HOPtemp(4), 
 30061 ;;		 -> SecureKeyGen@Buffer(8), NormalKeyGen@SKEYtemp(4), NormalKeyGen@SEED(4), NormalKeyGen@HOPtemp(4), 
 30062 ;;		 -> NormalKeyGen@Buffer(8), classic_data.serialnumber(4), classic_data(16), BufferRF(9), 
 30063 ;;		 -> RemoveSerial@tempSerial(4), saveNewSerial@tempSerial(4), var_sys_NVM(64), 
 30064 ;;  n               2   19[COMRAM] unsigned int 
 30065 ;; Auto vars:     Size  Location     Type
 30066 ;;  s               2   24[COMRAM] PTR const unsigned char 
 30067 ;;		 -> classic_data.raw_data(4), Decrypt@Buffer(4), SecureKeyGen@SKEYtemp(8), SecureKeyGen@HOPtemp(4), 
 30068 ;;		 -> SecureKeyGen@Buffer(8), NormalKeyGen@SKEYtemp(4), NormalKeyGen@SEED(4), NormalKeyGen@HOPtemp(4), 
 30069 ;;		 -> NormalKeyGen@Buffer(8), classic_data.serialnumber(4), classic_data(16), BufferRF(9), 
 30070 ;;		 -> RemoveSerial@tempSerial(4), saveNewSerial@tempSerial(4), var_sys_NVM(64), 
 30071 ;;  d               2   22[COMRAM] PTR unsigned char 
 30072 ;;		 -> controlSelectRemote@tempSerial(4), Decrypt@Buffer(4), SecureKeyGen@SKEYtemp(8), SecureKeyGen@HOPtemp(4), 
 30073 ;;		 -> SecureKeyGen@Buffer(8), NormalKeyGen@SKEYtemp(4), NormalKeyGen@SEED(4), NormalKeyGen@HOPtemp(4), 
 30074 ;;		 -> NormalKeyGen@Buffer(8), DKEY(8), classic_data(16), I2C1_WriteNBytes@dat(17), 
 30075 ;;		 -> i2c_writeNBytes@dat(17), 
 30076 ;;  tmp             1   21[COMRAM] unsigned char 
 30077 ;; Return value:  Size  Location     Type
 30078 ;;                  2   15[COMRAM] PTR void 
 30079 ;; Registers used:
 30080 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 30081 ;; Tracked objects:
 30082 ;;		On entry : 0/0
 30083 ;;		On exit  : 0/0
 30084 ;;		Unchanged: 0/0
 30085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30086 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30087 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30089 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30090 ;;Total ram usage:       11 bytes
 30091 ;; Hardware stack levels used: 1
 30092 ;; Hardware stack levels required when called: 4
 30093 ;; This function calls:
 30094 ;;		Nothing
 30095 ;; This function is called by:
 30096 ;;		_i2c_writeNBytes
 30097 ;;		_getSerialCmd
 30098 ;;		_NormalKeyGen
 30099 ;;		_Decrypt
 30100 ;;		_keeloqDecryptPacket
 30101 ;;		_DecryptPacket_12BIT
 30102 ;; This function uses a non-reentrant model
 30103 ;;
 30104                           
 30105                           	psect	text132
 30106  008D62                     __ptext132:
 30107                           	callstack 0
 30108  008D62                     _memcpy:
 30109                           	callstack 21
 30110                           
 30111                           ;incstack = 0
 30112  008D62  C012  F019         	movff	memcpy@s1,memcpy@s
 30113  008D66  C013  F01A         	movff	memcpy@s1+1,memcpy@s+1
 30114  008D6A  C010  F017         	movff	memcpy@d1,memcpy@d
 30115  008D6E  C011  F018         	movff	memcpy@d1+1,memcpy@d+1
 30116  008D72  D010               	goto	l19895
 30117  008D74                     l19887:
 30118  008D74  C019  FFD9         	movff	memcpy@s,fsr2l
 30119  008D78  C01A  FFDA         	movff	memcpy@s+1,fsr2h
 30120  008D7C  50DF               	movf	indf2,w,c
 30121  008D7E  6E16               	movwf	memcpy@tmp^0,c
 30122  008D80  4A19               	infsnz	memcpy@s^0,f,c
 30123  008D82  2A1A               	incf	(memcpy@s+1)^0,f,c
 30124  008D84  C017  FFD9         	movff	memcpy@d,fsr2l
 30125  008D88  C018  FFDA         	movff	memcpy@d+1,fsr2h
 30126  008D8C  C016  FFDF         	movff	memcpy@tmp,indf2
 30127  008D90  4A17               	infsnz	memcpy@d^0,f,c
 30128  008D92  2A18               	incf	(memcpy@d+1)^0,f,c
 30129  008D94                     l19895:
 30130  008D94  0614               	decf	memcpy@n^0,f,c
 30131  008D96  A0D8               	btfss	status,0,c
 30132  008D98  0615               	decf	(memcpy@n+1)^0,f,c
 30133  008D9A  2814               	incf	memcpy@n^0,w,c
 30134  008D9C  E1EB               	bnz	l19887
 30135  008D9E  2815               	incf	(memcpy@n+1)^0,w,c
 30136  008DA0  B4D8               	btfsc	status,2,c
 30137  008DA2  0012               	return	
 30138  008DA4  D7E7               	goto	l19887
 30139  008DA6                     __end_of_memcpy:
 30140                           	callstack 0
 30141                           
 30142 ;; *************** function _I2C1_SetAddressNackCallback *****************
 30143 ;; Defined at:
 30144 ;;		line 283 in file "mcc_generated_files/i2c1_master.c"
 30145 ;; Parameters:    Size  Location     Type
 30146 ;;  cb              2   20[COMRAM] PTR FTN(PTR void ,)enum 
 30147 ;;		 -> Absolute function(1), 
 30148 ;;  ptr             2   22[COMRAM] PTR void 
 30149 ;;		 -> NULL(0), 
 30150 ;; Auto vars:     Size  Location     Type
 30151 ;;		None
 30152 ;; Return value:  Size  Location     Type
 30153 ;;                  1    wreg      void 
 30154 ;; Registers used:
 30155 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30156 ;; Tracked objects:
 30157 ;;		On entry : 3F/2
 30158 ;;		On exit  : 0/0
 30159 ;;		Unchanged: 0/0
 30160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30161 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30162 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30164 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30165 ;;Total ram usage:        4 bytes
 30166 ;; Hardware stack levels used: 1
 30167 ;; Hardware stack levels required when called: 5
 30168 ;; This function calls:
 30169 ;;		_I2C1_SetCallback
 30170 ;; This function is called by:
 30171 ;;		_i2c_writeNBytes
 30172 ;;		_i2c_readDataBlock
 30173 ;;		_I2C1_Read1ByteRegister
 30174 ;; This function uses a non-reentrant model
 30175 ;;
 30176                           
 30177                           	psect	text133
 30178  0095E8                     __ptext133:
 30179                           	callstack 0
 30180  0095E8                     _I2C1_SetAddressNackCallback:
 30181                           	callstack 20
 30182                           
 30183                           ; BSR set to: 2
 30184                           ;mcc_generated_files/i2c1_master.c: 283: void I2C1_SetAddressNackCallback(i2c1_callback_
      +                          t cb, void *ptr);mcc_generated_files/i2c1_master.c: 284: {;mcc_generated_files/i2c1_mast
      +                          er.c: 285:     I2C1_SetCallback(I2C1_ADDR_NACK, cb, ptr);
 30185                           
 30186                           ;incstack = 0
 30187  0095E8  C015  F010         	movff	I2C1_SetAddressNackCallback@cb,I2C1_SetCallback@cb
 30188  0095EC  C016  F011         	movff	I2C1_SetAddressNackCallback@cb+1,I2C1_SetCallback@cb+1
 30189  0095F0  C017  F012         	movff	I2C1_SetAddressNackCallback@ptr,I2C1_SetCallback@ptr
 30190  0095F4  C018  F013         	movff	I2C1_SetAddressNackCallback@ptr+1,I2C1_SetCallback@ptr+1
 30191  0095F8  0E02               	movlw	2
 30192  0095FA  EC73  F042         	call	_I2C1_SetCallback
 30193  0095FE  0012               	return		;funcret
 30194  009600                     __end_of_I2C1_SetAddressNackCallback:
 30195                           	callstack 0
 30196                           
 30197 ;; *************** function _I2C1_Open *****************
 30198 ;; Defined at:
 30199 ;;		line 176 in file "mcc_generated_files/i2c1_master.c"
 30200 ;; Parameters:    Size  Location     Type
 30201 ;;  address         1    wreg     unsigned char 
 30202 ;; Auto vars:     Size  Location     Type
 30203 ;;  address         1   15[COMRAM] unsigned char 
 30204 ;;  returnValue     1   16[COMRAM] enum E355
 30205 ;; Return value:  Size  Location     Type
 30206 ;;                  1    wreg      enum E355
 30207 ;; Registers used:
 30208 ;;		wreg, status,2, status,0, cstack
 30209 ;; Tracked objects:
 30210 ;;		On entry : 0/0
 30211 ;;		On exit  : 33/2
 30212 ;;		Unchanged: 0/0
 30213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30215 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30217 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30218 ;;Total ram usage:        2 bytes
 30219 ;; Hardware stack levels used: 1
 30220 ;; Hardware stack levels required when called: 5
 30221 ;; This function calls:
 30222 ;;		_I2C1_MasterClearIrq
 30223 ;;		_I2C1_MasterOpen
 30224 ;; This function is called by:
 30225 ;;		_i2c_writeNBytes
 30226 ;;		_i2c_readDataBlock
 30227 ;;		_I2C1_Read1ByteRegister
 30228 ;; This function uses a non-reentrant model
 30229 ;;
 30230                           
 30231                           	psect	text134
 30232  007E54                     __ptext134:
 30233                           	callstack 0
 30234  007E54                     _I2C1_Open:
 30235                           	callstack 20
 30236                           
 30237                           ;incstack = 0
 30238                           ;I2C1_Open@address stored from wreg
 30239  007E54  6E10               	movwf	I2C1_Open@address^0,c
 30240                           
 30241                           ;mcc_generated_files/i2c1_master.c: 176: i2c1_error_t I2C1_Open(i2c1_address_t address);
      +                          mcc_generated_files/i2c1_master.c: 177: {;mcc_generated_files/i2c1_master.c: 178:     i2
      +                          c1_error_t returnValue = I2C1_BUSY;
 30242  007E56  0E01               	movlw	1
 30243  007E58  6E11               	movwf	I2C1_Open@returnValue^0,c
 30244                           
 30245                           ;mcc_generated_files/i2c1_master.c: 180:     if(!I2C1_Status.inUse)
 30246  007E5A  0102               	movlb	2	; () banked
 30247  007E5C  B55F               	btfsc	(_I2C1_Status+35)& (0+255),2,b
 30248  007E5E  D03A               	goto	l19861
 30249                           
 30250                           ; BSR set to: 2
 30251                           ;mcc_generated_files/i2c1_master.c: 181:     {;mcc_generated_files/i2c1_master.c: 182:  
      +                                 I2C1_Status.address = address;
 30252  007E60  C010  F258         	movff	I2C1_Open@address,_I2C1_Status+28
 30253                           
 30254                           ; BSR set to: 2
 30255                           ;mcc_generated_files/i2c1_master.c: 183:         I2C1_Status.busy = 0;
 30256  007E64  935F               	bcf	(_I2C1_Status+35)& (0+255),1,b
 30257                           
 30258                           ; BSR set to: 2
 30259                           ;mcc_generated_files/i2c1_master.c: 184:         I2C1_Status.inUse = 1;
 30260  007E66  855F               	bsf	(_I2C1_Status+35)& (0+255),2,b
 30261                           
 30262                           ; BSR set to: 2
 30263                           ;mcc_generated_files/i2c1_master.c: 185:         I2C1_Status.addressNackCheck = 0;
 30264  007E68  915F               	bcf	(_I2C1_Status+35)& (0+255),0,b
 30265                           
 30266                           ; BSR set to: 2
 30267                           ;mcc_generated_files/i2c1_master.c: 186:         I2C1_Status.state = I2C1_RESET;
 30268  007E6A  0E0E               	movlw	14
 30269  007E6C  6F5D               	movwf	(_I2C1_Status+33)& (0+255),b
 30270                           
 30271                           ; BSR set to: 2
 30272                           ;mcc_generated_files/i2c1_master.c: 187:         I2C1_Status.time_out_value = 500;
 30273  007E6E  0E01               	movlw	1
 30274  007E70  6F57               	movwf	(_I2C1_Status+27)& (0+255),b
 30275  007E72  0EF4               	movlw	244
 30276  007E74  6F56               	movwf	(_I2C1_Status+26)& (0+255),b
 30277                           
 30278                           ; BSR set to: 2
 30279                           ;mcc_generated_files/i2c1_master.c: 188:         I2C1_Status.bufferFree = 1;
 30280  007E76  875F               	bsf	(_I2C1_Status+35)& (0+255),3,b
 30281                           
 30282                           ; BSR set to: 2
 30283                           ;mcc_generated_files/i2c1_master.c: 191:         I2C1_Status.callbackTable[I2C1_DATA_COM
      +                          PLETE]=I2C1_CallbackReturnStop;
 30284  007E78  0E1E               	movlw	low _I2C1_CallbackReturnStop
 30285  007E7A  6F3C               	movwf	_I2C1_Status& (0+255),b
 30286  007E7C  0E98               	movlw	high _I2C1_CallbackReturnStop
 30287  007E7E  6F3D               	movwf	(_I2C1_Status+1)& (0+255),b
 30288                           
 30289                           ; BSR set to: 2
 30290                           ;mcc_generated_files/i2c1_master.c: 192:         I2C1_Status.callbackPayload[I2C1_DATA_C
      +                          OMPLETE] = ((void*)0);
 30291  007E80  0E00               	movlw	0
 30292  007E82  6F48               	movwf	(_I2C1_Status+12)& (0+255),b
 30293  007E84  0E00               	movlw	0
 30294  007E86  6F49               	movwf	(_I2C1_Status+13)& (0+255),b
 30295                           
 30296                           ; BSR set to: 2
 30297                           ;mcc_generated_files/i2c1_master.c: 193:         I2C1_Status.callbackTable[I2C1_WRITE_CO
      +                          LLISION]=I2C1_CallbackReturnStop;
 30298  007E88  0E1E               	movlw	low _I2C1_CallbackReturnStop
 30299  007E8A  6F3E               	movwf	(_I2C1_Status+2)& (0+255),b
 30300  007E8C  0E98               	movlw	high _I2C1_CallbackReturnStop
 30301  007E8E  6F3F               	movwf	(_I2C1_Status+3)& (0+255),b
 30302                           
 30303                           ; BSR set to: 2
 30304                           ;mcc_generated_files/i2c1_master.c: 194:         I2C1_Status.callbackPayload[I2C1_WRITE_
      +                          COLLISION] = ((void*)0);
 30305  007E90  0E00               	movlw	0
 30306  007E92  6F4A               	movwf	(_I2C1_Status+14)& (0+255),b
 30307  007E94  0E00               	movlw	0
 30308  007E96  6F4B               	movwf	(_I2C1_Status+15)& (0+255),b
 30309                           
 30310                           ; BSR set to: 2
 30311                           ;mcc_generated_files/i2c1_master.c: 195:         I2C1_Status.callbackTable[I2C1_ADDR_NAC
      +                          K]=I2C1_CallbackReturnStop;
 30312  007E98  0E1E               	movlw	low _I2C1_CallbackReturnStop
 30313  007E9A  6F40               	movwf	(_I2C1_Status+4)& (0+255),b
 30314  007E9C  0E98               	movlw	high _I2C1_CallbackReturnStop
 30315  007E9E  6F41               	movwf	(_I2C1_Status+5)& (0+255),b
 30316                           
 30317                           ; BSR set to: 2
 30318                           ;mcc_generated_files/i2c1_master.c: 196:         I2C1_Status.callbackPayload[I2C1_ADDR_N
      +                          ACK] = ((void*)0);
 30319  007EA0  0E00               	movlw	0
 30320  007EA2  6F4C               	movwf	(_I2C1_Status+16)& (0+255),b
 30321  007EA4  0E00               	movlw	0
 30322  007EA6  6F4D               	movwf	(_I2C1_Status+17)& (0+255),b
 30323                           
 30324                           ; BSR set to: 2
 30325                           ;mcc_generated_files/i2c1_master.c: 197:         I2C1_Status.callbackTable[I2C1_DATA_NAC
      +                          K]=I2C1_CallbackReturnStop;
 30326  007EA8  0E1E               	movlw	low _I2C1_CallbackReturnStop
 30327  007EAA  6F42               	movwf	(_I2C1_Status+6)& (0+255),b
 30328  007EAC  0E98               	movlw	high _I2C1_CallbackReturnStop
 30329  007EAE  6F43               	movwf	(_I2C1_Status+7)& (0+255),b
 30330                           
 30331                           ; BSR set to: 2
 30332                           ;mcc_generated_files/i2c1_master.c: 198:         I2C1_Status.callbackPayload[I2C1_DATA_N
      +                          ACK] = ((void*)0);
 30333  007EB0  0E00               	movlw	0
 30334  007EB2  6F4E               	movwf	(_I2C1_Status+18)& (0+255),b
 30335  007EB4  0E00               	movlw	0
 30336  007EB6  6F4F               	movwf	(_I2C1_Status+19)& (0+255),b
 30337                           
 30338                           ; BSR set to: 2
 30339                           ;mcc_generated_files/i2c1_master.c: 199:         I2C1_Status.callbackTable[I2C1_TIMEOUT]
      +                          =I2C1_CallbackReturnReset;
 30340  007EB8  0E1A               	movlw	low _I2C1_CallbackReturnReset
 30341  007EBA  6F44               	movwf	(_I2C1_Status+8)& (0+255),b
 30342  007EBC  0E98               	movlw	high _I2C1_CallbackReturnReset
 30343  007EBE  6F45               	movwf	(_I2C1_Status+9)& (0+255),b
 30344                           
 30345                           ; BSR set to: 2
 30346                           ;mcc_generated_files/i2c1_master.c: 200:         I2C1_Status.callbackPayload[I2C1_TIMEOU
      +                          T] = ((void*)0);
 30347  007EC0  0E00               	movlw	0
 30348  007EC2  6F50               	movwf	(_I2C1_Status+20)& (0+255),b
 30349  007EC4  0E00               	movlw	0
 30350  007EC6  6F51               	movwf	(_I2C1_Status+21)& (0+255),b
 30351                           
 30352                           ; BSR set to: 2
 30353                           ;mcc_generated_files/i2c1_master.c: 202:         I2C1_MasterClearIrq();
 30354  007EC8  ECF9  F04B         	call	_I2C1_MasterClearIrq	;wreg free
 30355                           
 30356                           ; BSR set to: 14
 30357                           ;mcc_generated_files/i2c1_master.c: 203:         I2C1_MasterOpen();
 30358  007ECC  EC00  F04B         	call	_I2C1_MasterOpen	;wreg free
 30359                           
 30360                           ; BSR set to: 14
 30361                           ;mcc_generated_files/i2c1_master.c: 204:         returnValue = I2C1_NOERR;
 30362  007ED0  0E00               	movlw	0
 30363  007ED2  6E11               	movwf	I2C1_Open@returnValue^0,c
 30364  007ED4                     l19861:
 30365                           
 30366                           ;mcc_generated_files/i2c1_master.c: 206:     return returnValue;
 30367  007ED4  5011               	movf	I2C1_Open@returnValue^0,w,c
 30368  007ED6  0012               	return		;funcret
 30369  007ED8                     __end_of_I2C1_Open:
 30370                           	callstack 0
 30371                           
 30372 ;; *************** function _I2C1_MasterOpen *****************
 30373 ;; Defined at:
 30374 ;;		line 543 in file "mcc_generated_files/i2c1_master.c"
 30375 ;; Parameters:    Size  Location     Type
 30376 ;;		None
 30377 ;; Auto vars:     Size  Location     Type
 30378 ;;		None
 30379 ;; Return value:  Size  Location     Type
 30380 ;;                  1    wreg      _Bool 
 30381 ;; Registers used:
 30382 ;;		wreg, status,2
 30383 ;; Tracked objects:
 30384 ;;		On entry : 3F/E
 30385 ;;		On exit  : 3F/E
 30386 ;;		Unchanged: 3F/0
 30387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30388 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30391 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30392 ;;Total ram usage:        0 bytes
 30393 ;; Hardware stack levels used: 1
 30394 ;; Hardware stack levels required when called: 4
 30395 ;; This function calls:
 30396 ;;		Nothing
 30397 ;; This function is called by:
 30398 ;;		_I2C1_Open
 30399 ;; This function uses a non-reentrant model
 30400 ;;
 30401                           
 30402                           	psect	text135
 30403  009600                     __ptext135:
 30404                           	callstack 0
 30405  009600                     _I2C1_MasterOpen:
 30406                           	callstack 20
 30407                           
 30408                           ; BSR set to: 14
 30409                           ;mcc_generated_files/i2c1_master.c: 545:     if(!SSP1CON1bits.SSPEN)
 30410                           
 30411                           ;incstack = 0
 30412  009600  BA96               	btfsc	150,5,c	;volatile
 30413  009602  0012               	return	
 30414                           
 30415                           ; BSR set to: 14
 30416                           ;mcc_generated_files/i2c1_master.c: 546:     {;mcc_generated_files/i2c1_master.c: 547:  
      +                                 SSP1STAT = 0x80;
 30417  009604  0E80               	movlw	128
 30418  009606  6E95               	movwf	149,c	;volatile
 30419                           
 30420                           ;mcc_generated_files/i2c1_master.c: 548:         SSP1CON1 = 0x08;
 30421  009608  0E08               	movlw	8
 30422  00960A  6E96               	movwf	150,c	;volatile
 30423                           
 30424                           ;mcc_generated_files/i2c1_master.c: 549:         SSP1CON2 = 0x00;
 30425  00960C  0E00               	movlw	0
 30426  00960E  6E97               	movwf	151,c	;volatile
 30427                           
 30428                           ;mcc_generated_files/i2c1_master.c: 550:         SSP1ADD = 0x9F;
 30429  009610  0E9F               	movlw	159
 30430  009612  6E93               	movwf	147,c	;volatile
 30431                           
 30432                           ; BSR set to: 14
 30433                           ;mcc_generated_files/i2c1_master.c: 551:         SSP1CON1bits.SSPEN = 1;
 30434  009614  8A96               	bsf	150,5,c	;volatile
 30435                           
 30436                           ; BSR set to: 14
 30437  009616  0012               	return		;funcret
 30438  009618                     __end_of_I2C1_MasterOpen:
 30439                           	callstack 0
 30440                           
 30441 ;; *************** function _I2C1_MasterWrite *****************
 30442 ;; Defined at:
 30443 ;;		line 251 in file "mcc_generated_files/i2c1_master.c"
 30444 ;; Parameters:    Size  Location     Type
 30445 ;;		None
 30446 ;; Auto vars:     Size  Location     Type
 30447 ;;		None
 30448 ;; Return value:  Size  Location     Type
 30449 ;;                  1    wreg      enum E355
 30450 ;; Registers used:
 30451 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30452 ;; Tracked objects:
 30453 ;;		On entry : 0/2
 30454 ;;		On exit  : 3F/2
 30455 ;;		Unchanged: 0/0
 30456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30460 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30461 ;;Total ram usage:        0 bytes
 30462 ;; Hardware stack levels used: 1
 30463 ;; Hardware stack levels required when called: 11
 30464 ;; This function calls:
 30465 ;;		_I2C1_MasterOperation
 30466 ;; This function is called by:
 30467 ;;		_i2c_writeNBytes
 30468 ;;		_i2c_readDataBlock
 30469 ;;		_I2C1_Read1ByteRegister
 30470 ;; This function uses a non-reentrant model
 30471 ;;
 30472                           
 30473                           	psect	text136
 30474  009784                     __ptext136:
 30475                           	callstack 0
 30476  009784                     _I2C1_MasterWrite:
 30477                           	callstack 14
 30478                           
 30479                           ;mcc_generated_files/i2c1_master.c: 253:     return I2C1_MasterOperation(0);;	Return val
      +                          ue of _I2C1_MasterWrite is never used
 30480                           
 30481                           ; BSR set to: 14
 30482                           ;incstack = 0
 30483  009784  0E00               	movlw	0
 30484  009786  EC9E  F048         	call	_I2C1_MasterOperation
 30485                           
 30486                           ; BSR set to: 2
 30487  00978A  0012               	return		;funcret
 30488  00978C                     __end_of_I2C1_MasterWrite:
 30489                           	callstack 0
 30490                           
 30491 ;; *************** function _I2C1_MasterOperation *****************
 30492 ;; Defined at:
 30493 ;;		line 224 in file "mcc_generated_files/i2c1_master.c"
 30494 ;; Parameters:    Size  Location     Type
 30495 ;;  read            1    wreg     _Bool 
 30496 ;; Auto vars:     Size  Location     Type
 30497 ;;  read            1   31[COMRAM] _Bool 
 30498 ;;  returnValue     1   32[COMRAM] enum E355
 30499 ;; Return value:  Size  Location     Type
 30500 ;;                  1    wreg      enum E355
 30501 ;; Registers used:
 30502 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30503 ;; Tracked objects:
 30504 ;;		On entry : 0/2
 30505 ;;		On exit  : 3F/2
 30506 ;;		Unchanged: 0/0
 30507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30509 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30511 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30512 ;;Total ram usage:        2 bytes
 30513 ;; Hardware stack levels used: 1
 30514 ;; Hardware stack levels required when called: 10
 30515 ;; This function calls:
 30516 ;;		_I2C1_MasterStart
 30517 ;;		_I2C1_Poller
 30518 ;; This function is called by:
 30519 ;;		_I2C1_MasterWrite
 30520 ;; This function uses a non-reentrant model
 30521 ;;
 30522                           
 30523                           	psect	text137
 30524  00913C                     __ptext137:
 30525                           	callstack 0
 30526  00913C                     _I2C1_MasterOperation:
 30527                           	callstack 14
 30528                           
 30529                           ; BSR set to: 2
 30530                           ;incstack = 0
 30531                           ;I2C1_MasterOperation@read stored from wreg
 30532  00913C  6E20               	movwf	I2C1_MasterOperation@read^0,c
 30533                           
 30534                           ;mcc_generated_files/i2c1_master.c: 224: i2c1_error_t I2C1_MasterOperation(_Bool read);m
      +                          cc_generated_files/i2c1_master.c: 225: {;mcc_generated_files/i2c1_master.c: 226:     i2c
      +                          1_error_t returnValue = I2C1_BUSY;
 30535  00913E  0E01               	movlw	1
 30536  009140  6E21               	movwf	I2C1_MasterOperation@returnValue^0,c
 30537                           
 30538                           ;mcc_generated_files/i2c1_master.c: 227:     if(!I2C1_Status.busy)
 30539  009142  0102               	movlb	2	; () banked
 30540  009144  B35F               	btfsc	(_I2C1_Status+35)& (0+255),1,b
 30541  009146  D00E               	goto	l19813
 30542                           
 30543                           ; BSR set to: 2
 30544                           ;mcc_generated_files/i2c1_master.c: 228:     {;mcc_generated_files/i2c1_master.c: 229:  
      +                                 I2C1_Status.busy = 1;
 30545  009148  835F               	bsf	(_I2C1_Status+35)& (0+255),1,b
 30546                           
 30547                           ; BSR set to: 2
 30548                           ;mcc_generated_files/i2c1_master.c: 230:         returnValue = I2C1_NOERR;
 30549  00914A  0E00               	movlw	0
 30550  00914C  6E21               	movwf	I2C1_MasterOperation@returnValue^0,c
 30551                           
 30552                           ; BSR set to: 2
 30553                           ;mcc_generated_files/i2c1_master.c: 232:         if(read)
 30554  00914E  5020               	movf	I2C1_MasterOperation@read^0,w,c
 30555  009150  B4D8               	btfsc	status,2,c
 30556  009152  D002               	goto	l19807
 30557                           
 30558                           ; BSR set to: 2
 30559                           ;mcc_generated_files/i2c1_master.c: 233:         {;mcc_generated_files/i2c1_master.c: 23
      +                          4:             I2C1_Status.state = I2C1_SEND_ADR_READ;
 30560  009154  0E01               	movlw	1
 30561  009156  D001               	goto	L111
 30562  009158                     l19807:
 30563                           
 30564                           ; BSR set to: 2
 30565                           ;mcc_generated_files/i2c1_master.c: 237:         {;mcc_generated_files/i2c1_master.c: 23
      +                          8:             I2C1_Status.state = I2C1_SEND_ADR_WRITE;
 30566  009158  0E02               	movlw	2
 30567  00915A                     L111:
 30568  00915A  6F5D               	movwf	(_I2C1_Status+33)& (0+255),b
 30569                           
 30570                           ; BSR set to: 2
 30571                           ;mcc_generated_files/i2c1_master.c: 240:         I2C1_MasterStart();
 30572  00915C  EC15  F04C         	call	_I2C1_MasterStart	;wreg free
 30573                           
 30574                           ; BSR set to: 2
 30575                           ;mcc_generated_files/i2c1_master.c: 241:         I2C1_Poller();
 30576  009160  EC5D  F04B         	call	_I2C1_Poller	;wreg free
 30577  009164                     l19813:
 30578                           
 30579                           ; BSR set to: 2
 30580                           ;mcc_generated_files/i2c1_master.c: 243:     return returnValue;
 30581  009164  5021               	movf	I2C1_MasterOperation@returnValue^0,w,c
 30582                           
 30583                           ; BSR set to: 2
 30584  009166  0012               	return		;funcret
 30585  009168                     __end_of_I2C1_MasterOperation:
 30586                           	callstack 0
 30587                           
 30588 ;; *************** function _I2C1_Poller *****************
 30589 ;; Defined at:
 30590 ;;		line 312 in file "mcc_generated_files/i2c1_master.c"
 30591 ;; Parameters:    Size  Location     Type
 30592 ;;		None
 30593 ;; Auto vars:     Size  Location     Type
 30594 ;;		None
 30595 ;; Return value:  Size  Location     Type
 30596 ;;                  1    wreg      void 
 30597 ;; Registers used:
 30598 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30599 ;; Tracked objects:
 30600 ;;		On entry : 3F/2
 30601 ;;		On exit  : 3F/2
 30602 ;;		Unchanged: 0/0
 30603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30607 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30608 ;;Total ram usage:        0 bytes
 30609 ;; Hardware stack levels used: 1
 30610 ;; Hardware stack levels required when called: 9
 30611 ;; This function calls:
 30612 ;;		_I2C1_MasterFsm
 30613 ;;		_I2C1_MasterWaitForEvent
 30614 ;; This function is called by:
 30615 ;;		_I2C1_MasterOperation
 30616 ;; This function uses a non-reentrant model
 30617 ;;
 30618                           
 30619                           	psect	text138
 30620  0096BA                     __ptext138:
 30621                           	callstack 0
 30622  0096BA                     _I2C1_Poller:
 30623                           	callstack 14
 30624                           
 30625                           ; BSR set to: 2
 30626                           ;mcc_generated_files/i2c1_master.c: 314:     while(I2C1_Status.busy)
 30627                           
 30628                           ; BSR set to: 2
 30629                           ;incstack = 0
 30630  0096BA  D004               	goto	l19781
 30631  0096BC                     l19777:
 30632                           
 30633                           ; BSR set to: 2
 30634                           ;mcc_generated_files/i2c1_master.c: 315:     {;mcc_generated_files/i2c1_master.c: 316:  
      +                                 I2C1_MasterWaitForEvent();
 30635  0096BC  ECC6  F04B         	call	_I2C1_MasterWaitForEvent	;wreg free
 30636                           
 30637                           ; BSR set to: 14
 30638                           ;mcc_generated_files/i2c1_master.c: 317:     I2C1_MasterFsm();
 30639  0096C0  EC0B  F045         	call	_I2C1_MasterFsm	;wreg free
 30640  0096C4                     l19781:
 30641                           
 30642                           ; BSR set to: 2
 30643                           ;mcc_generated_files/i2c1_master.c: 314:     while(I2C1_Status.busy)
 30644  0096C4  A35F               	btfss	(_I2C1_Status+35)& (0+255),1,b
 30645  0096C6  0012               	return	
 30646  0096C8  D7F9               	goto	l19777
 30647  0096CA                     __end_of_I2C1_Poller:
 30648                           	callstack 0
 30649                           
 30650 ;; *************** function _I2C1_MasterWaitForEvent *****************
 30651 ;; Defined at:
 30652 ;;		line 650 in file "mcc_generated_files/i2c1_master.c"
 30653 ;; Parameters:    Size  Location     Type
 30654 ;;		None
 30655 ;; Auto vars:     Size  Location     Type
 30656 ;;		None
 30657 ;; Return value:  Size  Location     Type
 30658 ;;                  1    wreg      void 
 30659 ;; Registers used:
 30660 ;;		None
 30661 ;; Tracked objects:
 30662 ;;		On entry : 3F/2
 30663 ;;		On exit  : 3F/E
 30664 ;;		Unchanged: 0/0
 30665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30667 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30669 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30670 ;;Total ram usage:        0 bytes
 30671 ;; Hardware stack levels used: 1
 30672 ;; Hardware stack levels required when called: 4
 30673 ;; This function calls:
 30674 ;;		Nothing
 30675 ;; This function is called by:
 30676 ;;		_I2C1_Poller
 30677 ;; This function uses a non-reentrant model
 30678 ;;
 30679                           
 30680                           	psect	text139
 30681  00978C                     __ptext139:
 30682                           	callstack 0
 30683  00978C                     _I2C1_MasterWaitForEvent:
 30684                           	callstack 18
 30685                           
 30686                           ; BSR set to: 2
 30687                           ;mcc_generated_files/i2c1_master.c: 653:     {;mcc_generated_files/i2c1_master.c: 654:  
      +                                 if(PIR3bits.SSP1IF)
 30688                           
 30689                           ; BSR set to: 2
 30690                           ;incstack = 0
 30691                           ;mcc_generated_files/i2c1_master.c: 652:     while(1)
 30692  00978C  010E               	movlb	14	; () banked
 30693  00978E  B1CD               	btfsc	205,0,b	;volatile
 30694  009790  0012               	return	
 30695  009792  D7FC               	goto	__ptext139
 30696  009794                     __end_of_I2C1_MasterWaitForEvent:
 30697                           	callstack 0
 30698                           
 30699 ;; *************** function _I2C1_MasterFsm *****************
 30700 ;; Defined at:
 30701 ;;		line 321 in file "mcc_generated_files/i2c1_master.c"
 30702 ;; Parameters:    Size  Location     Type
 30703 ;;		None
 30704 ;; Auto vars:     Size  Location     Type
 30705 ;;		None
 30706 ;; Return value:  Size  Location     Type
 30707 ;;                  1    wreg      void 
 30708 ;; Registers used:
 30709 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30710 ;; Tracked objects:
 30711 ;;		On entry : 3F/E
 30712 ;;		On exit  : 3F/2
 30713 ;;		Unchanged: 0/0
 30714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30717 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30718 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30719 ;;Total ram usage:        3 bytes
 30720 ;; Hardware stack levels used: 1
 30721 ;; Hardware stack levels required when called: 8
 30722 ;; This function calls:
 30723 ;;		_I2C1_DO_ADDRESS_NACK
 30724 ;;		_I2C1_DO_IDLE
 30725 ;;		_I2C1_DO_RCEN
 30726 ;;		_I2C1_DO_RESET
 30727 ;;		_I2C1_DO_RX
 30728 ;;		_I2C1_DO_RX_ACK
 30729 ;;		_I2C1_DO_RX_NACK_RESTART
 30730 ;;		_I2C1_DO_RX_NACK_STOP
 30731 ;;		_I2C1_DO_SEND_ADR_READ
 30732 ;;		_I2C1_DO_SEND_ADR_WRITE
 30733 ;;		_I2C1_DO_SEND_RESTART
 30734 ;;		_I2C1_DO_SEND_RESTART_READ
 30735 ;;		_I2C1_DO_SEND_RESTART_WRITE
 30736 ;;		_I2C1_DO_SEND_STOP
 30737 ;;		_I2C1_DO_TX
 30738 ;;		_I2C1_DO_TX_EMPTY
 30739 ;;		_I2C1_MasterClearIrq
 30740 ;;		_I2C1_MasterIsNack
 30741 ;; This function is called by:
 30742 ;;		_I2C1_Poller
 30743 ;; This function uses a non-reentrant model
 30744 ;;
 30745                           
 30746                           	psect	text140
 30747  008A16                     __ptext140:
 30748                           	callstack 0
 30749  008A16                     _I2C1_MasterFsm:
 30750                           	callstack 14
 30751                           
 30752                           ; BSR set to: 14
 30753                           ;mcc_generated_files/i2c1_master.c: 323:     I2C1_MasterClearIrq();
 30754                           
 30755                           ; BSR set to: 14
 30756                           ;incstack = 0
 30757  008A16  ECF9  F04B         	call	_I2C1_MasterClearIrq	;wreg free
 30758                           
 30759                           ; BSR set to: 14
 30760                           ;mcc_generated_files/i2c1_master.c: 325:     if(I2C1_Status.addressNackCheck && I2C1_Mas
      +                          terIsNack())
 30761  008A1A  0102               	movlb	2	; () banked
 30762  008A1C  A15F               	btfss	(_I2C1_Status+35)& (0+255),0,b
 30763  008A1E  D007               	goto	l19771
 30764                           
 30765                           ; BSR set to: 2
 30766  008A20  EC7A  F04B         	call	_I2C1_MasterIsNack	;wreg free
 30767  008A24  0900               	iorlw	0
 30768  008A26  B4D8               	btfsc	status,2,c
 30769  008A28  D002               	goto	l19771
 30770                           
 30771                           ; BSR set to: 2
 30772                           ;mcc_generated_files/i2c1_master.c: 326:     {;mcc_generated_files/i2c1_master.c: 327:  
      +                                 I2C1_Status.state = I2C1_ADDRESS_NACK;
 30773  008A2A  0E0F               	movlw	15
 30774  008A2C  6F5D               	movwf	(_I2C1_Status+33)& (0+255),b
 30775  008A2E                     l19771:
 30776                           
 30777                           ; BSR set to: 2
 30778                           ;mcc_generated_files/i2c1_master.c: 329:     I2C1_Status.state = i2c1_fsmStateTable[I2C1
      +                          _Status.state]();
 30779  008A2E  515D               	movf	(_I2C1_Status+33)& (0+255),w,b
 30780  008A30  0D02               	mullw	2
 30781  008A32  50F3               	movf	243,w,c
 30782  008A34  0F01               	addlw	low _i2c1_fsmStateTable
 30783  008A36  6E1D               	movwf	??_I2C1_MasterFsm^0,c
 30784  008A38  C01D  FFF6         	movff	??_I2C1_MasterFsm,tblptrl
 30785  008A3C                     	if	1	;There is more than 1 active tblptr byte
 30786  008A3C  0E0F               	movlw	high __smallconst
 30787  008A3E  6EF7               	movwf	tblptrh,c
 30788  008A40                     	endif
 30789  008A40                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 30790  008A40  6AF8               	clrf	tblptru,c
 30791  008A42                     	endif
 30792  008A42                     	if	0	;tblptru may be non-zero
 30793  008A42                     	endif
 30794  008A42  0009               	tblrd		*+
 30795  008A44  CFF5 F01E          	movff	tablat,??_I2C1_MasterFsm+1
 30796  008A48  0009               	tblrd		*+
 30797  008A4A  CFF5 F01F          	movff	tablat,??_I2C1_MasterFsm+2
 30798  008A4E  D801               	call	u22628
 30799  008A50  D009               	goto	u22629
 30800  008A52                     u22628:
 30801  008A52  0005               	push	
 30802  008A54  6EFA               	movwf	pclath,c
 30803  008A56  501E               	movf	(??_I2C1_MasterFsm+1)^0,w,c
 30804  008A58  6EFD               	movwf	tosl,c
 30805  008A5A  501F               	movf	(??_I2C1_MasterFsm+2)^0,w,c
 30806  008A5C  6EFE               	movwf	tosh,c
 30807  008A5E  6AFF               	clrf	tosu,c
 30808  008A60  50FA               	movf	pclath,w,c
 30809  008A62  0012               	return		;indir
 30810  008A64                     u22629:
 30811  008A64  0102               	movlb	2	; () banked
 30812  008A66  6F5D               	movwf	(_I2C1_Status+33)& (0+255),b
 30813                           
 30814                           ; BSR set to: 2
 30815  008A68  0012               	return		;funcret
 30816  008A6A                     __end_of_I2C1_MasterFsm:
 30817                           	callstack 0
 30818                           
 30819 ;; *************** function _I2C1_DO_ADDRESS_NACK *****************
 30820 ;; Defined at:
 30821 ;;		line 500 in file "mcc_generated_files/i2c1_master.c"
 30822 ;; Parameters:    Size  Location     Type
 30823 ;;		None
 30824 ;; Auto vars:     Size  Location     Type
 30825 ;;		None
 30826 ;; Return value:  Size  Location     Type
 30827 ;;                  1    wreg      enum E10442
 30828 ;; Registers used:
 30829 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 30830 ;; Tracked objects:
 30831 ;;		On entry : 3F/2
 30832 ;;		On exit  : 0/0
 30833 ;;		Unchanged: 0/0
 30834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30837 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30838 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30839 ;;Total ram usage:        2 bytes
 30840 ;; Hardware stack levels used: 1
 30841 ;; Hardware stack levels required when called: 7
 30842 ;; This function calls:
 30843 ;;		Absolute function
 30844 ;;		_I2C1_CallbackReturnReset
 30845 ;;		_I2C1_CallbackReturnStop
 30846 ;;		_I2C1_DO_SEND_RESTART
 30847 ;;		_I2C1_DO_SEND_STOP
 30848 ;;		_rd1RegCompleteHandler
 30849 ;;		_rd1RegCompleteHandler@i2c1_master_example$F500
 30850 ;;		_rd2RegCompleteHandler
 30851 ;;		_rd2RegCompleteHandler@i2c1_master_example$F511
 30852 ;;		_rdBlkRegCompleteHandler
 30853 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F535
 30854 ;;		_wr1RegCompleteHandler
 30855 ;;		_wr1RegCompleteHandler@i2c1_master_example$F517
 30856 ;;		_wr2RegCompleteHandler
 30857 ;;		_wr2RegCompleteHandler@i2c1_master_example$F523
 30858 ;; This function is called by:
 30859 ;;		_I2C1_MasterFsm
 30860 ;; This function uses a non-reentrant model
 30861 ;;
 30862                           
 30863                           	psect	text141
 30864  008BF8                     __ptext141:
 30865                           	callstack 0
 30866  008BF8                     _I2C1_DO_ADDRESS_NACK:
 30867                           	callstack 14
 30868                           
 30869                           ; BSR set to: 2
 30870                           ;mcc_generated_files/i2c1_master.c: 502:     I2C1_Status.addressNackCheck = 0;
 30871                           
 30872                           ; BSR set to: 2
 30873                           ;incstack = 0
 30874  008BF8  915F               	bcf	(_I2C1_Status+35)& (0+255),0,b
 30875                           
 30876                           ; BSR set to: 2
 30877                           ;mcc_generated_files/i2c1_master.c: 503:     I2C1_Status.error = I2C1_FAIL;
 30878  008BFA  0E02               	movlw	2
 30879  008BFC  6F5E               	movwf	(_I2C1_Status+34)& (0+255),b
 30880                           
 30881                           ;mcc_generated_files/i2c1_master.c: 504:     switch(I2C1_Status.callbackTable[I2C1_ADDR_
      +                          NACK](I2C1_Status.callbackPayload[I2C1_ADDR_NACK]))
 30882  008BFE  D006               	goto	l19755
 30883  008C00                     l19745:
 30884                           
 30885                           ;mcc_generated_files/i2c1_master.c: 508:             return I2C1_DO_SEND_RESTART();
 30886  008C00  ECDA  F04B         	call	_I2C1_DO_SEND_RESTART	;wreg free
 30887  008C04  0012               	return	
 30888  008C06                     l19749:
 30889                           
 30890                           ;mcc_generated_files/i2c1_master.c: 510:             return I2C1_DO_SEND_STOP();
 30891  008C06  ECD6  F04B         	call	_I2C1_DO_SEND_STOP	;wreg free
 30892  008C0A  0012               	return	
 30893  008C0C                     l19755:
 30894                           
 30895                           ; BSR set to: 2
 30896  008C0C  C24C  F019         	movff	_I2C1_Status+16,I2C1_CallbackReturnReset@funPtr
 30897  008C10  C24D  F01A         	movff	_I2C1_Status+17,I2C1_CallbackReturnReset@funPtr+1
 30898  008C14  D801               	call	u22588
 30899  008C16  D009               	goto	u22589
 30900  008C18                     u22588:
 30901  008C18  0005               	push	
 30902  008C1A  6EFA               	movwf	pclath,c
 30903  008C1C  5140               	movf	(_I2C1_Status+4)& (0+255),w,b
 30904  008C1E  6EFD               	movwf	tosl,c
 30905  008C20  5141               	movf	(_I2C1_Status+5)& (0+255),w,b
 30906  008C22  6EFE               	movwf	tosh,c
 30907  008C24  6AFF               	clrf	tosu,c
 30908  008C26  50FA               	movf	pclath,w,c
 30909  008C28  0012               	return		;indir
 30910  008C2A                     u22589:
 30911  008C2A  6E1B               	movwf	??_I2C1_DO_ADDRESS_NACK^0,c
 30912  008C2C  6A1C               	clrf	(??_I2C1_DO_ADDRESS_NACK+1)^0,c
 30913                           
 30914                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 30915                           ; Switch size 1, requested type "simple"
 30916                           ; Number of cases is 1, Range of values is 0 to 0
 30917                           ; switch strategies available:
 30918                           ; Name         Instructions Cycles
 30919                           ; simple_byte            4     3 (average)
 30920                           ;	Chosen strategy is simple_byte
 30921  008C2E  501C               	movf	(??_I2C1_DO_ADDRESS_NACK+1)^0,w,c
 30922  008C30  0A00               	xorlw	0	; case 0
 30923  008C32  A4D8               	btfss	status,2,c
 30924  008C34  D7E8               	goto	l19749
 30925                           
 30926                           ; Switch size 1, requested type "simple"
 30927                           ; Number of cases is 2, Range of values is 2 to 3
 30928                           ; switch strategies available:
 30929                           ; Name         Instructions Cycles
 30930                           ; simple_byte            7     4 (average)
 30931                           ;	Chosen strategy is simple_byte
 30932  008C36  501B               	movf	??_I2C1_DO_ADDRESS_NACK^0,w,c
 30933  008C38  0A02               	xorlw	2	; case 2
 30934  008C3A  B4D8               	btfsc	status,2,c
 30935  008C3C  D7E1               	goto	l19745
 30936  008C3E  0A01               	xorlw	1	; case 3
 30937  008C40  B4D8               	btfsc	status,2,c
 30938  008C42  D7DE               	goto	l19745
 30939  008C44  D7E0               	goto	l19749
 30940  008C46                     __end_of_I2C1_DO_ADDRESS_NACK:
 30941                           	callstack 0
 30942                           
 30943 ;; *************** function _I2C1_DO_RESET *****************
 30944 ;; Defined at:
 30945 ;;		line 494 in file "mcc_generated_files/i2c1_master.c"
 30946 ;; Parameters:    Size  Location     Type
 30947 ;;		None
 30948 ;; Auto vars:     Size  Location     Type
 30949 ;;		None
 30950 ;; Return value:  Size  Location     Type
 30951 ;;                  1    wreg      enum E10442
 30952 ;; Registers used:
 30953 ;;		wreg, status,2
 30954 ;; Tracked objects:
 30955 ;;		On entry : 3F/2
 30956 ;;		On exit  : 3F/2
 30957 ;;		Unchanged: 0/0
 30958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30962 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30963 ;;Total ram usage:        0 bytes
 30964 ;; Hardware stack levels used: 1
 30965 ;; Hardware stack levels required when called: 4
 30966 ;; This function calls:
 30967 ;;		Nothing
 30968 ;; This function is called by:
 30969 ;;		_I2C1_MasterFsm
 30970 ;; This function uses a non-reentrant model
 30971 ;;
 30972                           
 30973                           	psect	text142
 30974  009766                     __ptext142:
 30975                           	callstack 0
 30976  009766                     _I2C1_DO_RESET:
 30977                           	callstack 17
 30978                           
 30979                           ; BSR set to: 2
 30980                           ;mcc_generated_files/i2c1_master.c: 496:     I2C1_Status.busy = 0;
 30981                           
 30982                           ;incstack = 0
 30983  009766  935F               	bcf	(_I2C1_Status+35)& (0+255),1,b
 30984                           
 30985                           ; BSR set to: 2
 30986                           ;mcc_generated_files/i2c1_master.c: 497:     I2C1_Status.error = I2C1_NOERR;
 30987  009768  0E00               	movlw	0
 30988  00976A  6F5E               	movwf	(_I2C1_Status+34)& (0+255),b
 30989                           
 30990                           ; BSR set to: 2
 30991                           ;mcc_generated_files/i2c1_master.c: 498:     return I2C1_RESET;
 30992  00976C  0E0E               	movlw	14
 30993                           
 30994                           ; BSR set to: 2
 30995  00976E  0012               	return		;funcret
 30996  009770                     __end_of_I2C1_DO_RESET:
 30997                           	callstack 0
 30998                           
 30999 ;; *************** function _I2C1_DO_RX_NACK_RESTART *****************
 31000 ;; Defined at:
 31001 ;;		line 488 in file "mcc_generated_files/i2c1_master.c"
 31002 ;; Parameters:    Size  Location     Type
 31003 ;;		None
 31004 ;; Auto vars:     Size  Location     Type
 31005 ;;		None
 31006 ;; Return value:  Size  Location     Type
 31007 ;;                  1    wreg      enum E10442
 31008 ;; Registers used:
 31009 ;;		wreg, cstack
 31010 ;; Tracked objects:
 31011 ;;		On entry : 0/2
 31012 ;;		On exit  : 0/0
 31013 ;;		Unchanged: 0/0
 31014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31015 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31016 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31018 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31019 ;;Total ram usage:        0 bytes
 31020 ;; Hardware stack levels used: 1
 31021 ;; Hardware stack levels required when called: 5
 31022 ;; This function calls:
 31023 ;;		_I2C1_MasterSendNack
 31024 ;; This function is called by:
 31025 ;;		_I2C1_DO_RX
 31026 ;;		_I2C1_MasterFsm
 31027 ;; This function uses a non-reentrant model
 31028 ;;
 31029                           
 31030                           	psect	text143
 31031  009794                     __ptext143:
 31032                           	callstack 0
 31033  009794                     _I2C1_DO_RX_NACK_RESTART:
 31034                           	callstack 16
 31035                           
 31036                           ;mcc_generated_files/i2c1_master.c: 490:     I2C1_MasterSendNack();
 31037                           
 31038                           ; BSR set to: 2
 31039                           ;incstack = 0
 31040  009794  ECF6  F04B         	call	_I2C1_MasterSendNack	;wreg free
 31041                           
 31042                           ;mcc_generated_files/i2c1_master.c: 491:     return I2C1_SEND_RESTART;
 31043  009798  0E09               	movlw	9
 31044  00979A  0012               	return		;funcret
 31045  00979C                     __end_of_I2C1_DO_RX_NACK_RESTART:
 31046                           	callstack 0
 31047                           
 31048 ;; *************** function _I2C1_DO_RX_NACK_STOP *****************
 31049 ;; Defined at:
 31050 ;;		line 482 in file "mcc_generated_files/i2c1_master.c"
 31051 ;; Parameters:    Size  Location     Type
 31052 ;;		None
 31053 ;; Auto vars:     Size  Location     Type
 31054 ;;		None
 31055 ;; Return value:  Size  Location     Type
 31056 ;;                  1    wreg      enum E10442
 31057 ;; Registers used:
 31058 ;;		wreg, cstack
 31059 ;; Tracked objects:
 31060 ;;		On entry : 0/2
 31061 ;;		On exit  : 0/0
 31062 ;;		Unchanged: 0/0
 31063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31065 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31067 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31068 ;;Total ram usage:        0 bytes
 31069 ;; Hardware stack levels used: 1
 31070 ;; Hardware stack levels required when called: 5
 31071 ;; This function calls:
 31072 ;;		_I2C1_MasterSendNack
 31073 ;; This function is called by:
 31074 ;;		_I2C1_DO_RX
 31075 ;;		_I2C1_MasterFsm
 31076 ;; This function uses a non-reentrant model
 31077 ;;
 31078                           
 31079                           	psect	text144
 31080  00979C                     __ptext144:
 31081                           	callstack 0
 31082  00979C                     _I2C1_DO_RX_NACK_STOP:
 31083                           	callstack 16
 31084                           
 31085                           ;mcc_generated_files/i2c1_master.c: 484:     I2C1_MasterSendNack();
 31086                           
 31087                           ;incstack = 0
 31088  00979C  ECF6  F04B         	call	_I2C1_MasterSendNack	;wreg free
 31089                           
 31090                           ;mcc_generated_files/i2c1_master.c: 485:     return I2C1_SEND_STOP;
 31091  0097A0  0E0A               	movlw	10
 31092  0097A2  0012               	return		;funcret
 31093  0097A4                     __end_of_I2C1_DO_RX_NACK_STOP:
 31094                           	callstack 0
 31095                           
 31096 ;; *************** function _I2C1_DO_RX_ACK *****************
 31097 ;; Defined at:
 31098 ;;		line 475 in file "mcc_generated_files/i2c1_master.c"
 31099 ;; Parameters:    Size  Location     Type
 31100 ;;		None
 31101 ;; Auto vars:     Size  Location     Type
 31102 ;;		None
 31103 ;; Return value:  Size  Location     Type
 31104 ;;                  1    wreg      enum E10442
 31105 ;; Registers used:
 31106 ;;		wreg, cstack
 31107 ;; Tracked objects:
 31108 ;;		On entry : 3F/2
 31109 ;;		On exit  : 3F/2
 31110 ;;		Unchanged: 3F/0
 31111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31113 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31115 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31116 ;;Total ram usage:        0 bytes
 31117 ;; Hardware stack levels used: 1
 31118 ;; Hardware stack levels required when called: 5
 31119 ;; This function calls:
 31120 ;;		_I2C1_MasterSendAck
 31121 ;; This function is called by:
 31122 ;;		_I2C1_MasterFsm
 31123 ;; This function uses a non-reentrant model
 31124 ;;
 31125                           
 31126                           	psect	text145
 31127  0097A4                     __ptext145:
 31128                           	callstack 0
 31129  0097A4                     _I2C1_DO_RX_ACK:
 31130                           	callstack 16
 31131                           
 31132                           ; BSR set to: 2
 31133                           ;mcc_generated_files/i2c1_master.c: 477:     I2C1_MasterSendAck();
 31134                           
 31135                           ;incstack = 0
 31136  0097A4  ECF3  F04B         	call	_I2C1_MasterSendAck	;wreg free
 31137                           
 31138                           ; BSR set to: 2
 31139                           ;mcc_generated_files/i2c1_master.c: 478:     return I2C1_RCEN;
 31140  0097A8  0E05               	movlw	5
 31141                           
 31142                           ; BSR set to: 2
 31143  0097AA  0012               	return		;funcret
 31144  0097AC                     __end_of_I2C1_DO_RX_ACK:
 31145                           	callstack 0
 31146                           
 31147 ;; *************** function _I2C1_DO_SEND_STOP *****************
 31148 ;; Defined at:
 31149 ;;		line 469 in file "mcc_generated_files/i2c1_master.c"
 31150 ;; Parameters:    Size  Location     Type
 31151 ;;		None
 31152 ;; Auto vars:     Size  Location     Type
 31153 ;;		None
 31154 ;; Return value:  Size  Location     Type
 31155 ;;                  1    wreg      enum E10442
 31156 ;; Registers used:
 31157 ;;		wreg, cstack
 31158 ;; Tracked objects:
 31159 ;;		On entry : 0/2
 31160 ;;		On exit  : 0/0
 31161 ;;		Unchanged: 0/0
 31162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31166 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31167 ;;Total ram usage:        0 bytes
 31168 ;; Hardware stack levels used: 1
 31169 ;; Hardware stack levels required when called: 5
 31170 ;; This function calls:
 31171 ;;		_I2C1_MasterStop
 31172 ;; This function is called by:
 31173 ;;		_I2C1_DO_TX
 31174 ;;		_I2C1_DO_TX_EMPTY
 31175 ;;		_I2C1_DO_ADDRESS_NACK
 31176 ;;		_I2C1_MasterFsm
 31177 ;; This function uses a non-reentrant model
 31178 ;;
 31179                           
 31180                           	psect	text146
 31181  0097AC                     __ptext146:
 31182                           	callstack 0
 31183  0097AC                     _I2C1_DO_SEND_STOP:
 31184                           	callstack 15
 31185                           
 31186                           ;mcc_generated_files/i2c1_master.c: 471:     I2C1_MasterStop();
 31187                           
 31188                           ; BSR set to: 2
 31189                           ;incstack = 0
 31190  0097AC  EC11  F04C         	call	_I2C1_MasterStop	;wreg free
 31191                           
 31192                           ;mcc_generated_files/i2c1_master.c: 472:     return I2C1_IDLE;
 31193  0097B0  0E00               	movlw	0
 31194  0097B2  0012               	return		;funcret
 31195  0097B4                     __end_of_I2C1_DO_SEND_STOP:
 31196                           	callstack 0
 31197                           
 31198 ;; *************** function _I2C1_DO_SEND_RESTART *****************
 31199 ;; Defined at:
 31200 ;;		line 463 in file "mcc_generated_files/i2c1_master.c"
 31201 ;; Parameters:    Size  Location     Type
 31202 ;;		None
 31203 ;; Auto vars:     Size  Location     Type
 31204 ;;		None
 31205 ;; Return value:  Size  Location     Type
 31206 ;;                  1    wreg      enum E10442
 31207 ;; Registers used:
 31208 ;;		wreg, cstack
 31209 ;; Tracked objects:
 31210 ;;		On entry : 0/2
 31211 ;;		On exit  : 0/0
 31212 ;;		Unchanged: 0/0
 31213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31217 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31218 ;;Total ram usage:        0 bytes
 31219 ;; Hardware stack levels used: 1
 31220 ;; Hardware stack levels required when called: 5
 31221 ;; This function calls:
 31222 ;;		_I2C1_MasterEnableRestart
 31223 ;; This function is called by:
 31224 ;;		_I2C1_DO_TX_EMPTY
 31225 ;;		_I2C1_DO_ADDRESS_NACK
 31226 ;;		_I2C1_MasterFsm
 31227 ;; This function uses a non-reentrant model
 31228 ;;
 31229                           
 31230                           	psect	text147
 31231  0097B4                     __ptext147:
 31232                           	callstack 0
 31233  0097B4                     _I2C1_DO_SEND_RESTART:
 31234                           	callstack 15
 31235                           
 31236                           ;mcc_generated_files/i2c1_master.c: 465:     I2C1_MasterEnableRestart();
 31237                           
 31238                           ;incstack = 0
 31239  0097B4  EC13  F04C         	call	_I2C1_MasterEnableRestart	;wreg free
 31240                           
 31241                           ;mcc_generated_files/i2c1_master.c: 466:     return I2C1_SEND_ADR_READ;
 31242  0097B8  0E01               	movlw	1
 31243  0097BA  0012               	return		;funcret
 31244  0097BC                     __end_of_I2C1_DO_SEND_RESTART:
 31245                           	callstack 0
 31246                           
 31247 ;; *************** function _I2C1_DO_SEND_RESTART_WRITE *****************
 31248 ;; Defined at:
 31249 ;;		line 456 in file "mcc_generated_files/i2c1_master.c"
 31250 ;; Parameters:    Size  Location     Type
 31251 ;;		None
 31252 ;; Auto vars:     Size  Location     Type
 31253 ;;		None
 31254 ;; Return value:  Size  Location     Type
 31255 ;;                  1    wreg      enum E10442
 31256 ;; Registers used:
 31257 ;;		wreg, cstack
 31258 ;; Tracked objects:
 31259 ;;		On entry : 0/2
 31260 ;;		On exit  : 0/0
 31261 ;;		Unchanged: 0/0
 31262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31266 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31267 ;;Total ram usage:        0 bytes
 31268 ;; Hardware stack levels used: 1
 31269 ;; Hardware stack levels required when called: 5
 31270 ;; This function calls:
 31271 ;;		_I2C1_MasterEnableRestart
 31272 ;; This function is called by:
 31273 ;;		_I2C1_DO_TX
 31274 ;;		_I2C1_MasterFsm
 31275 ;; This function uses a non-reentrant model
 31276 ;;
 31277                           
 31278                           	psect	text148
 31279  0097BC                     __ptext148:
 31280                           	callstack 0
 31281  0097BC                     _I2C1_DO_SEND_RESTART_WRITE:
 31282                           	callstack 15
 31283                           
 31284                           ;mcc_generated_files/i2c1_master.c: 458:     I2C1_MasterEnableRestart();
 31285                           
 31286                           ;incstack = 0
 31287  0097BC  EC13  F04C         	call	_I2C1_MasterEnableRestart	;wreg free
 31288                           
 31289                           ;mcc_generated_files/i2c1_master.c: 459:     return I2C1_SEND_ADR_WRITE;
 31290  0097C0  0E02               	movlw	2
 31291  0097C2  0012               	return		;funcret
 31292  0097C4                     __end_of_I2C1_DO_SEND_RESTART_WRITE:
 31293                           	callstack 0
 31294                           
 31295 ;; *************** function _I2C1_DO_SEND_RESTART_READ *****************
 31296 ;; Defined at:
 31297 ;;		line 450 in file "mcc_generated_files/i2c1_master.c"
 31298 ;; Parameters:    Size  Location     Type
 31299 ;;		None
 31300 ;; Auto vars:     Size  Location     Type
 31301 ;;		None
 31302 ;; Return value:  Size  Location     Type
 31303 ;;                  1    wreg      enum E10442
 31304 ;; Registers used:
 31305 ;;		wreg, cstack
 31306 ;; Tracked objects:
 31307 ;;		On entry : 0/2
 31308 ;;		On exit  : 0/0
 31309 ;;		Unchanged: 0/0
 31310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31314 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31315 ;;Total ram usage:        0 bytes
 31316 ;; Hardware stack levels used: 1
 31317 ;; Hardware stack levels required when called: 5
 31318 ;; This function calls:
 31319 ;;		_I2C1_MasterEnableRestart
 31320 ;; This function is called by:
 31321 ;;		_I2C1_DO_TX
 31322 ;;		_I2C1_MasterFsm
 31323 ;; This function uses a non-reentrant model
 31324 ;;
 31325                           
 31326                           	psect	text149
 31327  0097C4                     __ptext149:
 31328                           	callstack 0
 31329  0097C4                     _I2C1_DO_SEND_RESTART_READ:
 31330                           	callstack 15
 31331                           
 31332                           ;mcc_generated_files/i2c1_master.c: 452:     I2C1_MasterEnableRestart();
 31333                           
 31334                           ;incstack = 0
 31335  0097C4  EC13  F04C         	call	_I2C1_MasterEnableRestart	;wreg free
 31336                           
 31337                           ;mcc_generated_files/i2c1_master.c: 453:     return I2C1_SEND_ADR_READ;
 31338  0097C8  0E01               	movlw	1
 31339  0097CA  0012               	return		;funcret
 31340  0097CC                     __end_of_I2C1_DO_SEND_RESTART_READ:
 31341                           	callstack 0
 31342                           
 31343 ;; *************** function _I2C1_DO_RCEN *****************
 31344 ;; Defined at:
 31345 ;;		line 402 in file "mcc_generated_files/i2c1_master.c"
 31346 ;; Parameters:    Size  Location     Type
 31347 ;;		None
 31348 ;; Auto vars:     Size  Location     Type
 31349 ;;		None
 31350 ;; Return value:  Size  Location     Type
 31351 ;;                  1    wreg      enum E10442
 31352 ;; Registers used:
 31353 ;;		wreg, cstack
 31354 ;; Tracked objects:
 31355 ;;		On entry : 3F/2
 31356 ;;		On exit  : 3F/2
 31357 ;;		Unchanged: 0/0
 31358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31362 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31363 ;;Total ram usage:        0 bytes
 31364 ;; Hardware stack levels used: 1
 31365 ;; Hardware stack levels required when called: 5
 31366 ;; This function calls:
 31367 ;;		_I2C1_MasterStartRx
 31368 ;; This function is called by:
 31369 ;;		_I2C1_MasterFsm
 31370 ;; This function uses a non-reentrant model
 31371 ;;
 31372                           
 31373                           	psect	text150
 31374  009770                     __ptext150:
 31375                           	callstack 0
 31376  009770                     _I2C1_DO_RCEN:
 31377                           	callstack 16
 31378                           
 31379                           ; BSR set to: 2
 31380                           ;mcc_generated_files/i2c1_master.c: 404:     I2C1_Status.addressNackCheck = 0;
 31381                           
 31382                           ;incstack = 0
 31383  009770  915F               	bcf	(_I2C1_Status+35)& (0+255),0,b
 31384                           
 31385                           ; BSR set to: 2
 31386                           ;mcc_generated_files/i2c1_master.c: 405:     I2C1_MasterStartRx();
 31387  009772  EC0B  F04C         	call	_I2C1_MasterStartRx	;wreg free
 31388                           
 31389                           ; BSR set to: 2
 31390                           ;mcc_generated_files/i2c1_master.c: 406:     return I2C1_RX;
 31391  009776  0E04               	movlw	4
 31392                           
 31393                           ; BSR set to: 2
 31394  009778  0012               	return		;funcret
 31395  00977A                     __end_of_I2C1_DO_RCEN:
 31396                           	callstack 0
 31397                           
 31398 ;; *************** function _I2C1_DO_RX *****************
 31399 ;; Defined at:
 31400 ;;		line 378 in file "mcc_generated_files/i2c1_master.c"
 31401 ;; Parameters:    Size  Location     Type
 31402 ;;		None
 31403 ;; Auto vars:     Size  Location     Type
 31404 ;;		None
 31405 ;; Return value:  Size  Location     Type
 31406 ;;                  1    wreg      enum E10442
 31407 ;; Registers used:
 31408 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 31409 ;; Tracked objects:
 31410 ;;		On entry : 3F/2
 31411 ;;		On exit  : 0/0
 31412 ;;		Unchanged: 0/0
 31413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31416 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31417 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31418 ;;Total ram usage:        2 bytes
 31419 ;; Hardware stack levels used: 1
 31420 ;; Hardware stack levels required when called: 7
 31421 ;; This function calls:
 31422 ;;		Absolute function
 31423 ;;		_I2C1_CallbackReturnReset
 31424 ;;		_I2C1_CallbackReturnStop
 31425 ;;		_I2C1_DO_RX_NACK_RESTART
 31426 ;;		_I2C1_DO_RX_NACK_STOP
 31427 ;;		_I2C1_MasterGetRxData
 31428 ;;		_I2C1_MasterSendAck
 31429 ;;		_rd1RegCompleteHandler
 31430 ;;		_rd1RegCompleteHandler@i2c1_master_example$F500
 31431 ;;		_rd2RegCompleteHandler
 31432 ;;		_rd2RegCompleteHandler@i2c1_master_example$F511
 31433 ;;		_rdBlkRegCompleteHandler
 31434 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F535
 31435 ;;		_wr1RegCompleteHandler
 31436 ;;		_wr1RegCompleteHandler@i2c1_master_example$F517
 31437 ;;		_wr2RegCompleteHandler
 31438 ;;		_wr2RegCompleteHandler@i2c1_master_example$F523
 31439 ;; This function is called by:
 31440 ;;		_I2C1_MasterFsm
 31441 ;; This function uses a non-reentrant model
 31442 ;;
 31443                           
 31444                           	psect	text151
 31445  0080D4                     __ptext151:
 31446                           	callstack 0
 31447  0080D4                     _I2C1_DO_RX:
 31448                           	callstack 14
 31449                           
 31450                           ; BSR set to: 2
 31451                           ;mcc_generated_files/i2c1_master.c: 380:     *I2C1_Status.data_ptr++ = I2C1_MasterGetRxD
      +                          ata();
 31452                           
 31453                           ; BSR set to: 2
 31454                           ;incstack = 0
 31455  0080D4  EC09  F04C         	call	_I2C1_MasterGetRxData	;wreg free
 31456  0080D8  C259  FFD9         	movff	_I2C1_Status+29,fsr2l
 31457  0080DC  C25A  FFDA         	movff	_I2C1_Status+30,fsr2h
 31458  0080E0  6EDF               	movwf	indf2,c
 31459                           
 31460                           ; BSR set to: 2
 31461  0080E2  4B59               	infsnz	(_I2C1_Status+29)& (0+255),f,b
 31462  0080E4  2B5A               	incf	(_I2C1_Status+30)& (0+255),f,b
 31463                           
 31464                           ; BSR set to: 2
 31465                           ;mcc_generated_files/i2c1_master.c: 381:     if(--I2C1_Status.data_length)
 31466  0080E6  075B               	decf	(_I2C1_Status+31)& (0+255),f,b
 31467  0080E8  A0D8               	btfss	status,0,c
 31468  0080EA  075C               	decf	(_I2C1_Status+32)& (0+255),f,b
 31469  0080EC  515B               	movf	(_I2C1_Status+31)& (0+255),w,b
 31470  0080EE  115C               	iorwf	(_I2C1_Status+32)& (0+255),w,b
 31471  0080F0  B4D8               	btfsc	status,2,c
 31472  0080F2  D004               	goto	l690
 31473                           
 31474                           ; BSR set to: 2
 31475                           ;mcc_generated_files/i2c1_master.c: 382:     {;mcc_generated_files/i2c1_master.c: 383:  
      +                                 I2C1_MasterSendAck();
 31476  0080F4  ECF3  F04B         	call	_I2C1_MasterSendAck	;wreg free
 31477                           
 31478                           ; BSR set to: 2
 31479                           ;mcc_generated_files/i2c1_master.c: 384:         return I2C1_RCEN;
 31480  0080F8  0E05               	movlw	5
 31481  0080FA  0012               	return	
 31482  0080FC                     l690:
 31483                           
 31484                           ; BSR set to: 2
 31485                           ;mcc_generated_files/i2c1_master.c: 387:     {;mcc_generated_files/i2c1_master.c: 388:  
      +                                 I2C1_Status.bufferFree = 1;
 31486  0080FC  875F               	bsf	(_I2C1_Status+35)& (0+255),3,b
 31487                           
 31488                           ;mcc_generated_files/i2c1_master.c: 389:         switch(I2C1_Status.callbackTable[I2C1_D
      +                          ATA_COMPLETE](I2C1_Status.callbackPayload[I2C1_DATA_COMPLETE]))
 31489  0080FE  D006               	goto	l19689
 31490  008100                     l19679:
 31491                           
 31492                           ;mcc_generated_files/i2c1_master.c: 393:                 return I2C1_DO_RX_NACK_RESTART(
      +                          );
 31493  008100  ECCA  F04B         	call	_I2C1_DO_RX_NACK_RESTART	;wreg free
 31494  008104  0012               	return	
 31495  008106                     l19683:
 31496                           
 31497                           ;mcc_generated_files/i2c1_master.c: 397:                 return I2C1_DO_RX_NACK_STOP();
 31498  008106  ECCE  F04B         	call	_I2C1_DO_RX_NACK_STOP	;wreg free
 31499  00810A  0012               	return	
 31500  00810C                     l19689:
 31501                           
 31502                           ; BSR set to: 2
 31503  00810C  C248  F019         	movff	_I2C1_Status+12,I2C1_CallbackReturnReset@funPtr
 31504  008110  C249  F01A         	movff	_I2C1_Status+13,I2C1_CallbackReturnReset@funPtr+1
 31505  008114  D801               	call	u22568
 31506  008116  D009               	goto	u22569
 31507  008118                     u22568:
 31508  008118  0005               	push	
 31509  00811A  6EFA               	movwf	pclath,c
 31510  00811C  513C               	movf	_I2C1_Status& (0+255),w,b
 31511  00811E  6EFD               	movwf	tosl,c
 31512  008120  513D               	movf	(_I2C1_Status+1)& (0+255),w,b
 31513  008122  6EFE               	movwf	tosh,c
 31514  008124  6AFF               	clrf	tosu,c
 31515  008126  50FA               	movf	pclath,w,c
 31516  008128  0012               	return		;indir
 31517  00812A                     u22569:
 31518  00812A  6E1B               	movwf	??_I2C1_DO_RX^0,c
 31519  00812C  6A1C               	clrf	(??_I2C1_DO_RX+1)^0,c
 31520                           
 31521                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 31522                           ; Switch size 1, requested type "simple"
 31523                           ; Number of cases is 1, Range of values is 0 to 0
 31524                           ; switch strategies available:
 31525                           ; Name         Instructions Cycles
 31526                           ; simple_byte            4     3 (average)
 31527                           ;	Chosen strategy is simple_byte
 31528  00812E  501C               	movf	(??_I2C1_DO_RX+1)^0,w,c
 31529  008130  0A00               	xorlw	0	; case 0
 31530  008132  A4D8               	btfss	status,2,c
 31531  008134  D7E8               	goto	l19683
 31532                           
 31533                           ; Switch size 1, requested type "simple"
 31534                           ; Number of cases is 4, Range of values is 1 to 4
 31535                           ; switch strategies available:
 31536                           ; Name         Instructions Cycles
 31537                           ; simple_byte           13     7 (average)
 31538                           ;	Chosen strategy is simple_byte
 31539  008136  501B               	movf	??_I2C1_DO_RX^0,w,c
 31540  008138  0A01               	xorlw	1	; case 1
 31541  00813A  B4D8               	btfsc	status,2,c
 31542  00813C  D7E4               	goto	l19683
 31543  00813E  0A03               	xorlw	3	; case 2
 31544  008140  B4D8               	btfsc	status,2,c
 31545  008142  D7DE               	goto	l19679
 31546  008144  0A01               	xorlw	1	; case 3
 31547  008146  B4D8               	btfsc	status,2,c
 31548  008148  D7DB               	goto	l19679
 31549  00814A  0A07               	xorlw	7	; case 4
 31550  00814C  D7DC               	goto	l19683
 31551  00814E                     __end_of_I2C1_DO_RX:
 31552                           	callstack 0
 31553                           
 31554 ;; *************** function _I2C1_DO_TX *****************
 31555 ;; Defined at:
 31556 ;;		line 354 in file "mcc_generated_files/i2c1_master.c"
 31557 ;; Parameters:    Size  Location     Type
 31558 ;;		None
 31559 ;; Auto vars:     Size  Location     Type
 31560 ;;		None
 31561 ;; Return value:  Size  Location     Type
 31562 ;;                  1    wreg      enum E10442
 31563 ;; Registers used:
 31564 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 31565 ;; Tracked objects:
 31566 ;;		On entry : 3F/2
 31567 ;;		On exit  : 0/0
 31568 ;;		Unchanged: 0/0
 31569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31571 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31572 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31573 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31574 ;;Total ram usage:        2 bytes
 31575 ;; Hardware stack levels used: 1
 31576 ;; Hardware stack levels required when called: 7
 31577 ;; This function calls:
 31578 ;;		Absolute function
 31579 ;;		_I2C1_CallbackReturnReset
 31580 ;;		_I2C1_CallbackReturnStop
 31581 ;;		_I2C1_DO_SEND_RESTART_READ
 31582 ;;		_I2C1_DO_SEND_RESTART_WRITE
 31583 ;;		_I2C1_DO_SEND_STOP
 31584 ;;		_I2C1_MasterIsNack
 31585 ;;		_I2C1_MasterSendTxData
 31586 ;;		_rd1RegCompleteHandler
 31587 ;;		_rd1RegCompleteHandler@i2c1_master_example$F500
 31588 ;;		_rd2RegCompleteHandler
 31589 ;;		_rd2RegCompleteHandler@i2c1_master_example$F511
 31590 ;;		_rdBlkRegCompleteHandler
 31591 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F535
 31592 ;;		_wr1RegCompleteHandler
 31593 ;;		_wr1RegCompleteHandler@i2c1_master_example$F517
 31594 ;;		_wr2RegCompleteHandler
 31595 ;;		_wr2RegCompleteHandler@i2c1_master_example$F523
 31596 ;; This function is called by:
 31597 ;;		_I2C1_MasterFsm
 31598 ;; This function uses a non-reentrant model
 31599 ;;
 31600                           
 31601                           	psect	text152
 31602  007C34                     __ptext152:
 31603                           	callstack 0
 31604  007C34                     _I2C1_DO_TX:
 31605                           	callstack 14
 31606                           
 31607                           ; BSR set to: 2
 31608                           ;mcc_generated_files/i2c1_master.c: 356:     if(I2C1_MasterIsNack())
 31609                           
 31610                           ;incstack = 0
 31611  007C34  EC7A  F04B         	call	_I2C1_MasterIsNack	;wreg free
 31612  007C38  0900               	iorlw	0
 31613  007C3A  A4D8               	btfss	status,2,c
 31614  007C3C  D00A               	goto	l19649
 31615  007C3E  D02A               	goto	l674
 31616  007C40                     l19635:
 31617                           
 31618                           ;mcc_generated_files/i2c1_master.c: 361:                 return I2C1_DO_SEND_RESTART_REA
      +                          D();
 31619  007C40  ECE2  F04B         	call	_I2C1_DO_SEND_RESTART_READ	;wreg free
 31620  007C44  0012               	return	
 31621  007C46                     l19639:
 31622                           
 31623                           ;mcc_generated_files/i2c1_master.c: 363:                   return I2C1_DO_SEND_RESTART_W
      +                          RITE();
 31624  007C46  ECDE  F04B         	call	_I2C1_DO_SEND_RESTART_WRITE	;wreg free
 31625  007C4A  0012               	return	
 31626  007C4C                     l19643:
 31627                           
 31628                           ;mcc_generated_files/i2c1_master.c: 367:                 return I2C1_DO_SEND_STOP();
 31629  007C4C  ECD6  F04B         	call	_I2C1_DO_SEND_STOP	;wreg free
 31630  007C50  0012               	return	
 31631  007C52                     l19649:
 31632                           
 31633                           ; BSR set to: 2
 31634  007C52  C24E  F019         	movff	_I2C1_Status+18,I2C1_CallbackReturnReset@funPtr
 31635  007C56  C24F  F01A         	movff	_I2C1_Status+19,I2C1_CallbackReturnReset@funPtr+1
 31636  007C5A  D801               	call	u22538
 31637  007C5C  D009               	goto	u22539
 31638  007C5E                     u22538:
 31639  007C5E  0005               	push	
 31640  007C60  6EFA               	movwf	pclath,c
 31641  007C62  5142               	movf	(_I2C1_Status+6)& (0+255),w,b
 31642  007C64  6EFD               	movwf	tosl,c
 31643  007C66  5143               	movf	(_I2C1_Status+7)& (0+255),w,b
 31644  007C68  6EFE               	movwf	tosh,c
 31645  007C6A  6AFF               	clrf	tosu,c
 31646  007C6C  50FA               	movf	pclath,w,c
 31647  007C6E  0012               	return		;indir
 31648  007C70                     u22539:
 31649  007C70  6E1B               	movwf	??_I2C1_DO_TX^0,c
 31650  007C72  6A1C               	clrf	(??_I2C1_DO_TX+1)^0,c
 31651                           
 31652                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 31653                           ; Switch size 1, requested type "simple"
 31654                           ; Number of cases is 1, Range of values is 0 to 0
 31655                           ; switch strategies available:
 31656                           ; Name         Instructions Cycles
 31657                           ; simple_byte            4     3 (average)
 31658                           ;	Chosen strategy is simple_byte
 31659  007C74  501C               	movf	(??_I2C1_DO_TX+1)^0,w,c
 31660  007C76  0A00               	xorlw	0	; case 0
 31661  007C78  A4D8               	btfss	status,2,c
 31662  007C7A  D7E8               	goto	l19643
 31663                           
 31664                           ; Switch size 1, requested type "simple"
 31665                           ; Number of cases is 4, Range of values is 1 to 4
 31666                           ; switch strategies available:
 31667                           ; Name         Instructions Cycles
 31668                           ; simple_byte           13     7 (average)
 31669                           ;	Chosen strategy is simple_byte
 31670  007C7C  501B               	movf	??_I2C1_DO_TX^0,w,c
 31671  007C7E  0A01               	xorlw	1	; case 1
 31672  007C80  B4D8               	btfsc	status,2,c
 31673  007C82  D7E4               	goto	l19643
 31674  007C84  0A03               	xorlw	3	; case 2
 31675  007C86  B4D8               	btfsc	status,2,c
 31676  007C88  D7DB               	goto	l19635
 31677  007C8A  0A01               	xorlw	1	; case 3
 31678  007C8C  B4D8               	btfsc	status,2,c
 31679  007C8E  D7DB               	goto	l19639
 31680  007C90  0A07               	xorlw	7	; case 4
 31681  007C92  D7DC               	goto	l19643
 31682  007C94                     l674:
 31683                           
 31684                           ; BSR set to: 2
 31685                           ;mcc_generated_files/i2c1_master.c: 371:     {;mcc_generated_files/i2c1_master.c: 372:  
      +                                 I2C1_Status.addressNackCheck = 0;
 31686  007C94  915F               	bcf	(_I2C1_Status+35)& (0+255),0,b
 31687                           
 31688                           ; BSR set to: 2
 31689                           ;mcc_generated_files/i2c1_master.c: 373:         I2C1_MasterSendTxData(*I2C1_Status.data
      +                          _ptr++);
 31690  007C96  C259  FFD9         	movff	_I2C1_Status+29,fsr2l
 31691  007C9A  C25A  FFDA         	movff	_I2C1_Status+30,fsr2h
 31692  007C9E  4B59               	infsnz	(_I2C1_Status+29)& (0+255),f,b
 31693  007CA0  2B5A               	incf	(_I2C1_Status+30)& (0+255),f,b
 31694  007CA2  50DF               	movf	indf2,w,c
 31695  007CA4  ECE6  F04B         	call	_I2C1_MasterSendTxData
 31696                           
 31697                           ;mcc_generated_files/i2c1_master.c: 374:         return (--I2C1_Status.data_length)?I2C1
      +                          _TX:I2C1_TX_EMPTY;
 31698  007CA8  0102               	movlb	2	; () banked
 31699  007CAA  075B               	decf	(_I2C1_Status+31)& (0+255),f,b
 31700  007CAC  A0D8               	btfss	status,0,c
 31701  007CAE  075C               	decf	(_I2C1_Status+32)& (0+255),f,b
 31702  007CB0  515B               	movf	(_I2C1_Status+31)& (0+255),w,b
 31703  007CB2  115C               	iorwf	(_I2C1_Status+32)& (0+255),w,b
 31704  007CB4  A4D8               	btfss	status,2,c
 31705  007CB6  D002               	goto	l19657
 31706                           
 31707                           ; BSR set to: 2
 31708  007CB8  0E06               	movlw	6
 31709  007CBA  0012               	return	
 31710  007CBC                     l19657:
 31711                           
 31712                           ; BSR set to: 2
 31713  007CBC  0E03               	movlw	3
 31714  007CBE  0012               	return		;funcret
 31715  007CC0                     __end_of_I2C1_DO_TX:
 31716                           	callstack 0
 31717                           
 31718 ;; *************** function _I2C1_DO_SEND_ADR_WRITE *****************
 31719 ;; Defined at:
 31720 ;;		line 347 in file "mcc_generated_files/i2c1_master.c"
 31721 ;; Parameters:    Size  Location     Type
 31722 ;;		None
 31723 ;; Auto vars:     Size  Location     Type
 31724 ;;		None
 31725 ;; Return value:  Size  Location     Type
 31726 ;;                  1    wreg      enum E10442
 31727 ;; Registers used:
 31728 ;;		wreg, status,2, status,0, cstack
 31729 ;; Tracked objects:
 31730 ;;		On entry : 3F/2
 31731 ;;		On exit  : 0/0
 31732 ;;		Unchanged: 0/0
 31733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31737 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31738 ;;Total ram usage:        0 bytes
 31739 ;; Hardware stack levels used: 1
 31740 ;; Hardware stack levels required when called: 5
 31741 ;; This function calls:
 31742 ;;		_I2C1_MasterSendTxData
 31743 ;; This function is called by:
 31744 ;;		_I2C1_MasterFsm
 31745 ;; This function uses a non-reentrant model
 31746 ;;
 31747                           
 31748                           	psect	text153
 31749  0096D8                     __ptext153:
 31750                           	callstack 0
 31751  0096D8                     _I2C1_DO_SEND_ADR_WRITE:
 31752                           	callstack 16
 31753                           
 31754                           ; BSR set to: 2
 31755                           ;mcc_generated_files/i2c1_master.c: 349:     I2C1_Status.addressNackCheck = 1;
 31756                           
 31757                           ;incstack = 0
 31758  0096D8  815F               	bsf	(_I2C1_Status+35)& (0+255),0,b
 31759                           
 31760                           ; BSR set to: 2
 31761                           ;mcc_generated_files/i2c1_master.c: 350:     I2C1_MasterSendTxData((uint8_t) (I2C1_Statu
      +                          s.address << 1));
 31762  0096DA  5158               	movf	(_I2C1_Status+28)& (0+255),w,b
 31763  0096DC  2558               	addwf	(_I2C1_Status+28)& (0+255),w,b
 31764  0096DE  ECE6  F04B         	call	_I2C1_MasterSendTxData
 31765                           
 31766                           ;mcc_generated_files/i2c1_master.c: 351:     return I2C1_TX;
 31767  0096E2  0E03               	movlw	3
 31768  0096E4  0012               	return		;funcret
 31769  0096E6                     __end_of_I2C1_DO_SEND_ADR_WRITE:
 31770                           	callstack 0
 31771                           
 31772 ;; *************** function _I2C1_DO_SEND_ADR_READ *****************
 31773 ;; Defined at:
 31774 ;;		line 340 in file "mcc_generated_files/i2c1_master.c"
 31775 ;; Parameters:    Size  Location     Type
 31776 ;;		None
 31777 ;; Auto vars:     Size  Location     Type
 31778 ;;		None
 31779 ;; Return value:  Size  Location     Type
 31780 ;;                  1    wreg      enum E10442
 31781 ;; Registers used:
 31782 ;;		wreg, status,0, cstack
 31783 ;; Tracked objects:
 31784 ;;		On entry : 3F/2
 31785 ;;		On exit  : 0/0
 31786 ;;		Unchanged: 0/0
 31787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31791 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31792 ;;Total ram usage:        0 bytes
 31793 ;; Hardware stack levels used: 1
 31794 ;; Hardware stack levels required when called: 5
 31795 ;; This function calls:
 31796 ;;		_I2C1_MasterSendTxData
 31797 ;; This function is called by:
 31798 ;;		_I2C1_MasterFsm
 31799 ;; This function uses a non-reentrant model
 31800 ;;
 31801                           
 31802                           	psect	text154
 31803  0096E6                     __ptext154:
 31804                           	callstack 0
 31805  0096E6                     _I2C1_DO_SEND_ADR_READ:
 31806                           	callstack 16
 31807                           
 31808                           ; BSR set to: 2
 31809                           ;mcc_generated_files/i2c1_master.c: 342:     I2C1_Status.addressNackCheck = 1;
 31810                           
 31811                           ;incstack = 0
 31812  0096E6  815F               	bsf	(_I2C1_Status+35)& (0+255),0,b
 31813                           
 31814                           ; BSR set to: 2
 31815                           ;mcc_generated_files/i2c1_master.c: 343:     I2C1_MasterSendTxData((uint8_t) (I2C1_Statu
      +                          s.address << 1 | 1));
 31816  0096E8  80D8               	bsf	status,0,c
 31817  0096EA  3558               	rlcf	(_I2C1_Status+28)& (0+255),w,b
 31818  0096EC  ECE6  F04B         	call	_I2C1_MasterSendTxData
 31819                           
 31820                           ;mcc_generated_files/i2c1_master.c: 344:     return I2C1_RCEN;
 31821  0096F0  0E05               	movlw	5
 31822  0096F2  0012               	return		;funcret
 31823  0096F4                     __end_of_I2C1_DO_SEND_ADR_READ:
 31824                           	callstack 0
 31825                           
 31826 ;; *************** function _I2C1_DO_IDLE *****************
 31827 ;; Defined at:
 31828 ;;		line 333 in file "mcc_generated_files/i2c1_master.c"
 31829 ;; Parameters:    Size  Location     Type
 31830 ;;		None
 31831 ;; Auto vars:     Size  Location     Type
 31832 ;;		None
 31833 ;; Return value:  Size  Location     Type
 31834 ;;                  1    wreg      enum E10442
 31835 ;; Registers used:
 31836 ;;		wreg, status,2
 31837 ;; Tracked objects:
 31838 ;;		On entry : 3F/2
 31839 ;;		On exit  : 3F/2
 31840 ;;		Unchanged: 0/0
 31841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31845 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31846 ;;Total ram usage:        0 bytes
 31847 ;; Hardware stack levels used: 1
 31848 ;; Hardware stack levels required when called: 4
 31849 ;; This function calls:
 31850 ;;		Nothing
 31851 ;; This function is called by:
 31852 ;;		_I2C1_MasterFsm
 31853 ;; This function uses a non-reentrant model
 31854 ;;
 31855                           
 31856                           	psect	text155
 31857  00977A                     __ptext155:
 31858                           	callstack 0
 31859  00977A                     _I2C1_DO_IDLE:
 31860                           	callstack 17
 31861                           
 31862                           ; BSR set to: 2
 31863                           ;mcc_generated_files/i2c1_master.c: 335:     I2C1_Status.busy = 0;
 31864                           
 31865                           ;incstack = 0
 31866  00977A  935F               	bcf	(_I2C1_Status+35)& (0+255),1,b
 31867                           
 31868                           ; BSR set to: 2
 31869                           ;mcc_generated_files/i2c1_master.c: 336:     I2C1_Status.error = I2C1_NOERR;
 31870  00977C  0E00               	movlw	0
 31871  00977E  6F5E               	movwf	(_I2C1_Status+34)& (0+255),b
 31872                           
 31873                           ; BSR set to: 2
 31874                           ;mcc_generated_files/i2c1_master.c: 337:     return I2C1_RESET;
 31875  009780  0E0E               	movlw	14
 31876                           
 31877                           ; BSR set to: 2
 31878  009782  0012               	return		;funcret
 31879  009784                     __end_of_I2C1_DO_IDLE:
 31880                           	callstack 0
 31881                           
 31882 ;; *************** function _I2C1_DO_TX_EMPTY *****************
 31883 ;; Defined at:
 31884 ;;		line 409 in file "mcc_generated_files/i2c1_master.c"
 31885 ;; Parameters:    Size  Location     Type
 31886 ;;		None
 31887 ;; Auto vars:     Size  Location     Type
 31888 ;;		None
 31889 ;; Return value:  Size  Location     Type
 31890 ;;                  1    wreg      enum E10442
 31891 ;; Registers used:
 31892 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 31893 ;; Tracked objects:
 31894 ;;		On entry : 3F/2
 31895 ;;		On exit  : 0/0
 31896 ;;		Unchanged: 0/0
 31897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31900 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31901 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31902 ;;Total ram usage:        2 bytes
 31903 ;; Hardware stack levels used: 1
 31904 ;; Hardware stack levels required when called: 7
 31905 ;; This function calls:
 31906 ;;		Absolute function
 31907 ;;		_I2C1_CallbackReturnReset
 31908 ;;		_I2C1_CallbackReturnStop
 31909 ;;		_I2C1_DO_SEND_RESTART
 31910 ;;		_I2C1_DO_SEND_STOP
 31911 ;;		_I2C1_MasterSetIrq
 31912 ;;		_rd1RegCompleteHandler
 31913 ;;		_rd1RegCompleteHandler@i2c1_master_example$F500
 31914 ;;		_rd2RegCompleteHandler
 31915 ;;		_rd2RegCompleteHandler@i2c1_master_example$F511
 31916 ;;		_rdBlkRegCompleteHandler
 31917 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F535
 31918 ;;		_wr1RegCompleteHandler
 31919 ;;		_wr1RegCompleteHandler@i2c1_master_example$F517
 31920 ;;		_wr2RegCompleteHandler
 31921 ;;		_wr2RegCompleteHandler@i2c1_master_example$F523
 31922 ;; This function is called by:
 31923 ;;		_I2C1_MasterFsm
 31924 ;; This function uses a non-reentrant model
 31925 ;;
 31926                           
 31927                           	psect	text156
 31928  0086F0                     __ptext156:
 31929                           	callstack 0
 31930  0086F0                     _I2C1_DO_TX_EMPTY:
 31931                           	callstack 14
 31932                           
 31933                           ; BSR set to: 2
 31934                           ;mcc_generated_files/i2c1_master.c: 411:     I2C1_Status.bufferFree = 1;
 31935                           
 31936                           ; BSR set to: 2
 31937                           ;incstack = 0
 31938  0086F0  875F               	bsf	(_I2C1_Status+35)& (0+255),3,b
 31939                           
 31940                           ;mcc_generated_files/i2c1_master.c: 412:     switch(I2C1_Status.callbackTable[I2C1_DATA_
      +                          COMPLETE](I2C1_Status.callbackPayload[I2C1_DATA_COMPLETE]))
 31941  0086F2  D00A               	goto	l19721
 31942  0086F4                     l19705:
 31943                           
 31944                           ;mcc_generated_files/i2c1_master.c: 416:             return I2C1_DO_SEND_RESTART();
 31945  0086F4  ECDA  F04B         	call	_I2C1_DO_SEND_RESTART	;wreg free
 31946  0086F8  0012               	return	
 31947  0086FA                     l19709:
 31948                           
 31949                           ;mcc_generated_files/i2c1_master.c: 418:             I2C1_MasterSetIrq();
 31950  0086FA  ECF0  F04B         	call	_I2C1_MasterSetIrq	;wreg free
 31951                           
 31952                           ; BSR set to: 14
 31953                           ;mcc_generated_files/i2c1_master.c: 419:             return I2C1_TX;
 31954  0086FE  0E03               	movlw	3
 31955  008700  0012               	return	
 31956  008702                     l19715:
 31957                           
 31958                           ;mcc_generated_files/i2c1_master.c: 422:             return I2C1_DO_SEND_STOP();
 31959  008702  ECD6  F04B         	call	_I2C1_DO_SEND_STOP	;wreg free
 31960  008706  0012               	return	
 31961  008708                     l19721:
 31962                           
 31963                           ; BSR set to: 2
 31964  008708  C248  F019         	movff	_I2C1_Status+12,I2C1_CallbackReturnReset@funPtr
 31965  00870C  C249  F01A         	movff	_I2C1_Status+13,I2C1_CallbackReturnReset@funPtr+1
 31966  008710  D801               	call	u22578
 31967  008712  D009               	goto	u22579
 31968  008714                     u22578:
 31969  008714  0005               	push	
 31970  008716  6EFA               	movwf	pclath,c
 31971  008718  513C               	movf	_I2C1_Status& (0+255),w,b
 31972  00871A  6EFD               	movwf	tosl,c
 31973  00871C  513D               	movf	(_I2C1_Status+1)& (0+255),w,b
 31974  00871E  6EFE               	movwf	tosh,c
 31975  008720  6AFF               	clrf	tosu,c
 31976  008722  50FA               	movf	pclath,w,c
 31977  008724  0012               	return		;indir
 31978  008726                     u22579:
 31979  008726  6E1B               	movwf	??_I2C1_DO_TX_EMPTY^0,c
 31980  008728  6A1C               	clrf	(??_I2C1_DO_TX_EMPTY+1)^0,c
 31981                           
 31982                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 31983                           ; Switch size 1, requested type "simple"
 31984                           ; Number of cases is 1, Range of values is 0 to 0
 31985                           ; switch strategies available:
 31986                           ; Name         Instructions Cycles
 31987                           ; simple_byte            4     3 (average)
 31988                           ;	Chosen strategy is simple_byte
 31989  00872A  501C               	movf	(??_I2C1_DO_TX_EMPTY+1)^0,w,c
 31990  00872C  0A00               	xorlw	0	; case 0
 31991  00872E  A4D8               	btfss	status,2,c
 31992  008730  D7E8               	goto	l19715
 31993                           
 31994                           ; Switch size 1, requested type "simple"
 31995                           ; Number of cases is 4, Range of values is 1 to 4
 31996                           ; switch strategies available:
 31997                           ; Name         Instructions Cycles
 31998                           ; simple_byte           13     7 (average)
 31999                           ;	Chosen strategy is simple_byte
 32000  008732  501B               	movf	??_I2C1_DO_TX_EMPTY^0,w,c
 32001  008734  0A01               	xorlw	1	; case 1
 32002  008736  B4D8               	btfsc	status,2,c
 32003  008738  D7E4               	goto	l19715
 32004  00873A  0A03               	xorlw	3	; case 2
 32005  00873C  B4D8               	btfsc	status,2,c
 32006  00873E  D7DA               	goto	l19705
 32007  008740  0A01               	xorlw	1	; case 3
 32008  008742  B4D8               	btfsc	status,2,c
 32009  008744  D7D7               	goto	l19705
 32010  008746  0A07               	xorlw	7	; case 4
 32011  008748  B4D8               	btfsc	status,2,c
 32012  00874A  D7D7               	goto	l19709
 32013  00874C  D7DA               	goto	l19715
 32014  00874E                     __end_of_I2C1_DO_TX_EMPTY:
 32015                           	callstack 0
 32016                           
 32017 ;; *************** function _I2C1_MasterSetIrq *****************
 32018 ;; Defined at:
 32019 ;;		line 645 in file "mcc_generated_files/i2c1_master.c"
 32020 ;; Parameters:    Size  Location     Type
 32021 ;;		None
 32022 ;; Auto vars:     Size  Location     Type
 32023 ;;		None
 32024 ;; Return value:  Size  Location     Type
 32025 ;;                  1    wreg      void 
 32026 ;; Registers used:
 32027 ;;		None
 32028 ;; Tracked objects:
 32029 ;;		On entry : 0/2
 32030 ;;		On exit  : 3F/E
 32031 ;;		Unchanged: 0/0
 32032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32036 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32037 ;;Total ram usage:        0 bytes
 32038 ;; Hardware stack levels used: 1
 32039 ;; Hardware stack levels required when called: 4
 32040 ;; This function calls:
 32041 ;;		Nothing
 32042 ;; This function is called by:
 32043 ;;		_I2C1_DO_TX_EMPTY
 32044 ;; This function uses a non-reentrant model
 32045 ;;
 32046                           
 32047                           	psect	text157
 32048  0097E0                     __ptext157:
 32049                           	callstack 0
 32050  0097E0                     _I2C1_MasterSetIrq:
 32051                           	callstack 16
 32052                           
 32053                           ;mcc_generated_files/i2c1_master.c: 647:     PIR3bits.SSP1IF = 1;
 32054                           
 32055                           ;incstack = 0
 32056  0097E0  010E               	movlb	14	; () banked
 32057  0097E2  81CD               	bsf	205,0,b	;volatile
 32058                           
 32059                           ; BSR set to: 14
 32060  0097E4  0012               	return		;funcret
 32061  0097E6                     __end_of_I2C1_MasterSetIrq:
 32062                           	callstack 0
 32063                           
 32064 ;; *************** function _I2C1_MasterIsNack *****************
 32065 ;; Defined at:
 32066 ;;		line 598 in file "mcc_generated_files/i2c1_master.c"
 32067 ;; Parameters:    Size  Location     Type
 32068 ;;		None
 32069 ;; Auto vars:     Size  Location     Type
 32070 ;;		None
 32071 ;; Return value:  Size  Location     Type
 32072 ;;                  1    wreg      _Bool 
 32073 ;; Registers used:
 32074 ;;		wreg
 32075 ;; Tracked objects:
 32076 ;;		On entry : 3F/2
 32077 ;;		On exit  : 3F/2
 32078 ;;		Unchanged: 3F/0
 32079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32083 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32084 ;;Total ram usage:        0 bytes
 32085 ;; Hardware stack levels used: 1
 32086 ;; Hardware stack levels required when called: 4
 32087 ;; This function calls:
 32088 ;;		Nothing
 32089 ;; This function is called by:
 32090 ;;		_I2C1_MasterFsm
 32091 ;;		_I2C1_DO_TX
 32092 ;; This function uses a non-reentrant model
 32093 ;;
 32094                           
 32095                           	psect	text158
 32096  0096F4                     __ptext158:
 32097                           	callstack 0
 32098  0096F4                     _I2C1_MasterIsNack:
 32099                           	callstack 17
 32100                           
 32101                           ; BSR set to: 2
 32102                           ;mcc_generated_files/i2c1_master.c: 600:     return SSP1CON2bits.ACKSTAT;
 32103                           
 32104                           ; BSR set to: 14
 32105                           ;incstack = 0
 32106  0096F4  AC97               	btfss	151,6,c	;volatile
 32107  0096F6  D002               	goto	u22510
 32108  0096F8  0E01               	movlw	1
 32109  0096FA  0012               	return	
 32110  0096FC                     u22510:
 32111  0096FC  0E00               	movlw	0
 32112                           
 32113                           ; BSR set to: 2
 32114  0096FE  0012               	return		;funcret
 32115  009700                     __end_of_I2C1_MasterIsNack:
 32116                           	callstack 0
 32117                           
 32118 ;; *************** function _I2C1_MasterSendTxData *****************
 32119 ;; Defined at:
 32120 ;;		line 568 in file "mcc_generated_files/i2c1_master.c"
 32121 ;; Parameters:    Size  Location     Type
 32122 ;;  data            1    wreg     unsigned char 
 32123 ;; Auto vars:     Size  Location     Type
 32124 ;;  data            1   15[COMRAM] unsigned char 
 32125 ;; Return value:  Size  Location     Type
 32126 ;;                  1    wreg      void 
 32127 ;; Registers used:
 32128 ;;		wreg
 32129 ;; Tracked objects:
 32130 ;;		On entry : 3F/2
 32131 ;;		On exit  : 0/0
 32132 ;;		Unchanged: 0/0
 32133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32135 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32137 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32138 ;;Total ram usage:        1 bytes
 32139 ;; Hardware stack levels used: 1
 32140 ;; Hardware stack levels required when called: 4
 32141 ;; This function calls:
 32142 ;;		Nothing
 32143 ;; This function is called by:
 32144 ;;		_I2C1_DO_SEND_ADR_READ
 32145 ;;		_I2C1_DO_SEND_ADR_WRITE
 32146 ;;		_I2C1_DO_TX
 32147 ;; This function uses a non-reentrant model
 32148 ;;
 32149                           
 32150                           	psect	text159
 32151  0097CC                     __ptext159:
 32152                           	callstack 0
 32153  0097CC                     _I2C1_MasterSendTxData:
 32154                           	callstack 16
 32155                           
 32156                           ; BSR set to: 2
 32157                           ;incstack = 0
 32158                           ;I2C1_MasterSendTxData@data stored from wreg
 32159  0097CC  6E10               	movwf	I2C1_MasterSendTxData@data^0,c
 32160                           
 32161                           ;mcc_generated_files/i2c1_master.c: 568: static __attribute__((inline)) void I2C1_Master
      +                          SendTxData(uint8_t data);mcc_generated_files/i2c1_master.c: 569: {;mcc_generated_files/i
      +                          2c1_master.c: 570:     SSP1BUF = data;
 32162  0097CE  C010  FF92         	movff	I2C1_MasterSendTxData@data,3986	;volatile
 32163  0097D2  0012               	return		;funcret
 32164  0097D4                     __end_of_I2C1_MasterSendTxData:
 32165                           	callstack 0
 32166                           
 32167 ;; *************** function _I2C1_MasterSendAck *****************
 32168 ;; Defined at:
 32169 ;;		line 603 in file "mcc_generated_files/i2c1_master.c"
 32170 ;; Parameters:    Size  Location     Type
 32171 ;;		None
 32172 ;; Auto vars:     Size  Location     Type
 32173 ;;		None
 32174 ;; Return value:  Size  Location     Type
 32175 ;;                  1    wreg      void 
 32176 ;; Registers used:
 32177 ;;		None
 32178 ;; Tracked objects:
 32179 ;;		On entry : 3F/2
 32180 ;;		On exit  : 3F/2
 32181 ;;		Unchanged: 3F/0
 32182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32186 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32187 ;;Total ram usage:        0 bytes
 32188 ;; Hardware stack levels used: 1
 32189 ;; Hardware stack levels required when called: 4
 32190 ;; This function calls:
 32191 ;;		Nothing
 32192 ;; This function is called by:
 32193 ;;		_I2C1_DO_RX
 32194 ;;		_I2C1_DO_RX_ACK
 32195 ;; This function uses a non-reentrant model
 32196 ;;
 32197                           
 32198                           	psect	text160
 32199  0097E6                     __ptext160:
 32200                           	callstack 0
 32201  0097E6                     _I2C1_MasterSendAck:
 32202                           	callstack 16
 32203                           
 32204                           ; BSR set to: 2
 32205                           ;mcc_generated_files/i2c1_master.c: 605:     SSP1CON2bits.ACKDT = 0;
 32206                           
 32207                           ;incstack = 0
 32208  0097E6  9A97               	bcf	151,5,c	;volatile
 32209                           
 32210                           ;mcc_generated_files/i2c1_master.c: 606:     SSP1CON2bits.ACKEN = 1;
 32211  0097E8  8897               	bsf	151,4,c	;volatile
 32212                           
 32213                           ; BSR set to: 2
 32214  0097EA  0012               	return		;funcret
 32215  0097EC                     __end_of_I2C1_MasterSendAck:
 32216                           	callstack 0
 32217                           
 32218 ;; *************** function _I2C1_MasterGetRxData *****************
 32219 ;; Defined at:
 32220 ;;		line 563 in file "mcc_generated_files/i2c1_master.c"
 32221 ;; Parameters:    Size  Location     Type
 32222 ;;		None
 32223 ;; Auto vars:     Size  Location     Type
 32224 ;;		None
 32225 ;; Return value:  Size  Location     Type
 32226 ;;                  1    wreg      unsigned char 
 32227 ;; Registers used:
 32228 ;;		wreg, status,2
 32229 ;; Tracked objects:
 32230 ;;		On entry : 3F/2
 32231 ;;		On exit  : 3F/2
 32232 ;;		Unchanged: 3F/0
 32233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32237 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32238 ;;Total ram usage:        0 bytes
 32239 ;; Hardware stack levels used: 1
 32240 ;; Hardware stack levels required when called: 4
 32241 ;; This function calls:
 32242 ;;		Nothing
 32243 ;; This function is called by:
 32244 ;;		_I2C1_DO_RX
 32245 ;; This function uses a non-reentrant model
 32246 ;;
 32247                           
 32248                           	psect	text161
 32249  009812                     __ptext161:
 32250                           	callstack 0
 32251  009812                     _I2C1_MasterGetRxData:
 32252                           	callstack 16
 32253                           
 32254                           ; BSR set to: 2
 32255                           ;mcc_generated_files/i2c1_master.c: 565:     return SSP1BUF;
 32256                           
 32257                           ; BSR set to: 2
 32258                           ;incstack = 0
 32259  009812  5092               	movf	146,w,c	;volatile
 32260                           
 32261                           ; BSR set to: 2
 32262  009814  0012               	return		;funcret
 32263  009816                     __end_of_I2C1_MasterGetRxData:
 32264                           	callstack 0
 32265                           
 32266 ;; *************** function _I2C1_MasterSendNack *****************
 32267 ;; Defined at:
 32268 ;;		line 609 in file "mcc_generated_files/i2c1_master.c"
 32269 ;; Parameters:    Size  Location     Type
 32270 ;;		None
 32271 ;; Auto vars:     Size  Location     Type
 32272 ;;		None
 32273 ;; Return value:  Size  Location     Type
 32274 ;;                  1    wreg      void 
 32275 ;; Registers used:
 32276 ;;		None
 32277 ;; Tracked objects:
 32278 ;;		On entry : 0/2
 32279 ;;		On exit  : 0/0
 32280 ;;		Unchanged: 0/0
 32281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32283 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32285 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32286 ;;Total ram usage:        0 bytes
 32287 ;; Hardware stack levels used: 1
 32288 ;; Hardware stack levels required when called: 4
 32289 ;; This function calls:
 32290 ;;		Nothing
 32291 ;; This function is called by:
 32292 ;;		_I2C1_DO_RX_NACK_STOP
 32293 ;;		_I2C1_DO_RX_NACK_RESTART
 32294 ;; This function uses a non-reentrant model
 32295 ;;
 32296                           
 32297                           	psect	text162
 32298  0097EC                     __ptext162:
 32299                           	callstack 0
 32300  0097EC                     _I2C1_MasterSendNack:
 32301                           	callstack 16
 32302                           
 32303                           ;mcc_generated_files/i2c1_master.c: 611:     SSP1CON2bits.ACKDT = 1;
 32304                           
 32305                           ; BSR set to: 2
 32306                           ;incstack = 0
 32307  0097EC  8A97               	bsf	151,5,c	;volatile
 32308                           
 32309                           ;mcc_generated_files/i2c1_master.c: 612:     SSP1CON2bits.ACKEN = 1;
 32310  0097EE  8897               	bsf	151,4,c	;volatile
 32311  0097F0  0012               	return		;funcret
 32312  0097F2                     __end_of_I2C1_MasterSendNack:
 32313                           	callstack 0
 32314                           
 32315 ;; *************** function _I2C1_MasterStartRx *****************
 32316 ;; Defined at:
 32317 ;;		line 583 in file "mcc_generated_files/i2c1_master.c"
 32318 ;; Parameters:    Size  Location     Type
 32319 ;;		None
 32320 ;; Auto vars:     Size  Location     Type
 32321 ;;		None
 32322 ;; Return value:  Size  Location     Type
 32323 ;;                  1    wreg      void 
 32324 ;; Registers used:
 32325 ;;		None
 32326 ;; Tracked objects:
 32327 ;;		On entry : 3F/2
 32328 ;;		On exit  : 3F/2
 32329 ;;		Unchanged: 3F/0
 32330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32334 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32335 ;;Total ram usage:        0 bytes
 32336 ;; Hardware stack levels used: 1
 32337 ;; Hardware stack levels required when called: 4
 32338 ;; This function calls:
 32339 ;;		Nothing
 32340 ;; This function is called by:
 32341 ;;		_I2C1_DO_RCEN
 32342 ;; This function uses a non-reentrant model
 32343 ;;
 32344                           
 32345                           	psect	text163
 32346  009816                     __ptext163:
 32347                           	callstack 0
 32348  009816                     _I2C1_MasterStartRx:
 32349                           	callstack 16
 32350                           
 32351                           ; BSR set to: 2
 32352                           ;mcc_generated_files/i2c1_master.c: 585:     SSP1CON2bits.RCEN = 1;
 32353                           
 32354                           ;incstack = 0
 32355  009816  8697               	bsf	151,3,c	;volatile
 32356                           
 32357                           ; BSR set to: 2
 32358  009818  0012               	return		;funcret
 32359  00981A                     __end_of_I2C1_MasterStartRx:
 32360                           	callstack 0
 32361                           
 32362 ;; *************** function _I2C1_CallbackReturnReset *****************
 32363 ;; Defined at:
 32364 ;;		line 525 in file "mcc_generated_files/i2c1_master.c"
 32365 ;; Parameters:    Size  Location     Type
 32366 ;;  funPtr          2   24[COMRAM] PTR void 
 32367 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 32368 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 32369 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 32370 ;; Auto vars:     Size  Location     Type
 32371 ;;		None
 32372 ;; Return value:  Size  Location     Type
 32373 ;;                  1    wreg      enum E360
 32374 ;; Registers used:
 32375 ;;		wreg
 32376 ;; Tracked objects:
 32377 ;;		On entry : 3F/2
 32378 ;;		On exit  : 3F/2
 32379 ;;		Unchanged: 3F/0
 32380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32381 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32384 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32385 ;;Total ram usage:        2 bytes
 32386 ;; Hardware stack levels used: 1
 32387 ;; Hardware stack levels required when called: 4
 32388 ;; This function calls:
 32389 ;;		Nothing
 32390 ;; This function is called by:
 32391 ;;		_I2C1_Open
 32392 ;;		_I2C1_DO_TX
 32393 ;;		_I2C1_DO_RX
 32394 ;;		_I2C1_DO_TX_EMPTY
 32395 ;;		_I2C1_DO_ADDRESS_NACK
 32396 ;; This function uses a non-reentrant model
 32397 ;;
 32398                           
 32399                           	psect	text164
 32400  00981A                     __ptext164:
 32401                           	callstack 0
 32402  00981A                     _I2C1_CallbackReturnReset:
 32403                           	callstack 16
 32404                           
 32405                           ; BSR set to: 2
 32406                           ;mcc_generated_files/i2c1_master.c: 525: i2c1_operations_t I2C1_CallbackReturnReset(void
      +                           *funPtr);mcc_generated_files/i2c1_master.c: 526: {;mcc_generated_files/i2c1_master.c: 5
      +                          27:     return I2C1_RESET_LINK;
 32407                           
 32408                           ; BSR set to: 2
 32409                           ;incstack = 0
 32410  00981A  0E05               	movlw	5
 32411                           
 32412                           ; BSR set to: 2
 32413  00981C  0012               	return		;funcret
 32414  00981E                     __end_of_I2C1_CallbackReturnReset:
 32415                           	callstack 0
 32416                           
 32417 ;; *************** function _I2C1_CallbackReturnStop *****************
 32418 ;; Defined at:
 32419 ;;		line 520 in file "mcc_generated_files/i2c1_master.c"
 32420 ;; Parameters:    Size  Location     Type
 32421 ;;  funPtr          2   24[COMRAM] PTR void 
 32422 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 32423 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 32424 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 32425 ;; Auto vars:     Size  Location     Type
 32426 ;;		None
 32427 ;; Return value:  Size  Location     Type
 32428 ;;                  1    wreg      enum E360
 32429 ;; Registers used:
 32430 ;;		wreg
 32431 ;; Tracked objects:
 32432 ;;		On entry : 3F/2
 32433 ;;		On exit  : 3F/2
 32434 ;;		Unchanged: 3F/0
 32435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32436 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32437 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32439 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32440 ;;Total ram usage:        2 bytes
 32441 ;; Hardware stack levels used: 1
 32442 ;; Hardware stack levels required when called: 4
 32443 ;; This function calls:
 32444 ;;		Nothing
 32445 ;; This function is called by:
 32446 ;;		_I2C1_Open
 32447 ;;		_I2C1_SetCallback
 32448 ;;		_I2C1_DO_TX
 32449 ;;		_I2C1_DO_RX
 32450 ;;		_I2C1_DO_TX_EMPTY
 32451 ;;		_I2C1_DO_ADDRESS_NACK
 32452 ;; This function uses a non-reentrant model
 32453 ;;
 32454                           
 32455                           	psect	text165
 32456  00981E                     __ptext165:
 32457                           	callstack 0
 32458  00981E                     _I2C1_CallbackReturnStop:
 32459                           	callstack 16
 32460                           
 32461                           ; BSR set to: 2
 32462                           ;mcc_generated_files/i2c1_master.c: 520: i2c1_operations_t I2C1_CallbackReturnStop(void 
      +                          *funPtr);mcc_generated_files/i2c1_master.c: 521: {;mcc_generated_files/i2c1_master.c: 52
      +                          2:     return I2C1_STOP;
 32463                           
 32464                           ; BSR set to: 2
 32465                           ;incstack = 0
 32466  00981E  0E01               	movlw	1
 32467                           
 32468                           ; BSR set to: 2
 32469  009820  0012               	return		;funcret
 32470  009822                     __end_of_I2C1_CallbackReturnStop:
 32471                           	callstack 0
 32472                           
 32473 ;; *************** function _rdBlkRegCompleteHandler@i2c1_master_example$F535 *****************
 32474 ;; Defined at:
 32475 ;;		line 176 in file "mcc_generated_files/examples/i2c1_master_example.c"
 32476 ;; Parameters:    Size  Location     Type
 32477 ;;  ptr             2   24[COMRAM] PTR void 
 32478 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 32479 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 32480 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 32481 ;; Auto vars:     Size  Location     Type
 32482 ;;		None
 32483 ;; Return value:  Size  Location     Type
 32484 ;;                  1    wreg      enum E527
 32485 ;; Registers used:
 32486 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32487 ;; Tracked objects:
 32488 ;;		On entry : 3F/2
 32489 ;;		On exit  : 0/0
 32490 ;;		Unchanged: 0/0
 32491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32492 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32493 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32495 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32496 ;;Total ram usage:        2 bytes
 32497 ;; Hardware stack levels used: 1
 32498 ;; Hardware stack levels required when called: 6
 32499 ;; This function calls:
 32500 ;;		_I2C1_SetBuffer
 32501 ;;		_I2C1_SetDataCompleteCallback
 32502 ;; This function is called by:
 32503 ;;		_I2C1_DO_TX
 32504 ;;		_I2C1_DO_RX
 32505 ;;		_I2C1_DO_TX_EMPTY
 32506 ;;		_I2C1_DO_ADDRESS_NACK
 32507 ;; This function uses a non-reentrant model
 32508 ;;
 32509                           
 32510                           	psect	text166
 32511  008E28                     __ptext166:
 32512                           	callstack 0
 32513  008E28                     _rdBlkRegCompleteHandler@i2c1_master_example$F535:
 32514                           	callstack 14
 32515                           
 32516                           ; BSR set to: 2
 32517                           ;mcc_generated_files/examples/i2c1_master_example.c: 176: static i2c1_operations_t rdBlk
      +                          RegCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 177: {
      +                          ;mcc_generated_files/examples/i2c1_master_example.c: 178:     I2C1_SetBuffer(((i2c1_buff
      +                          er_t *)ptr)->data,((i2c1_buffer_t*)ptr)->len);
 32518                           
 32519                           ; BSR set to: 2
 32520                           ;incstack = 0
 32521  008E28  EE20 F002          	lfsr	2,2
 32522  008E2C  5019               	movf	rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr^0,w,c
 32523  008E2E  26D9               	addwf	fsr2l,f,c
 32524  008E30  501A               	movf	(rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr+1)^0,w,c
 32525  008E32  22DA               	addwfc	fsr2h,f,c
 32526  008E34  CFDE F010          	movff	postinc2,I2C1_SetBuffer@buffer
 32527  008E38  CFDD F011          	movff	postdec2,I2C1_SetBuffer@buffer+1
 32528  008E3C  C019  FFD9         	movff	rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr,fsr2l
 32529  008E40  C01A  FFDA         	movff	rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr+1,fsr2h
 32530  008E44  CFDE F012          	movff	postinc2,I2C1_SetBuffer@bufferSize
 32531  008E48  CFDD F013          	movff	postdec2,I2C1_SetBuffer@bufferSize+1
 32532  008E4C  ECC3  F04A         	call	_I2C1_SetBuffer	;wreg free
 32533                           
 32534                           ; BSR set to: 2
 32535                           ;mcc_generated_files/examples/i2c1_master_example.c: 179:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 32536  008E50  0E00               	movlw	0
 32537  008E52  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 32538  008E54  0E00               	movlw	0
 32539  008E56  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 32540  008E58  0E00               	movlw	0
 32541  008E5A  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 32542  008E5C  0E00               	movlw	0
 32543  008E5E  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 32544  008E60  EC0C  F04B         	call	_I2C1_SetDataCompleteCallback	;wreg free
 32545                           
 32546                           ;mcc_generated_files/examples/i2c1_master_example.c: 180:     return I2C1_RESTART_READ;
 32547  008E64  0E02               	movlw	2
 32548  008E66  0012               	return		;funcret
 32549  008E68                     __end_of_rdBlkRegCompleteHandler@i2c1_master_example$F535:
 32550                           	callstack 0
 32551                           
 32552 ;; *************** function _wr1RegCompleteHandler@i2c1_master_example$F517 *****************
 32553 ;; Defined at:
 32554 ;;		line 162 in file "mcc_generated_files/examples/i2c1_master_example.c"
 32555 ;; Parameters:    Size  Location     Type
 32556 ;;  ptr             2   24[COMRAM] PTR void 
 32557 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 32558 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 32559 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 32560 ;; Auto vars:     Size  Location     Type
 32561 ;;		None
 32562 ;; Return value:  Size  Location     Type
 32563 ;;                  1    wreg      enum E527
 32564 ;; Registers used:
 32565 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32566 ;; Tracked objects:
 32567 ;;		On entry : 3F/2
 32568 ;;		On exit  : 0/0
 32569 ;;		Unchanged: 0/0
 32570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32571 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32574 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32575 ;;Total ram usage:        2 bytes
 32576 ;; Hardware stack levels used: 1
 32577 ;; Hardware stack levels required when called: 6
 32578 ;; This function calls:
 32579 ;;		_I2C1_SetBuffer
 32580 ;;		_I2C1_SetDataCompleteCallback
 32581 ;; This function is called by:
 32582 ;;		_I2C1_DO_TX
 32583 ;;		_I2C1_DO_RX
 32584 ;;		_I2C1_DO_TX_EMPTY
 32585 ;;		_I2C1_DO_ADDRESS_NACK
 32586 ;; This function uses a non-reentrant model
 32587 ;;
 32588                           
 32589                           	psect	text167
 32590  009168                     __ptext167:
 32591                           	callstack 0
 32592  009168                     _wr1RegCompleteHandler@i2c1_master_example$F517:
 32593                           	callstack 14
 32594                           
 32595                           ; BSR set to: 2
 32596                           ;mcc_generated_files/examples/i2c1_master_example.c: 162: static i2c1_operations_t wr1Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 163: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 164:     I2C1_SetBuffer(ptr,1);
 32597                           
 32598                           ;incstack = 0
 32599  009168  C019  F010         	movff	wr1RegCompleteHandler@i2c1_master_example$F517@ptr,I2C1_SetBuffer@buffer
 32600  00916C  C01A  F011         	movff	wr1RegCompleteHandler@i2c1_master_example$F517@ptr+1,I2C1_SetBuffer@buffer+1
 32601  009170  0E00               	movlw	0
 32602  009172  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 32603  009174  0E01               	movlw	1
 32604  009176  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 32605  009178  ECC3  F04A         	call	_I2C1_SetBuffer	;wreg free
 32606                           
 32607                           ; BSR set to: 2
 32608                           ;mcc_generated_files/examples/i2c1_master_example.c: 165:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 32609  00917C  0E00               	movlw	0
 32610  00917E  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 32611  009180  0E00               	movlw	0
 32612  009182  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 32613  009184  0E00               	movlw	0
 32614  009186  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 32615  009188  0E00               	movlw	0
 32616  00918A  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 32617  00918C  EC0C  F04B         	call	_I2C1_SetDataCompleteCallback	;wreg free
 32618                           
 32619                           ;mcc_generated_files/examples/i2c1_master_example.c: 166:     return I2C1_CONTINUE;
 32620  009190  0E04               	movlw	4
 32621  009192  0012               	return		;funcret
 32622  009194                     __end_of_wr1RegCompleteHandler@i2c1_master_example$F517:
 32623                           	callstack 0
 32624                           
 32625 ;; *************** function _rd2RegCompleteHandler@i2c1_master_example$F511 *****************
 32626 ;; Defined at:
 32627 ;;		line 155 in file "mcc_generated_files/examples/i2c1_master_example.c"
 32628 ;; Parameters:    Size  Location     Type
 32629 ;;  ptr             2   24[COMRAM] PTR void 
 32630 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 32631 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 32632 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 32633 ;; Auto vars:     Size  Location     Type
 32634 ;;		None
 32635 ;; Return value:  Size  Location     Type
 32636 ;;                  1    wreg      enum E527
 32637 ;; Registers used:
 32638 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32639 ;; Tracked objects:
 32640 ;;		On entry : 3F/2
 32641 ;;		On exit  : 0/0
 32642 ;;		Unchanged: 0/0
 32643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32644 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32647 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32648 ;;Total ram usage:        2 bytes
 32649 ;; Hardware stack levels used: 1
 32650 ;; Hardware stack levels required when called: 6
 32651 ;; This function calls:
 32652 ;;		_I2C1_SetBuffer
 32653 ;;		_I2C1_SetDataCompleteCallback
 32654 ;; This function is called by:
 32655 ;;		_I2C1_DO_TX
 32656 ;;		_I2C1_DO_RX
 32657 ;;		_I2C1_DO_TX_EMPTY
 32658 ;;		_I2C1_DO_ADDRESS_NACK
 32659 ;; This function uses a non-reentrant model
 32660 ;;
 32661                           
 32662                           	psect	text168
 32663  009194                     __ptext168:
 32664                           	callstack 0
 32665  009194                     _rd2RegCompleteHandler@i2c1_master_example$F511:
 32666                           	callstack 14
 32667                           
 32668                           ; BSR set to: 2
 32669                           ;mcc_generated_files/examples/i2c1_master_example.c: 155: static i2c1_operations_t rd2Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 156: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 157:     I2C1_SetBuffer(ptr,2);
 32670                           
 32671                           ;incstack = 0
 32672  009194  C019  F010         	movff	rd2RegCompleteHandler@i2c1_master_example$F511@ptr,I2C1_SetBuffer@buffer
 32673  009198  C01A  F011         	movff	rd2RegCompleteHandler@i2c1_master_example$F511@ptr+1,I2C1_SetBuffer@buffer+1
 32674  00919C  0E00               	movlw	0
 32675  00919E  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 32676  0091A0  0E02               	movlw	2
 32677  0091A2  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 32678  0091A4  ECC3  F04A         	call	_I2C1_SetBuffer	;wreg free
 32679                           
 32680                           ; BSR set to: 2
 32681                           ;mcc_generated_files/examples/i2c1_master_example.c: 158:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 32682  0091A8  0E00               	movlw	0
 32683  0091AA  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 32684  0091AC  0E00               	movlw	0
 32685  0091AE  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 32686  0091B0  0E00               	movlw	0
 32687  0091B2  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 32688  0091B4  0E00               	movlw	0
 32689  0091B6  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 32690  0091B8  EC0C  F04B         	call	_I2C1_SetDataCompleteCallback	;wreg free
 32691                           
 32692                           ;mcc_generated_files/examples/i2c1_master_example.c: 159:     return I2C1_RESTART_READ;
 32693  0091BC  0E02               	movlw	2
 32694  0091BE  0012               	return		;funcret
 32695  0091C0                     __end_of_rd2RegCompleteHandler@i2c1_master_example$F511:
 32696                           	callstack 0
 32697                           
 32698 ;; *************** function _rd1RegCompleteHandler@i2c1_master_example$F500 *****************
 32699 ;; Defined at:
 32700 ;;		line 148 in file "mcc_generated_files/examples/i2c1_master_example.c"
 32701 ;; Parameters:    Size  Location     Type
 32702 ;;  ptr             2   24[COMRAM] PTR void 
 32703 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 32704 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 32705 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 32706 ;; Auto vars:     Size  Location     Type
 32707 ;;		None
 32708 ;; Return value:  Size  Location     Type
 32709 ;;                  1    wreg      enum E527
 32710 ;; Registers used:
 32711 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32712 ;; Tracked objects:
 32713 ;;		On entry : 3F/2
 32714 ;;		On exit  : 0/0
 32715 ;;		Unchanged: 0/0
 32716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32717 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32718 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32720 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32721 ;;Total ram usage:        2 bytes
 32722 ;; Hardware stack levels used: 1
 32723 ;; Hardware stack levels required when called: 6
 32724 ;; This function calls:
 32725 ;;		_I2C1_SetBuffer
 32726 ;;		_I2C1_SetDataCompleteCallback
 32727 ;; This function is called by:
 32728 ;;		_I2C1_Read1ByteRegister
 32729 ;;		_I2C1_DO_TX
 32730 ;;		_I2C1_DO_RX
 32731 ;;		_I2C1_DO_TX_EMPTY
 32732 ;;		_I2C1_DO_ADDRESS_NACK
 32733 ;; This function uses a non-reentrant model
 32734 ;;
 32735                           
 32736                           	psect	text169
 32737  0091C0                     __ptext169:
 32738                           	callstack 0
 32739  0091C0                     _rd1RegCompleteHandler@i2c1_master_example$F500:
 32740                           	callstack 14
 32741                           
 32742                           ; BSR set to: 2
 32743                           ;mcc_generated_files/examples/i2c1_master_example.c: 148: static i2c1_operations_t rd1Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 149: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 150:     I2C1_SetBuffer(ptr,1);
 32744                           
 32745                           ;incstack = 0
 32746  0091C0  C019  F010         	movff	rd1RegCompleteHandler@i2c1_master_example$F500@ptr,I2C1_SetBuffer@buffer
 32747  0091C4  C01A  F011         	movff	rd1RegCompleteHandler@i2c1_master_example$F500@ptr+1,I2C1_SetBuffer@buffer+1
 32748  0091C8  0E00               	movlw	0
 32749  0091CA  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 32750  0091CC  0E01               	movlw	1
 32751  0091CE  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 32752  0091D0  ECC3  F04A         	call	_I2C1_SetBuffer	;wreg free
 32753                           
 32754                           ; BSR set to: 2
 32755                           ;mcc_generated_files/examples/i2c1_master_example.c: 151:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 32756  0091D4  0E00               	movlw	0
 32757  0091D6  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 32758  0091D8  0E00               	movlw	0
 32759  0091DA  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 32760  0091DC  0E00               	movlw	0
 32761  0091DE  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 32762  0091E0  0E00               	movlw	0
 32763  0091E2  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 32764  0091E4  EC0C  F04B         	call	_I2C1_SetDataCompleteCallback	;wreg free
 32765                           
 32766                           ;mcc_generated_files/examples/i2c1_master_example.c: 152:     return I2C1_RESTART_READ;
 32767  0091E8  0E02               	movlw	2
 32768  0091EA  0012               	return		;funcret
 32769  0091EC                     __end_of_rd1RegCompleteHandler@i2c1_master_example$F500:
 32770                           	callstack 0
 32771                           
 32772 ;; *************** function _rdBlkRegCompleteHandler *****************
 32773 ;; Defined at:
 32774 ;;		line 140 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 32775 ;; Parameters:    Size  Location     Type
 32776 ;;  p               2   24[COMRAM] PTR void 
 32777 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 32778 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 32779 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 32780 ;; Auto vars:     Size  Location     Type
 32781 ;;		None
 32782 ;; Return value:  Size  Location     Type
 32783 ;;                  1    wreg      enum E360
 32784 ;; Registers used:
 32785 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32786 ;; Tracked objects:
 32787 ;;		On entry : 3F/2
 32788 ;;		On exit  : 0/0
 32789 ;;		Unchanged: 0/0
 32790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32791 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32792 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32794 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32795 ;;Total ram usage:        2 bytes
 32796 ;; Hardware stack levels used: 1
 32797 ;; Hardware stack levels required when called: 6
 32798 ;; This function calls:
 32799 ;;		_I2C1_SetBuffer
 32800 ;;		_I2C1_SetDataCompleteCallback
 32801 ;; This function is called by:
 32802 ;;		_i2c_readDataBlock
 32803 ;;		_I2C1_DO_TX
 32804 ;;		_I2C1_DO_RX
 32805 ;;		_I2C1_DO_TX_EMPTY
 32806 ;;		_I2C1_DO_ADDRESS_NACK
 32807 ;; This function uses a non-reentrant model
 32808 ;;
 32809                           
 32810                           	psect	text170
 32811  008E68                     __ptext170:
 32812                           	callstack 0
 32813  008E68                     _rdBlkRegCompleteHandler:
 32814                           	callstack 14
 32815                           
 32816                           ; BSR set to: 2
 32817                           ;mcc_generated_files/drivers/i2c_simple_master.c: 140: static i2c1_operations_t rdBlkReg
      +                          CompleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 141: {;mcc_gen
      +                          erated_files/drivers/i2c_simple_master.c: 142:     I2C1_SetBuffer(((buf_t *)p)->data,((b
      +                          uf_t*)p)->len);
 32818                           
 32819                           ;incstack = 0
 32820  008E68  EE20 F002          	lfsr	2,2
 32821  008E6C  5019               	movf	rdBlkRegCompleteHandler@p^0,w,c
 32822  008E6E  26D9               	addwf	fsr2l,f,c
 32823  008E70  501A               	movf	(rdBlkRegCompleteHandler@p+1)^0,w,c
 32824  008E72  22DA               	addwfc	fsr2h,f,c
 32825  008E74  CFDE F010          	movff	postinc2,I2C1_SetBuffer@buffer
 32826  008E78  CFDD F011          	movff	postdec2,I2C1_SetBuffer@buffer+1
 32827  008E7C  C019  FFD9         	movff	rdBlkRegCompleteHandler@p,fsr2l
 32828  008E80  C01A  FFDA         	movff	rdBlkRegCompleteHandler@p+1,fsr2h
 32829  008E84  CFDE F012          	movff	postinc2,I2C1_SetBuffer@bufferSize
 32830  008E88  CFDD F013          	movff	postdec2,I2C1_SetBuffer@bufferSize+1
 32831  008E8C  ECC3  F04A         	call	_I2C1_SetBuffer	;wreg free
 32832                           
 32833                           ; BSR set to: 2
 32834                           ;mcc_generated_files/drivers/i2c_simple_master.c: 143:     I2C1_SetDataCompleteCallback(
      +                          ((void*)0),((void*)0));
 32835  008E90  0E00               	movlw	0
 32836  008E92  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 32837  008E94  0E00               	movlw	0
 32838  008E96  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 32839  008E98  0E00               	movlw	0
 32840  008E9A  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 32841  008E9C  0E00               	movlw	0
 32842  008E9E  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 32843  008EA0  EC0C  F04B         	call	_I2C1_SetDataCompleteCallback	;wreg free
 32844                           
 32845                           ;mcc_generated_files/drivers/i2c_simple_master.c: 144:     return I2C1_RESTART_READ;
 32846  008EA4  0E02               	movlw	2
 32847  008EA6  0012               	return		;funcret
 32848  008EA8                     __end_of_rdBlkRegCompleteHandler:
 32849                           	callstack 0
 32850                           
 32851 ;; *************** function _wr2RegCompleteHandler *****************
 32852 ;; Defined at:
 32853 ;;		line 116 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 32854 ;; Parameters:    Size  Location     Type
 32855 ;;  p               2   24[COMRAM] PTR void 
 32856 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 32857 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 32858 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 32859 ;; Auto vars:     Size  Location     Type
 32860 ;;		None
 32861 ;; Return value:  Size  Location     Type
 32862 ;;                  1    wreg      enum E360
 32863 ;; Registers used:
 32864 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32865 ;; Tracked objects:
 32866 ;;		On entry : 3F/2
 32867 ;;		On exit  : 0/0
 32868 ;;		Unchanged: 0/0
 32869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32870 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32871 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32873 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32874 ;;Total ram usage:        2 bytes
 32875 ;; Hardware stack levels used: 1
 32876 ;; Hardware stack levels required when called: 6
 32877 ;; This function calls:
 32878 ;;		_I2C1_SetBuffer
 32879 ;;		_I2C1_SetDataCompleteCallback
 32880 ;; This function is called by:
 32881 ;;		_I2C1_DO_TX
 32882 ;;		_I2C1_DO_RX
 32883 ;;		_I2C1_DO_TX_EMPTY
 32884 ;;		_I2C1_DO_ADDRESS_NACK
 32885 ;; This function uses a non-reentrant model
 32886 ;;
 32887                           
 32888                           	psect	text171
 32889  0091EC                     __ptext171:
 32890                           	callstack 0
 32891  0091EC                     _wr2RegCompleteHandler:
 32892                           	callstack 14
 32893                           
 32894                           ; BSR set to: 2
 32895                           ;mcc_generated_files/drivers/i2c_simple_master.c: 116: static i2c1_operations_t wr2RegCo
      +                          mpleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 117: {;mcc_gener
      +                          ated_files/drivers/i2c_simple_master.c: 118:     I2C1_SetBuffer(p,2);
 32896                           
 32897                           ;incstack = 0
 32898  0091EC  C019  F010         	movff	wr2RegCompleteHandler@p,I2C1_SetBuffer@buffer
 32899  0091F0  C01A  F011         	movff	wr2RegCompleteHandler@p+1,I2C1_SetBuffer@buffer+1
 32900  0091F4  0E00               	movlw	0
 32901  0091F6  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 32902  0091F8  0E02               	movlw	2
 32903  0091FA  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 32904  0091FC  ECC3  F04A         	call	_I2C1_SetBuffer	;wreg free
 32905                           
 32906                           ; BSR set to: 2
 32907                           ;mcc_generated_files/drivers/i2c_simple_master.c: 119:     I2C1_SetDataCompleteCallback(
      +                          ((void*)0),((void*)0));
 32908  009200  0E00               	movlw	0
 32909  009202  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 32910  009204  0E00               	movlw	0
 32911  009206  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 32912  009208  0E00               	movlw	0
 32913  00920A  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 32914  00920C  0E00               	movlw	0
 32915  00920E  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 32916  009210  EC0C  F04B         	call	_I2C1_SetDataCompleteCallback	;wreg free
 32917                           
 32918                           ;mcc_generated_files/drivers/i2c_simple_master.c: 120:     return I2C1_CONTINUE;
 32919  009214  0E04               	movlw	4
 32920  009216  0012               	return		;funcret
 32921  009218                     __end_of_wr2RegCompleteHandler:
 32922                           	callstack 0
 32923                           
 32924 ;; *************** function _rd2RegCompleteHandler *****************
 32925 ;; Defined at:
 32926 ;;		line 93 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 32927 ;; Parameters:    Size  Location     Type
 32928 ;;  p               2   24[COMRAM] PTR void 
 32929 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 32930 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 32931 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 32932 ;; Auto vars:     Size  Location     Type
 32933 ;;		None
 32934 ;; Return value:  Size  Location     Type
 32935 ;;                  1    wreg      enum E360
 32936 ;; Registers used:
 32937 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32938 ;; Tracked objects:
 32939 ;;		On entry : 3F/2
 32940 ;;		On exit  : 0/0
 32941 ;;		Unchanged: 0/0
 32942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32943 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32946 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32947 ;;Total ram usage:        2 bytes
 32948 ;; Hardware stack levels used: 1
 32949 ;; Hardware stack levels required when called: 6
 32950 ;; This function calls:
 32951 ;;		_I2C1_SetBuffer
 32952 ;;		_I2C1_SetDataCompleteCallback
 32953 ;; This function is called by:
 32954 ;;		_I2C1_DO_TX
 32955 ;;		_I2C1_DO_RX
 32956 ;;		_I2C1_DO_TX_EMPTY
 32957 ;;		_I2C1_DO_ADDRESS_NACK
 32958 ;; This function uses a non-reentrant model
 32959 ;;
 32960                           
 32961                           	psect	text172
 32962  009218                     __ptext172:
 32963                           	callstack 0
 32964  009218                     _rd2RegCompleteHandler:
 32965                           	callstack 14
 32966                           
 32967                           ; BSR set to: 2
 32968                           ;mcc_generated_files/drivers/i2c_simple_master.c: 93: static i2c1_operations_t rd2RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 94: {;mcc_generat
      +                          ed_files/drivers/i2c_simple_master.c: 95:     I2C1_SetBuffer(p,2);
 32969                           
 32970                           ;incstack = 0
 32971  009218  C019  F010         	movff	rd2RegCompleteHandler@p,I2C1_SetBuffer@buffer
 32972  00921C  C01A  F011         	movff	rd2RegCompleteHandler@p+1,I2C1_SetBuffer@buffer+1
 32973  009220  0E00               	movlw	0
 32974  009222  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 32975  009224  0E02               	movlw	2
 32976  009226  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 32977  009228  ECC3  F04A         	call	_I2C1_SetBuffer	;wreg free
 32978                           
 32979                           ; BSR set to: 2
 32980                           ;mcc_generated_files/drivers/i2c_simple_master.c: 96:     I2C1_SetDataCompleteCallback((
      +                          (void*)0),((void*)0));
 32981  00922C  0E00               	movlw	0
 32982  00922E  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 32983  009230  0E00               	movlw	0
 32984  009232  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 32985  009234  0E00               	movlw	0
 32986  009236  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 32987  009238  0E00               	movlw	0
 32988  00923A  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 32989  00923C  EC0C  F04B         	call	_I2C1_SetDataCompleteCallback	;wreg free
 32990                           
 32991                           ;mcc_generated_files/drivers/i2c_simple_master.c: 97:     return I2C1_RESTART_READ;
 32992  009240  0E02               	movlw	2
 32993  009242  0012               	return		;funcret
 32994  009244                     __end_of_rd2RegCompleteHandler:
 32995                           	callstack 0
 32996                           
 32997 ;; *************** function _rd1RegCompleteHandler *****************
 32998 ;; Defined at:
 32999 ;;		line 64 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 33000 ;; Parameters:    Size  Location     Type
 33001 ;;  p               2   24[COMRAM] PTR void 
 33002 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 33003 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 33004 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 33005 ;; Auto vars:     Size  Location     Type
 33006 ;;		None
 33007 ;; Return value:  Size  Location     Type
 33008 ;;                  1    wreg      enum E360
 33009 ;; Registers used:
 33010 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33011 ;; Tracked objects:
 33012 ;;		On entry : 3F/2
 33013 ;;		On exit  : 0/0
 33014 ;;		Unchanged: 0/0
 33015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33016 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33019 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33020 ;;Total ram usage:        2 bytes
 33021 ;; Hardware stack levels used: 1
 33022 ;; Hardware stack levels required when called: 6
 33023 ;; This function calls:
 33024 ;;		_I2C1_SetBuffer
 33025 ;;		_I2C1_SetDataCompleteCallback
 33026 ;; This function is called by:
 33027 ;;		_I2C1_DO_TX
 33028 ;;		_I2C1_DO_RX
 33029 ;;		_I2C1_DO_TX_EMPTY
 33030 ;;		_I2C1_DO_ADDRESS_NACK
 33031 ;; This function uses a non-reentrant model
 33032 ;;
 33033                           
 33034                           	psect	text173
 33035  009244                     __ptext173:
 33036                           	callstack 0
 33037  009244                     _rd1RegCompleteHandler:
 33038                           	callstack 14
 33039                           
 33040                           ; BSR set to: 2
 33041                           ;mcc_generated_files/drivers/i2c_simple_master.c: 64: static i2c1_operations_t rd1RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 65: {;mcc_generat
      +                          ed_files/drivers/i2c_simple_master.c: 66:     I2C1_SetBuffer(p,1);
 33042                           
 33043                           ;incstack = 0
 33044  009244  C019  F010         	movff	rd1RegCompleteHandler@p,I2C1_SetBuffer@buffer
 33045  009248  C01A  F011         	movff	rd1RegCompleteHandler@p+1,I2C1_SetBuffer@buffer+1
 33046  00924C  0E00               	movlw	0
 33047  00924E  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 33048  009250  0E01               	movlw	1
 33049  009252  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 33050  009254  ECC3  F04A         	call	_I2C1_SetBuffer	;wreg free
 33051                           
 33052                           ; BSR set to: 2
 33053                           ;mcc_generated_files/drivers/i2c_simple_master.c: 67:     I2C1_SetDataCompleteCallback((
      +                          (void*)0),((void*)0));
 33054  009258  0E00               	movlw	0
 33055  00925A  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 33056  00925C  0E00               	movlw	0
 33057  00925E  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 33058  009260  0E00               	movlw	0
 33059  009262  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 33060  009264  0E00               	movlw	0
 33061  009266  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 33062  009268  EC0C  F04B         	call	_I2C1_SetDataCompleteCallback	;wreg free
 33063                           
 33064                           ;mcc_generated_files/drivers/i2c_simple_master.c: 68:     return I2C1_RESTART_READ;
 33065  00926C  0E02               	movlw	2
 33066  00926E  0012               	return		;funcret
 33067  009270                     __end_of_rd1RegCompleteHandler:
 33068                           	callstack 0
 33069                           
 33070 ;; *************** function _wr1RegCompleteHandler *****************
 33071 ;; Defined at:
 33072 ;;		line 33 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 33073 ;; Parameters:    Size  Location     Type
 33074 ;;  p               2   24[COMRAM] PTR void 
 33075 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 33076 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 33077 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 33078 ;; Auto vars:     Size  Location     Type
 33079 ;;		None
 33080 ;; Return value:  Size  Location     Type
 33081 ;;                  1    wreg      enum E360
 33082 ;; Registers used:
 33083 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33084 ;; Tracked objects:
 33085 ;;		On entry : 3F/2
 33086 ;;		On exit  : 0/0
 33087 ;;		Unchanged: 0/0
 33088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33089 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33092 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33093 ;;Total ram usage:        2 bytes
 33094 ;; Hardware stack levels used: 1
 33095 ;; Hardware stack levels required when called: 6
 33096 ;; This function calls:
 33097 ;;		_I2C1_SetBuffer
 33098 ;;		_I2C1_SetDataCompleteCallback
 33099 ;; This function is called by:
 33100 ;;		_I2C1_DO_TX
 33101 ;;		_I2C1_DO_RX
 33102 ;;		_I2C1_DO_TX_EMPTY
 33103 ;;		_I2C1_DO_ADDRESS_NACK
 33104 ;; This function uses a non-reentrant model
 33105 ;;
 33106                           
 33107                           	psect	text174
 33108  009270                     __ptext174:
 33109                           	callstack 0
 33110  009270                     _wr1RegCompleteHandler:
 33111                           	callstack 14
 33112                           
 33113                           ; BSR set to: 2
 33114                           ;mcc_generated_files/drivers/i2c_simple_master.c: 33: static i2c1_operations_t wr1RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 34: {;mcc_generat
      +                          ed_files/drivers/i2c_simple_master.c: 35:     I2C1_SetBuffer(p,1);
 33115                           
 33116                           ;incstack = 0
 33117  009270  C019  F010         	movff	wr1RegCompleteHandler@p,I2C1_SetBuffer@buffer
 33118  009274  C01A  F011         	movff	wr1RegCompleteHandler@p+1,I2C1_SetBuffer@buffer+1
 33119  009278  0E00               	movlw	0
 33120  00927A  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 33121  00927C  0E01               	movlw	1
 33122  00927E  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 33123  009280  ECC3  F04A         	call	_I2C1_SetBuffer	;wreg free
 33124                           
 33125                           ; BSR set to: 2
 33126                           ;mcc_generated_files/drivers/i2c_simple_master.c: 36:     I2C1_SetDataCompleteCallback((
      +                          (void*)0),((void*)0));
 33127  009284  0E00               	movlw	0
 33128  009286  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 33129  009288  0E00               	movlw	0
 33130  00928A  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 33131  00928C  0E00               	movlw	0
 33132  00928E  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 33133  009290  0E00               	movlw	0
 33134  009292  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 33135  009294  EC0C  F04B         	call	_I2C1_SetDataCompleteCallback	;wreg free
 33136                           
 33137                           ;mcc_generated_files/drivers/i2c_simple_master.c: 37:     return I2C1_CONTINUE;
 33138  009298  0E04               	movlw	4
 33139  00929A  0012               	return		;funcret
 33140  00929C                     __end_of_wr1RegCompleteHandler:
 33141                           	callstack 0
 33142                           
 33143 ;; *************** function _wr2RegCompleteHandler@i2c1_master_example$F523 *****************
 33144 ;; Defined at:
 33145 ;;		line 169 in file "mcc_generated_files/examples/i2c1_master_example.c"
 33146 ;; Parameters:    Size  Location     Type
 33147 ;;  ptr             2   24[COMRAM] PTR void 
 33148 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 33149 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 33150 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 33151 ;; Auto vars:     Size  Location     Type
 33152 ;;		None
 33153 ;; Return value:  Size  Location     Type
 33154 ;;                  1    wreg      enum E527
 33155 ;; Registers used:
 33156 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33157 ;; Tracked objects:
 33158 ;;		On entry : 3F/2
 33159 ;;		On exit  : 0/0
 33160 ;;		Unchanged: 0/0
 33161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33162 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33163 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33165 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33166 ;;Total ram usage:        2 bytes
 33167 ;; Hardware stack levels used: 1
 33168 ;; Hardware stack levels required when called: 6
 33169 ;; This function calls:
 33170 ;;		_I2C1_SetBuffer
 33171 ;;		_I2C1_SetDataCompleteCallback
 33172 ;; This function is called by:
 33173 ;;		_I2C1_DO_TX
 33174 ;;		_I2C1_DO_RX
 33175 ;;		_I2C1_DO_TX_EMPTY
 33176 ;;		_I2C1_DO_ADDRESS_NACK
 33177 ;; This function uses a non-reentrant model
 33178 ;;
 33179                           
 33180                           	psect	text175
 33181  00929C                     __ptext175:
 33182                           	callstack 0
 33183  00929C                     _wr2RegCompleteHandler@i2c1_master_example$F523:
 33184                           	callstack 14
 33185                           
 33186                           ; BSR set to: 2
 33187                           ;mcc_generated_files/examples/i2c1_master_example.c: 169: static i2c1_operations_t wr2Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 170: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 171:     I2C1_SetBuffer(ptr,2);
 33188                           
 33189                           ;incstack = 0
 33190  00929C  C019  F010         	movff	wr2RegCompleteHandler@i2c1_master_example$F523@ptr,I2C1_SetBuffer@buffer
 33191  0092A0  C01A  F011         	movff	wr2RegCompleteHandler@i2c1_master_example$F523@ptr+1,I2C1_SetBuffer@buffer+1
 33192  0092A4  0E00               	movlw	0
 33193  0092A6  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 33194  0092A8  0E02               	movlw	2
 33195  0092AA  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 33196  0092AC  ECC3  F04A         	call	_I2C1_SetBuffer	;wreg free
 33197                           
 33198                           ; BSR set to: 2
 33199                           ;mcc_generated_files/examples/i2c1_master_example.c: 172:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 33200  0092B0  0E00               	movlw	0
 33201  0092B2  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 33202  0092B4  0E00               	movlw	0
 33203  0092B6  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 33204  0092B8  0E00               	movlw	0
 33205  0092BA  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 33206  0092BC  0E00               	movlw	0
 33207  0092BE  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 33208  0092C0  EC0C  F04B         	call	_I2C1_SetDataCompleteCallback	;wreg free
 33209                           
 33210                           ;mcc_generated_files/examples/i2c1_master_example.c: 173:     return I2C1_CONTINUE;
 33211  0092C4  0E04               	movlw	4
 33212  0092C6  0012               	return		;funcret
 33213  0092C8                     __end_of_wr2RegCompleteHandler@i2c1_master_example$F523:
 33214                           	callstack 0
 33215                           
 33216 ;; *************** function _I2C1_SetDataCompleteCallback *****************
 33217 ;; Defined at:
 33218 ;;		line 273 in file "mcc_generated_files/i2c1_master.c"
 33219 ;; Parameters:    Size  Location     Type
 33220 ;;  cb              2   20[COMRAM] PTR FTN(PTR void ,)enum 
 33221 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler@i2c1_master_example$F535(1), wr2RegCompleteHandler@i2c1_master_exa
      +mple$F523(1), wr1RegCompleteHandler@i2c1_master_example$F517(1), 
 33222 ;;		 -> rd2RegCompleteHandler@i2c1_master_example$F511(1), rd1RegCompleteHandler@i2c1_master_example$F500(1), rdBlkRegCo
      +mpleteHandler(1), wr2RegCompleteHandler(1), 
 33223 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 33224 ;;  ptr             2   22[COMRAM] PTR void 
 33225 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 33226 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 33227 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 33228 ;; Auto vars:     Size  Location     Type
 33229 ;;		None
 33230 ;; Return value:  Size  Location     Type
 33231 ;;                  1    wreg      void 
 33232 ;; Registers used:
 33233 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33234 ;; Tracked objects:
 33235 ;;		On entry : 33/2
 33236 ;;		On exit  : 0/0
 33237 ;;		Unchanged: 0/0
 33238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33239 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33242 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33243 ;;Total ram usage:        4 bytes
 33244 ;; Hardware stack levels used: 1
 33245 ;; Hardware stack levels required when called: 5
 33246 ;; This function calls:
 33247 ;;		_I2C1_SetCallback
 33248 ;; This function is called by:
 33249 ;;		_wr1RegCompleteHandler
 33250 ;;		_rd1RegCompleteHandler
 33251 ;;		_rd2RegCompleteHandler
 33252 ;;		_wr2RegCompleteHandler
 33253 ;;		_rdBlkRegCompleteHandler
 33254 ;;		_i2c_readDataBlock
 33255 ;;		_I2C1_Read1ByteRegister
 33256 ;;		_rd1RegCompleteHandler@i2c1_master_example$F500
 33257 ;;		_rd2RegCompleteHandler@i2c1_master_example$F511
 33258 ;;		_wr1RegCompleteHandler@i2c1_master_example$F517
 33259 ;;		_wr2RegCompleteHandler@i2c1_master_example$F523
 33260 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F535
 33261 ;; This function uses a non-reentrant model
 33262 ;;
 33263                           
 33264                           	psect	text176
 33265  009618                     __ptext176:
 33266                           	callstack 0
 33267  009618                     _I2C1_SetDataCompleteCallback:
 33268                           	callstack 20
 33269                           
 33270                           ;mcc_generated_files/i2c1_master.c: 273: void I2C1_SetDataCompleteCallback(i2c1_callback
      +                          _t cb, void *ptr);mcc_generated_files/i2c1_master.c: 274: {;mcc_generated_files/i2c1_mas
      +                          ter.c: 275:     I2C1_SetCallback(I2C1_DATA_COMPLETE, cb, ptr);
 33271                           
 33272                           ;incstack = 0
 33273  009618  C015  F010         	movff	I2C1_SetDataCompleteCallback@cb,I2C1_SetCallback@cb
 33274  00961C  C016  F011         	movff	I2C1_SetDataCompleteCallback@cb+1,I2C1_SetCallback@cb+1
 33275  009620  C017  F012         	movff	I2C1_SetDataCompleteCallback@ptr,I2C1_SetCallback@ptr
 33276  009624  C018  F013         	movff	I2C1_SetDataCompleteCallback@ptr+1,I2C1_SetCallback@ptr+1
 33277  009628  0E00               	movlw	0
 33278  00962A  EC73  F042         	call	_I2C1_SetCallback
 33279  00962E  0012               	return		;funcret
 33280  009630                     __end_of_I2C1_SetDataCompleteCallback:
 33281                           	callstack 0
 33282                           
 33283 ;; *************** function _I2C1_SetCallback *****************
 33284 ;; Defined at:
 33285 ;;		line 298 in file "mcc_generated_files/i2c1_master.c"
 33286 ;; Parameters:    Size  Location     Type
 33287 ;;  idx             1    wreg     enum E10460
 33288 ;;  cb              2   15[COMRAM] PTR FTN(PTR void ,)enum 
 33289 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler@i2c1_master_example$F535(1), wr2RegCompleteHandler@i2c1_master_exa
      +mple$F523(1), wr1RegCompleteHandler@i2c1_master_example$F517(1), 
 33290 ;;		 -> rd2RegCompleteHandler@i2c1_master_example$F511(1), rd1RegCompleteHandler@i2c1_master_example$F500(1), rdBlkRegCo
      +mpleteHandler(1), wr2RegCompleteHandler(1), 
 33291 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 33292 ;;  ptr             2   17[COMRAM] PTR void 
 33293 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 33294 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 33295 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 33296 ;; Auto vars:     Size  Location     Type
 33297 ;;  idx             1   19[COMRAM] enum E10460
 33298 ;; Return value:  Size  Location     Type
 33299 ;;                  1    wreg      void 
 33300 ;; Registers used:
 33301 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 33302 ;; Tracked objects:
 33303 ;;		On entry : 33/2
 33304 ;;		On exit  : 0/0
 33305 ;;		Unchanged: 0/0
 33306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33307 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33308 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33310 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33311 ;;Total ram usage:        5 bytes
 33312 ;; Hardware stack levels used: 1
 33313 ;; Hardware stack levels required when called: 4
 33314 ;; This function calls:
 33315 ;;		Nothing
 33316 ;; This function is called by:
 33317 ;;		_I2C1_SetDataCompleteCallback
 33318 ;;		_I2C1_SetAddressNackCallback
 33319 ;; This function uses a non-reentrant model
 33320 ;;
 33321                           
 33322                           	psect	text177
 33323  0084E6                     __ptext177:
 33324                           	callstack 0
 33325  0084E6                     _I2C1_SetCallback:
 33326                           	callstack 20
 33327                           
 33328                           ;incstack = 0
 33329                           ;I2C1_SetCallback@idx stored from wreg
 33330  0084E6  6E14               	movwf	I2C1_SetCallback@idx^0,c
 33331                           
 33332                           ;mcc_generated_files/i2c1_master.c: 298: static void I2C1_SetCallback(i2c1_callbackIndex
      +                          _t idx, i2c1_callback_t cb, void *ptr);mcc_generated_files/i2c1_master.c: 299: {;mcc_gen
      +                          erated_files/i2c1_master.c: 300:     if(cb)
 33333  0084E8  5010               	movf	I2C1_SetCallback@cb^0,w,c
 33334  0084EA  1011               	iorwf	(I2C1_SetCallback@cb+1)^0,w,c
 33335  0084EC  B4D8               	btfsc	status,2,c
 33336  0084EE  D019               	goto	l19447
 33337                           
 33338                           ;mcc_generated_files/i2c1_master.c: 301:     {;mcc_generated_files/i2c1_master.c: 302:  
      +                                 I2C1_Status.callbackTable[idx] = cb;
 33339  0084F0  5014               	movf	I2C1_SetCallback@idx^0,w,c
 33340  0084F2  0D02               	mullw	2
 33341  0084F4  0E3C               	movlw	low _I2C1_Status
 33342  0084F6  24F3               	addwf	243,w,c
 33343  0084F8  6ED9               	movwf	fsr2l,c
 33344  0084FA  0E02               	movlw	high _I2C1_Status
 33345  0084FC  20F4               	addwfc	prodh,w,c
 33346  0084FE  6EDA               	movwf	fsr2h,c
 33347  008500  C010  FFDE         	movff	I2C1_SetCallback@cb,postinc2
 33348  008504  C011  FFDD         	movff	I2C1_SetCallback@cb+1,postdec2
 33349                           
 33350                           ;mcc_generated_files/i2c1_master.c: 303:         I2C1_Status.callbackPayload[idx] = ptr;
 33351  008508  5014               	movf	I2C1_SetCallback@idx^0,w,c
 33352  00850A  0D02               	mullw	2
 33353  00850C  0E48               	movlw	low (_I2C1_Status+12)
 33354  00850E  24F3               	addwf	243,w,c
 33355  008510  6ED9               	movwf	fsr2l,c
 33356  008512  0E02               	movlw	high (_I2C1_Status+12)
 33357  008514  20F4               	addwfc	prodh,w,c
 33358  008516  6EDA               	movwf	fsr2h,c
 33359  008518  C012  FFDE         	movff	I2C1_SetCallback@ptr,postinc2
 33360  00851C  C013  FFDD         	movff	I2C1_SetCallback@ptr+1,postdec2
 33361                           
 33362                           ;mcc_generated_files/i2c1_master.c: 304:     }
 33363  008520  0012               	return	
 33364  008522                     l19447:
 33365                           
 33366                           ;mcc_generated_files/i2c1_master.c: 306:     {;mcc_generated_files/i2c1_master.c: 307:  
      +                                 I2C1_Status.callbackTable[idx] = I2C1_CallbackReturnStop;
 33367  008522  5014               	movf	I2C1_SetCallback@idx^0,w,c
 33368  008524  0D02               	mullw	2
 33369  008526  0E3C               	movlw	low _I2C1_Status
 33370  008528  24F3               	addwf	243,w,c
 33371  00852A  6ED9               	movwf	fsr2l,c
 33372  00852C  0E02               	movlw	high _I2C1_Status
 33373  00852E  20F4               	addwfc	prodh,w,c
 33374  008530  6EDA               	movwf	fsr2h,c
 33375  008532  0E1E               	movlw	low _I2C1_CallbackReturnStop
 33376  008534  6EDE               	movwf	postinc2,c
 33377  008536  0E98               	movlw	high _I2C1_CallbackReturnStop
 33378  008538  6EDD               	movwf	postdec2,c
 33379                           
 33380                           ;mcc_generated_files/i2c1_master.c: 308:         I2C1_Status.callbackPayload[idx] = ((vo
      +                          id*)0);
 33381  00853A  5014               	movf	I2C1_SetCallback@idx^0,w,c
 33382  00853C  0D02               	mullw	2
 33383  00853E  0E48               	movlw	low (_I2C1_Status+12)
 33384  008540  24F3               	addwf	243,w,c
 33385  008542  6ED9               	movwf	fsr2l,c
 33386  008544  0E02               	movlw	high (_I2C1_Status+12)
 33387  008546  20F4               	addwfc	prodh,w,c
 33388  008548  6EDA               	movwf	fsr2h,c
 33389  00854A  0E00               	movlw	0
 33390  00854C  6EDE               	movwf	postinc2,c
 33391  00854E  0E00               	movlw	0
 33392  008550  6EDD               	movwf	postdec2,c
 33393  008552  0012               	return		;funcret
 33394  008554                     __end_of_I2C1_SetCallback:
 33395                           	callstack 0
 33396                           
 33397 ;; *************** function _I2C1_SetBuffer *****************
 33398 ;; Defined at:
 33399 ;;		line 263 in file "mcc_generated_files/i2c1_master.c"
 33400 ;; Parameters:    Size  Location     Type
 33401 ;;  buffer          2   15[COMRAM] PTR void 
 33402 ;;		 -> eusartparser@serial(4), cmdMemoryIsEmpty@tempSerial(4), memoryTEMP(16), var_sys_NVM(64), 
 33403 ;;		 -> I2C1_ReadDataBlock@reg(1), I2C1_ReadDataBlock@bufferBlock(4), I2C1_WriteNBytes@dat(17), I2C1_Write2ByteRegister@
      +reg(1), 
 33404 ;;		 -> I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@reg(1), I2C1_Write1ByteRegister@data(1), I2C1_Read2Byte
      +Register@reg(1), 
 33405 ;;		 -> I2C1_Read2ByteRegister@returnValue(2), I2C1_Read1ByteRegister@reg(1), I2C1_Read1ByteRegister@returnValue(1), i2c
      +_readDataBlock@reg(2), 
 33406 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@reg
      +(1), 
 33407 ;;		 -> i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@reg(1), i2c_read1ByteRegister@d2(1), i2c_writeNBytes@dat(
      +17), 
 33408 ;;		 -> i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister@data(1), NULL(0), 
 33409 ;;  bufferSize      2   17[COMRAM] unsigned int 
 33410 ;; Auto vars:     Size  Location     Type
 33411 ;;		None
 33412 ;; Return value:  Size  Location     Type
 33413 ;;                  1    wreg      void 
 33414 ;; Registers used:
 33415 ;;		wreg, status,2, status,0
 33416 ;; Tracked objects:
 33417 ;;		On entry : 0/2
 33418 ;;		On exit  : 3F/2
 33419 ;;		Unchanged: 0/0
 33420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33421 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33424 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33425 ;;Total ram usage:        4 bytes
 33426 ;; Hardware stack levels used: 1
 33427 ;; Hardware stack levels required when called: 4
 33428 ;; This function calls:
 33429 ;;		Nothing
 33430 ;; This function is called by:
 33431 ;;		_wr1RegCompleteHandler
 33432 ;;		_i2c_writeNBytes
 33433 ;;		_rd1RegCompleteHandler
 33434 ;;		_rd2RegCompleteHandler
 33435 ;;		_wr2RegCompleteHandler
 33436 ;;		_rdBlkRegCompleteHandler
 33437 ;;		_i2c_readDataBlock
 33438 ;;		_I2C1_Read1ByteRegister
 33439 ;;		_rd1RegCompleteHandler@i2c1_master_example$F500
 33440 ;;		_rd2RegCompleteHandler@i2c1_master_example$F511
 33441 ;;		_wr1RegCompleteHandler@i2c1_master_example$F517
 33442 ;;		_wr2RegCompleteHandler@i2c1_master_example$F523
 33443 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F535
 33444 ;; This function uses a non-reentrant model
 33445 ;;
 33446                           
 33447                           	psect	text178
 33448  009586                     __ptext178:
 33449                           	callstack 0
 33450  009586                     _I2C1_SetBuffer:
 33451                           	callstack 21
 33452                           
 33453                           ;mcc_generated_files/i2c1_master.c: 263: void I2C1_SetBuffer(void *buffer, size_t buffer
      +                          Size);mcc_generated_files/i2c1_master.c: 264: {;mcc_generated_files/i2c1_master.c: 265: 
      +                              if(I2C1_Status.bufferFree)
 33454                           
 33455                           ;incstack = 0
 33456  009586  0102               	movlb	2	; () banked
 33457  009588  A75F               	btfss	(_I2C1_Status+35)& (0+255),3,b
 33458  00958A  0012               	return	
 33459                           
 33460                           ; BSR set to: 2
 33461                           ;mcc_generated_files/i2c1_master.c: 266:     {;mcc_generated_files/i2c1_master.c: 267:  
      +                                 I2C1_Status.data_ptr = buffer;
 33462  00958C  C010  F259         	movff	I2C1_SetBuffer@buffer,_I2C1_Status+29
 33463  009590  C011  F25A         	movff	I2C1_SetBuffer@buffer+1,_I2C1_Status+30
 33464                           
 33465                           ; BSR set to: 2
 33466                           ;mcc_generated_files/i2c1_master.c: 268:         I2C1_Status.data_length = bufferSize;
 33467  009594  C012  F25B         	movff	I2C1_SetBuffer@bufferSize,_I2C1_Status+31
 33468  009598  C013  F25C         	movff	I2C1_SetBuffer@bufferSize+1,_I2C1_Status+32
 33469                           
 33470                           ; BSR set to: 2
 33471                           ;mcc_generated_files/i2c1_master.c: 269:         I2C1_Status.bufferFree = 0;
 33472  00959C  975F               	bcf	(_I2C1_Status+35)& (0+255),3,b
 33473                           
 33474                           ; BSR set to: 2
 33475  00959E  0012               	return		;funcret
 33476  0095A0                     __end_of_I2C1_SetBuffer:
 33477                           	callstack 0
 33478                           
 33479 ;; *************** function _I2C1_MasterStop *****************
 33480 ;; Defined at:
 33481 ;;		line 593 in file "mcc_generated_files/i2c1_master.c"
 33482 ;; Parameters:    Size  Location     Type
 33483 ;;		None
 33484 ;; Auto vars:     Size  Location     Type
 33485 ;;		None
 33486 ;; Return value:  Size  Location     Type
 33487 ;;                  1    wreg      void 
 33488 ;; Registers used:
 33489 ;;		None
 33490 ;; Tracked objects:
 33491 ;;		On entry : 0/2
 33492 ;;		On exit  : 0/0
 33493 ;;		Unchanged: 0/0
 33494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33498 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33499 ;;Total ram usage:        0 bytes
 33500 ;; Hardware stack levels used: 1
 33501 ;; Hardware stack levels required when called: 4
 33502 ;; This function calls:
 33503 ;;		Nothing
 33504 ;; This function is called by:
 33505 ;;		_I2C1_DO_SEND_STOP
 33506 ;; This function uses a non-reentrant model
 33507 ;;
 33508                           
 33509                           	psect	text179
 33510  009822                     __ptext179:
 33511                           	callstack 0
 33512  009822                     _I2C1_MasterStop:
 33513                           	callstack 15
 33514                           
 33515                           ;mcc_generated_files/i2c1_master.c: 595:     SSP1CON2bits.PEN = 1;
 33516                           
 33517                           ; BSR set to: 2
 33518                           ;incstack = 0
 33519  009822  8497               	bsf	151,2,c	;volatile
 33520  009824  0012               	return		;funcret
 33521  009826                     __end_of_I2C1_MasterStop:
 33522                           	callstack 0
 33523                           
 33524 ;; *************** function _I2C1_MasterEnableRestart *****************
 33525 ;; Defined at:
 33526 ;;		line 573 in file "mcc_generated_files/i2c1_master.c"
 33527 ;; Parameters:    Size  Location     Type
 33528 ;;		None
 33529 ;; Auto vars:     Size  Location     Type
 33530 ;;		None
 33531 ;; Return value:  Size  Location     Type
 33532 ;;                  1    wreg      void 
 33533 ;; Registers used:
 33534 ;;		None
 33535 ;; Tracked objects:
 33536 ;;		On entry : 0/2
 33537 ;;		On exit  : 0/0
 33538 ;;		Unchanged: 0/0
 33539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33543 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33544 ;;Total ram usage:        0 bytes
 33545 ;; Hardware stack levels used: 1
 33546 ;; Hardware stack levels required when called: 4
 33547 ;; This function calls:
 33548 ;;		Nothing
 33549 ;; This function is called by:
 33550 ;;		_I2C1_DO_SEND_RESTART_READ
 33551 ;;		_I2C1_DO_SEND_RESTART_WRITE
 33552 ;;		_I2C1_DO_SEND_RESTART
 33553 ;; This function uses a non-reentrant model
 33554 ;;
 33555                           
 33556                           	psect	text180
 33557  009826                     __ptext180:
 33558                           	callstack 0
 33559  009826                     _I2C1_MasterEnableRestart:
 33560                           	callstack 15
 33561                           
 33562                           ;mcc_generated_files/i2c1_master.c: 575:     SSP1CON2bits.RSEN = 1;
 33563                           
 33564                           ;incstack = 0
 33565  009826  8297               	bsf	151,1,c	;volatile
 33566  009828  0012               	return		;funcret
 33567  00982A                     __end_of_I2C1_MasterEnableRestart:
 33568                           	callstack 0
 33569                           
 33570 ;; *************** function _I2C1_MasterStart *****************
 33571 ;; Defined at:
 33572 ;;		line 588 in file "mcc_generated_files/i2c1_master.c"
 33573 ;; Parameters:    Size  Location     Type
 33574 ;;		None
 33575 ;; Auto vars:     Size  Location     Type
 33576 ;;		None
 33577 ;; Return value:  Size  Location     Type
 33578 ;;                  1    wreg      void 
 33579 ;; Registers used:
 33580 ;;		None
 33581 ;; Tracked objects:
 33582 ;;		On entry : 3F/2
 33583 ;;		On exit  : 3F/2
 33584 ;;		Unchanged: 3F/0
 33585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33587 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33589 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33590 ;;Total ram usage:        0 bytes
 33591 ;; Hardware stack levels used: 1
 33592 ;; Hardware stack levels required when called: 4
 33593 ;; This function calls:
 33594 ;;		Nothing
 33595 ;; This function is called by:
 33596 ;;		_I2C1_MasterOperation
 33597 ;; This function uses a non-reentrant model
 33598 ;;
 33599                           
 33600                           	psect	text181
 33601  00982A                     __ptext181:
 33602                           	callstack 0
 33603  00982A                     _I2C1_MasterStart:
 33604                           	callstack 19
 33605                           
 33606                           ; BSR set to: 2
 33607                           ;mcc_generated_files/i2c1_master.c: 590:     SSP1CON2bits.SEN = 1;
 33608                           
 33609                           ;incstack = 0
 33610  00982A  8097               	bsf	151,0,c	;volatile
 33611                           
 33612                           ; BSR set to: 2
 33613  00982C  0012               	return		;funcret
 33614  00982E                     __end_of_I2C1_MasterStart:
 33615                           	callstack 0
 33616                           
 33617 ;; *************** function _I2C1_Close *****************
 33618 ;; Defined at:
 33619 ;;		line 209 in file "mcc_generated_files/i2c1_master.c"
 33620 ;; Parameters:    Size  Location     Type
 33621 ;;		None
 33622 ;; Auto vars:     Size  Location     Type
 33623 ;;  returnValue     1   15[COMRAM] enum E355
 33624 ;; Return value:  Size  Location     Type
 33625 ;;                  1    wreg      enum E355
 33626 ;; Registers used:
 33627 ;;		wreg, status,2, cstack
 33628 ;; Tracked objects:
 33629 ;;		On entry : 0/2
 33630 ;;		On exit  : 33/2
 33631 ;;		Unchanged: 0/0
 33632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33634 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33636 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33637 ;;Total ram usage:        1 bytes
 33638 ;; Hardware stack levels used: 1
 33639 ;; Hardware stack levels required when called: 5
 33640 ;; This function calls:
 33641 ;;		_I2C1_MasterClearIrq
 33642 ;;		_I2C1_MasterClose
 33643 ;;		_I2C1_MasterDisableIrq
 33644 ;; This function is called by:
 33645 ;;		_i2c_writeNBytes
 33646 ;;		_i2c_readDataBlock
 33647 ;;		_I2C1_Read1ByteRegister
 33648 ;; This function uses a non-reentrant model
 33649 ;;
 33650                           
 33651                           	psect	text182
 33652  00946A                     __ptext182:
 33653                           	callstack 0
 33654  00946A                     _I2C1_Close:
 33655                           	callstack 20
 33656                           
 33657                           ;mcc_generated_files/i2c1_master.c: 211:     i2c1_error_t returnValue = I2C1_BUSY;
 33658                           
 33659                           ; BSR set to: 2
 33660                           ;incstack = 0
 33661  00946A  0E01               	movlw	1
 33662  00946C  6E10               	movwf	I2C1_Close@returnValue^0,c
 33663                           
 33664                           ;mcc_generated_files/i2c1_master.c: 212:     if(!I2C1_Status.busy)
 33665  00946E  0102               	movlb	2	; () banked
 33666  009470  B35F               	btfsc	(_I2C1_Status+35)& (0+255),1,b
 33667  009472  D00A               	goto	l19881
 33668                           
 33669                           ; BSR set to: 2
 33670                           ;mcc_generated_files/i2c1_master.c: 213:     {;mcc_generated_files/i2c1_master.c: 214:  
      +                                 I2C1_Status.inUse = 0;
 33671  009474  955F               	bcf	(_I2C1_Status+35)& (0+255),2,b
 33672                           
 33673                           ;mcc_generated_files/i2c1_master.c: 215:         I2C1_Status.address = 0xff;
 33674  009476  6958               	setf	(_I2C1_Status+28)& (0+255),b
 33675                           
 33676                           ; BSR set to: 2
 33677                           ;mcc_generated_files/i2c1_master.c: 216:         I2C1_MasterClearIrq();
 33678  009478  ECF9  F04B         	call	_I2C1_MasterClearIrq	;wreg free
 33679                           
 33680                           ;mcc_generated_files/i2c1_master.c: 217:         I2C1_MasterDisableIrq();
 33681  00947C  EC17  F04C         	call	_I2C1_MasterDisableIrq	;wreg free
 33682                           
 33683                           ;mcc_generated_files/i2c1_master.c: 218:         I2C1_MasterClose();
 33684  009480  EC19  F04C         	call	_I2C1_MasterClose	;wreg free
 33685                           
 33686                           ; BSR set to: 14
 33687                           ;mcc_generated_files/i2c1_master.c: 219:         returnValue = I2C1_Status.error;
 33688  009484  C25E  F010         	movff	_I2C1_Status+34,I2C1_Close@returnValue
 33689  009488                     l19881:
 33690                           
 33691                           ;mcc_generated_files/i2c1_master.c: 221:     return returnValue;
 33692  009488  5010               	movf	I2C1_Close@returnValue^0,w,c
 33693  00948A  0012               	return		;funcret
 33694  00948C                     __end_of_I2C1_Close:
 33695                           	callstack 0
 33696                           
 33697 ;; *************** function _I2C1_MasterDisableIrq *****************
 33698 ;; Defined at:
 33699 ;;		line 635 in file "mcc_generated_files/i2c1_master.c"
 33700 ;; Parameters:    Size  Location     Type
 33701 ;;		None
 33702 ;; Auto vars:     Size  Location     Type
 33703 ;;		None
 33704 ;; Return value:  Size  Location     Type
 33705 ;;                  1    wreg      void 
 33706 ;; Registers used:
 33707 ;;		None
 33708 ;; Tracked objects:
 33709 ;;		On entry : 3F/E
 33710 ;;		On exit  : 3F/E
 33711 ;;		Unchanged: 0/0
 33712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33716 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33717 ;;Total ram usage:        0 bytes
 33718 ;; Hardware stack levels used: 1
 33719 ;; Hardware stack levels required when called: 4
 33720 ;; This function calls:
 33721 ;;		Nothing
 33722 ;; This function is called by:
 33723 ;;		_I2C1_Close
 33724 ;; This function uses a non-reentrant model
 33725 ;;
 33726                           
 33727                           	psect	text183
 33728  00982E                     __ptext183:
 33729                           	callstack 0
 33730  00982E                     _I2C1_MasterDisableIrq:
 33731                           	callstack 20
 33732                           
 33733                           ; BSR set to: 14
 33734                           ;mcc_generated_files/i2c1_master.c: 637:     PIE3bits.SSP1IE = 0;
 33735                           
 33736                           ;incstack = 0
 33737  00982E  91C5               	bcf	197,0,b	;volatile
 33738                           
 33739                           ; BSR set to: 14
 33740  009830  0012               	return		;funcret
 33741  009832                     __end_of_I2C1_MasterDisableIrq:
 33742                           	callstack 0
 33743                           
 33744 ;; *************** function _I2C1_MasterClose *****************
 33745 ;; Defined at:
 33746 ;;		line 557 in file "mcc_generated_files/i2c1_master.c"
 33747 ;; Parameters:    Size  Location     Type
 33748 ;;		None
 33749 ;; Auto vars:     Size  Location     Type
 33750 ;;		None
 33751 ;; Return value:  Size  Location     Type
 33752 ;;                  1    wreg      void 
 33753 ;; Registers used:
 33754 ;;		None
 33755 ;; Tracked objects:
 33756 ;;		On entry : 3F/E
 33757 ;;		On exit  : 3F/E
 33758 ;;		Unchanged: 3F/0
 33759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33763 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33764 ;;Total ram usage:        0 bytes
 33765 ;; Hardware stack levels used: 1
 33766 ;; Hardware stack levels required when called: 4
 33767 ;; This function calls:
 33768 ;;		Nothing
 33769 ;; This function is called by:
 33770 ;;		_I2C1_Close
 33771 ;; This function uses a non-reentrant model
 33772 ;;
 33773                           
 33774                           	psect	text184
 33775  009832                     __ptext184:
 33776                           	callstack 0
 33777  009832                     _I2C1_MasterClose:
 33778                           	callstack 20
 33779                           
 33780                           ; BSR set to: 14
 33781                           ;mcc_generated_files/i2c1_master.c: 560:     SSP1CON1bits.SSPEN = 0;
 33782                           
 33783                           ; BSR set to: 14
 33784                           ;incstack = 0
 33785  009832  9A96               	bcf	150,5,c	;volatile
 33786                           
 33787                           ; BSR set to: 14
 33788  009834  0012               	return		;funcret
 33789  009836                     __end_of_I2C1_MasterClose:
 33790                           	callstack 0
 33791                           
 33792 ;; *************** function _I2C1_MasterClearIrq *****************
 33793 ;; Defined at:
 33794 ;;		line 640 in file "mcc_generated_files/i2c1_master.c"
 33795 ;; Parameters:    Size  Location     Type
 33796 ;;		None
 33797 ;; Auto vars:     Size  Location     Type
 33798 ;;		None
 33799 ;; Return value:  Size  Location     Type
 33800 ;;                  1    wreg      void 
 33801 ;; Registers used:
 33802 ;;		None
 33803 ;; Tracked objects:
 33804 ;;		On entry : 33/2
 33805 ;;		On exit  : 3F/E
 33806 ;;		Unchanged: 0/0
 33807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33811 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33812 ;;Total ram usage:        0 bytes
 33813 ;; Hardware stack levels used: 1
 33814 ;; Hardware stack levels required when called: 4
 33815 ;; This function calls:
 33816 ;;		Nothing
 33817 ;; This function is called by:
 33818 ;;		_I2C1_Open
 33819 ;;		_I2C1_Close
 33820 ;;		_I2C1_MasterFsm
 33821 ;; This function uses a non-reentrant model
 33822 ;;
 33823                           
 33824                           	psect	text185
 33825  0097F2                     __ptext185:
 33826                           	callstack 0
 33827  0097F2                     _I2C1_MasterClearIrq:
 33828                           	callstack 20
 33829                           
 33830                           ;mcc_generated_files/i2c1_master.c: 642:     PIR3bits.SSP1IF = 0;
 33831                           
 33832                           ; BSR set to: 14
 33833                           ;incstack = 0
 33834  0097F2  010E               	movlb	14	; () banked
 33835  0097F4  91CD               	bcf	205,0,b	;volatile
 33836                           
 33837                           ; BSR set to: 14
 33838  0097F6  0012               	return		;funcret
 33839  0097F8                     __end_of_I2C1_MasterClearIrq:
 33840                           	callstack 0
 33841                           
 33842 ;; *************** function _INTERRUPT_InterruptManager *****************
 33843 ;; Defined at:
 33844 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
 33845 ;; Parameters:    Size  Location     Type
 33846 ;;		None
 33847 ;; Auto vars:     Size  Location     Type
 33848 ;;		None
 33849 ;; Return value:  Size  Location     Type
 33850 ;;                  1    wreg      void 
 33851 ;; Registers used:
 33852 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 33853 ;; Tracked objects:
 33854 ;;		On entry : 0/0
 33855 ;;		On exit  : 0/0
 33856 ;;		Unchanged: 0/0
 33857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33860 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33861 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33862 ;;Total ram usage:        6 bytes
 33863 ;; Hardware stack levels used: 1
 33864 ;; Hardware stack levels required when called: 3
 33865 ;; This function calls:
 33866 ;;		Absolute function
 33867 ;;		_EUSART1_Receive_ISR
 33868 ;;		_EUSART1_Transmit_ISR
 33869 ;;		_TMR0_ISR
 33870 ;;		_TMR1_ISR
 33871 ;;		_TMR2_ISR
 33872 ;; This function is called by:
 33873 ;;		Interrupt level 2
 33874 ;; This function uses a non-reentrant model
 33875 ;;
 33876                           
 33877                           	psect	intcode
 33878  000008                     __pintcode:
 33879                           	callstack 0
 33880  000008                     _INTERRUPT_InterruptManager:
 33881                           	callstack 14
 33882                           
 33883                           ; BSR set to: 14
 33884                           ;incstack = 0
 33885  000008  8250               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 33886  00000A  CFFA F00A          	movff	pclath,??_INTERRUPT_InterruptManager
 33887  00000E  CFFB F00B          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 33888  000012  CFD9 F00C          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
 33889  000016  CFDA F00D          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
 33890  00001A  CFF3 F00E          	movff	prodl,??_INTERRUPT_InterruptManager+4
 33891  00001E  CFF4 F00F          	movff	prodh,??_INTERRUPT_InterruptManager+5
 33892                           
 33893                           ;mcc_generated_files/interrupt_manager.c: 61:     if(PIE0bits.TMR0IE == 1 && PIR0bits.TM
      +                          R0IF == 1)
 33894  000022  010E               	movlb	14	; () banked
 33895  000024  BBC2               	btfsc	194,5,b	;volatile
 33896                           
 33897                           ; BSR set to: 14
 33898  000026  ABCA               	btfss	202,5,b	;volatile
 33899  000028  D003               	goto	i2l867
 33900                           
 33901                           ; BSR set to: 14
 33902                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         TMR0_ISR();
 33903  00002A  ECDB  F049         	call	_TMR0_ISR	;wreg free
 33904                           
 33905                           ;mcc_generated_files/interrupt_manager.c: 64:     }
 33906  00002E  D028               	goto	i2l873
 33907  000030                     i2l867:
 33908                           
 33909                           ; BSR set to: 14
 33910  000030  ACF2               	btfss	242,6,c	;volatile
 33911  000032  D026               	goto	i2l873
 33912                           
 33913                           ; BSR set to: 14
 33914                           ;mcc_generated_files/interrupt_manager.c: 66:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 67:         if(PIE3bits.TX1IE == 1 && PIR3bits.TX1IF == 1)
 33915  000034  B9C5               	btfsc	197,4,b	;volatile
 33916                           
 33917                           ; BSR set to: 14
 33918  000036  A9CD               	btfss	205,4,b	;volatile
 33919  000038  D009               	goto	i2l870
 33920                           
 33921                           ; BSR set to: 14
 33922                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             EUSART1_TxDefaultInterruptHandler();
 33923  00003A  D801               	call	i2u2234_48
 33924  00003C  D021               	goto	i2l873
 33925  00003E                     i2u2234_48:
 33926  00003E  0005               	push	
 33927  000040  6EFA               	movwf	pclath,c
 33928  000042  0102               	movlb	2	; () banked
 33929  000044  51EF               	movf	_EUSART1_TxDefaultInterruptHandler& (0+255),w,b
 33930  000046  6EFD               	movwf	tosl,c
 33931  000048  51F0               	movf	(_EUSART1_TxDefaultInterruptHandler+1)& (0+255),w,b
 33932  00004A  D00B               	goto	L112
 33933  00004C                     i2l870:
 33934                           
 33935                           ; BSR set to: 14
 33936  00004C  BBC5               	btfsc	197,5,b	;volatile
 33937                           
 33938                           ; BSR set to: 14
 33939  00004E  ABCD               	btfss	205,5,b	;volatile
 33940  000050  D00C               	goto	i2l872
 33941                           
 33942                           ; BSR set to: 14
 33943                           ;mcc_generated_files/interrupt_manager.c: 72:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 73:             EUSART1_RxDefaultInterruptHandler();
 33944  000052  D801               	call	i2u2237_48
 33945  000054  D015               	goto	i2l873
 33946  000056                     i2u2237_48:
 33947  000056  0005               	push	
 33948  000058  6EFA               	movwf	pclath,c
 33949  00005A  0102               	movlb	2	; () banked
 33950  00005C  51ED               	movf	_EUSART1_RxDefaultInterruptHandler& (0+255),w,b
 33951  00005E  6EFD               	movwf	tosl,c
 33952  000060  51EE               	movf	(_EUSART1_RxDefaultInterruptHandler+1)& (0+255),w,b
 33953  000062                     L112:
 33954  000062  6EFE               	movwf	tosh,c
 33955  000064  6AFF               	clrf	tosu,c
 33956  000066  50FA               	movf	pclath,w,c
 33957  000068  0012               	return		;indir
 33958  00006A                     i2l872:
 33959                           
 33960                           ; BSR set to: 14
 33961  00006A  B1C6               	btfsc	198,0,b	;volatile
 33962                           
 33963                           ; BSR set to: 14
 33964  00006C  A1CE               	btfss	206,0,b	;volatile
 33965  00006E  D003               	goto	i2l874
 33966                           
 33967                           ; BSR set to: 14
 33968                           ;mcc_generated_files/interrupt_manager.c: 76:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 77:             TMR1_ISR();
 33969  000070  EC54  F047         	call	_TMR1_ISR	;wreg free
 33970                           
 33971                           ;mcc_generated_files/interrupt_manager.c: 78:         }
 33972  000074  D005               	goto	i2l873
 33973  000076                     i2l874:
 33974                           
 33975                           ; BSR set to: 14
 33976  000076  B3C6               	btfsc	198,1,b	;volatile
 33977                           
 33978                           ; BSR set to: 14
 33979  000078  A3CE               	btfss	206,1,b	;volatile
 33980  00007A  D002               	goto	i2l873
 33981                           
 33982                           ; BSR set to: 14
 33983                           ;mcc_generated_files/interrupt_manager.c: 80:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 81:             TMR2_ISR();
 33984  00007C  EC9E  F032         	call	_TMR2_ISR	;wreg free
 33985  000080                     i2l873:
 33986                           
 33987                           ; BSR set to: 14
 33988  000080  C00F  FFF4         	movff	??_INTERRUPT_InterruptManager+5,prodh
 33989  000084  C00E  FFF3         	movff	??_INTERRUPT_InterruptManager+4,prodl
 33990  000088  C00D  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
 33991  00008C  C00C  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
 33992  000090  C00B  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 33993  000094  C00A  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 33994  000098  9250               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 33995  00009A  0011               	retfie		f
 33996  00009C                     __end_of_INTERRUPT_InterruptManager:
 33997                           	callstack 0
 33998                           
 33999 ;; *************** function _TMR2_ISR *****************
 34000 ;; Defined at:
 34001 ;;		line 180 in file "mcc_generated_files/tmr2.c"
 34002 ;; Parameters:    Size  Location     Type
 34003 ;;		None
 34004 ;; Auto vars:     Size  Location     Type
 34005 ;;		None
 34006 ;; Return value:  Size  Location     Type
 34007 ;;                  1    wreg      void 
 34008 ;; Registers used:
 34009 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 34010 ;; Tracked objects:
 34011 ;;		On entry : 3F/E
 34012 ;;		On exit  : 0/0
 34013 ;;		Unchanged: 0/0
 34014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34015 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34016 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34018 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34019 ;;Total ram usage:        0 bytes
 34020 ;; Hardware stack levels used: 1
 34021 ;; Hardware stack levels required when called: 2
 34022 ;; This function calls:
 34023 ;;		Absolute function
 34024 ;;		_ReadADC
 34025 ;;		_TMR2_DefaultInterruptHandler
 34026 ;;		_controlTimeslots
 34027 ;;		_refreshSegment
 34028 ;; This function is called by:
 34029 ;;		_INTERRUPT_InterruptManager
 34030 ;; This function uses a non-reentrant model
 34031 ;;
 34032                           
 34033                           	psect	text187
 34034  00653C                     __ptext187:
 34035                           	callstack 0
 34036  00653C                     _TMR2_ISR:
 34037                           	callstack 14
 34038                           
 34039                           ; BSR set to: 14
 34040                           ;mcc_generated_files/tmr2.c: 184:     PIR4bits.TMR2IF = 0;
 34041                           
 34042                           ;incstack = 0
 34043  00653C  93CE               	bcf	206,1,b	;volatile
 34044                           
 34045                           ; BSR set to: 14
 34046                           ;mcc_generated_files/tmr2.c: 188:                 ReadADC();
 34047  00653E  ECE0  F044         	call	_ReadADC	;wreg free
 34048                           
 34049                           ;mcc_generated_files/tmr2.c: 191:             refreshSegment();
 34050  006542  ECA5  F03E         	call	_refreshSegment	;wreg free
 34051                           
 34052                           ;mcc_generated_files/tmr2.c: 193:             if(ts_system.ts_TimeSlotMain>0)
 34053  006546  0101               	movlb	1	; () banked
 34054  006548  519E               	movf	(_ts_system+3)& (0+255),w,b	;volatile
 34055  00654A  A4D8               	btfss	status,2,c
 34056                           
 34057                           ; BSR set to: 1
 34058                           ;mcc_generated_files/tmr2.c: 194:                 {;mcc_generated_files/tmr2.c: 195:    
      +                                       ts_system.ts_TimeSlotMain--;
 34059  00654C  079E               	decf	(_ts_system+3)& (0+255),f,b	;volatile
 34060                           
 34061                           ; BSR set to: 1
 34062                           ;mcc_generated_files/tmr2.c: 198:             if (ts_system.ts_TimeSlot50ms > 0)
 34063  00654E  519C               	movf	(_ts_system+1)& (0+255),w,b	;volatile
 34064  006550  B4D8               	btfsc	status,2,c
 34065  006552  D002               	goto	i2l16609
 34066                           
 34067                           ; BSR set to: 1
 34068                           ;mcc_generated_files/tmr2.c: 199:                 {;mcc_generated_files/tmr2.c: 200:    
      +                                       ts_system.ts_TimeSlot50ms--;
 34069  006554  079C               	decf	(_ts_system+1)& (0+255),f,b	;volatile
 34070                           
 34071                           ;mcc_generated_files/tmr2.c: 201:                 }
 34072  006556  D089               	goto	i2l16681
 34073  006558                     i2l16609:
 34074                           
 34075                           ; BSR set to: 1
 34076                           ;mcc_generated_files/tmr2.c: 203:                 {;mcc_generated_files/tmr2.c: 204:    
      +                                       ts_system.ts_TimeSlot50ms = 50;
 34077  006558  0E32               	movlw	50
 34078  00655A  6F9C               	movwf	(_ts_system+1)& (0+255),b	;volatile
 34079                           
 34080                           ; BSR set to: 1
 34081                           ;mcc_generated_files/tmr2.c: 208:                     controlTimeslots();
 34082  00655C  ECC5  F02E         	call	_controlTimeslots	;wreg free
 34083                           
 34084                           ; BSR set to: 1
 34085                           ;mcc_generated_files/tmr2.c: 210:                       if (Counterchoose == 0)
 34086  006560  0100               	movlb	0	; () banked
 34087  006562  5192               	movf	_Counterchoose& (0+255),w,b
 34088  006564  A4D8               	btfss	status,2,c
 34089  006566  D002               	goto	i2l16617
 34090                           
 34091                           ; BSR set to: 0
 34092                           ;mcc_generated_files/tmr2.c: 211:                                {;mcc_generated_files/t
      +                          mr2.c: 212:                                    Counterchoose = 1;
 34093  006568  0E01               	movlw	1
 34094  00656A  D001               	goto	L113
 34095  00656C                     i2l16617:
 34096                           
 34097                           ; BSR set to: 0
 34098                           ;mcc_generated_files/tmr2.c: 215:                                {;mcc_generated_files/t
      +                          mr2.c: 216:                                    Counterchoose = 0;
 34099  00656C  0E00               	movlw	0
 34100  00656E                     L113:
 34101  00656E  6F92               	movwf	_Counterchoose& (0+255),b
 34102                           
 34103                           ; BSR set to: 0
 34104                           ;mcc_generated_files/tmr2.c: 218:                            if (var_sys.LearningIsEnabl
      +                          ed==NO)
 34105                           
 34106                           ;mcc_generated_files/tmr2.c: 217:                                }
 34107  006570  0101               	movlb	1	; () banked
 34108  006572  5126               	movf	(_var_sys+38)& (0+255),w,b	;volatile
 34109  006574  A4D8               	btfss	status,2,c
 34110  006576  D034               	goto	i2l16643
 34111                           
 34112                           ; BSR set to: 1
 34113                           ;mcc_generated_files/tmr2.c: 219:                            {;mcc_generated_files/tmr2.
      +                          c: 222:                                if (var_sys.TimeMaxMotorIsON > 0 && var_sys.Activ
      +                          atecounter != stoped)
 34114  006578  5118               	movf	(_var_sys+24)& (0+255),w,b	;volatile
 34115  00657A  1119               	iorwf	(_var_sys+25)& (0+255),w,b	;volatile
 34116  00657C  111A               	iorwf	(_var_sys+26)& (0+255),w,b	;volatile
 34117  00657E  111B               	iorwf	(_var_sys+27)& (0+255),w,b	;volatile
 34118  006580  B4D8               	btfsc	status,2,c
 34119  006582  D008               	goto	i2l1266
 34120                           
 34121                           ; BSR set to: 1
 34122  006584  5116               	movf	(_var_sys+22)& (0+255),w,b	;volatile
 34123  006586  B4D8               	btfsc	status,2,c
 34124  006588  D005               	goto	i2l1266
 34125                           
 34126                           ; BSR set to: 1
 34127                           ;mcc_generated_files/tmr2.c: 223:                                {;mcc_generated_files/t
      +                          mr2.c: 225:                                     var_sys.TimeMaxMotorIsON--;
 34128  00658A  0718               	decf	(_var_sys+24)& (0+255),f,b	;volatile
 34129  00658C  0E00               	movlw	0
 34130  00658E  5B19               	subwfb	(_var_sys+25)& (0+255),f,b	;volatile
 34131  006590  5B1A               	subwfb	(_var_sys+26)& (0+255),f,b	;volatile
 34132  006592  5B1B               	subwfb	(_var_sys+27)& (0+255),f,b	;volatile
 34133  006594                     i2l1266:
 34134                           
 34135                           ; BSR set to: 1
 34136                           ;mcc_generated_files/tmr2.c: 230:                                if (var_sys.Activatecou
      +                          nter == open)
 34137  006594  0516               	decf	(_var_sys+22)& (0+255),w,b	;volatile
 34138  006596  A4D8               	btfss	status,2,c
 34139  006598  D00E               	goto	i2l16633
 34140                           
 34141                           ; BSR set to: 1
 34142                           ;mcc_generated_files/tmr2.c: 231:                                {;mcc_generated_files/t
      +                          mr2.c: 232:                                    {;mcc_generated_files/tmr2.c: 234:       
      +                                                            if (powerControl_st.decelarationActive==YES)
 34143  00659A  057B               	decf	_powerControl_st& (0+255),w,b
 34144  00659C  A4D8               	btfss	status,2,c
 34145  00659E  D004               	goto	i2u1878_40
 34146                           
 34147                           ; BSR set to: 1
 34148                           ;mcc_generated_files/tmr2.c: 235:                                         {;mcc_generate
      +                          d_files/tmr2.c: 236:                                             if(Counterchoose ==1){
 34149  0065A0  0100               	movlb	0	; () banked
 34150  0065A2  0592               	decf	_Counterchoose& (0+255),w,b
 34151  0065A4  A4D8               	btfss	status,2,c
 34152  0065A6  D061               	goto	i2l16681
 34153  0065A8                     i2u1878_40:
 34154                           
 34155                           ;mcc_generated_files/tmr2.c: 237:                                               var_sys.
      +                          PositionActual++;
 34156  0065A8  0E01               	movlw	1
 34157  0065AA  0101               	movlb	1	; () banked
 34158  0065AC  271E               	addwf	(_var_sys+30)& (0+255),f,b	;volatile
 34159  0065AE  0E00               	movlw	0
 34160  0065B0  231F               	addwfc	(_var_sys+31)& (0+255),f,b	;volatile
 34161  0065B2  2320               	addwfc	(_var_sys+32)& (0+255),f,b	;volatile
 34162  0065B4  D013               	goto	L114
 34163  0065B6                     i2l16633:
 34164                           
 34165                           ; BSR set to: 1
 34166  0065B6  0E02               	movlw	2
 34167  0065B8  1916               	xorwf	(_var_sys+22)& (0+255),w,b	;volatile
 34168  0065BA  A4D8               	btfss	status,2,c
 34169  0065BC  D056               	goto	i2l16681
 34170                           
 34171                           ; BSR set to: 1
 34172                           ;mcc_generated_files/tmr2.c: 250:                                {;mcc_generated_files/t
      +                          mr2.c: 251:                                        if (powerControl_st.decelarationActiv
      +                          e==YES)
 34173  0065BE  057B               	decf	_powerControl_st& (0+255),w,b
 34174  0065C0  A4D8               	btfss	status,2,c
 34175  0065C2  D004               	goto	i2u1881_40
 34176                           
 34177                           ; BSR set to: 1
 34178                           ;mcc_generated_files/tmr2.c: 252:                                         {;mcc_generate
      +                          d_files/tmr2.c: 253:                                             if(Counterchoose ==1){
 34179  0065C4  0100               	movlb	0	; () banked
 34180  0065C6  0592               	decf	_Counterchoose& (0+255),w,b
 34181  0065C8  A4D8               	btfss	status,2,c
 34182  0065CA  D04F               	goto	i2l16681
 34183  0065CC                     i2u1881_40:
 34184                           
 34185                           ;mcc_generated_files/tmr2.c: 254:                                               var_sys.
      +                          PositionActual--;
 34186  0065CC  0EFF               	movlw	255
 34187  0065CE  0101               	movlb	1	; () banked
 34188  0065D0  271E               	addwf	(_var_sys+30)& (0+255),f,b	;volatile
 34189  0065D2  0EFF               	movlw	255
 34190  0065D4  231F               	addwfc	(_var_sys+31)& (0+255),f,b	;volatile
 34191  0065D6  0EFF               	movlw	255
 34192  0065D8  2320               	addwfc	(_var_sys+32)& (0+255),f,b	;volatile
 34193  0065DA  0EFF               	movlw	255
 34194  0065DC                     L114:
 34195  0065DC  2321               	addwfc	(_var_sys+33)& (0+255),f,b	;volatile
 34196                           
 34197                           ;mcc_generated_files/tmr2.c: 263:                            }
 34198  0065DE  D045               	goto	i2l16681
 34199  0065E0                     i2l16643:
 34200                           
 34201                           ; BSR set to: 1
 34202                           ;mcc_generated_files/tmr2.c: 266:                            {;mcc_generated_files/tmr2.
      +                          c: 267:                                if (var_sys.Counter_Learning ==1)
 34203  0065E0  0517               	decf	(_var_sys+23)& (0+255),w,b	;volatile
 34204  0065E2  A4D8               	btfss	status,2,c
 34205  0065E4  D01C               	goto	i2l1277
 34206                           
 34207                           ; BSR set to: 1
 34208                           ;mcc_generated_files/tmr2.c: 268:                                {;mcc_generated_files/t
      +                          mr2.c: 270:                                     if (var_sys.Activatecounter == open)
 34209  0065E6  0516               	decf	(_var_sys+22)& (0+255),w,b	;volatile
 34210  0065E8  A4D8               	btfss	status,2,c
 34211  0065EA  D00B               	goto	i2l16653
 34212                           
 34213                           ; BSR set to: 1
 34214                           ;mcc_generated_files/tmr2.c: 271:                                     {;mcc_generated_fi
      +                          les/tmr2.c: 273:                                         if (var_sys.LearningDecelaratio
      +                          n ==1)
 34215  0065EC  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 34216  0065EE  B4D8               	btfsc	status,2,c
 34217  0065F0  D016               	goto	i2l1277
 34218                           
 34219                           ; BSR set to: 1
 34220                           ;mcc_generated_files/tmr2.c: 282:                                            {;mcc_gener
      +                          ated_files/tmr2.c: 283:                                              learn_st.timeOpen++
      +                          ;
 34221  0065F2  0E01               	movlw	1
 34222  0065F4  0100               	movlb	0	; () banked
 34223  0065F6  2764               	addwf	(_learn_st+4)& (0+255),f,b	;volatile
 34224  0065F8  0E00               	movlw	0
 34225  0065FA  2365               	addwfc	(_learn_st+5)& (0+255),f,b	;volatile
 34226  0065FC  2366               	addwfc	(_learn_st+6)& (0+255),f,b	;volatile
 34227  0065FE  2367               	addwfc	(_learn_st+7)& (0+255),f,b	;volatile
 34228  006600  D00E               	goto	i2l1277
 34229  006602                     i2l16653:
 34230                           
 34231                           ; BSR set to: 1
 34232  006602  0E02               	movlw	2
 34233  006604  1916               	xorwf	(_var_sys+22)& (0+255),w,b	;volatile
 34234  006606  A4D8               	btfss	status,2,c
 34235  006608  D00A               	goto	i2l1277
 34236                           
 34237                           ; BSR set to: 1
 34238                           ;mcc_generated_files/tmr2.c: 287:                                     {;mcc_generated_fi
      +                          les/tmr2.c: 289:                                         if (var_sys.LearningDecelaratio
      +                          n ==1)
 34239  00660A  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 34240  00660C  B4D8               	btfsc	status,2,c
 34241  00660E  D007               	goto	i2l1277
 34242                           
 34243                           ; BSR set to: 1
 34244                           ;mcc_generated_files/tmr2.c: 297:                                             {;mcc_gene
      +                          rated_files/tmr2.c: 298:                                                learn_st.timeClo
      +                          se++;
 34245  006610  0E01               	movlw	1
 34246  006612  0100               	movlb	0	; () banked
 34247  006614  2760               	addwf	_learn_st& (0+255),f,b	;volatile
 34248  006616  0E00               	movlw	0
 34249  006618  2361               	addwfc	(_learn_st+1)& (0+255),f,b	;volatile
 34250  00661A  2362               	addwfc	(_learn_st+2)& (0+255),f,b	;volatile
 34251  00661C  2363               	addwfc	(_learn_st+3)& (0+255),f,b	;volatile
 34252  00661E                     i2l1277:
 34253                           
 34254                           ;mcc_generated_files/tmr2.c: 304:                                 if (var_sys.LearningDe
      +                          celaration ==1 && var_sys.programinAutomatic == 1)
 34255  00661E  0101               	movlb	1	; () banked
 34256  006620  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 34257  006622  A4D8               	btfss	status,2,c
 34258  006624  D022               	goto	i2l16681
 34259                           
 34260                           ; BSR set to: 1
 34261  006626  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 34262  006628  A4D8               	btfss	status,2,c
 34263  00662A  D01F               	goto	i2l16681
 34264                           
 34265                           ; BSR set to: 1
 34266                           ;mcc_generated_files/tmr2.c: 305:                                 {;mcc_generated_files/
      +                          tmr2.c: 308:                                        if ( ts_system.ts_TimeSlot500ms > 0)
 34267  00662C  519B               	movf	_ts_system& (0+255),w,b	;volatile
 34268  00662E  B4D8               	btfsc	status,2,c
 34269  006630  D002               	goto	i2l16667
 34270                           
 34271                           ; BSR set to: 1
 34272                           ;mcc_generated_files/tmr2.c: 309:                                            {;mcc_gener
      +                          ated_files/tmr2.c: 310:                                                ts_system.ts_Time
      +                          Slot500ms--;
 34273  006632  079B               	decf	_ts_system& (0+255),f,b	;volatile
 34274                           
 34275                           ;mcc_generated_files/tmr2.c: 311:                                            }
 34276  006634  D01A               	goto	i2l16681
 34277  006636                     i2l16667:
 34278                           
 34279                           ; BSR set to: 1
 34280                           ;mcc_generated_files/tmr2.c: 314:                                          {;mcc_generat
      +                          ed_files/tmr2.c: 315:                                             ts_system.ts_TimeSlot5
      +                          00ms = 10;
 34281  006636  0E0A               	movlw	10
 34282  006638  6F9B               	movwf	_ts_system& (0+255),b	;volatile
 34283                           
 34284                           ; BSR set to: 1
 34285                           ;mcc_generated_files/tmr2.c: 317:                                             if ( var_s
      +                          ys.Activatecounter ==open )
 34286  00663A  0516               	decf	(_var_sys+22)& (0+255),w,b	;volatile
 34287  00663C  A4D8               	btfss	status,2,c
 34288  00663E  D009               	goto	i2l16675
 34289                           
 34290                           ; BSR set to: 1
 34291                           ;mcc_generated_files/tmr2.c: 318:                                                {;mcc_g
      +                          enerated_files/tmr2.c: 319:                                                  learn_st.ti
      +                          meDecelerationOpen++;
 34292  006640  0100               	movlb	0	; () banked
 34293  006642  2B69               	incf	(_learn_st+9)& (0+255),f,b	;volatile
 34294                           
 34295                           ; BSR set to: 0
 34296                           ;mcc_generated_files/tmr2.c: 320:                                                  learn
      +                          _st.timeOpen++;
 34297  006644  0E01               	movlw	1
 34298  006646  2764               	addwf	(_learn_st+4)& (0+255),f,b	;volatile
 34299  006648  0E00               	movlw	0
 34300  00664A  2365               	addwfc	(_learn_st+5)& (0+255),f,b	;volatile
 34301  00664C  2366               	addwfc	(_learn_st+6)& (0+255),f,b	;volatile
 34302  00664E  2367               	addwfc	(_learn_st+7)& (0+255),f,b	;volatile
 34303                           
 34304                           ;mcc_generated_files/tmr2.c: 322:                                                }
 34305  006650  D00C               	goto	i2l16681
 34306  006652                     i2l16675:
 34307                           
 34308                           ; BSR set to: 1
 34309  006652  0E02               	movlw	2
 34310  006654  1916               	xorwf	(_var_sys+22)& (0+255),w,b	;volatile
 34311  006656  A4D8               	btfss	status,2,c
 34312  006658  D008               	goto	i2l16681
 34313                           
 34314                           ; BSR set to: 1
 34315                           ;mcc_generated_files/tmr2.c: 325:                                                {;mcc_g
      +                          enerated_files/tmr2.c: 326:                                                  learn_st.ti
      +                          meDecelerationClose++;
 34316  00665A  0100               	movlb	0	; () banked
 34317  00665C  2B68               	incf	(_learn_st+8)& (0+255),f,b	;volatile
 34318                           
 34319                           ; BSR set to: 0
 34320                           ;mcc_generated_files/tmr2.c: 327:                                                  learn
      +                          _st.timeClose++;
 34321  00665E  0E01               	movlw	1
 34322  006660  2760               	addwf	_learn_st& (0+255),f,b	;volatile
 34323  006662  0E00               	movlw	0
 34324  006664  2361               	addwfc	(_learn_st+1)& (0+255),f,b	;volatile
 34325  006666  2362               	addwfc	(_learn_st+2)& (0+255),f,b	;volatile
 34326  006668  2363               	addwfc	(_learn_st+3)& (0+255),f,b	;volatile
 34327  00666A                     i2l16681:
 34328                           
 34329                           ;mcc_generated_files/tmr2.c: 335:     if(TMR2_InterruptHandler)
 34330  00666A  0102               	movlb	2	; () banked
 34331  00666C  51DF               	movf	_TMR2_InterruptHandler& (0+255),w,b
 34332  00666E  11E0               	iorwf	(_TMR2_InterruptHandler+1)& (0+255),w,b
 34333  006670  B4D8               	btfsc	status,2,c
 34334  006672  0012               	return	
 34335                           
 34336                           ; BSR set to: 2
 34337                           ;mcc_generated_files/tmr2.c: 336:     {;mcc_generated_files/tmr2.c: 337:         TMR2_In
      +                          terruptHandler();
 34338  006674  D801               	call	i2u1893_48
 34339  006676  0012               	return	
 34340  006678                     i2u1893_48:
 34341  006678  0005               	push	
 34342  00667A  6EFA               	movwf	pclath,c
 34343  00667C  51DF               	movf	_TMR2_InterruptHandler& (0+255),w,b
 34344  00667E  6EFD               	movwf	tosl,c
 34345  006680  51E0               	movf	(_TMR2_InterruptHandler+1)& (0+255),w,b
 34346  006682  6EFE               	movwf	tosh,c
 34347  006684  6AFF               	clrf	tosu,c
 34348  006686  50FA               	movf	pclath,w,c
 34349  006688  0012               	return		;indir
 34350  00668A                     __end_of_TMR2_ISR:
 34351                           	callstack 0
 34352                           
 34353 ;; *************** function _refreshSegment *****************
 34354 ;; Defined at:
 34355 ;;		line 50 in file "outputs_MC50.c"
 34356 ;; Parameters:    Size  Location     Type
 34357 ;;		None
 34358 ;; Auto vars:     Size  Location     Type
 34359 ;;		None
 34360 ;; Return value:  Size  Location     Type
 34361 ;;                  1    wreg      void 
 34362 ;; Registers used:
 34363 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 34364 ;; Tracked objects:
 34365 ;;		On entry : 31/E
 34366 ;;		On exit  : 3E/0
 34367 ;;		Unchanged: 0/0
 34368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34370 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34372 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34373 ;;Total ram usage:        0 bytes
 34374 ;; Hardware stack levels used: 1
 34375 ;; Hardware stack levels required when called: 1
 34376 ;; This function calls:
 34377 ;;		_Segments_Set
 34378 ;; This function is called by:
 34379 ;;		_TMR2_ISR
 34380 ;; This function uses a non-reentrant model
 34381 ;;
 34382                           
 34383                           	psect	text188
 34384  007D4A                     __ptext188:
 34385                           	callstack 0
 34386  007D4A                     _refreshSegment:
 34387                           	callstack 14
 34388                           
 34389                           ;outputs_MC50.c: 54:     if (dispStruct.intermitentFreq==0||dispStruct.upFase==1)
 34390                           
 34391                           ;incstack = 0
 34392  007D4A  0100               	movlb	0	; () banked
 34393  007D4C  5175               	movf	(_dispStruct+3)& (0+255),w,b	;volatile
 34394  007D4E  1176               	iorwf	(_dispStruct+4)& (0+255),w,b	;volatile
 34395  007D50  B4D8               	btfsc	status,2,c
 34396  007D52  D003               	goto	i2u1493_40
 34397                           
 34398                           ; BSR set to: 0
 34399  007D54  0577               	decf	(_dispStruct+5)& (0+255),w,b	;volatile
 34400  007D56  A4D8               	btfss	status,2,c
 34401  007D58  D01F               	goto	i2l2133
 34402  007D5A                     i2u1493_40:
 34403                           
 34404                           ; BSR set to: 0
 34405                           ;outputs_MC50.c: 55:     {;outputs_MC50.c: 56:         if (dispStruct.lastDisplay==disp2
      +                          _e)
 34406  007D5A  0574               	decf	(_dispStruct+2)& (0+255),w,b	;volatile
 34407  007D5C  A4D8               	btfss	status,2,c
 34408  007D5E  D00D               	goto	i2l2128
 34409                           
 34410                           ; BSR set to: 0
 34411                           
 34412                           ;outputs_MC50.c: 57:         {;outputs_MC50.c: 58:             do { LATCbits.LATC0 = 0; 
      +                          } while(0);
 34413  007D60  9085               	bcf	133,0,c	;volatile
 34414                           
 34415                           ; BSR set to: 0
 34416                           ;outputs_MC50.c: 59:             Segments_Set(DispTable[dispStruct.display_grp.value_dis
      +                          play1]);
 34417  007D62  0ED2               	movlw	low _DispTable
 34418  007D64  2572               	addwf	_dispStruct& (0+255),w,b	;volatile
 34419  007D66  6ED9               	movwf	fsr2l,c
 34420  007D68  6ADA               	clrf	fsr2h,c
 34421  007D6A  0E03               	movlw	high _DispTable
 34422  007D6C  22DA               	addwfc	fsr2h,f,c
 34423  007D6E  50DF               	movf	indf2,w,c
 34424  007D70  EC80  F04B         	call	_Segments_Set
 34425  007D74  8285               	bsf	133,1,c	;volatile
 34426                           
 34427                           ;outputs_MC50.c: 61:             dispStruct.lastDisplay=disp1_e;
 34428  007D76  0E00               	movlw	0
 34429  007D78  D00C               	goto	L115
 34430  007D7A                     i2l2128:
 34431                           
 34432                           ; BSR set to: 0
 34433  007D7A  9285               	bcf	133,1,c	;volatile
 34434                           
 34435                           ; BSR set to: 0
 34436                           ;outputs_MC50.c: 66:             Segments_Set(DispTable[dispStruct.display_grp.value_dis
      +                          play2]);
 34437  007D7C  0ED2               	movlw	low _DispTable
 34438  007D7E  2573               	addwf	(_dispStruct+1)& (0+255),w,b	;volatile
 34439  007D80  6ED9               	movwf	fsr2l,c
 34440  007D82  6ADA               	clrf	fsr2h,c
 34441  007D84  0E03               	movlw	high _DispTable
 34442  007D86  22DA               	addwfc	fsr2h,f,c
 34443  007D88  50DF               	movf	indf2,w,c
 34444  007D8A  EC80  F04B         	call	_Segments_Set
 34445  007D8E  8085               	bsf	133,0,c	;volatile
 34446                           
 34447                           ;outputs_MC50.c: 68:             dispStruct.lastDisplay=disp2_e;
 34448  007D90  0E01               	movlw	1
 34449  007D92                     L115:
 34450  007D92  0100               	movlb	0	; () banked
 34451  007D94  6F74               	movwf	(_dispStruct+2)& (0+255),b	;volatile
 34452  007D96  D002               	goto	i2l14679
 34453  007D98                     i2l2133:
 34454                           
 34455                           ; BSR set to: 0
 34456  007D98  9085               	bcf	133,0,c	;volatile
 34457                           
 34458                           ; BSR set to: 0
 34459                           
 34460                           ;outputs_MC50.c: 75:         do { LATCbits.LATC1 = 0; } while(0);
 34461  007D9A  9285               	bcf	133,1,c	;volatile
 34462  007D9C                     i2l14679:
 34463                           
 34464                           ; BSR set to: 0
 34465                           ;outputs_MC50.c: 79:     if(ts_system.timeFreqDigit<=0 && dispStruct.intermitentFreq!=0)
 34466  007D9C  0101               	movlb	1	; () banked
 34467  007D9E  BFA6               	btfsc	(_ts_system+11)& (0+255),7,b	;volatile
 34468  007DA0  D005               	goto	i2u1495_40
 34469  007DA2  51A6               	movf	(_ts_system+11)& (0+255),w,b	;volatile
 34470  007DA4  E114               	bnz	i2l2140
 34471  007DA6  05A5               	decf	(_ts_system+10)& (0+255),w,b	;volatile
 34472  007DA8  B0D8               	btfsc	status,0,c
 34473  007DAA  0012               	return	
 34474  007DAC                     i2u1495_40:
 34475                           
 34476                           ; BSR set to: 1
 34477  007DAC  0100               	movlb	0	; () banked
 34478  007DAE  5175               	movf	(_dispStruct+3)& (0+255),w,b	;volatile
 34479  007DB0  1176               	iorwf	(_dispStruct+4)& (0+255),w,b	;volatile
 34480  007DB2  B4D8               	btfsc	status,2,c
 34481  007DB4  0012               	return	
 34482                           
 34483                           ; BSR set to: 0
 34484                           ;outputs_MC50.c: 80:     {;outputs_MC50.c: 81:         ts_system.timeFreqDigit=dispStruc
      +                          t.intermitentFreq;
 34485  007DB6  C075  F1A5         	movff	_dispStruct+3,_ts_system+10	;volatile
 34486  007DBA  C076  F1A6         	movff	_dispStruct+4,_ts_system+11	;volatile
 34487                           
 34488                           ; BSR set to: 0
 34489                           ;outputs_MC50.c: 82:         if(dispStruct.upFase==1)
 34490  007DBE  0577               	decf	(_dispStruct+5)& (0+255),w,b	;volatile
 34491  007DC0  A4D8               	btfss	status,2,c
 34492  007DC2  D003               	goto	i2l14689
 34493                           
 34494                           ; BSR set to: 0
 34495                           ;outputs_MC50.c: 83:         {;outputs_MC50.c: 84:             dispStruct.upFase = 0;
 34496  007DC4  0E00               	movlw	0
 34497  007DC6  6F77               	movwf	(_dispStruct+5)& (0+255),b	;volatile
 34498                           
 34499                           ;outputs_MC50.c: 85:         }
 34500  007DC8  0012               	return	
 34501  007DCA                     i2l14689:
 34502                           
 34503                           ; BSR set to: 0
 34504                           ;outputs_MC50.c: 87:         {;outputs_MC50.c: 88:             dispStruct.upFase = 1;
 34505  007DCA  0E01               	movlw	1
 34506  007DCC  6F77               	movwf	(_dispStruct+5)& (0+255),b	;volatile
 34507  007DCE                     i2l2140:
 34508  007DCE  0012               	return		;funcret
 34509  007DD0                     __end_of_refreshSegment:
 34510                           	callstack 0
 34511                           
 34512 ;; *************** function _Segments_Set *****************
 34513 ;; Defined at:
 34514 ;;		line 93 in file "outputs_MC50.c"
 34515 ;; Parameters:    Size  Location     Type
 34516 ;;  value           1    wreg     unsigned char 
 34517 ;; Auto vars:     Size  Location     Type
 34518 ;;  value           1    0[COMRAM] unsigned char 
 34519 ;; Return value:  Size  Location     Type
 34520 ;;                  1    wreg      void 
 34521 ;; Registers used:
 34522 ;;		wreg, status,2, status,0
 34523 ;; Tracked objects:
 34524 ;;		On entry : 3F/0
 34525 ;;		On exit  : 0/0
 34526 ;;		Unchanged: 0/0
 34527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34529 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34531 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34532 ;;Total ram usage:        1 bytes
 34533 ;; Hardware stack levels used: 1
 34534 ;; This function calls:
 34535 ;;		Nothing
 34536 ;; This function is called by:
 34537 ;;		_refreshSegment
 34538 ;; This function uses a non-reentrant model
 34539 ;;
 34540                           
 34541                           	psect	text189
 34542  009700                     __ptext189:
 34543                           	callstack 0
 34544  009700                     _Segments_Set:
 34545                           	callstack 14
 34546                           
 34547                           ;incstack = 0
 34548                           ;Segments_Set@value stored from wreg
 34549  009700  6E01               	movwf	Segments_Set@value^0,c
 34550                           
 34551                           ;outputs_MC50.c: 93: void Segments_Set(char value);outputs_MC50.c: 94: {;outputs_MC50.c:
      +                           95:    LATD &= 0x80;
 34552  009702  0E80               	movlw	128
 34553  009704  1686               	andwf	134,f,c	;volatile
 34554                           
 34555                           ;outputs_MC50.c: 96:    LATD |= value;
 34556  009706  5001               	movf	Segments_Set@value^0,w,c	;volatile
 34557  009708  1286               	iorwf	134,f,c	;volatile
 34558  00970A  0012               	return		;funcret
 34559  00970C                     __end_of_Segments_Set:
 34560                           	callstack 0
 34561                           
 34562 ;; *************** function _controlTimeslots *****************
 34563 ;; Defined at:
 34564 ;;		line 190 in file "main_MC50.c"
 34565 ;; Parameters:    Size  Location     Type
 34566 ;;		None
 34567 ;; Auto vars:     Size  Location     Type
 34568 ;;		None
 34569 ;; Return value:  Size  Location     Type
 34570 ;;                  1    wreg      void 
 34571 ;; Registers used:
 34572 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 34573 ;; Tracked objects:
 34574 ;;		On entry : 3F/1
 34575 ;;		On exit  : 3F/1
 34576 ;;		Unchanged: 0/0
 34577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34581 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34582 ;;Total ram usage:        0 bytes
 34583 ;; Hardware stack levels used: 1
 34584 ;; Hardware stack levels required when called: 1
 34585 ;; This function calls:
 34586 ;;		_decrementTimeslot
 34587 ;; This function is called by:
 34588 ;;		_TMR2_ISR
 34589 ;; This function uses a non-reentrant model
 34590 ;;
 34591                           
 34592                           	psect	text190
 34593  005D8A                     __ptext190:
 34594                           	callstack 0
 34595  005D8A                     _controlTimeslots:
 34596                           	callstack 14
 34597                           
 34598                           ; BSR set to: 1
 34599                           ;main_MC50.c: 192:  decrementTimeslot((int*)&ts_system.Debug_TS);
 34600                           
 34601                           ;incstack = 0
 34602  005D8A  0EA3               	movlw	low (_ts_system+8)
 34603  005D8C  6E01               	movwf	decrementTimeslot@ts^0,c
 34604  005D8E  0E01               	movlw	high (_ts_system+8)
 34605  005D90  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34606  005D92  EC79  F049         	call	_decrementTimeslot	;wreg free
 34607                           
 34608                           ;main_MC50.c: 193:     decrementTimeslot((int*)&ts_system.timewaitFlashRGB);
 34609  005D96  0EE1               	movlw	low (_ts_system+70)
 34610  005D98  6E01               	movwf	decrementTimeslot@ts^0,c
 34611  005D9A  0E01               	movlw	high (_ts_system+70)
 34612  005D9C  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34613  005D9E  EC79  F049         	call	_decrementTimeslot	;wreg free
 34614                           
 34615                           ;main_MC50.c: 194:     decrementTimeslot((int*)&ts_system.timeFreqDigit);
 34616  005DA2  0EA5               	movlw	low (_ts_system+10)
 34617  005DA4  6E01               	movwf	decrementTimeslot@ts^0,c
 34618  005DA6  0E01               	movlw	high (_ts_system+10)
 34619  005DA8  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34620  005DAA  EC79  F049         	call	_decrementTimeslot	;wreg free
 34621                           
 34622                           ;main_MC50.c: 195:     decrementTimeslot((int*)&ts_system.timeSinalizationDigit);
 34623  005DAE  0EA7               	movlw	low (_ts_system+12)
 34624  005DB0  6E01               	movwf	decrementTimeslot@ts^0,c
 34625  005DB2  0E01               	movlw	high (_ts_system+12)
 34626  005DB4  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34627  005DB6  EC79  F049         	call	_decrementTimeslot	;wreg free
 34628                           
 34629                           ;main_MC50.c: 196:     decrementTimeslot((int*)&ts_system.timeoutMenu);
 34630  005DBA  0EA9               	movlw	low (_ts_system+14)
 34631  005DBC  6E01               	movwf	decrementTimeslot@ts^0,c
 34632  005DBE  0E01               	movlw	high (_ts_system+14)
 34633  005DC0  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34634  005DC2  EC79  F049         	call	_decrementTimeslot	;wreg free
 34635                           
 34636                           ;main_MC50.c: 197:     decrementTimeslot((int*)&ts_system.timeOpenWalk);
 34637  005DC6  0EAB               	movlw	low (_ts_system+16)
 34638  005DC8  6E01               	movwf	decrementTimeslot@ts^0,c
 34639  005DCA  0E01               	movlw	high (_ts_system+16)
 34640  005DCC  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34641  005DCE  EC79  F049         	call	_decrementTimeslot	;wreg free
 34642                           
 34643                           ;main_MC50.c: 198:     decrementTimeslot((int*)&ts_system.timeWaitToClose);
 34644  005DD2  0EAD               	movlw	low (_ts_system+18)
 34645  005DD4  6E01               	movwf	decrementTimeslot@ts^0,c
 34646  005DD6  0E01               	movlw	high (_ts_system+18)
 34647  005DD8  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34648  005DDA  EC79  F049         	call	_decrementTimeslot	;wreg free
 34649                           
 34650                           ;main_MC50.c: 199:     decrementTimeslot((int*)&ts_system.TimeLastCommand);
 34651  005DDE  0EAF               	movlw	low (_ts_system+20)
 34652  005DE0  6E01               	movwf	decrementTimeslot@ts^0,c
 34653  005DE2  0E01               	movlw	high (_ts_system+20)
 34654  005DE4  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34655  005DE6  EC79  F049         	call	_decrementTimeslot	;wreg free
 34656                           
 34657                           ;main_MC50.c: 200:     decrementTimeslot((int*)&ts_system.timeSoftStart);
 34658  005DEA  0EB1               	movlw	low (_ts_system+22)
 34659  005DEC  6E01               	movwf	decrementTimeslot@ts^0,c
 34660  005DEE  0E01               	movlw	high (_ts_system+22)
 34661  005DF0  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34662  005DF2  EC79  F049         	call	_decrementTimeslot	;wreg free
 34663                           
 34664                           ;main_MC50.c: 201:     decrementTimeslot((int*)&ts_system.TimeChargeCondesador);
 34665  005DF6  0EB5               	movlw	low (_ts_system+26)
 34666  005DF8  6E01               	movwf	decrementTimeslot@ts^0,c
 34667  005DFA  0E01               	movlw	high (_ts_system+26)
 34668  005DFC  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34669  005DFE  EC79  F049         	call	_decrementTimeslot	;wreg free
 34670                           
 34671                           ;main_MC50.c: 203:     decrementTimeslot((int*)&ts_system.timeFreqRGB);
 34672  005E02  0EB7               	movlw	low (_ts_system+28)
 34673  005E04  6E01               	movwf	decrementTimeslot@ts^0,c
 34674  005E06  0E01               	movlw	high (_ts_system+28)
 34675  005E08  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34676  005E0A  EC79  F049         	call	_decrementTimeslot	;wreg free
 34677                           
 34678                           ;main_MC50.c: 204:     decrementTimeslot((int*)&ts_system.timeFreqFlashligth);
 34679  005E0E  0EB9               	movlw	low (_ts_system+30)
 34680  005E10  6E01               	movwf	decrementTimeslot@ts^0,c
 34681  005E12  0E01               	movlw	high (_ts_system+30)
 34682  005E14  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34683  005E16  EC79  F049         	call	_decrementTimeslot	;wreg free
 34684                           
 34685                           ;main_MC50.c: 206:     decrementTimeslot((int*)&ts_system.TimeWaitToNextState);
 34686  005E1A  0EBF               	movlw	low (_ts_system+36)
 34687  005E1C  6E01               	movwf	decrementTimeslot@ts^0,c
 34688  005E1E  0E01               	movlw	high (_ts_system+36)
 34689  005E20  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34690  005E22  EC79  F049         	call	_decrementTimeslot	;wreg free
 34691                           
 34692                           ;main_MC50.c: 208:     decrementTimeslot((int*)&ts_system.timeBetweenSaveCounters);
 34693  005E26  0EC1               	movlw	low (_ts_system+38)
 34694  005E28  6E01               	movwf	decrementTimeslot@ts^0,c
 34695  005E2A  0E01               	movlw	high (_ts_system+38)
 34696  005E2C  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34697  005E2E  EC79  F049         	call	_decrementTimeslot	;wreg free
 34698                           
 34699                           ;main_MC50.c: 209:     decrementTimeslot((int*)&ts_system.TimeElectricBrake);
 34700  005E32  0EC3               	movlw	low (_ts_system+40)
 34701  005E34  6E01               	movwf	decrementTimeslot@ts^0,c
 34702  005E36  0E01               	movlw	high (_ts_system+40)
 34703  005E38  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34704  005E3A  EC79  F049         	call	_decrementTimeslot	;wreg free
 34705                           
 34706                           ;main_MC50.c: 210:     decrementTimeslot((int*)&ts_system.TimeCurrentAlarm);
 34707  005E3E  0EC5               	movlw	low (_ts_system+42)
 34708  005E40  6E01               	movwf	decrementTimeslot@ts^0,c
 34709  005E42  0E01               	movlw	high (_ts_system+42)
 34710  005E44  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34711  005E46  EC79  F049         	call	_decrementTimeslot	;wreg free
 34712                           
 34713                           ;main_MC50.c: 212:     decrementTimeslot((int*)&ts_system.TimeStopedBeforeDecelaration);
 34714  005E4A  0EC7               	movlw	low (_ts_system+44)
 34715  005E4C  6E01               	movwf	decrementTimeslot@ts^0,c
 34716  005E4E  0E01               	movlw	high (_ts_system+44)
 34717  005E50  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34718  005E52  EC79  F049         	call	_decrementTimeslot	;wreg free
 34719                           
 34720                           ;main_MC50.c: 213:     decrementTimeslot((int*)&ts_system.TimeCurrentWaitForAlarm);
 34721  005E56  0EC9               	movlw	low (_ts_system+46)
 34722  005E58  6E01               	movwf	decrementTimeslot@ts^0,c
 34723  005E5A  0E01               	movlw	high (_ts_system+46)
 34724  005E5C  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34725  005E5E  EC79  F049         	call	_decrementTimeslot	;wreg free
 34726                           
 34727                           ;main_MC50.c: 214:     decrementTimeslot((int*)&ts_system.TimeInversionStart);
 34728  005E62  0ECB               	movlw	low (_ts_system+48)
 34729  005E64  6E01               	movwf	decrementTimeslot@ts^0,c
 34730  005E66  0E01               	movlw	high (_ts_system+48)
 34731  005E68  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34732  005E6A  EC79  F049         	call	_decrementTimeslot	;wreg free
 34733                           
 34734                           ;main_MC50.c: 215:     decrementTimeslot((int*)&ts_system.TimeReleCapacitor);
 34735  005E6E  0EDD               	movlw	low (_ts_system+66)
 34736  005E70  6E01               	movwf	decrementTimeslot@ts^0,c
 34737  005E72  0E01               	movlw	high (_ts_system+66)
 34738  005E74  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34739  005E76  EC79  F049         	call	_decrementTimeslot	;wreg free
 34740                           
 34741                           ;main_MC50.c: 216:     decrementTimeslot((int*)&ts_system.TimeWaitReleCapacitor);
 34742  005E7A  0EDF               	movlw	low (_ts_system+68)
 34743  005E7C  6E01               	movwf	decrementTimeslot@ts^0,c
 34744  005E7E  0E01               	movlw	high (_ts_system+68)
 34745  005E80  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34746  005E82  EC79  F049         	call	_decrementTimeslot	;wreg free
 34747                           
 34748                           ;main_MC50.c: 221:     if ( ( var_sys_NVM.electricBrake==0 ) || ( ts_system.TimeElectric
      +                          Brake<=0 ) )
 34749  005E86  0100               	movlb	0	; () banked
 34750  005E88  51AF               	movf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 34751  005E8A  B4D8               	btfsc	status,2,c
 34752  005E8C  D008               	goto	i2u1499_40
 34753                           
 34754                           ; BSR set to: 0
 34755  005E8E  0101               	movlb	1	; () banked
 34756  005E90  BFC4               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 34757  005E92  D005               	goto	i2u1499_40
 34758  005E94  51C4               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 34759  005E96  E109               	bnz	i2l2024
 34760  005E98  05C3               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 34761  005E9A  B0D8               	btfsc	status,0,c
 34762  005E9C  D006               	goto	i2l2024
 34763  005E9E                     i2u1499_40:
 34764                           
 34765                           ;main_MC50.c: 222:     {;main_MC50.c: 225:         decrementTimeslot((int*)&ts_system.In
      +                          vertionTimeClosingFromOpen);
 34766  005E9E  0ECD               	movlw	low (_ts_system+50)
 34767  005EA0  6E01               	movwf	decrementTimeslot@ts^0,c
 34768  005EA2  0E01               	movlw	high (_ts_system+50)
 34769  005EA4  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34770  005EA6  EC79  F049         	call	_decrementTimeslot	;wreg free
 34771  005EAA                     i2l2024:
 34772                           
 34773                           ;main_MC50.c: 228:     decrementTimeslot((int*)&ts_system.TimeWaitToGetCurrent);
 34774  005EAA  0ECF               	movlw	low (_ts_system+52)
 34775  005EAC  6E01               	movwf	decrementTimeslot@ts^0,c
 34776  005EAE  0E01               	movlw	high (_ts_system+52)
 34777  005EB0  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34778  005EB2  EC79  F049         	call	_decrementTimeslot	;wreg free
 34779                           
 34780                           ;main_MC50.c: 229:     decrementTimeslot((int*)&ts_system.TimeLearningDecelaration);
 34781  005EB6  0ED1               	movlw	low (_ts_system+54)
 34782  005EB8  6E01               	movwf	decrementTimeslot@ts^0,c
 34783  005EBA  0E01               	movlw	high (_ts_system+54)
 34784  005EBC  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34785  005EBE  EC79  F049         	call	_decrementTimeslot	;wreg free
 34786                           
 34787                           ;main_MC50.c: 230:     decrementTimeslot((int*)&ts_system.TimeTransitionDecelaration);
 34788  005EC2  0ED3               	movlw	low (_ts_system+56)
 34789  005EC4  6E01               	movwf	decrementTimeslot@ts^0,c
 34790  005EC6  0E01               	movlw	high (_ts_system+56)
 34791  005EC8  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34792  005ECA  EC79  F049         	call	_decrementTimeslot	;wreg free
 34793                           
 34794                           ;main_MC50.c: 232:     decrementTimeslot((int*)&ts_system.timewaitBeforeSoftStart);
 34795  005ECE  0ED5               	movlw	low (_ts_system+58)
 34796  005ED0  6E01               	movwf	decrementTimeslot@ts^0,c
 34797  005ED2  0E01               	movlw	high (_ts_system+58)
 34798  005ED4  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34799  005ED6  EC79  F049         	call	_decrementTimeslot	;wreg free
 34800                           
 34801                           ;main_MC50.c: 233:     decrementTimeslot((int*)&ts_system.TimeShowVersion);
 34802  005EDA  0ED7               	movlw	low (_ts_system+60)
 34803  005EDC  6E01               	movwf	decrementTimeslot@ts^0,c
 34804  005EDE  0E01               	movlw	high (_ts_system+60)
 34805  005EE0  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34806  005EE2  EC79  F049         	call	_decrementTimeslot	;wreg free
 34807                           
 34808                           ;main_MC50.c: 235:     decrementTimeslot((int*)&ts_system.TimeStopADCZeroOffsetCalc);
 34809  005EE6  0ED9               	movlw	low (_ts_system+62)
 34810  005EE8  6E01               	movwf	decrementTimeslot@ts^0,c
 34811  005EEA  0E01               	movlw	high (_ts_system+62)
 34812  005EEC  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34813  005EEE  EC79  F049         	call	_decrementTimeslot	;wreg free
 34814                           
 34815                           ;main_MC50.c: 237:     decrementTimeslot((int*)&ts_system.TimeStopElectricBrake);
 34816  005EF2  0EDB               	movlw	low (_ts_system+64)
 34817  005EF4  6E01               	movwf	decrementTimeslot@ts^0,c
 34818  005EF6  0E01               	movlw	high (_ts_system+64)
 34819  005EF8  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34820  005EFA  EC79  F049         	call	_decrementTimeslot	;wreg free
 34821                           
 34822                           ;main_MC50.c: 240:     if (ts_system.TimeOnFlashLigth>0)
 34823  005EFE  0101               	movlb	1	; () banked
 34824  005F00  BFBE               	btfsc	(_ts_system+35)& (0+255),7,b	;volatile
 34825  005F02  0012               	return	
 34826  005F04  51BE               	movf	(_ts_system+35)& (0+255),w,b	;volatile
 34827  005F06  11BD               	iorwf	(_ts_system+34)& (0+255),w,b	;volatile
 34828  005F08  11BC               	iorwf	(_ts_system+33)& (0+255),w,b	;volatile
 34829  005F0A  E103               	bnz	i2u1500_40
 34830  005F0C  05BB               	decf	(_ts_system+32)& (0+255),w,b	;volatile
 34831  005F0E  A0D8               	btfss	status,0,c
 34832  005F10  0012               	return	
 34833  005F12                     i2u1500_40:
 34834                           
 34835                           ; BSR set to: 1
 34836                           ;main_MC50.c: 241:     {;main_MC50.c: 242:         ts_system.TimeOnFlashLigth--;
 34837  005F12  0EFF               	movlw	255
 34838  005F14  27BB               	addwf	(_ts_system+32)& (0+255),f,b	;volatile
 34839  005F16  0EFF               	movlw	255
 34840  005F18  23BC               	addwfc	(_ts_system+33)& (0+255),f,b	;volatile
 34841  005F1A  0EFF               	movlw	255
 34842  005F1C  23BD               	addwfc	(_ts_system+34)& (0+255),f,b	;volatile
 34843  005F1E  0EFF               	movlw	255
 34844  005F20  23BE               	addwfc	(_ts_system+35)& (0+255),f,b	;volatile
 34845                           
 34846                           ; BSR set to: 1
 34847  005F22  0012               	return		;funcret
 34848  005F24                     __end_of_controlTimeslots:
 34849                           	callstack 0
 34850                           
 34851 ;; *************** function _decrementTimeslot *****************
 34852 ;; Defined at:
 34853 ;;		line 246 in file "main_MC50.c"
 34854 ;; Parameters:    Size  Location     Type
 34855 ;;  ts              2    0[COMRAM] PTR int 
 34856 ;;		 -> ts_system.TimeShowVersion(2), ts_system.TimeLearningDecelaration(2), ts_system.TimeWaitToGetCurrent(2), ts_syste
      +m.InvertionTimeClosingFromOpen(2), 
 34857 ;;		 -> ts_system.TimeWaitReleCapacitor(2), ts_system.TimeInversionStart(2), ts_system.TimeStopedBeforeDecelaration(2), 
      +ts_system.TimeWaitToNextState(2), 
 34858 ;;		 -> ts_system.timeFreqFlashligth(2), ts_system.timeFreqRGB(2), ts_system.timeWaitToClose(2), ts_system.timeOpenWalk(
      +2), 
 34859 ;;		 -> ts_system.timeoutMenu(2), ts_system.timeFreqDigit(2), ts_system.timewaitFlashRGB(2), ts_system.TimeStopElectricB
      +rake(2), 
 34860 ;;		 -> ts_system.Debug_TS(2), ts_system.timeSinalizationDigit(2), ts_system.TimeLastCommand(2), ts_system.timeBetweenSa
      +veCounters(2), 
 34861 ;;		 -> ts_system.TimeCurrentAlarm(2), ts_system.TimeCurrentWaitForAlarm(2), ts_system.TimeReleCapacitor(2), ts_system.T
      +imeChargeCondesador(2), 
 34862 ;;		 -> ts_system.TimeTransitionDecelaration(2), ts_system.timewaitBeforeSoftStart(2), ts_system.timeSoftStart(2), ts_sy
      +stem.TimeElectricBrake(2), 
 34863 ;;		 -> ts_system.TimeStopADCZeroOffsetCalc(2), ts_system(72), 
 34864 ;; Auto vars:     Size  Location     Type
 34865 ;;		None
 34866 ;; Return value:  Size  Location     Type
 34867 ;;                  1    wreg      void 
 34868 ;; Registers used:
 34869 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 34870 ;; Tracked objects:
 34871 ;;		On entry : 0/1
 34872 ;;		On exit  : 0/0
 34873 ;;		Unchanged: 0/0
 34874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34875 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34877 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34878 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34879 ;;Total ram usage:        4 bytes
 34880 ;; Hardware stack levels used: 1
 34881 ;; This function calls:
 34882 ;;		Nothing
 34883 ;; This function is called by:
 34884 ;;		_controlTimeslots
 34885 ;; This function uses a non-reentrant model
 34886 ;;
 34887                           
 34888                           	psect	text191
 34889  0092F2                     __ptext191:
 34890                           	callstack 0
 34891  0092F2                     _decrementTimeslot:
 34892                           	callstack 14
 34893                           
 34894                           ;main_MC50.c: 246: void decrementTimeslot(int * ts);main_MC50.c: 247: {;main_MC50.c: 248
      +                          :     if (ts[0]>0)
 34895                           
 34896                           ; BSR set to: 1
 34897                           ;incstack = 0
 34898  0092F2  C001  FFD9         	movff	decrementTimeslot@ts,fsr2l
 34899  0092F6  C002  FFDA         	movff	decrementTimeslot@ts+1,fsr2h
 34900  0092FA  0E01               	movlw	1
 34901  0092FC  BEDB               	btfsc	plusw2,7,c
 34902  0092FE  0012               	return	
 34903  009300  0E01               	movlw	1
 34904  009302  50DB               	movf	plusw2,w,c
 34905  009304  E103               	bnz	i2u1336_40
 34906  009306  04DE               	decf	postinc2,w,c
 34907  009308  A0D8               	btfss	status,0,c
 34908  00930A  0012               	return	
 34909  00930C                     i2u1336_40:
 34910                           
 34911                           ;main_MC50.c: 249:     {;main_MC50.c: 250:         ts[0]--;
 34912  00930C  C001  FFD9         	movff	decrementTimeslot@ts,fsr2l
 34913  009310  C002  FFDA         	movff	decrementTimeslot@ts+1,fsr2h
 34914  009314  06DE               	decf	postinc2,f,c
 34915  009316  0E00               	movlw	0
 34916  009318  5ADD               	subwfb	postdec2,f,c
 34917  00931A  0012               	return		;funcret
 34918  00931C                     __end_of_decrementTimeslot:
 34919                           	callstack 0
 34920                           
 34921 ;; *************** function _TMR2_DefaultInterruptHandler *****************
 34922 ;; Defined at:
 34923 ;;		line 346 in file "mcc_generated_files/tmr2.c"
 34924 ;; Parameters:    Size  Location     Type
 34925 ;;		None
 34926 ;; Auto vars:     Size  Location     Type
 34927 ;;		None
 34928 ;; Return value:  Size  Location     Type
 34929 ;;                  1    wreg      void 
 34930 ;; Registers used:
 34931 ;;		None
 34932 ;; Tracked objects:
 34933 ;;		On entry : 3F/2
 34934 ;;		On exit  : 3F/2
 34935 ;;		Unchanged: 3F/0
 34936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34940 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34941 ;;Total ram usage:        0 bytes
 34942 ;; Hardware stack levels used: 1
 34943 ;; This function calls:
 34944 ;;		Nothing
 34945 ;; This function is called by:
 34946 ;;		_TMR2_Initialize
 34947 ;;		_TMR2_ISR
 34948 ;; This function uses a non-reentrant model
 34949 ;;
 34950                           
 34951                           	psect	text192
 34952  00983A                     __ptext192:
 34953                           	callstack 0
 34954  00983A                     _TMR2_DefaultInterruptHandler:
 34955                           	callstack 15
 34956                           
 34957                           ; BSR set to: 2
 34958                           
 34959                           ;incstack = 0
 34960  00983A  0012               	return		;funcret
 34961  00983C                     __end_of_TMR2_DefaultInterruptHandler:
 34962                           	callstack 0
 34963                           
 34964 ;; *************** function _ReadADC *****************
 34965 ;; Defined at:
 34966 ;;		line 38 in file "controlCurrent_MC50.c"
 34967 ;; Parameters:    Size  Location     Type
 34968 ;;		None
 34969 ;; Auto vars:     Size  Location     Type
 34970 ;;		None
 34971 ;; Return value:  Size  Location     Type
 34972 ;;                  1    wreg      void 
 34973 ;; Registers used:
 34974 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34975 ;; Tracked objects:
 34976 ;;		On entry : 3F/E
 34977 ;;		On exit  : 31/0
 34978 ;;		Unchanged: 0/0
 34979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34980 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34981 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34982 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34983 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34984 ;;Total ram usage:        3 bytes
 34985 ;; Hardware stack levels used: 1
 34986 ;; Hardware stack levels required when called: 1
 34987 ;; This function calls:
 34988 ;;		_ADCC_GetSingleConversion
 34989 ;; This function is called by:
 34990 ;;		_TMR2_ISR
 34991 ;; This function uses a non-reentrant model
 34992 ;;
 34993                           
 34994                           	psect	text193
 34995  0089C0                     __ptext193:
 34996                           	callstack 0
 34997  0089C0                     _ReadADC:
 34998                           	callstack 14
 34999                           
 35000                           ; BSR set to: 14
 35001                           ;controlCurrent_MC50.c: 40:      if (!ADCON0bits.GO_nDONE)
 35002                           
 35003                           ; BSR set to: 2
 35004                           ;incstack = 0
 35005  0089C0  B060               	btfsc	96,0,c	;volatile
 35006  0089C2  0012               	return	
 35007                           
 35008                           ; BSR set to: 14
 35009                           ;controlCurrent_MC50.c: 41:      {;controlCurrent_MC50.c: 42:         if ( idxAdcAquisit
      +                          ion >= 30 )
 35010  0089C4  0E1D               	movlw	29
 35011  0089C6  0100               	movlb	0	; () banked
 35012  0089C8  6591               	cpfsgt	_idxAdcAquisition& (0+255),b	;volatile
 35013  0089CA  D002               	goto	i2l14655
 35014                           
 35015                           ; BSR set to: 0
 35016                           ;controlCurrent_MC50.c: 43:         {;controlCurrent_MC50.c: 44:             idxAdcAquis
      +                          ition=0;
 35017  0089CC  0E00               	movlw	0
 35018  0089CE  6F91               	movwf	_idxAdcAquisition& (0+255),b	;volatile
 35019  0089D0                     i2l14655:
 35020                           
 35021                           ; BSR set to: 0
 35022                           ;controlCurrent_MC50.c: 47:         ADC_array[idxAdcAquisition] = ((unsigned int)((ADRES
      +                          H << 8) + ADRESL)>>6);
 35023  0089D0  5063               	movf	99,w,c	;volatile
 35024  0089D2  CF64 F002          	movff	3940,??_ReadADC	;volatile
 35025  0089D6  6A03               	clrf	(??_ReadADC+1)^0,c
 35026  0089D8  C002  F003         	movff	??_ReadADC,??_ReadADC+1
 35027  0089DC  6A02               	clrf	??_ReadADC^0,c
 35028  0089DE  2602               	addwf	??_ReadADC^0,f,c
 35029  0089E0  0E00               	movlw	0
 35030  0089E2  2203               	addwfc	(??_ReadADC+1)^0,f,c
 35031  0089E4  0E06               	movlw	6
 35032  0089E6  6E04               	movwf	(??_ReadADC+2)^0,c
 35033  0089E8                     i2u1491_45:
 35034  0089E8  90D8               	bcf	status,0,c
 35035  0089EA  3203               	rrcf	(??_ReadADC+1)^0,f,c
 35036  0089EC  3202               	rrcf	??_ReadADC^0,f,c
 35037  0089EE  2E04               	decfsz	(??_ReadADC+2)^0,f,c
 35038  0089F0  D7FB               	goto	i2u1491_45
 35039  0089F2  5191               	movf	_idxAdcAquisition& (0+255),w,b	;volatile
 35040  0089F4  0D02               	mullw	2
 35041  0089F6  0E00               	movlw	low _ADC_array
 35042  0089F8  24F3               	addwf	243,w,c
 35043  0089FA  6ED9               	movwf	fsr2l,c
 35044  0089FC  0E02               	movlw	high _ADC_array
 35045  0089FE  20F4               	addwfc	prodh,w,c
 35046  008A00  6EDA               	movwf	fsr2h,c
 35047  008A02  C002  FFDE         	movff	??_ReadADC,postinc2
 35048  008A06  C003  FFDD         	movff	??_ReadADC+1,postdec2
 35049                           
 35050                           ; BSR set to: 0
 35051                           ;controlCurrent_MC50.c: 48:         ADCC_GetSingleConversion(0x00);
 35052  008A0A  0E00               	movlw	0
 35053  008A0C  EC23  F04B         	call	_ADCC_GetSingleConversion
 35054                           
 35055                           ;controlCurrent_MC50.c: 49:         idxAdcAquisition++;
 35056  008A10  0100               	movlb	0	; () banked
 35057  008A12  2B91               	incf	_idxAdcAquisition& (0+255),f,b	;volatile
 35058  008A14  0012               	return		;funcret
 35059  008A16                     __end_of_ReadADC:
 35060                           	callstack 0
 35061                           
 35062 ;; *************** function _ADCC_GetSingleConversion *****************
 35063 ;; Defined at:
 35064 ;;		line 131 in file "mcc_generated_files/adcc.c"
 35065 ;; Parameters:    Size  Location     Type
 35066 ;;  channel         1    wreg     enum E10053
 35067 ;; Auto vars:     Size  Location     Type
 35068 ;;  channel         1    0[COMRAM] enum E10053
 35069 ;; Return value:  Size  Location     Type
 35070 ;;                  2  433[None  ] int 
 35071 ;; Registers used:
 35072 ;;		wreg, status,2, cstack
 35073 ;; Tracked objects:
 35074 ;;		On entry : 3F/0
 35075 ;;		On exit  : 0/0
 35076 ;;		Unchanged: 0/0
 35077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35079 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35081 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35082 ;;Total ram usage:        1 bytes
 35083 ;; Hardware stack levels used: 1
 35084 ;; This function calls:
 35085 ;;		Nothing
 35086 ;; This function is called by:
 35087 ;;		_ReadADC
 35088 ;; This function uses a non-reentrant model
 35089 ;;
 35090                           
 35091                           	psect	text194
 35092  009646                     __ptext194:
 35093                           	callstack 0
 35094  009646                     _ADCC_GetSingleConversion:
 35095                           	callstack 14
 35096                           
 35097                           ;incstack = 0
 35098                           ;ADCC_GetSingleConversion@channel stored from wreg
 35099  009646  6E01               	movwf	ADCC_GetSingleConversion@channel^0,c
 35100                           
 35101                           ;mcc_generated_files/adcc.c: 131: ADCC_GetSingleConversion(adcc_channel_t channel);mcc_g
      +                          enerated_files/adcc.c: 132: {;mcc_generated_files/adcc.c: 134:     ADPCH = channel;
 35102  009648  C001  FF5F         	movff	ADCC_GetSingleConversion@channel,3935	;volatile
 35103                           
 35104                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADON = 1;
 35105  00964C  8E60               	bsf	96,7,c	;volatile
 35106                           
 35107                           ;mcc_generated_files/adcc.c: 139:       _delay((unsigned long)((5)*(64000000/4000000.0))
      +                          );
 35108  00964E  0E1A               	movlw	26
 35109  009650                     i2u2983_47:
 35110  009650  2EE8               	decfsz	wreg,f,c
 35111  009652  D7FE               	bra	i2u2983_47
 35112  009654  D000               	nop2	
 35113                           
 35114                           ;mcc_generated_files/adcc.c: 142:     ADCON0bits.ADCONT = 0;
 35115  009656  9C60               	bcf	96,6,c	;volatile
 35116                           
 35117                           ;mcc_generated_files/adcc.c: 145:     ADCON0bits.ADGO = 1;
 35118  009658  8060               	bsf	96,0,c	;volatile
 35119  00965A  0012               	return		;funcret
 35120  00965C                     __end_of_ADCC_GetSingleConversion:
 35121                           	callstack 0
 35122                           
 35123 ;; *************** function _TMR1_ISR *****************
 35124 ;; Defined at:
 35125 ;;		line 166 in file "mcc_generated_files/tmr1.c"
 35126 ;; Parameters:    Size  Location     Type
 35127 ;;		None
 35128 ;; Auto vars:     Size  Location     Type
 35129 ;;		None
 35130 ;; Return value:  Size  Location     Type
 35131 ;;                  1    wreg      void 
 35132 ;; Registers used:
 35133 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 35134 ;; Tracked objects:
 35135 ;;		On entry : 3F/E
 35136 ;;		On exit  : 0/0
 35137 ;;		Unchanged: 0/0
 35138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35139 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35142 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35143 ;;Total ram usage:        0 bytes
 35144 ;; Hardware stack levels used: 1
 35145 ;; Hardware stack levels required when called: 2
 35146 ;; This function calls:
 35147 ;;		Absolute function
 35148 ;;		_TMR1_DefaultInterruptHandler
 35149 ;;		_TMR1_WriteTimer
 35150 ;;		_controlMotorForce
 35151 ;; This function is called by:
 35152 ;;		_INTERRUPT_InterruptManager
 35153 ;; This function uses a non-reentrant model
 35154 ;;
 35155                           
 35156                           	psect	text195
 35157  008EA8                     __ptext195:
 35158                           	callstack 0
 35159  008EA8                     _TMR1_ISR:
 35160                           	callstack 14
 35161                           
 35162                           ; BSR set to: 14
 35163                           ;mcc_generated_files/tmr1.c: 170:     PIR4bits.TMR1IF = 0;
 35164                           
 35165                           ;incstack = 0
 35166  008EA8  91CE               	bcf	206,0,b	;volatile
 35167                           
 35168                           ; BSR set to: 14
 35169                           ;mcc_generated_files/tmr1.c: 172:             controlMotorForce();
 35170  008EAA  EC76  F027         	call	_controlMotorForce	;wreg free
 35171                           
 35172                           ;mcc_generated_files/tmr1.c: 173:             if(ts_system.ts_TimeSlotTRIAC>0)
 35173  008EAE  0101               	movlb	1	; () banked
 35174  008EB0  51A0               	movf	(_ts_system+5)& (0+255),w,b	;volatile
 35175  008EB2  A4D8               	btfss	status,2,c
 35176                           
 35177                           ; BSR set to: 1
 35178                           ;mcc_generated_files/tmr1.c: 174:             {;mcc_generated_files/tmr1.c: 176:        
      +                                   ts_system.ts_TimeSlotTRIAC--;
 35179  008EB4  07A0               	decf	(_ts_system+5)& (0+255),f,b	;volatile
 35180                           
 35181                           ; BSR set to: 1
 35182                           ;mcc_generated_files/tmr1.c: 178:             if (ts_system.ts_TimeSlot1ms > 0 )
 35183  008EB6  519D               	movf	(_ts_system+2)& (0+255),w,b	;volatile
 35184  008EB8  A4D8               	btfss	status,2,c
 35185                           
 35186                           ; BSR set to: 1
 35187                           ;mcc_generated_files/tmr1.c: 179:             {;mcc_generated_files/tmr1.c: 180:        
      +                               ts_system.ts_TimeSlot1ms--;
 35188  008EBA  079D               	decf	(_ts_system+2)& (0+255),f,b	;volatile
 35189                           
 35190                           ; BSR set to: 1
 35191                           ;mcc_generated_files/tmr1.c: 183:     TMR1_WriteTimer(timer1ReloadVal);
 35192  008EBC  C2E3  F001         	movff	_timer1ReloadVal,TMR1_WriteTimer@timerVal	;volatile
 35193  008EC0  C2E4  F002         	movff	_timer1ReloadVal+1,TMR1_WriteTimer@timerVal+1	;volatile
 35194  008EC4  EC81  F04A         	call	_TMR1_WriteTimer	;wreg free
 35195                           
 35196                           ; BSR set to: 1
 35197                           ;mcc_generated_files/tmr1.c: 185:     if(TMR1_InterruptHandler)
 35198  008EC8  0102               	movlb	2	; () banked
 35199  008ECA  51E1               	movf	_TMR1_InterruptHandler& (0+255),w,b
 35200  008ECC  11E2               	iorwf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 35201  008ECE  B4D8               	btfsc	status,2,c
 35202  008ED0  0012               	return	
 35203                           
 35204                           ; BSR set to: 2
 35205                           ;mcc_generated_files/tmr1.c: 186:     {;mcc_generated_files/tmr1.c: 187:         TMR1_In
      +                          terruptHandler();
 35206  008ED2  D801               	call	i2u1869_48
 35207  008ED4  0012               	return	
 35208  008ED6                     i2u1869_48:
 35209  008ED6  0005               	push	
 35210  008ED8  6EFA               	movwf	pclath,c
 35211  008EDA  51E1               	movf	_TMR1_InterruptHandler& (0+255),w,b
 35212  008EDC  6EFD               	movwf	tosl,c
 35213  008EDE  51E2               	movf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 35214  008EE0  6EFE               	movwf	tosh,c
 35215  008EE2  6AFF               	clrf	tosu,c
 35216  008EE4  50FA               	movf	pclath,w,c
 35217  008EE6  0012               	return		;indir
 35218  008EE8                     __end_of_TMR1_ISR:
 35219                           	callstack 0
 35220                           
 35221 ;; *************** function _controlMotorForce *****************
 35222 ;; Defined at:
 35223 ;;		line 213 in file "outputs_MC50.c"
 35224 ;; Parameters:    Size  Location     Type
 35225 ;;		None
 35226 ;; Auto vars:     Size  Location     Type
 35227 ;;		None
 35228 ;; Return value:  Size  Location     Type
 35229 ;;                  1    wreg      void 
 35230 ;; Registers used:
 35231 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35232 ;; Tracked objects:
 35233 ;;		On entry : 3F/E
 35234 ;;		On exit  : 3E/0
 35235 ;;		Unchanged: 0/0
 35236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35239 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35240 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35241 ;;Total ram usage:        5 bytes
 35242 ;; Hardware stack levels used: 1
 35243 ;; Hardware stack levels required when called: 1
 35244 ;; This function calls:
 35245 ;;		i2_GetMotorPower
 35246 ;;		i2_VerifyElectricalBrake
 35247 ;; This function is called by:
 35248 ;;		_TMR1_ISR
 35249 ;; This function uses a non-reentrant model
 35250 ;;
 35251                           
 35252                           	psect	text196
 35253  004EEC                     __ptext196:
 35254                           	callstack 0
 35255  004EEC                     _controlMotorForce:
 35256                           	callstack 14
 35257                           
 35258                           ; BSR set to: 14
 35259                           ;outputs_MC50.c: 217:     difTime=GetMotorPower();
 35260                           
 35261                           ;incstack = 0
 35262  004EEC  EC51  F03A         	call	i2_GetMotorPower	;wreg free
 35263  004EF0  6F90               	movwf	_difTime& (0+255),b
 35264                           
 35265                           ; BSR set to: 1
 35266                           ;outputs_MC50.c: 218:     if(powerControl_st.decelarationActive==YES)
 35267  004EF2  057B               	decf	_powerControl_st& (0+255),w,b
 35268  004EF4  A4D8               	btfss	status,2,c
 35269  004EF6  D00F               	goto	i2l2191
 35270                           
 35271                           ; BSR set to: 1
 35272                           ;outputs_MC50.c: 219:     {;outputs_MC50.c: 220:         if(ts_system.TimeStopedBeforeDe
      +                          celaration>0)
 35273  004EF8  BFC8               	btfsc	(_ts_system+45)& (0+255),7,b	;volatile
 35274  004EFA  D008               	goto	i2l14543
 35275  004EFC  51C8               	movf	(_ts_system+45)& (0+255),w,b	;volatile
 35276  004EFE  E103               	bnz	i2u1451_40
 35277  004F00  05C7               	decf	(_ts_system+44)& (0+255),w,b	;volatile
 35278  004F02  A0D8               	btfss	status,0,c
 35279  004F04  D003               	goto	i2l14543
 35280  004F06                     i2u1451_40:
 35281                           
 35282                           ; BSR set to: 1
 35283                           ;outputs_MC50.c: 221:         {;outputs_MC50.c: 222:             StateTRIAC=0;
 35284  004F06  0E00               	movlw	0
 35285  004F08  6F91               	movwf	_StateTRIAC& (0+255),b
 35286                           
 35287                           ;outputs_MC50.c: 223:         }
 35288  004F0A  D005               	goto	i2l2191
 35289  004F0C                     i2l14543:
 35290                           
 35291                           ; BSR set to: 1
 35292  004F0C  517D               	movf	(_powerControl_st+2)& (0+255),w,b
 35293  004F0E  5D7F               	subwf	(_powerControl_st+4)& (0+255),w,b
 35294  004F10  A0D8               	btfss	status,0,c
 35295                           
 35296                           ; BSR set to: 1
 35297                           ;outputs_MC50.c: 225:         {;outputs_MC50.c: 227:             difTime=powerControl_st
      +                          .decelarationPower;
 35298  004F12  C17E  F190         	movff	_powerControl_st+3,_difTime
 35299  004F16                     i2l2191:
 35300                           
 35301                           ; BSR set to: 1
 35302                           ;outputs_MC50.c: 242:     if(PORTAbits.RA3==1 && zeroCrossing==0)
 35303  004F16  A68D               	btfss	141,3,c	;volatile
 35304  004F18  D071               	goto	i2l2195
 35305                           
 35306                           ; BSR set to: 1
 35307  004F1A  5193               	movf	_zeroCrossing& (0+255),w,b
 35308  004F1C  A4D8               	btfss	status,2,c
 35309  004F1E  D06E               	goto	i2l2195
 35310                           
 35311                           ; BSR set to: 1
 35312                           ;outputs_MC50.c: 243:     {;outputs_MC50.c: 257:         if ( waitZeroPeak == 0 )
 35313  004F20  5192               	movf	_waitZeroPeak& (0+255),w,b
 35314  004F22  A4D8               	btfss	status,2,c
 35315  004F24  D016               	goto	i2l14559
 35316                           
 35317                           ; BSR set to: 1
 35318                           ;outputs_MC50.c: 258:         {;outputs_MC50.c: 260:             zeroCrossingWaitTime[ze
      +                          roCrossingWaitTimeIdx] = (zeroCrossingLength>>1);
 35319  004F26  0EF1               	movlw	low _zeroCrossingWaitTime
 35320  004F28  0100               	movlb	0	; () banked
 35321  004F2A  2584               	addwf	_zeroCrossingWaitTimeIdx& (0+255),w,b
 35322  004F2C  6ED9               	movwf	fsr2l,c
 35323  004F2E  6ADA               	clrf	fsr2h,c
 35324  004F30  0E02               	movlw	high _zeroCrossingWaitTime
 35325  004F32  22DA               	addwfc	fsr2h,f,c
 35326  004F34  0101               	movlb	1	; () banked
 35327  004F36  90D8               	bcf	status,0,c
 35328  004F38  3194               	rrcf	_zeroCrossingLength& (0+255),w,b
 35329  004F3A  6EDF               	movwf	indf2,c
 35330                           
 35331                           ; BSR set to: 1
 35332                           ;outputs_MC50.c: 261:             if ( zeroCrossingWaitTimeIdx == 0 )
 35333  004F3C  0100               	movlb	0	; () banked
 35334  004F3E  5184               	movf	_zeroCrossingWaitTimeIdx& (0+255),w,b
 35335  004F40  A4D8               	btfss	status,2,c
 35336  004F42  D002               	goto	i2l14557
 35337                           
 35338                           ; BSR set to: 0
 35339                           ;outputs_MC50.c: 262:             {;outputs_MC50.c: 263:                 zeroCrossingWai
      +                          tTimeIdx = 1;
 35340  004F44  0E01               	movlw	1
 35341  004F46  D001               	goto	L116
 35342  004F48                     i2l14557:
 35343                           
 35344                           ; BSR set to: 0
 35345                           ;outputs_MC50.c: 266:             {;outputs_MC50.c: 267:                 zeroCrossingWai
      +                          tTimeIdx = 0;
 35346  004F48  0E00               	movlw	0
 35347  004F4A                     L116:
 35348  004F4A  6F84               	movwf	_zeroCrossingWaitTimeIdx& (0+255),b
 35349                           
 35350                           ; BSR set to: 0
 35351                           ;outputs_MC50.c: 270:             zeroCrossingLength = 0;
 35352                           
 35353                           ;outputs_MC50.c: 268:             }
 35354  004F4C  0E00               	movlw	0
 35355  004F4E  0101               	movlb	1	; () banked
 35356  004F50  6F94               	movwf	_zeroCrossingLength& (0+255),b
 35357  004F52                     i2l14559:
 35358                           
 35359                           ; BSR set to: 1
 35360                           ;outputs_MC50.c: 273:         if ( (difTime<=80) || (ts_system.TimeElectricBrake>0) )
 35361  004F52  0E50               	movlw	80
 35362  004F54  6590               	cpfsgt	_difTime& (0+255),b
 35363  004F56  D007               	goto	i2u1458_40
 35364                           
 35365                           ; BSR set to: 1
 35366  004F58  BFC4               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 35367  004F5A  D008               	goto	i2l14565
 35368  004F5C  51C4               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 35369  004F5E  E103               	bnz	i2u1458_40
 35370  004F60  05C3               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 35371  004F62  A0D8               	btfss	status,0,c
 35372  004F64  D003               	goto	i2l14565
 35373  004F66                     i2u1458_40:
 35374                           
 35375                           ; BSR set to: 1
 35376                           
 35377                           ;outputs_MC50.c: 274:         {;outputs_MC50.c: 275:             do { LATDbits.LATD7 = 0
      +                          ; } while(0);
 35378  004F66  9E86               	bcf	134,7,c	;volatile
 35379                           
 35380                           ; BSR set to: 1
 35381                           ;outputs_MC50.c: 276:             var_sys.TriacON=NO;
 35382  004F68  0E00               	movlw	0
 35383  004F6A  6F0C               	movwf	(_var_sys+12)& (0+255),b	;volatile
 35384  004F6C                     i2l14565:
 35385                           
 35386                           ; BSR set to: 1
 35387                           ;outputs_MC50.c: 280:         waitZeroPeak++;
 35388  004F6C  2B92               	incf	_waitZeroPeak& (0+255),f,b
 35389                           
 35390                           ; BSR set to: 1
 35391                           ;outputs_MC50.c: 282:         if ( waitZeroPeak > zeroCrossingWaitTime[zeroCrossingWaitT
      +                          imeIdx] )
 35392  004F6E  0EF1               	movlw	low _zeroCrossingWaitTime
 35393  004F70  0100               	movlb	0	; () banked
 35394  004F72  2584               	addwf	_zeroCrossingWaitTimeIdx& (0+255),w,b
 35395  004F74  6ED9               	movwf	fsr2l,c
 35396  004F76  6ADA               	clrf	fsr2h,c
 35397  004F78  0E02               	movlw	high _zeroCrossingWaitTime
 35398  004F7A  22DA               	addwfc	fsr2h,f,c
 35399  004F7C  0101               	movlb	1	; () banked
 35400  004F7E  5192               	movf	_waitZeroPeak& (0+255),w,b
 35401  004F80  5CDE               	subwf	postinc2,w,c
 35402  004F82  B0D8               	btfsc	status,0,c
 35403  004F84  D044               	goto	i2l14595
 35404                           
 35405                           ; BSR set to: 1
 35406                           ;outputs_MC50.c: 284:         {;outputs_MC50.c: 286:             if ((var_sys.Control50o
      +                          r60hz >= 90)&&(var_sys.Control50or60hz <= 105)){
 35407  004F86  0E59               	movlw	89
 35408  004F88  654D               	cpfsgt	(_var_sys+77)& (0+255),b	;volatile
 35409  004F8A  D005               	goto	i2l14575
 35410                           
 35411                           ; BSR set to: 1
 35412  004F8C  0E6A               	movlw	106
 35413  004F8E  614D               	cpfslt	(_var_sys+77)& (0+255),b	;volatile
 35414  004F90  D002               	goto	i2l14575
 35415                           
 35416                           ; BSR set to: 1
 35417                           ;outputs_MC50.c: 287:                 var_sys.Torquerelanty = 1;
 35418  004F92  0E01               	movlw	1
 35419  004F94  D001               	goto	L117
 35420  004F96                     i2l14575:
 35421                           
 35422                           ; BSR set to: 1
 35423                           ;outputs_MC50.c: 290:             {;outputs_MC50.c: 291:                var_sys.Torquere
      +                          lanty = 0;
 35424  004F96  0E00               	movlw	0
 35425  004F98                     L117:
 35426  004F98  6F15               	movwf	(_var_sys+21)& (0+255),b	;volatile
 35427                           
 35428                           ; BSR set to: 1
 35429                           ;outputs_MC50.c: 294:             ts_system.ts_TimeSlotTRIAC=80;
 35430                           
 35431                           ;outputs_MC50.c: 292:             }
 35432  004F9A  0E50               	movlw	80
 35433  004F9C  6FA0               	movwf	(_ts_system+5)& (0+255),b	;volatile
 35434                           
 35435                           ;outputs_MC50.c: 295:             var_sys.Control50or60hz = 0;
 35436  004F9E  0E00               	movlw	0
 35437  004FA0  6F4D               	movwf	(_var_sys+77)& (0+255),b	;volatile
 35438                           
 35439                           ;outputs_MC50.c: 296:             StateTRIAC=1;
 35440  004FA2  0E01               	movlw	1
 35441  004FA4  6F91               	movwf	_StateTRIAC& (0+255),b
 35442                           
 35443                           ;outputs_MC50.c: 297:             zeroCrossing=1;
 35444  004FA6  0E01               	movlw	1
 35445  004FA8  6F93               	movwf	_zeroCrossing& (0+255),b
 35446                           
 35447                           ; BSR set to: 1
 35448                           ;outputs_MC50.c: 298:             powerControl_st.actualCycle++;
 35449  004FAA  2B7F               	incf	(_powerControl_st+4)& (0+255),f,b
 35450                           
 35451                           ; BSR set to: 1
 35452                           ;outputs_MC50.c: 304:             if ( var_sys_NVM.electricBrake==1 && ts_system.TimeEle
      +                          ctricBrake>0 )
 35453  004FAC  0100               	movlb	0	; () banked
 35454  004FAE  05AF               	decf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 35455  004FB0  A4D8               	btfss	status,2,c
 35456  004FB2  D00E               	goto	i2l14587
 35457                           
 35458                           ; BSR set to: 0
 35459  004FB4  0101               	movlb	1	; () banked
 35460  004FB6  BFC4               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 35461  004FB8  D00B               	goto	i2l14587
 35462  004FBA  51C4               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 35463  004FBC  E103               	bnz	i2u1463_40
 35464  004FBE  05C3               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 35465  004FC0  A0D8               	btfss	status,0,c
 35466  004FC2  D006               	goto	i2l14587
 35467  004FC4                     i2u1463_40:
 35468                           
 35469                           ; BSR set to: 1
 35470                           ;outputs_MC50.c: 305:             {;outputs_MC50.c: 307:                 if ( powerContr
      +                          ol_st.actualCycle>=2 )
 35471  004FC4  0E01               	movlw	1
 35472  004FC6  657F               	cpfsgt	(_powerControl_st+4)& (0+255),b
 35473  004FC8  D022               	goto	i2l14595
 35474  004FCA                     i2u1464_40:
 35475                           
 35476                           ; BSR set to: 1
 35477                           ;outputs_MC50.c: 308:                 {;outputs_MC50.c: 309:                     powerCo
      +                          ntrol_st.actualCycle=0;
 35478  004FCA  0E00               	movlw	0
 35479  004FCC  6F7F               	movwf	(_powerControl_st+4)& (0+255),b
 35480  004FCE  D01F               	goto	i2l14595
 35481  004FD0                     i2l14587:
 35482                           
 35483                           ;outputs_MC50.c: 313:             {;outputs_MC50.c: 314:                 if ( powerContr
      +                          ol_st.actualCycle>=(powerControl_st.decelarationCyclesOff+powerControl_st.decelarationCy
      +                          clesOn) )
 35484  004FD0  0101               	movlb	1	; () banked
 35485  004FD2  517C               	movf	(_powerControl_st+1)& (0+255),w,b
 35486  004FD4  C17D  F005         	movff	_powerControl_st+2,??_controlMotorForce
 35487  004FD8  6A06               	clrf	(??_controlMotorForce+1)^0,c
 35488  004FDA  2605               	addwf	??_controlMotorForce^0,f,c
 35489  004FDC  0E00               	movlw	0
 35490  004FDE  2206               	addwfc	(??_controlMotorForce+1)^0,f,c
 35491  004FE0  517F               	movf	(_powerControl_st+4)& (0+255),w,b
 35492  004FE2  6E07               	movwf	(??_controlMotorForce+2)^0,c
 35493  004FE4  6A08               	clrf	(??_controlMotorForce+3)^0,c
 35494  004FE6  5005               	movf	??_controlMotorForce^0,w,c
 35495  004FE8  5C07               	subwf	(??_controlMotorForce+2)^0,w,c
 35496  004FEA  5008               	movf	(??_controlMotorForce+3)^0,w,c
 35497  004FEC  0A80               	xorlw	128
 35498  004FEE  6E09               	movwf	(??_controlMotorForce+4)^0,c
 35499  004FF0  5006               	movf	(??_controlMotorForce+1)^0,w,c
 35500  004FF2  0A80               	xorlw	128
 35501  004FF4  5809               	subwfb	(??_controlMotorForce+4)^0,w,c
 35502  004FF6  B0D8               	btfsc	status,0,c
 35503  004FF8  D7E8               	goto	i2u1464_40
 35504  004FFA  D009               	goto	i2l14595
 35505  004FFC                     i2l2195:
 35506                           
 35507                           ; BSR set to: 1
 35508  004FFC  B68D               	btfsc	141,3,c	;volatile
 35509  004FFE  D007               	goto	i2l14595
 35510                           
 35511                           ; BSR set to: 1
 35512  005000  5193               	movf	_zeroCrossing& (0+255),w,b
 35513  005002  B4D8               	btfsc	status,2,c
 35514  005004  D004               	goto	i2l14595
 35515                           
 35516                           ; BSR set to: 1
 35517                           ;outputs_MC50.c: 328:     {;outputs_MC50.c: 330:         zeroCrossing=0;
 35518  005006  0E00               	movlw	0
 35519  005008  6F93               	movwf	_zeroCrossing& (0+255),b
 35520                           
 35521                           ;outputs_MC50.c: 331:         waitZeroPeak=0;
 35522  00500A  0E00               	movlw	0
 35523  00500C  6F92               	movwf	_waitZeroPeak& (0+255),b
 35524  00500E                     i2l14595:
 35525                           
 35526                           ; BSR set to: 1
 35527                           ;outputs_MC50.c: 336:     if ( PORTAbits.RA3!=0 )
 35528  00500E  B68D               	btfsc	141,3,c	;volatile
 35529                           
 35530                           ; BSR set to: 1
 35531                           ;outputs_MC50.c: 337:     {;outputs_MC50.c: 339:         zeroCrossingLength++;
 35532  005010  2B94               	incf	_zeroCrossingLength& (0+255),f,b
 35533                           
 35534                           ; BSR set to: 1
 35535                           ;outputs_MC50.c: 342:    var_sys.Control50or60hz ++;
 35536                           
 35537                           ;outputs_MC50.c: 340:     }
 35538  005012  2B4D               	incf	(_var_sys+77)& (0+255),f,b	;volatile
 35539                           
 35540                           ; BSR set to: 1
 35541                           ;outputs_MC50.c: 352:     stateMotor = VerifyElectricalBrake(var_sys.StateMotor);
 35542  005014  5100               	movf	_var_sys& (0+255),w,b	;volatile
 35543  005016  ECE3  F040         	call	i2_VerifyElectricalBrake
 35544  00501A  0100               	movlb	0	; () banked
 35545  00501C  6F83               	movwf	_stateMotor& (0+255),b
 35546                           
 35547                           ; BSR set to: 0
 35548                           ;outputs_MC50.c: 354:     if ( var_sys_NVM.electricBrake==1 && ts_system.TimeElectricBra
      +                          ke>0 && ts_system.TimeStopElectricBrake<=0 )
 35549  00501E  05AF               	decf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 35550  005020  A4D8               	btfss	status,2,c
 35551  005022  D02E               	goto	i2l14619
 35552                           
 35553                           ; BSR set to: 0
 35554  005024  0101               	movlb	1	; () banked
 35555  005026  BFC4               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 35556  005028  D02B               	goto	i2l14619
 35557  00502A  51C4               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 35558  00502C  E103               	bnz	i2u1470_40
 35559  00502E  05C3               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 35560  005030  A0D8               	btfss	status,0,c
 35561  005032  D026               	goto	i2l14619
 35562  005034                     i2u1470_40:
 35563                           
 35564                           ; BSR set to: 1
 35565  005034  BFDC               	btfsc	(_ts_system+65)& (0+255),7,b	;volatile
 35566  005036  D005               	goto	i2u1471_40
 35567  005038  51DC               	movf	(_ts_system+65)& (0+255),w,b	;volatile
 35568  00503A  E122               	bnz	i2l14619
 35569  00503C  05DB               	decf	(_ts_system+64)& (0+255),w,b	;volatile
 35570  00503E  B0D8               	btfsc	status,0,c
 35571  005040  D01F               	goto	i2l14619
 35572  005042                     i2u1471_40:
 35573                           
 35574                           ; BSR set to: 1
 35575                           ;outputs_MC50.c: 355:     {;outputs_MC50.c: 357:         if(stateMotor !=0 && StateTRIAC
      +                          ==1 && ts_system.ts_TRIACWait<=0 && powerControl_st.actualCycle==0 && ts_system.TimeElec
      +                          tricBrake<(((5+6)*( 100/50))-(5*( 100/50))) )
 35576  005042  0100               	movlb	0	; () banked
 35577  005044  5183               	movf	_stateMotor& (0+255),w,b
 35578  005046  B4D8               	btfsc	status,2,c
 35579  005048  D03A               	goto	i2l14631
 35580                           
 35581                           ; BSR set to: 0
 35582  00504A  0101               	movlb	1	; () banked
 35583  00504C  0591               	decf	_StateTRIAC& (0+255),w,b
 35584  00504E  A4D8               	btfss	status,2,c
 35585  005050  D036               	goto	i2l14631
 35586                           
 35587                           ; BSR set to: 1
 35588  005052  BFA2               	btfsc	(_ts_system+7)& (0+255),7,b	;volatile
 35589  005054  D005               	goto	i2u1474_40
 35590  005056  51A2               	movf	(_ts_system+7)& (0+255),w,b	;volatile
 35591  005058  E132               	bnz	i2l14631
 35592  00505A  05A1               	decf	(_ts_system+6)& (0+255),w,b	;volatile
 35593  00505C  B0D8               	btfsc	status,0,c
 35594  00505E  D02F               	goto	i2l14631
 35595  005060                     i2u1474_40:
 35596                           
 35597                           ; BSR set to: 1
 35598  005060  517F               	movf	(_powerControl_st+4)& (0+255),w,b
 35599  005062  A4D8               	btfss	status,2,c
 35600  005064  D02C               	goto	i2l14631
 35601                           
 35602                           ; BSR set to: 1
 35603  005066  BFC4               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 35604  005068  D006               	goto	i2u1476_40
 35605  00506A  51C4               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 35606  00506C  E128               	bnz	i2l14631
 35607  00506E  0E0C               	movlw	12
 35608  005070  5DC3               	subwf	(_ts_system+40)& (0+255),w,b	;volatile
 35609  005072  B0D8               	btfsc	status,0,c
 35610  005074  D024               	goto	i2l14631
 35611  005076                     i2u1476_40:
 35612                           
 35613                           ; BSR set to: 1
 35614                           
 35615                           ;outputs_MC50.c: 358:         {;outputs_MC50.c: 359:            do { LATDbits.LATD7 = 1;
      +                           } while(0);
 35616  005076  8E86               	bsf	134,7,c	;volatile
 35617                           
 35618                           ; BSR set to: 1
 35619                           ;outputs_MC50.c: 360:            ts_system.ts_TRIACWait=-(25*200);
 35620  005078  0EEC               	movlw	236
 35621  00507A  6FA2               	movwf	(_ts_system+7)& (0+255),b	;volatile
 35622  00507C  0E78               	movlw	120
 35623  00507E  D01A               	goto	L118
 35624  005080                     i2l14619:
 35625                           
 35626                           ;outputs_MC50.c: 366:     {;outputs_MC50.c: 368:         if(stateMotor !=0 && ts_system.
      +                          ts_TimeSlotTRIAC<difTime && StateTRIAC==1 && ts_system.ts_TRIACWait<=0 && var_sys.InStop
      +                          ing==NO)
 35627  005080  0100               	movlb	0	; () banked
 35628  005082  5183               	movf	_stateMotor& (0+255),w,b
 35629  005084  B4D8               	btfsc	status,2,c
 35630  005086  D01B               	goto	i2l14631
 35631                           
 35632                           ; BSR set to: 0
 35633  005088  0101               	movlb	1	; () banked
 35634  00508A  5190               	movf	_difTime& (0+255),w,b
 35635  00508C  5DA0               	subwf	(_ts_system+5)& (0+255),w,b	;volatile
 35636  00508E  B0D8               	btfsc	status,0,c
 35637  005090  D016               	goto	i2l14631
 35638                           
 35639                           ; BSR set to: 1
 35640  005092  0591               	decf	_StateTRIAC& (0+255),w,b
 35641  005094  A4D8               	btfss	status,2,c
 35642  005096  D013               	goto	i2l14631
 35643                           
 35644                           ; BSR set to: 1
 35645  005098  BFA2               	btfsc	(_ts_system+7)& (0+255),7,b	;volatile
 35646  00509A  D005               	goto	i2u1480_40
 35647  00509C  51A2               	movf	(_ts_system+7)& (0+255),w,b	;volatile
 35648  00509E  E10F               	bnz	i2l14631
 35649  0050A0  05A1               	decf	(_ts_system+6)& (0+255),w,b	;volatile
 35650  0050A2  B0D8               	btfsc	status,0,c
 35651  0050A4  D00C               	goto	i2l14631
 35652  0050A6                     i2u1480_40:
 35653                           
 35654                           ; BSR set to: 1
 35655  0050A6  510D               	movf	(_var_sys+13)& (0+255),w,b	;volatile
 35656  0050A8  A4D8               	btfss	status,2,c
 35657  0050AA  D009               	goto	i2l14631
 35658                           
 35659                           ; BSR set to: 1
 35660                           
 35661                           ;outputs_MC50.c: 369:         {;outputs_MC50.c: 370:            do { LATDbits.LATD7 = 1;
      +                           } while(0);
 35662  0050AC  8E86               	bsf	134,7,c	;volatile
 35663                           
 35664                           ; BSR set to: 1
 35665                           ;outputs_MC50.c: 371:            ts_system.ts_TRIACWait=-200;
 35666  0050AE  0EFF               	movlw	255
 35667  0050B0  6FA2               	movwf	(_ts_system+7)& (0+255),b	;volatile
 35668  0050B2  0E38               	movlw	56
 35669  0050B4                     L118:
 35670  0050B4  6FA1               	movwf	(_ts_system+6)& (0+255),b	;volatile
 35671                           
 35672                           ;outputs_MC50.c: 372:            var_sys.TriacON=YES;
 35673  0050B6  0E01               	movlw	1
 35674  0050B8  6F0C               	movwf	(_var_sys+12)& (0+255),b	;volatile
 35675                           
 35676                           ;outputs_MC50.c: 373:            StateTRIAC=0;
 35677  0050BA  0E00               	movlw	0
 35678  0050BC  6F91               	movwf	_StateTRIAC& (0+255),b
 35679  0050BE                     i2l14631:
 35680                           
 35681                           ;outputs_MC50.c: 377:     if (((ts_system.ts_TimeSlotTRIAC <= 20 )&& ts_system.TimeElect
      +                          ricBrake<0) || (stateMotor==0))
 35682  0050BE  0E15               	movlw	21
 35683  0050C0  0101               	movlb	1	; () banked
 35684  0050C2  61A0               	cpfslt	(_ts_system+5)& (0+255),b	;volatile
 35685  0050C4  D002               	goto	i2u1483_40
 35686                           
 35687                           ; BSR set to: 1
 35688  0050C6  BFC4               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 35689  0050C8  D004               	goto	i2u1484_40
 35690  0050CA                     i2u1483_40:
 35691                           
 35692                           ; BSR set to: 1
 35693  0050CA  0100               	movlb	0	; () banked
 35694  0050CC  5183               	movf	_stateMotor& (0+255),w,b
 35695  0050CE  A4D8               	btfss	status,2,c
 35696  0050D0  D004               	goto	i2l2222
 35697  0050D2                     i2u1484_40:
 35698                           
 35699                           ;outputs_MC50.c: 378:     {;outputs_MC50.c: 384:             do { LATDbits.LATD7 = 0; } 
      +                          while(0);
 35700  0050D2  9E86               	bcf	134,7,c	;volatile
 35701                           
 35702                           ;outputs_MC50.c: 385:             var_sys.TriacON=NO;
 35703  0050D4  0E00               	movlw	0
 35704  0050D6  0101               	movlb	1	; () banked
 35705  0050D8  6F0C               	movwf	(_var_sys+12)& (0+255),b	;volatile
 35706  0050DA                     i2l2222:
 35707                           
 35708                           ;outputs_MC50.c: 396:     if(stateMotor !=0 && ts_system.ts_TRIACWait>0)
 35709  0050DA  0100               	movlb	0	; () banked
 35710  0050DC  5183               	movf	_stateMotor& (0+255),w,b
 35711  0050DE  B4D8               	btfsc	status,2,c
 35712  0050E0  D00C               	goto	i2l14643
 35713                           
 35714                           ; BSR set to: 0
 35715  0050E2  0101               	movlb	1	; () banked
 35716  0050E4  BFA2               	btfsc	(_ts_system+7)& (0+255),7,b	;volatile
 35717  0050E6  D009               	goto	i2l14643
 35718  0050E8  51A2               	movf	(_ts_system+7)& (0+255),w,b	;volatile
 35719  0050EA  E103               	bnz	i2u1486_40
 35720  0050EC  05A1               	decf	(_ts_system+6)& (0+255),w,b	;volatile
 35721  0050EE  A0D8               	btfss	status,0,c
 35722  0050F0  D004               	goto	i2l14643
 35723  0050F2                     i2u1486_40:
 35724                           
 35725                           ; BSR set to: 1
 35726                           ;outputs_MC50.c: 397:     {;outputs_MC50.c: 398:         ts_system.ts_TRIACWait--;
 35727  0050F2  07A1               	decf	(_ts_system+6)& (0+255),f,b	;volatile
 35728  0050F4  A0D8               	btfss	status,0,c
 35729  0050F6  07A2               	decf	(_ts_system+7)& (0+255),f,b	;volatile
 35730                           
 35731                           ;outputs_MC50.c: 399:     }
 35732  0050F8  0012               	return	
 35733  0050FA                     i2l14643:
 35734  0050FA  0100               	movlb	0	; () banked
 35735  0050FC  5183               	movf	_stateMotor& (0+255),w,b
 35736  0050FE  A4D8               	btfss	status,2,c
 35737  005100  0012               	return	
 35738                           
 35739                           ; BSR set to: 0
 35740  005102  0101               	movlb	1	; () banked
 35741  005104  AFA2               	btfss	(_ts_system+7)& (0+255),7,b	;volatile
 35742  005106  0012               	return	
 35743                           
 35744                           ; BSR set to: 1
 35745                           ;outputs_MC50.c: 401:     {;outputs_MC50.c: 402:         ts_system.ts_TRIACWait++;
 35746  005108  4BA1               	infsnz	(_ts_system+6)& (0+255),f,b	;volatile
 35747  00510A  2BA2               	incf	(_ts_system+7)& (0+255),f,b	;volatile
 35748  00510C  0012               	return		;funcret
 35749  00510E                     __end_of_controlMotorForce:
 35750                           	callstack 0
 35751                           
 35752 ;; *************** function i2_VerifyElectricalBrake *****************
 35753 ;; Defined at:
 35754 ;;		line 658 in file "outputs_MC50.c"
 35755 ;; Parameters:    Size  Location     Type
 35756 ;;  actualState     1    wreg     enum E10381
 35757 ;; Auto vars:     Size  Location     Type
 35758 ;;  actualState     1    1[COMRAM] enum E10381
 35759 ;;  tempState       1    0[COMRAM] enum E10381
 35760 ;; Return value:  Size  Location     Type
 35761 ;;                  1    wreg      enum E10381
 35762 ;; Registers used:
 35763 ;;		wreg, status,2, status,0
 35764 ;; Tracked objects:
 35765 ;;		On entry : 3F/1
 35766 ;;		On exit  : 3E/0
 35767 ;;		Unchanged: 0/0
 35768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35770 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35772 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35773 ;;Total ram usage:        2 bytes
 35774 ;; Hardware stack levels used: 1
 35775 ;; This function calls:
 35776 ;;		Nothing
 35777 ;; This function is called by:
 35778 ;;		_controlMotorForce
 35779 ;; This function uses a non-reentrant model
 35780 ;;
 35781                           
 35782                           	psect	text197
 35783  0081C6                     __ptext197:
 35784                           	callstack 0
 35785  0081C6                     i2_VerifyElectricalBrake:
 35786                           	callstack 14
 35787                           
 35788                           ;incstack = 0
 35789                           ;i2VerifyElectricalBrake@actualState stored from wreg
 35790  0081C6  6E02               	movwf	i2VerifyElectricalBrake@actualState^0,c
 35791                           
 35792                           ;outputs_MC50.c: 658: stateMotor_enum VerifyElectricalBrake(stateMotor_enum actualState)
      +                          ;outputs_MC50.c: 659: {;outputs_MC50.c: 660:     stateMotor_enum tempState;;outputs_MC50
      +                          .c: 661:     tempState=actualState;
 35793  0081C8  C002  F001         	movff	i2VerifyElectricalBrake@actualState,i2VerifyElectricalBrake@tempState
 35794                           
 35795                           ;outputs_MC50.c: 662:     if(var_sys_NVM.electricBrake==1 && actualState==Stopped && ts_
      +                          system.TimeStopElectricBrake<=0)
 35796  0081CC  0100               	movlb	0	; () banked
 35797  0081CE  05AF               	decf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 35798  0081D0  A4D8               	btfss	status,2,c
 35799  0081D2  D02E               	goto	i2l2323
 35800                           
 35801                           ; BSR set to: 0
 35802  0081D4  5002               	movf	i2VerifyElectricalBrake@actualState^0,w,c
 35803  0081D6  A4D8               	btfss	status,2,c
 35804  0081D8  D02B               	goto	i2l2323
 35805                           
 35806                           ; BSR set to: 0
 35807  0081DA  0101               	movlb	1	; () banked
 35808  0081DC  BFDC               	btfsc	(_ts_system+65)& (0+255),7,b	;volatile
 35809  0081DE  D005               	goto	i2u1417_40
 35810  0081E0  51DC               	movf	(_ts_system+65)& (0+255),w,b	;volatile
 35811  0081E2  E126               	bnz	i2l2323
 35812  0081E4  05DB               	decf	(_ts_system+64)& (0+255),w,b	;volatile
 35813  0081E6  B0D8               	btfsc	status,0,c
 35814  0081E8  D023               	goto	i2l2323
 35815  0081EA                     i2u1417_40:
 35816                           
 35817                           ; BSR set to: 1
 35818                           ;outputs_MC50.c: 663:     {;outputs_MC50.c: 664:         if(actualState!=brakeElectric_s
      +                          t.lastState && brakeElectric_st.ElectricBrakeIsActive==NO )
 35819  0081EA  5002               	movf	i2VerifyElectricalBrake@actualState^0,w,c
 35820  0081EC  0100               	movlb	0	; () banked
 35821  0081EE  1978               	xorwf	_brakeElectric_st& (0+255),w,b
 35822  0081F0  B4D8               	btfsc	status,2,c
 35823  0081F2  D00B               	goto	i2l14261
 35824                           
 35825                           ; BSR set to: 0
 35826  0081F4  5179               	movf	(_brakeElectric_st+1)& (0+255),w,b
 35827  0081F6  A4D8               	btfss	status,2,c
 35828  0081F8  D008               	goto	i2l14261
 35829                           
 35830                           ; BSR set to: 0
 35831                           ;outputs_MC50.c: 665:         {;outputs_MC50.c: 666:             brakeElectric_st.Electr
      +                          icBrakeIsActive=YES;
 35832  0081FA  0E01               	movlw	1
 35833  0081FC  6F79               	movwf	(_brakeElectric_st+1)& (0+255),b
 35834                           
 35835                           ;outputs_MC50.c: 668:             ts_system.TimeElectricBrake=((5+6)*( 100/50));
 35836  0081FE  0E00               	movlw	0
 35837  008200  0101               	movlb	1	; () banked
 35838  008202  6FC4               	movwf	(_ts_system+41)& (0+255),b	;volatile
 35839  008204  0E16               	movlw	22
 35840  008206  6FC3               	movwf	(_ts_system+40)& (0+255),b	;volatile
 35841                           
 35842                           ;outputs_MC50.c: 670:         }
 35843  008208  D018               	goto	i2l2328
 35844  00820A                     i2l14261:
 35845                           
 35846                           ; BSR set to: 0
 35847  00820A  0579               	decf	(_brakeElectric_st+1)& (0+255),w,b
 35848  00820C  A4D8               	btfss	status,2,c
 35849  00820E  D00B               	goto	i2l14267
 35850                           
 35851                           ; BSR set to: 0
 35852  008210  0101               	movlb	1	; () banked
 35853  008212  BFC4               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 35854  008214  D008               	goto	i2l14267
 35855  008216  51C4               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 35856  008218  E103               	bnz	i2u1421_40
 35857  00821A  05C3               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 35858  00821C  A0D8               	btfss	status,0,c
 35859  00821E  D003               	goto	i2l14267
 35860  008220                     i2u1421_40:
 35861                           
 35862                           ; BSR set to: 1
 35863                           ;outputs_MC50.c: 672:         {;outputs_MC50.c: 673:             tempState=InOpenFull;
 35864  008220  0E01               	movlw	1
 35865  008222  6E01               	movwf	i2VerifyElectricalBrake@tempState^0,c
 35866                           
 35867                           ;outputs_MC50.c: 686:         }
 35868  008224  D00A               	goto	i2l2328
 35869  008226                     i2l14267:
 35870                           
 35871                           ;outputs_MC50.c: 688:         {;outputs_MC50.c: 689:             brakeElectric_st.lastSt
      +                          ate=Stopped;
 35872  008226  0E00               	movlw	0
 35873  008228  0100               	movlb	0	; () banked
 35874  00822A  6F78               	movwf	_brakeElectric_st& (0+255),b
 35875                           
 35876                           ;outputs_MC50.c: 690:             brakeElectric_st.ElectricBrakeIsActive=NO;
 35877  00822C  0E00               	movlw	0
 35878  00822E  D004               	goto	L119
 35879  008230                     i2l2323:
 35880                           
 35881                           ;outputs_MC50.c: 695:     {;outputs_MC50.c: 696:         brakeElectric_st.lastState=actu
      +                          alState;
 35882  008230  C002  F078         	movff	i2VerifyElectricalBrake@actualState,_brakeElectric_st
 35883                           
 35884                           ;outputs_MC50.c: 697:         brakeElectric_st.ElectricBrakeIsActive=NO;
 35885  008234  0E00               	movlw	0
 35886  008236  0100               	movlb	0	; () banked
 35887  008238                     L119:
 35888  008238  6F79               	movwf	(_brakeElectric_st+1)& (0+255),b
 35889  00823A                     i2l2328:
 35890                           
 35891                           ;outputs_MC50.c: 700:     return tempState;
 35892  00823A  5001               	movf	i2VerifyElectricalBrake@tempState^0,w,c
 35893  00823C  0012               	return		;funcret
 35894  00823E                     __end_ofi2_VerifyElectricalBrake:
 35895                           	callstack 0
 35896                           
 35897 ;; *************** function i2_GetMotorPower *****************
 35898 ;; Defined at:
 35899 ;;		line 405 in file "outputs_MC50.c"
 35900 ;; Parameters:    Size  Location     Type
 35901 ;;		None
 35902 ;; Auto vars:     Size  Location     Type
 35903 ;;  defineatraso    1    3[COMRAM] unsigned char 
 35904 ;; Return value:  Size  Location     Type
 35905 ;;                  1    wreg      unsigned char 
 35906 ;; Registers used:
 35907 ;;		wreg, status,2, status,0, prodl, prodh
 35908 ;; Tracked objects:
 35909 ;;		On entry : 3F/E
 35910 ;;		On exit  : 3F/1
 35911 ;;		Unchanged: 0/0
 35912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35914 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35915 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35916 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35917 ;;Total ram usage:        4 bytes
 35918 ;; Hardware stack levels used: 1
 35919 ;; This function calls:
 35920 ;;		Nothing
 35921 ;; This function is called by:
 35922 ;;		_controlMotorForce
 35923 ;; This function uses a non-reentrant model
 35924 ;;
 35925                           
 35926                           	psect	text198
 35927  0074A2                     __ptext198:
 35928                           	callstack 0
 35929  0074A2                     i2_GetMotorPower:
 35930                           	callstack 14
 35931                           
 35932                           ; BSR set to: 14
 35933                           ;outputs_MC50.c: 408:     unsigned char defineatraso;;outputs_MC50.c: 413:     if(powerC
      +                          ontrol_st.decelarationActive==YES)
 35934                           
 35935                           ;incstack = 0
 35936  0074A2  0101               	movlb	1	; () banked
 35937  0074A4  057B               	decf	_powerControl_st& (0+255),w,b
 35938  0074A6  A4D8               	btfss	status,2,c
 35939  0074A8  D006               	goto	i2l14211
 35940                           
 35941                           ; BSR set to: 1
 35942                           ;outputs_MC50.c: 414:     {;outputs_MC50.c: 415:        temppower=(var_sys_NVM.motorPowe
      +                          r*6);
 35943  0074AA  0100               	movlb	0	; () banked
 35944  0074AC  519A               	movf	(_var_sys_NVM+2)& (0+255),w,b	;volatile
 35945  0074AE  0D06               	mullw	6
 35946  0074B0  CFF3 F18F          	movff	prodl,_temppower
 35947                           
 35948                           ;outputs_MC50.c: 416:     }
 35949  0074B4  D043               	goto	i2l2240
 35950  0074B6                     i2l14211:
 35951                           
 35952                           ; BSR set to: 1
 35953                           ;outputs_MC50.c: 418:     {;outputs_MC50.c: 419:         fullmotorPower=(var_sys_NVM.mot
      +                          orPower*6);
 35954  0074B6  0100               	movlb	0	; () banked
 35955  0074B8  519A               	movf	(_var_sys_NVM+2)& (0+255),w,b	;volatile
 35956  0074BA  0D06               	mullw	6
 35957  0074BC  CFF3 F082          	movff	prodl,_fullmotorPower
 35958                           
 35959                           ; BSR set to: 0
 35960                           ;outputs_MC50.c: 421:         if(var_sys.velocityFactor>0)
 35961  0074C0  0101               	movlb	1	; () banked
 35962  0074C2  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 35963  0074C4  D01C               	goto	i2l14221
 35964  0074C6  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 35965  0074C8  E103               	bnz	i2u1407_40
 35966  0074CA  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 35967  0074CC  A0D8               	btfss	status,0,c
 35968  0074CE  D017               	goto	i2l14221
 35969  0074D0                     i2u1407_40:
 35970                           
 35971                           ; BSR set to: 1
 35972                           ;outputs_MC50.c: 422:         {;outputs_MC50.c: 423:             if(var_sys.velocityFact
      +                          or>fullmotorPower)
 35973  0074D0  0100               	movlb	0	; () banked
 35974  0074D2  5182               	movf	_fullmotorPower& (0+255),w,b
 35975  0074D4  6E01               	movwf	??i2_GetMotorPower^0,c
 35976  0074D6  6A02               	clrf	(??i2_GetMotorPower+1)^0,c
 35977  0074D8  0101               	movlb	1	; () banked
 35978  0074DA  510E               	movf	(_var_sys+14)& (0+255),w,b	;volatile
 35979  0074DC  5C01               	subwf	??i2_GetMotorPower^0,w,c
 35980  0074DE  5002               	movf	(??i2_GetMotorPower+1)^0,w,c
 35981  0074E0  0A80               	xorlw	128
 35982  0074E2  6E03               	movwf	(??i2_GetMotorPower+2)^0,c
 35983  0074E4  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 35984  0074E6  0A80               	xorlw	128
 35985  0074E8  5803               	subwfb	(??i2_GetMotorPower+2)^0,w,c
 35986  0074EA  B0D8               	btfsc	status,0,c
 35987  0074EC  D002               	goto	i2l14219
 35988                           
 35989                           ; BSR set to: 1
 35990                           ;outputs_MC50.c: 424:             {;outputs_MC50.c: 425:                 temppower=1;
 35991  0074EE  0E01               	movlw	1
 35992  0074F0  D004               	goto	L121
 35993  0074F2                     i2l14219:
 35994                           
 35995                           ; BSR set to: 1
 35996                           ;outputs_MC50.c: 428:             {;outputs_MC50.c: 430:                 temppower =full
      +                          motorPower-var_sys.velocityFactor;
 35997  0074F2  510E               	movf	(_var_sys+14)& (0+255),w,b	;volatile
 35998  0074F4  0100               	movlb	0	; () banked
 35999  0074F6  5D82               	subwf	_fullmotorPower& (0+255),w,b
 36000  0074F8  D017               	goto	L122
 36001  0074FA                     L121:
 36002  0074FA  6F8F               	movwf	_temppower& (0+255),b
 36003  0074FC  D01F               	goto	i2l2240
 36004  0074FE                     i2l14221:
 36005                           
 36006                           ; BSR set to: 1
 36007  0074FE  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 36008  007500  D005               	goto	i2u1409_40
 36009  007502  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 36010  007504  E113               	bnz	i2l14231
 36011  007506  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 36012  007508  B0D8               	btfsc	status,0,c
 36013  00750A  D010               	goto	i2l14231
 36014  00750C                     i2u1409_40:
 36015                           
 36016                           ; BSR set to: 1
 36017  00750C  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 36018  00750E  D005               	goto	i2u1410_40
 36019  007510  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 36020  007512  E10C               	bnz	i2l14231
 36021  007514  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 36022  007516  B0D8               	btfsc	status,0,c
 36023  007518  D009               	goto	i2l14231
 36024  00751A                     i2u1410_40:
 36025                           
 36026                           ; BSR set to: 1
 36027                           ;outputs_MC50.c: 434:         {;outputs_MC50.c: 435:             temppower =fullmotorPow
      +                          er;
 36028  00751A  C082  F18F         	movff	_fullmotorPower,_temppower
 36029                           
 36030                           ; BSR set to: 1
 36031                           ;outputs_MC50.c: 438:             if ( var_sys_NVM.motorPower>8 )
 36032  00751E  0E08               	movlw	8
 36033  007520  0100               	movlb	0	; () banked
 36034  007522  659A               	cpfsgt	(_var_sys_NVM+2)& (0+255),b	;volatile
 36035  007524  D00B               	goto	i2l2240
 36036                           
 36037                           ; BSR set to: 0
 36038                           ;outputs_MC50.c: 439:             {;outputs_MC50.c: 440:                 temppower = 80 
      +                          -23 +1;
 36039  007526  0E3A               	movlw	58
 36040  007528                     L122:
 36041  007528  0101               	movlb	1	; () banked
 36042  00752A  D7E7               	goto	L121
 36043  00752C                     i2l14231:
 36044                           
 36045                           ; BSR set to: 1
 36046  00752C  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 36047  00752E  D006               	goto	i2l2240
 36048  007530  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 36049  007532  E102               	bnz	i2u1412_40
 36050  007534  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 36051  007536  B0D8               	btfsc	status,0,c
 36052  007538                     i2u1412_40:
 36053                           
 36054                           ; BSR set to: 1
 36055                           ;outputs_MC50.c: 447:                 temppower = var_sys.velocityFactorstop;
 36056  007538  C110  F18F         	movff	_var_sys+16,_temppower	;volatile
 36057  00753C                     i2l2240:
 36058                           
 36059                           ;outputs_MC50.c: 451:     if ((var_sys.velocityFactorstop > 0)&&(var_sys.velocityFactor 
      +                          <= 0 )){
 36060  00753C  0101               	movlb	1	; () banked
 36061  00753E  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 36062  007540  D00E               	goto	i2l14241
 36063  007542  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 36064  007544  E103               	bnz	i2u1413_40
 36065  007546  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 36066  007548  A0D8               	btfss	status,0,c
 36067  00754A  D009               	goto	i2l14241
 36068  00754C                     i2u1413_40:
 36069                           
 36070                           ; BSR set to: 1
 36071  00754C  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 36072  00754E  D005               	goto	i2u1414_40
 36073  007550  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 36074  007552  E105               	bnz	i2l14241
 36075  007554  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 36076  007556  B0D8               	btfsc	status,0,c
 36077  007558  D002               	goto	i2l14241
 36078  00755A                     i2u1414_40:
 36079                           
 36080                           ; BSR set to: 1
 36081                           ;outputs_MC50.c: 452:     defineatraso = 5;
 36082  00755A  0E05               	movlw	5
 36083  00755C  D001               	goto	L120
 36084  00755E                     i2l14241:
 36085                           
 36086                           ; BSR set to: 1
 36087                           ;outputs_MC50.c: 455:     {;outputs_MC50.c: 456:     defineatraso = 23;
 36088  00755E  0E17               	movlw	23
 36089  007560                     L120:
 36090  007560  6E04               	movwf	i2GetMotorPower@defineatraso^0,c
 36091                           
 36092                           ; BSR set to: 1
 36093                           ;outputs_MC50.c: 459:     return temppower+defineatraso;
 36094  007562  518F               	movf	_temppower& (0+255),w,b
 36095  007564  2404               	addwf	i2GetMotorPower@defineatraso^0,w,c
 36096                           
 36097                           ; BSR set to: 1
 36098  007566  0012               	return		;funcret
 36099  007568                     __end_ofi2_GetMotorPower:
 36100                           	callstack 0
 36101                           
 36102 ;; *************** function _TMR1_WriteTimer *****************
 36103 ;; Defined at:
 36104 ;;		line 129 in file "mcc_generated_files/tmr1.c"
 36105 ;; Parameters:    Size  Location     Type
 36106 ;;  timerVal        2    0[COMRAM] unsigned short 
 36107 ;; Auto vars:     Size  Location     Type
 36108 ;;		None
 36109 ;; Return value:  Size  Location     Type
 36110 ;;                  1    wreg      void 
 36111 ;; Registers used:
 36112 ;;		None
 36113 ;; Tracked objects:
 36114 ;;		On entry : 3F/1
 36115 ;;		On exit  : 3F/1
 36116 ;;		Unchanged: 3F/0
 36117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36118 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36121 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36122 ;;Total ram usage:        2 bytes
 36123 ;; Hardware stack levels used: 1
 36124 ;; This function calls:
 36125 ;;		Nothing
 36126 ;; This function is called by:
 36127 ;;		_TMR1_ISR
 36128 ;; This function uses a non-reentrant model
 36129 ;;
 36130                           
 36131                           	psect	text199
 36132  009502                     __ptext199:
 36133                           	callstack 0
 36134  009502                     _TMR1_WriteTimer:
 36135                           	callstack 15
 36136                           
 36137                           ; BSR set to: 1
 36138                           ;mcc_generated_files/tmr1.c: 129: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 130: {;mcc_generated_files/tmr1.c: 131:     if (T1CONbits.nT1SYNC == 1)
 36139                           
 36140                           ; BSR set to: 1
 36141                           ;incstack = 0
 36142  009502  A4CF               	btfss	207,2,c	;volatile
 36143  009504  D007               	goto	i2l1147
 36144                           
 36145                           ; BSR set to: 1
 36146                           ;mcc_generated_files/tmr1.c: 132:     {;mcc_generated_files/tmr1.c: 134:         T1CONbi
      +                          ts.TMR1ON = 0;
 36147  009506  90CF               	bcf	207,0,c	;volatile
 36148                           
 36149                           ;mcc_generated_files/tmr1.c: 137:         TMR1H = (uint8_t)(timerVal >> 8);
 36150  009508  C002  FFCE         	movff	TMR1_WriteTimer@timerVal+1,4046	;volatile
 36151                           
 36152                           ;mcc_generated_files/tmr1.c: 138:         TMR1L = (uint8_t)timerVal;
 36153  00950C  C001  FFCD         	movff	TMR1_WriteTimer@timerVal,4045	;volatile
 36154                           
 36155                           ;mcc_generated_files/tmr1.c: 141:         T1CONbits.TMR1ON =1;
 36156  009510  80CF               	bsf	207,0,c	;volatile
 36157                           
 36158                           ;mcc_generated_files/tmr1.c: 142:     }
 36159  009512  0012               	return	
 36160  009514                     i2l1147:
 36161                           
 36162                           ; BSR set to: 1
 36163                           ;mcc_generated_files/tmr1.c: 144:     {;mcc_generated_files/tmr1.c: 146:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
 36164  009514  C002  FFCE         	movff	TMR1_WriteTimer@timerVal+1,4046	;volatile
 36165                           
 36166                           ;mcc_generated_files/tmr1.c: 147:         TMR1L = (uint8_t)timerVal;
 36167  009518  C001  FFCD         	movff	TMR1_WriteTimer@timerVal,4045	;volatile
 36168                           
 36169                           ; BSR set to: 1
 36170  00951C  0012               	return		;funcret
 36171  00951E                     __end_of_TMR1_WriteTimer:
 36172                           	callstack 0
 36173                           
 36174 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 36175 ;; Defined at:
 36176 ;;		line 196 in file "mcc_generated_files/tmr1.c"
 36177 ;; Parameters:    Size  Location     Type
 36178 ;;		None
 36179 ;; Auto vars:     Size  Location     Type
 36180 ;;		None
 36181 ;; Return value:  Size  Location     Type
 36182 ;;                  1    wreg      void 
 36183 ;; Registers used:
 36184 ;;		None
 36185 ;; Tracked objects:
 36186 ;;		On entry : 3F/2
 36187 ;;		On exit  : 3F/2
 36188 ;;		Unchanged: 3F/0
 36189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36193 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36194 ;;Total ram usage:        0 bytes
 36195 ;; Hardware stack levels used: 1
 36196 ;; This function calls:
 36197 ;;		Nothing
 36198 ;; This function is called by:
 36199 ;;		_TMR1_Initialize
 36200 ;;		_TMR1_ISR
 36201 ;; This function uses a non-reentrant model
 36202 ;;
 36203                           
 36204                           	psect	text200
 36205  00983C                     __ptext200:
 36206                           	callstack 0
 36207  00983C                     _TMR1_DefaultInterruptHandler:
 36208                           	callstack 15
 36209                           
 36210                           ; BSR set to: 2
 36211                           
 36212                           ; BSR set to: 1
 36213                           ;incstack = 0
 36214  00983C  0012               	return		;funcret
 36215  00983E                     __end_of_TMR1_DefaultInterruptHandler:
 36216                           	callstack 0
 36217                           
 36218 ;; *************** function _TMR0_ISR *****************
 36219 ;; Defined at:
 36220 ;;		line 127 in file "mcc_generated_files/tmr0.c"
 36221 ;; Parameters:    Size  Location     Type
 36222 ;;		None
 36223 ;; Auto vars:     Size  Location     Type
 36224 ;;		None
 36225 ;; Return value:  Size  Location     Type
 36226 ;;                  1    wreg      void 
 36227 ;; Registers used:
 36228 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 36229 ;; Tracked objects:
 36230 ;;		On entry : 3F/E
 36231 ;;		On exit  : 0/0
 36232 ;;		Unchanged: 0/0
 36233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36237 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36238 ;;Total ram usage:        0 bytes
 36239 ;; Hardware stack levels used: 1
 36240 ;; Hardware stack levels required when called: 1
 36241 ;; This function calls:
 36242 ;;		Absolute function
 36243 ;;		_TMR0_DefaultInterruptHandler
 36244 ;;		_rxi
 36245 ;; This function is called by:
 36246 ;;		_INTERRUPT_InterruptManager
 36247 ;; This function uses a non-reentrant model
 36248 ;;
 36249                           
 36250                           	psect	text201
 36251  0093B6                     __ptext201:
 36252                           	callstack 0
 36253  0093B6                     _TMR0_ISR:
 36254                           	callstack 15
 36255                           
 36256                           ; BSR set to: 14
 36257                           ;mcc_generated_files/tmr0.c: 130:     PIR0bits.TMR0IF = 0;
 36258                           
 36259                           ; BSR set to: 2
 36260                           ;incstack = 0
 36261  0093B6  9BCA               	bcf	202,5,b	;volatile
 36262                           
 36263                           ; BSR set to: 14
 36264                           ;mcc_generated_files/tmr0.c: 132:     rxi();
 36265  0093B8  ECEC  F023         	call	_rxi	;wreg free
 36266                           
 36267                           ;mcc_generated_files/tmr0.c: 134:     if(TMR0_InterruptHandler)
 36268  0093BC  0102               	movlb	2	; () banked
 36269  0093BE  51E5               	movf	_TMR0_InterruptHandler& (0+255),w,b
 36270  0093C0  11E6               	iorwf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 36271  0093C2  B4D8               	btfsc	status,2,c
 36272  0093C4  0012               	return	
 36273                           
 36274                           ; BSR set to: 2
 36275                           ;mcc_generated_files/tmr0.c: 135:     {;mcc_generated_files/tmr0.c: 136:         TMR0_In
      +                          terruptHandler();
 36276  0093C6  D801               	call	i2u1865_48
 36277  0093C8  0012               	return	
 36278  0093CA                     i2u1865_48:
 36279  0093CA  0005               	push	
 36280  0093CC  6EFA               	movwf	pclath,c
 36281  0093CE  51E5               	movf	_TMR0_InterruptHandler& (0+255),w,b
 36282  0093D0  6EFD               	movwf	tosl,c
 36283  0093D2  51E6               	movf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 36284  0093D4  6EFE               	movwf	tosh,c
 36285  0093D6  6AFF               	clrf	tosu,c
 36286  0093D8  50FA               	movf	pclath,w,c
 36287  0093DA  0012               	return		;indir
 36288  0093DC                     __end_of_TMR0_ISR:
 36289                           	callstack 0
 36290                           
 36291 ;; *************** function _rxi *****************
 36292 ;; Defined at:
 36293 ;;		line 41 in file "inputs_MC50.c"
 36294 ;; Parameters:    Size  Location     Type
 36295 ;;		None
 36296 ;; Auto vars:     Size  Location     Type
 36297 ;;		None
 36298 ;; Return value:  Size  Location     Type
 36299 ;;                  1    wreg      void 
 36300 ;; Registers used:
 36301 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 36302 ;; Tracked objects:
 36303 ;;		On entry : 3F/E
 36304 ;;		On exit  : 3C/0
 36305 ;;		Unchanged: 0/0
 36306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36309 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36310 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36311 ;;Total ram usage:        2 bytes
 36312 ;; Hardware stack levels used: 1
 36313 ;; This function calls:
 36314 ;;		Nothing
 36315 ;; This function is called by:
 36316 ;;		_TMR0_ISR
 36317 ;; This function uses a non-reentrant model
 36318 ;;
 36319                           
 36320                           	psect	text202
 36321  0047D8                     __ptext202:
 36322                           	callstack 0
 36323  0047D8                     _rxi:
 36324                           	callstack 15
 36325                           
 36326                           ; BSR set to: 14
 36327                           ;inputs_MC50.c: 43:     RFBit = PORTBbits.RB3;
 36328                           
 36329                           ;incstack = 0
 36330  0047D8  0E00               	movlw	0
 36331  0047DA  B68E               	btfsc	142,3,c	;volatile
 36332  0047DC  0E01               	movlw	1
 36333  0047DE  0100               	movlb	0	; () banked
 36334  0047E0  6F89               	movwf	_RFBit& (0+255),b	;volatile
 36335                           
 36336                           ; BSR set to: 0
 36337                           ;inputs_MC50.c: 47:     if (RFFull)
 36338  0047E2  518B               	movf	_RFFull& (0+255),w,b	;volatile
 36339  0047E4  A4D8               	btfss	status,2,c
 36340  0047E6  0012               	return	
 36341  0047E8  D116               	goto	i2l14525
 36342  0047EA                     i2l14415:
 36343                           
 36344                           ; BSR set to: 1
 36345                           ;inputs_MC50.c: 53:             if (RFBit == 0) {
 36346  0047EA  0100               	movlb	0	; () banked
 36347  0047EC  5189               	movf	_RFBit& (0+255),w,b	;volatile
 36348  0047EE  A4D8               	btfss	status,2,c
 36349  0047F0  D004               	goto	i2l14419
 36350                           
 36351                           ; BSR set to: 0
 36352                           ;inputs_MC50.c: 56:                 RFstate = 3;
 36353  0047F2  0E03               	movlw	3
 36354  0047F4  0101               	movlb	1	; () banked
 36355  0047F6  6F99               	movwf	_RFstate& (0+255),b
 36356                           
 36357                           ;inputs_MC50.c: 57:             } else {
 36358  0047F8  0012               	return	
 36359  0047FA                     i2l14419:
 36360                           
 36361                           ; BSR set to: 0
 36362                           ;inputs_MC50.c: 58:                 RFcount--;
 36363  0047FA  077E               	decf	_RFcount& (0+255),f,b
 36364  0047FC  A0D8               	btfss	status,0,c
 36365  0047FE  077F               	decf	(_RFcount+1)& (0+255),f,b
 36366                           
 36367                           ; BSR set to: 0
 36368                           ;inputs_MC50.c: 59:                 if (RFcount < -10)
 36369  004800  AF7F               	btfss	(_RFcount+1)& (0+255),7,b
 36370  004802  0012               	return	
 36371  004804  0EF6               	movlw	246
 36372  004806  5D7E               	subwf	_RFcount& (0+255),w,b
 36373  004808  0EFF               	movlw	255
 36374  00480A  597F               	subwfb	(_RFcount+1)& (0+255),w,b
 36375  00480C  B0D8               	btfsc	status,0,c
 36376  00480E  0012               	return	
 36377  004810                     i2u1428_40:
 36378  004810                     i2l14423:
 36379                           
 36380                           ; BSR set to: 0
 36381                           ;inputs_MC50.c: 60:                 {;inputs_MC50.c: 62:                     RFstate = 0
      +                          ;
 36382  004810  0E00               	movlw	0
 36383  004812  0101               	movlb	1	; () banked
 36384  004814  6F99               	movwf	_RFstate& (0+255),b
 36385  004816  0012               	return	
 36386  004818                     i2l14425:
 36387                           
 36388                           ; BSR set to: 1
 36389                           ;inputs_MC50.c: 67:             if (RFBit) {
 36390  004818  0100               	movlb	0	; () banked
 36391  00481A  5189               	movf	_RFBit& (0+255),w,b	;volatile
 36392  00481C  B4D8               	btfsc	status,2,c
 36393  00481E  D02C               	goto	i2l14445
 36394                           
 36395                           ; BSR set to: 0
 36396                           ;inputs_MC50.c: 71:                 RFstate = 2;
 36397  004820  0E02               	movlw	2
 36398  004822  0101               	movlb	1	; () banked
 36399  004824  6F99               	movwf	_RFstate& (0+255),b
 36400                           
 36401                           ; BSR set to: 1
 36402                           ;inputs_MC50.c: 72:                 BufferRF[Bptr] >>= 1;
 36403  004826  0ECA               	movlw	low _BufferRF
 36404  004828  0100               	movlb	0	; () banked
 36405  00482A  258D               	addwf	_Bptr& (0+255),w,b
 36406  00482C  6ED9               	movwf	fsr2l,c
 36407  00482E  6ADA               	clrf	fsr2h,c
 36408  004830  0E02               	movlw	high _BufferRF
 36409  004832  22DA               	addwfc	fsr2h,f,c
 36410  004834  90D8               	bcf	status,0,c
 36411  004836  32DF               	rrcf	indf2,f,c
 36412                           
 36413                           ; BSR set to: 0
 36414                           ;inputs_MC50.c: 73:                 if (RFcount >= 0) {
 36415  004838  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 36416  00483A  D008               	goto	i2l14435
 36417                           
 36418                           ; BSR set to: 0
 36419                           ;inputs_MC50.c: 74:                     BufferRF[Bptr] += 0x80;
 36420  00483C  0ECA               	movlw	low _BufferRF
 36421  00483E  258D               	addwf	_Bptr& (0+255),w,b
 36422  004840  6ED9               	movwf	fsr2l,c
 36423  004842  6ADA               	clrf	fsr2h,c
 36424  004844  0E02               	movlw	high _BufferRF
 36425  004846  22DA               	addwfc	fsr2h,f,c
 36426  004848  0E80               	movlw	128
 36427  00484A  26DF               	addwf	indf2,f,c
 36428  00484C                     i2l14435:
 36429                           
 36430                           ; BSR set to: 0
 36431                           ;inputs_MC50.c: 81:                 RFcount = 0;
 36432  00484C  0E00               	movlw	0
 36433  00484E  6F7F               	movwf	(_RFcount+1)& (0+255),b
 36434  004850  0E00               	movlw	0
 36435  004852  6F7E               	movwf	_RFcount& (0+255),b
 36436                           
 36437                           ; BSR set to: 0
 36438                           ;inputs_MC50.c: 83:                 if ((++BitCount & 7) == 0)
 36439  004854  2B8C               	incf	_BitCount& (0+255),f,b
 36440  004856  C08C  F001         	movff	_BitCount,??_rxi
 36441  00485A  0E07               	movlw	7
 36442  00485C  1601               	andwf	??_rxi^0,f,c
 36443  00485E  B4D8               	btfsc	status,2,c
 36444                           
 36445                           ; BSR set to: 0
 36446                           ;inputs_MC50.c: 84:                     Bptr++;
 36447  004860  2B8D               	incf	_Bptr& (0+255),f,b
 36448                           
 36449                           ; BSR set to: 0
 36450                           ;inputs_MC50.c: 85:                 if (BitCount == 65) {
 36451  004862  0E41               	movlw	65
 36452  004864  198C               	xorwf	_BitCount& (0+255),w,b
 36453  004866  A4D8               	btfss	status,2,c
 36454  004868  0012               	return	
 36455                           
 36456                           ; BSR set to: 0
 36457                           ;inputs_MC50.c: 86:                     RFstate = 0;
 36458  00486A  0E00               	movlw	0
 36459  00486C  0101               	movlb	1	; () banked
 36460  00486E  6F99               	movwf	_RFstate& (0+255),b
 36461                           
 36462                           ;inputs_MC50.c: 87:                     RFFull = 1;
 36463  004870  0E01               	movlw	1
 36464  004872  0100               	movlb	0	; () banked
 36465  004874  6F8B               	movwf	_RFFull& (0+255),b	;volatile
 36466  004876  0012               	return	
 36467  004878                     i2l14445:
 36468                           
 36469                           ; BSR set to: 0
 36470                           ;inputs_MC50.c: 92:                 RFcount++;
 36471  004878  4B7E               	infsnz	_RFcount& (0+255),f,b
 36472  00487A  2B7F               	incf	(_RFcount+1)& (0+255),f,b
 36473                           
 36474                           ; BSR set to: 0
 36475                           ;inputs_MC50.c: 93:                 if (RFcount >= 10)
 36476  00487C  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 36477  00487E  0012               	return	
 36478  004880  517F               	movf	(_RFcount+1)& (0+255),w,b
 36479  004882  E104               	bnz	i2u1433_40
 36480  004884  0E0A               	movlw	10
 36481  004886  5D7E               	subwf	_RFcount& (0+255),w,b
 36482  004888  A0D8               	btfss	status,0,c
 36483  00488A  0012               	return	
 36484  00488C                     i2u1433_40:
 36485                           
 36486                           ; BSR set to: 0
 36487                           ;inputs_MC50.c: 94:                 {;inputs_MC50.c: 96:                     RFstate = 1
      +                          ;
 36488  00488C  0E01               	movlw	1
 36489  00488E  0101               	movlb	1	; () banked
 36490  004890  6F99               	movwf	_RFstate& (0+255),b
 36491                           
 36492                           ;inputs_MC50.c: 97:                     Bptr = 0;
 36493  004892  0E00               	movlw	0
 36494  004894  0100               	movlb	0	; () banked
 36495  004896  6F8D               	movwf	_Bptr& (0+255),b
 36496                           
 36497                           ;inputs_MC50.c: 98:                     BitCount = 0;
 36498  004898  0E00               	movlw	0
 36499  00489A  6F8C               	movwf	_BitCount& (0+255),b
 36500  00489C  0012               	return	
 36501  00489E                     i2l14451:
 36502                           
 36503                           ; BSR set to: 1
 36504                           ;inputs_MC50.c: 103:             if (RFBit) {
 36505  00489E  0100               	movlb	0	; () banked
 36506  0048A0  5189               	movf	_RFBit& (0+255),w,b	;volatile
 36507  0048A2  B4D8               	btfsc	status,2,c
 36508  0048A4  D030               	goto	i2l14467
 36509                           
 36510                           ; BSR set to: 0
 36511                           ;inputs_MC50.c: 106:                 if ((RFcount < 20) || (RFcount >= 45)) {
 36512  0048A6  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 36513  0048A8  D00E               	goto	i2u1436_40
 36514  0048AA  517F               	movf	(_RFcount+1)& (0+255),w,b
 36515  0048AC  E104               	bnz	i2u1435_40
 36516  0048AE  0E14               	movlw	20
 36517  0048B0  5D7E               	subwf	_RFcount& (0+255),w,b
 36518  0048B2  A0D8               	btfss	status,0,c
 36519  0048B4  D008               	goto	i2u1436_40
 36520  0048B6                     i2u1435_40:
 36521                           
 36522                           ; BSR set to: 0
 36523  0048B6  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 36524  0048B8  D01E               	goto	i2l14465
 36525  0048BA  517F               	movf	(_RFcount+1)& (0+255),w,b
 36526  0048BC  E104               	bnz	i2u1436_40
 36527  0048BE  0E2D               	movlw	45
 36528  0048C0  5D7E               	subwf	_RFcount& (0+255),w,b
 36529  0048C2  A0D8               	btfss	status,0,c
 36530  0048C4  D018               	goto	i2l14465
 36531  0048C6                     i2u1436_40:
 36532                           
 36533                           ; BSR set to: 0
 36534                           ;inputs_MC50.c: 107:                     if((RFcount < 80) || RFcount>=100)
 36535  0048C6  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 36536  0048C8  D7A3               	goto	i2u1428_40
 36537  0048CA  517F               	movf	(_RFcount+1)& (0+255),w,b
 36538  0048CC  E104               	bnz	i2u1437_40
 36539  0048CE  0E50               	movlw	80
 36540  0048D0  5D7E               	subwf	_RFcount& (0+255),w,b
 36541  0048D2  A0D8               	btfss	status,0,c
 36542  0048D4  D79D               	goto	i2u1428_40
 36543  0048D6                     i2u1437_40:
 36544                           
 36545                           ; BSR set to: 0
 36546  0048D6  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 36547  0048D8  D006               	goto	i2l14463
 36548  0048DA  517F               	movf	(_RFcount+1)& (0+255),w,b
 36549  0048DC  E199               	bnz	i2l14423
 36550  0048DE  0E64               	movlw	100
 36551  0048E0  5D7E               	subwf	_RFcount& (0+255),w,b
 36552  0048E2  B0D8               	btfsc	status,0,c
 36553  0048E4  D795               	goto	i2u1428_40
 36554  0048E6                     i2l14463:
 36555                           
 36556                           ; BSR set to: 0
 36557                           ;inputs_MC50.c: 112:                     {;inputs_MC50.c: 113:                         R
      +                          Fcount = -10;
 36558  0048E6  0EFF               	movlw	255
 36559  0048E8  6F7F               	movwf	(_RFcount+1)& (0+255),b
 36560  0048EA  0EF6               	movlw	246
 36561  0048EC  6F7E               	movwf	_RFcount& (0+255),b
 36562                           
 36563                           ;inputs_MC50.c: 114:                         RFstate = 4;
 36564  0048EE  0E04               	movlw	4
 36565  0048F0  0101               	movlb	1	; () banked
 36566  0048F2  6F99               	movwf	_RFstate& (0+255),b
 36567  0048F4  0012               	return	
 36568  0048F6                     i2l14465:
 36569                           
 36570                           ; BSR set to: 0
 36571                           ;inputs_MC50.c: 118:                     RFcount = 0;
 36572  0048F6  0E00               	movlw	0
 36573  0048F8  6F7F               	movwf	(_RFcount+1)& (0+255),b
 36574  0048FA  0E00               	movlw	0
 36575  0048FC  6F7E               	movwf	_RFcount& (0+255),b
 36576                           
 36577                           ;inputs_MC50.c: 119:                     RFstate = 2;
 36578  0048FE  0E02               	movlw	2
 36579  004900  0101               	movlb	1	; () banked
 36580  004902  6F99               	movwf	_RFstate& (0+255),b
 36581  004904  0012               	return	
 36582  004906                     i2l14467:
 36583                           
 36584                           ; BSR set to: 0
 36585                           ;inputs_MC50.c: 122:                 RFcount++;
 36586  004906  4B7E               	infsnz	_RFcount& (0+255),f,b
 36587  004908  2B7F               	incf	(_RFcount+1)& (0+255),f,b
 36588  00490A  0012               	return	
 36589  00490C                     i2l14469:
 36590                           
 36591                           ; BSR set to: 1
 36592                           ;inputs_MC50.c: 127:             if (RFBit == 0) {
 36593  00490C  0100               	movlb	0	; () banked
 36594  00490E  5189               	movf	_RFBit& (0+255),w,b	;volatile
 36595  004910  A4D8               	btfss	status,2,c
 36596  004912  D056               	goto	i2l14505
 36597                           
 36598                           ; BSR set to: 0
 36599                           ;inputs_MC50.c: 130:                 RFstate = 5;
 36600  004914  0E05               	movlw	5
 36601  004916  0101               	movlb	1	; () banked
 36602  004918  6F99               	movwf	_RFstate& (0+255),b
 36603                           
 36604                           ; BSR set to: 1
 36605                           ;inputs_MC50.c: 131:                 BufferRF[Bptr] >>= 1;
 36606  00491A  0ECA               	movlw	low _BufferRF
 36607  00491C  0100               	movlb	0	; () banked
 36608  00491E  258D               	addwf	_Bptr& (0+255),w,b
 36609  004920  6ED9               	movwf	fsr2l,c
 36610  004922  6ADA               	clrf	fsr2h,c
 36611  004924  0E02               	movlw	high _BufferRF
 36612  004926  22DA               	addwfc	fsr2h,f,c
 36613  004928  90D8               	bcf	status,0,c
 36614  00492A  32DF               	rrcf	indf2,f,c
 36615                           
 36616                           ; BSR set to: 0
 36617                           ;inputs_MC50.c: 132:                 if (RFcount >= 0) {
 36618  00492C  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 36619  00492E  D008               	goto	i2l14479
 36620                           
 36621                           ; BSR set to: 0
 36622                           ;inputs_MC50.c: 133:                     BufferRF[Bptr] += 0x80;
 36623  004930  0ECA               	movlw	low _BufferRF
 36624  004932  258D               	addwf	_Bptr& (0+255),w,b
 36625  004934  6ED9               	movwf	fsr2l,c
 36626  004936  6ADA               	clrf	fsr2h,c
 36627  004938  0E02               	movlw	high _BufferRF
 36628  00493A  22DA               	addwfc	fsr2h,f,c
 36629  00493C  0E80               	movlw	128
 36630  00493E  26DF               	addwf	indf2,f,c
 36631  004940                     i2l14479:
 36632                           
 36633                           ; BSR set to: 0
 36634                           ;inputs_MC50.c: 136:                 RFcount = 0;
 36635  004940  0E00               	movlw	0
 36636  004942  6F7F               	movwf	(_RFcount+1)& (0+255),b
 36637  004944  0E00               	movlw	0
 36638  004946  6F7E               	movwf	_RFcount& (0+255),b
 36639                           
 36640                           ; BSR set to: 0
 36641                           ;inputs_MC50.c: 138:                 if ((++BitCount & 7) == 0)
 36642  004948  2B8C               	incf	_BitCount& (0+255),f,b
 36643  00494A  C08C  F001         	movff	_BitCount,??_rxi
 36644  00494E  0E07               	movlw	7
 36645  004950  1601               	andwf	??_rxi^0,f,c
 36646  004952  A4D8               	btfss	status,2,c
 36647  004954  D009               	goto	i2l14487
 36648                           
 36649                           ; BSR set to: 0
 36650                           ;inputs_MC50.c: 139:                 {;inputs_MC50.c: 140:                     Bptr++;
 36651  004956  2B8D               	incf	_Bptr& (0+255),f,b
 36652                           
 36653                           ; BSR set to: 0
 36654                           ;inputs_MC50.c: 141:                     BufferRF[Bptr]=0;
 36655  004958  0ECA               	movlw	low _BufferRF
 36656  00495A  258D               	addwf	_Bptr& (0+255),w,b
 36657  00495C  6ED9               	movwf	fsr2l,c
 36658  00495E  6ADA               	clrf	fsr2h,c
 36659  004960  0E02               	movlw	high _BufferRF
 36660  004962  22DA               	addwfc	fsr2h,f,c
 36661  004964  0E00               	movlw	0
 36662  004966  6EDF               	movwf	indf2,c
 36663  004968                     i2l14487:
 36664                           
 36665                           ; BSR set to: 0
 36666                           ;inputs_MC50.c: 143:                 if (BitCount == 13) {
 36667  004968  0E0D               	movlw	13
 36668  00496A  198C               	xorwf	_BitCount& (0+255),w,b
 36669  00496C  A4D8               	btfss	status,2,c
 36670  00496E  0012               	return	
 36671                           
 36672                           ; BSR set to: 0
 36673                           ;inputs_MC50.c: 144:                     RFstate = 0;
 36674  004970  0E00               	movlw	0
 36675  004972  0101               	movlb	1	; () banked
 36676  004974  6F99               	movwf	_RFstate& (0+255),b
 36677                           
 36678                           ; BSR set to: 1
 36679                           ;inputs_MC50.c: 145:                     if(RFFull_12BIT==1)
 36680  004976  0100               	movlb	0	; () banked
 36681  004978  058A               	decf	_RFFull_12BIT& (0+255),w,b	;volatile
 36682  00497A  A4D8               	btfss	status,2,c
 36683  00497C  D01A               	goto	i2l14499
 36684                           
 36685                           ; BSR set to: 0
 36686                           ;inputs_MC50.c: 146:                     {;inputs_MC50.c: 147:                         i
      +                          f(BufferRF_12BIT[0]==BufferRF[0] && BufferRF_12BIT[1]==BufferRF[1])
 36687  00497E  0102               	movlb	2	; () banked
 36688  004980  51CA               	movf	_BufferRF& (0+255),w,b
 36689  004982  0101               	movlb	1	; () banked
 36690  004984  1987               	xorwf	_BufferRF_12BIT& (0+255),w,b
 36691  004986  A4D8               	btfss	status,2,c
 36692  004988  D00F               	goto	i2l1620
 36693                           
 36694                           ; BSR set to: 1
 36695  00498A  0102               	movlb	2	; () banked
 36696  00498C  51CB               	movf	(_BufferRF+1)& (0+255),w,b
 36697  00498E  0101               	movlb	1	; () banked
 36698  004990  1988               	xorwf	(_BufferRF_12BIT+1)& (0+255),w,b
 36699  004992  A4D8               	btfss	status,2,c
 36700  004994  D009               	goto	i2l1620
 36701                           
 36702                           ; BSR set to: 1
 36703                           ;inputs_MC50.c: 148:                         {;inputs_MC50.c: 149:                      
      +                                 RFFull = 1;
 36704  004996  0E01               	movlw	1
 36705  004998  0100               	movlb	0	; () banked
 36706  00499A  6F8B               	movwf	_RFFull& (0+255),b	;volatile
 36707                           
 36708                           ;inputs_MC50.c: 150:                             BufferRF[2]=0;
 36709  00499C  0E00               	movlw	0
 36710  00499E  0102               	movlb	2	; () banked
 36711  0049A0  6FCC               	movwf	(_BufferRF+2)& (0+255),b
 36712                           
 36713                           ;inputs_MC50.c: 151:                             BufferRF[3]=0;
 36714  0049A2  0E00               	movlw	0
 36715  0049A4  6FCD               	movwf	(_BufferRF+3)& (0+255),b
 36716                           
 36717                           ;inputs_MC50.c: 152:                         }
 36718  0049A6  0012               	return	
 36719  0049A8                     i2l1620:
 36720                           
 36721                           ; BSR set to: 1
 36722                           ;inputs_MC50.c: 154:                         {;inputs_MC50.c: 155:                      
      +                                 BufferRF_12BIT[0]=BufferRF[0];
 36723  0049A8  C2CA  F187         	movff	_BufferRF,_BufferRF_12BIT
 36724                           
 36725                           ;inputs_MC50.c: 156:                             BufferRF_12BIT[1]=BufferRF[1];
 36726  0049AC  C2CB  F188         	movff	_BufferRF+1,_BufferRF_12BIT+1
 36727  0049B0  0012               	return	
 36728  0049B2                     i2l14499:
 36729                           
 36730                           ; BSR set to: 0
 36731                           ;inputs_MC50.c: 161:                     {;inputs_MC50.c: 162:                         R
      +                          FFull_12BIT=1;
 36732  0049B2  0E01               	movlw	1
 36733  0049B4  6F8A               	movwf	_RFFull_12BIT& (0+255),b	;volatile
 36734                           
 36735                           ; BSR set to: 0
 36736                           ;inputs_MC50.c: 163:                         BufferRF_12BIT[0]=BufferRF[0];
 36737  0049B6  C2CA  F187         	movff	_BufferRF,_BufferRF_12BIT
 36738                           
 36739                           ; BSR set to: 0
 36740                           ;inputs_MC50.c: 164:                         BufferRF_12BIT[1]=BufferRF[1];
 36741  0049BA  C2CB  F188         	movff	_BufferRF+1,_BufferRF_12BIT+1
 36742  0049BE  0012               	return	
 36743  0049C0                     i2l14505:
 36744                           
 36745                           ; BSR set to: 0
 36746                           ;inputs_MC50.c: 168:                 RFcount++;
 36747  0049C0  4B7E               	infsnz	_RFcount& (0+255),f,b
 36748  0049C2  2B7F               	incf	(_RFcount+1)& (0+255),f,b
 36749                           
 36750                           ; BSR set to: 0
 36751                           ;inputs_MC50.c: 169:                 if (RFcount >= 10)
 36752  0049C4  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 36753  0049C6  0012               	return	
 36754  0049C8  517F               	movf	(_RFcount+1)& (0+255),w,b
 36755  0049CA  E104               	bnz	i2u1446_40
 36756  0049CC  0E0A               	movlw	10
 36757  0049CE  5D7E               	subwf	_RFcount& (0+255),w,b
 36758  0049D0  A0D8               	btfss	status,0,c
 36759  0049D2  0012               	return	
 36760  0049D4                     i2u1446_40:
 36761  0049D4  D71D               	goto	i2u1428_40
 36762  0049D6                     i2l14511:
 36763                           
 36764                           ; BSR set to: 1
 36765                           ;inputs_MC50.c: 177:             if (RFBit) {
 36766  0049D6  0100               	movlb	0	; () banked
 36767  0049D8  5189               	movf	_RFBit& (0+255),w,b	;volatile
 36768  0049DA  B4D8               	btfsc	status,2,c
 36769  0049DC  D004               	goto	i2l14515
 36770                           
 36771                           ; BSR set to: 0
 36772                           ;inputs_MC50.c: 181:                 RFstate = 4;
 36773  0049DE  0E04               	movlw	4
 36774  0049E0  0101               	movlb	1	; () banked
 36775  0049E2  6F99               	movwf	_RFstate& (0+255),b
 36776                           
 36777                           ;inputs_MC50.c: 183:             } else {
 36778  0049E4  0012               	return	
 36779  0049E6                     i2l14515:
 36780                           
 36781                           ; BSR set to: 0
 36782                           ;inputs_MC50.c: 184:                 RFcount--;
 36783  0049E6  077E               	decf	_RFcount& (0+255),f,b
 36784  0049E8  A0D8               	btfss	status,0,c
 36785  0049EA  077F               	decf	(_RFcount+1)& (0+255),f,b
 36786                           
 36787                           ; BSR set to: 0
 36788                           ;inputs_MC50.c: 185:                 if (RFcount < -10)
 36789  0049EC  AF7F               	btfss	(_RFcount+1)& (0+255),7,b
 36790  0049EE  0012               	return	
 36791  0049F0  0EF6               	movlw	246
 36792  0049F2  5D7E               	subwf	_RFcount& (0+255),w,b
 36793  0049F4  0EFF               	movlw	255
 36794  0049F6  597F               	subwfb	(_RFcount+1)& (0+255),w,b
 36795  0049F8  B0D8               	btfsc	status,0,c
 36796  0049FA  0012               	return	
 36797  0049FC  D747               	goto	i2u1433_40
 36798  0049FE                     i2l14521:
 36799                           
 36800                           ; BSR set to: 1
 36801                           ;inputs_MC50.c: 197:             RFstate = 1;
 36802  0049FE  0E01               	movlw	1
 36803  004A00  6F99               	movwf	_RFstate& (0+255),b
 36804                           
 36805                           ;inputs_MC50.c: 198:             RFcount = 0;
 36806  004A02  0E00               	movlw	0
 36807  004A04  0100               	movlb	0	; () banked
 36808  004A06  6F7F               	movwf	(_RFcount+1)& (0+255),b
 36809  004A08  0E00               	movlw	0
 36810  004A0A  6F7E               	movwf	_RFcount& (0+255),b
 36811                           
 36812                           ;inputs_MC50.c: 199:             Bptr = 0;
 36813  004A0C  0E00               	movlw	0
 36814  004A0E  6F8D               	movwf	_Bptr& (0+255),b
 36815                           
 36816                           ;inputs_MC50.c: 200:             BitCount = 0;
 36817  004A10  0E00               	movlw	0
 36818  004A12  6F8C               	movwf	_BitCount& (0+255),b
 36819                           
 36820                           ;inputs_MC50.c: 201:             break;
 36821  004A14  0012               	return	
 36822  004A16                     i2l14525:
 36823                           
 36824                           ; BSR set to: 0
 36825  004A16  0101               	movlb	1	; () banked
 36826  004A18  5199               	movf	_RFstate& (0+255),w,b
 36827  004A1A  6E01               	movwf	??_rxi^0,c
 36828  004A1C  6A02               	clrf	(??_rxi+1)^0,c
 36829                           
 36830                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 36831                           ; Switch size 1, requested type "simple"
 36832                           ; Number of cases is 1, Range of values is 0 to 0
 36833                           ; switch strategies available:
 36834                           ; Name         Instructions Cycles
 36835                           ; simple_byte            4     3 (average)
 36836                           ;	Chosen strategy is simple_byte
 36837  004A1E  5002               	movf	(??_rxi+1)^0,w,c
 36838  004A20  0A00               	xorlw	0	; case 0
 36839  004A22  A4D8               	btfss	status,2,c
 36840  004A24  D7EC               	goto	i2l14521
 36841                           
 36842                           ; BSR set to: 1
 36843                           ; Switch size 1, requested type "simple"
 36844                           ; Number of cases is 6, Range of values is 0 to 5
 36845                           ; switch strategies available:
 36846                           ; Name         Instructions Cycles
 36847                           ; simple_byte           19    10 (average)
 36848                           ;	Chosen strategy is simple_byte
 36849  004A26  5001               	movf	??_rxi^0,w,c
 36850  004A28  0A00               	xorlw	0	; case 0
 36851  004A2A  B4D8               	btfsc	status,2,c
 36852  004A2C  D7E8               	goto	i2l14521
 36853  004A2E  0A01               	xorlw	1	; case 1
 36854  004A30  B4D8               	btfsc	status,2,c
 36855  004A32  D735               	goto	i2l14451
 36856  004A34  0A03               	xorlw	3	; case 2
 36857  004A36  B4D8               	btfsc	status,2,c
 36858  004A38  D6D8               	goto	i2l14415
 36859  004A3A  0A01               	xorlw	1	; case 3
 36860  004A3C  B4D8               	btfsc	status,2,c
 36861  004A3E  D6EC               	goto	i2l14425
 36862  004A40  0A07               	xorlw	7	; case 4
 36863  004A42  B4D8               	btfsc	status,2,c
 36864  004A44  D763               	goto	i2l14469
 36865  004A46  0A01               	xorlw	1	; case 5
 36866  004A48  B4D8               	btfsc	status,2,c
 36867  004A4A  D7C5               	goto	i2l14511
 36868  004A4C  D7D8               	goto	i2l14521
 36869  004A4E                     __end_of_rxi:
 36870                           	callstack 0
 36871                           
 36872 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 36873 ;; Defined at:
 36874 ;;		line 147 in file "mcc_generated_files/tmr0.c"
 36875 ;; Parameters:    Size  Location     Type
 36876 ;;		None
 36877 ;; Auto vars:     Size  Location     Type
 36878 ;;		None
 36879 ;; Return value:  Size  Location     Type
 36880 ;;                  1    wreg      void 
 36881 ;; Registers used:
 36882 ;;		None
 36883 ;; Tracked objects:
 36884 ;;		On entry : 3F/2
 36885 ;;		On exit  : 3F/2
 36886 ;;		Unchanged: 3F/0
 36887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36888 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36889 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36891 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36892 ;;Total ram usage:        0 bytes
 36893 ;; Hardware stack levels used: 1
 36894 ;; This function calls:
 36895 ;;		Nothing
 36896 ;; This function is called by:
 36897 ;;		_TMR0_Initialize
 36898 ;;		_TMR0_ISR
 36899 ;; This function uses a non-reentrant model
 36900 ;;
 36901                           
 36902                           	psect	text203
 36903  00983E                     __ptext203:
 36904                           	callstack 0
 36905  00983E                     _TMR0_DefaultInterruptHandler:
 36906                           	callstack 15
 36907                           
 36908                           ; BSR set to: 2
 36909                           
 36910                           ;incstack = 0
 36911  00983E  0012               	return		;funcret
 36912  009840                     __end_of_TMR0_DefaultInterruptHandler:
 36913                           	callstack 0
 36914                           
 36915 ;; *************** function _EUSART1_Transmit_ISR *****************
 36916 ;; Defined at:
 36917 ;;		line 197 in file "mcc_generated_files/eusart1.c"
 36918 ;; Parameters:    Size  Location     Type
 36919 ;;		None
 36920 ;; Auto vars:     Size  Location     Type
 36921 ;;		None
 36922 ;; Return value:  Size  Location     Type
 36923 ;;                  1    wreg      void 
 36924 ;; Registers used:
 36925 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 36926 ;; Tracked objects:
 36927 ;;		On entry : 3F/2
 36928 ;;		On exit  : 30/0
 36929 ;;		Unchanged: 0/0
 36930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36934 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36935 ;;Total ram usage:        0 bytes
 36936 ;; Hardware stack levels used: 1
 36937 ;; This function calls:
 36938 ;;		Nothing
 36939 ;; This function is called by:
 36940 ;;		_EUSART1_Initialize
 36941 ;;		_INTERRUPT_InterruptManager
 36942 ;; This function uses a non-reentrant model
 36943 ;;
 36944                           
 36945                           	psect	text204
 36946  008FFC                     __ptext204:
 36947                           	callstack 0
 36948  008FFC                     _EUSART1_Transmit_ISR:
 36949                           	callstack 16
 36950                           
 36951                           ; BSR set to: 2
 36952                           ;mcc_generated_files/eusart1.c: 201:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
 36953                           
 36954                           ; BSR set to: 2
 36955                           ;incstack = 0
 36956  008FFC  0E08               	movlw	8
 36957  008FFE  0101               	movlb	1	; () banked
 36958  009000  61FF               	cpfslt	_eusart1TxBufferRemaining& (0+255),b
 36959  009002  D012               	goto	i2l106
 36960                           
 36961                           ; BSR set to: 1
 36962                           ;mcc_generated_files/eusart1.c: 202:     {;mcc_generated_files/eusart1.c: 203:         T
      +                          X1REG = eusart1TxBuffer[eusart1TxTail++];
 36963  009004  0E84               	movlw	low _eusart1TxBuffer
 36964  009006  0100               	movlb	0	; () banked
 36965  009008  2596               	addwf	_eusart1TxTail& (0+255),w,b	;volatile
 36966  00900A  6ED9               	movwf	fsr2l,c
 36967  00900C  6ADA               	clrf	fsr2h,c
 36968  00900E  0E02               	movlw	high _eusart1TxBuffer
 36969  009010  22DA               	addwfc	fsr2h,f,c
 36970  009012  50DF               	movf	indf2,w,c
 36971  009014  6E9A               	movwf	154,c	;volatile
 36972                           
 36973                           ; BSR set to: 0
 36974  009016  2B96               	incf	_eusart1TxTail& (0+255),f,b	;volatile
 36975                           
 36976                           ; BSR set to: 0
 36977                           ;mcc_generated_files/eusart1.c: 204:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
 36978  009018  0E07               	movlw	7
 36979  00901A  6596               	cpfsgt	_eusart1TxTail& (0+255),b
 36980  00901C  D002               	goto	i2l16547
 36981                           
 36982                           ; BSR set to: 0
 36983                           ;mcc_generated_files/eusart1.c: 205:         {;mcc_generated_files/eusart1.c: 206:      
      +                                 eusart1TxTail = 0;
 36984  00901E  0E00               	movlw	0
 36985  009020  6F96               	movwf	_eusart1TxTail& (0+255),b	;volatile
 36986  009022                     i2l16547:
 36987                           
 36988                           ; BSR set to: 0
 36989                           ;mcc_generated_files/eusart1.c: 208:         eusart1TxBufferRemaining++;
 36990  009022  0101               	movlb	1	; () banked
 36991  009024  2BFF               	incf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
 36992                           
 36993                           ;mcc_generated_files/eusart1.c: 209:     }
 36994  009026  0012               	return	
 36995  009028                     i2l106:
 36996                           
 36997                           ; BSR set to: 1
 36998                           ;mcc_generated_files/eusart1.c: 211:     {;mcc_generated_files/eusart1.c: 212:         P
      +                          IE3bits.TX1IE = 0;
 36999  009028  010E               	movlb	14	; () banked
 37000  00902A  99C5               	bcf	197,4,b	;volatile
 37001  00902C  0012               	return		;funcret
 37002  00902E                     __end_of_EUSART1_Transmit_ISR:
 37003                           	callstack 0
 37004                           
 37005 ;; *************** function _EUSART1_Receive_ISR *****************
 37006 ;; Defined at:
 37007 ;;		line 216 in file "mcc_generated_files/eusart1.c"
 37008 ;; Parameters:    Size  Location     Type
 37009 ;;		None
 37010 ;; Auto vars:     Size  Location     Type
 37011 ;;		None
 37012 ;; Return value:  Size  Location     Type
 37013 ;;                  1    wreg      void 
 37014 ;; Registers used:
 37015 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 37016 ;; Tracked objects:
 37017 ;;		On entry : 3F/2
 37018 ;;		On exit  : 0/0
 37019 ;;		Unchanged: 0/0
 37020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37022 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37024 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37025 ;;Total ram usage:        0 bytes
 37026 ;; Hardware stack levels used: 1
 37027 ;; Hardware stack levels required when called: 2
 37028 ;; This function calls:
 37029 ;;		Absolute function
 37030 ;;		_EUSART1_DefaultErrorHandler
 37031 ;;		_EUSART1_DefaultFramingErrorHandler
 37032 ;;		_EUSART1_DefaultOverrunErrorHandler
 37033 ;;		_EUSART1_RxDataHandler
 37034 ;; This function is called by:
 37035 ;;		_EUSART1_Initialize
 37036 ;;		_INTERRUPT_InterruptManager
 37037 ;; This function uses a non-reentrant model
 37038 ;;
 37039                           
 37040                           	psect	text205
 37041  0078C8                     __ptext205:
 37042                           	callstack 0
 37043  0078C8                     _EUSART1_Receive_ISR:
 37044                           	callstack 14
 37045                           
 37046                           ; BSR set to: 2
 37047                           ;mcc_generated_files/eusart1.c: 219:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
 37048                           
 37049                           ;incstack = 0
 37050  0078C8  0E74               	movlw	low _eusart1RxStatusBuffer
 37051  0078CA  0100               	movlb	0	; () banked
 37052  0078CC  2595               	addwf	_eusart1RxHead& (0+255),w,b	;volatile
 37053  0078CE  6ED9               	movwf	fsr2l,c
 37054  0078D0  6ADA               	clrf	fsr2h,c
 37055  0078D2  0E02               	movlw	high _eusart1RxStatusBuffer
 37056  0078D4  22DA               	addwfc	fsr2h,f,c
 37057  0078D6  0E00               	movlw	0
 37058  0078D8  6EDF               	movwf	indf2,c
 37059                           
 37060                           ; BSR set to: 0
 37061                           ;mcc_generated_files/eusart1.c: 221:     if(RC1STAbits.FERR){
 37062  0078DA  A49D               	btfss	157,2,c	;volatile
 37063  0078DC  D013               	goto	i2u1859_49
 37064                           
 37065                           ; BSR set to: 0
 37066                           ;mcc_generated_files/eusart1.c: 222:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
 37067  0078DE  0E74               	movlw	low _eusart1RxStatusBuffer
 37068  0078E0  2595               	addwf	_eusart1RxHead& (0+255),w,b	;volatile
 37069  0078E2  6ED9               	movwf	fsr2l,c
 37070  0078E4  6ADA               	clrf	fsr2h,c
 37071  0078E6  0E02               	movlw	high _eusart1RxStatusBuffer
 37072  0078E8  22DA               	addwfc	fsr2h,f,c
 37073  0078EA  0102               	movlb	2	; () banked
 37074  0078EC  82DF               	bsf	indf2,1,c
 37075                           
 37076                           ; BSR set to: 2
 37077                           ;mcc_generated_files/eusart1.c: 223:         EUSART1_FramingErrorHandler();
 37078  0078EE  D801               	call	i2u1859_48
 37079  0078F0  D009               	goto	i2u1859_49
 37080  0078F2                     i2u1859_48:
 37081  0078F2  0005               	push	
 37082  0078F4  6EFA               	movwf	pclath,c
 37083  0078F6  51EB               	movf	_EUSART1_FramingErrorHandler& (0+255),w,b
 37084  0078F8  6EFD               	movwf	tosl,c
 37085  0078FA  51EC               	movf	(_EUSART1_FramingErrorHandler+1)& (0+255),w,b
 37086  0078FC  6EFE               	movwf	tosh,c
 37087  0078FE  6AFF               	clrf	tosu,c
 37088  007900  50FA               	movf	pclath,w,c
 37089  007902  0012               	return		;indir
 37090  007904                     i2u1859_49:
 37091                           
 37092                           ;mcc_generated_files/eusart1.c: 226:     if(RC1STAbits.OERR){
 37093  007904  A29D               	btfss	157,1,c	;volatile
 37094  007906  D014               	goto	i2u1861_49
 37095                           
 37096                           ;mcc_generated_files/eusart1.c: 227:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
 37097  007908  0E74               	movlw	low _eusart1RxStatusBuffer
 37098  00790A  0100               	movlb	0	; () banked
 37099  00790C  2595               	addwf	_eusart1RxHead& (0+255),w,b	;volatile
 37100  00790E  6ED9               	movwf	fsr2l,c
 37101  007910  6ADA               	clrf	fsr2h,c
 37102  007912  0E02               	movlw	high _eusart1RxStatusBuffer
 37103  007914  22DA               	addwfc	fsr2h,f,c
 37104  007916  0102               	movlb	2	; () banked
 37105  007918  84DF               	bsf	indf2,2,c
 37106                           
 37107                           ; BSR set to: 2
 37108                           ;mcc_generated_files/eusart1.c: 228:         EUSART1_OverrunErrorHandler();
 37109  00791A  D801               	call	i2u1861_48
 37110  00791C  D009               	goto	i2u1861_49
 37111  00791E                     i2u1861_48:
 37112  00791E  0005               	push	
 37113  007920  6EFA               	movwf	pclath,c
 37114  007922  51E9               	movf	_EUSART1_OverrunErrorHandler& (0+255),w,b
 37115  007924  6EFD               	movwf	tosl,c
 37116  007926  51EA               	movf	(_EUSART1_OverrunErrorHandler+1)& (0+255),w,b
 37117  007928  6EFE               	movwf	tosh,c
 37118  00792A  6AFF               	clrf	tosu,c
 37119  00792C  50FA               	movf	pclath,w,c
 37120  00792E  0012               	return		;indir
 37121  007930                     i2u1861_49:
 37122                           
 37123                           ;mcc_generated_files/eusart1.c: 231:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
 37124  007930  0E74               	movlw	low _eusart1RxStatusBuffer
 37125  007932  0100               	movlb	0	; () banked
 37126  007934  2595               	addwf	_eusart1RxHead& (0+255),w,b	;volatile
 37127  007936  6ED9               	movwf	fsr2l,c
 37128  007938  6ADA               	clrf	fsr2h,c
 37129  00793A  0E02               	movlw	high _eusart1RxStatusBuffer
 37130  00793C  22DA               	addwfc	fsr2h,f,c
 37131  00793E  50DF               	movf	indf2,w,c
 37132  007940  B4D8               	btfsc	status,2,c
 37133  007942  D00C               	goto	i2l16567
 37134                           
 37135                           ; BSR set to: 0
 37136                           ;mcc_generated_files/eusart1.c: 232:         EUSART1_ErrorHandler();
 37137  007944  D801               	call	i2u1863_48
 37138  007946  0012               	return	
 37139  007948                     i2u1863_48:
 37140  007948  0005               	push	
 37141  00794A  6EFA               	movwf	pclath,c
 37142  00794C  0102               	movlb	2	; () banked
 37143  00794E  51E7               	movf	_EUSART1_ErrorHandler& (0+255),w,b
 37144  007950  6EFD               	movwf	tosl,c
 37145  007952  51E8               	movf	(_EUSART1_ErrorHandler+1)& (0+255),w,b
 37146  007954  6EFE               	movwf	tosh,c
 37147  007956  6AFF               	clrf	tosu,c
 37148  007958  50FA               	movf	pclath,w,c
 37149  00795A  0012               	return		;indir
 37150  00795C                     i2l16567:
 37151                           
 37152                           ; BSR set to: 0
 37153                           ;mcc_generated_files/eusart1.c: 234:         EUSART1_RxDataHandler();
 37154  00795C  EC46  F04A         	call	_EUSART1_RxDataHandler	;wreg free
 37155  007960  0012               	return		;funcret
 37156  007962                     __end_of_EUSART1_Receive_ISR:
 37157                           	callstack 0
 37158                           
 37159 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
 37160 ;; Defined at:
 37161 ;;		line 252 in file "mcc_generated_files/eusart1.c"
 37162 ;; Parameters:    Size  Location     Type
 37163 ;;		None
 37164 ;; Auto vars:     Size  Location     Type
 37165 ;;		None
 37166 ;; Return value:  Size  Location     Type
 37167 ;;                  1    wreg      void 
 37168 ;; Registers used:
 37169 ;;		None
 37170 ;; Tracked objects:
 37171 ;;		On entry : 3F/2
 37172 ;;		On exit  : 3F/2
 37173 ;;		Unchanged: 3F/0
 37174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37178 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37179 ;;Total ram usage:        0 bytes
 37180 ;; Hardware stack levels used: 1
 37181 ;; This function calls:
 37182 ;;		Nothing
 37183 ;; This function is called by:
 37184 ;;		_EUSART1_Initialize
 37185 ;;		_EUSART1_Receive_ISR
 37186 ;; This function uses a non-reentrant model
 37187 ;;
 37188                           
 37189                           	psect	text206
 37190  0097F8                     __ptext206:
 37191                           	callstack 0
 37192  0097F8                     _EUSART1_DefaultOverrunErrorHandler:
 37193                           	callstack 15
 37194                           
 37195                           ; BSR set to: 2
 37196                           ;mcc_generated_files/eusart1.c: 255:     RC1STAbits.CREN = 0;
 37197                           
 37198                           ;incstack = 0
 37199  0097F8  989D               	bcf	157,4,c	;volatile
 37200                           
 37201                           ;mcc_generated_files/eusart1.c: 256:     RC1STAbits.CREN = 1;
 37202  0097FA  889D               	bsf	157,4,c	;volatile
 37203                           
 37204                           ; BSR set to: 2
 37205  0097FC  0012               	return		;funcret
 37206  0097FE                     __end_of_EUSART1_DefaultOverrunErrorHandler:
 37207                           	callstack 0
 37208                           
 37209 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
 37210 ;; Defined at:
 37211 ;;		line 250 in file "mcc_generated_files/eusart1.c"
 37212 ;; Parameters:    Size  Location     Type
 37213 ;;		None
 37214 ;; Auto vars:     Size  Location     Type
 37215 ;;		None
 37216 ;; Return value:  Size  Location     Type
 37217 ;;                  1    wreg      void 
 37218 ;; Registers used:
 37219 ;;		None
 37220 ;; Tracked objects:
 37221 ;;		On entry : 3F/2
 37222 ;;		On exit  : 3F/2
 37223 ;;		Unchanged: 3F/0
 37224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37225 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37226 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37228 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37229 ;;Total ram usage:        0 bytes
 37230 ;; Hardware stack levels used: 1
 37231 ;; This function calls:
 37232 ;;		Nothing
 37233 ;; This function is called by:
 37234 ;;		_EUSART1_Initialize
 37235 ;;		_EUSART1_Receive_ISR
 37236 ;; This function uses a non-reentrant model
 37237 ;;
 37238                           
 37239                           	psect	text207
 37240  009840                     __ptext207:
 37241                           	callstack 0
 37242  009840                     _EUSART1_DefaultFramingErrorHandler:
 37243                           	callstack 15
 37244                           
 37245                           ; BSR set to: 2
 37246                           
 37247                           ; BSR set to: 2
 37248                           ;incstack = 0
 37249  009840  0012               	return		;funcret
 37250  009842                     __end_of_EUSART1_DefaultFramingErrorHandler:
 37251                           	callstack 0
 37252                           
 37253 ;; *************** function _EUSART1_DefaultErrorHandler *****************
 37254 ;; Defined at:
 37255 ;;		line 260 in file "mcc_generated_files/eusart1.c"
 37256 ;; Parameters:    Size  Location     Type
 37257 ;;		None
 37258 ;; Auto vars:     Size  Location     Type
 37259 ;;		None
 37260 ;; Return value:  Size  Location     Type
 37261 ;;                  1    wreg      void 
 37262 ;; Registers used:
 37263 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 37264 ;; Tracked objects:
 37265 ;;		On entry : 3F/2
 37266 ;;		On exit  : 3F/0
 37267 ;;		Unchanged: 0/0
 37268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37272 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37273 ;;Total ram usage:        0 bytes
 37274 ;; Hardware stack levels used: 1
 37275 ;; Hardware stack levels required when called: 1
 37276 ;; This function calls:
 37277 ;;		_EUSART1_RxDataHandler
 37278 ;; This function is called by:
 37279 ;;		_EUSART1_Initialize
 37280 ;;		_EUSART1_Receive_ISR
 37281 ;; This function uses a non-reentrant model
 37282 ;;
 37283                           
 37284                           	psect	text208
 37285  0097FE                     __ptext208:
 37286                           	callstack 0
 37287  0097FE                     _EUSART1_DefaultErrorHandler:
 37288                           	callstack 14
 37289                           
 37290                           ; BSR set to: 2
 37291                           ;mcc_generated_files/eusart1.c: 261:     EUSART1_RxDataHandler();
 37292                           
 37293                           ; BSR set to: 2
 37294                           ;incstack = 0
 37295  0097FE  EC46  F04A         	call	_EUSART1_RxDataHandler	;wreg free
 37296                           
 37297                           ; BSR set to: 0
 37298  009802  0012               	return		;funcret
 37299  009804                     __end_of_EUSART1_DefaultErrorHandler:
 37300                           	callstack 0
 37301                           
 37302 ;; *************** function _EUSART1_RxDataHandler *****************
 37303 ;; Defined at:
 37304 ;;		line 240 in file "mcc_generated_files/eusart1.c"
 37305 ;; Parameters:    Size  Location     Type
 37306 ;;		None
 37307 ;; Auto vars:     Size  Location     Type
 37308 ;;		None
 37309 ;; Return value:  Size  Location     Type
 37310 ;;                  1    wreg      void 
 37311 ;; Registers used:
 37312 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 37313 ;; Tracked objects:
 37314 ;;		On entry : 3D/0
 37315 ;;		On exit  : 3F/0
 37316 ;;		Unchanged: 0/0
 37317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37321 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37322 ;;Total ram usage:        0 bytes
 37323 ;; Hardware stack levels used: 1
 37324 ;; This function calls:
 37325 ;;		Nothing
 37326 ;; This function is called by:
 37327 ;;		_EUSART1_Receive_ISR
 37328 ;;		_EUSART1_DefaultErrorHandler
 37329 ;; This function uses a non-reentrant model
 37330 ;;
 37331                           
 37332                           	psect	text209
 37333  00948C                     __ptext209:
 37334                           	callstack 0
 37335  00948C                     _EUSART1_RxDataHandler:
 37336                           	callstack 15
 37337                           
 37338                           ;mcc_generated_files/eusart1.c: 242:     eusart1RxBuffer[eusart1RxHead++] = RC1REG;
 37339                           
 37340                           ; BSR set to: 0
 37341                           ;incstack = 0
 37342  00948C  0E7C               	movlw	low _eusart1RxBuffer
 37343  00948E  0100               	movlb	0	; () banked
 37344  009490  2595               	addwf	_eusart1RxHead& (0+255),w,b	;volatile
 37345  009492  6ED9               	movwf	fsr2l,c
 37346  009494  6ADA               	clrf	fsr2h,c
 37347  009496  0E02               	movlw	high _eusart1RxBuffer
 37348  009498  22DA               	addwfc	fsr2h,f,c
 37349  00949A  CF99 FFDF          	movff	3993,indf2	;volatile
 37350                           
 37351                           ; BSR set to: 0
 37352  00949E  2B95               	incf	_eusart1RxHead& (0+255),f,b	;volatile
 37353                           
 37354                           ; BSR set to: 0
 37355                           ;mcc_generated_files/eusart1.c: 243:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
 37356  0094A0  0E07               	movlw	7
 37357  0094A2  6595               	cpfsgt	_eusart1RxHead& (0+255),b
 37358  0094A4  D002               	goto	i2l12861
 37359                           
 37360                           ; BSR set to: 0
 37361                           ;mcc_generated_files/eusart1.c: 244:     {;mcc_generated_files/eusart1.c: 245:         e
      +                          usart1RxHead = 0;
 37362  0094A6  0E00               	movlw	0
 37363  0094A8  6F95               	movwf	_eusart1RxHead& (0+255),b	;volatile
 37364  0094AA                     i2l12861:
 37365                           
 37366                           ; BSR set to: 0
 37367                           ;mcc_generated_files/eusart1.c: 247:     eusart1RxCount++;
 37368  0094AA  2B93               	incf	_eusart1RxCount& (0+255),f,b	;volatile
 37369                           
 37370                           ; BSR set to: 0
 37371  0094AC  0012               	return		;funcret
 37372  0094AE                     __end_of_EUSART1_RxDataHandler:
 37373                           	callstack 0
 37374                           
 37375                           	psect	text210
 37376  000000                     __ptext210:
 37377                           	callstack 0
 37378                           
 37379                           	psect	rparam
 37380  0000                     
 37381                           	psect	temp
 37382  000050                     btemp:
 37383                           	callstack 0
 37384  000050                     	ds	1
 37385  0000                     int$flags	set	btemp
 37386  0000                     wtemp8	set	btemp+1
 37387  0000                     ttemp5	set	btemp+1
 37388  0000                     ttemp6	set	btemp+4
 37389  0000                     ttemp7	set	btemp+8
 37390                           
 37391                           	psect	idloc
 37392                           
 37393                           ;Config register IDLOC0 @ 0x200000
 37394                           ;	unspecified, using default values
 37395  200000                     	org	2097152
 37396  200000  0FFF               	dw	4095
 37397                           
 37398                           ;Config register IDLOC1 @ 0x200002
 37399                           ;	unspecified, using default values
 37400  200002                     	org	2097154
 37401  200002  0FFF               	dw	4095
 37402                           
 37403                           ;Config register IDLOC2 @ 0x200004
 37404                           ;	unspecified, using default values
 37405  200004                     	org	2097156
 37406  200004  0FFF               	dw	4095
 37407                           
 37408                           ;Config register IDLOC3 @ 0x200006
 37409                           ;	unspecified, using default values
 37410  200006                     	org	2097158
 37411  200006  0FFF               	dw	4095
 37412                           
 37413                           ;Config register IDLOC4 @ 0x200008
 37414                           ;	unspecified, using default values
 37415  200008                     	org	2097160
 37416  200008  0FFF               	dw	4095
 37417                           
 37418                           ;Config register IDLOC5 @ 0x20000A
 37419                           ;	unspecified, using default values
 37420  20000A                     	org	2097162
 37421  20000A  0FFF               	dw	4095
 37422                           
 37423                           ;Config register IDLOC6 @ 0x20000C
 37424                           ;	unspecified, using default values
 37425  20000C                     	org	2097164
 37426  20000C  0FFF               	dw	4095
 37427                           
 37428                           ;Config register IDLOC7 @ 0x20000E
 37429                           ;	unspecified, using default values
 37430  20000E                     	org	2097166
 37431  20000E  0FFF               	dw	4095
 37432                           
 37433                           	psect	config
 37434                           
 37435                           ;Config register CONFIG1L @ 0x300000
 37436                           ;	External Oscillator mode Selection bits
 37437                           ;	FEXTOSC = OFF, Oscillator not enabled
 37438                           ;	Power-up default value for COSC bits
 37439                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
 37440  300000                     	org	3145728
 37441  300000  8C                 	db	140
 37442                           
 37443                           ;Config register CONFIG1H @ 0x300001
 37444                           ;	Clock Out Enable bit
 37445                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
 37446                           ;	Clock Switch Enable bit
 37447                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 37448                           ;	Fail-Safe Clock Monitor Enable bit
 37449                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 37450  300001                     	org	3145729
 37451  300001  FF                 	db	255
 37452                           
 37453                           ;Config register CONFIG2L @ 0x300002
 37454                           ;	Master Clear Enable bit
 37455                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
 37456                           ;	Power-up Timer Enable bit
 37457                           ;	PWRTE = ON, Power up timer enabled
 37458                           ;	Low-power BOR enable bit
 37459                           ;	LPBOREN = OFF, ULPBOR disabled
 37460                           ;	Brown-out Reset Enable bits
 37461                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 37462  300002                     	org	3145730
 37463  300002  FD                 	db	253
 37464                           
 37465                           ;Config register CONFIG2H @ 0x300003
 37466                           ;	Brown Out Reset Voltage selection bits
 37467                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
 37468                           ;	ZCD Disable bit
 37469                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
 37470                           ;	PPSLOCK bit One-Way Set Enable bit
 37471                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
 37472                           ;	Stack Full/Underflow Reset Enable bit
 37473                           ;	STVREN = ON, Stack full/underflow will cause Reset
 37474                           ;	Debugger Enable bit
 37475                           ;	DEBUG = OFF, Background debugger disabled
 37476                           ;	Extended Instruction Set Enable bit
 37477                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 37478  300003                     	org	3145731
 37479  300003  FF                 	db	255
 37480                           
 37481                           ;Config register CONFIG3L @ 0x300004
 37482                           ;	WDT Period Select bits
 37483                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 37484                           ;	WDT operating mode
 37485                           ;	WDTE = SWDTEN, WDT enabled/disabled by SWDTEN bit
 37486  300004                     	org	3145732
 37487  300004  BF                 	db	191
 37488                           
 37489                           ;Config register CONFIG3H @ 0x300005
 37490                           ;	WDT Window Select bits
 37491                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 37492                           ;	WDT input clock selector
 37493                           ;	WDTCCS = SC, Software Control
 37494  300005                     	org	3145733
 37495  300005  FF                 	db	255
 37496                           
 37497                           ;Config register CONFIG4L @ 0x300006
 37498                           ;	Write Protection Block 0
 37499                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
 37500                           ;	Write Protection Block 1
 37501                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
 37502                           ;	Write Protection Block 2
 37503                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
 37504                           ;	Write Protection Block 3
 37505                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
 37506  300006                     	org	3145734
 37507  300006  FF                 	db	255
 37508                           
 37509                           ;Config register CONFIG4H @ 0x300007
 37510                           ;	Configuration Register Write Protection bit
 37511                           ;	WRTC = OFF, Configuration registers (300000-30000Bh) not write-protected
 37512                           ;	Boot Block Write Protection bit
 37513                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 37514                           ;	Data EEPROM Write Protection bit
 37515                           ;	WRTD = OFF, Data EEPROM not write-protected
 37516                           ;	Scanner Enable bit
 37517                           ;	SCANE = ON, Scanner module is available for use, SCANMD bit can control the module
 37518                           ;	Low Voltage Programming Enable bit
 37519                           ;	LVP = OFF, HV on MCLR/VPP must be used for programming
 37520  300007                     	org	3145735
 37521  300007  DF                 	db	223
 37522                           
 37523                           ;Config register CONFIG5L @ 0x300008
 37524                           ;	UserNVM Program Memory Code Protection bit
 37525                           ;	CP = ON, UserNVM code protection enabled
 37526                           ;	DataNVM Memory Code Protection bit
 37527                           ;	CPD = ON, DataNVM code protection enabled
 37528  300008                     	org	3145736
 37529  300008  FC                 	db	252
 37530                           
 37531                           ;Config register CONFIG5H @ 0x300009
 37532                           ;	unspecified, using default values
 37533  300009                     	org	3145737
 37534  300009  FF                 	db	255
 37535                           
 37536                           ;Config register CONFIG6L @ 0x30000A
 37537                           ;	Table Read Protection Block 0
 37538                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
 37539                           ;	Table Read Protection Block 1
 37540                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
 37541                           ;	Table Read Protection Block 2
 37542                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
 37543                           ;	Table Read Protection Block 3
 37544                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
 37545  30000A                     	org	3145738
 37546  30000A  FF                 	db	255
 37547                           
 37548                           ;Config register CONFIG6H @ 0x30000B
 37549                           ;	Boot Block Table Read Protection bit
 37550                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 37551  30000B                     	org	3145739
 37552  30000B  FF                 	db	255
 37553                           tosu	equ	0xFFF
 37554                           tosh	equ	0xFFE
 37555                           tosl	equ	0xFFD
 37556                           stkptr	equ	0xFFC
 37557                           pclatu	equ	0xFFB
 37558                           pclath	equ	0xFFA
 37559                           pcl	equ	0xFF9
 37560                           tblptru	equ	0xFF8
 37561                           tblptrh	equ	0xFF7
 37562                           tblptrl	equ	0xFF6
 37563                           tablat	equ	0xFF5
 37564                           prodh	equ	0xFF4
 37565                           prodl	equ	0xFF3
 37566                           indf0	equ	0xFEF
 37567                           postinc0	equ	0xFEE
 37568                           postdec0	equ	0xFED
 37569                           preinc0	equ	0xFEC
 37570                           plusw0	equ	0xFEB
 37571                           fsr0h	equ	0xFEA
 37572                           fsr0l	equ	0xFE9
 37573                           wreg	equ	0xFE8
 37574                           indf1	equ	0xFE7
 37575                           postinc1	equ	0xFE6
 37576                           postdec1	equ	0xFE5
 37577                           preinc1	equ	0xFE4
 37578                           plusw1	equ	0xFE3
 37579                           fsr1h	equ	0xFE2
 37580                           fsr1l	equ	0xFE1
 37581                           bsr	equ	0xFE0
 37582                           indf2	equ	0xFDF
 37583                           postinc2	equ	0xFDE
 37584                           postdec2	equ	0xFDD
 37585                           preinc2	equ	0xFDC
 37586                           plusw2	equ	0xFDB
 37587                           fsr2h	equ	0xFDA
 37588                           fsr2l	equ	0xFD9
 37589                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    32
    Data        46
    BSS         824
    Persistent  19
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     58      79
    BANK0           160     35     157
    BANK1           256      0     256
    BANK2           256      0     243
    BANK3           256      0     247
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          136      0       0

Pointer List with Targets:

    i2c_write1ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    i2c_read1ByteRegister@d2.data	PTR unsigned char  size(2) Largest target is 0
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    i2c_read2ByteRegister@result.data	PTR unsigned char  size(2) Largest target is 0
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    i2c_write2ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    I2C1_Read1ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    I2C1_Read2ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    I2C1_Write1ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    I2C1_Write2ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    I2C1_DO_TX$8290$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_RX$8296$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_TX_EMPTY$8302$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_RX_EMPTY$8308$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_TX_EMPTY$8307	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_TX_EMPTY$8302	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), 
		 -> wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    I2C1_DO_RX$8301	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_RX$8296	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), 
		 -> wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    I2C1_DO_TX$8295	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_TX$8290	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), 
		 -> wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    I2C1_MasterFsm$8289	const PTR FTN()enum E10442 size(2) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_RESET(), I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), 
		 -> I2C1_DO_RX_ACK(), I2C1_DO_SEND_STOP(), I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_WRITE(), 
		 -> I2C1_DO_SEND_RESTART_READ(), I2C1_DO_TX_EMPTY(), I2C1_DO_RCEN(), I2C1_DO_RX(), 
		 -> I2C1_DO_TX(), I2C1_DO_SEND_ADR_WRITE(), I2C1_DO_SEND_ADR_READ(), I2C1_DO_IDLE(), 

    I2C1_CallbackReturnStop@funPtr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_CallbackReturnReset@funPtr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    Absolute function$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    S935$0$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    memcpy@d1	PTR void  size(2) Largest target is 17
		 -> controlSelectRemote@tempSerial(BANK0[4]), Decrypt@Buffer(COMRAM[4]), SecureKeyGen@SKEYtemp(COMRAM[8]), SecureKeyGen@HOPtemp(COMRAM[4]), 
		 -> SecureKeyGen@Buffer(COMRAM[8]), NormalKeyGen@SKEYtemp(COMRAM[4]), NormalKeyGen@SEED(BANK2[4]), NormalKeyGen@HOPtemp(COMRAM[4]), 
		 -> NormalKeyGen@Buffer(COMRAM[8]), DKEY(BANK2[8]), classic_data(BANK2[16]), I2C1_WriteNBytes@dat(COMRAM[17]), 
		 -> i2c_writeNBytes@dat(COMRAM[17]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 17
		 -> controlSelectRemote@tempSerial(BANK0[4]), Decrypt@Buffer(COMRAM[4]), SecureKeyGen@SKEYtemp(COMRAM[8]), SecureKeyGen@HOPtemp(COMRAM[4]), 
		 -> SecureKeyGen@Buffer(COMRAM[8]), NormalKeyGen@SKEYtemp(COMRAM[4]), NormalKeyGen@SEED(BANK2[4]), NormalKeyGen@HOPtemp(COMRAM[4]), 
		 -> NormalKeyGen@Buffer(COMRAM[8]), DKEY(BANK2[8]), classic_data(BANK2[16]), I2C1_WriteNBytes@dat(COMRAM[17]), 
		 -> i2c_writeNBytes@dat(COMRAM[17]), 

    memcpy@s1	PTR const void  size(2) Largest target is 64
		 -> classic_data.raw_data(BANK2[4]), Decrypt@Buffer(COMRAM[4]), SecureKeyGen@SKEYtemp(COMRAM[8]), SecureKeyGen@HOPtemp(COMRAM[4]), 
		 -> SecureKeyGen@Buffer(COMRAM[8]), NormalKeyGen@SKEYtemp(COMRAM[4]), NormalKeyGen@SEED(BANK2[4]), NormalKeyGen@HOPtemp(COMRAM[4]), 
		 -> NormalKeyGen@Buffer(COMRAM[8]), classic_data.serialnumber(BANK2[4]), classic_data(BANK2[16]), BufferRF(BANK2[9]), 
		 -> RemoveSerial@tempSerial(BANK0[4]), saveNewSerial@tempSerial(BANK0[4]), var_sys_NVM(BANK0[64]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 64
		 -> classic_data.raw_data(BANK2[4]), Decrypt@Buffer(COMRAM[4]), SecureKeyGen@SKEYtemp(COMRAM[8]), SecureKeyGen@HOPtemp(COMRAM[4]), 
		 -> SecureKeyGen@Buffer(COMRAM[8]), NormalKeyGen@SKEYtemp(COMRAM[4]), NormalKeyGen@SEED(BANK2[4]), NormalKeyGen@HOPtemp(COMRAM[4]), 
		 -> NormalKeyGen@Buffer(COMRAM[8]), classic_data.serialnumber(BANK2[4]), classic_data(BANK2[16]), BufferRF(BANK2[9]), 
		 -> RemoveSerial@tempSerial(BANK0[4]), saveNewSerial@tempSerial(BANK0[4]), var_sys_NVM(BANK0[64]), 

    eusartparser@package	PTR struct package_t size(1) Largest target is 7
		 -> main@package(BANK0[7]), 

    confirmpackage@package	PTR struct package_t size(1) Largest target is 7
		 -> main@package(BANK0[7]), 

    read_eusartparser@package	PTR struct package_t size(1) Largest target is 7
		 -> main@package(BANK0[7]), 

    init_package@package	PTR struct package_t size(1) Largest target is 7
		 -> main@package(BANK0[7]), 

    sm_send_event@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_send_event@psm	PTR struct . size(2) Largest target is 12
		 -> controlLearning_stateMachine(BANK2[11]), controlGate_stateMachine(BANK1[11]), main_stateMachine(BANK1[11]), menuConfiguration_stateMachine(BANK2[11]), 

    sm_get_current_state@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_get_current_state@psm	PTR struct . size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_restart@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_restart@psm	PTR struct . size(2) Largest target is 12
		 -> controlLearning_stateMachine(BANK2[11]), controlGate_stateMachine(BANK1[11]), main_stateMachine(BANK1[11]), menuConfiguration_stateMachine(BANK2[11]), 

    sm_init@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_init@psm	PTR struct . size(2) Largest target is 12
		 -> controlLearning_stateMachine(BANK2[11]), controlGate_stateMachine(BANK1[11]), main_stateMachine(BANK1[11]), menuConfiguration_stateMachine(BANK2[11]), 

    sm_execute_menuConfiguration@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_execute_menuConfiguration@psm	PTR struct . size(2) Largest target is 12
		 -> menuConfiguration_stateMachine(BANK2[11]), 

    S6617$Value	PTR unsigned char  size(2) Largest target is 64
		 -> setValueToEdit@value(BANK1[1]), var_sys_NVM(BANK0[64]), NULL(NULL[0]), 

    edit_Param.Value	PTR unsigned char  size(2) Largest target is 64
		 -> setValueToEdit@value(BANK1[1]), var_sys_NVM.walkTime(BANK0[1]), var_sys_NVM.softStart(BANK0[1]), var_sys_NVM.softstop(BANK0[1]), 
		 -> var_sys_NVM.flashRGBMode(BANK0[1]), var_sys_NVM.velocityDecelaration(BANK0[1]), var_sys_NVM.operationMode(BANK0[1]), var_sys_NVM.autoTimeFullClose(BANK0[1]), 
		 -> var_sys_NVM.Stopboton(BANK0[1]), var_sys_NVM.logicDigital(BANK0[1]), var_sys_NVM.Direction_motor(BANK0[1]), var_sys_NVM.folow_me(BANK0[1]), 
		 -> var_sys_NVM.ligthTime(BANK0[1]), var_sys_NVM.autoTimeWalkClose(BANK0[1]), var_sys_NVM.programmingDistance(BANK0[1]), var_sys_NVM.flashLightMode(BANK0[1]), 
		 -> var_sys_NVM.securityBandInOpen(BANK0[1]), var_sys_NVM.securityBandType(BANK0[1]), var_sys_NVM.securityBandIsON(BANK0[1]), var_sys_NVM.photoCellInOpen(BANK0[1]), 
		 -> var_sys_NVM.photoCellIsON(BANK0[1]), var_sys_NVM.decelarationClose(BANK0[1]), var_sys_NVM.motorPower(BANK0[1]), var_sys_NVM.decelarationOpen(BANK0[1]), 
		 -> var_sys_NVM.homemPresente(BANK0[1]), var_sys_NVM.TypeofMotor(BANK0[1]), var_sys_NVM.positionRemotesWalk(BANK0[1]), var_sys_NVM.decelarationSensivity(BANK0[1]), 
		 -> var_sys_NVM.motorSensitivity(BANK0[1]), var_sys_NVM.electricBrake(BANK0[1]), var_sys_NVM(BANK0[64]), NULL(NULL[0]), 

    sm_execute_main@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_execute_main@psm	PTR struct . size(2) Largest target is 12
		 -> main_stateMachine(BANK1[11]), 

    sm_execute_ControlLearning@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_execute_ControlLearning@psm	PTR struct . size(2) Largest target is 12
		 -> controlLearning_stateMachine(BANK2[11]), 

    sm_execute_ControlGate@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_execute_ControlGate@psm	PTR struct . size(2) Largest target is 12
		 -> controlGate_stateMachine(BANK1[11]), 

    decrementTimeslot@ts	PTR int  size(2) Largest target is 72
		 -> ts_system.TimeShowVersion(BANK1[2]), ts_system.TimeLearningDecelaration(BANK1[2]), ts_system.TimeWaitToGetCurrent(BANK1[2]), ts_system.InvertionTimeClosingFromOpen(BANK1[2]), 
		 -> ts_system.TimeWaitReleCapacitor(BANK1[2]), ts_system.TimeInversionStart(BANK1[2]), ts_system.TimeStopedBeforeDecelaration(BANK1[2]), ts_system.TimeWaitToNextState(BANK1[2]), 
		 -> ts_system.timeFreqFlashligth(BANK1[2]), ts_system.timeFreqRGB(BANK1[2]), ts_system.timeWaitToClose(BANK1[2]), ts_system.timeOpenWalk(BANK1[2]), 
		 -> ts_system.timeoutMenu(BANK1[2]), ts_system.timeFreqDigit(BANK1[2]), ts_system.timewaitFlashRGB(BANK1[2]), ts_system.TimeStopElectricBrake(BANK1[2]), 
		 -> ts_system.Debug_TS(BANK1[2]), ts_system.timeSinalizationDigit(BANK1[2]), ts_system.TimeLastCommand(BANK1[2]), ts_system.timeBetweenSaveCounters(BANK1[2]), 
		 -> ts_system.TimeCurrentAlarm(BANK1[2]), ts_system.TimeCurrentWaitForAlarm(BANK1[2]), ts_system.TimeReleCapacitor(BANK1[2]), ts_system.TimeChargeCondesador(BANK1[2]), 
		 -> ts_system.TimeTransitionDecelaration(BANK1[2]), ts_system.timewaitBeforeSoftStart(BANK1[2]), ts_system.timeSoftStart(BANK1[2]), ts_system.TimeElectricBrake(BANK1[2]), 
		 -> ts_system.TimeStopADCZeroOffsetCalc(BANK1[2]), ts_system(BANK1[72]), 

    controlLearning_stateMachine.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    controlGate_stateMachine.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    main_stateMachine.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S4647$parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    menuConfiguration_stateMachine.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    verifyProgramingMode@classic_data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    keeloq_classic_decrypt_packet@data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    DecryptPacket_12BIT@data	PTR unsigned char  size(2) Largest target is 9
		 -> BufferRF(BANK2[9]), 

    DecryptPacket_12BIT@classic_data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    keeloqDecryptPacket@data	PTR unsigned char  size(2) Largest target is 9
		 -> BufferRF(BANK2[9]), 

    keeloqDecryptPacket@classic_data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    getHopCode@data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    HopCHK@data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    DecCHK@data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    Decrypt@packet	PTR unsigned char  size(2) Largest target is 16
		 -> SecureKeyGen@HOPtemp(COMRAM[4]), NormalKeyGen@Buffer(COMRAM[8]), classic_data(BANK2[16]), 

    NormalKeyGen@serial	PTR unsigned long  size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    sp__getClassicManufCode	PTR void  size(2) Largest target is 8
		 -> DKEY(BANK2[8]), 

    getSerialCmd@serial	PTR unsigned long  size(1) Largest target is 4
		 -> controlSelectRemote@tempSerial(BANK0[4]), 

    SaveNVM_VarSystem@point	PTR unsigned char  size(1) Largest target is 64
		 -> var_sys_NVM(BANK0[64]), 

    ReadSerial@tempSerial	PTR unsigned long  size(1) Largest target is 4
		 -> eusartparser@serial(BANK0[4]), 

    validateRemoteSerialNumber@position	PTR unsigned char  size(2) Largest target is 16
		 -> eusartparser@pos(BANK0[1]), controlSelectRemote@pos(BANK0[1]), classic_data(BANK2[16]), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), Absolute function(), 

    I2C1_SetCallback@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_SetCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), 
		 -> rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), wr1RegCompleteHandler(), 

    I2C1_SetAddressNackCallback@ptr	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C1_SetAddressNackCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), 

    I2C1_SetDataCompleteCallback@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_SetDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), 
		 -> rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), wr1RegCompleteHandler(), 

    I2C1_SetBuffer@buffer	PTR void  size(2) Largest target is 64
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 
		 -> I2C1_ReadDataBlock@reg(COMRAM[1]), I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_WriteNBytes@dat(COMRAM[17]), I2C1_Write2ByteRegister@reg(COMRAM[1]), 
		 -> I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@reg(COMRAM[1]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@reg(COMRAM[1]), 
		 -> I2C1_Read2ByteRegister@returnValue(COMRAM[2]), I2C1_Read1ByteRegister@reg(COMRAM[1]), I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@reg(COMRAM[2]), 
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@reg(COMRAM[1]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@reg(COMRAM[1]), 
		 -> i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@reg(COMRAM[1]), i2c_read1ByteRegister@d2(COMRAM[1]), i2c_writeNBytes@dat(COMRAM[17]), 
		 -> i2c_write1ByteRegister@reg(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    S935$data_ptr	PTR unsigned char  size(2) Largest target is 64
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 
		 -> I2C1_ReadDataBlock@reg(COMRAM[1]), I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_WriteNBytes@dat(COMRAM[17]), I2C1_Write2ByteRegister@reg(COMRAM[1]), 
		 -> I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@reg(COMRAM[1]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@reg(COMRAM[1]), 
		 -> I2C1_Read2ByteRegister@returnValue(COMRAM[2]), I2C1_Read1ByteRegister@reg(COMRAM[1]), I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@reg(COMRAM[2]), 
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@reg(COMRAM[1]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@reg(COMRAM[1]), 
		 -> i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@reg(COMRAM[1]), i2c_read1ByteRegister@d2(COMRAM[1]), i2c_writeNBytes@dat(COMRAM[17]), 
		 -> i2c_write1ByteRegister@reg(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_Status.data_ptr	PTR unsigned char  size(2) Largest target is 64
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 
		 -> I2C1_ReadDataBlock@reg(COMRAM[1]), I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_WriteNBytes@dat(COMRAM[17]), I2C1_Write2ByteRegister@reg(COMRAM[1]), 
		 -> I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@reg(COMRAM[1]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@reg(COMRAM[1]), 
		 -> I2C1_Read2ByteRegister@returnValue(COMRAM[2]), I2C1_Read1ByteRegister@reg(COMRAM[1]), I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@reg(COMRAM[2]), 
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@reg(COMRAM[1]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@reg(COMRAM[1]), 
		 -> i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@reg(COMRAM[1]), i2c_read1ByteRegister@d2(COMRAM[1]), i2c_writeNBytes@dat(COMRAM[17]), 
		 -> i2c_write1ByteRegister@reg(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    S935$callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_Status.callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    S935$callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), 
		 -> wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    I2C1_Status.callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), 
		 -> wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    i2c1_fsmStateTable	const PTR FTN()enum E10442[16] size(2) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_RESET(), I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), 
		 -> I2C1_DO_RX_ACK(), I2C1_DO_SEND_STOP(), I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_WRITE(), 
		 -> I2C1_DO_SEND_RESTART_READ(), I2C1_DO_TX_EMPTY(), I2C1_DO_RCEN(), I2C1_DO_RX(), 
		 -> I2C1_DO_TX(), I2C1_DO_SEND_ADR_WRITE(), I2C1_DO_SEND_ADR_READ(), I2C1_DO_IDLE(), 

    rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr.data	PTR unsigned char  size(2) Largest target is 64
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    wr2RegCompleteHandler@i2c1_master_example$F523@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    wr1RegCompleteHandler@i2c1_master_example$F517@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    rd2RegCompleteHandler@i2c1_master_example$F511@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    rd1RegCompleteHandler@i2c1_master_example$F500@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    bufferBlock.data	PTR unsigned char  size(2) Largest target is 64
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    i2c_readDataBlock@data	PTR void  size(2) Largest target is 64
		 -> eusartparser@serial(BANK0[4]), var_sys_NVM.homemPresente(BANK0[1]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), var_sys_NVM.positionRemotesFull(BANK0[1]), 
		 -> memoryTEMP(BANK2[16]), var_sys_NVM.learningCurrentNormalClose(BANK0[2]), var_sys_NVM(BANK0[64]), 

    d.data	PTR unsigned char  size(2) Largest target is 64
		 -> eusartparser@serial(BANK0[4]), var_sys_NVM.homemPresente(BANK0[1]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), var_sys_NVM.positionRemotesFull(BANK0[1]), 
		 -> memoryTEMP(BANK2[16]), var_sys_NVM.learningCurrentNormalClose(BANK0[2]), var_sys_NVM(BANK0[64]), 

    S429$data	PTR unsigned char  size(2) Largest target is 64
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    rdBlkRegCompleteHandler@p.data	PTR unsigned char  size(2) Largest target is 64
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    rdBlkRegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    wr2RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    rd2RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    rd1RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    sp__memcpy	PTR void  size(2) Largest target is 17
		 -> controlSelectRemote@tempSerial(BANK0[4]), Decrypt@Buffer(COMRAM[4]), SecureKeyGen@SKEYtemp(COMRAM[8]), SecureKeyGen@HOPtemp(COMRAM[4]), 
		 -> SecureKeyGen@Buffer(COMRAM[8]), NormalKeyGen@SKEYtemp(COMRAM[4]), NormalKeyGen@SEED(BANK2[4]), NormalKeyGen@HOPtemp(COMRAM[4]), 
		 -> NormalKeyGen@Buffer(COMRAM[8]), DKEY(BANK2[8]), classic_data(BANK2[16]), I2C1_WriteNBytes@dat(COMRAM[17]), 
		 -> i2c_writeNBytes@dat(COMRAM[17]), 

    i2c_writeNBytes@data	PTR void  size(1) Largest target is 64
		 -> RemoveSerial@tempSerial(BANK0[4]), saveNewSerial@tempSerial(BANK0[4]), var_sys_NVM(BANK0[64]), 

    wr1RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Transmit_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMRAM

    _sm_execute_menuConfiguration->_ResetDefaultMemory
    _sm_execute_menuConfiguration->_setValueToEdit
    _load_New_Menu->_SetSegmentValueIntermitentMain
    _controlSelectRemote->_RemoveSerial
    _controlSelectRemote->_saveNewSerial
    _controlSelectRemote->_validateRemoteSerialNumber
    _getSerialCmd->_memcpy
    _controlSaveRemote->_SetSegmentValueIntermitentMain
    ___awdiv->___lbmod
    _SetSegmentValueMain->___awdiv
    _controlLearnDigit->_SetSegmentValueLearn
    _sm_execute_ControlGate->_sm_execute_ControlLearning
    _generateErrorLearnig->_sm_init
    _sm_init->_sm_restart
    _setPositionInvertionInOpening->_getTimeDecelaration
    _controlVelocity->_getStateOpenPosition
    _getStateOpenPosition->_getTimeDecelaration
    _InitSoftStop->_GetMotorPower
    _CloseOrder->_sm_send_event
    _setPositionInvertionInClosing->_getTimeDecelaration
    _getTimeDecelaration->___lmul
    ___lmul->___lldiv
    _StopOrder->_sm_send_event
    _GetSecurityStateInClosing->_SetSegmentValueIntermitent
    _WaitPreFlash->_sm_send_event
    _OpenFullOrder->_sm_send_event
    _OpenWalkOrder->_sm_send_event
    _sm_send_event->_sm_get_current_state
    _InitSoftStart->_GetMotorPower
    _GetSecurityStateInOpening->_SetSegmentValueIntermitent
    _GetOpenOrder->_SetSegmentValueIntermitentMain
    _SetSegmentValueIntermitentMain->___awdiv
    _read_package->_EUSART1_Read
    _keeloqDecryptPacket->_validateRemoteSerialNumber
    _keeloq_classic_decrypt_packet->_NormalKeyGen
    _NormalKeyGen->_Decrypt
    _Decrypt->_memcpy
    _HopCHK->_getHopCode
    _getHopCode->___wmul
    _DecryptPacket_12BIT->_validateRemoteSerialNumber
    _loadNVM_VarSystem->_ResetDefaultMemory
    _loadNVM_VarSystem->_checkNVM_VarSystem
    _eusartparser->_RemoveSerial
    _eusartparser->_saveNewSerial
    _eusartparser->_validateRemoteSerialNumber
    _validateRemoteSerialNumber->_i2c_readDataBlock
    _saveNewSerial->_i2c_writeNBytes
    _read_eusartparser->_write_package
    _write_package->_EUSART1_Write
    _confirmpackage->_init_package
    _cmdMemoryIsEmpty->_i2c_readDataBlock
    _RemoveSerial->_i2c_writeNBytes
    _ReadSerial->_i2c_readDataBlock
    _ShowVersion->_SetSegmentValue
    _SetSegmentValue->___awdiv
    _SYSTEM_Initialize->_TMR1_Initialize
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler
    _ControlMotor->_VerifyElectricalBrake
    _ControlLights->_setRGB_ON
    _setRGB_ON->_RGB_Set
    _ControlCurrent->_getCurrentComparator
    _refreshCurrent->_sumHIST
    _refreshADCZeroOffset->___lwdiv
    _getCurrentComparator->___wmul
    _SaveNVM_VarSystem->_i2c_writeNBytes
    _I2C1_SetAddressNackCallback->_I2C1_SetCallback
    _I2C1_MasterWrite->_I2C1_MasterOperation
    _I2C1_Poller->_I2C1_MasterFsm
    _I2C1_MasterFsm->_I2C1_DO_ADDRESS_NACK
    _I2C1_MasterFsm->_I2C1_DO_RX
    _I2C1_MasterFsm->_I2C1_DO_TX
    _I2C1_MasterFsm->_I2C1_DO_TX_EMPTY
    _I2C1_DO_TX_EMPTY->_I2C1_CallbackReturnReset
    _I2C1_DO_TX_EMPTY->_I2C1_CallbackReturnStop
    _I2C1_DO_TX_EMPTY->_rd1RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rd1RegCompleteHandler@i2c1_master_example$F500
    _I2C1_DO_TX_EMPTY->_rd2RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rd2RegCompleteHandler@i2c1_master_example$F511
    _I2C1_DO_TX_EMPTY->_rdBlkRegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rdBlkRegCompleteHandler@i2c1_master_example$F535
    _I2C1_DO_TX_EMPTY->_wr1RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_wr1RegCompleteHandler@i2c1_master_example$F517
    _I2C1_DO_TX_EMPTY->_wr2RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_wr2RegCompleteHandler@i2c1_master_example$F523
    _I2C1_DO_TX->_I2C1_CallbackReturnReset
    _I2C1_DO_TX->_I2C1_CallbackReturnStop
    _I2C1_DO_TX->_rd1RegCompleteHandler
    _I2C1_DO_TX->_rd1RegCompleteHandler@i2c1_master_example$F500
    _I2C1_DO_TX->_rd2RegCompleteHandler
    _I2C1_DO_TX->_rd2RegCompleteHandler@i2c1_master_example$F511
    _I2C1_DO_TX->_rdBlkRegCompleteHandler
    _I2C1_DO_TX->_rdBlkRegCompleteHandler@i2c1_master_example$F535
    _I2C1_DO_TX->_wr1RegCompleteHandler
    _I2C1_DO_TX->_wr1RegCompleteHandler@i2c1_master_example$F517
    _I2C1_DO_TX->_wr2RegCompleteHandler
    _I2C1_DO_TX->_wr2RegCompleteHandler@i2c1_master_example$F523
    _I2C1_DO_SEND_ADR_WRITE->_I2C1_MasterSendTxData
    _I2C1_DO_RX->_I2C1_CallbackReturnReset
    _I2C1_DO_RX->_I2C1_CallbackReturnStop
    _I2C1_DO_RX->_rd1RegCompleteHandler
    _I2C1_DO_RX->_rd1RegCompleteHandler@i2c1_master_example$F500
    _I2C1_DO_RX->_rd2RegCompleteHandler
    _I2C1_DO_RX->_rd2RegCompleteHandler@i2c1_master_example$F511
    _I2C1_DO_RX->_rdBlkRegCompleteHandler
    _I2C1_DO_RX->_rdBlkRegCompleteHandler@i2c1_master_example$F535
    _I2C1_DO_RX->_wr1RegCompleteHandler
    _I2C1_DO_RX->_wr1RegCompleteHandler@i2c1_master_example$F517
    _I2C1_DO_RX->_wr2RegCompleteHandler
    _I2C1_DO_RX->_wr2RegCompleteHandler@i2c1_master_example$F523
    _I2C1_DO_ADDRESS_NACK->_I2C1_CallbackReturnReset
    _I2C1_DO_ADDRESS_NACK->_I2C1_CallbackReturnStop
    _I2C1_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rd1RegCompleteHandler@i2c1_master_example$F500
    _I2C1_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rd2RegCompleteHandler@i2c1_master_example$F511
    _I2C1_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler@i2c1_master_example$F535
    _I2C1_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_wr1RegCompleteHandler@i2c1_master_example$F517
    _I2C1_DO_ADDRESS_NACK->_wr2RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_wr2RegCompleteHandler@i2c1_master_example$F523
    _wr2RegCompleteHandler@i2c1_master_example$F523->_I2C1_SetDataCompleteCallback
    _wr2RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _wr1RegCompleteHandler@i2c1_master_example$F517->_I2C1_SetDataCompleteCallback
    _wr1RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rdBlkRegCompleteHandler@i2c1_master_example$F535->_I2C1_SetDataCompleteCallback
    _rdBlkRegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rd2RegCompleteHandler@i2c1_master_example$F511->_I2C1_SetDataCompleteCallback
    _rd2RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rd1RegCompleteHandler@i2c1_master_example$F500->_I2C1_SetDataCompleteCallback
    _rd1RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _I2C1_SetDataCompleteCallback->_I2C1_SetCallback

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR2_ISR->_ReadADC
    _refreshSegment->_Segments_Set
    _controlTimeslots->_decrementTimeslot
    _ReadADC->_ADCC_GetSingleConversion
    _TMR1_ISR->_controlMotorForce
    _controlMotorForce->i2_GetMotorPower
    _TMR0_ISR->_rxi

Critical Paths under _main in BANK0

    _main->_eusartparser
    _sm_execute_main->_sm_execute_menuConfiguration
    _sm_execute_menuConfiguration->_controlSelectRemote
    _setValueToEdit->_SaveNVM_VarSystem
    _controlSelectRemote->_validateRemoteSerialNumber
    _sm_execute_ControlGate->_actionZone_Opening
    _sm_execute_ControlLearning->_SaveNVM_VarSystem
    _actionZone_Opening->_setPositionInvertionInClosing
    _controlVelocity->_getStateOpenPosition
    _actionZone_Closing->_setPositionInvertionInClosing
    _readRFButtons->_keeloqDecryptPacket
    _keeloqDecryptPacket->_validateRemoteSerialNumber
    _DecryptPacket_12BIT->_validateRemoteSerialNumber
    _loadNVM_VarSystem->_SaveNVM_VarSystem
    _checkNVM_VarSystem->_SaveNVM_VarSystem
    _ResetDefaultMemory->_SaveNVM_VarSystem
    _eusartparser->_validateRemoteSerialNumber
    _ControlCounterMoves->_SaveNVM_VarSystem

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0 8868082
                                             28 BANK0      7     7      0
                _ControlCounterMoves
                     _ControlCurrent
                      _ControlInputs
                      _ControlLights
                       _ControlMotor
                _EUSART1_is_rx_ready
                       _InitReceiver
                  _SYSTEM_Initialize
                    _SetSegmentValue
                        _ShowVersion
                    _WWDT_SoftEnable
                    _WWDT_TimerClear
                    _controlVelocity
                       _eusartparser
                      _getKeyPressed
                  _loadNVM_VarSystem
                         _readInputs
                      _readRFButtons
                       _read_package
                         _readbutton
             _sm_execute_ControlGate
                    _sm_execute_main
                            _sm_init
 ---------------------------------------------------------------------------------
 (1) _sm_execute_main                                      4     2      2 3269200
                                             21 BANK0      4     2      2
     _SetSegmentValueIntermitentMain
                _SetSegmentValueMain
                      _load_New_Menu
       _sm_execute_menuConfiguration
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (2) _sm_execute_menuConfiguration                         4     2      2 3243776
                                             17 BANK0      4     2      2
                    _ClearFlag_rfCMD
                 _ResetDefaultMemory
                  _SaveNVM_VarSystem
     _SetSegmentValueIntermitentMain
                _SetSegmentValueMain
                            ___lbdiv
                            ___lldiv
                             ___lmul
                            ___lwdiv
                  _controlLearnDigit
                  _controlSaveRemote
                _controlSelectRemote
                      _load_New_Menu
                     _setValueToEdit
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _setValueToEdit                                       6     5      1  718231
                                             57 COMRAM     1     0      1
                                              4 BANK0      5     5      0
                       _InitReceiver
                  _SaveNVM_VarSystem
                   _cmdMemoryIsEmpty
                      _load_New_Menu
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (4) _load_New_Menu                                        4     4      0    7093
                                             31 COMRAM     4     4      0
     _SetSegmentValueIntermitentMain
                _SetSegmentValueMain
 ---------------------------------------------------------------------------------
 (4) _InitReceiver                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _controlSelectRemote                                  9     9      0 1776319
                                              8 BANK0      9     9      0
                    _ClearFlag_rfCMD
                       _RemoveSerial
                  _SaveNVM_VarSystem
                    _SetSegmentValue
     _SetSegmentValueIntermitentMain
                _SetSegmentValueMain
                            ___awdiv
                            ___lbmod
                   _cmdMemoryIsEmpty
                       _getSerialCmd
                      _getTypeRemote
                      _saveNewSerial
                      _sm_send_event
         _validateRemoteSerialNumber
 ---------------------------------------------------------------------------------
 (4) _getTypeRemote                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _getSerialCmd                                         2     1      1    6667
                                             26 COMRAM     2     1      1
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _controlSaveRemote                                    1     1      0   20456
                                             31 COMRAM     1     1      0
                    _ClearFlag_rfCMD
     _SetSegmentValueIntermitentMain
                _SetSegmentValueMain
                            ___awdiv
                            ___lbmod
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (4) ___lbmod                                              4     3      1    1223
                                             15 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    1364
                                             19 COMRAM     8     4      4
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (5) _SetSegmentValueMain                                  2     1      1    2020
                                             27 COMRAM     2     1      1
                            ___awdiv (ARG)
                            ___lbdiv (ARG)
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (4) _ClearFlag_rfCMD                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _controlLearnDigit                                    0     0      0      22
               _SetSegmentValueLearn
 ---------------------------------------------------------------------------------
 (4) _SetSegmentValueLearn                                 3     3      0      22
                                             15 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     466
                                             15 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _sm_execute_ControlGate                               5     3      2  633789
                                             15 BANK0      5     3      2
                       _GetOpenOrder
         _SetSegmentValueIntermitent
                       _WaitPreFlash
                  _actionZone_Closed
                 _actionZone_Closing
                  _actionZone_Opened
                 _actionZone_Opening
         _sm_execute_ControlLearning
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (2) _sm_execute_ControlLearning                           5     3      2  372027
                                             57 COMRAM     1     1      0
                                              4 BANK0      4     2      2
                       _GetOpenOrder
                  _SaveNVM_VarSystem
                      _calculateMean
                 _clearLearningValue
               _generateErrorLearnig
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _generateErrorLearnig                                 0     0      0    2622
                            _sm_init
 ---------------------------------------------------------------------------------
 (1) _sm_init                                              5     0      5    2622
                                             17 COMRAM     5     0      5
                         _sm_restart
 ---------------------------------------------------------------------------------
 (2) _sm_restart                                           2     0      2     214
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _clearLearningValue                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _calculateMean                                       12     4      8    1241
                                             15 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) _actionZone_Opening                                   3     3      0   52477
                                             12 BANK0      3     3      0
                         _CloseOrder
                       _GetOpenOrder
          _GetSecurityStateInClosing
          _GetSecurityStateInOpening
                   _InitFullAutoTime
                   _InitWalkAutoTime
         _SetSegmentValueIntermitent
                          _StopOrder
                     _VerifyFollowMe
                    _controlVelocity
      _setPositionInvertionInClosing
      _setPositionInvertionInOpening
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _setPositionInvertionInOpening                        8     8      0    1207
                                             49 COMRAM     8     8      0
                _getTimeDecelaration
 ---------------------------------------------------------------------------------
 (3) _controlVelocity                                      1     1      0    3806
                                              2 BANK0      1     1      0
          _ControlDecelarationFactor
                       _InitSoftStop
               _getStateOpenPosition
                _getTimeDecelaration
 ---------------------------------------------------------------------------------
 (4) _getStateOpenPosition                                11    11      0    2562
                                             49 COMRAM     9     9      0
                                              0 BANK0      2     2      0
                             ___lmul
                _getTimeDecelaration
 ---------------------------------------------------------------------------------
 (4) _InitSoftStop                                         1     1      0      37
                                             19 COMRAM     1     1      0
                      _GetMotorPower
 ---------------------------------------------------------------------------------
 (4) _ControlDecelarationFactor                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _actionZone_Opened                                    2     2      0   42796
                                             31 COMRAM     2     2      0
                         _CloseOrder
                       _GetOpenOrder
          _GetSecurityStateInClosing
                   _InitFullAutoTime
                   _InitWalkAutoTime
                      _OpenFullOrder
                      _OpenWalkOrder
                     _VerifyFollowMe
 ---------------------------------------------------------------------------------
 (3) _VerifyFollowMe                                       1     1      0      31
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _CloseOrder                                           0     0      0   11293
                      _InitSoftStart
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (2) _actionZone_Closing                                   2     2      0   58040
                                             49 COMRAM     2     2      0
                       _GetOpenOrder
          _GetSecurityStateInClosing
                   _InitFullAutoTime
                   _InitWalkAutoTime
                      _OpenFullOrder
                      _OpenWalkOrder
         _SetSegmentValueIntermitent
                          _StopOrder
                             ___lmul
      _setPositionInvertionInClosing
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _setPositionInvertionInClosing                       12    12      0    1207
                                              0 BANK0     12    12      0
                _getTimeDecelaration
 ---------------------------------------------------------------------------------
 (4) _getTimeDecelaration                                  9     5      4    1207
                                             40 COMRAM     9     5      4
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8    1176
                                             28 COMRAM    12     4      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) _StopOrder                                            0     0      0   11256
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _GetSecurityStateInClosing                            0     0      0    1893
         _SetSegmentValueIntermitent
 ---------------------------------------------------------------------------------
 (2) _actionZone_Closed                                    2     2      0   65057
                                             31 COMRAM     2     2      0
                       _GetOpenOrder
          _GetSecurityStateInOpening
                   _InitFullAutoTime
                   _InitWalkAutoTime
                      _OpenFullOrder
                      _OpenWalkOrder
                       _WaitPreFlash
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _WaitPreFlash                                         0     0      0   22549
                   _InitFullAutoTime
                      _OpenFullOrder
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _OpenFullOrder                                        0     0      0   11293
                      _InitSoftStart
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _InitFullAutoTime                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _OpenWalkOrder                                        4     4      0   11389
                                             23 COMRAM     4     4      0
                      _InitSoftStart
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (2) _sm_send_event                                        6     2      4   11256
                                             17 COMRAM     6     2      4
               _sm_get_current_state
 ---------------------------------------------------------------------------------
 (3) _sm_get_current_state                                 2     0      2     121
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _InitSoftStart                                        1     1      0      37
                                             19 COMRAM     1     1      0
                      _GetMotorPower
 ---------------------------------------------------------------------------------
 (3) _InitWalkAutoTime                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _GetSecurityStateInOpening                            0     0      0    1893
         _SetSegmentValueIntermitent
 ---------------------------------------------------------------------------------
 (3) _SetSegmentValueIntermitent                           4     1      3    1893
                                             15 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (3) _GetOpenOrder                                         0     0      0    6454
     _SetSegmentValueIntermitentMain
                            ___lbdiv
 ---------------------------------------------------------------------------------
 (3) ___lbdiv                                              4     3      1    1861
                                             15 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (5) _SetSegmentValueIntermitentMain                       4     1      3    4593
                                             27 COMRAM     4     1      3
                            ___awdiv (ARG)
                            ___lbdiv (ARG)
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _readbutton                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _read_package                                        14     7      7     283
                                             16 COMRAM    14     7      7
                       _EUSART1_Read
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Read                                         1     1      0      24
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _readRFButtons                                        0     0      0  742047
                _DecryptPacket_12BIT
                _keeloqDecryptPacket
 ---------------------------------------------------------------------------------
 (2) _keeloqDecryptPacket                                 10     6      4  384912
                                              8 BANK0     10     6      4
                             _DecCHK
                             _HopCHK
      _keeloq_classic_decrypt_packet
                             _memcpy
         _validateRemoteSerialNumber
               _verifyProgramingMode
 ---------------------------------------------------------------------------------
 (3) _verifyProgramingMode                                 3     1      2     152
                                             15 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _keeloq_classic_decrypt_packet                        5     3      2   23218
                                             55 COMRAM     2     0      2
                                              0 BANK0      3     3      0
                            _Decrypt
                       _NormalKeyGen
 ---------------------------------------------------------------------------------
 (4) _NormalKeyGen                                        18    16      2   15069
                                             37 COMRAM    18    16      2
                            _Decrypt
                      _LoadManufCode
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _LoadManufCode                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _Decrypt                                             11     9      2    7935
                                             26 COMRAM    11     9      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _HopCHK                                               4     2      2    3536
                                             35 COMRAM     4     2      2
                          _ReqResync
                         _getHopCode
 ---------------------------------------------------------------------------------
 (4) _getHopCode                                          14    12      2    3145
                                             21 COMRAM    14    12      2
                          _ReqResync
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) _ReqResync                                            2     0      2     174
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _DecCHK                                               4     2      2     242
                                             15 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _DecryptPacket_12BIT                                  5     1      4  357135
                                              8 BANK0      5     1      4
                             _memcpy
         _validateRemoteSerialNumber
 ---------------------------------------------------------------------------------
 (1) _readInputs                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _loadNVM_VarSystem                                    0     0      0 1742040
             _I2C1_Read1ByteRegister
                 _ResetDefaultMemory
                  _SaveNVM_VarSystem
                 _checkNVM_VarSystem
                  _i2c_readDataBlock
 ---------------------------------------------------------------------------------
 (2) _checkNVM_VarSystem                                   1     1      0  349391
                                             57 COMRAM     1     1      0
                  _SaveNVM_VarSystem
 ---------------------------------------------------------------------------------
 (3) _ResetDefaultMemory                                   1     1      0  349369
                                             57 COMRAM     1     1      0
                  _SaveNVM_VarSystem
 ---------------------------------------------------------------------------------
 (2) _I2C1_Read1ByteRegister                               3     2      1  345691
                                             33 COMRAM     3     2      1
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (1) _getKeyPressed                                        1     1      0      24
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _eusartparser                                        27    26      1 2116459
                                              8 BANK0     20    19      1
                         _ReadSerial
                       _RemoveSerial
                  _SaveNVM_VarSystem
                   _cmdMemoryIsEmpty
                     _confirmpackage
                  _read_eusartparser
                      _saveNewSerial
         _validateRemoteSerialNumber
                 _write_eusartparser
                      _write_package
 ---------------------------------------------------------------------------------
 (2) _write_eusartparser                                  19    12      7    1343
                                             15 COMRAM    19    12      7
 ---------------------------------------------------------------------------------
 (4) _validateRemoteSerialNumber                          21    14      7  350226
                                             45 COMRAM    13     6      7
                                              0 BANK0      8     8      0
                  _i2c_readDataBlock
 ---------------------------------------------------------------------------------
 (4) _saveNewSerial                                        8     3      5  349630
                                             57 COMRAM     1     1      0
                                              0 BANK0      7     2      5
                    _i2c_writeNBytes
 ---------------------------------------------------------------------------------
 (2) _read_eusartparser                                    3     2      1    7126
                                             23 COMRAM     3     2      1
                      _write_package
 ---------------------------------------------------------------------------------
 (2) _write_package                                        7     0      7    4916
                                             16 COMRAM     7     0      7
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART1_Write                                        1     1      0      44
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _confirmpackage                                       2     0      2    2858
                                             16 COMRAM     2     0      2
                       _init_package
 ---------------------------------------------------------------------------------
 (3) _init_package                                         1     0      1     142
                                             15 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (4) _cmdMemoryIsEmpty                                     8     7      1  349681
                                             45 COMRAM     8     7      1
                  _i2c_readDataBlock
 ---------------------------------------------------------------------------------
 (4) _RemoveSerial                                         8     7      1  349453
                                             57 COMRAM     1     0      1
                                              0 BANK0      7     7      0
                    _i2c_writeNBytes
 ---------------------------------------------------------------------------------
 (2) _ReadSerial                                           5     3      2  348648
                                             45 COMRAM     5     3      2
                  _i2c_readDataBlock
 ---------------------------------------------------------------------------------
 (5) _i2c_readDataBlock                                   12     6      6  348313
                                             33 COMRAM    12     6      6
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (1) _WWDT_TimerClear                                      2     2      0      25
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _WWDT_SoftEnable                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ShowVersion                                          0     0      0     500
                    _SetSegmentValue
 ---------------------------------------------------------------------------------
 (4) _SetSegmentValue                                      2     1      1     500
                                             27 COMRAM     2     1      1
                            ___awdiv (ARG)
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     784
                    _ADCC_Initialize
                 _EUSART1_Initialize
                    _I2C1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _WWDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WWDT_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0      98
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR2_SetInterruptHandler                             2     0      2      98
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0      98
                                             17 COMRAM     2     2      0
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             2     0      2      98
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0      98
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2      98
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     490
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2      98
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2      98
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ControlMotor                                         7     7      0     223
                                             17 COMRAM     7     7      0
              _VerifyElectricalBrake
 ---------------------------------------------------------------------------------
 (2) _VerifyElectricalBrake                                2     2      0     112
                                             15 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ControlLights                                        0     0      0    1620
                   _setFlashLigth_ON
                          _setRGB_ON
 ---------------------------------------------------------------------------------
 (2) _setRGB_ON                                            5     3      2    1022
                                             16 COMRAM     5     3      2
                            _RGB_Set
 ---------------------------------------------------------------------------------
 (3) _RGB_Set                                              1     1      0      22
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _setFlashLigth_ON                                     2     0      2     598
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _ControlInputs                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ControlCurrent                                       4     4      0    4118
                                             34 COMRAM     4     4      0
                      _GetMotorPower
               _getCurrentComparator
               _refreshADCZeroOffset
                     _refreshCurrent
 ---------------------------------------------------------------------------------
 (2) _refreshCurrent                                       0     0      0     576
                  _saveEnergyADCHist
                       _sumEnergyADC
                            _sumHIST
 ---------------------------------------------------------------------------------
 (3) _sumHIST                                             17    13      4     317
                                             15 COMRAM    17    13      4
 ---------------------------------------------------------------------------------
 (3) _sumEnergyADC                                         9     7      2     161
                                             15 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (3) _saveEnergyADCHist                                    2     0      2      98
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _refreshADCZeroOffset                                 3     3      0     893
                                             22 COMRAM     3     3      0
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     618
                                             15 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _getCurrentComparator                                13     9      4    2612
                                             21 COMRAM    13     9      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    2519
                                             15 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _GetMotorPower                                        4     4      0      37
                                             15 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (1) _ControlCounterMoves                                  0     0      0  349276
                  _SaveNVM_VarSystem
 ---------------------------------------------------------------------------------
 (4) _SaveNVM_VarSystem                                    4     4      0  349276
                                              0 BANK0      4     4      0
                    _i2c_writeNBytes
 ---------------------------------------------------------------------------------
 (5) _i2c_writeNBytes                                     24    19      5  349112
                                             33 COMRAM    24    19      5
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
                             _memcpy
 ---------------------------------------------------------------------------------
 (6) _memcpy                                              11     5      6    6478
                                             15 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _I2C1_SetAddressNackCallback                          4     0      4    2859
                                             20 COMRAM     4     0      4
                   _I2C1_SetCallback
 ---------------------------------------------------------------------------------
 (6) _I2C1_Open                                            2     2      0      68
                                             15 COMRAM     2     2      0
                _I2C1_MasterClearIrq
                    _I2C1_MasterOpen
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterOpen                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterWrite                                     0     0      0  334109
               _I2C1_MasterOperation
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterOperation                                 2     2      0  334109
                                             31 COMRAM     2     2      0
                   _I2C1_MasterStart
                        _I2C1_Poller
 ---------------------------------------------------------------------------------
 (8) _I2C1_Poller                                          0     0      0  334041
                     _I2C1_MasterFsm
            _I2C1_MasterWaitForEvent
 ---------------------------------------------------------------------------------
 (9) _I2C1_MasterWaitForEvent                              0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_MasterFsm                                       3     3      0  334041
                                             28 COMRAM     3     3      0
               _I2C1_DO_ADDRESS_NACK *
                       _I2C1_DO_IDLE *
                       _I2C1_DO_RCEN *
                      _I2C1_DO_RESET *
                         _I2C1_DO_RX *
                     _I2C1_DO_RX_ACK *
            _I2C1_DO_RX_NACK_RESTART *
               _I2C1_DO_RX_NACK_STOP *
              _I2C1_DO_SEND_ADR_READ *
             _I2C1_DO_SEND_ADR_WRITE *
               _I2C1_DO_SEND_RESTART *
          _I2C1_DO_SEND_RESTART_READ *
         _I2C1_DO_SEND_RESTART_WRITE *
                  _I2C1_DO_SEND_STOP *
                         _I2C1_DO_TX *
                   _I2C1_DO_TX_EMPTY *
                _I2C1_MasterClearIrq
                  _I2C1_MasterIsNack
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_TX_EMPTY                                    2     2      0   83487
                                             26 COMRAM     2     2      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
               _I2C1_DO_SEND_RESTART
                  _I2C1_DO_SEND_STOP
                  _I2C1_MasterSetIrq
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterSetIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_TX                                          2     2      0   83518
                                             26 COMRAM     2     2      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
          _I2C1_DO_SEND_RESTART_READ
         _I2C1_DO_SEND_RESTART_WRITE
                  _I2C1_DO_SEND_STOP
                  _I2C1_MasterIsNack
              _I2C1_MasterSendTxData
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterIsNack                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_DO_SEND_RESTART_WRITE                          0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (11) _I2C1_DO_SEND_RESTART_READ                           0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_SEND_ADR_WRITE                              0     0      0      31
              _I2C1_MasterSendTxData
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_SEND_ADR_READ                               0     0      0      31
              _I2C1_MasterSendTxData
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterSendTxData                               1     1      0      31
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RX_ACK                                      0     0      0       0
                 _I2C1_MasterSendAck
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RX                                          2     2      0   83487
                                             26 COMRAM     2     2      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
            _I2C1_DO_RX_NACK_RESTART
               _I2C1_DO_RX_NACK_STOP
               _I2C1_MasterGetRxData
                 _I2C1_MasterSendAck
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterSendAck                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterGetRxData                                0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RX_NACK_STOP                                0     0      0       0
                _I2C1_MasterSendNack
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RX_NACK_RESTART                             0     0      0       0
                _I2C1_MasterSendNack
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterSendNack                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RESET                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RCEN                                        0     0      0       0
                 _I2C1_MasterStartRx
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterStartRx                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_IDLE                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_ADDRESS_NACK                                2     2      0   83487
                                             26 COMRAM     2     2      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
               _I2C1_DO_SEND_RESTART
                  _I2C1_DO_SEND_STOP
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (11) _wr2RegCompleteHandler@i2c1_master_example$F523      2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _wr2RegCompleteHandler                               2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _wr1RegCompleteHandler@i2c1_master_example$F517      2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _wr1RegCompleteHandler                               2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rdBlkRegCompleteHandler@i2c1_master_example$F535    2     0      2    8343
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rdBlkRegCompleteHandler                             2     0      2    8343
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rd2RegCompleteHandler@i2c1_master_example$F511      2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rd2RegCompleteHandler                               2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rd1RegCompleteHandler@i2c1_master_example$F500      2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rd1RegCompleteHandler                               2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (6) _I2C1_SetDataCompleteCallback                         4     0      4    4339
                                             20 COMRAM     4     0      4
                   _I2C1_SetCallback
 ---------------------------------------------------------------------------------
 (7) _I2C1_SetCallback                                     5     1      4     997
                                             15 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (6) _I2C1_SetBuffer                                       4     0      4    3942
                                             15 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (11) _I2C1_DO_SEND_STOP                                   0     0      0       0
                    _I2C1_MasterStop
 ---------------------------------------------------------------------------------
 (12) _I2C1_MasterStop                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_DO_SEND_RESTART                                0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (12) _I2C1_MasterEnableRestart                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_CallbackReturnStop                             2     0      2       0
                                             24 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (11) _I2C1_CallbackReturnReset                            2     0      2     305
                                             24 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              2     0      2       0
 ---------------------------------------------------------------------------------
 (8) _I2C1_MasterStart                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C1_Close                                           1     1      0      37
                                             15 COMRAM     1     1      0
                _I2C1_MasterClearIrq
                   _I2C1_MasterClose
              _I2C1_MasterDisableIrq
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterDisableIrq                                0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterClose                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterClearIrq                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INTERRUPT_InterruptManager                          6     6      0    2657
                                              9 COMRAM     6     6      0
                   Absolute function *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
                           _TMR0_ISR
                           _TMR1_ISR
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (15) _TMR2_ISR                                            0     0      0    2292
                   Absolute function *
                            _ReadADC
       _TMR2_DefaultInterruptHandler *
                   _controlTimeslots
                     _refreshSegment
 ---------------------------------------------------------------------------------
 (16) _refreshSegment                                      0     0      0      22
                       _Segments_Set
 ---------------------------------------------------------------------------------
 (17) _Segments_Set                                        1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (16) _controlTimeslots                                    0     0      0    2248
                  _decrementTimeslot
 ---------------------------------------------------------------------------------
 (17) _decrementTimeslot                                   4     2      2    2248
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (16) _TMR2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _ReadADC                                             3     3      0      22
                                              1 COMRAM     3     3      0
           _ADCC_GetSingleConversion
 ---------------------------------------------------------------------------------
 (17) _ADCC_GetSingleConversion                            1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (15) _TMR1_ISR                                            0     0      0     365
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
                  _controlMotorForce
 ---------------------------------------------------------------------------------
 (16) _controlMotorForce                                   5     5      0     136
                                              4 COMRAM     5     5      0
                    i2_GetMotorPower
            i2_VerifyElectricalBrake
 ---------------------------------------------------------------------------------
 (17) i2_VerifyElectricalBrake                             2     2      0     112
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (17) i2_GetMotorPower                                     4     4      0      24
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (16) _TMR1_WriteTimer                                     2     0      2     229
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (16) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _TMR0_ISR                                            0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                                _rxi
 ---------------------------------------------------------------------------------
 (16) _rxi                                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (16) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART1_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART1_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (16) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (16) _EUSART1_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              2     0      2       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ControlCounterMoves
     _SaveNVM_VarSystem
       _i2c_writeNBytes
         _I2C1_Close
           _I2C1_MasterClearIrq
           _I2C1_MasterClose
           _I2C1_MasterDisableIrq
         _I2C1_MasterWrite
           _I2C1_MasterOperation
             _I2C1_MasterStart
             _I2C1_Poller
               _I2C1_MasterFsm
                 _I2C1_DO_ADDRESS_NACK *
                   Absolute function(Fake) *
                   _I2C1_CallbackReturnReset *
                   _I2C1_CallbackReturnStop *
                   _I2C1_DO_SEND_RESTART *
                     _I2C1_MasterEnableRestart
                   _I2C1_DO_SEND_STOP *
                     _I2C1_MasterStop
                   _rd1RegCompleteHandler *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                       _I2C1_SetCallback
                   _rd1RegCompleteHandler@i2c1_master_example$F500 *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _rd2RegCompleteHandler *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _rd2RegCompleteHandler@i2c1_master_example$F511 *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _rdBlkRegCompleteHandler *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _rdBlkRegCompleteHandler@i2c1_master_example$F535 *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _wr1RegCompleteHandler *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _wr1RegCompleteHandler@i2c1_master_example$F517 *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _wr2RegCompleteHandler *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _wr2RegCompleteHandler@i2c1_master_example$F523 *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                 _I2C1_DO_IDLE *
                 _I2C1_DO_RCEN *
                   _I2C1_MasterStartRx
                 _I2C1_DO_RESET *
                 _I2C1_DO_RX *
                   Absolute function(Fake) *
                   _I2C1_CallbackReturnReset *
                   _I2C1_CallbackReturnStop *
                   _I2C1_DO_RX_NACK_RESTART *
                     _I2C1_MasterSendNack
                   _I2C1_DO_RX_NACK_STOP *
                     _I2C1_MasterSendNack
                   _I2C1_MasterGetRxData *
                   _I2C1_MasterSendAck *
                   _rd1RegCompleteHandler *
                   _rd1RegCompleteHandler@i2c1_master_example$F500 *
                   _rd2RegCompleteHandler *
                   _rd2RegCompleteHandler@i2c1_master_example$F511 *
                   _rdBlkRegCompleteHandler *
                   _rdBlkRegCompleteHandler@i2c1_master_example$F535 *
                   _wr1RegCompleteHandler *
                   _wr1RegCompleteHandler@i2c1_master_example$F517 *
                   _wr2RegCompleteHandler *
                   _wr2RegCompleteHandler@i2c1_master_example$F523 *
                 _I2C1_DO_RX_ACK *
                   _I2C1_MasterSendAck
                 _I2C1_DO_RX_NACK_RESTART *
                 _I2C1_DO_RX_NACK_STOP *
                 _I2C1_DO_SEND_ADR_READ *
                   _I2C1_MasterSendTxData
                 _I2C1_DO_SEND_ADR_WRITE *
                   _I2C1_MasterSendTxData
                 _I2C1_DO_SEND_RESTART *
                 _I2C1_DO_SEND_RESTART_READ *
                   _I2C1_MasterEnableRestart
                 _I2C1_DO_SEND_RESTART_WRITE *
                   _I2C1_MasterEnableRestart
                 _I2C1_DO_SEND_STOP *
                 _I2C1_DO_TX *
                   Absolute function(Fake) *
                   _I2C1_CallbackReturnReset *
                   _I2C1_CallbackReturnStop *
                   _I2C1_DO_SEND_RESTART_READ *
                   _I2C1_DO_SEND_RESTART_WRITE *
                   _I2C1_DO_SEND_STOP *
                   _I2C1_MasterIsNack *
                   _I2C1_MasterSendTxData *
                   _rd1RegCompleteHandler *
                   _rd1RegCompleteHandler@i2c1_master_example$F500 *
                   _rd2RegCompleteHandler *
                   _rd2RegCompleteHandler@i2c1_master_example$F511 *
                   _rdBlkRegCompleteHandler *
                   _rdBlkRegCompleteHandler@i2c1_master_example$F535 *
                   _wr1RegCompleteHandler *
                   _wr1RegCompleteHandler@i2c1_master_example$F517 *
                   _wr2RegCompleteHandler *
                   _wr2RegCompleteHandler@i2c1_master_example$F523 *
                 _I2C1_DO_TX_EMPTY *
                   Absolute function(Fake) *
                   _I2C1_CallbackReturnReset *
                   _I2C1_CallbackReturnStop *
                   _I2C1_DO_SEND_RESTART *
                   _I2C1_DO_SEND_STOP *
                   _I2C1_MasterSetIrq *
                   _rd1RegCompleteHandler *
                   _rd1RegCompleteHandler@i2c1_master_example$F500 *
                   _rd2RegCompleteHandler *
                   _rd2RegCompleteHandler@i2c1_master_example$F511 *
                   _rdBlkRegCompleteHandler *
                   _rdBlkRegCompleteHandler@i2c1_master_example$F535 *
                   _wr1RegCompleteHandler *
                   _wr1RegCompleteHandler@i2c1_master_example$F517 *
                   _wr2RegCompleteHandler *
                   _wr2RegCompleteHandler@i2c1_master_example$F523 *
                 _I2C1_MasterClearIrq *
                 _I2C1_MasterIsNack *
               _I2C1_MasterWaitForEvent
         _I2C1_Open
           _I2C1_MasterClearIrq
           _I2C1_MasterOpen
         _I2C1_SetAddressNackCallback
           _I2C1_SetCallback
         _I2C1_SetBuffer
         _memcpy
   _ControlCurrent
     _GetMotorPower
     _getCurrentComparator
       ___wmul
     _refreshADCZeroOffset
       ___lwdiv
     _refreshCurrent
       _saveEnergyADCHist
       _sumEnergyADC
       _sumHIST
   _ControlInputs
   _ControlLights
     _setFlashLigth_ON
     _setRGB_ON
       _RGB_Set
   _ControlMotor
     _VerifyElectricalBrake
   _EUSART1_is_rx_ready
   _InitReceiver
   _SYSTEM_Initialize
     _ADCC_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _I2C1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
     _WWDT_Initialize
   _SetSegmentValue
     ___awdiv (ARG)
       ___lbmod (ARG)
     ___lbmod (ARG)
   _ShowVersion
     _SetSegmentValue
   _WWDT_SoftEnable
   _WWDT_TimerClear
   _controlVelocity
     _ControlDecelarationFactor
     _InitSoftStop
       _GetMotorPower
     _getStateOpenPosition
       ___lmul
         ___lldiv (ARG)
       _getTimeDecelaration
         ___lmul
     _getTimeDecelaration
   _eusartparser
     _ReadSerial
       _i2c_readDataBlock
         _I2C1_Close
         _I2C1_MasterWrite
         _I2C1_Open
         _I2C1_SetAddressNackCallback
         _I2C1_SetBuffer
         _I2C1_SetDataCompleteCallback
     _RemoveSerial
       _i2c_writeNBytes
     _SaveNVM_VarSystem
     _cmdMemoryIsEmpty
       _i2c_readDataBlock
     _confirmpackage
       _init_package
     _read_eusartparser
       _write_package
         _EUSART1_Write
     _saveNewSerial
       _i2c_writeNBytes
     _validateRemoteSerialNumber
       _i2c_readDataBlock
     _write_eusartparser
     _write_package
   _getKeyPressed
   _loadNVM_VarSystem
     _I2C1_Read1ByteRegister
       _I2C1_Close
       _I2C1_MasterWrite
       _I2C1_Open
       _I2C1_SetAddressNackCallback
       _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
     _ResetDefaultMemory
       _SaveNVM_VarSystem
     _SaveNVM_VarSystem
     _checkNVM_VarSystem
       _SaveNVM_VarSystem
     _i2c_readDataBlock
   _readInputs
   _readRFButtons
     _DecryptPacket_12BIT
       _memcpy
       _validateRemoteSerialNumber
     _keeloqDecryptPacket
       _DecCHK
       _HopCHK
         _ReqResync
         _getHopCode
           _ReqResync
           ___wmul
       _keeloq_classic_decrypt_packet
         _Decrypt
           _memcpy
         _NormalKeyGen
           _Decrypt
           _LoadManufCode
           _memcpy
       _memcpy
       _validateRemoteSerialNumber
       _verifyProgramingMode
   _read_package
     _EUSART1_Read
   _readbutton
   _sm_execute_ControlGate
     _GetOpenOrder
       _SetSegmentValueIntermitentMain
         ___awdiv (ARG)
         ___lbdiv (ARG)
         ___lbmod (ARG)
       ___lbdiv
     _SetSegmentValueIntermitent
     _WaitPreFlash
       _InitFullAutoTime
       _OpenFullOrder
         _InitSoftStart
           _GetMotorPower
         _sm_send_event
           _sm_get_current_state
       _sm_send_event
     _actionZone_Closed
       _GetOpenOrder
       _GetSecurityStateInOpening
         _SetSegmentValueIntermitent
       _InitFullAutoTime
       _InitWalkAutoTime
       _OpenFullOrder
       _OpenWalkOrder
         _InitSoftStart
         _sm_send_event
       _WaitPreFlash
       _sm_send_event
     _actionZone_Closing
       _GetOpenOrder
       _GetSecurityStateInClosing
         _SetSegmentValueIntermitent
       _InitFullAutoTime
       _InitWalkAutoTime
       _OpenFullOrder
       _OpenWalkOrder
       _SetSegmentValueIntermitent
       _StopOrder
         _sm_send_event
       ___lmul
       _setPositionInvertionInClosing
         _getTimeDecelaration
       _sm_send_event
     _actionZone_Opened
       _CloseOrder
         _InitSoftStart
         _sm_send_event
       _GetOpenOrder
       _GetSecurityStateInClosing
       _InitFullAutoTime
       _InitWalkAutoTime
       _OpenFullOrder
       _OpenWalkOrder
       _VerifyFollowMe
     _actionZone_Opening
       _CloseOrder
       _GetOpenOrder
       _GetSecurityStateInClosing
       _GetSecurityStateInOpening
       _InitFullAutoTime
       _InitWalkAutoTime
       _SetSegmentValueIntermitent
       _StopOrder
       _VerifyFollowMe
       _controlVelocity
       _setPositionInvertionInClosing
       _setPositionInvertionInOpening
         _getTimeDecelaration
       _sm_send_event
     _sm_execute_ControlLearning
       _GetOpenOrder
       _SaveNVM_VarSystem
       _calculateMean
       _clearLearningValue
       _generateErrorLearnig
         _sm_init
           _sm_restart
       _sm_send_event
     _sm_send_event
   _sm_execute_main
     _SetSegmentValueIntermitentMain
     _SetSegmentValueMain
       ___awdiv (ARG)
       ___lbdiv (ARG)
       ___lbmod (ARG)
     _load_New_Menu
       _SetSegmentValueIntermitentMain
       _SetSegmentValueMain
     _sm_execute_menuConfiguration
       _ClearFlag_rfCMD
       _ResetDefaultMemory
       _SaveNVM_VarSystem
       _SetSegmentValueIntermitentMain
       _SetSegmentValueMain
       ___lbdiv
       ___lldiv
       ___lmul
       ___lwdiv
       _controlLearnDigit
         _SetSegmentValueLearn
       _controlSaveRemote
         _ClearFlag_rfCMD
         _SetSegmentValueIntermitentMain
         _SetSegmentValueMain
         ___awdiv
         ___lbmod
         _sm_send_event
       _controlSelectRemote
         _ClearFlag_rfCMD
         _RemoveSerial
         _SaveNVM_VarSystem
         _SetSegmentValue
         _SetSegmentValueIntermitentMain
         _SetSegmentValueMain
         ___awdiv
         ___lbmod
         _cmdMemoryIsEmpty
         _getSerialCmd
           _memcpy
         _getTypeRemote
         _saveNewSerial
         _sm_send_event
         _validateRemoteSerialNumber
       _load_New_Menu
       _setValueToEdit
         _InitReceiver
         _SaveNVM_VarSystem
         _cmdMemoryIsEmpty
         _load_New_Menu
         _sm_send_event
       _sm_send_event
     _sm_send_event
   _sm_init

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *
   _TMR0_ISR *
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _rxi *
   _TMR1_ISR *
     Absolute function(Fake) *
     _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer *
     _controlMotorForce *
       i2_GetMotorPower
       i2_VerifyElectricalBrake
   _TMR2_ISR *
     Absolute function(Fake) *
     _ReadADC *
       _ADCC_GetSingleConversion
     _TMR2_DefaultInterruptHandler *
     _controlTimeslots *
       _decrementTimeslot
     _refreshSegment *
       _Segments_Set

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E87      0       0      61        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      F7      11       96.5%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      F3       9       94.9%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0     100       7      100.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     23      9D       5       98.1%
BITBANK14           88      0       0      32        0.0%
BANK14              88      0       0      33        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3A      4F       1       84.0%
BITBIGSFRllll       28      0       0      59        0.0%
BITBIGSFRhlllll     27      0       0      42        0.0%
BITBIGSFRhhllll     1B      0       0      37        0.0%
BITBIGSFRhhlh       1A      0       0      35        0.0%
BITBIGSFRhlllll     13      0       0      48        0.0%
BITBIGSFRhlllhh      F      0       0      41        0.0%
BITBIGSFRhlllll      E      0       0      46        0.0%
BITBIGSFRhhh         D      0       0      34        0.0%
BITBIGSFRhhllll      C      0       0      36        0.0%
BITBIGSFRllh         9      0       0      57        0.0%
BITBIGSFRhlllll      4      0       0      52        0.0%
BITBIGSFRhlllll      3      0       0      44        0.0%
BITBIGSFRhlllll      3      0       0      43        0.0%
BITBIGSFRhlllll      3      0       0      53        0.0%
BITBIGSFRhlllll      3      0       0      55        0.0%
BITBIGSFRhlllll      2      0       0      47        0.0%
BITBIGSFRhlllhh      2      0       0      40        0.0%
BITBIGSFRhlllll      2      0       0      49        0.0%
BITBIGSFRhlllll      2      0       0      54        0.0%
BITBIGSFRlh          2      0       0      56        0.0%
BITBIGSFRlllh        1      0       0      58        0.0%
BITBIGSFRhlllll      1      0       0      45        0.0%
BITBIGSFRhlllll      1      0       0      50        0.0%
BITBIGSFRhlllll      1      0       0      51        0.0%
BITBIGSFRhlllhh      1      0       0      39        0.0%
BITBIGSFRhlllhh      1      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     3D6      60        0.0%
DATA                 0      0     3D6       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Mon Jul 18 15:58:44 2022

                                        ?_ClearFlag_rfCMD 0001  
                              cmdMemoryIsEmpty@tempSerial 0032  
                                           _Counterchoose 0092  
                        __end_of_TMR2_SetInterruptHandler 9720  
                                _eusart1TxBufferRemaining 01FF  
                            SetSegmentValueIntermitent@d1 0013  
                            SetSegmentValueIntermitent@d2 0010  
                                    ??_checkNVM_VarSystem 003A  
                                            ___awdiv@sign 0019  
                                     ___wmul@multiplicand 0012  
                           __end_of_VerifyElectricalBrake 81C6  
                                           _LoadManufCode 9426  
                                        ?_SetSegmentValue 001C  
                                                     l100 8DFE  
                            ??_sm_execute_ControlLearning 00DE  
                                                     l674 7C94  
                                                     l690 80FC  
                                                     _GIE 007F97  
                                                     _Hop 007C  
                                   ?_I2C1_MasterOperation 0001  
                                         _timer1ReloadVal 02E3  
                                 keeloqDecryptPacket@data 00E0  
                                                     _rxi 47D8  
                                  ControlMotor@stateMotor 0018  
                                         _TMR2_Initialize 9110  
                                                     prod 000FF3  
                                                     tosl 000FFD  
                                                     wreg 000FE8  
                                  ?_I2C1_MasterSendTxData 0001  
                                       load_New_Menu@Menu 0022  
                                    _I2C1_DO_RX_NACK_STOP 979C  
                               ?_I2C1_MasterEnableRestart 0001  
                                       _SaveNVM_VarSystem 8F5E  
                        validateRemoteSerialNumber@serial 002E  
                                    I2C1_SetBuffer@buffer 0010  
                                       getKeyPressed@temp 0010  
                                     eusartparser@package 00E0  
                                   getCurrentComparator@x 0022  
                                      ?_SaveNVM_VarSystem 0001  
                                 ??_rd2RegCompleteHandler 001B  
                                                    l2044 868C  
                                                    l1405 653A  
                                       readRFButtons@key1 0088  
                                                    l3102 2D46  
                                                    l2039 8680  
                                                    l2311 532A  
                                                    l2240 7476  
                                                    l2323 81B8  
                                                    l2403 4EE8  
                                                    l1372 8CFC  
                                                    l1436 5A70  
                                                    l1524 5A40  
                                                    l1357 6F54  
                                                    l1517 59F4  
                                                    l3053 2A9A  
                                                    l1366 70D6  
                                                    l2254 6C3E  
                                                    l1383 5C74  
                                                    l2415 3F66  
                                                    l2328 81C2  
                                                    l2353 4E0C  
                                                    l3233 1066  
                                                    l3065 2C26  
                                                    l2370 4E04  
                                                    l1491 88BA  
                                                    l2507 7B1A  
                                                    l2443 40D8  
                                                    l1731 6D7A  
                                                    l1388 5CFC  
                                                    l2516 8EFC  
                                                    l2380 4EDC  
                                                    l1740 6DE0  
                                                    l1732 6D82  
                                                    l1742 6DFC  
                                                    l1654 5FBC  
                                                    l4215 8AB2  
                                                    l2519 8F22  
                                                    l1495 58D6  
                                                    l1743 6E04  
                                                    l2376 4E18  
                                                    l1736 6DB4  
                                                    l3512 87A8  
                                                    l3088 2C6C  
                                                    l1745 6E20  
                                                    l1737 6DBC  
                                                    l1657 6032  
                                                    l1746 6E28  
                                                    l2810 47D6  
                                                    l2730 544C  
                                                    l3611 3438  
                                                    l1739 6DD8  
                                                    l1667 607A  
                                                    l2723 4CA0  
                                                    l3620 3470  
                                                    l3612 3442  
                                                    l3604 3414  
                                                    l1748 6E52  
                                                    l3380 25EE  
                                                    l3372 25B4  
                                                    l2477 41EE  
                                                    l2397 4ED4  
                                                    l3621 3476  
                                                    l3613 344C  
                                                    l1861 7360  
                                                    l2653 3DA0  
                                                    l3630 349E  
                                                    l3614 3452  
                                                    l3606 341E  
                                                    l3438 291C  
                                                    l3390 2732  
                                                    l3358 24F4  
                                                    l3631 34A4  
                                                    l3623 3480  
                                                    l3615 3458  
                                                    l3607 3428  
                                                    l2727 5356  
                                                    l3391 2752  
                                                    l3632 34AA  
                                                    l3616 345E  
                                                    l2912 19FC  
                                                    l3641 3700  
                                                    l3633 34B0  
                                                    l3625 3486  
                                                    l3617 3464  
                                                    l3609 342E  
                                                    l2585 8396  
                                                    l2729 538C  
                                                    l3642 370A  
                                                    l3626 348C  
                                                    l3618 346A  
                                                    l3627 3492  
                                                    l1859 7350  
                                                    l3636 357A  
                                                    l3628 3498  
                                                    l1869 7384  
                                                    l2773 45F2  
                                                    l3494 905C  
                                                    l3751 7F48  
                                                    l3488 76D0  
                                                    ?_rxi 0001  
                                                    _DKEY 02D3  
                                                    _LATA 000F83  
                                                    _LATB 000F84  
                                                    _LATC 000F85  
                                                    _LATD 000F86  
                                                    _LATE 000F87  
                                             main@package 00F4  
                                                    _T2PR 000FBC  
                                                    _PMD0 000EE1  
                                                    _PMD1 000EE2  
                                                    _PMD2 000EE3  
                                                    _PMD3 000EE4  
                                                    _PMD4 000EE5  
                                                    _PMD5 000EE6  
                                                    _EHop 028E  
                                           eusartparser@i 00E8  
                                                    _WPUA 000F10  
                                                    _WPUB 000F18  
                                                    _WPUC 000F20  
                                                    _WPUD 000F25  
                                                    _WPUE 000F2D  
                                         __end_of_RGB_Set 96D8  
                                 ??_wr2RegCompleteHandler 001B  
                                                    _Bptr 008D  
                                        ??_I2C1_MasterFsm 001D  
                                           _EUSART1_Write 8DE8  
                               ??_I2C1_CallbackReturnStop 001B  
                                __end_of_controlTimeslots 5F24  
                                                    _main 6244  
                                           ?_EUSART1_Read 0001  
                                         ?_confirmpackage 0011  
                                                    _temp 0080  
                                                    fsr1h 000FE2  
                                                    fsr2h 000FDA  
                                                    indf1 000FE7  
                                                    indf2 000FDF  
                                                    fsr1l 000FE1  
                                                    fsr2l 000FD9  
                                                    btemp 0050  
                                    saveNewSerial@cmdType 003A  
                                     ??_SaveNVM_VarSystem 003A  
                                                    prodh 000FF4  
                                                    prodl 000FF3  
                                                    start 009C  
                                        ??_I2C1_SetBuffer 0014  
                                          ??_ControlMotor 0012  
                                       ReadSerial@cmdType 0032  
                                         __end_of_Decrypt 73DC  
                                ?i2_VerifyElectricalBrake 0001  
                                        getSerialCmd@temp 001C  
                                           ?_InitReceiver 0001  
                              ??_TMR1_SetInterruptHandler 0012  
                                            ___param_bank 000000  
                                         i2_GetMotorPower 74A2  
                                         __end_of_ReadADC 8A16  
                           I2C1_CallbackReturnStop@funPtr 0019  
                                         ??_getTypeRemote 0010  
                                                   ??_rxi 0001  
                                    __end_of_GetOpenOrder 58B4  
                                 __end_of_TMR0_Initialize 946A  
                                          ?_LoadManufCode 0001  
                          ??_TMR0_DefaultInterruptHandler 0001  
                                           ?_InitSoftStop 0001  
                           sm_execute_ControlLearning@psm 00DC  
                           __end_of_OSCILLATOR_Initialize 9646  
                      SetSegmentValueIntermitentMain@time 001D  
                                                   l20101 5A78  
                                                   l20021 7368  
                                                   l20103 5A7E  
                                                   l20007 734C  
                                                   l20017 735C  
                                                   l20123 5B38  
                                                   l21011 728A  
                                                   l20117 5B26  
                                                   l20109 5AC2  
                                                   l20029 737C  
                                                   l20053 7190  
                                                   l21021 68FE  
                                                   l21005 7250  
                                                   l20119 5B2A  
                                                   l20311 6BDA  
                                                   l21015 72C4  
                                                   l20137 5BE0  
                                                   l20129 5B7C  
                                                   l20065 7200  
                                                   l20057 71BC  
                                                   l20305 6B86  
                                                   l20401 4392  
                                                   l21113 25C2  
                                                   l20139 5BE4  
                                                   l21035 698E  
                                                   l20411 442C  
                                                   l20403 43AE  
                                                   l21115 25CA  
                                                   l20157 7FA8  
                                                   l20165 7A46  
                                                   l12333 8E1E  
                                                   l20149 83D4  
                                                   l20253 66EA  
                                                   l21029 694A  
                                                   l22013 4BEC  
                                                   l21053 86AC  
                                                   l20093 8D4C  
                                                   l20413 4446  
                                                   l20405 43DC  
                                                   l20421 44D6  
                                                   l21301 28E2  
                                                   l21221 27E2  
                                                   l21213 27A2  
                                                   l21205 276C  
                                                   l21125 25DE  
                                                   l21117 25D2  
                                                   l21109 2566  
                                                   l20175 7A88  
                                                   l20167 7A78  
                                                   l12335 8E22  
                                                   l12319 8DEA  
                                                   l20247 6698  
                                                   l20511 572A  
                                                   l20087 87EE  
                                                   l22015 4BF2  
                                                   l21055 86DE  
                                                   l20415 4460  
                                                   l20407 43F8  
                                                   l21231 27F8  
                                                   l21215 27BE  
                                                   l21207 2796  
                                                   l21151 264E  
                                                   l21063 24FE  
                                                   l20273 6796  
                                                   l20441 8F36  
                                                   l20505 5726  
                                                   l20425 44E4  
                                                   l20409 4414  
                                                   l21321 290E  
                                                   l21241 2824  
                                                   l21225 27EC  
                                                   l21209 279A  
                                                   l21145 2606  
                                                   l21137 25F6  
                                                   l21081 253A  
                                                   l21065 2506  
                                                   l14203 8AA8  
                                                   l20267 6780  
                                                   l20603 5824  
                                                   l20523 5764  
                                                   l22123 53C0  
                                                   l22051 4C3C  
                                                   l22035 4C0C  
                                                   l12603 7034  
                                                   l20195 8B88  
                                                   l20419 4472  
                                                   l20363 4276  
                                                   l21331 2936  
                                                   l21315 28F0  
                                                   l21307 28EC  
                                                   l21243 2828  
                                                   l21235 2800  
                                                   l21219 27D8  
                                                   l21155 2660  
                                                   l21091 254E  
                                                   l21083 2542  
                                                   l21067 250E  
                                                   l15021 8192  
                                                   l20453 8F52  
                                                   l20445 8F3C  
                                                   l20701 77BA  
                                                   l22213 54EA  
                                                   l22133 53E4  
                                                   l22053 4C42  
                                                   l20197 8BA2  
                                                   l20429 4520  
                                                   l20381 42C8  
                                                   l21341 2958  
                                                   l21253 2850  
                                                   l21229 27F4  
                                                   l21165 2670  
                                                   l21077 252A  
                                                   l21069 2516  
                                                   l23101 17FA  
                                                   l23013 15D0  
                                                   l20471 6170  
                                                   l20615 5870  
                                                   l20535 578C  
                                                   l22311 46E2  
                                                   l22143 5402  
                                                   l22071 4C7E  
                                                   l14151 9056  
                                                   l20199 8BA6  
                                                   l21511 38BE  
                                                   l20375 4296  
                                                   l20367 4280  
                                                   l21335 2948  
                                                   l21343 2974  
                                                   l21271 2882  
                                                   l21255 2854  
                                                   l21247 2830  
                                                   l21175 26F8  
                                                   l21167 26BE  
                                                   l21079 2532  
                                                   l20457 8F5A  
                                                   l20561 57BC  
                                                   l20529 5768  
                                                   l20545 5790  
                                                   l22321 46FE  
                                                   l22305 46C8  
                                                   l22241 4588  
                                                   l22217 54F6  
                                                   l22153 5420  
                                                   l22145 540A  
                                                   l22137 53EE  
                                                   l20297 6B48  
                                                   l22049 4C38  
                                                   l12561 6F9C  
                                                   l21521 3956  
                                                   l20393 430A  
                                                   l20369 4286  
                                                   l21281 28B0  
                                                   l21265 2876  
                                                   l21249 284C  
                                                   l21353 299C  
                                                   l23025 160A  
                                                   l15051 7AAA  
                                                   l15027 81AE  
                                                   l20475 61A8  
                                                   l20467 6134  
                                                   l20627 58B0  
                                                   l20619 5874  
                                                   l20643 785C  
                                                   l20731 781E  
                                                   l20715 77E8  
                                                   l22315 46EA  
                                                   l22323 4704  
                                                   l22163 5432  
                                                   l22091 5346  
                                                   l20811 5132  
                                                   l22059 4C54  
                                                   l24011 3ED8  
                                                   l14171 7F06  
                                                   l12555 6F82  
                                                   l21611 3B7C  
                                                   l20395 4336  
                                                   l20387 42D8  
                                                   l21275 2886  
                                                   l21267 287A  
                                                   l21259 2858  
                                                   l21099 255A  
                                                   l21355 29EE  
                                                   l23051 1688  
                                                   l23043 1666  
                                                   l12901 9328  
                                                   l23141 6414  
                                                   l15037 8EFE  
                                                   l15053 7AB2  
                                                   l15061 7AEA  
                                                   l23221 6860  
                                                   l20741 8FF8  
                                                   l23301 6096  
                                                   l14309 8CC8  
                                                   l22333 4728  
                                                   l22253 45E0  
                                                   l22413 18F0  
                                                   l22405 18BE  
                                                   l24005 3EC2  
                                                   l14181 7F3A  
                                                   l12581 6FEA  
                                                   l12573 6FC6  
                                                   l12565 6FAE  
                                                   l12549 6F68  
                                                   l21605 3B66  
                                                   l21517 3918  
                                                   l21509 38BC  
                                                   l20397 4352  
                                                   l21269 287E  
                                                   l23037 164E  
                                                   l23117 1840  
                                                   l14191 8A80  
                                                   l15071 7B16  
                                                   l15055 7ABA  
                                                   l21711 595A  
                                                   l21703 593E  
                                                   l23303 609E  
                                                   l20583 57F6  
                                                   l20567 57C4  
                                                   l20663 788E  
                                                   l22351 474A  
                                                   l22239 4572  
                                                   l20823 515E  
                                                   l24015 3EDE  
                                                   l24007 3EC8  
                                                   l12591 7012  
                                                   l12575 6FD0  
                                                   l21551 3A32  
                                                   l21543 3A0C  
                                                   l21519 3950  
                                                   l20399 4376  
                                                   l21295 28C4  
                                                   l21287 28BA  
                                                   l23071 16CE  
                                                   l23055 1694  
                                                   l24103 6372  
                                                   l14193 8A88  
                                                   l12913 7072  
                                                   l23161 648A  
                                                   l15049 7AA2  
                                                   l23321 1FB0  
                                                   l20489 6236  
                                                   l21801 5640  
                                                   l20649 7860  
                                                   l22353 474E  
                                                   l22337 4730  
                                                   l22273 4658  
                                                   l22177 5466  
                                                   l22169 5448  
                                                   l20921 52F2  
                                                   l20913 52C8  
                                                   l20817 5144  
                                                   l22433 195E  
                                                   l22425 1938  
                                                   l22417 1914  
                                                   l24009 3ECC  
                                                   l24025 3EF2  
                                                   l14169 7EFA  
                                                   l12569 6FBA  
                                                   l21633 7690  
                                                   l21553 3A46  
                                                   l23073 16D6  
                                                   l23065 16BC  
                                                   l15059 7AC2  
                                                   l23331 1FEC  
                                                   l23323 1FCC  
                                                   l23315 1F96  
                                                   l21643 880C  
                                                   l21731 59A0  
                                                   l21723 5984  
                                                   l21715 5968  
                                                   l21707 594C  
                                                   l17003 6E4C  
                                                   l20755 7D0C  
                                                   l21803 5650  
                                                   l23307 60AA  
                                                   l22355 4754  
                                                   l22339 4738  
                                                   l22187 548C  
                                                   l22531 1B6A  
                                                   l24019 3EE4  
                                                   l12595 701E  
                                                   l12587 7004  
                                                   l12771 7DF4  
                                                   l21539 39D2  
                                                   l23083 1710  
                                                   l23173 64BE  
                                                   l23341 2012  
                                                   l21653 8854  
                                                   l20589 57FE  
                                                   l20941 835A  
                                                   l21901 775C  
                                                   l22373 478C  
                                                   l22365 4772  
                                                   l22293 46A4  
                                                   l22701 1ED8  
                                                   l22533 1B74  
                                                   l22461 19DA  
                                                   l22453 19B2  
                                                   l22445 199A  
                                                   l22437 1978  
                                                   l12765 7DE4  
                                                   l12837 92EA  
                                                   l12829 92D2  
                                                   l23093 17DE  
                                                   l12919 710A  
                                                   l23159 6486  
                                                   l23175 64D4  
                                                   l17031 6A70  
                                                   l21663 8444  
                                                   l23511 23AA  
                                                   l23415 2176  
                                                   l23407 2168  
                                                   l23343 2026  
                                                   l23319 1FA4  
                                                   l21751 59E6  
                                                   l21743 59CA  
                                                   l21735 59AE  
                                                   l21727 5992  
                                                   l21719 5976  
                                                   l21671 58C8  
                                                   l20767 7D2C  
                                                   l20759 7D10  
                                                   l23271 5FC2  
                                                   l20679 78C4  
                                                   l20695 77B6  
                                                   l22199 54BA  
                                                   l20919 52EC  
                                                   l20847 51EA  
                                                   l20871 5236  
                                                   l22527 1B5C  
                                                   l22471 19FE  
                                                   l12599 702A  
                                                   l21583 3ADA  
                                                   l24063 628A  
                                                   l14713 6E82  
                                                   l17017 6A3C  
                                                   l23433 21E0  
                                                   l23425 21D2  
                                                   l23417 2180  
                                                   l23409 216C  
                                                   l23361 205A  
                                                   l23337 2002  
                                                   l21809 5654  
                                                   l23249 5F48  
                                                   l20929 5316  
                                                   l20857 5208  
                                                   l22713 1EF0  
                                                   l22625 1D50  
                                                   l22473 1A3E  
                                                   l12777 7E0A  
                                                   l12793 7E3C  
                                                   l23097 17EE  
                                                   l24073 62A0  
                                                   l16411 306A  
                                                   l16403 304A  
                                                   l23507 23A2  
                                                   l23443 222A  
                                                   l23427 21D6  
                                                   l23371 20AC  
                                                   l21771 5A32  
                                                   l21763 5A16  
                                                   l21747 59D8  
                                                   l21739 59BC  
                                                   l21691 5914  
                                                   l21683 58F8  
                                                   l20795 8FC6  
                                                   l20787 8FAE  
                                                   l21835 56C6  
                                                   l21819 569A  
                                                   l23283 6016  
                                                   l20891 5298  
                                                   l21931 4A9E  
                                                   l22555 1BE4  
                                                   l22491 1AB2  
                                                   l22475 1A54  
                                                   l12779 7E12  
                                                   l21499 389A  
                                                   l23099 17F4  
                                                   l22803 1068  
                                                   l14733 6EEA  
                                                   l12885 7BB4  
                                                   l16501 3640  
                                                   l23533 2434  
                                                   l23509 23A6  
                                                   l23461 2302  
                                                   l23365 2086  
                                                   l23349 2040  
                                                   l23285 601C  
                                                   l20973 84C8  
                                                   l22389 47BE  
                                                   l22493 1AD0  
                                                   l22397 188E  
                                                   l12797 7E4A  
                                                   l12789 7E32  
                                                   l22901 1344  
                                                   l22805 10AC  
                                                   l23613 2B2C  
                                                   l23605 2B10  
                                                   l24093 6354  
                                                   l14727 6ED6  
                                                   l17071 6B0A  
                                                   l17047 6AAA  
                                                   l16431 30BA  
                                                   l16423 309A  
                                                   l16415 307A  
                                                   l16407 305A  
                                                   l16351 2F34  
                                                   l16503 36B2  
                                                   l23471 233A  
                                                   l23455 22DA  
                                                   l23383 20DC  
                                                   l21767 5A24  
                                                   l21759 5A08  
                                                   l21695 5922  
                                                   l21687 5906  
                                                   l21679 58EA  
                                                   l21791 55CC  
                                                   l23279 5FF0  
                                                   l20975 84D4  
                                                   l22719 1F06  
                                                   l22655 1DEC  
                                                   l22647 1D9E  
                                                   l22639 1D80  
                                                   l22567 1C3A  
                                                   l22807 10C2  
                                                   l23703 2C5C  
                                                   l23623 2B3A  
                                                   l24087 632E  
                                                   l14745 6F10  
                                                   l14729 6EDE  
                                                   l12889 7BF6  
                                                   l14761 8CF0  
                                                   l17057 6AD6  
                                                   l23545 245E  
                                                   l23537 2454  
                                                   l23481 234A  
                                                   l23465 2322  
                                                   l23457 22E6  
                                                   l23449 229E  
                                                   l23369 20A8  
                                                   l21881 7720  
                                                   l21945 4ACC  
                                                   l21929 4A88  
                                                   l22681 1E80  
                                                   l22729 1F54  
                                                   l22833 11AA  
                                                   l22817 112A  
                                                   l22761 0FAA  
                                                   l22753 0F66  
                                                   l22745 0F24  
                                                   l16531 8BE4  
                                                   l16435 30CA  
                                                   l16427 30AA  
                                                   l16419 308A  
                                                   l16371 2FBC  
                                                   l16363 2F80  
                                                   l16355 2F52  
                                                   l16347 2EFE  
                                                   l16515 3714  
                                                   l23547 2462  
                                                   l23387 20FE  
                                                   l23379 20B6  
                                                   l23555 248E  
                                                   l21699 5930  
                                                   l21787 55C2  
                                                   l17091 8ADE  
                                                   l20979 84DC  
                                                   l20899 52B6  
                                                   l22587 1C8A  
                                                   l22499 1AF0  
                                                   l22835 11AC  
                                                   l22827 1190  
                                                   l23731 2CC4  
                                                   l23643 2B6E  
                                                   l23635 2B50  
                                                   l23571 2A1E  
                                                   l14773 5C1E  
                                                   l17413 4CF6  
                                                   l17405 4CDA  
                                                   l16461 3220  
                                                   l16445 3146  
                                                   l16349 2F1A  
                                                   l23477 233E  
                                                   l23397 210C  
                                                   l23389 2102  
                                                   l21965 4B3C  
                                                   l22941 1416  
                                                   l22925 13CC  
                                                   l22909 1360  
                                                   l22853 1226  
                                                   l22837 11D6  
                                                   l22781 0FFC  
                                                   l22773 0FE4  
                                                   l22765 0FCC  
                                                   l22757 0F88  
                                                   l22749 0F44  
                                                   l23725 2CA6  
                                                   l23653 2B7E  
                                                   l23565 29F6  
                                                   l17511 3FB2  
                                                   l17431 4D48  
                                                   l17415 4CFC  
                                                   l16455 31C2  
                                                   l16439 30E8  
                                                   l16391 300C  
                                                   l16383 2FEC  
                                                   l16375 2FCC  
                                                   l16367 2F9E  
                                                   l16359 2F62  
                                                   l23495 2378  
                                                   l23479 2346  
                                                   l23399 2116  
                                                   l21895 7752  
                                                   l21879 770A  
                                                   l22679 1E76  
                                                   l22599 1CE0  
                                                   l22943 1422  
                                                   l22871 12B6  
                                                   l22839 11DC  
                                                   l23815 2DD4  
                                                   l23583 2A82  
                                                   l23575 2A40  
                                                   l23591 2AC8  
                                                   l14793 5D0C  
                                                   l14769 5C08  
                                                   l16465 3234  
                                                   l16449 3164  
                                                   l21985 4B94  
                                                   l23921 3CC2  
                                                   l23905 3C68  
                                                   l22849 11FA  
                                                   l23841 2E42  
                                                   l23809 2DB0  
                                                   l23753 2D02  
                                                   l23665 2BB0  
                                                   l23593 2ADE  
                                                   l14779 5C3E  
                                                   l17603 417A  
                                                   l17523 3FEC  
                                                   l16475 32A6  
                                                   l16395 301C  
                                                   l16387 2FFC  
                                                   l16379 2FDC  
                                                   l16483 3304  
                                                   l23499 2398  
                                                   l21979 4B7C  
                                                   l22939 1412  
                                                   l22875 12D8  
                                                   l23843 2E56  
                                                   l23739 2CDE  
                                                   l23691 2C28  
                                                   l23683 2BFC  
                                                   l23659 2B96  
                                                   l23579 2A60  
                                                   l14797 5D2E  
                                                   l14789 5CE2  
                                                   l17613 41B0  
                                                   l17533 4028  
                                                   l17541 405A  
                                                   l17461 4E1C  
                                                   l17381 866E  
                                                   l17373 8648  
                                                   l16469 3248  
                                                   l16493 34BA  
                                                   l21997 4BB8  
                                                   l23933 3CFE  
                                                   l23917 3CA0  
                                                   l22973 14D0  
                                                   l22965 147C  
                                                   l22957 145E  
                                                   l22893 1328  
                                                   l22797 1044  
                                                   l22789 101E  
                                                   l23773 2D36  
                                                   l23765 2D18  
                                                   l23693 2C36  
                                                   l23669 2BC2  
                                                   l23589 2A9C  
                                                   l17631 4218  
                                                   l17535 4036  
                                                   l17527 4000  
                                                   l17455 4DF4  
                                                   l16399 302C  
                                                   l16495 352C  
                                                   l22967 147E  
                                                   l23863 2EB6  
                                                   l23599 2AF0  
                                                   l17641 4248  
                                                   l17625 41F2  
                                                   l17609 419C  
                                                   l17561 40BA  
                                                   l17457 4DF8  
                                                   l17377 865A  
                                                   l16497 3580  
                                                   l16913 8578  
                                                   l23945 3D40  
                                                   l23961 3DE2  
                                                   l22993 1562  
                                                   l22977 14F2  
                                                   l23865 2EC2  
                                                   l23689 2C1C  
                                                   l17635 422E  
                                                   l17555 4094  
                                                   l17539 404C  
                                                   l17483 4EC4  
                                                   l17459 4E06  
                                                   l16499 35F2  
                                                   l16835 95E4  
                                                   l16931 85B0  
                                                   l16923 859A  
                                                   l16915 857C  
                                                   l23963 3DF8  
                                                   l23859 2EA2  
                                                   l23795 2D7E  
                                                   l17629 420A  
                                                   l17557 40A4  
                                                   l17493 3F48  
                                                   l17485 4EC8  
                                                   l16941 6D64  
                                                   l16933 85B4  
                                                   l23949 3D62  
                                                   l23893 3C2E  
                                                   l23885 3BFE  
                                                   l22997 1584  
                                                   l23869 2ECE  
                                                   l17591 4148  
                                                   l17487 4ED6  
                                                   l17399 4CCA  
                                                   l16943 6D6E  
                                                   l23959 3DA2  
                                                   l23799 2D8E  
                                                   l17593 4156  
                                                   l17569 40E4  
                                                   l23985 3E62  
                                                   l23897 3C46  
                                                   l23889 3C0C  
                                                   l17587 4130  
                                                   l17499 3F68  
                                                   l16955 6D9E  
                                    write_package@package 0011  
                                   _eusart1RxStatusBuffer 0274  
                                                   l17597 416A  
                                                   l16957 6DA8  
                                                   l19447 8522  
                                                   l19705 86F4  
                                                   l19721 8708  
                                                   l19715 8702  
                                                   l19643 7C4C  
                                                   l19635 7C40  
                                                   l19709 86FA  
                                                   l19813 9164  
                                                   l19901 73F0  
                                                   l19639 7C46  
                                                   l19807 9158  
                                                   l19911 7438  
                                                   l19657 7CBC  
                                                   l19649 7C52  
                                                   l19745 8C00  
                                                   l19921 7466  
                                                   l19683 8106  
                                                   l19755 8C0C  
                                                   l19771 8A2E  
                                                   l19931 7498  
                                                   l19749 8C06  
                                                   l19781 96C4  
                                                   l19861 7ED4  
                                                   l19909 742C  
                                                   l19679 8100  
                                                   l19943 897A  
                                                   l19881 9488  
                                                   l19689 810C  
                                                   l19777 96BC  
                                                   l19963 830E  
                                                   l19955 82D2  
                                                   l19947 898E  
                                                   l19887 8D74  
                                                   l19895 8D94  
                                                   l19969 8250  
                                                   l19979 829A  
                                                   l19999 7332  
                                                   _ADACQ 000F5C  
                                       __end_of_I2C1_Open 7ED8  
                                                   _ADCAP 000F5D  
                                                   _ADACT 000F56  
                                   __end_of_saveNewSerial 8408  
                                                   ?_main 0001  
                                                   _ADCLK 000F57  
                                                   _ADCNT 000F67  
                                                   _ADPCH 000F5F  
                                                   _ADREF 000F58  
                                         __end_of___awdiv 7E54  
                          ?_keeloq_classic_decrypt_packet 0038  
                                         __end_of___lbdiv 8F5E  
                                                   _ADPRE 000F5E  
                                                   _ADRPT 000F66  
                                         __end_of___lbmod 92F2  
                                            _zeroCrossing 0193  
                                         __end_of___lldiv 7F5A  
                                                   _T1CLK 000FD2  
                                                   u21010 4084  
                                                   u21100 4112  
                                         ___awdiv@divisor 0016  
                                                   u21200 41AC  
                                                   u20320 8636  
                                                   _T1CON 000FCF  
                                                   u14010 7F0A  
                                                   u12410 7E16  
                                                   u20500 4D32  
                                                   u21150 4166  
                                                   u21070 40FA  
                                                   u20510 4D42  
                                                   u20511 4D40  
                                                   u14040 8A8C  
                                                   u21240 41D8  
                                                   u20600 4D80  
                                                   u23000 8794  
                                                   _T2CON 000FBD  
                                                   u21250 41E0  
                                                   u20530 4D56  
                                                   u15100 5BFE  
                                                   u15020 6E76  
                                                   u20700 4E38  
                                                   u20620 4D8A  
                                                   u15110 5C16  
                                                   u23030 87E6  
                                                   u20720 4E44  
                                                   u20640 4DAC  
                                                   u20560 4D6A  
                                                   u24000 5150  
                                                   u21290 423C  
                                                   u20490 4D24  
                                                   u15140 5C5A  
                                                   u20740 4E4E  
                                                   u20580 4D76  
                                                   u22510 96FC  
                                                   u15150 5C6C  
                                                   u23310 6BE8  
                                                   u24110 5218  
                                                   u24030 5194  
                                                   u24111 5216  
                                                   u20920 3FFC  
                                                   u20760 4E58  
                                                   u23240 6778  
                                                   u20850 3F7A  
                                                   u23250 6B44  
                                                   u24050 51A4  
                                                   u20940 4018  
                                                   u20860 3F88  
                                                   u20780 4E7C  
                                                   u24060 51B4  
                                                   _T2HLT 000FBE  
                                                   u22710 740A  
                                                   u20870 3F98  
                                                   u24310 8348  
                                                   u23350 8C52  
                                                   u24070 51BC  
                                                   u24160 5252  
                                                   u22538 7C5E  
                                                   u22730 7446  
                                                   u15610 8172  
                                                   u24330 836A  
                                                   u24250 52D8  
                                                   u24170 5262  
                                                   u22539 7C70  
                                                   u22628 8A52  
                                                   u22740 7454  
                                                   u23460 8F40  
                                                   u24180 526A  
                                                   u22629 8A64  
                                                   u24350 84A2  
                                                   u24270 5300  
                                                   u22568 8118  
                                                   u22760 7472  
                                                   u15720 7AFA  
                                                   u25160 5A00  
                                                   u23560 5702  
                                                   u24520 2942  
                                                   u22569 812A  
                                                   u22578 8714  
                                                   u22770 7486  
                                                   u15650 81A8  
                                                   u26130 54CA  
                                                   u13970 903E  
                                                   u24530 3844  
                                                   u22579 8726  
                                                   u22588 8C18  
                                                   u22780 7494  
                                                   u27100 1D6E  
                                                   u24540 384A  
                                                   u22589 8C2A  
                                                   u15670 8EF8  
                                                   u25270 5664  
                                                   u23590 5760  
                                                   u27030 1D04  
                                                   u15680 8F0E  
                                                   u23920 7D3C  
                                                   u26320 46B2  
                                                   u26240 45A6  
                                                   u25520 4AF2  
                                                   u27120 1D9C  
                                                   u27040 1D0A  
                                                   u24800 3B4E  
                                                   u24640 3990  
                                                   u26090 549A  
                                                   u27130 1DB8  
                                                   u27050 1D2E  
                                                   u24730 3A72  
                                                   u27131 1DB6  
                                                   u27051 1D2C  
                                                   u28100 64F6  
                                                   u28020 6450  
                                                   u25380 772E  
                                                   u26420 4762  
                                                   u26340 46BE  
                                                   u25620 4BC6  
                                                   u25540 4B54  
                                                   u27140 1DC6  
                                                   u18501 3298  
                                                   u18421 2F26  
                                                   u22965 719C  
                                                   u28110 6504  
                                                   u26350 46D6  
                                                   u26270 466C  
                                                   u26190 5514  
                                                   u25470 4AB4  
                                                   u27230 1EEA  
                                                   u24590 38D6  
                                                   u18511 32C8  
                                                   u18431 310A  
                                                   u26191 5512  
                                                   u28040 6468  
                                                   u25560 4B68  
                                                   u27080 1D62  
                                                   u24760 3AAC  
                                                   u29000 2C0A  
                                                   u18521 32F6  
                                                   u18441 3138  
                                                   u22985 720C  
                                                   u28130 651E  
                                                   u19410 8592  
                                                   u26450 4782  
                                                   u26290 4680  
                                         __end_of___lwdiv 8ABC  
                                                   u18451 3186  
                                                   u23955 8902  
                                                   u18540 96B6  
                                                   u26380 471C  
                                                   u25900 53BA  
                                                   u25660 4C20  
                                                   u27260 1F04  
                                                   u27180 1E06  
                                                   u26540 18B2  
                                                   u27420 105A  
                                                   u18461 31B4  
                                                   u28070 64A2  
                                                   u24950 58E2  
                                                   u28310 6016  
                                                   u25750 4C96  
                                                   u25590 4BA2  
                                                   u27270 1F20  
                                                   u27190 1E0C  
                                                   u24870 762E  
                                                   u29110 2C94  
                                                   u18471 31E4  
                                                   u27271 1F1E  
                                                   u28320 602A  
                                                   u27280 1F2E  
                                                   u26800 1B0C  
                                                   u27600 1336  
                                                   u29040 2C56  
                                                   u18481 3212  
                                                   u28170 8872  
                                                   u26810 1B14  
                                                   u26570 18E4  
                                                   u27610 133C  
                                                   u18491 326A  
                                                   u28180 88A4  
                                                   u19620 6A24  
                                                   u25940 53DE  
                                                   u26820 1B2E  
                                                   u27700 1430  
                                                   u27620 1352  
                                                   u29220 2D56  
                                                   u28421 1FBE  
                                                   u26821 1B2C  
                                                   u27621 1350  
                                                   u29221 2D54  
                                                   u19710 6A64  
                                                   u26910 1C02  
                                                   u27710 1436  
                                                   u26911 1C00  
                                                   u19640 6A30  
                                                   u28280 5FE2  
                                                   u26920 1C10  
                                                   u26760 1A8E  
                                                   u27560 128A  
                                                   u28441 1FDE  
                                                   u28370 607A  
                                                   u28290 5FF0  
                                                   u25970 53FE  
                                                   u26850 1B64  
                                                   u27570 12E6  
                                                   u29090 2C84  
                                                   u28531 215C  
                                                   u27555 1274  
                                                   u19820 6ACC  
                                                   u26940 1C4A  
                                                   u27820 15E0  
                                                   u27580 12EC  
                                                   _T2TMR 000FBB  
                                                   u27565 1286  
                                                   u19910 6B1A  
                                                   u26950 1C64  
                                                   u26870 1B88  
                                                   u29510 3C22  
                                                   u27830 15E6  
                                                   u27750 14A4  
                                                   u29430 2E6E  
                                                   u29350 2E02  
                                                   u29270 2D9C  
                                                   u28631 22F4  
                                                   u28471 2032  
                                                   u26951 1C62  
                                                   u19920 6B22  
                                                   u26880 1B90  
                                                   u27840 161A  
                                                   u28800 2A76  
                                                   u18945 94E2  
                                                   u28721 23FA  
                                                   u28561 21C6  
                                                   u27841 1618  
                                                   u27745 148E  
                                                   u19930 6B2A  
                                                   u19850 6AE4  
                                                   u19690 6A58  
                                                   u18946 94E4  
                                                   u28650 232C  
                                                   u26970 1CA8  
                                                   u26890 1BAA  
                                                   u29530 3C5C  
                                                   _T2RST 000FC0  
                                                   u28731 2426  
                                                   u26971 1CA6  
                                                   u26891 1BA8  
                                                   u27755 14A0  
                                                   u19780 6A9C  
                                                   u19940 8AC6  
                                                   u26980 1CB6  
                                                   u27860 1630  
                                                   u29460 2E86  
                                                   u27950 16E6  
                                                   u27870 1644  
                                                   u27790 1536  
                                                   u29390 2E20  
                                                   u28591 2216  
                                                   u19951 8AD4  
                                                   u27951 16E4  
                                                   u29560 3C94  
                                                   u27785 1520  
                                                   i2l106 9028  
                                                   u29730 3E52  
                                                   u27890 165E  
                                                   u28770 2A12  
                                                   u27875 1640  
                                                   u27795 1532  
                                                   u29580 3CB6  
                                                   u29817 82AA  
                                                   u29690 3E14  
                                                   u29827 831E  
                                                   u29771 6342  
                                                   u28980 2BD2  
                                                   i2l870 004C  
                                                   i2l872 006A  
                                                   i2l873 0080  
                                                   i2l874 0076  
                                                   i2l867 0030  
                                         ___awdiv@counter 0018  
                                              _CloseOrder 9344  
                              __end_of_i2c1_fsmStateTable 0F21  
                                                   _OSCEN 000EDC  
                                                   _TMR0H 000FD4  
                                                   _TMR1H 000FCE  
                                                   _TMR0L 000FD3  
                                                   _TMR1L 000FCD  
                                                   _RFBit 0089  
                                                   _PORTB 000F8E  
                               __end_of_SaveNVM_VarSystem 8F96  
                          DecryptPacket_12BIT@commandType 00E4  
                                                   _TRISA 000F88  
                                                   _TRISB 000F89  
                                                   _TRISC 000F8A  
                                                   _TRISD 000F8B  
                                                   _TRISE 000F8C  
                                  ??_I2C1_MasterGetRxData 0010  
                                   ?_I2C1_DO_RX_NACK_STOP 0001  
                             validateRemoteSerialNumber@i 003A  
                             validateRemoteSerialNumber@j 0039  
                                     ___lmul@multiplicand 0021  
                               ?_TMR0_SetInterruptHandler 0010  
                                           _InitSoftStart 87AA  
                              ??_I2C1_CallbackReturnReset 001B  
                                       ??_I2C1_MasterOpen 0010  
                                        _idxAdcAquisition 0091  
                                    _EUSART1_Transmit_ISR 8FFC  
                                       ??_I2C1_MasterStop 0010  
                                       ??_I2C1_Initialize 0010  
                               GetMotorPower@defineatraso 0013  
                                        __end_of_TMR0_ISR 93DC  
                                        __end_of_TMR1_ISR 8EE8  
                                        __end_of_TMR2_ISR 668A  
                                    _idxSaveEnergyADCHist 0090  
                                                   _rfCMD 003B  
                                                   _aux_i 018D  
                          actionZone_Closed@typeOpenOrder 0021  
                                        _setFlashLigth_ON 8EE8  
                                          ?_EUSART1_Write 0001  
                                          readbutton@key1 0086  
                                   SetSegmentValueMain@d1 001D  
                                          readbutton@key2 0197  
                                   SetSegmentValueMain@d2 001C  
                                 __end_of_TMR1_Initialize 8DE8  
                                    setFlashLigth_ON@Freq 0010  
                                                   pclath 000FFA  
       rd1RegCompleteHandler@i2c1_master_example$F500@ptr 0019  
                                                   pclatu 000FFB  
                                         __end_of_sumHIST 714C  
                                         __end_of_sm_init 896A  
                                                   tablat 000FF5  
       rd2RegCompleteHandler@i2c1_master_example$F511@ptr 0019  
       wr2RegCompleteHandler@i2c1_master_example$F523@ptr 0019  
       wr1RegCompleteHandler@i2c1_master_example$F517@ptr 0019  
     rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr 0019  
                                          ??_EUSART1_Read 0010  
                                                   plusw0 000FEB  
                                                   plusw2 000FDB  
                                 __end_of_sm_execute_main 2EFC  
                                                   ttemp5 0051  
                                                   ttemp6 0054  
                                                   ttemp7 0058  
                                                   status 000FD8  
                                         ??_ControlLights 0016  
                                                   wtemp8 0051  
                                            ??_I2C1_DO_RX 001B  
                                            ??_I2C1_DO_TX 001B  
                                         ??_ControlInputs 0010  
                                         ___lbdiv@divisor 0010  
              __end_of_EUSART1_DefaultFramingErrorHandler 9842  
                    ??_EUSART1_DefaultFramingErrorHandler 0001  
                     ?_EUSART1_DefaultFramingErrorHandler 0001  
                      _EUSART1_DefaultFramingErrorHandler 9840  
                                         _TMR1_WriteTimer 9502  
                                  ??_I2C1_DO_ADDRESS_NACK 001B  
                                         ___lbdiv@counter 0012  
                            __end_of_getStateOpenPosition 6C42  
                                            ??_I2C1_Close 0010  
                                          ??_InitReceiver 0010  
                        VerifyElectricalBrake@actualState 0011  
                      i2VerifyElectricalBrake@actualState 0002  
                                         __initialization 7568  
                                 cmdMemoryIsEmpty@cmdType 0031  
                             ?_SetSegmentValueIntermitent 0010  
                              __end_of_EUSART1_Initialize 8058  
                                            __end_of_main 63C8  
                                              _ReadSerial 8408  
                         sm_execute_menuConfiguration@psm 00E9  
                             __end_of_DecryptPacket_12BIT 7BA8  
                                          _refreshCurrent 8CD8  
                                          ??_InitSoftStop 0014  
                      validateRemoteSerialNumber@position 0033  
                                 __end_of_TMR2_Initialize 913C  
                             ?_INTERRUPT_InterruptManager 0001  
                                          _refreshSegment 7D4A  
                                  ??_I2C1_MasterOperation 0020  
                                _TMR2_SetInterruptHandler 9716  
                                                  ??_main 003B  
                                       ??_WWDT_Initialize 0010  
                                           __activetblptr 000003  
                                       Segments_Set@value 0001  
                                   saveNewSerial@position 00DC  
                      __end_of_validateRemoteSerialNumber 5BF0  
                              _validateRemoteSerialNumber 5A54  
                                          ?_InitSoftStart 0001  
                                   ?_EUSART1_Transmit_ISR 0001  
                                           sumEnergyADC@i 0018  
                                      __end_of_I2C1_DO_RX 814E  
                                      __end_of_I2C1_DO_TX 7CC0  
                                       ?_InitWalkAutoTime 0001  
                                       ??_controlVelocity 00DA  
                                               ??_RGB_Set 0010  
                              ?_ControlDecelarationFactor 0001  
                                    __end_of_getSerialCmd 8BAA  
                  __end_of_SetSegmentValueIntermitentMain 9684  
                          _SetSegmentValueIntermitentMain 9670  
                                      ReadSerial@position 002F  
                                      __end_of_I2C1_Close 948C  
                                                  _ADACCH 000F71  
                                                  _ADACCL 000F70  
                                 ?_I2C1_Read1ByteRegister 0022  
                                      ??_InitWalkAutoTime 0010  
                                                  _ADCON0 000F60  
                                                  _ADCON1 000F59  
                                                  _ADCON2 000F5A  
                                                  _ADCON3 000F5B  
                                                  _ADERRH 000F6F  
                                                  _ADERRL 000F6E  
                                                  _ADLTHH 000F6B  
                                                  _ADLTHL 000F6A  
                                                  _ADRESH 000F64  
                                                  _ADRESL 000F63  
                                                  _ADSTAT 000F65  
                                                  _ADUTHH 000F6D  
                                        ___awdiv@dividend 0014  
                                                  _ADUTHL 000F6C  
                                                  _ANSELA 000F11  
                                                  _ANSELB 000F19  
                                                  _ANSELC 000F21  
                                                  _ANSELD 000F26  
                                                  _ANSELE 000F2E  
                                                  _T0CON0 000FD5  
                                                  _T0CON1 000FD6  
                                                  _T1GATE 000FD1  
                                                  _T1GCON 000FD0  
                                     readRFButtons@serial 0181  
                                                  _IOCBN3 00789B  
                                                  _IOCBP3 0078A3  
                                                  _RC1REG 000F99  
                                           _readRFButtons 5F24  
                                                  _RC1STA 000F9D  
                                                  _RC3PPS 000EFA  
                                 TMR1_WriteTimer@timerVal 0001  
                                                  _RC4PPS 000EFB  
                                                  _ODCONA 000F0F  
                                                  _ODCONB 000F17  
                                                  _ODCONC 000F1F  
                                                  _ODCOND 000F24  
                                                  _ODCONE 000F2C  
                                                  _RC7PPS 000EFE  
                                   __end_of_GetMotorPower 74A2  
                                                  i2l2024 5EAA  
                                                  i2l1147 9514  
                                                  i2l2140 7DCE  
                                                  i2l2133 7D98  
                                                  i2l2222 50DA  
                                                  i2l2240 753C  
                                                  i2l2128 7D7A  
                                                  i2l1266 6594  
                                                  i2l2323 8230  
                                                  i2l1620 49A8  
                                                  i2l1277 661E  
                                                  i2l2191 4F16  
                                                  i2l2328 823A  
                                                  i2l2195 4FFC  
                                                  _INLVLA 000F0D  
                                                  _INLVLB 000F15  
                                                  _INLVLC 000F1D  
                                                  _INLVLD 000F22  
                                                  _INLVLE 000F2A  
                                               ??_Decrypt 001D  
                                  calculateMean@meanValue 0010  
                                                  _OSCFRQ 000EDE  
                         __end_ofi2_VerifyElectricalBrake 823E  
                                                  _TMR0IE 007615  
                                                  _TMR0IF 007655  
                                                  _RX1PPS 000EB5  
                            __end_of_refreshADCZeroOffset 6F56  
                                           ?_init_package 0010  
                                                  _TX1REG 000F9A  
                                                  _TX1STA 000F9E  
                                __end_of_cmdMemoryIsEmpty 7A8C  
                                       ?_I2C1_MasterClose 0001  
                                                  _DecCHK 8FCA  
                                 __end_ofi2_GetMotorPower 7568  
                                                  _RFFull 008B  
                                rdBlkRegCompleteHandler@p 0019  
                                               ??_ReadADC 0002  
                                 ??_I2C1_MasterDisableIrq 0010  
                                       ?_I2C1_MasterStart 0001  
                                         eusartparser@pos 00E7  
                    __end_of_sm_execute_menuConfiguration 1886  
                            _sm_execute_menuConfiguration 0F22  
                                       ?_I2C1_MasterWrite 0001  
                                                  _HopCHK 7CC0  
                                ?_I2C1_MasterWaitForEvent 0001  
                                      ??_I2C1_MasterClose 0010  
                                        _I2C1_DO_TX_EMPTY 86F0  
                                 controlSelectRemote@temp 00E8  
                                  _SumEnergyADCHist_array 0260  
                                      ??_I2C1_MasterStart 0010  
                                      ??_I2C1_MasterWrite 0022  
                                       _decrementTimeslot 92F2  
                    __end_of_TMR1_DefaultInterruptHandler 983E  
                            _TMR1_DefaultInterruptHandler 983C  
                                  __end_of_refreshCurrent 8D1E  
                                           ?_read_package 0011  
                                                  ___lmul 896A  
                                         ??_LoadManufCode 0010  
                                                  ___wmul 9390  
                                  __end_of_refreshSegment 7DD0  
                                               ??___awdiv 0018  
                                               ??___lbdiv 0011  
                                               ??___lbmod 0011  
                                               ??___lldiv 0018  
                                      ?_decrementTimeslot 0001  
                                               ??___lwdiv 0014  
                                       ??_i2c_writeNBytes 0027  
                                           _load_New_Menu 4256  
                             __end_of_keeloqDecryptPacket 56EC  
                                ?_EUSART1_SetErrorHandler 0010  
                                                  _memcpy 8D62  
                                        ?_TMR0_Initialize 0001  
                                                  clear_0 75DE  
                                                  clear_1 75EA  
                                                  clear_2 75F6  
                                                  clear_3 7602  
                                                  clear_4 760E  
                                        ___awdiv@quotient 001A  
                                       ??_WWDT_TimerClear 0010  
                      __end_of_sm_execute_ControlLearning 1F94  
                              _sm_execute_ControlLearning 1886  
                                                  isa$std 000001  
                        ??_EUSART1_SetOverrunErrorHandler 0012  
                         ?_EUSART1_SetOverrunErrorHandler 0010  
                                       ??_WWDT_SoftEnable 0010  
                                ??_I2C1_DO_SEND_ADR_WRITE 0011  
                          SetSegmentValueIntermitent@time 0011  
                                  setValueToEdit@menuType 00DE  
                                       ?_I2C1_SetCallback 0010  
                                  ??_I2C1_DO_RX_NACK_STOP 0010  
                                           ??_ShowVersion 001E  
                                         _ADCC_Initialize 8B0C  
                                     ??_decrementTimeslot 0003  
                                             ?_CloseOrder 0001  
                                   _I2C1_DO_SEND_ADR_READ 96E6  
                                          _PMD_Initialize 94E6  
                                              _StateTRIAC 0191  
                                           ?_eusartparser 00E0  
                           ?_I2C1_SetDataCompleteCallback 0015  
                                      ??_I2C1_SetCallback 0014  
                                            __mediumconst 0000  
                          __end_of_I2C1_Read1ByteRegister 8862  
                                    __end_of_ControlMotor 4EEC  
                                                  tblptrh 000FF7  
                                                  tblptrl 000FF6  
                                           Decrypt@Buffer 0022  
                                                  tblptru 000FF8  
                                               ??_sumHIST 0014  
                                               ??_sm_init 0017  
                                   SaveNVM_VarSystem@page 00D8  
                              __end_of_actionZone_Closing 47D8  
                               ?_ADCC_GetSingleConversion 0001  
                                         ??_EUSART1_Write 0010  
                       __end_of_ControlDecelarationFactor 95B8  
                TMR2_SetInterruptHandler@InterruptHandler 0010  
                TMR1_SetInterruptHandler@InterruptHandler 0010  
                TMR0_SetInterruptHandler@InterruptHandler 0010  
                                        ??_ControlCurrent 0023  
                                  setValueToEdit@posindex 00DF  
                                 __end_of_TMR1_WriteTimer 951E  
                                         _eusart1RxBuffer 027C  
                                          ?_readRFButtons 0001  
                                        ___lbdiv@dividend 0011  
                                 _I2C1_DO_RX_NACK_RESTART 9794  
                                         _eusart1TxBuffer 0284  
                                     _SetSegmentValueMain 9538  
                                        ?_TMR1_Initialize 0001  
                                          ??_init_package 0011  
                                       _SYSTEM_Initialize 905E  
                              __end_of_actionZone_Opening 4CA2  
                          I2C1_SetDataCompleteCallback@cb 0015  
                                         ___lbmod@divisor 0010  
                                              __accesstop 0060  
                                 __end_of__initialization 7614  
                                         ___lbmod@counter 0012  
                                           Decrypt@packet 001B  
                           setValueToEdit@haveValueToEdit 00E0  
                                        ?_sm_execute_main 00ED  
                                          _setValueToEdit 24E8  
                                      getSerialCmd@serial 001B  
                         I2C1_MasterOperation@returnValue 0021  
                                      ?_SYSTEM_Initialize 0001  
                                           ___rparam_used 000001  
                               __end_of_decrementTimeslot 931C  
                                           ??_I2C1_Poller 0020  
                                           ?_Segments_Set 0001  
                                          ??_read_package 0018  
                         ??_setPositionInvertionInClosing 00D8  
                           ?_sm_execute_menuConfiguration 00E9  
                           __end_of_EUSART1_RxDataHandler 94AE  
                                 _rdBlkRegCompleteHandler 8E68  
                                          __pcstackCOMRAM 0001  
                                         ?_refreshCurrent 0001  
                                   __end_of_getKeyPressed 95E8  
                                            __pidataBANK0 9836  
                                            __pidataBANK1 9804  
                                            __pidataBANK2 9838  
                                            __pidataBANK3 93DC  
                                     ??_SYSTEM_Initialize 0014  
                                             ?_ReadSerial 002E  
                        __end_of_I2C1_MasterEnableRestart 982A  
                                          ?_load_New_Menu 0001  
                               sm_execute_ControlGate@psm 00E7  
                                               ?_TMR0_ISR 0001  
                                         ?_refreshSegment 0001  
                                               ?_TMR1_ISR 0001  
                                               ?_TMR2_ISR 0001  
                           ?_TMR1_DefaultInterruptHandler 0001  
                         ??_setPositionInvertionInOpening 0032  
                                    ?_SetSegmentValueMain 001C  
                                        ?_TMR2_Initialize 0001  
                                        ___lbdiv@quotient 0013  
                                  __end_of_PMD_Initialize 9502  
                            ??_I2C1_DO_SEND_RESTART_WRITE 0010  
                                 ??_I2C1_MasterSendTxData 0010  
                                         ??_InitSoftStart 0014  
                                    __end_of_EUSART1_Read 8CD8  
                                          ??_eusartparser 00E1  
                                  ??_EUSART1_Transmit_ISR 0001  
                                    _getStateOpenPosition 6B32  
                               write_eusartparser@package 0010  
                                           ?_RemoveSerial 003A  
                                    __end_of_InitReceiver 9538  
                         actionZone_Closing@typeOpenOrder 0033  
                             __end_of_EUSART1_Receive_ISR 7962  
                                   __end_of_I2C1_DO_RESET 9770  
                          keeloqDecryptPacket@commandType 00E9  
                                        sumEnergyADC@sumE 0014  
                        verifyProgramingMode@classic_data 0010  
                                       __end_of_ReqResync 95D0  
                             VerifyFollowMe@securityClose 0010  
                                        ??_confirmpackage 0013  
                               __end_of_SYSTEM_Initialize 908C  
                                     __end_of_ShowVersion 868E  
                                           _eusart1RxHead 0095  
                                           _eusart1TxHead 0097  
                                           _eusart1RxTail 0094  
                                              __pbssBANK0 0060  
                                              __pbssBANK1 0100  
                                              __pbssBANK2 0200  
                                              __pbssBANK3 0300  
                                  __end_of_setValueToEdit 29F4  
                                           _eusart1TxTail 0096  
                         __end_of_I2C1_MasterWaitForEvent 9794  
                       _EUSART1_TxDefaultInterruptHandler 02EF  
                                            _GetOpenOrder 56EC  
                                    __end_of_InitSoftStop 8C90  
                         ??_EUSART1_SetRxInterruptHandler 0012  
                          validateRemoteSerialNumber@mask 0035  
                                cmdMemoryIsEmpty@position 002E  
                           __end_of_rd2RegCompleteHandler 9244  
                                    I2C1_Open@returnValue 0011  
                                                 ?_DecCHK 0010  
                                           ?_WaitPreFlash 0001  
                                        ?i2_GetMotorPower 0001  
                            __end_of_SetSegmentValueLearn 7052  
                                       ?_controlTimeslots 0001  
                           __end_of_wr2RegCompleteHandler 9218  
                                           ?_NormalKeyGen 0026  
                                   __end_of_sm_send_event 87AA  
                                   _rd1RegCompleteHandler 9244  
                                                 ?_HopCHK 0024  
                                          ??_Segments_Set 0001  
              validateRemoteSerialNumber@VerifyOnlySerial 0032  
                                              _edit_Param 0046  
                                       _I2C1_DO_SEND_STOP 97AC  
                                      ??_controlTimeslots 0005  
                                           _button_struct 004C  
                                   _wr1RegCompleteHandler 9270  
                         __end_of_EUSART1_SetErrorHandler 9766  
                                       getHopCode@tempHop 0020  
                                       getHopCode@tempPos 0022  
                        __end_of_TMR0_SetInterruptHandler 9734  
                                                 ?___lmul 001D  
                                      ?_I2C1_DO_SEND_STOP 0001  
                                                 ?___wmul 0010  
                                              ??_TMR0_ISR 0003  
                                              _getHopCode 668A  
                                              ??_TMR1_ISR 000A  
                                              ??_TMR2_ISR 0005  
                                 __end_of_ADCC_Initialize 8B5C  
                                         _I2C1_MasterOpen 9600  
                                   ??_SetSegmentValueMain 001D  
                                         _I2C1_MasterStop 9822  
                                         _I2C1_Initialize 9684  
                                     __end_of_I2C1_Poller 96CA  
                                __end_of_setFlashLigth_ON 8F24  
                                                 _ADFLTRH 000F73  
                                                 _ADFLTRL 000F72  
                                                 ?_memcpy 0010  
                                    readRFButtons@keyType 0087  
                                       __end_of_StopOrder 94CA  
                                          ___lmul@product 0025  
                                                 _ADPREVH 000F62  
                                                 _ADPREVL 000F61  
                                write_eusartparser@debug2 0021  
                              __end_of_ResetDefaultMemory 6244  
                                                 _ADSTPTH 000F69  
                                                 _ADSTPTL 000F68  
                          _menuConfiguration_stateMachine 02BF  
                                         ?_PMD_Initialize 0001  
                       keeloq_classic_decrypt_packet@data 0038  
                                  ?_I2C1_DO_SEND_ADR_READ 0001  
                                           _erroranterior 0189  
                                     ??_I2C1_DO_SEND_STOP 0010  
                  __end_of_EUSART1_SetFramingErrorHandler 975C  
                          _EUSART1_SetFramingErrorHandler 9752  
                                    _refreshADCZeroOffset 6E58  
                                ??_sm_execute_ControlGate 00E9  
                                   i2c_readDataBlock@data 0024  
                                   _VerifyElectricalBrake 814E  
                                                 i2l14211 74B6  
                                                 i2l14221 74FE  
                                                 i2l14231 752C  
                                                 i2l14241 755E  
                                                 i2l14219 74F2  
                                                 i2l14261 820A  
                                                 i2l14511 49D6  
                                                 i2l14423 4810  
                                                 i2l14415 47EA  
                                                 i2l14521 49FE  
                                                 i2l14505 49C0  
                                                 i2l14425 4818  
                                                 i2l14515 49E6  
                                                 i2l14451 489E  
                                                 i2l14435 484C  
                                                 i2l14419 47FA  
                                                 i2l14267 8226  
                                                 i2l12861 94AA  
                                                 i2l14445 4878  
                                                 i2l14525 4A16  
                                                 i2l14463 48E6  
                                                 i2l14631 50BE  
                                                 i2l14543 4F0C  
                                                 i2l14465 48F6  
                                                 i2l14467 4906  
                                                 i2l14643 50FA  
                                                 i2l14619 5080  
                                                 i2l14469 490C  
                                                 i2l14565 4F6C  
                                                 i2l14557 4F48  
                                                 i2l14487 4968  
                                                 i2l14479 4940  
                                                 i2l14575 4F96  
                                                 i2l14559 4F52  
                                                 i2l14655 89D0  
                                                 i2l14499 49B2  
                                                 i2l14587 4FD0  
                                                 i2l14595 500E  
                                                 i2l14679 7D9C  
                                                 i2l14689 7DCA  
                                                 i2l16633 65B6  
                                                 i2l16617 656C  
                                                 i2l16609 6558  
                                                 i2l16547 9022  
                                                 i2l16643 65E0  
                                                 i2l16653 6602  
                                                 i2l16567 795C  
                                                 i2l16681 666A  
                                                 i2l16675 6652  
                                                 i2l16667 6636  
                          actionZone_Opened@typeOpenOrder 0021  
                                   ?_getStateOpenPosition 0001  
                                          ??_RemoveSerial 00D8  
                                              _fimdecurso 0175  
                            ?_EUSART1_DefaultErrorHandler 0001  
                                       _I2C1_MasterIsNack 96F4  
                                                 _SP1BRGH 000F9C  
                                                 _SP1BRGL 000F9B  
                                              _dispStruct 0072  
                                                 _OSCCON1 000ED8  
                                                 _OSCCON3 000EDA  
                                               _I2C1_Open 7E54  
                               ??_I2C1_DO_RX_NACK_RESTART 0010  
                                                 _RGB_Set 96CA  
                                              _auxCounter 00FB  
                                         ??_readRFButtons 003B  
                                                 _OSCTUNE 000EDD  
                                       _I2C1_MasterSetIrq 97E0  
                                                 _SSP1ADD 000F93  
                                                 _SLRCONA 000F0E  
                                                 _SLRCONB 000F16  
                                                 _SLRCONC 000F1E  
                                                 _SLRCOND 000F23  
                                                 _SLRCONE 000F2B  
                                                 _WDTCON0 000ED2  
                                                 _SSP1BUF 000F92  
                                                 _WDTCON1 000ED3  
                                      ?_I2C1_MasterIsNack 0001  
                              ?_I2C1_DO_SEND_RESTART_READ 0001  
                          ??_I2C1_SetDataCompleteCallback 0019  
                                        ?_TMR1_WriteTimer 0001  
                                      ?_I2C1_MasterSetIrq 0001  
                            __end_of_generateErrorLearnig 8628  
                                            _classic_data 0294  
                                          load_New_Menu@i 0023  
                                         ?_setValueToEdit 003A  
                                                 _RFcount 007E  
                         ??_keeloq_classic_decrypt_packet 00D8  
                                                 _Decrypt 7310  
                                  eusartparser@relcounter 00EA  
                                          ??_WaitPreFlash 0018  
                                                 _RFstate 0199  
                                      _i2c1_fsmStateTable 0F01  
                                          ??_NormalKeyGen 0028  
                                     ??_I2C1_MasterIsNack 0010  
  __end_of_rd1RegCompleteHandler@i2c1_master_example$F500 91EC  
          _rd1RegCompleteHandler@i2c1_master_example$F500 91C0  
  __end_of_rd2RegCompleteHandler@i2c1_master_example$F511 91C0  
          _rd2RegCompleteHandler@i2c1_master_example$F511 9194  
  __end_of_wr2RegCompleteHandler@i2c1_master_example$F523 92C8  
          _wr2RegCompleteHandler@i2c1_master_example$F523 929C  
  __end_of_wr1RegCompleteHandler@i2c1_master_example$F517 9194  
                               __end_of_I2C1_DO_SEND_STOP 97B4  
          _wr1RegCompleteHandler@i2c1_master_example$F517 9168  
__end_of_rdBlkRegCompleteHandler@i2c1_master_example$F535 8E68  
        _rdBlkRegCompleteHandler@i2c1_master_example$F535 8E28  
                               ??_rdBlkRegCompleteHandler 001B  
                          getCurrentComparator@tempOffset 0020  
                                                 _ReadADC 89C0  
                                      I2C1_SetCallback@cb 0010  
                                           _write_package 90B8  
                                     ??_I2C1_MasterSetIrq 0010  
                                     _controlSelectRemote 3828  
                              __end_of_clearLearningValue 80D4  
                                                 _NextHop 0290  
                                                 __Hparam 0000  
                              __end_of_write_eusartparser 3828  
                                                 __Lparam 0000  
                                         _WWDT_Initialize 970C  
                                         ??_load_New_Menu 0020  
                              ??_TMR2_SetInterruptHandler 0012  
                                               _ADC_array 0200  
                                            _getSerialCmd 8B5C  
                                                 ___awdiv 7DD0  
                                                 ___lbdiv 8F24  
                                                 ___lbmod 92C8  
                                                 ___lldiv 7ED8  
                                              _readInputs 6D50  
                                         _controlVelocity 510E  
                                                 ___lwdiv 8A6A  
                                           _OpenFullOrder 936A  
                                            __psmallconst 0F00  
                                     RemoveSerial@cmdType 00DA  
                   __end_of_setPositionInvertionInClosing 6A0E  
                           _setPositionInvertionInClosing 68E6  
                          ??_sm_execute_menuConfiguration 00EB  
                                     _EUSART1_is_rx_ready 96AA  
                                          getHopCode@data 0016  
                                                 _difTime 0190  
                                                 __pcinit 7568  
                                           ?_I2C1_DO_IDLE 0001  
                                           ?_I2C1_DO_RCEN 0001  
                                                 __ramtop 0F00  
                                  i2c_writeNBytes@address 0039  
                                   __end_of_getTypeRemote 97DA  
                                    __end_of_init_package 9110  
                                                 __ptext0 6244  
                                                 __ptext1 29F4  
                                                 __ptext2 0F22  
                                                 __ptext3 24E8  
                                                 __ptext4 4256  
                                                 __ptext5 951E  
                                                 __ptext6 3828  
                                                 __ptext7 97D4  
                                                 __ptext8 8B5C  
                                                 __ptext9 761E  
                                   ?_refreshADCZeroOffset 0001  
                                              _memoryTEMP 02A4  
                                      i2c_readDataBlock@d 002A  
                                _I2C1_MasterEnableRestart 9826  
                          ??_TMR1_DefaultInterruptHandler 0001  
                               __end_of_I2C1_MasterIsNack 9700  
                            ?_I2C1_SetAddressNackCallback 0015  
                                               _T1CONbits 000FCF  
                   __end_of_setPositionInvertionInOpening 7310  
                           _setPositionInvertionInOpening 7234  
                                                 _lastKey 0195  
                                              _readbutton 8554  
                                   _OSCILLATOR_Initialize 9630  
                                   OpenWalkOrder@diffTime 001A  
                                             _ShowVersion 8628  
                                    ?_controlSelectRemote 0001  
                             ?_validateRemoteSerialNumber 002E  
                                        _InitFullAutoTime 9552  
                               __end_of_I2C1_MasterSetIrq 97E6  
                             checkNVM_VarSystem@saveParam 003A  
                                                 _menu_st 0151  
                                __end_of_I2C1_DO_TX_EMPTY 874E  
                                  RemoveSerial@tempSerial 00DB  
                                       __end_of_setRGB_ON 7B1C  
                                      _EUSART1_Initialize 7FDA  
                                ??_PIN_MANAGER_Initialize 0010  
                               ?_TMR1_SetInterruptHandler 0010  
                                              ?_I2C1_Open 0001  
                                                 _sumHIST 7052  
                                                 _sm_init 8914  
                                          _BufferRF_12BIT 0187  
                                             sumHIST@sumH 001C  
                                    __end_of_read_package 8B0C  
                                                 _var_sys 0100  
                           ??_EUSART1_DefaultErrorHandler 0001  
                             ??_ControlDecelarationFactor 0010  
                                ?_I2C1_CallbackReturnStop 0019  
                                     init_package@package 0010  
                                           _OpenWalkOrder 8478  
                                    _zeroCrossingWaitTime 02F1  
                                       SetSegmentValue@d1 001D  
                                       SetSegmentValue@d2 001C  
                       __end_of_I2C1_DO_SEND_RESTART_READ 97CC  
                                    end_of_initialization 7614  
                              __end_of_I2C1_MasterSendAck 97EC  
                                    ?_EUSART1_is_rx_ready 0001  
                                     _I2C1_MasterClearIrq 97F2  
                                     ?_EUSART1_Initialize 0001  
                                               _PCON0bits 000FD7  
                                                 memcpy@d 0017  
                                                 memcpy@n 0014  
                                                 memcpy@s 0019  
                              __end_of_I2C1_MasterStartRx 981A  
                             _EUSART1_OverrunErrorHandler 02E9  
                                  ?_rd1RegCompleteHandler 0019  
                                         _i2c_writeNBytes 82B4  
                              ?_GetSecurityStateInClosing 0001  
                                  _I2C1_DO_SEND_ADR_WRITE 96D8  
                                       ?_cmdMemoryIsEmpty 002E  
                                          ?_write_package 0011  
                                           _calculateMean 868E  
                            __end_of_sm_get_current_state 96AA  
                                               i2u1410_40 751A  
                                               i2u1412_40 7538  
                                               i2u1500_40 5F12  
                                               i2u1413_40 754C  
                                               i2u1421_40 8220  
                                               i2u1414_40 755A  
                                               i2u1407_40 74D0  
                                               i2u1336_40 930C  
                                               i2u1433_40 488C  
                                               i2u1409_40 750C  
                                               i2u1417_40 81EA  
                                               i2u1435_40 48B6  
                                               i2u1451_40 4F06  
                                               i2u2234_48 003E  
                                               i2u1436_40 48C6  
                                               i2u1428_40 4810  
                                               i2u1437_40 48D6  
                                               i2u1446_40 49D4  
                                               i2u1470_40 5034  
                                               i2u2237_48 0056  
                                               i2u1471_40 5042  
                                               i2u1463_40 4FC4  
                            __end_of_I2C1_DO_SEND_RESTART 97BC  
                                               i2u1480_40 50A6  
                                               i2u1464_40 4FCA  
                                               i2u1474_40 5060  
                                               i2u1458_40 4F66  
                                               i2u1483_40 50CA  
                                    __end_of_eusartparser 24E8  
                                               i2u1491_45 89E8  
                                               i2u1484_40 50D2  
                                               i2u1476_40 5076  
                                         _WWDT_TimerClear 94CA  
                                               i2u1493_40 7D5A  
                                 __end_of_I2C1_MasterOpen 9618  
                                  ?_wr1RegCompleteHandler 0019  
                                               i2u1486_40 50F2  
                                               i2u1495_40 7DAC  
                                   __end_of_ControlLights 4256  
                                               i2u1499_40 5E9E  
                                 __end_of_I2C1_MasterStop 9826  
                                               i2u1861_48 791E  
                                               i2u1861_49 7930  
                                               i2u1863_48 7948  
                                 __end_of_I2C1_Initialize 9698  
                                               i2u1881_40 65CC  
                                               i2u1865_48 93CA  
                                         ___lldiv@divisor 0014  
                                               i2u1859_48 78F2  
                                               i2u1859_49 7904  
                                               i2u1869_48 8ED6  
                                               i2u1893_48 6678  
                                               i2u1878_40 65A8  
                                   __end_of_ControlInputs 6B32  
                   __end_of_EUSART1_SetRxInterruptHandler 9748  
                           _EUSART1_SetRxInterruptHandler 973E  
                                             _I2C1_Poller 96BA  
                                               i2u2983_47 9650  
                        ??_SetSegmentValueIntermitentMain 001F  
                         ?_SetSegmentValueIntermitentMain 001C  
                                         _WWDT_SoftEnable 980A  
                                         ___lldiv@counter 001C  
                                      ??_cmdMemoryIsEmpty 002F  
                               ?_I2C1_CallbackReturnReset 0019  
                           __end_of_I2C1_MasterDisableIrq 9832  
                                             _I2C1_Status 023C  
                              ?_GetSecurityStateInOpening 0001  
                                            _ControlMotor 4CA2  
                                  SaveNVM_VarSystem@point 00DB  
                                                 postdec1 000FE5  
                                                 postdec2 000FDD  
                                                 postinc0 000FEE  
                                                 postinc1 000FE6  
                                                 postinc2 000FDE  
                                             ?_getHopCode 0016  
                                          ?_OpenFullOrder 0001  
                        SetSegmentValueIntermitentMain@d1 001F  
                        SetSegmentValueIntermitentMain@d2 001C  
                                     _I2C1_MasterSendNack 97EC  
                                           HopCHK@hopDiff 0026  
                     __end_of_I2C1_SetAddressNackCallback 9600  
                             _I2C1_SetAddressNackCallback 95E8  
                                        ?_ADCC_Initialize 0001  
                                     _getTimeDecelaration 714C  
                                              _sm_restart 8D1E  
                        __end_of_ADCC_GetSingleConversion 965C  
                                    ?_I2C1_MasterClearIrq 0001  
                                          ??_I2C1_DO_IDLE 0010  
                                    ??_EUSART1_Initialize 0012  
                                        NormalKeyGen@SEED 02DB  
                                          ??_I2C1_DO_RCEN 0010  
                      __end_of_I2C1_DO_SEND_RESTART_WRITE 97C4  
                              _I2C1_DO_SEND_RESTART_WRITE 97BC  
                       actionZone_Closing@securityClosing 0032  
                             ?_sm_execute_ControlLearning 00DC  
                                _TMR0_SetInterruptHandler 972A  
                                               _PORTAbits 000F8D  
                                               _PORTBbits 000F8E  
                                  ?_VerifyElectricalBrake 0001  
                                               _PORTEbits 000F91  
                         __end_of_rdBlkRegCompleteHandler 8EA8  
                                  ??_getStateOpenPosition 0032  
                                            ??_CloseOrder 0018  
                                   ??_controlSelectRemote 00E0  
                                    _SetSegmentValueLearn 6F56  
                           ??_I2C1_SetAddressNackCallback 0019  
                               I2C1_Read1ByteRegister@reg 0022  
                                        ___lbmod@dividend 0011  
                                    __end_of_Segments_Set 970C  
                                     _ControlCounterMoves 8862  
                            _controlLearning_stateMachine 02B4  
                         I2C1_SetDataCompleteCallback@ptr 0017  
                                          ?_OpenWalkOrder 0001  
                                              _stateMotor 0083  
                                      eusartparser@i_7280 00E9  
                                      eusartparser@i_7281 00EB  
                                      eusartparser@i_7282 00EC  
                                      eusartparser@i_7283 00ED  
                                      eusartparser@i_7284 00EE  
                                      eusartparser@i_7285 00EF  
                                           ?_sumEnergyADC 0010  
                          I2C1_CallbackReturnReset@funPtr 0019  
                       actionZone_Opening@securityClosing 00E4  
                                    ?_I2C1_MasterSendNack 0001  
                         keeloqDecryptPacket@classic_data 00E2  
                                     EUSART1_Write@txData 0010  
                                       ??_ClearFlag_rfCMD 0010  
                                    ?_getTimeDecelaration 0029  
                                   ??_EUSART1_is_rx_ready 0010  
                                       _saveEnergyADCHist 931C  
                                 __end_of_WWDT_Initialize 9716  
                                             ___lbmod@rem 0013  
                       actionZone_Opening@securityOpening 00E5  
                                      eusartparser@buffer 028C  
                                          ?_calculateMean 0010  
                                        ??_refreshCurrent 0021  
                                       ??_SetSegmentValue 001D  
                                            _EUSART1_Read 8C90  
                                      ?_saveEnergyADCHist 0010  
                                      eusartparser@save_f 018B  
                       __end_of_GetSecurityStateInClosing 7822  
                                      eusartparser@serial 00F0  
                                        ??_refreshSegment 0002  
                                          __end_of_DecCHK 8FFC  
                                       _controlLearnDigit 902E  
                                 __end_of_controlVelocity 532C  
                                    ?_ControlCounterMoves 0001  
                                     setValueToEdit@value 01F9  
                                      _actionZone_Closing 454C  
                                    __end_of_RemoveSerial 7FDA  
                                          __end_of_HopCHK 7D4A  
                                      __end_of_CloseOrder 936A  
                                 _zeroCrossingWaitTimeIdx 0084  
                                            _InitReceiver 951E  
                               _ControlDecelarationFactor 95A0  
                                      ?_controlLearnDigit 0001  
                                    _timer0ReloadVal16bit 0292  
                       __end_of_GetSecurityStateInOpening 78C8  
                                       setRGB_ON@RGBLigth 0015  
                                            ??_ReadSerial 0030  
                                     ??_saveEnergyADCHist 0012  
                            __end_of_INTERRUPT_Initialize 9812  
                                      _actionZone_Opening 4A4E  
                                   ??_I2C1_MasterClearIrq 0010  
                    __end_of_TMR2_DefaultInterruptHandler 983C  
                            _TMR2_DefaultInterruptHandler 983A  
                                             ?_readInputs 0001  
                                               _DispTable 03D2  
                                          __end_of___lmul 89C0  
                                   __end_of_LoadManufCode 9448  
                                     ?_actionZone_Closing 0001  
                                          __end_of___wmul 93B6  
                                          _I2C1_DO_RX_ACK 97A4  
                                  ??_refreshADCZeroOffset 0017  
                                    _generateErrorLearnig 85C0  
                                            _InitSoftStop 8C46  
                                     ??_controlLearnDigit 0013  
                                 i2_VerifyElectricalBrake 81C6  
                                          __end_of_memcpy 8DA6  
                                  ?_OSCILLATOR_Initialize 0001  
                                    __end_of_WaitPreFlash 8398  
                            __end_of_getCurrentComparator 5D8A  
                                      sm_send_event@event 0014  
                                    __end_of_NormalKeyGen 6D50  
                                           _saveNewSerial 8398  
                                             ?_readbutton 0001  
                                     ?_actionZone_Opening 0001  
                                   ?_SetSegmentValueLearn 0001  
                         __end_of_I2C1_CallbackReturnStop 9822  
                          ?_setPositionInvertionInClosing 0001  
                           __end_of_I2C1_MasterSendTxData 97D4  
                                       _read_eusartparser 2EFC  
                                   refreshADCZeroOffset@i 0017  
                                     start_initialization 7568  
                             i2GetMotorPower@defineatraso 0004  
                                             ??_I2C1_Open 0010  
                                          ??_sumEnergyADC 0012  
                                      ?_read_eusartparser 0018  
                                             __end_of_rxi 4A4E  
                                   ??_I2C1_MasterSendNack 0010  
                                 __end_of_i2c_writeNBytes 8328  
                          ?_setPositionInvertionInOpening 0001  
                                   ??_getTimeDecelaration 002D  
           EUSART1_SetRxInterruptHandler@interruptHandler 0010  
           EUSART1_SetTxInterruptHandler@interruptHandler 0010  
                               __end_of_saveEnergyADCHist 9344  
                                 __end_of_WWDT_TimerClear 94E6  
                                    ??_actionZone_Closing 0032  
                                   __end_of_EUSART1_Write 8E28  
                                 __end_of_WWDT_SoftEnable 980E  
                                      __end_of_ReadSerial 8478  
                                         ??_write_package 0018  
                                  rd1RegCompleteHandler@p 0019  
                            __end_of_verifyProgramingMode 8FCA  
                                               _ReqResync 95B8  
                               __end_of_controlLearnDigit 905E  
                                     ??_read_eusartparser 0019  
                                                ??_DecCHK 0012  
                                       _programmer_enable 0085  
                                    ??_actionZone_Opening 003B  
                                  _sm_execute_ControlGate 3BE8  
                 sm_execute_ControlLearning@typeOpenOrder 003A  
                                                ??_HopCHK 0026  
                               refreshADCZeroOffset@media 0018  
                                I2C1_SetBuffer@bufferSize 0012  
                                   ??_ControlCounterMoves 003A  
                                       _controlSaveRemote 761E  
                                        ?_I2C1_MasterOpen 0001  
                            keeloqDecryptPacket@hop_error 00E8  
                                        ?_I2C1_MasterStop 0001  
                                        ?_I2C1_Initialize 0001  
                                 saveNewSerial@tempSerial 00D8  
                                  controlSelectRemote@pos 00E2  
                                         ??_OpenFullOrder 0018  
                                   calculateMean@newValue 0014  
                                      ?_controlSaveRemote 0001  
                                 sm_get_current_state@psm 0010  
                                        ??_PMD_Initialize 0010  
                                                ??___lmul 0025  
                                  __end_of_I2C1_DO_RX_ACK 97AC  
                                                ??___wmul 0014  
                                      _zeroCrossingLength 0194  
                                          _VerifyFollowMe 9402  
                                  wr1RegCompleteHandler@p 0019  
                                   _EUSART1_RxDataHandler 948C  
                                 ??_I2C1_DO_SEND_ADR_READ 0010  
                          ?_EUSART1_SetRxInterruptHandler 0010  
                                             ?_sm_restart 0010  
                                             __pdataBANK0 00FB  
                                             __pdataBANK1 01FA  
                                             __pdataBANK2 02F1  
                                             __pdataBANK3 03D2  
                                   ?_generateErrorLearnig 0001  
                                                ??_memcpy 0016  
                                       ?_setFlashLigth_ON 0010  
                           ?_TMR2_DefaultInterruptHandler 0001  
                                       _controlMotorForce 4EEC  
                                     ??_controlSaveRemote 0020  
                               __end_of_read_eusartparser 3404  
                                          ?_saveNewSerial 00D8  
                                        I2C1_Open@address 0010  
                                          _eusart1RxCount 0093  
                                      ??_setFlashLigth_ON 0012  
                                _ADCC_GetSingleConversion 9646  
                                      ?_controlMotorForce 0001  
                                   __end_of_InitSoftStart 8806  
                                               _StopOrder 94AE  
                                    _sm_get_current_state 9698  
                                             __pbssCOMRAM 003B  
                                         ??_OpenWalkOrder 0018  
                                    _I2C1_DO_SEND_RESTART 97B4  
                                getTimeDecelaration@state 0031  
                       _EUSART1_RxDefaultInterruptHandler 02ED  
                                           __pcstackBANK0 00D8  
                                        ??_setValueToEdit 00DC  
                                                ?_RGB_Set 0001  
                                        _brakeElectric_st 0078  
                             ??_I2C1_DO_SEND_RESTART_READ 0010  
                                     ??_controlMotorForce 0005  
                                      _ResetDefaultMemory 60BA  
                                    ReadSerial@tempSerial 002E  
                                         ??_calculateMean 0018  
                         ??_EUSART1_SetTxInterruptHandler 0012  
                                    __end_of_I2C1_DO_IDLE 9784  
                        ??_EUSART1_SetFramingErrorHandler 0012  
                         ?_EUSART1_SetFramingErrorHandler 0010  
                                                ?_Decrypt 001B  
                                    __end_of_I2C1_DO_RCEN 977A  
                                           _GetMotorPower 73DC  
                                        ?_WWDT_Initialize 0001  
                                              ?_ReqResync 0010  
                               __end_of_controlSaveRemote 76D2  
                                            _init_package 90E4  
                           I2C1_SetAddressNackCallback@cb 0015  
                                      sm_execute_main@psm 00ED  
                                                ?_ReadADC 0001  
                                            RGB_Set@value 0010  
                                   _TMR0_InterruptHandler 02E5  
                                     ?_ResetDefaultMemory 0001  
                                               __pnvBANK1 01FF  
                                               __pnvBANK2 02DF  
                                   _rd2RegCompleteHandler 9218  
                                        _InitWalkAutoTime 965C  
                                        ?_controlVelocity 0001  
                                __end_of_InitFullAutoTime 956C  
                             __end_of_SetSegmentValueMain 9552  
                          VerifyElectricalBrake@tempState 0010  
                        i2VerifyElectricalBrake@tempState 0001  
                                        ___lwdiv@dividend 0010  
                                  _PIN_MANAGER_Initialize 7962  
                                  __end_of_VerifyFollowMe 9426  
                                   _wr2RegCompleteHandler 91EC  
                              ??_I2C1_MasterEnableRestart 0010  
                                               __pintcode 0008  
                                            _read_package 8ABC  
                                          _I2C1_MasterFsm 8A16  
                              __end_of_checkNVM_VarSystem 5A54  
                        __end_of_TMR1_SetInterruptHandler 972A  
                         ADCC_GetSingleConversion@channel 0001  
                                         ?_I2C1_DO_RX_ACK 0001  
                                                ?___awdiv 0014  
                                               __ptext100 7962  
                                               __ptext101 9630  
                                                ?___lbdiv 0010  
                                               __ptext110 8B0C  
                                               __ptext102 980E  
                                               __ptext111 96AA  
                                               __ptext103 9684  
                                               __ptext200 983C  
                                               __ptext120 8CD8  
                                               __ptext112 4CA2  
                                               __ptext104 7FDA  
                                               __ptext201 93B6  
                                               __ptext121 7052  
                                               __ptext113 814E  
                                               __ptext105 9734  
                                               __ptext210 0000  
                                               __ptext202 47D8  
                                               __ptext130 8F5E  
                                               __ptext122 7BA8  
                                               __ptext114 3F32  
                                               __ptext106 973E  
                                               __ptext203 983E  
                                               __ptext131 82B4  
                                               __ptext123 931C  
                                               __ptext115 7A8C  
                                               __ptext107 9748  
                                               __ptext204 8FFC  
                                               __ptext140 8A16  
                                               __ptext132 8D62  
                                               __ptext124 6E58  
                                               __ptext116 96CA  
                                               __ptext108 9752  
                                               __ptext205 78C8  
                                               __ptext141 8BF8  
                                               __ptext133 95E8  
                                               __ptext125 8A6A  
                                               __ptext117 8EE8  
                                               __ptext109 975C  
                                               __ptext206 97F8  
                                               __ptext150 9770  
                                               __ptext142 9766  
                                               __ptext134 7E54  
                                               __ptext126 5BF0  
                                               __ptext118 6A0E  
                                               __ptext207 9840  
                                               __ptext151 80D4  
                                               __ptext143 9794  
                                               __ptext135 9600  
                                               __ptext127 9390  
                                               __ptext119 63C8  
                                               __ptext208 97FE  
                                               __ptext160 97E6  
                                               __ptext152 7C34  
                                               __ptext144 979C  
                                               __ptext136 9784  
                                               __ptext128 73DC  
                                               __ptext209 948C  
                                               __ptext161 9812  
                                               __ptext153 96D8  
                                               __ptext145 97A4  
                                               __ptext137 913C  
                                               __ptext129 8862  
                                               __ptext170 8E68  
                                               __ptext162 97EC  
                                               __ptext154 96E6  
                                               __ptext146 97AC  
                                               __ptext138 96BA  
                                               __ptext171 91EC  
                                               __ptext163 9816  
                                               __ptext155 977A  
                                               __ptext147 97B4  
                                               __ptext139 978C  
                                               __ptext180 9826  
                                               __ptext172 9218  
                                               __ptext164 981A  
                                               __ptext156 86F0  
                                               __ptext148 97BC  
                                               __ptext181 982A  
                                               __ptext173 9244  
                                               __ptext165 981E  
                                               __ptext157 97E0  
                                               __ptext149 97C4  
                                               __ptext190 5D8A  
                                               __ptext182 946A  
                                               __ptext174 9270  
                                               __ptext166 8E28  
                                               __ptext158 96F4  
                                               __ptext191 92F2  
                                               __ptext183 982E  
                                               __ptext175 929C  
                                               __ptext167 9168  
                                               __ptext159 97CC  
                                               __ptext192 983A  
                                               __ptext184 9832  
                                               __ptext176 9618  
                                               __ptext168 9194  
                                               __ptext193 89C0  
                                               __ptext185 97F2  
                                               __ptext177 84E6  
                                               __ptext169 91C0  
                                               __ptext194 9646  
                                               __ptext178 9586  
                                               __ptext195 8EA8  
                                               __ptext187 653C  
                                               __ptext179 9822  
                                               __ptext196 4EEC  
                                               __ptext188 7D4A  
                                               __ptext197 81C6  
                                               __ptext189 9700  
                                               __ptext198 74A2  
                                               __ptext199 9502  
                                                ?___lbmod 0010  
                                 write_eusartparser@debug 001F  
                            ??_SetSegmentValueIntermitent 0013  
                                                ?___lldiv 0010  
                               ??i2_VerifyElectricalBrake 0001  
                               __end_of_controlMotorForce 510E  
                                                ?___lwdiv 0010  
                                   confirmpackage@confirm 0012  
                                    i2c_readDataBlock@len 0026  
                                    i2c_readDataBlock@reg 0022  
                                   confirmpackage@package 0011  
                                 _I2C1_MasterWaitForEvent 978C  
                                        _I2C1_MasterClose 9832  
                         DecryptPacket_12BIT@classic_data 00E2  
                                ??_I2C1_Read1ByteRegister 0023  
                                          _I2C1_SetBuffer 9586  
                            ??_INTERRUPT_InterruptManager 000A  
                                  ??_SetSegmentValueLearn 0010  
                                        _I2C1_MasterStart 982A  
                                    NormalKeyGen@SKEYtemp 002C  
                                        _I2C1_MasterWrite 9784  
                                      _clearLearningValue 8058  
                                      _write_eusartparser 3404  
                                    ??_ResetDefaultMemory 003A  
                                                _BAUD1CON 000F9F  
                                             __smallconst 0F00  
                                   ?_sm_get_current_state 0010  
                                            ?_ShowVersion 0001  
                                                _F2Chance 0196  
                                              ?_StopOrder 0001  
              __end_of_EUSART1_DefaultOverrunErrorHandler 97FE  
                    ??_EUSART1_DefaultOverrunErrorHandler 0001  
                     ?_EUSART1_DefaultOverrunErrorHandler 0001  
                      _EUSART1_DefaultOverrunErrorHandler 97F8  
                                   ?_I2C1_DO_SEND_RESTART 0001  
                                       _i2c_readDataBlock 823E  
                                            _eusartparser 1F94  
                                    _EUSART1_ErrorHandler 02E7  
                                       ?_I2C1_DO_TX_EMPTY 0001  
                                                ?_sumHIST 0010  
                                                ?_sm_init 0012  
                                 _EUSART1_SetErrorHandler 975C  
                                      ?_i2c_readDataBlock 0022  
                                     ReqResync@CurrentHop 0010  
                        __end_of_I2C1_CallbackReturnReset 981E  
                                     ?_clearLearningValue 0001  
                                        ___lwdiv@quotient 0014  
                                     ?_write_eusartparser 0010  
                                        ?_i2c_writeNBytes 0022  
                                      ??_I2C1_DO_TX_EMPTY 001B  
                                                _T2CLKCON 000FBF  
                                   __end_of_readRFButtons 60BA  
                                 ??_rd1RegCompleteHandler 001B  
                                 ?_I2C1_DO_SEND_ADR_WRITE 0001  
                                               _setRGB_ON 7A8C  
                               I2C1_MasterSendTxData@data 0010  
                                        ?_WWDT_TimerClear 0001  
                                    _INTERRUPT_Initialize 980E  
                                          ?_GetMotorPower 0001  
                                 ??_wr1RegCompleteHandler 001B  
                                        ?_WWDT_SoftEnable 0001  
                                              sumHIST@max 0018  
                                              sumHIST@min 001A  
                                       ??_TMR0_Initialize 0012  
                                     ??_i2c_readDataBlock 0028  
                                        _I2C1_SetCallback 84E6  
                                              sm_init@psm 0012  
                                          ___wmul@product 0014  
                                                _LATAbits 000F83  
                 EUSART1_SetErrorHandler@interruptHandler 0010  
                                                _LATCbits 000F85  
                                read_eusartparser@package 0018  
                                                _LATDbits 000F86  
                                                _LATEbits 000F87  
                                              _I2C1_DO_RX 80D4  
                                              _I2C1_DO_TX 7C34  
                             ??_GetSecurityStateInClosing 0014  
                                                _PIE0bits 000EC2  
                                    _getCurrentComparator 5BF0  
                                                _PIE3bits 000EC5  
                                                _PIE4bits 000EC6  
                                              DecCHK@data 0010  
                                                Decrypt@i 001E  
                                                Decrypt@j 001F  
                                                Decrypt@p 0020  
                                         _firstselectflag 01FE  
                                     _DecryptPacket_12BIT 7B1C  
                                              _I2C1_Close 946A  
                         setValueToEdit@ParameterSelected 003A  
                                            ?_I2C1_Poller 0001  
                                  __end_of_I2C1_MasterFsm 8A6A  
                            __end_of_I2C1_MasterGetRxData 9816  
                              ??_TMR0_SetInterruptHandler 0012  
                                                _PIR0bits 000ECA  
                                            _Segments_Set 9700  
                                                _PIR3bits 000ECD  
                                         ?_VerifyFollowMe 0001  
                                                _PIR4bits 000ECE  
                                readRFButtons@rollingCode 0185  
                             ??_GetSecurityStateInOpening 0014  
                                  ?_EUSART1_RxDataHandler 0001  
                                    ??_clearLearningValue 0010  
                                      _I2C1_MasterSendAck 97E6  
                                    ??_write_eusartparser 0017  
                                    __end_of_sumEnergyADC 7C34  
                               _I2C1_DO_SEND_RESTART_READ 97C4  
                                            ??_getHopCode 0018  
                                               _pointSync 007A  
                                   __end_of_load_New_Menu 454C  
                                                _SSP1CON1 000F96  
                                                _SSP1CON2 000F97  
                                  ??_generateErrorLearnig 0017  
                                                _TMR0_ISR 93B6  
                                                _TMR1_ISR 8EA8  
                                                _TMR2_ISR 653C  
                                           _getKeyPressed 95D0  
                                 ??_VerifyElectricalBrake 0010  
                                  __end_of_I2C1_SetBuffer 95A0  
                                               _temppower 018F  
                                         _powerControl_st 017B  
                                                _SSP1STAT 000F95  
                    __end_of_I2C1_SetDataCompleteCallback 9630  
                            _I2C1_SetDataCompleteCallback 9618  
                                      _I2C1_MasterStartRx 9816  
                                         ??_saveNewSerial 00DD  
                             ?_I2C1_DO_SEND_RESTART_WRITE 0001  
                                       ??_TMR1_Initialize 0012  
                                         _ClearFlag_rfCMD 97DA  
                                     ?_I2C1_MasterSendAck 0001  
                                              _ADCON0bits 000F60  
                               __end_of_i2c_readDataBlock 82B4  
                                       ___wmul@multiplier 0010  
                                ?_I2C1_DO_RX_NACK_RESTART 0001  
                                    _verifyProgramingMode 8F96  
                                       ??_sm_execute_main 00EF  
                                    _numberOfErrorCurrent 008E  
                                    ?_DecryptPacket_12BIT 00E0  
                                               _ts_system 019B  
                                                _BitCount 008C  
                                     ?_I2C1_MasterStartRx 0001  
                            __end_of_I2C1_DO_ADDRESS_NACK 8C46  
                          controlSelectRemote@validSerial 00E1  
                          ??_TMR2_DefaultInterruptHandler 0001  
                                       _actionZone_Closed 76D2  
                               ?_TMR2_SetInterruptHandler 0010  
                                    _idxAdcZeroAquisition 008F  
                                         _SetSegmentValue 956C  
                                            _RemoveSerial 7F5A  
                          getStateOpenPosition@stateMotor 00D9  
                          __end_of_I2C1_DO_SEND_ADR_WRITE 96E6  
                                       _actionZone_Opened 532C  
                                           _I2C1_DO_RESET 9766  
                                      ?_actionZone_Closed 0001  
                                                _BufferRF 02CA  
                                     read_package@package 0018  
                                       ___lmul@multiplier 001D  
                                               copy_data0 757C  
                                               copy_data1 75B4  
                                   ?_INTERRUPT_Initialize 0001  
                                              ?_setRGB_ON 0011  
                                   I2C1_Close@returnValue 0010  
                                ?_rdBlkRegCompleteHandler 0019  
                                      ?_actionZone_Opened 0001  
                                        _Abertura_pedonal 018E  
                                     I2C1_SetCallback@idx 0014  
                                     I2C1_SetCallback@ptr 0012  
                                      __end_of_getHopCode 67B8  
                                             ??_ReqResync 0012  
                                    ??_I2C1_MasterSendAck 0010  
                                       ??_TMR2_Initialize 0012  
                                   EUSART1_Read@readValue 0010  
                                  ?_rd2RegCompleteHandler 0019  
                                     ??_actionZone_Closed 0020  
                                            _WaitPreFlash 8328  
                                   ?_getCurrentComparator 0016  
                            __end_of_I2C1_MasterOperation 9168  
                                            _NormalKeyGen 6C42  
                     sm_execute_ControlGate@typeOpenOrder 00EB  
                                  ?_wr2RegCompleteHandler 0019  
                                    ??_I2C1_MasterStartRx 0010  
                                     ??_actionZone_Opened 0020  
                            saveEnergyADCHist@valueToSave 0010  
                   __end_of_EUSART1_SetTxInterruptHandler 973E  
                           _EUSART1_SetTxInterruptHandler 9734  
                                           _sm_send_event 874E  
                                     _keeloqDecryptPacket 551A  
                                                __Hrparam 0000  
                                         ?_I2C1_MasterFsm 0001  
                                               memcpy@tmp 0016  
                                                __Lrparam 0000  
                                    sumEnergyADC@auxValue 0016  
                                     i2c_writeNBytes@data 0024  
                         actionZone_Opening@typeOpenOrder 00E6  
                                          ?_getKeyPressed 0001  
                               ??_I2C1_MasterWaitForEvent 0010  
                                       _main_stateMachine 01EE  
                                   _I2C1_MasterDisableIrq 982E  
                                            ??_readInputs 0010  
                                 ??_OSCILLATOR_Initialize 0010  
                             __end_of_controlSelectRemote 3BE8  
                                         ?_I2C1_SetBuffer 0010  
                                          _fullmotorPower 0082  
                                  ResetDefaultMemory@type 003A  
                                        _controlTimeslots 5D8A  
                                _TMR1_SetInterruptHandler 9720  
                                  ??_sm_get_current_state 0012  
                                   ?_verifyProgramingMode 0010  
                               _GetSecurityStateInClosing 777C  
                       I2C1_Read1ByteRegister@returnValue 0024  
                                  ??_I2C1_DO_SEND_RESTART 0010  
                                            ??_readbutton 0010  
                               __end_of_actionZone_Closed 777C  
                                   ??_DecryptPacket_12BIT 003B  
                                   _TMR1_InterruptHandler 02E1  
                               ??_EUSART1_SetErrorHandler 0012  
                                       ??i2_GetMotorPower 0001  
                     __end_of_EUSART1_DefaultErrorHandler 9804  
                             _EUSART1_DefaultErrorHandler 97FE  
                                             ??_StopOrder 0018  
                             __end_of_EUSART1_is_rx_ready 96BA  
                                    ?_keeloqDecryptPacket 00E0  
                               __end_of_actionZone_Opened 551A  
                               getStateOpenPosition@state 00D8  
                               _GetSecurityStateInOpening 7822  
                                         ___lwdiv@divisor 0012  
                                          ?_I2C1_DO_RESET 0001  
                                         ___lwdiv@counter 0016  
                                                __ptext10 92C8  
                                                __ptext11 7DD0  
                                                __ptext20 8914  
                                                __ptext12 9538  
                                                __ptext21 8D1E  
                                                __ptext13 97DA  
                                                __ptext30 532C  
                                                __ptext22 8058  
                                                __ptext14 902E  
                                                __ptext31 9402  
                                                __ptext23 868E  
                                                __ptext15 6F56  
                                                __ptext40 8328  
                                                __ptext32 9344  
                                                __ptext24 4A4E  
                                                __ptext16 7ED8  
                                                __ptext41 936A  
                                                __ptext33 454C  
                                                __ptext25 7234  
                                                __ptext17 3BE8  
                                                __ptext50 56EC  
                                                __ptext42 9552  
                                                __ptext34 68E6  
                                                __ptext26 510E  
                                                __ptext18 1886  
                                                __ptext51 8F24  
                                                __ptext43 8478  
                                                __ptext35 714C  
                                                __ptext27 6B32  
                                                __ptext19 85C0  
                                                __ptext60 6C42  
                                                __ptext52 9670  
                                                __ptext44 874E  
                                                __ptext36 896A  
                                                __ptext28 8C46  
                                                __ptext61 9426  
                                                __ptext53 8554  
                                                __ptext45 9698  
                                                __ptext37 94AE  
                                                __ptext29 95A0  
                                                __ptext70 58B4  
                                                __ptext62 7310  
                                                __ptext54 8ABC  
                                                __ptext46 87AA  
                                                __ptext38 777C  
                                                __ptext71 60BA  
                                                __ptext63 7CC0  
                                                __ptext55 8C90  
                                                __ptext47 965C  
                                                __ptext39 76D2  
                                                __ptext80 8DE8  
                                                __ptext72 8806  
                                                __ptext64 668A  
                                                __ptext56 5F24  
                                                __ptext48 7822  
                                                __ptext81 8BAA  
                                                __ptext73 95D0  
                                                __ptext65 95B8  
                                                __ptext57 551A  
                                                __ptext49 908C  
                                                __ptext90 956C  
                                                __ptext82 90E4  
                                                __ptext74 1F94  
                                                __ptext66 8FCA  
                                                __ptext58 8F96  
                                                __ptext91 905E  
                                                __ptext83 79FA  
                                                __ptext75 3404  
                                                __ptext67 7B1C  
                                                __ptext59 88BC  
                                                __ptext92 970C  
                                                __ptext84 7F5A  
                                                __ptext76 5A54  
                                                __ptext68 6D50  
                                                __ptext93 9110  
                                                __ptext85 8408  
                                                __ptext77 8398  
                                                __ptext69 67B8  
                                                __ptext94 9716  
                                                __ptext86 823E  
                                                __ptext78 2EFC  
                                                __ptext95 8DA6  
                                                __ptext87 94CA  
                                                __ptext79 90B8  
                                                __ptext96 9720  
                                                __ptext88 980A  
                                                __ptext97 9448  
                                                __ptext89 8628  
                                                __ptext98 972A  
                                                __ptext99 94E6  
                                            _SSP1CON1bits 000F96  
                                            _SSP1CON2bits 000F97  
                                     NormalKeyGen@HOPtemp 0028  
                                         ??_GetMotorPower 0010  
                                _controlGate_stateMachine 01E3  
                                           ?_GetOpenOrder 0001  
                                 ?_sm_execute_ControlGate 00E7  
                                 DecryptPacket_12BIT@data 00E0  
               ??_wr1RegCompleteHandler@pic18f46k40$F7750 001B  
                                                _learn_st 0060  
               ??_wr2RegCompleteHandler@pic18f46k40$F7770 001B  
                ?_rd2RegCompleteHandler@pic18f46k40$F7762 0019  
               ??_rd2RegCompleteHandler@pic18f46k40$F7764 001B  
                ?_rd1RegCompleteHandler@pic18f46k40$F7756 0019  
                ?_wr1RegCompleteHandler@pic18f46k40$F7748 0019  
               ??_rd1RegCompleteHandler@pic18f46k40$F7758 001B  
              ?_rdBlkRegCompleteHandler@pic18f46k40$F7774 0019  
             ??_rdBlkRegCompleteHandler@pic18f46k40$F7776 001B  
                ?_wr2RegCompleteHandler@pic18f46k40$F7768 0019  
                                      __end_of_readInputs 6E58  
                                _I2C1_CallbackReturnReset 981A  
                                             ?_I2C1_DO_RX 0001  
                                             ?_I2C1_DO_TX 0001  
                                          ?_sm_send_event 0012  
                    __end_of_TMR0_DefaultInterruptHandler 9840  
                            _TMR0_DefaultInterruptHandler 983E  
                                i2c_readDataBlock@address 0029  
                             __end_of_I2C1_MasterClearIrq 97F8  
                            __end_of_I2C1_DO_RX_NACK_STOP 97A4  
                                             ?_I2C1_Close 0001  
                                          _ControlCurrent 63C8  
                                                _security 016A  
                                    RemoveSerial@position 003A  
                                      __end_of_readbutton 85C0  
                                              _RC1STAbits 000F9D  
          EUSART1_SetOverrunErrorHandler@interruptHandler 0010  
                                 __end_of_ClearFlag_rfCMD 97E0  
                                    sm_init@initial_state 0014  
                      __end_of_SetSegmentValueIntermitent 90B8  
                              _SetSegmentValueIntermitent 908C  
                                                isa$xinst 000000  
                              ??_ADCC_GetSingleConversion 0001  
                                                int$flags 0050  
                         __end_of_I2C1_DO_RX_NACK_RESTART 979C  
                           SetSegmentValueLearn@direction 0012  
                                            ??_sm_restart 0012  
                                I2C1_MasterOperation@read 0020  
                      __end_of_INTERRUPT_InterruptManager 009C  
                              _INTERRUPT_InterruptManager 0008  
                                       _loadNVM_VarSystem 67B8  
                                SaveNVM_VarSystem@tempAdd 00D9  
                                       ??_TMR1_WriteTimer 0003  
                                 __end_of_SetSegmentValue 9586  
                           __end_of_I2C1_DO_SEND_ADR_READ 96F4  
                             _EUSART1_FramingErrorHandler 02EB  
                                            _I2C1_DO_IDLE 977A  
                                     _EUSART1_Receive_ISR 78C8  
                                            _I2C1_DO_RCEN 9770  
                                     decrementTimeslot@ts 0001  
                                      ?_loadNVM_VarSystem 0001  
                           controlSelectRemote@tempSerial 00E4  
                                           _getTypeRemote 97D4  
                             __end_of_I2C1_MasterSendNack 97F2  
                                        sm_send_event@psm 0012  
                             __end_of_getTimeDecelaration 7234  
                                   ??_keeloqDecryptPacket 00E4  
                                            _waitZeroPeak 0192  
                                __end_of_InitWalkAutoTime 9670  
                                              _INTCONbits 000FF2  
                                       _aux_in_auto_close 018C  
                                                memcpy@d1 0010  
                                                memcpy@s1 0012  
                          I2C1_SetAddressNackCallback@ptr 0017  
                                      i2c_writeNBytes@dat 0028  
                                      i2c_writeNBytes@len 0025  
                                      i2c_writeNBytes@reg 0022  
                                    _I2C1_MasterGetRxData 9812  
                                   _I2C1_MasterSendTxData 97CC  
                                     ??_loadNVM_VarSystem 003B  
                                           sm_restart@psm 0010  
                                  ??_INTERRUPT_Initialize 0010  
                                            _RFFull_12BIT 008A  
                                    _control_limit_switch 0081  
                          __end_of_sm_execute_ControlGate 3F32  
                                              Decrypt@aux 0021  
                                              Decrypt@key 001D  
                                          ??_GetOpenOrder 0020  
                                             ??_setRGB_ON 0013  
                             __end_of_ControlCounterMoves 88BC  
                                                intlevel2 0000  
                        actionZone_Opened@securityClosing 0020  
                        actionZone_Closed@securityOpening 0020  
                                __end_of_I2C1_MasterClose 9836  
                                    ?_EUSART1_Receive_ISR 0001  
                                  _I2C1_Read1ByteRegister 8806  
                                 readRFButtons@typeRemote 0198  
                                  ??_getCurrentComparator 001A  
                                  rd2RegCompleteHandler@p 0019  
                                      __end_of_sm_restart 8D62  
                                        ___lldiv@dividend 0010  
                                 ?_PIN_MANAGER_Initialize 0001  
                                  __end_of_ControlCurrent 653C  
                           I2C1_Read1ByteRegister@address 0023  
                                __end_of_I2C1_MasterStart 982E  
                                __end_of_I2C1_MasterWrite 978C  
                                   __end_of_write_package 90E4  
                                             _tempCounter 01FA  
                  __end_of_EUSART1_SetOverrunErrorHandler 9752  
                          _EUSART1_SetOverrunErrorHandler 9748  
                                        ??_I2C1_DO_RX_ACK 0010  
                                             _WDTCON0bits 000ED2  
                                             getHopCode@i 0023  
                                 _I2C1_CallbackReturnStop 981E  
                            __end_of_EUSART1_Transmit_ISR 902E  
                                          _confirmpackage 8BAA  
                                      NormalKeyGen@Buffer 0030  
                                                sumHIST@i 0020  
                                         ??_getKeyPressed 0010  
                                           _ControlLights 3F32  
                                       ?_InitFullAutoTime 0001  
                                           _ControlInputs 6A0E  
                           ?_TMR0_DefaultInterruptHandler 0001  
                                    _I2C1_DO_ADDRESS_NACK 8BF8  
                                              HopCHK@data 0024  
                                  ?_I2C1_MasterDisableIrq 0001  
                                           ?_getSerialCmd 001B  
                                          _ADC_zero_array 0396  
                               __end_of_loadNVM_VarSystem 68E6  
                                      ??_InitFullAutoTime 0010  
                   __end_of_keeloq_classic_decrypt_packet 8914  
                           _keeloq_classic_decrypt_packet 88BC  
                                   __end_of_OpenFullOrder 9390  
                                  wr2RegCompleteHandler@p 0019  
          EUSART1_SetFramingErrorHandler@interruptHandler 0010  
                          ?_EUSART1_SetTxInterruptHandler 0010  
                                  ??_verifyProgramingMode 0012  
                                      _eusart1RxLastError 019A  
                                          ?_getTypeRemote 0001  
                                        _cmdMemoryIsEmpty 79FA  
                                      NormalKeyGen@serial 0026  
                                __end_of_I2C1_SetCallback 8554  
                                             _var_sys_NVM 0098  
                                              _SSP1DATPPS 000EB8  
                                              _SSP1CLKPPS 000EB7  
                                         ??_I2C1_DO_RESET 0010  
                                    WWDT_TimerClear@state 0010  
                                        ___lldiv@quotient 0018  
                                    _I2C1_MasterOperation 913C  
                                         _TMR0_Initialize 9448  
                            ??_validateRemoteSerialNumber 00D8  
                                      _checkNVM_VarSystem 58B4  
                                   ?_I2C1_MasterGetRxData 0001  
                           controlSelectRemote@typeRemote 00E3  
                                   __end_of_OpenWalkOrder 84E6  
                                            _sumEnergyADC 7BA8  
                                          _listSyncValues 0300  
                                           setRGB_ON@Freq 0011  
                                     ?_checkNVM_VarSystem 0001  
                                   ??_EUSART1_Receive_ISR 0001  
                          __end_of_PIN_MANAGER_Initialize 79FA  
                                       ??_ADCC_Initialize 0010  
                           __end_of_rd1RegCompleteHandler 9270  
                                         ??_sm_send_event 0016  
                                        ??_VerifyFollowMe 0010  
                                   __end_of_calculateMean 86F0  
                                        sm_init@hist_mode 0016  
                                  __end_of_confirmpackage 8BF8  
                                         ?_ControlCurrent 0001  
                           __end_of_wr1RegCompleteHandler 929C  
                                   _TMR2_InterruptHandler 02DF  
                                 ??_EUSART1_RxDataHandler 0001  
                                          ?_ControlLights 0001  
                                         _TMR1_Initialize 8DA6  
                                          ?_ControlInputs 0001  
                                   ?_I2C1_DO_ADDRESS_NACK 0001  
                                          ??_getSerialCmd 001C  
                                           ?_ControlMotor 0001  
                                         _sm_execute_main 29F4  
