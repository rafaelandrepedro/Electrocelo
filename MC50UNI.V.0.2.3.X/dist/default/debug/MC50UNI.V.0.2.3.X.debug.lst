

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Mon Jul 18 11:21:52 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og9 
     1                           	processor	18F46K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     9                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    10                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    12                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    13                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    19                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    21                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    23                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    24                           	psect	text0,global,reloc=2,class=CODE,delta=1
    25                           	psect	text1,global,reloc=2,class=CODE,delta=1
    26                           	psect	text2,global,reloc=2,class=CODE,delta=1
    27                           	psect	text3,global,reloc=2,class=CODE,delta=1
    28                           	psect	text4,global,reloc=2,class=CODE,delta=1
    29                           	psect	text5,global,reloc=2,class=CODE,delta=1
    30                           	psect	text6,global,reloc=2,class=CODE,delta=1
    31                           	psect	text7,global,reloc=2,class=CODE,delta=1
    32                           	psect	text8,global,reloc=2,class=CODE,delta=1
    33                           	psect	text9,global,reloc=2,class=CODE,delta=1
    34                           	psect	text10,global,reloc=2,class=CODE,delta=1
    35                           	psect	text11,global,reloc=2,class=CODE,delta=1
    36                           	psect	text12,global,reloc=2,class=CODE,delta=1
    37                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text15,global,reloc=2,class=CODE,delta=1
    40                           	psect	text16,global,reloc=2,class=CODE,delta=1
    41                           	psect	text17,global,reloc=2,class=CODE,delta=1
    42                           	psect	text18,global,reloc=2,class=CODE,delta=1
    43                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text20,global,reloc=2,class=CODE,delta=1
    45                           	psect	text21,global,reloc=2,class=CODE,delta=1
    46                           	psect	text22,global,reloc=2,class=CODE,delta=1
    47                           	psect	text23,global,reloc=2,class=CODE,delta=1
    48                           	psect	text24,global,reloc=2,class=CODE,delta=1
    49                           	psect	text25,global,reloc=2,class=CODE,delta=1
    50                           	psect	text26,global,reloc=2,class=CODE,delta=1
    51                           	psect	text27,global,reloc=2,class=CODE,delta=1
    52                           	psect	text28,global,reloc=2,class=CODE,delta=1
    53                           	psect	text29,global,reloc=2,class=CODE,delta=1
    54                           	psect	text30,global,reloc=2,class=CODE,delta=1
    55                           	psect	text31,global,reloc=2,class=CODE,delta=1
    56                           	psect	text32,global,reloc=2,class=CODE,delta=1
    57                           	psect	text33,global,reloc=2,class=CODE,delta=1
    58                           	psect	text34,global,reloc=2,class=CODE,delta=1
    59                           	psect	text35,global,reloc=2,class=CODE,delta=1
    60                           	psect	text36,global,reloc=2,class=CODE,delta=1
    61                           	psect	text37,global,reloc=2,class=CODE,delta=1
    62                           	psect	text38,global,reloc=2,class=CODE,delta=1
    63                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text40,global,reloc=2,class=CODE,delta=1
    65                           	psect	text41,global,reloc=2,class=CODE,delta=1
    66                           	psect	text42,global,reloc=2,class=CODE,delta=1
    67                           	psect	text43,global,reloc=2,class=CODE,delta=1
    68                           	psect	text44,global,reloc=2,class=CODE,delta=1
    69                           	psect	text45,global,reloc=2,class=CODE,delta=1
    70                           	psect	text46,global,reloc=2,class=CODE,delta=1
    71                           	psect	text47,global,reloc=2,class=CODE,delta=1
    72                           	psect	text48,global,reloc=2,class=CODE,delta=1
    73                           	psect	text49,global,reloc=2,class=CODE,delta=1
    74                           	psect	text50,global,reloc=2,class=CODE,delta=1
    75                           	psect	text51,global,reloc=2,class=CODE,delta=1
    76                           	psect	text52,global,reloc=2,class=CODE,delta=1
    77                           	psect	text53,global,reloc=2,class=CODE,delta=1
    78                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    79                           	psect	text55,global,reloc=2,class=CODE,delta=1
    80                           	psect	text56,global,reloc=2,class=CODE,delta=1
    81                           	psect	text57,global,reloc=2,class=CODE,delta=1
    82                           	psect	text58,global,reloc=2,class=CODE,delta=1
    83                           	psect	text59,global,reloc=2,class=CODE,delta=1
    84                           	psect	text60,global,reloc=2,class=CODE,delta=1
    85                           	psect	text61,global,reloc=2,class=CODE,delta=1
    86                           	psect	text62,global,reloc=2,class=CODE,delta=1
    87                           	psect	text63,global,reloc=2,class=CODE,delta=1
    88                           	psect	text64,global,reloc=2,class=CODE,delta=1
    89                           	psect	text65,global,reloc=2,class=CODE,delta=1
    90                           	psect	text66,global,reloc=2,class=CODE,delta=1
    91                           	psect	text67,global,reloc=2,class=CODE,delta=1
    92                           	psect	text68,global,reloc=2,class=CODE,delta=1
    93                           	psect	text69,global,reloc=2,class=CODE,delta=1
    94                           	psect	text70,global,reloc=2,class=CODE,delta=1
    95                           	psect	text71,global,reloc=2,class=CODE,delta=1
    96                           	psect	text72,global,reloc=2,class=CODE,delta=1
    97                           	psect	text73,global,reloc=2,class=CODE,delta=1
    98                           	psect	text74,global,reloc=2,class=CODE,delta=1
    99                           	psect	text75,global,reloc=2,class=CODE,delta=1
   100                           	psect	text76,global,reloc=2,class=CODE,delta=1
   101                           	psect	text77,global,reloc=2,class=CODE,delta=1
   102                           	psect	text78,global,reloc=2,class=CODE,delta=1
   103                           	psect	text79,global,reloc=2,class=CODE,delta=1
   104                           	psect	text80,global,reloc=2,class=CODE,delta=1
   105                           	psect	text81,global,reloc=2,class=CODE,delta=1
   106                           	psect	text82,global,reloc=2,class=CODE,delta=1
   107                           	psect	text83,global,reloc=2,class=CODE,delta=1
   108                           	psect	text84,global,reloc=2,class=CODE,delta=1
   109                           	psect	text85,global,reloc=2,class=CODE,delta=1
   110                           	psect	text86,global,reloc=2,class=CODE,delta=1
   111                           	psect	text87,global,reloc=2,class=CODE,delta=1
   112                           	psect	text88,global,reloc=2,class=CODE,delta=1
   113                           	psect	text89,global,reloc=2,class=CODE,delta=1
   114                           	psect	text90,global,reloc=2,class=CODE,delta=1
   115                           	psect	text91,global,reloc=2,class=CODE,delta=1
   116                           	psect	text92,global,reloc=2,class=CODE,delta=1
   117                           	psect	text93,global,reloc=2,class=CODE,delta=1
   118                           	psect	text94,global,reloc=2,class=CODE,delta=1
   119                           	psect	text95,global,reloc=2,class=CODE,delta=1
   120                           	psect	text96,global,reloc=2,class=CODE,delta=1
   121                           	psect	text97,global,reloc=2,class=CODE,delta=1
   122                           	psect	text98,global,reloc=2,class=CODE,delta=1
   123                           	psect	text99,global,reloc=2,class=CODE,delta=1
   124                           	psect	text100,global,reloc=2,class=CODE,delta=1
   125                           	psect	text101,global,reloc=2,class=CODE,delta=1
   126                           	psect	text102,global,reloc=2,class=CODE,delta=1
   127                           	psect	text103,global,reloc=2,class=CODE,delta=1
   128                           	psect	text104,global,reloc=2,class=CODE,delta=1
   129                           	psect	text105,global,reloc=2,class=CODE,delta=1
   130                           	psect	text106,global,reloc=2,class=CODE,delta=1
   131                           	psect	text107,global,reloc=2,class=CODE,delta=1
   132                           	psect	text108,global,reloc=2,class=CODE,delta=1
   133                           	psect	text109,global,reloc=2,class=CODE,delta=1
   134                           	psect	text110,global,reloc=2,class=CODE,delta=1
   135                           	psect	text111,global,reloc=2,class=CODE,delta=1
   136                           	psect	text112,global,reloc=2,class=CODE,delta=1
   137                           	psect	text113,global,reloc=2,class=CODE,delta=1
   138                           	psect	text114,global,reloc=2,class=CODE,delta=1
   139                           	psect	text115,global,reloc=2,class=CODE,delta=1
   140                           	psect	text116,global,reloc=2,class=CODE,delta=1
   141                           	psect	text117,global,reloc=2,class=CODE,delta=1
   142                           	psect	text118,global,reloc=2,class=CODE,delta=1
   143                           	psect	text119,global,reloc=2,class=CODE,delta=1
   144                           	psect	text120,global,reloc=2,class=CODE,delta=1
   145                           	psect	text121,global,reloc=2,class=CODE,delta=1
   146                           	psect	text122,global,reloc=2,class=CODE,delta=1,group=1
   147                           	psect	text123,global,reloc=2,class=CODE,delta=1
   148                           	psect	text124,global,reloc=2,class=CODE,delta=1,group=1
   149                           	psect	text125,global,reloc=2,class=CODE,delta=1
   150                           	psect	text126,global,reloc=2,class=CODE,delta=1
   151                           	psect	text127,global,reloc=2,class=CODE,delta=1
   152                           	psect	text128,global,reloc=2,class=CODE,delta=1
   153                           	psect	text129,global,reloc=2,class=CODE,delta=1,group=2
   154                           	psect	text130,global,reloc=2,class=CODE,delta=1
   155                           	psect	text131,global,reloc=2,class=CODE,delta=1
   156                           	psect	text132,global,reloc=2,class=CODE,delta=1,inline
   157                           	psect	text133,global,reloc=2,class=CODE,delta=1
   158                           	psect	text134,global,reloc=2,class=CODE,delta=1
   159                           	psect	text135,global,reloc=2,class=CODE,delta=1
   160                           	psect	text136,global,reloc=2,class=CODE,delta=1,inline
   161                           	psect	text137,global,reloc=2,class=CODE,delta=1,inline
   162                           	psect	text138,global,reloc=2,class=CODE,delta=1
   163                           	psect	text139,global,reloc=2,class=CODE,delta=1
   164                           	psect	text140,global,reloc=2,class=CODE,delta=1
   165                           	psect	text141,global,reloc=2,class=CODE,delta=1
   166                           	psect	text142,global,reloc=2,class=CODE,delta=1
   167                           	psect	text143,global,reloc=2,class=CODE,delta=1
   168                           	psect	text144,global,reloc=2,class=CODE,delta=1
   169                           	psect	text145,global,reloc=2,class=CODE,delta=1
   170                           	psect	text146,global,reloc=2,class=CODE,delta=1
   171                           	psect	text147,global,reloc=2,class=CODE,delta=1
   172                           	psect	text148,global,reloc=2,class=CODE,delta=1
   173                           	psect	text149,global,reloc=2,class=CODE,delta=1
   174                           	psect	text150,global,reloc=2,class=CODE,delta=1
   175                           	psect	text151,global,reloc=2,class=CODE,delta=1
   176                           	psect	text152,global,reloc=2,class=CODE,delta=1
   177                           	psect	text153,global,reloc=2,class=CODE,delta=1
   178                           	psect	text154,global,reloc=2,class=CODE,delta=1,inline
   179                           	psect	text155,global,reloc=2,class=CODE,delta=1,inline
   180                           	psect	text156,global,reloc=2,class=CODE,delta=1,inline
   181                           	psect	text157,global,reloc=2,class=CODE,delta=1,inline
   182                           	psect	text158,global,reloc=2,class=CODE,delta=1,inline
   183                           	psect	text159,global,reloc=2,class=CODE,delta=1,inline
   184                           	psect	text160,global,reloc=2,class=CODE,delta=1,inline
   185                           	psect	text161,global,reloc=2,class=CODE,delta=1
   186                           	psect	text162,global,reloc=2,class=CODE,delta=1
   187                           	psect	text163,global,reloc=2,class=CODE,delta=1
   188                           	psect	text164,global,reloc=2,class=CODE,delta=1
   189                           	psect	text165,global,reloc=2,class=CODE,delta=1
   190                           	psect	text166,global,reloc=2,class=CODE,delta=1
   191                           	psect	text167,global,reloc=2,class=CODE,delta=1
   192                           	psect	text168,global,reloc=2,class=CODE,delta=1
   193                           	psect	text169,global,reloc=2,class=CODE,delta=1
   194                           	psect	text170,global,reloc=2,class=CODE,delta=1
   195                           	psect	text171,global,reloc=2,class=CODE,delta=1
   196                           	psect	text172,global,reloc=2,class=CODE,delta=1
   197                           	psect	text173,global,reloc=2,class=CODE,delta=1
   198                           	psect	text174,global,reloc=2,class=CODE,delta=1
   199                           	psect	text175,global,reloc=2,class=CODE,delta=1
   200                           	psect	text176,global,reloc=2,class=CODE,delta=1,inline
   201                           	psect	text177,global,reloc=2,class=CODE,delta=1,inline
   202                           	psect	text178,global,reloc=2,class=CODE,delta=1,inline
   203                           	psect	text179,global,reloc=2,class=CODE,delta=1
   204                           	psect	text180,global,reloc=2,class=CODE,delta=1,inline
   205                           	psect	text181,global,reloc=2,class=CODE,delta=1,inline
   206                           	psect	text182,global,reloc=2,class=CODE,delta=1,inline
   207                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   208                           	psect	text184,global,reloc=2,class=CODE,delta=1
   209                           	psect	text185,global,reloc=2,class=CODE,delta=1
   210                           	psect	text186,global,reloc=2,class=CODE,delta=1
   211                           	psect	text187,global,reloc=2,class=CODE,delta=1
   212                           	psect	text188,global,reloc=2,class=CODE,delta=1
   213                           	psect	text189,global,reloc=2,class=CODE,delta=1
   214                           	psect	text190,global,reloc=2,class=CODE,delta=1
   215                           	psect	text191,global,reloc=2,class=CODE,delta=1
   216                           	psect	text192,global,reloc=2,class=CODE,delta=1
   217                           	psect	text193,global,reloc=2,class=CODE,delta=1
   218                           	psect	text194,global,reloc=2,class=CODE,delta=1
   219                           	psect	text195,global,reloc=2,class=CODE,delta=1
   220                           	psect	text196,global,reloc=2,class=CODE,delta=1
   221                           	psect	text197,global,reloc=2,class=CODE,delta=1
   222                           	psect	text198,global,reloc=2,class=CODE,delta=1
   223                           	psect	text199,global,reloc=2,class=CODE,delta=1
   224                           	psect	text200,global,reloc=2,class=CODE,delta=1
   225                           	psect	text201,global,reloc=2,class=CODE,delta=1
   226                           	psect	text202,global,reloc=2,class=CODE,delta=1
   227                           	psect	text203,global,reloc=2,class=CODE,delta=1
   228                           	psect	text204,global,reloc=2,class=CODE,delta=1
   229                           	psect	text205,global,reloc=2,class=CODE,delta=1
   230                           	psect	text206,global,reloc=2,class=CODE,delta=1
   231                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   232                           	psect	text207,global,reloc=2,class=CODE,delta=1
   233                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   234                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   235                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   236                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   237  0000                     
   238                           ; Version 2.36
   239                           ; Generated 28/01/2022 GMT
   240                           ; 
   241                           ; Copyright © 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
   242                           ; All rights reserved.
   243                           ; 
   244                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   245                           ; 
   246                           ; Redistribution and use in source and binary forms, with or without modification, are
   247                           ; permitted provided that the following conditions are met:
   248                           ; 
   249                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   250                           ;        conditions and the following disclaimer.
   251                           ; 
   252                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   253                           ;        of conditions and the following disclaimer in the documentation and/or other
   254                           ;        materials provided with the distribution. Publication is not required when
   255                           ;        this file is used in an embedded application.
   256                           ; 
   257                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   258                           ;        software without specific prior written permission.
   259                           ; 
   260                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   261                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   262                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   263                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   264                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   265                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   266                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   267                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   268                           ; 
   269                           ; 
   270                           ; Code-generator required, PIC18F46K40 Definitions
   271                           ; 
   272                           ; SFR Addresses
   273  0000                     
   274                           	psect	idataBANK0
   275  0092C0                     __pidataBANK0:
   276                           	callstack 0
   277                           
   278                           ;initializer for _auxCounter
   279  0092C0  03E8               	dw	1000
   280                           
   281                           	psect	idataBANK1
   282  00928E                     __pidataBANK1:
   283                           	callstack 0
   284                           
   285                           ;initializer for _tempCounter
   286  00928E  3DDD               	dw	15837
   287  009290  000F               	dw	15
   288                           
   289                           ;initializer for _firstselectflag
   290  009292  01                 	db	1
   291                           
   292                           	psect	idataBANK2
   293  0092C2                     __pidataBANK2:
   294                           	callstack 0
   295                           
   296                           ;initializer for _zeroCrossingWaitTime
   297  0092C2  19                 	db	25
   298  0092C3  19                 	db	25
   299                           
   300                           	psect	idataBANK3
   301  008E66                     __pidataBANK3:
   302                           	callstack 0
   303                           
   304                           ;initializer for _DispTable
   305  008E66  6F                 	db	111
   306  008E67  21                 	db	33
   307  008E68  76                 	db	118
   308  008E69  73                 	db	115
   309  008E6A  39                 	db	57
   310  008E6B  5B                 	db	91
   311  008E6C  5F                 	db	95
   312  008E6D  61                 	db	97
   313  008E6E  7F                 	db	127
   314  008E6F  7B                 	db	123
   315  008E70  7D                 	db	125
   316  008E71  7F                 	db	127
   317  008E72  4E                 	db	78
   318  008E73  37                 	db	55
   319  008E74  5E                 	db	94
   320  008E75  5C                 	db	92
   321  008E76  7C                 	db	124
   322  008E77  3D                 	db	61
   323  008E78  0E                 	db	14
   324  008E79  2F                 	db	47
   325  008E7A  14                 	db	20
   326  008E7B  1E                 	db	30
   327  008E7C  07                 	db	7
   328  008E7D  45                 	db	69
   329  008E7E  10                 	db	16
   330  008E7F  0C                 	db	12
   331  008E80  40                 	db	64
   332  008E81  20                 	db	32
   333  008E82  01                 	db	1
   334  008E83  02                 	db	2
   335  008E84  04                 	db	4
   336  008E85  08                 	db	8
   337  008E86  00                 	db	0
   338  008E87  3B                 	db	59
   339  008E88  1F                 	db	31
   340  008E89  16                 	db	22
   341  008E8A  17                 	db	23
   342                           
   343                           	psect	smallconst
   344  000F00                     __psmallconst:
   345                           	callstack 0
   346  000F00  00                 	db	0
   347  000F01                     _i2c1_fsmStateTable:
   348                           	callstack 0
   349  000F01  04                 	db	low _I2C1_DO_IDLE
   350  000F02  92                 	db	high _I2C1_DO_IDLE
   351  000F03  70                 	db	low _I2C1_DO_SEND_ADR_READ
   352  000F04  91                 	db	high _I2C1_DO_SEND_ADR_READ
   353  000F05  62                 	db	low _I2C1_DO_SEND_ADR_WRITE
   354  000F06  91                 	db	high _I2C1_DO_SEND_ADR_WRITE
   355  000F07  A8                 	db	low _I2C1_DO_TX
   356  000F08  77                 	db	high _I2C1_DO_TX
   357  000F09  48                 	db	low _I2C1_DO_RX
   358  000F0A  7C                 	db	high _I2C1_DO_RX
   359  000F0B  FA                 	db	low _I2C1_DO_RCEN
   360  000F0C  91                 	db	high _I2C1_DO_RCEN
   361  000F0D  F4                 	db	low _I2C1_DO_TX_EMPTY
   362  000F0E  81                 	db	high _I2C1_DO_TX_EMPTY
   363  000F0F  4E                 	db	low _I2C1_DO_SEND_RESTART_READ
   364  000F10  92                 	db	high _I2C1_DO_SEND_RESTART_READ
   365  000F11  46                 	db	low _I2C1_DO_SEND_RESTART_WRITE
   366  000F12  92                 	db	high _I2C1_DO_SEND_RESTART_WRITE
   367  000F13  3E                 	db	low _I2C1_DO_SEND_RESTART
   368  000F14  92                 	db	high _I2C1_DO_SEND_RESTART
   369  000F15  36                 	db	low _I2C1_DO_SEND_STOP
   370  000F16  92                 	db	high _I2C1_DO_SEND_STOP
   371  000F17  2E                 	db	low _I2C1_DO_RX_ACK
   372  000F18  92                 	db	high _I2C1_DO_RX_ACK
   373  000F19  26                 	db	low _I2C1_DO_RX_NACK_STOP
   374  000F1A  92                 	db	high _I2C1_DO_RX_NACK_STOP
   375  000F1B  1E                 	db	low _I2C1_DO_RX_NACK_RESTART
   376  000F1C  92                 	db	high _I2C1_DO_RX_NACK_RESTART
   377  000F1D  F0                 	db	low _I2C1_DO_RESET
   378  000F1E  91                 	db	high _I2C1_DO_RESET
   379  000F1F  AE                 	db	low _I2C1_DO_ADDRESS_NACK
   380  000F20  86                 	db	high _I2C1_DO_ADDRESS_NACK
   381  000F21                     __end_of_i2c1_fsmStateTable:
   382                           	callstack 0
   383  0000                     _T2CON	set	4029
   384  0000                     _T1CON	set	4047
   385  0000                     _T1CLK	set	4050
   386  0000                     _T1GATE	set	4049
   387  0000                     _T0CON0	set	4053
   388  0000                     _INLVLD	set	3874
   389  0000                     _SLRCOND	set	3875
   390  0000                     _ODCOND	set	3876
   391  0000                     _WPUD	set	3877
   392  0000                     _TRISD	set	3979
   393  0000                     _TRISC	set	3978
   394  0000                     _TRISB	set	3977
   395  0000                     _TRISA	set	3976
   396  0000                     _TRISE	set	3980
   397  0000                     _LATC	set	3973
   398  0000                     _LATB	set	3972
   399  0000                     _OSCTUNE	set	3805
   400  0000                     _OSCFRQ	set	3806
   401  0000                     _ADERRL	set	3950
   402  0000                     _ADERRH	set	3951
   403  0000                     _ADPREVL	set	3937
   404  0000                     _ADPREVH	set	3938
   405  0000                     _ADFLTRL	set	3954
   406  0000                     _ADFLTRH	set	3955
   407  0000                     _ADACCL	set	3952
   408  0000                     _ADACCH	set	3953
   409  0000                     _ADCNT	set	3943
   410  0000                     _ADRESL	set	3939
   411  0000                     _ADRESH	set	3940
   412  0000                     _ADACQ	set	3932
   413  0000                     _ADCON0	set	3936
   414  0000                     _ADCLK	set	3927
   415  0000                     _ADSTAT	set	3941
   416  0000                     _ADCON3	set	3931
   417  0000                     _ADCON2	set	3930
   418  0000                     _ADPRE	set	3934
   419  0000                     _ADSTPTH	set	3945
   420  0000                     _ADUTHH	set	3949
   421  0000                     _ADUTHL	set	3948
   422  0000                     _ADLTHH	set	3947
   423  0000                     _SP1BRGH	set	3996
   424  0000                     _TX1STA	set	3998
   425  000F21  00                 	db	0	; dummy byte at the end
   426  0000                     
   427                           	psect	nvBANK1
   428  0001FE                     __pnvBANK1:
   429                           	callstack 0
   430  0001FE                     _eusart1TxBufferRemaining:
   431                           	callstack 0
   432  0001FE                     	ds	1
   433                           
   434                           	psect	nvBANK2
   435  0002DD                     __pnvBANK2:
   436                           	callstack 0
   437  0002DD                     _TMR2_InterruptHandler:
   438                           	callstack 0
   439  0002DD                     	ds	2
   440  0002DF                     _TMR1_InterruptHandler:
   441                           	callstack 0
   442  0002DF                     	ds	2
   443  0002E1                     _timer1ReloadVal:
   444                           	callstack 0
   445  0002E1                     	ds	2
   446  0002E3                     _TMR0_InterruptHandler:
   447                           	callstack 0
   448  0002E3                     	ds	2
   449  0002E5                     _EUSART1_ErrorHandler:
   450                           	callstack 0
   451  0002E5                     	ds	2
   452  0002E7                     _EUSART1_OverrunErrorHandler:
   453                           	callstack 0
   454  0002E7                     	ds	2
   455  0002E9                     _EUSART1_FramingErrorHandler:
   456                           	callstack 0
   457  0002E9                     	ds	2
   458  0002EB                     _EUSART1_RxDefaultInterruptHandler:
   459                           	callstack 0
   460  0002EB                     	ds	2
   461  0002ED                     _EUSART1_TxDefaultInterruptHandler:
   462                           	callstack 0
   463  0002ED                     	ds	2
   464  0000                     _WDTCON0bits	set	3794
   465  0000                     _TMR0IE	set	30229
   466  0000                     _TMR0IF	set	30293
   467  0000                     _LATEbits	set	3975
   468  0000                     _LATDbits	set	3974
   469  0000                     _LATAbits	set	3971
   470  0000                     _LATCbits	set	3973
   471  0000                     _PORTB	set	3982
   472  0000                     _T1CONbits	set	4047
   473  0000                     _SSP1CON2bits	set	3991
   474  0000                     _SSP1CON1bits	set	3990
   475  0000                     _ADCON0bits	set	3936
   476  0000                     _RC1STAbits	set	3997
   477  0000                     _GIE	set	32663
   478  0000                     _RX1PPS	set	3765
   479  0000                     _SSP1CLKPPS	set	3767
   480  0000                     _PIE0bits	set	3778
   481  0000                     _PIE3bits	set	3781
   482  0000                     _PIE4bits	set	3782
   483  0000                     _PIR0bits	set	3786
   484  0000                     _PIR3bits	set	3789
   485  0000                     _ADACT	set	3926
   486  0000                     _ADREF	set	3928
   487  0000                     _ADCON1	set	3929
   488  0000                     _ADCAP	set	3933
   489  0000                     _ADPCH	set	3935
   490  0000                     _ADRPT	set	3942
   491  0000                     _ADSTPTL	set	3944
   492  0000                     _ADLTHL	set	3946
   493  0000                     _RC1REG	set	3993
   494  0000                     _TX1REG	set	3994
   495  0000                     _SP1BRGL	set	3995
   496  0000                     _RC1STA	set	3997
   497  0000                     _BAUD1CON	set	3999
   498  0000                     _T2TMR	set	4027
   499  0000                     _T2PR	set	4028
   500  0000                     _T2HLT	set	4030
   501  0000                     _T2CLKCON	set	4031
   502  0000                     _TMR1L	set	4045
   503  0000                     _TMR1H	set	4046
   504  0000                     _T1GCON	set	4048
   505  0000                     _TMR0L	set	4051
   506  0000                     _TMR0H	set	4052
   507  0000                     _T0CON1	set	4054
   508  0000                     _PCON0bits	set	4055
   509  0000                     _INTCONbits	set	4082
   510  0000                     _LATA	set	3971
   511  0000                     _LATD	set	3974
   512  0000                     _LATE	set	3975
   513  0000                     _SSP1BUF	set	3986
   514  0000                     _SSP1ADD	set	3987
   515  0000                     _SSP1STAT	set	3989
   516  0000                     _SSP1CON2	set	3991
   517  0000                     _SSP1CON1	set	3990
   518  0000                     _WDTCON0	set	3794
   519  0000                     _OSCCON1	set	3800
   520  0000                     _PIR4bits	set	3790
   521  0000                     _OSCCON3	set	3802
   522  0000                     _OSCEN	set	3804
   523  0000                     _PMD0	set	3809
   524  0000                     _RC3PPS	set	3834
   525  0000                     _INLVLA	set	3853
   526  0000                     _SLRCONA	set	3854
   527  0000                     _ODCONA	set	3855
   528  0000                     _WPUA	set	3856
   529  0000                     _ANSELA	set	3857
   530  0000                     _ANSELB	set	3865
   531  0000                     _ANSELC	set	3873
   532  0000                     _ANSELD	set	3878
   533  0000                     _PMD5	set	3814
   534  0000                     _PMD4	set	3813
   535  0000                     _PMD3	set	3812
   536  0000                     _PMD2	set	3811
   537  0000                     _PMD1	set	3810
   538  0000                     _WDTCON1	set	3795
   539  0000                     _PORTEbits	set	3985
   540  0000                     _PORTBbits	set	3982
   541  0000                     _PORTAbits	set	3981
   542  0000                     _INLVLE	set	3882
   543  0000                     _SLRCONE	set	3883
   544  0000                     _ODCONE	set	3884
   545  0000                     _WPUE	set	3885
   546  0000                     _ANSELE	set	3886
   547  0000                     _INLVLC	set	3869
   548  0000                     _SLRCONC	set	3870
   549  0000                     _ODCONC	set	3871
   550  0000                     _WPUC	set	3872
   551  0000                     _INLVLB	set	3861
   552  0000                     _SLRCONB	set	3862
   553  0000                     _ODCONB	set	3863
   554  0000                     _WPUB	set	3864
   555  0000                     _IOCBN3	set	30875
   556  0000                     _IOCBP3	set	30883
   557  0000                     _SSP1DATPPS	set	3768
   558  0000                     _RC7PPS	set	3838
   559  0000                     _RC4PPS	set	3835
   560  0000                     _T2RST	set	4032
   561                           
   562                           ; #config settings
   563                           
   564                           	psect	cinit
   565  0070DC                     __pcinit:
   566                           	callstack 0
   567  0070DC                     start_initialization:
   568                           	callstack 0
   569  0070DC                     __initialization:
   570                           	callstack 0
   571                           
   572                           ; Initialize objects allocated to BANK3 (37 bytes)
   573                           ; load TBLPTR registers with __pidataBANK3
   574  0070DC  0E66               	movlw	low __pidataBANK3
   575  0070DE  6EF6               	movwf	tblptrl,c
   576  0070E0  0E8E               	movlw	high __pidataBANK3
   577  0070E2  6EF7               	movwf	tblptrh,c
   578  0070E4  0E00               	movlw	low (__pidataBANK3 shr (0+16))
   579  0070E6  6EF8               	movwf	tblptru,c
   580  0070E8  EE03  F0D2         	lfsr	0,__pdataBANK3
   581  0070EC  EE10 F025          	lfsr	1,37
   582  0070F0                     copy_data0:
   583  0070F0  0009               	tblrd		*+
   584  0070F2  CFF5 FFEE          	movff	tablat,postinc0
   585  0070F6  50E5               	movf	postdec1,w,c
   586  0070F8  50E1               	movf	fsr1l,w,c
   587  0070FA  E1FA               	bnz	copy_data0
   588                           
   589                           ; Initialize objects allocated to BANK2 (2 bytes)
   590                           ; load TBLPTR registers with __pidataBANK2
   591  0070FC  0EC2               	movlw	low __pidataBANK2
   592  0070FE  6EF6               	movwf	tblptrl,c
   593  007100  0E92               	movlw	high __pidataBANK2
   594  007102  6EF7               	movwf	tblptrh,c
   595  007104  0E00               	movlw	low (__pidataBANK2 shr (0+16))
   596  007106  6EF8               	movwf	tblptru,c
   597  007108  0009               	tblrd		*+	;fetch initializer
   598  00710A  CFF5 F2EF          	movff	tablat,__pdataBANK2
   599  00710E  0009               	tblrd		*+	;fetch initializer
   600  007110  CFF5 F2F0          	movff	tablat,__pdataBANK2+1
   601                           
   602                           ; Initialize objects allocated to BANK1 (5 bytes)
   603                           ; load TBLPTR registers with __pidataBANK1
   604  007114  0E8E               	movlw	low __pidataBANK1
   605  007116  6EF6               	movwf	tblptrl,c
   606  007118  0E92               	movlw	high __pidataBANK1
   607  00711A  6EF7               	movwf	tblptrh,c
   608  00711C  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   609  00711E  6EF8               	movwf	tblptru,c
   610  007120  EE01  F0F9         	lfsr	0,__pdataBANK1
   611  007124  EE10 F005          	lfsr	1,5
   612  007128                     copy_data1:
   613  007128  0009               	tblrd		*+
   614  00712A  CFF5 FFEE          	movff	tablat,postinc0
   615  00712E  50E5               	movf	postdec1,w,c
   616  007130  50E1               	movf	fsr1l,w,c
   617  007132  E1FA               	bnz	copy_data1
   618                           
   619                           ; Initialize objects allocated to BANK0 (2 bytes)
   620                           ; load TBLPTR registers with __pidataBANK0
   621  007134  0EC0               	movlw	low __pidataBANK0
   622  007136  6EF6               	movwf	tblptrl,c
   623  007138  0E92               	movlw	high __pidataBANK0
   624  00713A  6EF7               	movwf	tblptrh,c
   625  00713C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   626  00713E  6EF8               	movwf	tblptru,c
   627  007140  0009               	tblrd		*+	;fetch initializer
   628  007142  CFF5 F0F8          	movff	tablat,__pdataBANK0
   629  007146  0009               	tblrd		*+	;fetch initializer
   630  007148  CFF5 F0F9          	movff	tablat,__pdataBANK0+1
   631                           
   632                           ; Clear objects allocated to BANK3 (210 bytes)
   633  00714C  EE03  F000         	lfsr	0,__pbssBANK3
   634  007150  0ED2               	movlw	210
   635  007152                     clear_0:
   636  007152  6AEE               	clrf	postinc0,c
   637  007154  06E8               	decf	wreg,f,c
   638  007156  E1FD               	bnz	clear_0
   639                           
   640                           ; Clear objects allocated to BANK2 (221 bytes)
   641  007158  EE02  F000         	lfsr	0,__pbssBANK2
   642  00715C  0EDD               	movlw	221
   643  00715E                     clear_1:
   644  00715E  6AEE               	clrf	postinc0,c
   645  007160  06E8               	decf	wreg,f,c
   646  007162  E1FD               	bnz	clear_1
   647                           
   648                           ; Clear objects allocated to BANK1 (249 bytes)
   649  007164  EE01  F000         	lfsr	0,__pbssBANK1
   650  007168  0EF9               	movlw	249
   651  00716A                     clear_2:
   652  00716A  6AEE               	clrf	postinc0,c
   653  00716C  06E8               	decf	wreg,f,c
   654  00716E  E1FD               	bnz	clear_2
   655                           
   656                           ; Clear objects allocated to BANK0 (120 bytes)
   657  007170  EE00  F060         	lfsr	0,__pbssBANK0
   658  007174  0E78               	movlw	120
   659  007176                     clear_3:
   660  007176  6AEE               	clrf	postinc0,c
   661  007178  06E8               	decf	wreg,f,c
   662  00717A  E1FD               	bnz	clear_3
   663                           
   664                           ; Clear objects allocated to COMRAM (21 bytes)
   665  00717C  EE00  F03B         	lfsr	0,__pbssCOMRAM
   666  007180  0E15               	movlw	21
   667  007182                     clear_4:
   668  007182  6AEE               	clrf	postinc0,c
   669  007184  06E8               	decf	wreg,f,c
   670  007186  E1FD               	bnz	clear_4
   671  007188                     end_of_initialization:
   672                           	callstack 0
   673  007188                     __end_of__initialization:
   674                           	callstack 0
   675  007188  9050               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   676  00718A  9250               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   677  00718C  0100               	movlb	0
   678  00718E  EF78  F02E         	goto	_main	;jump to C main() function
   679                           
   680                           	psect	bssCOMRAM
   681  00003B                     __pbssCOMRAM:
   682                           	callstack 0
   683  00003B                     _rfCMD:
   684                           	callstack 0
   685  00003B                     	ds	11
   686  000046                     _edit_Param:
   687                           	callstack 0
   688  000046                     	ds	6
   689  00004C                     _button_struct:
   690                           	callstack 0
   691  00004C                     	ds	4
   692                           
   693                           	psect	bssBANK0
   694  000060                     __pbssBANK0:
   695                           	callstack 0
   696  000060                     _learn_st:
   697                           	callstack 0
   698  000060                     	ds	18
   699  000072                     _dispStruct:
   700                           	callstack 0
   701  000072                     	ds	6
   702  000078                     _brakeElectric_st:
   703                           	callstack 0
   704  000078                     	ds	2
   705  00007A                     _pointSync:
   706                           	callstack 0
   707  00007A                     	ds	2
   708  00007C                     _Hop:
   709                           	callstack 0
   710  00007C                     	ds	2
   711  00007E                     _RFcount:
   712                           	callstack 0
   713  00007E                     	ds	2
   714  000080                     _temp:
   715                           	callstack 0
   716  000080                     	ds	1
   717  000081                     _control_limit_switch:
   718                           	callstack 0
   719  000081                     	ds	1
   720  000082                     _fullmotorPower:
   721                           	callstack 0
   722  000082                     	ds	1
   723  000083                     _stateMotor:
   724                           	callstack 0
   725  000083                     	ds	1
   726  000084                     _zeroCrossingWaitTimeIdx:
   727                           	callstack 0
   728  000084                     	ds	1
   729  000085                     _programmer_enable:
   730                           	callstack 0
   731  000085                     	ds	1
   732  000086                     readbutton@key1:
   733                           	callstack 0
   734  000086                     	ds	1
   735  000087                     readRFButtons@keyType:
   736                           	callstack 0
   737  000087                     	ds	1
   738  000088                     readRFButtons@key1:
   739                           	callstack 0
   740  000088                     	ds	1
   741  000089                     _RFBit:
   742                           	callstack 0
   743  000089                     	ds	1
   744  00008A                     _RFFull_12BIT:
   745                           	callstack 0
   746  00008A                     	ds	1
   747  00008B                     _RFFull:
   748                           	callstack 0
   749  00008B                     	ds	1
   750  00008C                     _BitCount:
   751                           	callstack 0
   752  00008C                     	ds	1
   753  00008D                     _Bptr:
   754                           	callstack 0
   755  00008D                     	ds	1
   756  00008E                     _numberOfErrorCurrent:
   757                           	callstack 0
   758  00008E                     	ds	1
   759  00008F                     _idxAdcZeroAquisition:
   760                           	callstack 0
   761  00008F                     	ds	1
   762  000090                     _idxSaveEnergyADCHist:
   763                           	callstack 0
   764  000090                     	ds	1
   765  000091                     _idxAdcAquisition:
   766                           	callstack 0
   767  000091                     	ds	1
   768  000092                     _Counterchoose:
   769                           	callstack 0
   770  000092                     	ds	1
   771  000093                     _eusart1RxCount:
   772                           	callstack 0
   773  000093                     	ds	1
   774  000094                     _eusart1RxTail:
   775                           	callstack 0
   776  000094                     	ds	1
   777  000095                     _eusart1RxHead:
   778                           	callstack 0
   779  000095                     	ds	1
   780  000096                     _eusart1TxTail:
   781                           	callstack 0
   782  000096                     	ds	1
   783  000097                     _eusart1TxHead:
   784                           	callstack 0
   785  000097                     	ds	1
   786  000098                     _var_sys_NVM:
   787                           	callstack 0
   788  000098                     	ds	64
   789                           
   790                           	psect	dataBANK0
   791  0000F8                     __pdataBANK0:
   792                           	callstack 0
   793  0000F8                     _auxCounter:
   794                           	callstack 0
   795  0000F8                     	ds	2
   796                           
   797                           	psect	bssBANK1
   798  000100                     __pbssBANK1:
   799                           	callstack 0
   800  000100                     _var_sys:
   801                           	callstack 0
   802  000100                     	ds	81
   803  000151                     _menu_st:
   804                           	callstack 0
   805  000151                     	ds	25
   806  00016A                     _security:
   807                           	callstack 0
   808  00016A                     	ds	11
   809  000175                     _fimdecurso:
   810                           	callstack 0
   811  000175                     	ds	6
   812  00017B                     _powerControl_st:
   813                           	callstack 0
   814  00017B                     	ds	6
   815  000181                     readRFButtons@serial:
   816                           	callstack 0
   817  000181                     	ds	4
   818  000185                     readRFButtons@rollingCode:
   819                           	callstack 0
   820  000185                     	ds	2
   821  000187                     _BufferRF_12BIT:
   822                           	callstack 0
   823  000187                     	ds	2
   824  000189                     _erroranterior:
   825                           	callstack 0
   826  000189                     	ds	2
   827  00018B                     _aux_in_auto_close:
   828                           	callstack 0
   829  00018B                     	ds	1
   830  00018C                     _aux_i:
   831                           	callstack 0
   832  00018C                     	ds	1
   833  00018D                     _Abertura_pedonal:
   834                           	callstack 0
   835  00018D                     	ds	1
   836  00018E                     _temppower:
   837                           	callstack 0
   838  00018E                     	ds	1
   839  00018F                     _difTime:
   840                           	callstack 0
   841  00018F                     	ds	1
   842  000190                     _StateTRIAC:
   843                           	callstack 0
   844  000190                     	ds	1
   845  000191                     _waitZeroPeak:
   846                           	callstack 0
   847  000191                     	ds	1
   848  000192                     _zeroCrossing:
   849                           	callstack 0
   850  000192                     	ds	1
   851  000193                     _zeroCrossingLength:
   852                           	callstack 0
   853  000193                     	ds	1
   854  000194                     _lastKey:
   855                           	callstack 0
   856  000194                     	ds	1
   857  000195                     _F2Chance:
   858                           	callstack 0
   859  000195                     	ds	1
   860  000196                     readbutton@key2:
   861                           	callstack 0
   862  000196                     	ds	1
   863  000197                     readRFButtons@typeRemote:
   864                           	callstack 0
   865  000197                     	ds	1
   866  000198                     _RFstate:
   867                           	callstack 0
   868  000198                     	ds	1
   869  000199                     _eusart1RxLastError:
   870                           	callstack 0
   871  000199                     	ds	1
   872  00019A                     _ts_system:
   873                           	callstack 0
   874  00019A                     	ds	72
   875  0001E2                     _controlGate_stateMachine:
   876                           	callstack 0
   877  0001E2                     	ds	11
   878  0001ED                     _main_stateMachine:
   879                           	callstack 0
   880  0001ED                     	ds	11
   881  0001F8                     setValueToEdit@value:
   882                           	callstack 0
   883  0001F8                     	ds	1
   884                           
   885                           	psect	dataBANK1
   886  0001F9                     __pdataBANK1:
   887                           	callstack 0
   888  0001F9                     _tempCounter:
   889                           	callstack 0
   890  0001F9                     	ds	4
   891  0001FD                     _firstselectflag:
   892                           	callstack 0
   893  0001FD                     	ds	1
   894                           
   895                           	psect	bssBANK2
   896  000200                     __pbssBANK2:
   897                           	callstack 0
   898  000200                     _ADC_array:
   899                           	callstack 0
   900  000200                     	ds	60
   901  00023C                     _I2C1_Status:
   902                           	callstack 0
   903  00023C                     	ds	36
   904  000260                     _SumEnergyADCHist_array:
   905                           	callstack 0
   906  000260                     	ds	20
   907  000274                     _eusart1RxStatusBuffer:
   908                           	callstack 0
   909  000274                     	ds	8
   910  00027C                     _eusart1RxBuffer:
   911                           	callstack 0
   912  00027C                     	ds	8
   913  000284                     _eusart1TxBuffer:
   914                           	callstack 0
   915  000284                     	ds	8
   916  00028C                     _EHop:
   917                           	callstack 0
   918  00028C                     	ds	2
   919  00028E                     _NextHop:
   920                           	callstack 0
   921  00028E                     	ds	2
   922  000290                     _timer0ReloadVal16bit:
   923                           	callstack 0
   924  000290                     	ds	2
   925  000292                     _classic_data:
   926                           	callstack 0
   927  000292                     	ds	16
   928  0002A2                     _memoryTEMP:
   929                           	callstack 0
   930  0002A2                     	ds	16
   931  0002B2                     _controlLearning_stateMachine:
   932                           	callstack 0
   933  0002B2                     	ds	11
   934  0002BD                     _menuConfiguration_stateMachine:
   935                           	callstack 0
   936  0002BD                     	ds	11
   937  0002C8                     _BufferRF:
   938                           	callstack 0
   939  0002C8                     	ds	9
   940  0002D1                     _DKEY:
   941                           	callstack 0
   942  0002D1                     	ds	8
   943  0002D9                     NormalKeyGen@SEED:
   944                           	callstack 0
   945  0002D9                     	ds	4
   946                           
   947                           	psect	dataBANK2
   948  0002EF                     __pdataBANK2:
   949                           	callstack 0
   950  0002EF                     _zeroCrossingWaitTime:
   951                           	callstack 0
   952  0002EF                     	ds	2
   953                           
   954                           	psect	bssBANK3
   955  000300                     __pbssBANK3:
   956                           	callstack 0
   957  000300                     _listSyncValues:
   958                           	callstack 0
   959  000300                     	ds	150
   960  000396                     _ADC_zero_array:
   961                           	callstack 0
   962  000396                     	ds	60
   963                           
   964                           	psect	dataBANK3
   965  0003D2                     __pdataBANK3:
   966                           	callstack 0
   967  0003D2                     _DispTable:
   968                           	callstack 0
   969  0003D2                     	ds	37
   970                           
   971                           	psect	cstackBANK0
   972  0000D8                     __pcstackBANK0:
   973                           	callstack 0
   974  0000D8                     ??_keeloq_classic_decrypt_packet:
   975  0000D8                     ??_setPositionInvertionInClosing:
   976  0000D8                     ??_validateRemoteSerialNumber:
   977  0000D8                     ??_RemoveSerial:
   978  0000D8                     SaveNVM_VarSystem@page:
   979                           	callstack 0
   980  0000D8                     getStateOpenPosition@state:
   981                           	callstack 0
   982  0000D8                     saveNewSerial@tempSerial:
   983                           	callstack 0
   984                           
   985                           ; 4 bytes @ 0x0
   986  0000D8                     	ds	1
   987  0000D9                     getStateOpenPosition@stateMotor:
   988                           	callstack 0
   989  0000D9                     SaveNVM_VarSystem@tempAdd:
   990                           	callstack 0
   991                           
   992                           ; 2 bytes @ 0x1
   993  0000D9                     	ds	1
   994  0000DA                     ??_controlVelocity:
   995  0000DA                     RemoveSerial@cmdType:
   996                           	callstack 0
   997                           
   998                           ; 1 bytes @ 0x2
   999  0000DA                     	ds	1
  1000  0000DB                     SaveNVM_VarSystem@point:
  1001                           	callstack 0
  1002  0000DB                     RemoveSerial@tempSerial:
  1003                           	callstack 0
  1004                           
  1005                           ; 4 bytes @ 0x3
  1006  0000DB                     	ds	1
  1007  0000DC                     ??_eusartparser:
  1008  0000DC                     ??_setValueToEdit:
  1009  0000DC                     saveNewSerial@position:
  1010                           	callstack 0
  1011  0000DC                     sm_execute_ControlLearning@psm:
  1012                           	callstack 0
  1013                           
  1014                           ; 2 bytes @ 0x4
  1015  0000DC                     	ds	1
  1016  0000DD                     ??_saveNewSerial:
  1017                           
  1018                           ; 1 bytes @ 0x5
  1019  0000DD                     	ds	1
  1020  0000DE                     ??_sm_execute_ControlLearning:
  1021  0000DE                     setValueToEdit@menuType:
  1022                           	callstack 0
  1023                           
  1024                           ; 1 bytes @ 0x6
  1025  0000DE                     	ds	1
  1026  0000DF                     setValueToEdit@posindex:
  1027                           	callstack 0
  1028                           
  1029                           ; 1 bytes @ 0x7
  1030  0000DF                     	ds	1
  1031  0000E0                     ??_controlSelectRemote:
  1032  0000E0                     setValueToEdit@haveValueToEdit:
  1033                           	callstack 0
  1034  0000E0                     keeloqDecryptPacket@data:
  1035                           	callstack 0
  1036  0000E0                     DecryptPacket_12BIT@data:
  1037                           	callstack 0
  1038                           
  1039                           ; 2 bytes @ 0x8
  1040  0000E0                     	ds	1
  1041  0000E1                     controlSelectRemote@validSerial:
  1042                           	callstack 0
  1043                           
  1044                           ; 1 bytes @ 0x9
  1045  0000E1                     	ds	1
  1046  0000E2                     controlSelectRemote@pos:
  1047                           	callstack 0
  1048  0000E2                     keeloqDecryptPacket@classic_data:
  1049                           	callstack 0
  1050  0000E2                     DecryptPacket_12BIT@classic_data:
  1051                           	callstack 0
  1052                           
  1053                           ; 2 bytes @ 0xA
  1054  0000E2                     	ds	1
  1055  0000E3                     controlSelectRemote@typeRemote:
  1056                           	callstack 0
  1057                           
  1058                           ; 1 bytes @ 0xB
  1059  0000E3                     	ds	1
  1060  0000E4                     ??_keeloqDecryptPacket:
  1061  0000E4                     DecryptPacket_12BIT@commandType:
  1062                           	callstack 0
  1063  0000E4                     actionZone_Opening@securityClosing:
  1064                           	callstack 0
  1065  0000E4                     controlSelectRemote@tempSerial:
  1066                           	callstack 0
  1067                           
  1068                           ; 4 bytes @ 0xC
  1069  0000E4                     	ds	1
  1070  0000E5                     actionZone_Opening@securityOpening:
  1071                           	callstack 0
  1072                           
  1073                           ; 1 bytes @ 0xD
  1074  0000E5                     	ds	1
  1075  0000E6                     actionZone_Opening@typeOpenOrder:
  1076                           	callstack 0
  1077                           
  1078                           ; 1 bytes @ 0xE
  1079  0000E6                     	ds	1
  1080  0000E7                     sm_execute_ControlGate@psm:
  1081                           	callstack 0
  1082                           
  1083                           ; 2 bytes @ 0xF
  1084  0000E7                     	ds	1
  1085  0000E8                     keeloqDecryptPacket@hop_error:
  1086                           	callstack 0
  1087  0000E8                     controlSelectRemote@temp:
  1088                           	callstack 0
  1089                           
  1090                           ; 1 bytes @ 0x10
  1091  0000E8                     	ds	1
  1092  0000E9                     ??_sm_execute_ControlGate:
  1093  0000E9                     keeloqDecryptPacket@commandType:
  1094                           	callstack 0
  1095  0000E9                     sm_execute_menuConfiguration@psm:
  1096                           	callstack 0
  1097                           
  1098                           ; 2 bytes @ 0x11
  1099  0000E9                     	ds	2
  1100  0000EB                     ??_sm_execute_menuConfiguration:
  1101  0000EB                     sm_execute_ControlGate@typeOpenOrder:
  1102                           	callstack 0
  1103                           
  1104                           ; 1 bytes @ 0x13
  1105  0000EB                     	ds	2
  1106  0000ED                     sm_execute_main@psm:
  1107                           	callstack 0
  1108                           
  1109                           ; 2 bytes @ 0x15
  1110  0000ED                     	ds	2
  1111  0000EF                     ??_sm_execute_main:
  1112                           
  1113                           ; 1 bytes @ 0x17
  1114  0000EF                     	ds	2
  1115  0000F1                     main@package:
  1116                           	callstack 0
  1117                           
  1118                           ; 7 bytes @ 0x19
  1119  0000F1                     	ds	7
  1120                           
  1121                           	psect	cstackCOMRAM
  1122  000001                     __pcstackCOMRAM:
  1123                           	callstack 0
  1124  000001                     ??_rxi:
  1125  000001                     ??i2_GetMotorPower:
  1126  000001                     ADCC_GetSingleConversion@channel:
  1127                           	callstack 0
  1128  000001                     Segments_Set@value:
  1129                           	callstack 0
  1130  000001                     i2VerifyElectricalBrake@tempState:
  1131                           	callstack 0
  1132  000001                     TMR1_WriteTimer@timerVal:
  1133                           	callstack 0
  1134  000001                     decrementTimeslot@ts:
  1135                           	callstack 0
  1136                           
  1137                           ; 2 bytes @ 0x0
  1138  000001                     	ds	1
  1139  000002                     ??_ReadADC:
  1140  000002                     i2VerifyElectricalBrake@actualState:
  1141                           	callstack 0
  1142                           
  1143                           ; 1 bytes @ 0x1
  1144  000002                     	ds	1
  1145  000003                     
  1146                           ; 1 bytes @ 0x2
  1147  000003                     	ds	1
  1148  000004                     i2GetMotorPower@defineatraso:
  1149                           	callstack 0
  1150                           
  1151                           ; 1 bytes @ 0x3
  1152  000004                     	ds	1
  1153  000005                     ??_controlMotorForce:
  1154  000005                     
  1155                           ; 1 bytes @ 0x4
  1156  000005                     	ds	5
  1157  00000A                     ??_INTERRUPT_InterruptManager:
  1158                           
  1159                           ; 1 bytes @ 0x9
  1160  00000A                     	ds	6
  1161  000010                     ??_GetMotorPower:
  1162  000010                     ??_SetSegmentValueLearn:
  1163  000010                     ?_sumEnergyADC:
  1164                           	callstack 0
  1165  000010                     ?_sm_get_current_state:
  1166                           	callstack 0
  1167  000010                     ?___wmul:
  1168                           	callstack 0
  1169  000010                     ?___lwdiv:
  1170                           	callstack 0
  1171  000010                     ?_calculateMean:
  1172                           	callstack 0
  1173  000010                     ?_sumHIST:
  1174                           	callstack 0
  1175  000010                     ?___lldiv:
  1176                           	callstack 0
  1177  000010                     EUSART1_Read@readValue:
  1178                           	callstack 0
  1179  000010                     EUSART1_Write@txData:
  1180                           	callstack 0
  1181  000010                     I2C1_Open@address:
  1182                           	callstack 0
  1183  000010                     I2C1_Close@returnValue:
  1184                           	callstack 0
  1185  000010                     I2C1_MasterSendTxData@data:
  1186                           	callstack 0
  1187  000010                     WWDT_TimerClear@state:
  1188                           	callstack 0
  1189  000010                     getKeyPressed@temp:
  1190                           	callstack 0
  1191  000010                     RGB_Set@value:
  1192                           	callstack 0
  1193  000010                     SetSegmentValueIntermitent@d2:
  1194                           	callstack 0
  1195  000010                     VerifyElectricalBrake@tempState:
  1196                           	callstack 0
  1197  000010                     VerifyFollowMe@securityClose:
  1198                           	callstack 0
  1199  000010                     ___lbdiv@divisor:
  1200                           	callstack 0
  1201  000010                     ___lbmod@divisor:
  1202                           	callstack 0
  1203  000010                     EUSART1_SetFramingErrorHandler@interruptHandler:
  1204                           	callstack 0
  1205  000010                     EUSART1_SetOverrunErrorHandler@interruptHandler:
  1206                           	callstack 0
  1207  000010                     EUSART1_SetErrorHandler@interruptHandler:
  1208                           	callstack 0
  1209  000010                     EUSART1_SetTxInterruptHandler@interruptHandler:
  1210                           	callstack 0
  1211  000010                     EUSART1_SetRxInterruptHandler@interruptHandler:
  1212                           	callstack 0
  1213  000010                     I2C1_SetBuffer@buffer:
  1214                           	callstack 0
  1215  000010                     I2C1_SetCallback@cb:
  1216                           	callstack 0
  1217  000010                     TMR0_SetInterruptHandler@InterruptHandler:
  1218                           	callstack 0
  1219  000010                     TMR1_SetInterruptHandler@InterruptHandler:
  1220                           	callstack 0
  1221  000010                     TMR2_SetInterruptHandler@InterruptHandler:
  1222                           	callstack 0
  1223  000010                     saveEnergyADCHist@valueToSave:
  1224                           	callstack 0
  1225  000010                     DecCHK@data:
  1226                           	callstack 0
  1227  000010                     ReqResync@CurrentHop:
  1228                           	callstack 0
  1229  000010                     verifyProgramingMode@classic_data:
  1230                           	callstack 0
  1231  000010                     setFlashLigth_ON@Freq:
  1232                           	callstack 0
  1233  000010                     sm_restart@psm:
  1234                           	callstack 0
  1235  000010                     sm_get_current_state@psm:
  1236                           	callstack 0
  1237  000010                     ___wmul@multiplier:
  1238                           	callstack 0
  1239  000010                     ___lwdiv@dividend:
  1240                           	callstack 0
  1241  000010                     memcpy@d1:
  1242                           	callstack 0
  1243  000010                     calculateMean@meanValue:
  1244                           	callstack 0
  1245  000010                     ___lldiv@dividend:
  1246                           	callstack 0
  1247  000010                     write_eusartparser@package:
  1248                           	callstack 0
  1249                           
  1250                           ; 7 bytes @ 0xF
  1251  000010                     	ds	1
  1252  000011                     ?_read_package:
  1253                           	callstack 0
  1254  000011                     I2C1_Open@returnValue:
  1255                           	callstack 0
  1256  000011                     VerifyElectricalBrake@actualState:
  1257                           	callstack 0
  1258  000011                     ___lbdiv@dividend:
  1259                           	callstack 0
  1260  000011                     ___lbmod@dividend:
  1261                           	callstack 0
  1262  000011                     SetSegmentValueIntermitent@time:
  1263                           	callstack 0
  1264  000011                     setRGB_ON@Freq:
  1265                           	callstack 0
  1266  000011                     write_package@package:
  1267                           	callstack 0
  1268                           
  1269                           ; 7 bytes @ 0x10
  1270  000011                     	ds	1
  1271  000012                     ??_TMR1_Initialize:
  1272  000012                     ??_ControlMotor:
  1273  000012                     ??_sumEnergyADC:
  1274  000012                     ??_DecCHK:
  1275  000012                     SetSegmentValueLearn@direction:
  1276                           	callstack 0
  1277  000012                     ___lbdiv@counter:
  1278                           	callstack 0
  1279  000012                     ___lbmod@counter:
  1280                           	callstack 0
  1281  000012                     I2C1_SetBuffer@bufferSize:
  1282                           	callstack 0
  1283  000012                     I2C1_SetCallback@ptr:
  1284                           	callstack 0
  1285  000012                     sm_init@psm:
  1286                           	callstack 0
  1287  000012                     sm_send_event@psm:
  1288                           	callstack 0
  1289  000012                     ___wmul@multiplicand:
  1290                           	callstack 0
  1291  000012                     ___lwdiv@divisor:
  1292                           	callstack 0
  1293  000012                     memcpy@s1:
  1294                           	callstack 0
  1295                           
  1296                           ; 2 bytes @ 0x11
  1297  000012                     	ds	1
  1298  000013                     ??_setRGB_ON:
  1299  000013                     SetSegmentValueIntermitent@d1:
  1300                           	callstack 0
  1301  000013                     GetMotorPower@defineatraso:
  1302                           	callstack 0
  1303  000013                     ___lbdiv@quotient:
  1304                           	callstack 0
  1305  000013                     ___lbmod@rem:
  1306                           	callstack 0
  1307                           
  1308                           ; 1 bytes @ 0x12
  1309  000013                     	ds	1
  1310  000014                     ??_InitSoftStop:
  1311  000014                     ??_InitSoftStart:
  1312  000014                     ??_sumHIST:
  1313  000014                     ?___awdiv:
  1314                           	callstack 0
  1315  000014                     I2C1_SetCallback@idx:
  1316                           	callstack 0
  1317  000014                     sumEnergyADC@sumE:
  1318                           	callstack 0
  1319  000014                     sm_init@initial_state:
  1320                           	callstack 0
  1321  000014                     sm_send_event@event:
  1322                           	callstack 0
  1323  000014                     ___wmul@product:
  1324                           	callstack 0
  1325  000014                     ___awdiv@dividend:
  1326                           	callstack 0
  1327  000014                     ___lwdiv@quotient:
  1328                           	callstack 0
  1329  000014                     memcpy@n:
  1330                           	callstack 0
  1331  000014                     calculateMean@newValue:
  1332                           	callstack 0
  1333  000014                     ___lldiv@divisor:
  1334                           	callstack 0
  1335                           
  1336                           ; 4 bytes @ 0x13
  1337  000014                     	ds	1
  1338  000015                     setRGB_ON@RGBLigth:
  1339                           	callstack 0
  1340  000015                     I2C1_SetDataCompleteCallback@cb:
  1341                           	callstack 0
  1342  000015                     I2C1_SetAddressNackCallback@cb:
  1343                           	callstack 0
  1344                           
  1345                           ; 2 bytes @ 0x14
  1346  000015                     	ds	1
  1347  000016                     ?_getHopCode:
  1348                           	callstack 0
  1349  000016                     ?_getCurrentComparator:
  1350                           	callstack 0
  1351  000016                     sm_init@hist_mode:
  1352                           	callstack 0
  1353  000016                     ___lwdiv@counter:
  1354                           	callstack 0
  1355  000016                     memcpy@tmp:
  1356                           	callstack 0
  1357  000016                     sumEnergyADC@auxValue:
  1358                           	callstack 0
  1359  000016                     getHopCode@data:
  1360                           	callstack 0
  1361  000016                     ___awdiv@divisor:
  1362                           	callstack 0
  1363                           
  1364                           ; 2 bytes @ 0x15
  1365  000016                     	ds	1
  1366  000017                     ??_write_eusartparser:
  1367  000017                     refreshADCZeroOffset@i:
  1368                           	callstack 0
  1369  000017                     I2C1_SetDataCompleteCallback@ptr:
  1370                           	callstack 0
  1371  000017                     I2C1_SetAddressNackCallback@ptr:
  1372                           	callstack 0
  1373  000017                     memcpy@d:
  1374                           	callstack 0
  1375                           
  1376                           ; 2 bytes @ 0x16
  1377  000017                     	ds	1
  1378  000018                     ??_getHopCode:
  1379  000018                     ??_calculateMean:
  1380  000018                     ??_OpenWalkOrder:
  1381  000018                     sumEnergyADC@i:
  1382                           	callstack 0
  1383  000018                     ControlMotor@stateMotor:
  1384                           	callstack 0
  1385  000018                     read_eusartparser@package:
  1386                           	callstack 0
  1387  000018                     ___awdiv@counter:
  1388                           	callstack 0
  1389  000018                     refreshADCZeroOffset@media:
  1390                           	callstack 0
  1391  000018                     sumHIST@max:
  1392                           	callstack 0
  1393  000018                     ___lldiv@quotient:
  1394                           	callstack 0
  1395  000018                     read_package@package:
  1396                           	callstack 0
  1397                           
  1398                           ; 7 bytes @ 0x17
  1399  000018                     	ds	1
  1400  000019                     ??_read_eusartparser:
  1401  000019                     ___awdiv@sign:
  1402                           	callstack 0
  1403  000019                     wr1RegCompleteHandler@p:
  1404                           	callstack 0
  1405  000019                     rd1RegCompleteHandler@p:
  1406                           	callstack 0
  1407  000019                     rd2RegCompleteHandler@p:
  1408                           	callstack 0
  1409  000019                     wr2RegCompleteHandler@p:
  1410                           	callstack 0
  1411  000019                     rdBlkRegCompleteHandler@p:
  1412                           	callstack 0
  1413  000019                     rd1RegCompleteHandler@i2c1_master_example$F500@ptr:
  1414                           	callstack 0
  1415  000019                     rd2RegCompleteHandler@i2c1_master_example$F511@ptr:
  1416                           	callstack 0
  1417  000019                     wr1RegCompleteHandler@i2c1_master_example$F517@ptr:
  1418                           	callstack 0
  1419  000019                     wr2RegCompleteHandler@i2c1_master_example$F523@ptr:
  1420                           	callstack 0
  1421  000019                     rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr:
  1422                           	callstack 0
  1423  000019                     I2C1_CallbackReturnReset@funPtr:
  1424                           	callstack 0
  1425  000019                     memcpy@s:
  1426                           	callstack 0
  1427                           
  1428                           ; 2 bytes @ 0x18
  1429  000019                     	ds	1
  1430  00001A                     ??_getCurrentComparator:
  1431  00001A                     sumHIST@min:
  1432                           	callstack 0
  1433  00001A                     OpenWalkOrder@diffTime:
  1434                           	callstack 0
  1435  00001A                     ___awdiv@quotient:
  1436                           	callstack 0
  1437                           
  1438                           ; 2 bytes @ 0x19
  1439  00001A                     	ds	1
  1440  00001B                     ??_I2C1_DO_TX:
  1441  00001B                     ??_I2C1_DO_RX:
  1442  00001B                     ??_I2C1_DO_TX_EMPTY:
  1443  00001B                     ??_I2C1_DO_ADDRESS_NACK:
  1444  00001B                     getSerialCmd@serial:
  1445                           	callstack 0
  1446  00001B                     Decrypt@packet:
  1447                           	callstack 0
  1448                           
  1449                           ; 2 bytes @ 0x1A
  1450  00001B                     	ds	1
  1451  00001C                     getSerialCmd@temp:
  1452                           	callstack 0
  1453  00001C                     SetSegmentValueMain@d2:
  1454                           	callstack 0
  1455  00001C                     SetSegmentValue@d2:
  1456                           	callstack 0
  1457  00001C                     SetSegmentValueIntermitentMain@d2:
  1458                           	callstack 0
  1459  00001C                     ___lldiv@counter:
  1460                           	callstack 0
  1461  00001C                     sumHIST@sumH:
  1462                           	callstack 0
  1463                           
  1464                           ; 4 bytes @ 0x1B
  1465  00001C                     	ds	1
  1466  00001D                     ??_I2C1_MasterFsm:
  1467  00001D                     ?___lmul:
  1468                           	callstack 0
  1469  00001D                     Decrypt@key:
  1470                           	callstack 0
  1471  00001D                     SetSegmentValueMain@d1:
  1472                           	callstack 0
  1473  00001D                     SetSegmentValue@d1:
  1474                           	callstack 0
  1475  00001D                     SetSegmentValueIntermitentMain@time:
  1476                           	callstack 0
  1477  00001D                     ___lmul@multiplier:
  1478                           	callstack 0
  1479                           
  1480                           ; 4 bytes @ 0x1C
  1481  00001D                     	ds	1
  1482  00001E                     Decrypt@i:
  1483                           	callstack 0
  1484                           
  1485                           ; 1 bytes @ 0x1D
  1486  00001E                     	ds	1
  1487  00001F                     Decrypt@j:
  1488                           	callstack 0
  1489  00001F                     SetSegmentValueIntermitentMain@d1:
  1490                           	callstack 0
  1491  00001F                     write_eusartparser@debug:
  1492                           	callstack 0
  1493                           
  1494                           ; 2 bytes @ 0x1E
  1495  00001F                     	ds	1
  1496  000020                     ??_load_New_Menu:
  1497  000020                     ??_controlSaveRemote:
  1498  000020                     I2C1_MasterOperation@read:
  1499                           	callstack 0
  1500  000020                     sumHIST@i:
  1501                           	callstack 0
  1502  000020                     Decrypt@p:
  1503                           	callstack 0
  1504  000020                     actionZone_Closed@securityOpening:
  1505                           	callstack 0
  1506  000020                     actionZone_Opened@securityClosing:
  1507                           	callstack 0
  1508  000020                     getCurrentComparator@tempOffset:
  1509                           	callstack 0
  1510  000020                     getHopCode@tempHop:
  1511                           	callstack 0
  1512                           
  1513                           ; 2 bytes @ 0x1F
  1514  000020                     	ds	1
  1515  000021                     I2C1_MasterOperation@returnValue:
  1516                           	callstack 0
  1517  000021                     Decrypt@aux:
  1518                           	callstack 0
  1519  000021                     actionZone_Closed@typeOpenOrder:
  1520                           	callstack 0
  1521  000021                     actionZone_Opened@typeOpenOrder:
  1522                           	callstack 0
  1523  000021                     write_eusartparser@debug2:
  1524                           	callstack 0
  1525  000021                     ___lmul@multiplicand:
  1526                           	callstack 0
  1527                           
  1528                           ; 4 bytes @ 0x20
  1529  000021                     	ds	1
  1530  000022                     I2C1_Read1ByteRegister@reg:
  1531                           	callstack 0
  1532  000022                     getCurrentComparator@x:
  1533                           	callstack 0
  1534  000022                     getHopCode@tempPos:
  1535                           	callstack 0
  1536  000022                     load_New_Menu@Menu:
  1537                           	callstack 0
  1538  000022                     i2c_writeNBytes@reg:
  1539                           	callstack 0
  1540  000022                     i2c_readDataBlock@reg:
  1541                           	callstack 0
  1542  000022                     Decrypt@Buffer:
  1543                           	callstack 0
  1544                           
  1545                           ; 4 bytes @ 0x21
  1546  000022                     	ds	1
  1547  000023                     ??_ControlCurrent:
  1548  000023                     I2C1_Read1ByteRegister@address:
  1549                           	callstack 0
  1550  000023                     getHopCode@i:
  1551                           	callstack 0
  1552  000023                     load_New_Menu@i:
  1553                           	callstack 0
  1554                           
  1555                           ; 1 bytes @ 0x22
  1556  000023                     	ds	1
  1557  000024                     i2c_writeNBytes@data:
  1558                           	callstack 0
  1559  000024                     I2C1_Read1ByteRegister@returnValue:
  1560                           	callstack 0
  1561  000024                     i2c_readDataBlock@data:
  1562                           	callstack 0
  1563  000024                     HopCHK@data:
  1564                           	callstack 0
  1565                           
  1566                           ; 2 bytes @ 0x23
  1567  000024                     	ds	1
  1568  000025                     i2c_writeNBytes@len:
  1569                           	callstack 0
  1570  000025                     ___lmul@product:
  1571                           	callstack 0
  1572                           
  1573                           ; 4 bytes @ 0x24
  1574  000025                     	ds	1
  1575  000026                     i2c_readDataBlock@len:
  1576                           	callstack 0
  1577  000026                     NormalKeyGen@serial:
  1578                           	callstack 0
  1579  000026                     HopCHK@hopDiff:
  1580                           	callstack 0
  1581                           
  1582                           ; 2 bytes @ 0x25
  1583  000026                     	ds	1
  1584  000027                     ??_i2c_writeNBytes:
  1585                           
  1586                           ; 1 bytes @ 0x26
  1587  000027                     	ds	1
  1588  000028                     ??_i2c_readDataBlock:
  1589  000028                     NormalKeyGen@HOPtemp:
  1590                           	callstack 0
  1591  000028                     i2c_writeNBytes@dat:
  1592                           	callstack 0
  1593                           
  1594                           ; 17 bytes @ 0x27
  1595  000028                     	ds	1
  1596  000029                     ?_getTimeDecelaration:
  1597                           	callstack 0
  1598  000029                     i2c_readDataBlock@address:
  1599                           	callstack 0
  1600                           
  1601                           ; 1 bytes @ 0x28
  1602  000029                     	ds	1
  1603  00002A                     i2c_readDataBlock@d:
  1604                           	callstack 0
  1605                           
  1606                           ; 4 bytes @ 0x29
  1607  00002A                     	ds	2
  1608  00002C                     NormalKeyGen@SKEYtemp:
  1609                           	callstack 0
  1610                           
  1611                           ; 4 bytes @ 0x2B
  1612  00002C                     	ds	1
  1613  00002D                     ??_getTimeDecelaration:
  1614                           
  1615                           ; 1 bytes @ 0x2C
  1616  00002D                     	ds	1
  1617  00002E                     cmdMemoryIsEmpty@position:
  1618                           	callstack 0
  1619  00002E                     validateRemoteSerialNumber@serial:
  1620                           	callstack 0
  1621                           
  1622                           ; 4 bytes @ 0x2D
  1623  00002E                     	ds	1
  1624  00002F                     ??_cmdMemoryIsEmpty:
  1625                           
  1626                           ; 1 bytes @ 0x2E
  1627  00002F                     	ds	1
  1628  000030                     NormalKeyGen@Buffer:
  1629                           	callstack 0
  1630                           
  1631                           ; 8 bytes @ 0x2F
  1632  000030                     	ds	1
  1633  000031                     cmdMemoryIsEmpty@cmdType:
  1634                           	callstack 0
  1635  000031                     getTimeDecelaration@state:
  1636                           	callstack 0
  1637                           
  1638                           ; 1 bytes @ 0x30
  1639  000031                     	ds	1
  1640  000032                     ??_setPositionInvertionInOpening:
  1641  000032                     ??_getStateOpenPosition:
  1642  000032                     validateRemoteSerialNumber@VerifyOnlySerial:
  1643                           	callstack 0
  1644  000032                     actionZone_Closing@securityClosing:
  1645                           	callstack 0
  1646  000032                     cmdMemoryIsEmpty@tempSerial:
  1647                           	callstack 0
  1648                           
  1649                           ; 4 bytes @ 0x31
  1650  000032                     	ds	1
  1651  000033                     actionZone_Closing@typeOpenOrder:
  1652                           	callstack 0
  1653  000033                     validateRemoteSerialNumber@position:
  1654                           	callstack 0
  1655                           
  1656                           ; 2 bytes @ 0x32
  1657  000033                     	ds	2
  1658  000035                     validateRemoteSerialNumber@mask:
  1659                           	callstack 0
  1660                           
  1661                           ; 4 bytes @ 0x34
  1662  000035                     	ds	3
  1663  000038                     keeloq_classic_decrypt_packet@data:
  1664                           	callstack 0
  1665                           
  1666                           ; 2 bytes @ 0x37
  1667  000038                     	ds	1
  1668  000039                     i2c_writeNBytes@address:
  1669                           	callstack 0
  1670  000039                     validateRemoteSerialNumber@j:
  1671                           	callstack 0
  1672                           
  1673                           ; 1 bytes @ 0x38
  1674  000039                     	ds	1
  1675  00003A                     validateRemoteSerialNumber@i:
  1676                           	callstack 0
  1677  00003A                     saveNewSerial@cmdType:
  1678                           	callstack 0
  1679  00003A                     RemoveSerial@position:
  1680                           	callstack 0
  1681  00003A                     ResetDefaultMemory@type:
  1682                           	callstack 0
  1683  00003A                     checkNVM_VarSystem@saveParam:
  1684                           	callstack 0
  1685  00003A                     sm_execute_ControlLearning@typeOpenOrder:
  1686                           	callstack 0
  1687  00003A                     setValueToEdit@ParameterSelected:
  1688                           	callstack 0
  1689  00003A                     eusartparser@package:
  1690                           	callstack 0
  1691                           
  1692                           ; 1 bytes @ 0x39
  1693  00003A                     	ds	1
  1694  00003B                     
  1695                           ; 1 bytes @ 0x3A
  1696 ;;
  1697 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1698 ;;
  1699 ;; *************** function _main *****************
  1700 ;; Defined at:
  1701 ;;		line 63 in file "main_MC50.c"
  1702 ;; Parameters:    Size  Location     Type
  1703 ;;		None
  1704 ;; Auto vars:     Size  Location     Type
  1705 ;;  package         7   25[BANK0 ] struct package_t
  1706 ;; Return value:  Size  Location     Type
  1707 ;;                  1    wreg      void 
  1708 ;; Registers used:
  1709 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  1710 ;; Tracked objects:
  1711 ;;		On entry : 0/0
  1712 ;;		On exit  : 3F/1
  1713 ;;		Unchanged: 0/0
  1714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1716 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1718 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1719 ;;Total ram usage:        7 bytes
  1720 ;; Hardware stack levels required when called: 17
  1721 ;; This function calls:
  1722 ;;		_ControlCounterMoves
  1723 ;;		_ControlCurrent
  1724 ;;		_ControlInputs
  1725 ;;		_ControlLights
  1726 ;;		_ControlMotor
  1727 ;;		_EUSART1_is_rx_ready
  1728 ;;		_InitReceiver
  1729 ;;		_SYSTEM_Initialize
  1730 ;;		_SetSegmentValue
  1731 ;;		_ShowVersion
  1732 ;;		_WWDT_SoftEnable
  1733 ;;		_WWDT_TimerClear
  1734 ;;		_controlVelocity
  1735 ;;		_eusartparser
  1736 ;;		_getKeyPressed
  1737 ;;		_loadNVM_VarSystem
  1738 ;;		_readInputs
  1739 ;;		_readRFButtons
  1740 ;;		_read_package
  1741 ;;		_readbutton
  1742 ;;		_sm_execute_ControlGate
  1743 ;;		_sm_execute_main
  1744 ;;		_sm_init
  1745 ;; This function is called by:
  1746 ;;		Startup code after reset
  1747 ;; This function uses a non-reentrant model
  1748 ;;
  1749                           
  1750                           	psect	text0
  1751  005CF0                     __ptext0:
  1752                           	callstack 0
  1753  005CF0                     _main:
  1754                           	callstack 14
  1755                           
  1756                           ;main_MC50.c: 70:     dispStruct.display_grp.value_display1=dMinus;
  1757                           
  1758                           ;incstack = 0
  1759  005CF0  0E18               	movlw	24
  1760  005CF2  0100               	movlb	0	; () banked
  1761  005CF4  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  1762                           
  1763                           ;main_MC50.c: 71:     dispStruct.display_grp.value_display1=dMinus;
  1764  005CF6  0E18               	movlw	24
  1765  005CF8  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  1766                           
  1767                           ;main_MC50.c: 72:     dispStruct.intermitentFreq=0;
  1768  005CFA  0E00               	movlw	0
  1769  005CFC  6F76               	movwf	(_dispStruct+4)& (0+255),b	;volatile
  1770  005CFE  0E00               	movlw	0
  1771  005D00  6F75               	movwf	(_dispStruct+3)& (0+255),b	;volatile
  1772                           
  1773                           ;main_MC50.c: 73:     dispStruct.upFase=1;
  1774  005D02  0E01               	movlw	1
  1775  005D04  6F77               	movwf	(_dispStruct+5)& (0+255),b	;volatile
  1776                           
  1777                           ; BSR set to: 0
  1778                           ;main_MC50.c: 76:     SYSTEM_Initialize();
  1779  005D06  EC8A  F045         	call	_SYSTEM_Initialize	;wreg free
  1780                           
  1781                           ; BSR set to: 14
  1782                           ;main_MC50.c: 77:     WWDT_SoftEnable();
  1783  005D0A  EC4A  F049         	call	_WWDT_SoftEnable	;wreg free
  1784                           
  1785                           ; BSR set to: 14
  1786                           ;main_MC50.c: 80:       (INTCONbits.GIE = 1);
  1787  005D0E  8EF2               	bsf	242,7,c	;volatile
  1788                           
  1789                           ; BSR set to: 14
  1790                           ;main_MC50.c: 83:      (INTCONbits.PEIE = 1);
  1791  005D10  8CF2               	bsf	242,6,c	;volatile
  1792                           
  1793                           ; BSR set to: 14
  1794                           ;main_MC50.c: 86:     IOCBP3=1;
  1795  005D12  010F               	movlb	15	; () banked
  1796  005D14  8714               	bsf	20,3,b	;volatile
  1797                           
  1798                           ; BSR set to: 15
  1799                           ;main_MC50.c: 87:     IOCBN3=1;
  1800  005D16  8713               	bsf	19,3,b	;volatile
  1801                           
  1802                           ; BSR set to: 15
  1803                           ;main_MC50.c: 94:     InitReceiver();
  1804  005D18  ECD4  F047         	call	_InitReceiver	;wreg free
  1805                           
  1806                           ; BSR set to: 0
  1807                           ;main_MC50.c: 95:     loadNVM_VarSystem();
  1808  005D1C  EC31  F031         	call	_loadNVM_VarSystem	;wreg free
  1809                           
  1810                           ;main_MC50.c: 97:     WWDT_TimerClear();
  1811  005D20  ECAA  F047         	call	_WWDT_TimerClear	;wreg free
  1812                           
  1813                           ;main_MC50.c: 99:     SetSegmentValue(dMinus,dMinus);
  1814  005D24  0E18               	movlw	24
  1815  005D26  6E1C               	movwf	SetSegmentValue@d2^0,c
  1816  005D28  0E18               	movlw	24
  1817  005D2A  ECFB  F047         	call	_SetSegmentValue
  1818                           
  1819                           ; BSR set to: 0
  1820                           ;main_MC50.c: 100:     ts_system.ts_TimeSlot1ms = ( 100/50);
  1821  005D2E  0E02               	movlw	2
  1822  005D30  0101               	movlb	1	; () banked
  1823  005D32  6F9C               	movwf	(_ts_system+2)& (0+255),b	;volatile
  1824                           
  1825                           ;main_MC50.c: 101:     while ( ts_system.ts_TimeSlot1ms > 0 )
  1826  005D34  D00B               	goto	l23301
  1827  005D36                     l23291:
  1828                           
  1829                           ; BSR set to: 1
  1830                           ;main_MC50.c: 102:     {;main_MC50.c: 103:         if ( ts_system.ts_TimeSlotMain<=0 )
  1831  005D36  519D               	movf	(_ts_system+3)& (0+255),w,b	;volatile
  1832  005D38  A4D8               	btfss	status,2,c
  1833  005D3A  D008               	goto	l23301
  1834                           
  1835                           ; BSR set to: 1
  1836                           ;main_MC50.c: 104:         {;main_MC50.c: 105:             WWDT_TimerClear();
  1837  005D3C  ECAA  F047         	call	_WWDT_TimerClear	;wreg free
  1838                           
  1839                           ;main_MC50.c: 106:             ts_system.ts_TimeSlotMain = 50;
  1840  005D40  0E32               	movlw	50
  1841  005D42  0101               	movlb	1	; () banked
  1842  005D44  6F9D               	movwf	(_ts_system+3)& (0+255),b	;volatile
  1843                           
  1844                           ; BSR set to: 1
  1845                           ;main_MC50.c: 108:             ts_system.ts_TimeSlot1ms--;
  1846  005D46  079C               	decf	(_ts_system+2)& (0+255),f,b	;volatile
  1847                           
  1848                           ; BSR set to: 1
  1849                           ;main_MC50.c: 109:             readInputs();
  1850  005D48  ECFD  F033         	call	_readInputs	;wreg free
  1851  005D4C                     l23301:
  1852                           
  1853                           ;main_MC50.c: 101:     while ( ts_system.ts_TimeSlot1ms > 0 )
  1854  005D4C  0101               	movlb	1	; () banked
  1855  005D4E  519C               	movf	(_ts_system+2)& (0+255),w,b	;volatile
  1856  005D50  A4D8               	btfss	status,2,c
  1857  005D52  D7F1               	goto	l23291
  1858                           
  1859                           ; BSR set to: 1
  1860                           ;main_MC50.c: 117:     sm_init(&menuConfiguration_stateMachine,st_MainMenu,HIST_NONE);
  1861  005D54  0EBD               	movlw	low _menuConfiguration_stateMachine
  1862  005D56  6E12               	movwf	sm_init@psm^0,c
  1863  005D58  0E02               	movlw	high _menuConfiguration_stateMachine
  1864  005D5A  6E13               	movwf	(sm_init@psm+1)^0,c
  1865  005D5C  0E00               	movlw	0
  1866  005D5E  6E15               	movwf	(sm_init@initial_state+1)^0,c
  1867  005D60  0E00               	movlw	0
  1868  005D62  6E14               	movwf	sm_init@initial_state^0,c
  1869  005D64  0E00               	movlw	0
  1870  005D66  6E16               	movwf	sm_init@hist_mode^0,c
  1871  005D68  EC0C  F042         	call	_sm_init	;wreg free
  1872                           
  1873                           ;main_MC50.c: 118:     sm_init(&main_stateMachine,st_standBy,HIST_NONE);
  1874  005D6C  0EED               	movlw	low _main_stateMachine
  1875  005D6E  6E12               	movwf	sm_init@psm^0,c
  1876  005D70  0E01               	movlw	high _main_stateMachine
  1877  005D72  6E13               	movwf	(sm_init@psm+1)^0,c
  1878  005D74  0E00               	movlw	0
  1879  005D76  6E15               	movwf	(sm_init@initial_state+1)^0,c
  1880  005D78  0E00               	movlw	0
  1881  005D7A  6E14               	movwf	sm_init@initial_state^0,c
  1882  005D7C  0E00               	movlw	0
  1883  005D7E  6E16               	movwf	sm_init@hist_mode^0,c
  1884  005D80  EC0C  F042         	call	_sm_init	;wreg free
  1885                           
  1886                           ;main_MC50.c: 119:     sm_init(&controlGate_stateMachine,st_Idle,HIST_NONE);
  1887  005D84  0EE2               	movlw	low _controlGate_stateMachine
  1888  005D86  6E12               	movwf	sm_init@psm^0,c
  1889  005D88  0E01               	movlw	high _controlGate_stateMachine
  1890  005D8A  6E13               	movwf	(sm_init@psm+1)^0,c
  1891  005D8C  0E00               	movlw	0
  1892  005D8E  6E15               	movwf	(sm_init@initial_state+1)^0,c
  1893  005D90  0E00               	movlw	0
  1894  005D92  6E14               	movwf	sm_init@initial_state^0,c
  1895  005D94  0E00               	movlw	0
  1896  005D96  6E16               	movwf	sm_init@hist_mode^0,c
  1897  005D98  EC0C  F042         	call	_sm_init	;wreg free
  1898                           
  1899                           ;main_MC50.c: 120:     sm_init(&controlLearning_stateMachine,st_InitLearning,HIST_NONE);
  1900  005D9C  0EB2               	movlw	low _controlLearning_stateMachine
  1901  005D9E  6E12               	movwf	sm_init@psm^0,c
  1902  005DA0  0E02               	movlw	high _controlLearning_stateMachine
  1903  005DA2  6E13               	movwf	(sm_init@psm+1)^0,c
  1904  005DA4  0E00               	movlw	0
  1905  005DA6  6E15               	movwf	(sm_init@initial_state+1)^0,c
  1906  005DA8  0E00               	movlw	0
  1907  005DAA  6E14               	movwf	sm_init@initial_state^0,c
  1908  005DAC  0E00               	movlw	0
  1909  005DAE  6E16               	movwf	sm_init@hist_mode^0,c
  1910  005DB0  EC0C  F042         	call	_sm_init	;wreg free
  1911                           
  1912                           ;main_MC50.c: 122:     ts_system.Debug_TS=(1000/50);
  1913  005DB4  0E00               	movlw	0
  1914  005DB6  0101               	movlb	1	; () banked
  1915  005DB8  6FA3               	movwf	(_ts_system+9)& (0+255),b	;volatile
  1916  005DBA  0E14               	movlw	20
  1917  005DBC  6FA2               	movwf	(_ts_system+8)& (0+255),b	;volatile
  1918                           
  1919                           ; BSR set to: 1
  1920                           ;main_MC50.c: 124:     var_sys.ADCZeroOffset = 510;
  1921  005DBE  0E01               	movlw	1
  1922  005DC0  6F4C               	movwf	(_var_sys+76)& (0+255),b	;volatile
  1923  005DC2  0EFE               	movlw	254
  1924  005DC4  6F4B               	movwf	(_var_sys+75)& (0+255),b	;volatile
  1925                           
  1926                           ; BSR set to: 1
  1927                           ;main_MC50.c: 125:     ts_system.TimeStopADCZeroOffsetCalc = (5*(1000/50));
  1928  005DC6  0E00               	movlw	0
  1929  005DC8  6FD9               	movwf	(_ts_system+63)& (0+255),b	;volatile
  1930  005DCA  0E64               	movlw	100
  1931  005DCC  6FD8               	movwf	(_ts_system+62)& (0+255),b	;volatile
  1932                           
  1933                           ; BSR set to: 1
  1934                           ;main_MC50.c: 126:     ts_system.TimeStopElectricBrake = 0;
  1935  005DCE  0E00               	movlw	0
  1936  005DD0  6FDB               	movwf	(_ts_system+65)& (0+255),b	;volatile
  1937  005DD2  0E00               	movlw	0
  1938  005DD4  6FDA               	movwf	(_ts_system+64)& (0+255),b	;volatile
  1939                           
  1940                           ; BSR set to: 1
  1941                           ;main_MC50.c: 129:     var_sys.StateMotor = Stopped;
  1942  005DD6  0E00               	movlw	0
  1943  005DD8  6F00               	movwf	_var_sys& (0+255),b	;volatile
  1944  005DDA                     l23315:
  1945                           
  1946                           ;main_MC50.c: 136:     {;main_MC50.c: 140:         struct package_t package;;main_MC50.c
      +                          : 141:         if(EUSART1_is_rx_ready()){
  1947  005DDA  EC9A  F048         	call	_EUSART1_is_rx_ready	;wreg free
  1948  005DDE  0900               	iorlw	0
  1949  005DE0  B4D8               	btfsc	status,2,c
  1950  005DE2  D00D               	goto	l23321
  1951                           
  1952                           ; BSR set to: 0
  1953                           ;main_MC50.c: 142:             package=read_package();
  1954  005DE4  ECE0  F042         	call	_read_package	;wreg free
  1955  005DE8  EE20  F0F1         	lfsr	2,main@package
  1956  005DEC  0E06               	movlw	6
  1957  005DEE                     u28851:
  1958  005DEE  CFEB FFDB          	movff	plusw0,plusw2
  1959  005DF2  06E8               	decf	wreg,f,c
  1960  005DF4  E2FC               	bc	u28851
  1961                           
  1962                           ; BSR set to: 14
  1963                           ;main_MC50.c: 143:             eusartparser(&package);
  1964  005DF6  0EF1               	movlw	low main@package
  1965  005DF8  6E3A               	movwf	eusartparser@package^0,c
  1966  005DFA  EC43  F037         	call	_eusartparser	;wreg free
  1967  005DFE                     l23321:
  1968                           
  1969                           ;main_MC50.c: 147:         if ( ts_system.ts_TimeSlotMain<=0 )
  1970  005DFE  0101               	movlb	1	; () banked
  1971  005E00  519D               	movf	(_ts_system+3)& (0+255),w,b	;volatile
  1972  005E02  A4D8               	btfss	status,2,c
  1973  005E04  D7EA               	goto	l23315
  1974                           
  1975                           ; BSR set to: 1
  1976                           ;main_MC50.c: 148:         {;main_MC50.c: 149:              ts_system.ts_TimeSlotMain = 
      +                          50;
  1977  005E06  0E32               	movlw	50
  1978  005E08  6F9D               	movwf	(_ts_system+3)& (0+255),b	;volatile
  1979                           
  1980                           ; BSR set to: 1
  1981                           ;main_MC50.c: 150:             WWDT_TimerClear();
  1982  005E0A  ECAA  F047         	call	_WWDT_TimerClear	;wreg free
  1983                           
  1984                           ;main_MC50.c: 152:             if(var_sys.StateVersion<4)
  1985  005E0E  0E04               	movlw	4
  1986  005E10  0101               	movlb	1	; () banked
  1987  005E12  6149               	cpfslt	(_var_sys+73)& (0+255),b	;volatile
  1988  005E14  D003               	goto	l23331
  1989                           
  1990                           ; BSR set to: 1
  1991                           ;main_MC50.c: 154:             {;main_MC50.c: 155:                 ShowVersion();
  1992  005E16  EC96  F040         	call	_ShowVersion	;wreg free
  1993                           
  1994                           ;main_MC50.c: 156:             }
  1995  005E1A  D7DF               	goto	l23315
  1996  005E1C                     l23331:
  1997                           
  1998                           ; BSR set to: 1
  1999                           ;main_MC50.c: 158:             {;main_MC50.c: 160:                 readbutton();
  2000  005E1C  EC2C  F040         	call	_readbutton	;wreg free
  2001                           
  2002                           ; BSR set to: 1
  2003                           ;main_MC50.c: 162:                 readRFButtons();
  2004  005E20  ECE8  F02C         	call	_readRFButtons	;wreg free
  2005                           
  2006                           ;main_MC50.c: 163:                lastKey=getKeyPressed();
  2007  005E24  EC2D  F048         	call	_getKeyPressed	;wreg free
  2008  005E28  0101               	movlb	1	; () banked
  2009  005E2A  6F94               	movwf	_lastKey& (0+255),b
  2010                           
  2011                           ; BSR set to: 1
  2012                           ;main_MC50.c: 165:                 readInputs();
  2013  005E2C  ECFD  F033         	call	_readInputs	;wreg free
  2014                           
  2015                           ;main_MC50.c: 166:                 ControlInputs();
  2016  005E30  EC5C  F032         	call	_ControlInputs	;wreg free
  2017                           
  2018                           ;main_MC50.c: 167:                 ControlCurrent();
  2019  005E34  EC39  F02F         	call	_ControlCurrent	;wreg free
  2020                           
  2021                           ;main_MC50.c: 168:                 controlVelocity();
  2022  005E38  ECDD  F025         	call	_controlVelocity	;wreg free
  2023                           
  2024                           ;main_MC50.c: 169:                 ControlMotor();
  2025  005E3C  ECA7  F023         	call	_ControlMotor	;wreg free
  2026                           
  2027                           ;main_MC50.c: 170:                 ControlLights();
  2028  005E40  ECEF  F01C         	call	_ControlLights	;wreg free
  2029                           
  2030                           ;main_MC50.c: 171:                 ControlCounterMoves();
  2031  005E44  ECB3  F041         	call	_ControlCounterMoves	;wreg free
  2032                           
  2033                           ;main_MC50.c: 173:                 sm_execute_main(&main_stateMachine);
  2034  005E48  0EED               	movlw	low _main_stateMachine
  2035  005E4A  0100               	movlb	0	; () banked
  2036  005E4C  6FED               	movwf	sm_execute_main@psm& (0+255),b
  2037  005E4E  0E01               	movlw	high _main_stateMachine
  2038  005E50  6FEE               	movwf	(sm_execute_main@psm+1)& (0+255),b
  2039  005E52  EC50  F012         	call	_sm_execute_main	;wreg free
  2040                           
  2041                           ;main_MC50.c: 174:                 sm_execute_ControlGate(&controlGate_stateMachine);
  2042  005E56  0EE2               	movlw	low _controlGate_stateMachine
  2043  005E58  0100               	movlb	0	; () banked
  2044  005E5A  6FE7               	movwf	sm_execute_ControlGate@psm& (0+255),b
  2045  005E5C  0E01               	movlw	high _controlGate_stateMachine
  2046  005E5E  6FE8               	movwf	(sm_execute_ControlGate@psm+1)& (0+255),b
  2047  005E60  EC4A  F01B         	call	_sm_execute_ControlGate	;wreg free
  2048                           
  2049                           ;main_MC50.c: 177:                 if(lastKey!=0xff)
  2050  005E64  0101               	movlb	1	; () banked
  2051  005E66  2994               	incf	_lastKey& (0+255),w,b
  2052  005E68  B4D8               	btfsc	status,2,c
  2053  005E6A  D7B7               	goto	l23315
  2054                           
  2055                           ; BSR set to: 1
  2056                           ;main_MC50.c: 178:                 {;main_MC50.c: 180:                       InitReceive
      +                          r();
  2057  005E6C  ECD4  F047         	call	_InitReceiver	;wreg free
  2058                           
  2059                           ; BSR set to: 1
  2060                           
  2061                           ;main_MC50.c: 185:         }
  2062  005E70  D7B4               	goto	l23315
  2063  005E72                     __end_of_main:
  2064                           	callstack 0
  2065                           
  2066 ;; *************** function _sm_execute_main *****************
  2067 ;; Defined at:
  2068 ;;		line 26 in file "sm_Main_MC50.c"
  2069 ;; Parameters:    Size  Location     Type
  2070 ;;  psm             2   21[BANK0 ] PTR struct .
  2071 ;;		 -> main_stateMachine(11), 
  2072 ;; Auto vars:     Size  Location     Type
  2073 ;;		None
  2074 ;; Return value:  Size  Location     Type
  2075 ;;                  1    wreg      void 
  2076 ;; Registers used:
  2077 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2078 ;; Tracked objects:
  2079 ;;		On entry : 3F/0
  2080 ;;		On exit  : 0/0
  2081 ;;		Unchanged: 0/0
  2082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2083 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2085 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2086 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2087 ;;Total ram usage:        4 bytes
  2088 ;; Hardware stack levels used: 1
  2089 ;; Hardware stack levels required when called: 16
  2090 ;; This function calls:
  2091 ;;		_SetSegmentValueIntermitentMain
  2092 ;;		_SetSegmentValueMain
  2093 ;;		_load_New_Menu
  2094 ;;		_sm_execute_menuConfiguration
  2095 ;;		_sm_send_event
  2096 ;; This function is called by:
  2097 ;;		_main
  2098 ;; This function uses a non-reentrant model
  2099 ;;
  2100                           
  2101                           	psect	text1
  2102  0024A0                     __ptext1:
  2103                           	callstack 0
  2104  0024A0                     _sm_execute_main:
  2105                           	callstack 14
  2106                           
  2107                           ; BSR set to: 0
  2108                           ;sm_Main_MC50.c: 29:     switch((sm_state_Main_t) psm->current_state)
  2109                           
  2110                           ; BSR set to: 1
  2111                           ;incstack = 0
  2112  0024A0  D053               	goto	l22817
  2113  0024A2                     l22793:
  2114                           
  2115                           ; BSR set to: 0
  2116                           ;sm_Main_MC50.c: 32:         {;sm_Main_MC50.c: 33:             if(programmer_enable==0)
  2117  0024A2  5185               	movf	_programmer_enable& (0+255),w,b
  2118  0024A4  A4D8               	btfss	status,2,c
  2119  0024A6  D066               	goto	l22819
  2120                           
  2121                           ; BSR set to: 0
  2122                           ;sm_Main_MC50.c: 34:                 if(psm->last_event==ev_goto_MenuConfig)
  2123  0024A8  EE20 F004          	lfsr	2,4
  2124  0024AC  51ED               	movf	sm_execute_main@psm& (0+255),w,b
  2125  0024AE  26D9               	addwf	fsr2l,f,c
  2126  0024B0  51EE               	movf	(sm_execute_main@psm+1)& (0+255),w,b
  2127  0024B2  22DA               	addwfc	fsr2h,f,c
  2128  0024B4  0E06               	movlw	6
  2129  0024B6  18DE               	xorwf	postinc2,w,c
  2130  0024B8  10DE               	iorwf	postinc2,w,c
  2131  0024BA  A4D8               	btfss	status,2,c
  2132  0024BC  D006               	goto	l22799
  2133  0024BE                     u27850:
  2134                           
  2135                           ; BSR set to: 0
  2136                           ;sm_Main_MC50.c: 35:                 {;sm_Main_MC50.c: 37:                     psm->curr
      +                          ent_state = st_MenuConfiguration;
  2137  0024BE  C0ED  FFD9         	movff	sm_execute_main@psm,fsr2l
  2138  0024C2  C0EE  FFDA         	movff	sm_execute_main@psm+1,fsr2h
  2139  0024C6  0E01               	movlw	1
  2140  0024C8  D01D               	goto	L2
  2141  0024CA                     l22799:
  2142                           
  2143                           ; BSR set to: 0
  2144  0024CA  EE20 F004          	lfsr	2,4
  2145  0024CE  51ED               	movf	sm_execute_main@psm& (0+255),w,b
  2146  0024D0  26D9               	addwf	fsr2l,f,c
  2147  0024D2  51EE               	movf	(sm_execute_main@psm+1)& (0+255),w,b
  2148  0024D4  22DA               	addwfc	fsr2h,f,c
  2149  0024D6  0E11               	movlw	17
  2150  0024D8  18DE               	xorwf	postinc2,w,c
  2151  0024DA  10DE               	iorwf	postinc2,w,c
  2152  0024DC  A4D8               	btfss	status,2,c
  2153  0024DE  D04A               	goto	l22819
  2154                           
  2155                           ; BSR set to: 0
  2156                           ;sm_Main_MC50.c: 40:                 {;sm_Main_MC50.c: 41:                     psm->curr
      +                          ent_state = st_MotorON;
  2157  0024E0  C0ED  FFD9         	movff	sm_execute_main@psm,fsr2l
  2158  0024E4  C0EE  FFDA         	movff	sm_execute_main@psm+1,fsr2h
  2159  0024E8  0E02               	movlw	2
  2160  0024EA  D00C               	goto	L2
  2161  0024EC                     l22803:
  2162                           
  2163                           ; BSR set to: 0
  2164                           ;sm_Main_MC50.c: 46:         {;sm_Main_MC50.c: 47:             if(psm->last_event==ev_go
      +                          to_StandBy)
  2165  0024EC  EE20 F004          	lfsr	2,4
  2166  0024F0  51ED               	movf	sm_execute_main@psm& (0+255),w,b
  2167  0024F2  26D9               	addwf	fsr2l,f,c
  2168  0024F4  51EE               	movf	(sm_execute_main@psm+1)& (0+255),w,b
  2169  0024F6  22DA               	addwfc	fsr2h,f,c
  2170  0024F8  0E07               	movlw	7
  2171  0024FA  18DE               	xorwf	postinc2,w,c
  2172  0024FC  10DE               	iorwf	postinc2,w,c
  2173  0024FE  A4D8               	btfss	status,2,c
  2174  002500  D039               	goto	l22819
  2175  002502  D00F               	goto	u27880
  2176  002504                     L2:
  2177  002504  6EDE               	movwf	postinc2,c
  2178  002506  0E00               	movlw	0
  2179  002508  6EDD               	movwf	postdec2,c
  2180  00250A  D034               	goto	l22819
  2181  00250C                     l22807:
  2182                           
  2183                           ; BSR set to: 0
  2184                           ;sm_Main_MC50.c: 54:         {;sm_Main_MC50.c: 55:             if(psm->last_event==ev_go
      +                          to_StandBy)
  2185  00250C  EE20 F004          	lfsr	2,4
  2186  002510  51ED               	movf	sm_execute_main@psm& (0+255),w,b
  2187  002512  26D9               	addwf	fsr2l,f,c
  2188  002514  51EE               	movf	(sm_execute_main@psm+1)& (0+255),w,b
  2189  002516  22DA               	addwfc	fsr2h,f,c
  2190  002518  0E07               	movlw	7
  2191  00251A  18DE               	xorwf	postinc2,w,c
  2192  00251C  10DE               	iorwf	postinc2,w,c
  2193  00251E  A4D8               	btfss	status,2,c
  2194  002520  D006               	goto	l22811
  2195  002522                     u27880:
  2196                           
  2197                           ; BSR set to: 0
  2198                           ;sm_Main_MC50.c: 56:             {;sm_Main_MC50.c: 57:                 psm->current_stat
      +                          e = st_standBy;
  2199  002522  C0ED  FFD9         	movff	sm_execute_main@psm,fsr2l
  2200  002526  C0EE  FFDA         	movff	sm_execute_main@psm+1,fsr2h
  2201  00252A  0E00               	movlw	0
  2202  00252C  D7EB               	goto	L2
  2203  00252E                     l22811:
  2204                           
  2205                           ; BSR set to: 0
  2206  00252E  EE20 F004          	lfsr	2,4
  2207  002532  51ED               	movf	sm_execute_main@psm& (0+255),w,b
  2208  002534  26D9               	addwf	fsr2l,f,c
  2209  002536  51EE               	movf	(sm_execute_main@psm+1)& (0+255),w,b
  2210  002538  22DA               	addwfc	fsr2h,f,c
  2211  00253A  0E06               	movlw	6
  2212  00253C  18DE               	xorwf	postinc2,w,c
  2213  00253E  10DE               	iorwf	postinc2,w,c
  2214  002540  A4D8               	btfss	status,2,c
  2215  002542  D018               	goto	l22819
  2216  002544  D7BC               	goto	u27850
  2217  002546                     l3048:
  2218                           
  2219                           ; BSR set to: 0
  2220  002546  D7FF               	goto	l3048
  2221  002548                     l22817:
  2222                           
  2223                           ; BSR set to: 0
  2224  002548  C0ED  FFD9         	movff	sm_execute_main@psm,fsr2l
  2225  00254C  C0EE  FFDA         	movff	sm_execute_main@psm+1,fsr2h
  2226  002550  50DF               	movf	indf2,w,c
  2227  002552  6FEF               	movwf	??_sm_execute_main& (0+255),b
  2228  002554  6BF0               	clrf	(??_sm_execute_main+1)& (0+255),b
  2229                           
  2230                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2231                           ; Switch size 1, requested type "simple"
  2232                           ; Number of cases is 1, Range of values is 0 to 0
  2233                           ; switch strategies available:
  2234                           ; Name         Instructions Cycles
  2235                           ; simple_byte            4     3 (average)
  2236                           ;	Chosen strategy is simple_byte
  2237  002556  51F0               	movf	(??_sm_execute_main+1)& (0+255),w,b
  2238  002558  0A00               	xorlw	0	; case 0
  2239  00255A  A4D8               	btfss	status,2,c
  2240  00255C  D7F4               	goto	l3048
  2241                           
  2242                           ; BSR set to: 0
  2243                           ; Switch size 1, requested type "simple"
  2244                           ; Number of cases is 3, Range of values is 0 to 2
  2245                           ; switch strategies available:
  2246                           ; Name         Instructions Cycles
  2247                           ; simple_byte           10     6 (average)
  2248                           ;	Chosen strategy is simple_byte
  2249  00255E  51EF               	movf	??_sm_execute_main& (0+255),w,b
  2250  002560  0A00               	xorlw	0	; case 0
  2251  002562  B4D8               	btfsc	status,2,c
  2252  002564  D79E               	goto	l22793
  2253  002566  0A01               	xorlw	1	; case 1
  2254  002568  B4D8               	btfsc	status,2,c
  2255  00256A  D7C0               	goto	l22803
  2256  00256C  0A03               	xorlw	3	; case 2
  2257  00256E  B4D8               	btfsc	status,2,c
  2258  002570  D7CD               	goto	l22807
  2259  002572  D7E9               	goto	l3048
  2260  002574                     l22819:
  2261                           
  2262                           ; BSR set to: 0
  2263                           ;sm_Main_MC50.c: 77:     sm_send_event(&main_stateMachine, ev_NULL);
  2264  002574  0EED               	movlw	low _main_stateMachine
  2265  002576  6E12               	movwf	sm_send_event@psm^0,c
  2266  002578  0E01               	movlw	high _main_stateMachine
  2267  00257A  6E13               	movwf	(sm_send_event@psm+1)^0,c
  2268  00257C  0E00               	movlw	0
  2269  00257E  6E15               	movwf	(sm_send_event@event+1)^0,c
  2270  002580  0E00               	movlw	0
  2271  002582  6E14               	movwf	sm_send_event@event^0,c
  2272  002584  EC29  F041         	call	_sm_send_event	;wreg free
  2273                           
  2274                           ;sm_Main_MC50.c: 82:     switch((sm_state_Main_t) psm->current_state)
  2275  002588  D1F8               	goto	l23097
  2276  00258A                     l22821:
  2277                           
  2278                           ; BSR set to: 0
  2279                           ;sm_Main_MC50.c: 85:         {;sm_Main_MC50.c: 86:             if (button_struct.current
      +                          ==0 && button_struct.timer>((1000/50)*5))
  2280  00258A  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  2281  00258C  A4D8               	btfss	status,2,c
  2282  00258E  D016               	goto	l22833
  2283                           
  2284                           ; BSR set to: 0
  2285  002590  0E64               	movlw	100
  2286  002592  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2287  002594  D013               	goto	l22833
  2288                           
  2289                           ; BSR set to: 0
  2290                           ;sm_Main_MC50.c: 87:             {;sm_Main_MC50.c: 88:                 load_New_Menu(E_M
      +                          enu);
  2291  002596  0E01               	movlw	1
  2292  002598  EC81  F01E         	call	_load_New_Menu
  2293  00259C                     l22827:
  2294                           
  2295                           ;sm_Main_MC50.c: 89:                 sm_send_event(&main_stateMachine, ev_goto_MenuConfi
      +                          g);
  2296  00259C  0EED               	movlw	low _main_stateMachine
  2297  00259E  6E12               	movwf	sm_send_event@psm^0,c
  2298  0025A0  0E01               	movlw	high _main_stateMachine
  2299  0025A2  6E13               	movwf	(sm_send_event@psm+1)^0,c
  2300  0025A4  0E00               	movlw	0
  2301  0025A6  6E15               	movwf	(sm_send_event@event+1)^0,c
  2302  0025A8  0E06               	movlw	6
  2303  0025AA  6E14               	movwf	sm_send_event@event^0,c
  2304  0025AC  EC29  F041         	call	_sm_send_event	;wreg free
  2305                           
  2306                           ;sm_Main_MC50.c: 90:                 button_struct.processed=1;
  2307  0025B0  0E01               	movlw	1
  2308  0025B2  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  2309                           
  2310                           ;sm_Main_MC50.c: 91:                 temp=0;
  2311  0025B4  0E00               	movlw	0
  2312  0025B6  0100               	movlb	0	; () banked
  2313  0025B8  6F80               	movwf	_temp& (0+255),b
  2314                           
  2315                           ;sm_Main_MC50.c: 92:             }
  2316  0025BA  0012               	return	
  2317  0025BC                     l22833:
  2318                           
  2319                           ; BSR set to: 0
  2320  0025BC  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  2321  0025BE  A4D8               	btfss	status,2,c
  2322  0025C0  D00B               	goto	l22841
  2323                           
  2324                           ; BSR set to: 0
  2325  0025C2  0E14               	movlw	20
  2326  0025C4  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2327  0025C6  D008               	goto	l22841
  2328                           
  2329                           ; BSR set to: 0
  2330                           ;sm_Main_MC50.c: 94:             {;sm_Main_MC50.c: 97:                 SetSegmentValueMa
      +                          in(dP,d0);
  2331  0025C8  0E00               	movlw	0
  2332  0025CA  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  2333  0025CC  0E10               	movlw	16
  2334  0025CE  ECE1  F047         	call	_SetSegmentValueMain
  2335                           
  2336                           ; BSR set to: 0
  2337                           ;sm_Main_MC50.c: 98:                 temp=1;
  2338  0025D2  0E01               	movlw	1
  2339  0025D4  6F80               	movwf	_temp& (0+255),b
  2340                           
  2341                           ;sm_Main_MC50.c: 99:             }
  2342  0025D6  0012               	return	
  2343  0025D8                     l22841:
  2344                           
  2345                           ; BSR set to: 0
  2346  0025D8  0580               	decf	_temp& (0+255),w,b
  2347  0025DA  A4D8               	btfss	status,2,c
  2348  0025DC  D004               	goto	l22851
  2349                           
  2350                           ; BSR set to: 0
  2351                           ;sm_Main_MC50.c: 101:             {;sm_Main_MC50.c: 102:                 load_New_Menu(P
      +                          _Menu);
  2352  0025DE  0E00               	movlw	0
  2353  0025E0  EC81  F01E         	call	_load_New_Menu
  2354  0025E4  D7DB               	goto	l22827
  2355  0025E6                     l22851:
  2356                           
  2357                           ; BSR set to: 0
  2358  0025E6  0E27               	movlw	39
  2359  0025E8  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2360  0025EA  A4D8               	btfss	status,2,c
  2361  0025EC  D007               	goto	l22863
  2362                           
  2363                           ; BSR set to: 0
  2364  0025EE  0E78               	movlw	120
  2365  0025F0  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2366  0025F2  D004               	goto	l22863
  2367                           
  2368                           ; BSR set to: 0
  2369                           ;sm_Main_MC50.c: 108:             {;sm_Main_MC50.c: 110:                 load_New_Menu(D
      +                          el_Menu);
  2370  0025F4  0E0D               	movlw	13
  2371  0025F6  EC81  F01E         	call	_load_New_Menu
  2372  0025FA  D7D0               	goto	l22827
  2373  0025FC                     l22863:
  2374                           
  2375                           ; BSR set to: 0
  2376  0025FC  0E27               	movlw	39
  2377  0025FE  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2378  002600  A4D8               	btfss	status,2,c
  2379  002602  D00B               	goto	l22871
  2380                           
  2381                           ; BSR set to: 0
  2382  002604  0E14               	movlw	20
  2383  002606  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2384  002608  D008               	goto	l22871
  2385                           
  2386                           ; BSR set to: 0
  2387                           ;sm_Main_MC50.c: 116:             {;sm_Main_MC50.c: 118:                 SetSegmentValue
      +                          Main(d5,dU);
  2388  00260A  0E13               	movlw	19
  2389  00260C  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  2390  00260E  0E05               	movlw	5
  2391  002610  ECE1  F047         	call	_SetSegmentValueMain
  2392                           
  2393                           ; BSR set to: 0
  2394                           ;sm_Main_MC50.c: 119:                 temp=2;
  2395  002614  0E02               	movlw	2
  2396  002616  6F80               	movwf	_temp& (0+255),b
  2397                           
  2398                           ;sm_Main_MC50.c: 120:             }
  2399  002618  0012               	return	
  2400  00261A                     l22871:
  2401                           
  2402                           ; BSR set to: 0
  2403  00261A  0E02               	movlw	2
  2404  00261C  1980               	xorwf	_temp& (0+255),w,b
  2405  00261E  A4D8               	btfss	status,2,c
  2406  002620  D004               	goto	l22881
  2407                           
  2408                           ; BSR set to: 0
  2409                           ;sm_Main_MC50.c: 122:             {;sm_Main_MC50.c: 123:                 load_New_Menu(S
      +                          _Menu);
  2410  002622  0E0C               	movlw	12
  2411  002624  EC81  F01E         	call	_load_New_Menu
  2412  002628  D7B9               	goto	l22827
  2413  00262A                     l22881:
  2414                           
  2415                           ; BSR set to: 0
  2416  00262A  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  2417  00262C  A4D8               	btfss	status,2,c
  2418  00262E  D009               	goto	l22887
  2419                           
  2420                           ; BSR set to: 0
  2421  002630  0101               	movlb	1	; () banked
  2422  002632  5103               	movf	(_var_sys+3)& (0+255),w,b	;volatile
  2423  002634  A4D8               	btfss	status,2,c
  2424  002636  D005               	goto	l22887
  2425                           
  2426                           ; BSR set to: 1
  2427                           ;sm_Main_MC50.c: 129:             {;sm_Main_MC50.c: 130:                 var_sys.StartFr
      +                          omButton=YES;
  2428  002638  0E01               	movlw	1
  2429  00263A  6F09               	movwf	(_var_sys+9)& (0+255),b	;volatile
  2430                           
  2431                           ;sm_Main_MC50.c: 131:                 var_sys.StateMotor=InClose;
  2432  00263C  0E03               	movlw	3
  2433  00263E  6F00               	movwf	_var_sys& (0+255),b	;volatile
  2434                           
  2435                           ;sm_Main_MC50.c: 132:             }
  2436  002640  0012               	return	
  2437  002642                     l22887:
  2438  002642  0E17               	movlw	23
  2439  002644  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2440  002646  A4D8               	btfss	status,2,c
  2441  002648  D009               	goto	l22893
  2442  00264A  0101               	movlb	1	; () banked
  2443  00264C  5104               	movf	(_var_sys+4)& (0+255),w,b	;volatile
  2444  00264E  A4D8               	btfss	status,2,c
  2445  002650  D005               	goto	l22893
  2446                           
  2447                           ; BSR set to: 1
  2448                           ;sm_Main_MC50.c: 134:             {;sm_Main_MC50.c: 135:                 var_sys.StartFr
      +                          omButton=YES;
  2449  002652  0E01               	movlw	1
  2450  002654  6F09               	movwf	(_var_sys+9)& (0+255),b	;volatile
  2451                           
  2452                           ;sm_Main_MC50.c: 136:                 var_sys.StateMotor=InOpenFull;
  2453  002656  0E01               	movlw	1
  2454  002658  6F00               	movwf	_var_sys& (0+255),b	;volatile
  2455                           
  2456                           ;sm_Main_MC50.c: 137:             }
  2457  00265A  0012               	return	
  2458  00265C                     l22893:
  2459  00265C  0101               	movlb	1	; () banked
  2460  00265E  0509               	decf	(_var_sys+9)& (0+255),w,b	;volatile
  2461  002660  A4D8               	btfss	status,2,c
  2462  002662  D005               	goto	l22897
  2463                           
  2464                           ; BSR set to: 1
  2465                           ;sm_Main_MC50.c: 139:             {;sm_Main_MC50.c: 140:                 var_sys.StartFr
      +                          omButton=NO;
  2466  002664  0E00               	movlw	0
  2467  002666  6F09               	movwf	(_var_sys+9)& (0+255),b	;volatile
  2468                           
  2469                           ;sm_Main_MC50.c: 141:                 var_sys.StateMotor = Stopped;
  2470  002668  0E00               	movlw	0
  2471  00266A  6F00               	movwf	_var_sys& (0+255),b	;volatile
  2472                           
  2473                           ;sm_Main_MC50.c: 142:             }
  2474  00266C  0012               	return	
  2475  00266E                     l22897:
  2476                           
  2477                           ; BSR set to: 1
  2478  00266E  0E06               	movlw	6
  2479  002670  183B               	xorwf	_rfCMD^0,w,c	;volatile
  2480  002672  B4D8               	btfsc	status,2,c
  2481  002674  D004               	goto	u28060
  2482                           
  2483                           ; BSR set to: 1
  2484  002676  0E05               	movlw	5
  2485  002678  183B               	xorwf	_rfCMD^0,w,c	;volatile
  2486  00267A  A4D8               	btfss	status,2,c
  2487  00267C  D015               	goto	l22911
  2488  00267E                     u28060:
  2489                           
  2490                           ; BSR set to: 1
  2491  00267E  0E63               	movlw	99
  2492  002680  6444               	cpfsgt	(_rfCMD+9)^0,c	;volatile
  2493  002682  D012               	goto	l22911
  2494                           
  2495                           ; BSR set to: 1
  2496                           ;sm_Main_MC50.c: 144:             {;sm_Main_MC50.c: 145:                 load_New_Menu(S
      +                          _Menu);
  2497  002684  0E0C               	movlw	12
  2498  002686  EC81  F01E         	call	_load_New_Menu
  2499                           
  2500                           ;sm_Main_MC50.c: 146:                 sm_send_event(&main_stateMachine, ev_goto_MenuConf
      +                          ig);
  2501  00268A  0EED               	movlw	low _main_stateMachine
  2502  00268C  6E12               	movwf	sm_send_event@psm^0,c
  2503  00268E  0E01               	movlw	high _main_stateMachine
  2504  002690  6E13               	movwf	(sm_send_event@psm+1)^0,c
  2505  002692  0E00               	movlw	0
  2506  002694  6E15               	movwf	(sm_send_event@event+1)^0,c
  2507  002696  0E06               	movlw	6
  2508  002698  6E14               	movwf	sm_send_event@event^0,c
  2509  00269A  EC29  F041         	call	_sm_send_event	;wreg free
  2510                           
  2511                           ;sm_Main_MC50.c: 147:                 var_sys.ProgrammingDistanceIs=rfCMD.currentType;
  2512  00269E  C03B  F13B         	movff	_rfCMD,_var_sys+59	;volatile
  2513                           
  2514                           ;sm_Main_MC50.c: 148:                 rfCMD.processed=1;
  2515  0026A2  0E01               	movlw	1
  2516  0026A4  6E45               	movwf	(_rfCMD+10)^0,c	;volatile
  2517                           
  2518                           ;sm_Main_MC50.c: 149:             }
  2519  0026A6  0012               	return	
  2520  0026A8                     l22911:
  2521                           
  2522                           ; BSR set to: 1
  2523  0026A8  BFA7               	btfsc	(_ts_system+13)& (0+255),7,b	;volatile
  2524  0026AA  D005               	goto	u28080
  2525  0026AC  51A7               	movf	(_ts_system+13)& (0+255),w,b	;volatile
  2526  0026AE  E111               	bnz	l3060
  2527  0026B0  05A6               	decf	(_ts_system+12)& (0+255),w,b	;volatile
  2528  0026B2  B0D8               	btfsc	status,0,c
  2529  0026B4  0012               	return	
  2530  0026B6                     u28080:
  2531                           
  2532                           ; BSR set to: 1
  2533                           ;sm_Main_MC50.c: 151:             {;sm_Main_MC50.c: 152:                 if(var_sys.FimC
      +                          urso_CloseIsEnabled == YES)
  2534  0026B6  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
  2535  0026B8  A4D8               	btfss	status,2,c
  2536  0026BA  D006               	goto	l22917
  2537                           
  2538                           ; BSR set to: 1
  2539                           ;sm_Main_MC50.c: 154:                     {;sm_Main_MC50.c: 156:                        
      +                           SetSegmentValueMain(dF,dC);
  2540  0026BC  0E0C               	movlw	12
  2541  0026BE  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  2542  0026C0  0E0F               	movlw	15
  2543  0026C2  ECE1  F047         	call	_SetSegmentValueMain
  2544                           
  2545                           ;sm_Main_MC50.c: 157:                     }
  2546  0026C6  0012               	return	
  2547  0026C8                     l22917:
  2548                           
  2549                           ; BSR set to: 1
  2550                           ;sm_Main_MC50.c: 160:                 SetSegmentValueMain(dMinus,dMinus);
  2551  0026C8  0E18               	movlw	24
  2552  0026CA  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  2553  0026CC  0E18               	movlw	24
  2554  0026CE  ECE1  F047         	call	_SetSegmentValueMain
  2555  0026D2                     l3060:
  2556                           
  2557                           ; BSR set to: 1
  2558  0026D2  0012               	return	
  2559  0026D4                     l22919:
  2560                           
  2561                           ; BSR set to: 0
  2562                           ;sm_Main_MC50.c: 167:         {;sm_Main_MC50.c: 168:             sm_execute_menuConfigur
      +                          ation(&menuConfiguration_stateMachine);
  2563  0026D4  0EBD               	movlw	low _menuConfiguration_stateMachine
  2564  0026D6  6FE9               	movwf	sm_execute_menuConfiguration@psm& (0+255),b
  2565  0026D8  0E02               	movlw	high _menuConfiguration_stateMachine
  2566  0026DA  6FEA               	movwf	(sm_execute_menuConfiguration@psm+1)& (0+255),b
  2567  0026DC  EC91  F007         	call	_sm_execute_menuConfiguration	;wreg free
  2568                           
  2569                           ;sm_Main_MC50.c: 169:         };sm_Main_MC50.c: 170:         break;
  2570  0026E0  0012               	return	
  2571  0026E2                     l22921:
  2572                           
  2573                           ; BSR set to: 0
  2574                           ;sm_Main_MC50.c: 172:         {;sm_Main_MC50.c: 175:             aux_in_auto_close = NO;
  2575  0026E2  0E00               	movlw	0
  2576  0026E4  0101               	movlb	1	; () banked
  2577  0026E6  6F8B               	movwf	_aux_in_auto_close& (0+255),b
  2578                           
  2579                           ; BSR set to: 1
  2580                           ;sm_Main_MC50.c: 176:             if ( controlGate_stateMachine.current_state == st_Open
      +                          ed )
  2581  0026E8  0E04               	movlw	4
  2582  0026EA  19E2               	xorwf	_controlGate_stateMachine& (0+255),w,b
  2583  0026EC  11E3               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
  2584  0026EE  A4D8               	btfss	status,2,c
  2585  0026F0  D013               	goto	l3083
  2586                           
  2587                           ; BSR set to: 1
  2588                           ;sm_Main_MC50.c: 177:             {;sm_Main_MC50.c: 179:                 if ( var_sys_NV
      +                          M.operationMode == ModoPassoPasso && var_sys.passoAPassoAutoClose == YES )
  2589  0026F2  0100               	movlb	0	; () banked
  2590  0026F4  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
  2591  0026F6  A4D8               	btfss	status,2,c
  2592  0026F8  D007               	goto	l22931
  2593                           
  2594                           ; BSR set to: 0
  2595  0026FA  0101               	movlb	1	; () banked
  2596  0026FC  0550               	decf	(_var_sys+80)& (0+255),w,b	;volatile
  2597  0026FE  A4D8               	btfss	status,2,c
  2598  002700  D003               	goto	l22931
  2599  002702                     u28120:
  2600                           
  2601                           ; BSR set to: 1
  2602                           ;sm_Main_MC50.c: 180:                 {;sm_Main_MC50.c: 181:                     aux_in_
      +                          auto_close = YES;
  2603  002702  0E01               	movlw	1
  2604  002704  6F8B               	movwf	_aux_in_auto_close& (0+255),b
  2605                           
  2606                           ;sm_Main_MC50.c: 182:                 }
  2607  002706  D008               	goto	l3083
  2608  002708                     l22931:
  2609  002708  0100               	movlb	0	; () banked
  2610  00270A  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
  2611  00270C  B4D8               	btfsc	status,2,c
  2612  00270E  D004               	goto	l3083
  2613                           
  2614                           ; BSR set to: 0
  2615  002710  0101               	movlb	1	; () banked
  2616  002712  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
  2617  002714  A4D8               	btfss	status,2,c
  2618  002716  D7F5               	goto	u28120
  2619  002718                     l3083:
  2620                           
  2621                           ;sm_Main_MC50.c: 193:             if(var_sys.StateMotor==Stopped && ( (controlGate_state
      +                          Machine.current_state==st_Opened && aux_in_auto_close==NO) || controlGate_stateMachine.c
      +                          urrent_state==st_Closed || controlGate_stateMachine.current_state==st_Idle ) )
  2622  002718  0101               	movlb	1	; () banked
  2623  00271A  5100               	movf	_var_sys& (0+255),w,b	;volatile
  2624  00271C  A4D8               	btfss	status,2,c
  2625  00271E  D069               	goto	l3097
  2626                           
  2627                           ; BSR set to: 1
  2628  002720  0E04               	movlw	4
  2629  002722  19E2               	xorwf	_controlGate_stateMachine& (0+255),w,b
  2630  002724  11E3               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
  2631  002726  A4D8               	btfss	status,2,c
  2632  002728  D003               	goto	u28170
  2633                           
  2634                           ; BSR set to: 1
  2635  00272A  518B               	movf	_aux_in_auto_close& (0+255),w,b
  2636  00272C  B4D8               	btfsc	status,2,c
  2637  00272E  D008               	goto	u28190
  2638  002730                     u28170:
  2639                           
  2640                           ; BSR set to: 1
  2641  002730  05E2               	decf	_controlGate_stateMachine& (0+255),w,b
  2642  002732  11E3               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
  2643  002734  B4D8               	btfsc	status,2,c
  2644  002736  D004               	goto	u28190
  2645                           
  2646                           ; BSR set to: 1
  2647  002738  51E2               	movf	_controlGate_stateMachine& (0+255),w,b
  2648  00273A  11E3               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
  2649  00273C  A4D8               	btfss	status,2,c
  2650  00273E  D059               	goto	l3097
  2651  002740                     u28190:
  2652                           
  2653                           ; BSR set to: 1
  2654                           ;sm_Main_MC50.c: 194:             {;sm_Main_MC50.c: 195:                 if (button_stru
      +                          ct.current==0 && button_struct.timer>((1000/50)*5))
  2655  002740  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  2656  002742  A4D8               	btfss	status,2,c
  2657  002744  D015               	goto	l22959
  2658                           
  2659                           ; BSR set to: 1
  2660  002746  0E64               	movlw	100
  2661  002748  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2662  00274A  D012               	goto	l22959
  2663                           
  2664                           ; BSR set to: 1
  2665                           ;sm_Main_MC50.c: 196:                 {;sm_Main_MC50.c: 197:                     load_Ne
      +                          w_Menu(E_Menu);
  2666  00274C  0E01               	movlw	1
  2667  00274E  EC81  F01E         	call	_load_New_Menu
  2668  002752                     l22953:
  2669                           
  2670                           ;sm_Main_MC50.c: 198:                     sm_send_event(&main_stateMachine, ev_goto_Menu
      +                          Config);
  2671  002752  0EED               	movlw	low _main_stateMachine
  2672  002754  6E12               	movwf	sm_send_event@psm^0,c
  2673  002756  0E01               	movlw	high _main_stateMachine
  2674  002758  6E13               	movwf	(sm_send_event@psm+1)^0,c
  2675  00275A  0E00               	movlw	0
  2676  00275C  6E15               	movwf	(sm_send_event@event+1)^0,c
  2677  00275E  0E06               	movlw	6
  2678  002760  6E14               	movwf	sm_send_event@event^0,c
  2679  002762  EC29  F041         	call	_sm_send_event	;wreg free
  2680                           
  2681                           ;sm_Main_MC50.c: 199:                     button_struct.processed=1;
  2682  002766  0E01               	movlw	1
  2683  002768  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  2684                           
  2685                           ;sm_Main_MC50.c: 200:                     temp=0;
  2686  00276A  0E00               	movlw	0
  2687  00276C  0100               	movlb	0	; () banked
  2688  00276E  D037               	goto	L4
  2689  002770                     l22959:
  2690                           
  2691                           ; BSR set to: 1
  2692  002770  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  2693  002772  A4D8               	btfss	status,2,c
  2694  002774  D00A               	goto	l22967
  2695                           
  2696                           ; BSR set to: 1
  2697  002776  0E14               	movlw	20
  2698  002778  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2699  00277A  D007               	goto	l22967
  2700                           
  2701                           ; BSR set to: 1
  2702                           ;sm_Main_MC50.c: 203:                 {;sm_Main_MC50.c: 205:                     SetSegm
      +                          entValueMain(dP,d0);
  2703  00277C  0E00               	movlw	0
  2704  00277E  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  2705  002780  0E10               	movlw	16
  2706  002782  ECE1  F047         	call	_SetSegmentValueMain
  2707                           
  2708                           ; BSR set to: 0
  2709                           ;sm_Main_MC50.c: 206:                     temp=1;
  2710  002786  0E01               	movlw	1
  2711  002788  D02A               	goto	L4
  2712  00278A                     l22967:
  2713                           
  2714                           ; BSR set to: 1
  2715  00278A  0100               	movlb	0	; () banked
  2716  00278C  0580               	decf	_temp& (0+255),w,b
  2717  00278E  A4D8               	btfss	status,2,c
  2718  002790  D00E               	goto	l22981
  2719                           
  2720                           ; BSR set to: 0
  2721                           ;sm_Main_MC50.c: 209:                 {;sm_Main_MC50.c: 210:                     load_Ne
      +                          w_Menu(P_Menu);
  2722  002792  0E00               	movlw	0
  2723  002794  EC81  F01E         	call	_load_New_Menu
  2724                           
  2725                           ;sm_Main_MC50.c: 212:                     button_struct.processed=1;
  2726  002798  0E01               	movlw	1
  2727  00279A  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  2728                           
  2729                           ;sm_Main_MC50.c: 213:                     temp=0;
  2730  00279C  0E00               	movlw	0
  2731  00279E  0100               	movlb	0	; () banked
  2732  0027A0  6F80               	movwf	_temp& (0+255),b
  2733                           
  2734                           ; BSR set to: 0
  2735                           ;sm_Main_MC50.c: 214:                     main_stateMachine.current_state = st_MenuConfi
      +                          guration;
  2736  0027A2  0E00               	movlw	0
  2737  0027A4  0101               	movlb	1	; () banked
  2738  0027A6  6FEE               	movwf	(_main_stateMachine+1)& (0+255),b
  2739  0027A8  0E01               	movlw	1
  2740  0027AA  6FED               	movwf	_main_stateMachine& (0+255),b
  2741  0027AC  0012               	return	
  2742  0027AE                     l22981:
  2743                           
  2744                           ; BSR set to: 0
  2745  0027AE  0E27               	movlw	39
  2746  0027B0  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2747  0027B2  A4D8               	btfss	status,2,c
  2748  0027B4  D007               	goto	l22993
  2749                           
  2750                           ; BSR set to: 0
  2751  0027B6  0E78               	movlw	120
  2752  0027B8  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2753  0027BA  D004               	goto	l22993
  2754                           
  2755                           ; BSR set to: 0
  2756                           ;sm_Main_MC50.c: 218:             {;sm_Main_MC50.c: 220:                 load_New_Menu(D
      +                          el_Menu);
  2757  0027BC  0E0D               	movlw	13
  2758  0027BE  EC81  F01E         	call	_load_New_Menu
  2759  0027C2  D7C7               	goto	l22953
  2760  0027C4                     l22993:
  2761                           
  2762                           ; BSR set to: 0
  2763  0027C4  0E27               	movlw	39
  2764  0027C6  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2765  0027C8  A4D8               	btfss	status,2,c
  2766  0027CA  D00B               	goto	l23001
  2767                           
  2768                           ; BSR set to: 0
  2769  0027CC  0E14               	movlw	20
  2770  0027CE  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2771  0027D0  D008               	goto	l23001
  2772                           
  2773                           ; BSR set to: 0
  2774                           ;sm_Main_MC50.c: 226:             {;sm_Main_MC50.c: 228:                 SetSegmentValue
      +                          Main(d5,dU);
  2775  0027D2  0E13               	movlw	19
  2776  0027D4  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  2777  0027D6  0E05               	movlw	5
  2778  0027D8  ECE1  F047         	call	_SetSegmentValueMain
  2779                           
  2780                           ; BSR set to: 0
  2781                           ;sm_Main_MC50.c: 229:                 temp=2;
  2782  0027DC  0E02               	movlw	2
  2783  0027DE                     L4:
  2784  0027DE  6F80               	movwf	_temp& (0+255),b
  2785                           
  2786                           ;sm_Main_MC50.c: 230:             }
  2787  0027E0  D008               	goto	l3097
  2788  0027E2                     l23001:
  2789                           
  2790                           ; BSR set to: 0
  2791  0027E2  0E02               	movlw	2
  2792  0027E4  1980               	xorwf	_temp& (0+255),w,b
  2793  0027E6  A4D8               	btfss	status,2,c
  2794  0027E8  D004               	goto	l3097
  2795                           
  2796                           ; BSR set to: 0
  2797                           ;sm_Main_MC50.c: 232:             {;sm_Main_MC50.c: 233:                 load_New_Menu(S
      +                          _Menu);
  2798  0027EA  0E0C               	movlw	12
  2799  0027EC  EC81  F01E         	call	_load_New_Menu
  2800  0027F0  D6D5               	goto	l22827
  2801  0027F2                     l3097:
  2802                           
  2803                           ;sm_Main_MC50.c: 243:             if( ts_system.timeSinalizationDigit<=0 && (button_stru
      +                          ct.current!=0 && button_struct.current!=0x27) )
  2804                           
  2805                           ; BSR set to: 0
  2806  0027F2  0101               	movlb	1	; () banked
  2807  0027F4  BFA7               	btfsc	(_ts_system+13)& (0+255),7,b	;volatile
  2808  0027F6  D005               	goto	u28300
  2809  0027F8  51A7               	movf	(_ts_system+13)& (0+255),w,b	;volatile
  2810  0027FA  E102               	bnz	u28301
  2811  0027FC  05A6               	decf	(_ts_system+12)& (0+255),w,b	;volatile
  2812  0027FE  B0D8               	btfsc	status,0,c
  2813  002800                     u28301:
  2814  002800  0012               	return	
  2815  002802                     u28300:
  2816                           
  2817                           ; BSR set to: 1
  2818  002802  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  2819  002804  B4D8               	btfsc	status,2,c
  2820  002806  0012               	return	
  2821                           
  2822                           ; BSR set to: 1
  2823  002808  0E27               	movlw	39
  2824  00280A  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2825  00280C  B4D8               	btfsc	status,2,c
  2826  00280E  0012               	return	
  2827                           
  2828                           ; BSR set to: 1
  2829                           ;sm_Main_MC50.c: 244:             {;sm_Main_MC50.c: 245:                 if(var_sys.Stat
      +                          eMotor==InClose )
  2830  002810  0E03               	movlw	3
  2831  002812  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
  2832  002814  A4D8               	btfss	status,2,c
  2833  002816  D011               	goto	l23027
  2834                           
  2835                           ; BSR set to: 1
  2836                           ;sm_Main_MC50.c: 246:                 {;sm_Main_MC50.c: 248:                    SetSegme
      +                          ntValueIntermitentMain(dC,dL,( 500/50));
  2837  002818  0E12               	movlw	18
  2838  00281A  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  2839  00281C  0E00               	movlw	0
  2840  00281E  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  2841  002820  0E0A               	movlw	10
  2842  002822  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  2843  002824  0E0C               	movlw	12
  2844  002826  EC7D  F048         	call	_SetSegmentValueIntermitentMain
  2845  00282A                     l23023:
  2846                           
  2847                           ;sm_Main_MC50.c: 249:                    ts_system.timeSinalizationDigit=( 200/50);
  2848  00282A  0E00               	movlw	0
  2849  00282C  0101               	movlb	1	; () banked
  2850  00282E  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
  2851  002830  0E04               	movlw	4
  2852  002832  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
  2853                           
  2854                           ; BSR set to: 1
  2855                           ;sm_Main_MC50.c: 251:                     var_sys.showAP = NO;
  2856  002834  0E00               	movlw	0
  2857  002836  6F4F               	movwf	(_var_sys+79)& (0+255),b	;volatile
  2858                           
  2859                           ;sm_Main_MC50.c: 252:                 }
  2860  002838  0012               	return	
  2861  00283A                     l23027:
  2862                           
  2863                           ; BSR set to: 1
  2864  00283A  0E02               	movlw	2
  2865  00283C  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
  2866  00283E  B4D8               	btfsc	status,2,c
  2867  002840  D003               	goto	u28350
  2868                           
  2869                           ; BSR set to: 1
  2870  002842  0500               	decf	_var_sys& (0+255),w,b	;volatile
  2871  002844  A4D8               	btfss	status,2,c
  2872  002846  D00A               	goto	l23037
  2873  002848                     u28350:
  2874                           
  2875                           ; BSR set to: 1
  2876                           ;sm_Main_MC50.c: 254:                 {;sm_Main_MC50.c: 256:                     SetSegm
      +                          entValueIntermitentMain(d0,dP,( 500/50));
  2877  002848  0E10               	movlw	16
  2878  00284A  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  2879  00284C  0E00               	movlw	0
  2880  00284E  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  2881  002850  0E0A               	movlw	10
  2882  002852  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  2883  002854  0E00               	movlw	0
  2884  002856  EC7D  F048         	call	_SetSegmentValueIntermitentMain
  2885  00285A  D7E7               	goto	l23023
  2886  00285C                     l23037:
  2887                           
  2888                           ; BSR set to: 1
  2889  00285C  5100               	movf	_var_sys& (0+255),w,b	;volatile
  2890  00285E  A4D8               	btfss	status,2,c
  2891  002860  D00F               	goto	l23043
  2892                           
  2893                           ; BSR set to: 1
  2894  002862  05E2               	decf	_controlGate_stateMachine& (0+255),w,b
  2895  002864  11E3               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
  2896  002866  A4D8               	btfss	status,2,c
  2897  002868  D00B               	goto	l23043
  2898                           
  2899                           ; BSR set to: 1
  2900                           ;sm_Main_MC50.c: 262:                 {;sm_Main_MC50.c: 263:                     sm_send
      +                          _event(&main_stateMachine, ev_goto_StandBy);
  2901  00286A  0EED               	movlw	low _main_stateMachine
  2902  00286C  6E12               	movwf	sm_send_event@psm^0,c
  2903  00286E  0E01               	movlw	high _main_stateMachine
  2904  002870  6E13               	movwf	(sm_send_event@psm+1)^0,c
  2905  002872  0E00               	movlw	0
  2906  002874  6E15               	movwf	(sm_send_event@event+1)^0,c
  2907  002876  0E07               	movlw	7
  2908  002878  6E14               	movwf	sm_send_event@event^0,c
  2909  00287A  EC29  F041         	call	_sm_send_event	;wreg free
  2910                           
  2911                           ;sm_Main_MC50.c: 264:                 }
  2912  00287E  0012               	return	
  2913  002880                     l23043:
  2914                           
  2915                           ; BSR set to: 1
  2916  002880  5100               	movf	_var_sys& (0+255),w,b	;volatile
  2917  002882  A4D8               	btfss	status,2,c
  2918  002884  D074               	goto	l23093
  2919                           
  2920                           ; BSR set to: 1
  2921  002886  0E04               	movlw	4
  2922  002888  19E2               	xorwf	_controlGate_stateMachine& (0+255),w,b
  2923  00288A  11E3               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
  2924  00288C  A4D8               	btfss	status,2,c
  2925  00288E  D06F               	goto	l23093
  2926                           
  2927                           ; BSR set to: 1
  2928                           ;sm_Main_MC50.c: 266:                 {;sm_Main_MC50.c: 268:                     if
  2929  002890  0100               	movlb	0	; () banked
  2930  002892  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
  2931  002894  B4D8               	btfsc	status,2,c
  2932  002896  D00B               	goto	u28430
  2933                           
  2934                           ; BSR set to: 0
  2935  002898  0101               	movlb	1	; () banked
  2936  00289A  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
  2937  00289C  B4D8               	btfsc	status,2,c
  2938  00289E  D007               	goto	u28430
  2939                           
  2940                           ; BSR set to: 1
  2941  0028A0  050B               	decf	(_var_sys+11)& (0+255),w,b	;volatile
  2942  0028A2  B4D8               	btfsc	status,2,c
  2943  0028A4  D013               	goto	u28470
  2944                           
  2945                           ; BSR set to: 1
  2946  0028A6  0E03               	movlw	3
  2947  0028A8  190B               	xorwf	(_var_sys+11)& (0+255),w,b	;volatile
  2948  0028AA  B4D8               	btfsc	status,2,c
  2949  0028AC  D00F               	goto	u28470
  2950  0028AE                     u28430:
  2951  0028AE  0100               	movlb	0	; () banked
  2952  0028B0  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
  2953  0028B2  A4D8               	btfss	status,2,c
  2954  0028B4  D026               	goto	l23071
  2955                           
  2956                           ; BSR set to: 0
  2957  0028B6  0101               	movlb	1	; () banked
  2958  0028B8  0550               	decf	(_var_sys+80)& (0+255),w,b	;volatile
  2959  0028BA  A4D8               	btfss	status,2,c
  2960  0028BC  D022               	goto	l23071
  2961                           
  2962                           ; BSR set to: 1
  2963  0028BE  0E02               	movlw	2
  2964  0028C0  190B               	xorwf	(_var_sys+11)& (0+255),w,b	;volatile
  2965  0028C2  B4D8               	btfsc	status,2,c
  2966  0028C4  D01E               	goto	l23071
  2967                           
  2968                           ; BSR set to: 1
  2969  0028C6  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
  2970  0028C8  B4D8               	btfsc	status,2,c
  2971  0028CA  D01B               	goto	l23071
  2972  0028CC                     u28470:
  2973                           
  2974                           ; BSR set to: 1
  2975                           ;sm_Main_MC50.c: 273:                     {;sm_Main_MC50.c: 274:                        
      +                           ts_system.timeSinalizationDigit=( 500/50);
  2976  0028CC  0E00               	movlw	0
  2977  0028CE  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
  2978  0028D0  0E0A               	movlw	10
  2979  0028D2  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
  2980                           
  2981                           ; BSR set to: 1
  2982                           ;sm_Main_MC50.c: 279:                         if ( var_sys.showAP == YES )
  2983  0028D4  054F               	decf	(_var_sys+79)& (0+255),w,b	;volatile
  2984  0028D6  A4D8               	btfss	status,2,c
  2985  0028D8  D00A               	goto	l23069
  2986                           
  2987                           ; BSR set to: 1
  2988                           ;sm_Main_MC50.c: 280:                         {;sm_Main_MC50.c: 281:                    
      +                                   SetSegmentValueIntermitentMain(dA,dP,( 500/50));
  2989  0028DA  0E10               	movlw	16
  2990  0028DC  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  2991  0028DE  0E00               	movlw	0
  2992  0028E0  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  2993  0028E2  0E0A               	movlw	10
  2994  0028E4  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  2995  0028E6  0E0A               	movlw	10
  2996  0028E8  EC7D  F048         	call	_SetSegmentValueIntermitentMain
  2997                           
  2998                           ;sm_Main_MC50.c: 282:                         }
  2999  0028EC  0012               	return	
  3000  0028EE                     l23069:
  3001                           
  3002                           ; BSR set to: 1
  3003                           ;sm_Main_MC50.c: 284:                         {;sm_Main_MC50.c: 285:                    
      +                                   SetSegmentValueIntermitentMain(dA,dF,( 500/50));
  3004  0028EE  0E0F               	movlw	15
  3005  0028F0  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  3006  0028F2  0E00               	movlw	0
  3007  0028F4  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  3008  0028F6  0E0A               	movlw	10
  3009  0028F8  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  3010  0028FA  0E0A               	movlw	10
  3011  0028FC  EC7D  F048         	call	_SetSegmentValueIntermitentMain
  3012  002900  0012               	return	
  3013  002902                     l23071:
  3014  002902  0100               	movlb	0	; () banked
  3015  002904  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
  3016  002906  B4D8               	btfsc	status,2,c
  3017  002908  D008               	goto	u28510
  3018                           
  3019                           ; BSR set to: 0
  3020  00290A  0101               	movlb	1	; () banked
  3021  00290C  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
  3022  00290E  B4D8               	btfsc	status,2,c
  3023  002910  D004               	goto	u28510
  3024                           
  3025                           ; BSR set to: 1
  3026  002912  0E02               	movlw	2
  3027  002914  190B               	xorwf	(_var_sys+11)& (0+255),w,b	;volatile
  3028  002916  B4D8               	btfsc	status,2,c
  3029  002918  D00C               	goto	u28540
  3030  00291A                     u28510:
  3031  00291A  0100               	movlb	0	; () banked
  3032  00291C  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
  3033  00291E  A4D8               	btfss	status,2,c
  3034  002920  D016               	goto	l23087
  3035                           
  3036                           ; BSR set to: 0
  3037  002922  0101               	movlb	1	; () banked
  3038  002924  0550               	decf	(_var_sys+80)& (0+255),w,b	;volatile
  3039  002926  A4D8               	btfss	status,2,c
  3040  002928  D012               	goto	l23087
  3041                           
  3042                           ; BSR set to: 1
  3043  00292A  0E02               	movlw	2
  3044  00292C  190B               	xorwf	(_var_sys+11)& (0+255),w,b	;volatile
  3045  00292E  A4D8               	btfss	status,2,c
  3046  002930  D00E               	goto	l23087
  3047  002932                     u28540:
  3048                           
  3049                           ; BSR set to: 1
  3050                           ;sm_Main_MC50.c: 294:                     {;sm_Main_MC50.c: 295:                        
      +                           ts_system.timeSinalizationDigit=( 500/50);
  3051  002932  0E00               	movlw	0
  3052  002934  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
  3053  002936  0E0A               	movlw	10
  3054  002938  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
  3055                           
  3056                           ; BSR set to: 1
  3057                           ;sm_Main_MC50.c: 297:                         SetSegmentValueIntermitentMain(dA,dP,( 500
      +                          /50));
  3058  00293A  0E10               	movlw	16
  3059  00293C  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  3060  00293E  0E00               	movlw	0
  3061  002940  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  3062  002942  0E0A               	movlw	10
  3063  002944  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  3064  002946  0E0A               	movlw	10
  3065  002948  EC7D  F048         	call	_SetSegmentValueIntermitentMain
  3066                           
  3067                           ;sm_Main_MC50.c: 298:                     }
  3068  00294C  0012               	return	
  3069  00294E                     l23087:
  3070  00294E  0101               	movlb	1	; () banked
  3071  002950  0504               	decf	(_var_sys+4)& (0+255),w,b	;volatile
  3072  002952  A4D8               	btfss	status,2,c
  3073  002954  D006               	goto	l23091
  3074                           
  3075                           ; BSR set to: 1
  3076                           ;sm_Main_MC50.c: 301:                     {;sm_Main_MC50.c: 303:                        
      +                           SetSegmentValueMain(dF,d0);
  3077  002956  0E00               	movlw	0
  3078  002958  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3079  00295A  0E0F               	movlw	15
  3080  00295C  ECE1  F047         	call	_SetSegmentValueMain
  3081                           
  3082                           ;sm_Main_MC50.c: 304:                     }
  3083  002960  0012               	return	
  3084  002962                     l23091:
  3085                           
  3086                           ; BSR set to: 1
  3087                           ;sm_Main_MC50.c: 306:                     {;sm_Main_MC50.c: 307:                       S
      +                          etSegmentValueMain(dMinus,dMinus);
  3088  002962  0E18               	movlw	24
  3089  002964  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3090  002966  0E18               	movlw	24
  3091  002968  ECE1  F047         	call	_SetSegmentValueMain
  3092  00296C  0012               	return	
  3093  00296E                     l23093:
  3094                           
  3095                           ; BSR set to: 1
  3096                           ;sm_Main_MC50.c: 311:                 {;sm_Main_MC50.c: 313:                     SetSegm
      +                          entValueMain(dMinus,dMinus);
  3097  00296E  0E18               	movlw	24
  3098  002970  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3099  002972  0E18               	movlw	24
  3100  002974  ECE1  F047         	call	_SetSegmentValueMain
  3101  002978  0012               	return	
  3102  00297A                     l23097:
  3103  00297A  C0ED  FFD9         	movff	sm_execute_main@psm,fsr2l
  3104  00297E  C0EE  FFDA         	movff	sm_execute_main@psm+1,fsr2h
  3105  002982  50DF               	movf	indf2,w,c
  3106  002984  0100               	movlb	0	; () banked
  3107  002986  6FEF               	movwf	??_sm_execute_main& (0+255),b
  3108  002988  6BF0               	clrf	(??_sm_execute_main+1)& (0+255),b
  3109                           
  3110                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3111                           ; Switch size 1, requested type "simple"
  3112                           ; Number of cases is 1, Range of values is 0 to 0
  3113                           ; switch strategies available:
  3114                           ; Name         Instructions Cycles
  3115                           ; simple_byte            4     3 (average)
  3116                           ;	Chosen strategy is simple_byte
  3117  00298A  51F0               	movf	(??_sm_execute_main+1)& (0+255),w,b
  3118  00298C  0A00               	xorlw	0	; case 0
  3119  00298E  A4D8               	btfss	status,2,c
  3120  002990  0012               	return	
  3121                           
  3122                           ; BSR set to: 0
  3123                           ; Switch size 1, requested type "simple"
  3124                           ; Number of cases is 3, Range of values is 0 to 2
  3125                           ; switch strategies available:
  3126                           ; Name         Instructions Cycles
  3127                           ; simple_byte           10     6 (average)
  3128                           ;	Chosen strategy is simple_byte
  3129  002992  51EF               	movf	??_sm_execute_main& (0+255),w,b
  3130  002994  0A00               	xorlw	0	; case 0
  3131  002996  B4D8               	btfsc	status,2,c
  3132  002998  D5F8               	goto	l22821
  3133  00299A  0A01               	xorlw	1	; case 1
  3134  00299C  B4D8               	btfsc	status,2,c
  3135  00299E  D69A               	goto	l22919
  3136  0029A0  0A03               	xorlw	3	; case 2
  3137  0029A2  A4D8               	btfss	status,2,c
  3138  0029A4  0012               	return	
  3139  0029A6  D69D               	goto	l22921
  3140  0029A8                     __end_of_sm_execute_main:
  3141                           	callstack 0
  3142                           
  3143 ;; *************** function _sm_execute_menuConfiguration *****************
  3144 ;; Defined at:
  3145 ;;		line 33 in file "sm_MenuConfiguration_MC50.c"
  3146 ;; Parameters:    Size  Location     Type
  3147 ;;  psm             2   17[BANK0 ] PTR struct .
  3148 ;;		 -> menuConfiguration_stateMachine(11), 
  3149 ;; Auto vars:     Size  Location     Type
  3150 ;;		None
  3151 ;; Return value:  Size  Location     Type
  3152 ;;                  1    wreg      void 
  3153 ;; Registers used:
  3154 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3155 ;; Tracked objects:
  3156 ;;		On entry : 3F/0
  3157 ;;		On exit  : 0/0
  3158 ;;		Unchanged: 0/0
  3159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3160 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3162 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3163 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3164 ;;Total ram usage:        4 bytes
  3165 ;; Hardware stack levels used: 1
  3166 ;; Hardware stack levels required when called: 15
  3167 ;; This function calls:
  3168 ;;		_ClearFlag_rfCMD
  3169 ;;		_ResetDefaultMemory
  3170 ;;		_SaveNVM_VarSystem
  3171 ;;		_SetSegmentValueIntermitentMain
  3172 ;;		_SetSegmentValueMain
  3173 ;;		___lbdiv
  3174 ;;		___lldiv
  3175 ;;		___lmul
  3176 ;;		___lwdiv
  3177 ;;		_controlLearnDigit
  3178 ;;		_controlSaveRemote
  3179 ;;		_controlSelectRemote
  3180 ;;		_load_New_Menu
  3181 ;;		_setValueToEdit
  3182 ;;		_sm_send_event
  3183 ;; This function is called by:
  3184 ;;		_sm_execute_main
  3185 ;; This function uses a non-reentrant model
  3186 ;;
  3187                           
  3188                           	psect	text2
  3189  000F22                     __ptext2:
  3190                           	callstack 0
  3191  000F22                     _sm_execute_menuConfiguration:
  3192                           	callstack 14
  3193                           
  3194                           ; BSR set to: 0
  3195                           ;sm_MenuConfiguration_MC50.c: 36:     switch((sm_state_Menu_t) psm->current_state)
  3196                           
  3197                           ;incstack = 0
  3198  000F22  D0A2               	goto	l22245
  3199  000F24                     l22187:
  3200                           
  3201                           ; BSR set to: 0
  3202                           ;sm_MenuConfiguration_MC50.c: 39:         {;sm_MenuConfiguration_MC50.c: 40:            
      +                           if(psm->last_event==ev_ParameterIsSelected)
  3203  000F24  EE20 F004          	lfsr	2,4
  3204  000F28  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3205  000F2A  26D9               	addwf	fsr2l,f,c
  3206  000F2C  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3207  000F2E  22DA               	addwfc	fsr2h,f,c
  3208  000F30  04DE               	decf	postinc2,w,c
  3209  000F32  10DE               	iorwf	postinc2,w,c
  3210  000F34  A4D8               	btfss	status,2,c
  3211  000F36  D006               	goto	l22191
  3212                           
  3213                           ; BSR set to: 0
  3214                           ;sm_MenuConfiguration_MC50.c: 41:             {;sm_MenuConfiguration_MC50.c: 42:        
      +                                   psm->current_state = st_EditParameter;
  3215  000F38  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3216  000F3C  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3217  000F40  0E01               	movlw	1
  3218  000F42  D04C               	goto	L9
  3219  000F44                     l22191:
  3220                           
  3221                           ; BSR set to: 0
  3222  000F44  EE20 F004          	lfsr	2,4
  3223  000F48  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3224  000F4A  26D9               	addwf	fsr2l,f,c
  3225  000F4C  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3226  000F4E  22DA               	addwfc	fsr2h,f,c
  3227  000F50  0E05               	movlw	5
  3228  000F52  18DE               	xorwf	postinc2,w,c
  3229  000F54  10DE               	iorwf	postinc2,w,c
  3230  000F56  A4D8               	btfss	status,2,c
  3231  000F58  D006               	goto	l22195
  3232                           
  3233                           ; BSR set to: 0
  3234                           ;sm_MenuConfiguration_MC50.c: 45:             {;sm_MenuConfiguration_MC50.c: 46:        
      +                                   psm->current_state = st_Counter;
  3235  000F5A  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3236  000F5E  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3237  000F62  0E03               	movlw	3
  3238  000F64  D03B               	goto	L9
  3239  000F66                     l22195:
  3240                           
  3241                           ; BSR set to: 0
  3242  000F66  EE20 F004          	lfsr	2,4
  3243  000F6A  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3244  000F6C  26D9               	addwf	fsr2l,f,c
  3245  000F6E  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3246  000F70  22DA               	addwfc	fsr2h,f,c
  3247  000F72  0E08               	movlw	8
  3248  000F74  18DE               	xorwf	postinc2,w,c
  3249  000F76  10DE               	iorwf	postinc2,w,c
  3250  000F78  A4D8               	btfss	status,2,c
  3251  000F7A  D006               	goto	l22199
  3252                           
  3253                           ; BSR set to: 0
  3254                           ;sm_MenuConfiguration_MC50.c: 49:             {;sm_MenuConfiguration_MC50.c: 50:        
      +                                   psm->current_state = st_SelectRemote;
  3255  000F7C  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3256  000F80  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3257  000F84  0E04               	movlw	4
  3258  000F86  D02A               	goto	L9
  3259  000F88                     l22199:
  3260                           
  3261                           ; BSR set to: 0
  3262  000F88  EE20 F004          	lfsr	2,4
  3263  000F8C  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3264  000F8E  26D9               	addwf	fsr2l,f,c
  3265  000F90  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3266  000F92  22DA               	addwfc	fsr2h,f,c
  3267  000F94  0E14               	movlw	20
  3268  000F96  18DE               	xorwf	postinc2,w,c
  3269  000F98  10DE               	iorwf	postinc2,w,c
  3270  000F9A  A4D8               	btfss	status,2,c
  3271  000F9C  D087               	goto	l22247
  3272                           
  3273                           ; BSR set to: 0
  3274                           ;sm_MenuConfiguration_MC50.c: 53:             {;sm_MenuConfiguration_MC50.c: 55:        
      +                                   psm->current_state = st_LearningMode;
  3275  000F9E  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3276  000FA2  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3277  000FA6  0E06               	movlw	6
  3278  000FA8  D019               	goto	L9
  3279  000FAA                     l22203:
  3280                           
  3281                           ; BSR set to: 0
  3282                           ;sm_MenuConfiguration_MC50.c: 65:         {;sm_MenuConfiguration_MC50.c: 66:            
      +                           if(psm->last_event==ev_ParameterIsEdited)
  3283  000FAA  EE20 F004          	lfsr	2,4
  3284  000FAE  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3285  000FB0  26D9               	addwf	fsr2l,f,c
  3286  000FB2  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3287  000FB4  22DA               	addwfc	fsr2h,f,c
  3288  000FB6  0E02               	movlw	2
  3289  000FB8  18DE               	xorwf	postinc2,w,c
  3290  000FBA  10DE               	iorwf	postinc2,w,c
  3291  000FBC  A4D8               	btfss	status,2,c
  3292  000FBE  D006               	goto	l22207
  3293                           
  3294                           ; BSR set to: 0
  3295                           ;sm_MenuConfiguration_MC50.c: 67:             {;sm_MenuConfiguration_MC50.c: 68:        
      +                                   psm->current_state = st_SaveParameter;
  3296  000FC0  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3297  000FC4  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3298  000FC8  0E02               	movlw	2
  3299  000FCA  D008               	goto	L9
  3300  000FCC                     l22207:
  3301                           
  3302                           ; BSR set to: 0
  3303  000FCC  EE20 F004          	lfsr	2,4
  3304  000FD0  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3305  000FD2  26D9               	addwf	fsr2l,f,c
  3306  000FD4  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3307  000FD6  22DA               	addwfc	fsr2h,f,c
  3308  000FD8  0E03               	movlw	3
  3309  000FDA  D03B               	goto	L123
  3310  000FDC                     L9:
  3311  000FDC  6EDE               	movwf	postinc2,c
  3312  000FDE  0E00               	movlw	0
  3313  000FE0  6EDD               	movwf	postdec2,c
  3314  000FE2  D064               	goto	l22247
  3315  000FE4                     l22215:
  3316                           
  3317                           ; BSR set to: 0
  3318                           ;sm_MenuConfiguration_MC50.c: 85:         {;sm_MenuConfiguration_MC50.c: 86:            
      +                           if(psm->last_event==ev_ParameterIsSaved)
  3319  000FE4  EE20 F004          	lfsr	2,4
  3320  000FE8  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3321  000FEA  26D9               	addwf	fsr2l,f,c
  3322  000FEC  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3323  000FEE  22DA               	addwfc	fsr2h,f,c
  3324  000FF0  0E04               	movlw	4
  3325  000FF2  18DE               	xorwf	postinc2,w,c
  3326  000FF4  10DE               	iorwf	postinc2,w,c
  3327  000FF6  A4D8               	btfss	status,2,c
  3328  000FF8  D7E9               	goto	l22207
  3329  000FFA  D02F               	goto	u26790
  3330  000FFC                     l22223:
  3331                           
  3332                           ; BSR set to: 0
  3333                           ;sm_MenuConfiguration_MC50.c: 97:         {;sm_MenuConfiguration_MC50.c: 98:            
      +                           if(psm->last_event==ev_addRemotes)
  3334  000FFC  EE20 F004          	lfsr	2,4
  3335  001000  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3336  001002  26D9               	addwf	fsr2l,f,c
  3337  001004  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3338  001006  22DA               	addwfc	fsr2h,f,c
  3339  001008  0E08               	movlw	8
  3340  00100A  18DE               	xorwf	postinc2,w,c
  3341  00100C  10DE               	iorwf	postinc2,w,c
  3342  00100E  A4D8               	btfss	status,2,c
  3343  001010  D7DD               	goto	l22207
  3344                           
  3345                           ; BSR set to: 0
  3346                           ;sm_MenuConfiguration_MC50.c: 99:             {;sm_MenuConfiguration_MC50.c: 100:       
      +                                    psm->current_state = st_SaveRemotes;
  3347  001012  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3348  001016  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3349  00101A  0E05               	movlw	5
  3350  00101C  D7DF               	goto	L9
  3351  00101E                     l22231:
  3352                           
  3353                           ; BSR set to: 0
  3354                           ;sm_MenuConfiguration_MC50.c: 109:         {;sm_MenuConfiguration_MC50.c: 110:          
      +                             if(psm->last_event==ev_NextRemote)
  3355  00101E  EE20 F004          	lfsr	2,4
  3356  001022  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3357  001024  26D9               	addwf	fsr2l,f,c
  3358  001026  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3359  001028  22DA               	addwfc	fsr2h,f,c
  3360  00102A  0E09               	movlw	9
  3361  00102C  18DE               	xorwf	postinc2,w,c
  3362  00102E  10DE               	iorwf	postinc2,w,c
  3363  001030  A4D8               	btfss	status,2,c
  3364  001032  D008               	goto	l22239
  3365                           
  3366                           ; BSR set to: 0
  3367                           ;sm_MenuConfiguration_MC50.c: 111:             {;sm_MenuConfiguration_MC50.c: 112:      
      +                                     psm->current_state = st_SelectRemote;
  3368  001034  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3369  001038  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3370  00103C  0E04               	movlw	4
  3371  00103E  6EDE               	movwf	postinc2,c
  3372  001040  0E00               	movlw	0
  3373  001042  6EDD               	movwf	postdec2,c
  3374  001044                     l22239:
  3375                           
  3376                           ; BSR set to: 0
  3377                           ;sm_MenuConfiguration_MC50.c: 121:         {;sm_MenuConfiguration_MC50.c: 122:          
      +                             if(psm->last_event==ev_ParameterIsSaved)
  3378  001044  EE20 F004          	lfsr	2,4
  3379  001048  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3380  00104A  26D9               	addwf	fsr2l,f,c
  3381  00104C  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3382  00104E  22DA               	addwfc	fsr2h,f,c
  3383  001050  0E04               	movlw	4
  3384  001052                     L123:
  3385  001052  18DE               	xorwf	postinc2,w,c
  3386  001054  10DE               	iorwf	postinc2,w,c
  3387  001056  A4D8               	btfss	status,2,c
  3388  001058  D029               	goto	l22247
  3389  00105A                     u26790:
  3390                           
  3391                           ; BSR set to: 0
  3392                           ;sm_MenuConfiguration_MC50.c: 123:             {;sm_MenuConfiguration_MC50.c: 124:      
      +                                     psm->current_state = st_MainMenu;
  3393  00105A  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3394  00105E  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3395  001062  0E00               	movlw	0
  3396  001064  D7BB               	goto	L9
  3397  001066                     l3228:
  3398                           
  3399                           ; BSR set to: 0
  3400  001066  D7FF               	goto	l3228
  3401  001068                     l22245:
  3402                           
  3403                           ; BSR set to: 0
  3404  001068  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3405  00106C  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3406  001070  50DF               	movf	indf2,w,c
  3407  001072  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  3408  001074  6BEC               	clrf	(??_sm_execute_menuConfiguration+1)& (0+255),b
  3409                           
  3410                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3411                           ; Switch size 1, requested type "simple"
  3412                           ; Number of cases is 1, Range of values is 0 to 0
  3413                           ; switch strategies available:
  3414                           ; Name         Instructions Cycles
  3415                           ; simple_byte            4     3 (average)
  3416                           ;	Chosen strategy is simple_byte
  3417  001076  51EC               	movf	(??_sm_execute_menuConfiguration+1)& (0+255),w,b
  3418  001078  0A00               	xorlw	0	; case 0
  3419  00107A  A4D8               	btfss	status,2,c
  3420  00107C  D7F4               	goto	l3228
  3421                           
  3422                           ; BSR set to: 0
  3423                           ; Switch size 1, requested type "simple"
  3424                           ; Number of cases is 7, Range of values is 0 to 6
  3425                           ; switch strategies available:
  3426                           ; Name         Instructions Cycles
  3427                           ; simple_byte           22    12 (average)
  3428                           ;	Chosen strategy is simple_byte
  3429  00107E  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  3430  001080  0A00               	xorlw	0	; case 0
  3431  001082  B4D8               	btfsc	status,2,c
  3432  001084  D74F               	goto	l22187
  3433  001086  0A01               	xorlw	1	; case 1
  3434  001088  B4D8               	btfsc	status,2,c
  3435  00108A  D78F               	goto	l22203
  3436  00108C  0A03               	xorlw	3	; case 2
  3437  00108E  B4D8               	btfsc	status,2,c
  3438  001090  D7D9               	goto	l22239
  3439  001092  0A01               	xorlw	1	; case 3
  3440  001094  B4D8               	btfsc	status,2,c
  3441  001096  D7A6               	goto	l22215
  3442  001098  0A07               	xorlw	7	; case 4
  3443  00109A  B4D8               	btfsc	status,2,c
  3444  00109C  D7AF               	goto	l22223
  3445  00109E  0A01               	xorlw	1	; case 5
  3446  0010A0  B4D8               	btfsc	status,2,c
  3447  0010A2  D7BD               	goto	l22231
  3448  0010A4  0A03               	xorlw	3	; case 6
  3449  0010A6  B4D8               	btfsc	status,2,c
  3450  0010A8  D7CD               	goto	l22239
  3451  0010AA  D7DD               	goto	l3228
  3452  0010AC                     l22247:
  3453                           
  3454                           ; BSR set to: 0
  3455                           ;sm_MenuConfiguration_MC50.c: 137:     sm_send_event(&menuConfiguration_stateMachine, ev
      +                          _NULL);
  3456  0010AC  0EBD               	movlw	low _menuConfiguration_stateMachine
  3457  0010AE  6E12               	movwf	sm_send_event@psm^0,c
  3458  0010B0  0E02               	movlw	high _menuConfiguration_stateMachine
  3459  0010B2  6E13               	movwf	(sm_send_event@psm+1)^0,c
  3460  0010B4  0E00               	movlw	0
  3461  0010B6  6E15               	movwf	(sm_send_event@event+1)^0,c
  3462  0010B8  0E00               	movlw	0
  3463  0010BA  6E14               	movwf	sm_send_event@event^0,c
  3464  0010BC  EC29  F041         	call	_sm_send_event	;wreg free
  3465                           
  3466                           ;sm_MenuConfiguration_MC50.c: 142:     switch((sm_state_Menu_t) psm->current_state)
  3467  0010C0  D3BF               	goto	l22559
  3468  0010C2                     l22249:
  3469                           
  3470                           ; BSR set to: 0
  3471                           ;sm_MenuConfiguration_MC50.c: 145:         {;sm_MenuConfiguration_MC50.c: 146:          
      +                             if(var_sys.ProgrammingDistanceIs==TypeProgrammingModeFull)
  3472  0010C2  0E06               	movlw	6
  3473  0010C4  0101               	movlb	1	; () banked
  3474  0010C6  193B               	xorwf	(_var_sys+59)& (0+255),w,b	;volatile
  3475  0010C8  A4D8               	btfss	status,2,c
  3476  0010CA  D02F               	goto	l22259
  3477                           
  3478                           ; BSR set to: 1
  3479                           ;sm_MenuConfiguration_MC50.c: 147:             {;sm_MenuConfiguration_MC50.c: 148:      
      +                                     ts_system.timeoutMenu=10*(1000/50);
  3480  0010CC  0E00               	movlw	0
  3481  0010CE  6FA9               	movwf	(_ts_system+15)& (0+255),b	;volatile
  3482  0010D0  0EC8               	movlw	200
  3483  0010D2  6FA8               	movwf	(_ts_system+14)& (0+255),b	;volatile
  3484                           
  3485                           ;sm_MenuConfiguration_MC50.c: 149:                 var_sys.DistanceProgrammingActive=YES
      +                          ;
  3486  0010D4  0E01               	movlw	1
  3487  0010D6  6F40               	movwf	(_var_sys+64)& (0+255),b	;volatile
  3488                           
  3489                           ;sm_MenuConfiguration_MC50.c: 150:                 menu_st.parameterSelected=0;
  3490  0010D8  0E00               	movlw	0
  3491  0010DA  6F68               	movwf	(_menu_st+23)& (0+255),b
  3492                           
  3493                           ; BSR set to: 1
  3494                           ;sm_MenuConfiguration_MC50.c: 151:                 if (setValueToEdit(menu_st.actualMenu
      +                          ,menu_st.parameterSelected)) {
  3495  0010DC  C168  F03A         	movff	_menu_st+23,setValueToEdit@ParameterSelected
  3496  0010E0  5166               	movf	(_menu_st+21)& (0+255),w,b
  3497  0010E2  ECCA  F00F         	call	_setValueToEdit
  3498  0010E6  0900               	iorlw	0
  3499  0010E8  B4D8               	btfsc	status,2,c
  3500  0010EA  0012               	return	
  3501                           
  3502                           ; BSR set to: 0
  3503                           ;sm_MenuConfiguration_MC50.c: 153:                      sm_send_event(&menuConfiguration
      +                          _stateMachine, ev_addRemotes);
  3504  0010EC  0EBD               	movlw	low _menuConfiguration_stateMachine
  3505  0010EE  6E12               	movwf	sm_send_event@psm^0,c
  3506  0010F0  0E02               	movlw	high _menuConfiguration_stateMachine
  3507  0010F2  6E13               	movwf	(sm_send_event@psm+1)^0,c
  3508  0010F4  0E00               	movlw	0
  3509  0010F6  6E15               	movwf	(sm_send_event@event+1)^0,c
  3510  0010F8  0E08               	movlw	8
  3511  0010FA  6E14               	movwf	sm_send_event@event^0,c
  3512  0010FC  EC29  F041         	call	_sm_send_event	;wreg free
  3513                           
  3514                           ;sm_MenuConfiguration_MC50.c: 154:                      SetSegmentValueIntermitentMain(e
      +                          dit_Param.tempValue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10),(1000/50));
  3515  001100  0E0A               	movlw	10
  3516  001102  6E10               	movwf	___lbdiv@divisor^0,c
  3517  001104  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3518  001106  ECED  F044         	call	___lbdiv
  3519  00110A  0DF6               	mullw	246
  3520  00110C  50F3               	movf	243,w,c
  3521  00110E  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  3522  001110  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  3523  001112  0E00               	movlw	0
  3524  001114  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  3525  001116  0E14               	movlw	20
  3526  001118  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  3527  00111A  0E0A               	movlw	10
  3528  00111C  6E10               	movwf	___lbdiv@divisor^0,c
  3529  00111E  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3530  001120  ECED  F044         	call	___lbdiv
  3531  001124  EC7D  F048         	call	_SetSegmentValueIntermitentMain
  3532  001128  0012               	return	
  3533  00112A                     l22259:
  3534                           
  3535                           ; BSR set to: 1
  3536  00112A  0E05               	movlw	5
  3537  00112C  193B               	xorwf	(_var_sys+59)& (0+255),w,b	;volatile
  3538  00112E  A4D8               	btfss	status,2,c
  3539  001130  D02F               	goto	l22269
  3540                           
  3541                           ; BSR set to: 1
  3542                           ;sm_MenuConfiguration_MC50.c: 158:             {;sm_MenuConfiguration_MC50.c: 159:      
      +                                     ts_system.timeoutMenu=10*(1000/50);
  3543  001132  0E00               	movlw	0
  3544  001134  6FA9               	movwf	(_ts_system+15)& (0+255),b	;volatile
  3545  001136  0EC8               	movlw	200
  3546  001138  6FA8               	movwf	(_ts_system+14)& (0+255),b	;volatile
  3547                           
  3548                           ;sm_MenuConfiguration_MC50.c: 160:                 var_sys.DistanceProgrammingActive=YES
      +                          ;
  3549  00113A  0E01               	movlw	1
  3550  00113C  6F40               	movwf	(_var_sys+64)& (0+255),b	;volatile
  3551                           
  3552                           ;sm_MenuConfiguration_MC50.c: 161:                 menu_st.parameterSelected=1;
  3553  00113E  0E01               	movlw	1
  3554  001140  6F68               	movwf	(_menu_st+23)& (0+255),b
  3555                           
  3556                           ; BSR set to: 1
  3557                           ;sm_MenuConfiguration_MC50.c: 162:                 if (setValueToEdit(menu_st.actualMenu
      +                          ,menu_st.parameterSelected)) {
  3558  001142  C168  F03A         	movff	_menu_st+23,setValueToEdit@ParameterSelected
  3559  001146  5166               	movf	(_menu_st+21)& (0+255),w,b
  3560  001148  ECCA  F00F         	call	_setValueToEdit
  3561  00114C  0900               	iorlw	0
  3562  00114E  B4D8               	btfsc	status,2,c
  3563  001150  0012               	return	
  3564                           
  3565                           ; BSR set to: 0
  3566                           ;sm_MenuConfiguration_MC50.c: 164:                      sm_send_event(&menuConfiguration
      +                          _stateMachine, ev_addRemotes);
  3567  001152  0EBD               	movlw	low _menuConfiguration_stateMachine
  3568  001154  6E12               	movwf	sm_send_event@psm^0,c
  3569  001156  0E02               	movlw	high _menuConfiguration_stateMachine
  3570  001158  6E13               	movwf	(sm_send_event@psm+1)^0,c
  3571  00115A  0E00               	movlw	0
  3572  00115C  6E15               	movwf	(sm_send_event@event+1)^0,c
  3573  00115E  0E08               	movlw	8
  3574  001160  6E14               	movwf	sm_send_event@event^0,c
  3575  001162  EC29  F041         	call	_sm_send_event	;wreg free
  3576                           
  3577                           ;sm_MenuConfiguration_MC50.c: 165:                      SetSegmentValueIntermitentMain(e
      +                          dit_Param.tempValue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10),(1000/50));
  3578  001166  0E0A               	movlw	10
  3579  001168  6E10               	movwf	___lbdiv@divisor^0,c
  3580  00116A  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3581  00116C  ECED  F044         	call	___lbdiv
  3582  001170  0DF6               	mullw	246
  3583  001172  50F3               	movf	243,w,c
  3584  001174  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  3585  001176  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  3586  001178  0E00               	movlw	0
  3587  00117A  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  3588  00117C  0E14               	movlw	20
  3589  00117E  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  3590  001180  0E0A               	movlw	10
  3591  001182  6E10               	movwf	___lbdiv@divisor^0,c
  3592  001184  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3593  001186  ECED  F044         	call	___lbdiv
  3594  00118A  EC7D  F048         	call	_SetSegmentValueIntermitentMain
  3595                           
  3596                           ; BSR set to: 1
  3597                           ;sm_MenuConfiguration_MC50.c: 167:             }
  3598                           
  3599                           ;sm_MenuConfiguration_MC50.c: 166:                 }
  3600  00118E  0012               	return	
  3601  001190                     l22269:
  3602                           
  3603                           ; BSR set to: 1
  3604  001190  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  3605  001192  A4D8               	btfss	status,2,c
  3606  001194  D023               	goto	l22281
  3607                           
  3608                           ; BSR set to: 1
  3609                           ;sm_MenuConfiguration_MC50.c: 169:             {;sm_MenuConfiguration_MC50.c: 170:      
      +                                     ts_system.timeoutMenu= ((1000/50)*5) ;
  3610  001196  0E00               	movlw	0
  3611  001198  6FA9               	movwf	(_ts_system+15)& (0+255),b	;volatile
  3612  00119A  0E64               	movlw	100
  3613  00119C  6FA8               	movwf	(_ts_system+14)& (0+255),b	;volatile
  3614                           
  3615                           ;sm_MenuConfiguration_MC50.c: 171:                 if(menu_st.parameterSelected==0)
  3616  00119E  5168               	movf	(_menu_st+23)& (0+255),w,b
  3617  0011A0  A4D8               	btfss	status,2,c
  3618  0011A2  D003               	goto	l22275
  3619                           
  3620                           ; BSR set to: 1
  3621                           ;sm_MenuConfiguration_MC50.c: 172:                 {;sm_MenuConfiguration_MC50.c: 173:  
      +                                             menu_st.parameterSelected=menu_st.menuSize-1;
  3622  0011A4  0567               	decf	(_menu_st+22)& (0+255),w,b
  3623  0011A6  6F68               	movwf	(_menu_st+23)& (0+255),b
  3624                           
  3625                           ;sm_MenuConfiguration_MC50.c: 174:                 }
  3626  0011A8  D001               	goto	l22277
  3627  0011AA                     l22275:
  3628                           
  3629                           ; BSR set to: 1
  3630                           ;sm_MenuConfiguration_MC50.c: 176:                 {;sm_MenuConfiguration_MC50.c: 177:  
      +                                             menu_st.parameterSelected--;
  3631  0011AA  0768               	decf	(_menu_st+23)& (0+255),f,b
  3632  0011AC                     l22277:
  3633                           
  3634                           ; BSR set to: 1
  3635                           ;sm_MenuConfiguration_MC50.c: 179:                 SetSegmentValueMain(menu_st.menuList[
      +                          menu_st.parameterSelected].value_display1, menu_st.menuList[menu_st.parameterSelected].v
      +                          alue_display2);
  3636  0011AC  5168               	movf	(_menu_st+23)& (0+255),w,b
  3637  0011AE  0D02               	mullw	2
  3638  0011B0  0E52               	movlw	low (_menu_st+1)
  3639  0011B2  24F3               	addwf	243,w,c
  3640  0011B4  6ED9               	movwf	fsr2l,c
  3641  0011B6  0E01               	movlw	high (_menu_st+1)
  3642  0011B8  20F4               	addwfc	prodh,w,c
  3643  0011BA  6EDA               	movwf	fsr2h,c
  3644  0011BC  50DF               	movf	indf2,w,c
  3645  0011BE  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3646  0011C0  5168               	movf	(_menu_st+23)& (0+255),w,b
  3647  0011C2  0D02               	mullw	2
  3648  0011C4  0E51               	movlw	low _menu_st
  3649  0011C6  24F3               	addwf	243,w,c
  3650  0011C8  6ED9               	movwf	fsr2l,c
  3651  0011CA  0E01               	movlw	high _menu_st
  3652  0011CC  20F4               	addwfc	prodh,w,c
  3653  0011CE  6EDA               	movwf	fsr2h,c
  3654  0011D0  50DF               	movf	indf2,w,c
  3655  0011D2  ECE1  F047         	call	_SetSegmentValueMain
  3656  0011D6                     l22279:
  3657                           
  3658                           ;sm_MenuConfiguration_MC50.c: 180:                 button_struct.processed=1;
  3659  0011D6  0E01               	movlw	1
  3660  0011D8  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  3661                           
  3662                           ;sm_MenuConfiguration_MC50.c: 181:             }
  3663  0011DA  0012               	return	
  3664  0011DC                     l22281:
  3665                           
  3666                           ; BSR set to: 1
  3667  0011DC  0E17               	movlw	23
  3668  0011DE  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  3669  0011E0  A4D8               	btfss	status,2,c
  3670  0011E2  D021               	goto	l22295
  3671                           
  3672                           ; BSR set to: 1
  3673                           ;sm_MenuConfiguration_MC50.c: 183:             {;sm_MenuConfiguration_MC50.c: 184:      
      +                                     ts_system.timeoutMenu=((1000/50)*5) ;
  3674  0011E4  0E00               	movlw	0
  3675  0011E6  6FA9               	movwf	(_ts_system+15)& (0+255),b	;volatile
  3676  0011E8  0E64               	movlw	100
  3677  0011EA  6FA8               	movwf	(_ts_system+14)& (0+255),b	;volatile
  3678                           
  3679                           ; BSR set to: 1
  3680                           ;sm_MenuConfiguration_MC50.c: 185:                 menu_st.parameterSelected++;
  3681  0011EC  2B68               	incf	(_menu_st+23)& (0+255),f,b
  3682                           
  3683                           ; BSR set to: 1
  3684                           ;sm_MenuConfiguration_MC50.c: 186:                 if(menu_st.parameterSelected>=menu_st
      +                          .menuSize)
  3685  0011EE  5167               	movf	(_menu_st+22)& (0+255),w,b
  3686  0011F0  5D68               	subwf	(_menu_st+23)& (0+255),w,b
  3687  0011F2  A0D8               	btfss	status,0,c
  3688  0011F4  D002               	goto	l22291
  3689                           
  3690                           ; BSR set to: 1
  3691                           ;sm_MenuConfiguration_MC50.c: 187:                 {;sm_MenuConfiguration_MC50.c: 188:  
      +                                             menu_st.parameterSelected=0;
  3692  0011F6  0E00               	movlw	0
  3693  0011F8  6F68               	movwf	(_menu_st+23)& (0+255),b
  3694  0011FA                     l22291:
  3695                           
  3696                           ; BSR set to: 1
  3697                           ;sm_MenuConfiguration_MC50.c: 190:                 SetSegmentValueMain(menu_st.menuList[
      +                          menu_st.parameterSelected].value_display1, menu_st.menuList[menu_st.parameterSelected].v
      +                          alue_display2);
  3698  0011FA  5168               	movf	(_menu_st+23)& (0+255),w,b
  3699  0011FC  0D02               	mullw	2
  3700  0011FE  0E52               	movlw	low (_menu_st+1)
  3701  001200  24F3               	addwf	243,w,c
  3702  001202  6ED9               	movwf	fsr2l,c
  3703  001204  0E01               	movlw	high (_menu_st+1)
  3704  001206  20F4               	addwfc	prodh,w,c
  3705  001208  6EDA               	movwf	fsr2h,c
  3706  00120A  50DF               	movf	indf2,w,c
  3707  00120C  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3708  00120E  5168               	movf	(_menu_st+23)& (0+255),w,b
  3709  001210  0D02               	mullw	2
  3710  001212  0E51               	movlw	low _menu_st
  3711  001214  24F3               	addwf	243,w,c
  3712  001216  6ED9               	movwf	fsr2l,c
  3713  001218  0E01               	movlw	high _menu_st
  3714  00121A  20F4               	addwfc	prodh,w,c
  3715  00121C  6EDA               	movwf	fsr2h,c
  3716  00121E  50DF               	movf	indf2,w,c
  3717  001220  ECE1  F047         	call	_SetSegmentValueMain
  3718  001224  D7D8               	goto	l22279
  3719  001226                     l22295:
  3720                           
  3721                           ; BSR set to: 1
  3722  001226  0E0C               	movlw	12
  3723  001228  6166               	cpfslt	(_menu_st+21)& (0+255),b
  3724  00122A  D09A               	goto	l22351
  3725                           
  3726                           ; BSR set to: 1
  3727                           ;sm_MenuConfiguration_MC50.c: 194:             {;sm_MenuConfiguration_MC50.c: 195:      
      +                                     if (button_struct.current==0 && button_struct.timer>(( 500/50)) )
  3728  00122C  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  3729  00122E  A4D8               	btfss	status,2,c
  3730  001230  D053               	goto	l22317
  3731                           
  3732                           ; BSR set to: 1
  3733  001232  0E0A               	movlw	10
  3734  001234  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  3735  001236  D050               	goto	l22317
  3736                           
  3737                           ; BSR set to: 1
  3738                           ;sm_MenuConfiguration_MC50.c: 196:                 {;sm_MenuConfiguration_MC50.c: 197:  
      +                                             ts_system.timeoutMenu=((1000/50)*5) ;
  3739  001238  0E00               	movlw	0
  3740  00123A  6FA9               	movwf	(_ts_system+15)& (0+255),b	;volatile
  3741  00123C  0E64               	movlw	100
  3742  00123E  6FA8               	movwf	(_ts_system+14)& (0+255),b	;volatile
  3743                           
  3744                           ; BSR set to: 1
  3745                           ;sm_MenuConfiguration_MC50.c: 199:                     if (setValueToEdit(menu_st.actual
      +                          Menu,menu_st.parameterSelected))
  3746  001240  C168  F03A         	movff	_menu_st+23,setValueToEdit@ParameterSelected
  3747  001244  5166               	movf	(_menu_st+21)& (0+255),w,b
  3748  001246  ECCA  F00F         	call	_setValueToEdit
  3749  00124A  0900               	iorlw	0
  3750  00124C  B4D8               	btfsc	status,2,c
  3751  00124E  D7C3               	goto	l22279
  3752                           
  3753                           ; BSR set to: 0
  3754                           ;sm_MenuConfiguration_MC50.c: 200:                     {;sm_MenuConfiguration_MC50.c: 20
      +                          2:                          sm_send_event(&menuConfiguration_stateMachine, ev_ParameterI
      +                          sSelected);
  3755  001250  0EBD               	movlw	low _menuConfiguration_stateMachine
  3756  001252  6E12               	movwf	sm_send_event@psm^0,c
  3757  001254  0E02               	movlw	high _menuConfiguration_stateMachine
  3758  001256  6E13               	movwf	(sm_send_event@psm+1)^0,c
  3759  001258  0E00               	movlw	0
  3760  00125A  6E15               	movwf	(sm_send_event@event+1)^0,c
  3761  00125C  0E01               	movlw	1
  3762  00125E  6E14               	movwf	sm_send_event@event^0,c
  3763  001260  EC29  F041         	call	_sm_send_event	;wreg free
  3764                           
  3765                           ;sm_MenuConfiguration_MC50.c: 203:                          if((edit_Param.Value==(unsig
      +                          ned char*)&var_sys_NVM.TypeofMotor)||(edit_Param.Value==(unsigned char*)&var_sys_NVM.Dir
      +                          ection_motor)){
  3766  001264  0E98               	movlw	_var_sys_NVM& (0+255)
  3767  001266  0F1C               	addlw	28
  3768  001268  0100               	movlb	0	; () banked
  3769  00126A  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  3770  00126C  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  3771  00126E  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  3772  001270  E101               	bnz	u26925
  3773  001272  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  3774  001274                     u26925:
  3775  001274  B4D8               	btfsc	status,2,c
  3776  001276  D009               	goto	u26930
  3777                           
  3778                           ; BSR set to: 0
  3779  001278  0E98               	movlw	_var_sys_NVM& (0+255)
  3780  00127A  0F1B               	addlw	27
  3781  00127C  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  3782  00127E  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  3783  001280  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  3784  001282  E101               	bnz	u26935
  3785  001284  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  3786  001286                     u26935:
  3787  001286  A4D8               	btfss	status,2,c
  3788  001288  D016               	goto	l22313
  3789  00128A                     u26930:
  3790                           
  3791                           ; BSR set to: 0
  3792                           ;sm_MenuConfiguration_MC50.c: 204:                            SetSegmentValueMain(menu_s
      +                          t.menuList[edit_Param.tempValue].value_display1, menu_st.menuList[edit_Param.tempValue].
      +                          value_display2);
  3793  00128A  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3794  00128C  0D02               	mullw	2
  3795  00128E  0E52               	movlw	low (_menu_st+1)
  3796  001290  24F3               	addwf	243,w,c
  3797  001292  6ED9               	movwf	fsr2l,c
  3798  001294  0E01               	movlw	high (_menu_st+1)
  3799  001296  20F4               	addwfc	prodh,w,c
  3800  001298  6EDA               	movwf	fsr2h,c
  3801  00129A  50DF               	movf	indf2,w,c
  3802  00129C  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3803  00129E  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3804  0012A0  0D02               	mullw	2
  3805  0012A2  0E51               	movlw	low _menu_st
  3806  0012A4  24F3               	addwf	243,w,c
  3807  0012A6  6ED9               	movwf	fsr2l,c
  3808  0012A8  0E01               	movlw	high _menu_st
  3809  0012AA  20F4               	addwfc	prodh,w,c
  3810  0012AC  6EDA               	movwf	fsr2h,c
  3811  0012AE  50DF               	movf	indf2,w,c
  3812  0012B0  ECE1  F047         	call	_SetSegmentValueMain
  3813                           
  3814                           ;sm_MenuConfiguration_MC50.c: 206:                          }
  3815  0012B4  D790               	goto	l22279
  3816  0012B6                     l22313:
  3817                           
  3818                           ; BSR set to: 0
  3819                           ;sm_MenuConfiguration_MC50.c: 208:                          SetSegmentValueMain(edit_Par
      +                          am.tempValue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10));
  3820  0012B6  0E0A               	movlw	10
  3821  0012B8  6E10               	movwf	___lbdiv@divisor^0,c
  3822  0012BA  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3823  0012BC  ECED  F044         	call	___lbdiv
  3824  0012C0  0DF6               	mullw	246
  3825  0012C2  50F3               	movf	243,w,c
  3826  0012C4  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  3827  0012C6  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3828  0012C8  0E0A               	movlw	10
  3829  0012CA  6E10               	movwf	___lbdiv@divisor^0,c
  3830  0012CC  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3831  0012CE  ECED  F044         	call	___lbdiv
  3832  0012D2  ECE1  F047         	call	_SetSegmentValueMain
  3833  0012D6  D77F               	goto	l22279
  3834  0012D8                     l22317:
  3835                           
  3836                           ; BSR set to: 1
  3837  0012D8  BFA9               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  3838  0012DA  D008               	goto	u26950
  3839  0012DC  51A9               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  3840  0012DE  E103               	bnz	u26940
  3841  0012E0  05A8               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  3842  0012E2  A0D8               	btfss	status,0,c
  3843  0012E4  D003               	goto	u26950
  3844  0012E6                     u26940:
  3845                           
  3846                           ; BSR set to: 1
  3847  0012E6  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  3848  0012E8  A4D8               	btfss	status,2,c
  3849  0012EA  D01E               	goto	l22335
  3850  0012EC                     u26950:
  3851                           
  3852                           ; BSR set to: 1
  3853  0012EC  0E02               	movlw	2
  3854  0012EE  6166               	cpfslt	(_menu_st+21)& (0+255),b
  3855  0012F0  D01B               	goto	l22335
  3856                           
  3857                           ; BSR set to: 1
  3858                           ;sm_MenuConfiguration_MC50.c: 216:                 {;sm_MenuConfiguration_MC50.c: 217:  
      +                                             ts_system.timeoutMenu=0;
  3859  0012F2  0E00               	movlw	0
  3860  0012F4  6FA9               	movwf	(_ts_system+15)& (0+255),b	;volatile
  3861  0012F6  0E00               	movlw	0
  3862  0012F8  6FA8               	movwf	(_ts_system+14)& (0+255),b	;volatile
  3863                           
  3864                           ; BSR set to: 1
  3865                           ;sm_MenuConfiguration_MC50.c: 218:                     sm_send_event(&main_stateMachine,
      +                           ev_goto_StandBy);
  3866  0012FA  0EED               	movlw	low _main_stateMachine
  3867  0012FC  6E12               	movwf	sm_send_event@psm^0,c
  3868  0012FE  0E01               	movlw	high _main_stateMachine
  3869  001300  6E13               	movwf	(sm_send_event@psm+1)^0,c
  3870  001302  0E00               	movlw	0
  3871  001304  6E15               	movwf	(sm_send_event@event+1)^0,c
  3872  001306  0E07               	movlw	7
  3873  001308  6E14               	movwf	sm_send_event@event^0,c
  3874  00130A  EC29  F041         	call	_sm_send_event	;wreg free
  3875                           
  3876                           ;sm_MenuConfiguration_MC50.c: 219:                     SetSegmentValueMain(dMinus,dMinus
      +                          );
  3877  00130E  0E18               	movlw	24
  3878  001310  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3879  001312  0E18               	movlw	24
  3880  001314  ECE1  F047         	call	_SetSegmentValueMain
  3881                           
  3882                           ; BSR set to: 0
  3883                           ;sm_MenuConfiguration_MC50.c: 220:                     menu_st.lastMainParameterSelected
      +                           = 0;
  3884  001318  0E00               	movlw	0
  3885  00131A  0101               	movlb	1	; () banked
  3886  00131C  6F69               	movwf	(_menu_st+24)& (0+255),b
  3887                           
  3888                           ; BSR set to: 1
  3889                           ;sm_MenuConfiguration_MC50.c: 221:                     button_struct.processed=1;
  3890  00131E  0E01               	movlw	1
  3891  001320  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  3892                           
  3893                           ; BSR set to: 1
  3894                           ;sm_MenuConfiguration_MC50.c: 222:                     ClearFlag_rfCMD();
  3895  001322  EC32  F049         	call	_ClearFlag_rfCMD	;wreg free
  3896                           
  3897                           ;sm_MenuConfiguration_MC50.c: 224:                 }
  3898  001326  0012               	return	
  3899  001328                     l22335:
  3900                           
  3901                           ; BSR set to: 1
  3902  001328  BFA9               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  3903  00132A  D008               	goto	u26980
  3904  00132C  51A9               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  3905  00132E  E103               	bnz	u26970
  3906  001330  05A8               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  3907  001332  A0D8               	btfss	status,0,c
  3908  001334  D003               	goto	u26980
  3909  001336                     u26970:
  3910                           
  3911                           ; BSR set to: 1
  3912  001336  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  3913  001338  A4D8               	btfss	status,2,c
  3914  00133A  D004               	goto	l22343
  3915  00133C                     u26980:
  3916                           
  3917                           ; BSR set to: 1
  3918                           ;sm_MenuConfiguration_MC50.c: 226:                 {;sm_MenuConfiguration_MC50.c: 228:  
      +                                             load_New_Menu(menu_st.lastMenu);
  3919  00133C  5165               	movf	(_menu_st+20)& (0+255),w,b
  3920  00133E  EC81  F01E         	call	_load_New_Menu
  3921  001342  D749               	goto	l22279
  3922  001344                     l22343:
  3923                           
  3924                           ; BSR set to: 1
  3925  001344  BFA9               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  3926  001346  D005               	goto	u26990
  3927  001348  51A9               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  3928  00134A  E102               	bnz	u26991
  3929  00134C  05A8               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  3930  00134E  B0D8               	btfsc	status,0,c
  3931  001350                     u26991:
  3932  001350  0012               	return	
  3933  001352                     u26990:
  3934                           
  3935                           ; BSR set to: 1
  3936  001352  0E01               	movlw	1
  3937  001354  6566               	cpfsgt	(_menu_st+21)& (0+255),b
  3938  001356  0012               	return	
  3939                           
  3940                           ; BSR set to: 1
  3941                           ;sm_MenuConfiguration_MC50.c: 232:                 {;sm_MenuConfiguration_MC50.c: 234:  
      +                                             load_New_Menu(menu_st.lastMenu);
  3942  001358  5165               	movf	(_menu_st+20)& (0+255),w,b
  3943  00135A  EC81  F01E         	call	_load_New_Menu
  3944  00135E  D73B               	goto	l22279
  3945  001360                     l22351:
  3946                           
  3947                           ; BSR set to: 1
  3948  001360  0E27               	movlw	39
  3949  001362  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  3950  001364  A4D8               	btfss	status,2,c
  3951  001366  D032               	goto	l22367
  3952                           
  3953                           ; BSR set to: 1
  3954  001368  0E0A               	movlw	10
  3955  00136A  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  3956  00136C  D02F               	goto	l22367
  3957                           
  3958                           ; BSR set to: 1
  3959  00136E  0E0D               	movlw	13
  3960  001370  1966               	xorwf	(_menu_st+21)& (0+255),w,b
  3961  001372  B4D8               	btfsc	status,2,c
  3962  001374  D02B               	goto	l22367
  3963                           
  3964                           ; BSR set to: 1
  3965                           ;sm_MenuConfiguration_MC50.c: 239:             {;sm_MenuConfiguration_MC50.c: 240:      
      +                                         ts_system.timeoutMenu=((1000/50)*5);
  3966  001376  0E00               	movlw	0
  3967  001378  6FA9               	movwf	(_ts_system+15)& (0+255),b	;volatile
  3968  00137A  0E64               	movlw	100
  3969  00137C  6FA8               	movwf	(_ts_system+14)& (0+255),b	;volatile
  3970                           
  3971                           ; BSR set to: 1
  3972                           ;sm_MenuConfiguration_MC50.c: 241:                     if (setValueToEdit(menu_st.actual
      +                          Menu,menu_st.parameterSelected))
  3973  00137E  C168  F03A         	movff	_menu_st+23,setValueToEdit@ParameterSelected
  3974  001382  5166               	movf	(_menu_st+21)& (0+255),w,b
  3975  001384  ECCA  F00F         	call	_setValueToEdit
  3976  001388  0900               	iorlw	0
  3977  00138A  B4D8               	btfsc	status,2,c
  3978  00138C  D724               	goto	l22279
  3979                           
  3980                           ; BSR set to: 0
  3981                           ;sm_MenuConfiguration_MC50.c: 243:                     {;sm_MenuConfiguration_MC50.c: 24
      +                          4:                         sm_send_event(&menuConfiguration_stateMachine, ev_addRemotes)
      +                          ;
  3982  00138E  0EBD               	movlw	low _menuConfiguration_stateMachine
  3983  001390  6E12               	movwf	sm_send_event@psm^0,c
  3984  001392  0E02               	movlw	high _menuConfiguration_stateMachine
  3985  001394  6E13               	movwf	(sm_send_event@psm+1)^0,c
  3986  001396  0E00               	movlw	0
  3987  001398  6E15               	movwf	(sm_send_event@event+1)^0,c
  3988  00139A  0E08               	movlw	8
  3989  00139C  6E14               	movwf	sm_send_event@event^0,c
  3990  00139E  EC29  F041         	call	_sm_send_event	;wreg free
  3991                           
  3992                           ;sm_MenuConfiguration_MC50.c: 245:                         SetSegmentValueIntermitentMai
      +                          n(edit_Param.tempValue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10),(1000/50)
      +                          );
  3993  0013A2  0E0A               	movlw	10
  3994  0013A4  6E10               	movwf	___lbdiv@divisor^0,c
  3995  0013A6  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3996  0013A8  ECED  F044         	call	___lbdiv
  3997  0013AC  0DF6               	mullw	246
  3998  0013AE  50F3               	movf	243,w,c
  3999  0013B0  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  4000  0013B2  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  4001  0013B4  0E00               	movlw	0
  4002  0013B6  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  4003  0013B8  0E14               	movlw	20
  4004  0013BA  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  4005  0013BC  0E0A               	movlw	10
  4006  0013BE  6E10               	movwf	___lbdiv@divisor^0,c
  4007  0013C0  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4008  0013C2  ECED  F044         	call	___lbdiv
  4009  0013C6  EC7D  F048         	call	_SetSegmentValueIntermitentMain
  4010  0013CA  D705               	goto	l22279
  4011  0013CC                     l22367:
  4012                           
  4013                           ; BSR set to: 1
  4014  0013CC  0E0D               	movlw	13
  4015  0013CE  1966               	xorwf	(_menu_st+21)& (0+255),w,b
  4016  0013D0  A4D8               	btfss	status,2,c
  4017  0013D2  D027               	goto	l22385
  4018                           
  4019                           ; BSR set to: 1
  4020  0013D4  51A6               	movf	(_ts_system+12)& (0+255),w,b	;volatile
  4021  0013D6  11A7               	iorwf	(_ts_system+13)& (0+255),w,b	;volatile
  4022  0013D8  A4D8               	btfss	status,2,c
  4023  0013DA  D023               	goto	l22385
  4024                           
  4025                           ; BSR set to: 1
  4026                           ;sm_MenuConfiguration_MC50.c: 250:             {;sm_MenuConfiguration_MC50.c: 251:      
      +                                     var_sys_NVM.positionRemotesFull=0;
  4027  0013DC  0E00               	movlw	0
  4028  0013DE  0100               	movlb	0	; () banked
  4029  0013E0  6FB8               	movwf	(_var_sys_NVM+32)& (0+255),b	;volatile
  4030                           
  4031                           ;sm_MenuConfiguration_MC50.c: 252:                 var_sys_NVM.positionRemotesWalk=0;
  4032  0013E2  0E00               	movlw	0
  4033  0013E4  6FB9               	movwf	(_var_sys_NVM+33)& (0+255),b	;volatile
  4034                           
  4035                           ;sm_MenuConfiguration_MC50.c: 253:                 var_sys_NVM.OnlyRollingCode=NO;
  4036  0013E6  0E00               	movlw	0
  4037  0013E8  6FBE               	movwf	(_var_sys_NVM+38)& (0+255),b	;volatile
  4038                           
  4039                           ; BSR set to: 0
  4040                           ;sm_MenuConfiguration_MC50.c: 254:                 SaveNVM_VarSystem(pageMemoryCounters)
      +                          ;
  4041  0013EA  0E02               	movlw	2
  4042  0013EC  EC0A  F045         	call	_SaveNVM_VarSystem
  4043                           
  4044                           ;sm_MenuConfiguration_MC50.c: 255:                 sm_send_event(&main_stateMachine, ev_
      +                          goto_StandBy);
  4045  0013F0  0EED               	movlw	low _main_stateMachine
  4046  0013F2  6E12               	movwf	sm_send_event@psm^0,c
  4047  0013F4  0E01               	movlw	high _main_stateMachine
  4048  0013F6  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4049  0013F8  0E00               	movlw	0
  4050  0013FA  6E15               	movwf	(sm_send_event@event+1)^0,c
  4051  0013FC  0E07               	movlw	7
  4052  0013FE  6E14               	movwf	sm_send_event@event^0,c
  4053  001400  EC29  F041         	call	_sm_send_event	;wreg free
  4054                           
  4055                           ;sm_MenuConfiguration_MC50.c: 256:                 SetSegmentValueMain(dMinus,dMinus);
  4056  001404  0E18               	movlw	24
  4057  001406  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4058  001408  0E18               	movlw	24
  4059  00140A  ECE1  F047         	call	_SetSegmentValueMain
  4060                           
  4061                           ; BSR set to: 0
  4062                           ;sm_MenuConfiguration_MC50.c: 257:                 button_struct.processed=1;
  4063  00140E  0E01               	movlw	1
  4064  001410  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  4065  001412                     l22381:
  4066                           
  4067                           ;sm_MenuConfiguration_MC50.c: 258:                 ClearFlag_rfCMD();
  4068  001412  EC32  F049         	call	_ClearFlag_rfCMD	;wreg free
  4069  001416                     l22383:
  4070                           
  4071                           ;sm_MenuConfiguration_MC50.c: 259:                  ts_system.timeoutMenu=0;
  4072  001416  0E00               	movlw	0
  4073  001418  0101               	movlb	1	; () banked
  4074  00141A  6FA9               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4075  00141C  0E00               	movlw	0
  4076  00141E  6FA8               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4077                           
  4078                           ;sm_MenuConfiguration_MC50.c: 260:             }
  4079  001420  0012               	return	
  4080  001422                     l22385:
  4081                           
  4082                           ; BSR set to: 1
  4083  001422  BFA9               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  4084  001424  D008               	goto	u27080
  4085  001426  51A9               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  4086  001428  E103               	bnz	u27070
  4087  00142A  05A8               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  4088  00142C  A0D8               	btfss	status,0,c
  4089  00142E  D003               	goto	u27080
  4090  001430                     u27070:
  4091                           
  4092                           ; BSR set to: 1
  4093  001430  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  4094  001432  A4D8               	btfss	status,2,c
  4095  001434  0012               	return	
  4096  001436                     u27080:
  4097                           
  4098                           ; BSR set to: 1
  4099                           ;sm_MenuConfiguration_MC50.c: 262:             {;sm_MenuConfiguration_MC50.c: 263:      
      +                                      sm_send_event(&main_stateMachine, ev_goto_StandBy);
  4100  001436  0EED               	movlw	low _main_stateMachine
  4101  001438  6E12               	movwf	sm_send_event@psm^0,c
  4102  00143A  0E01               	movlw	high _main_stateMachine
  4103  00143C  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4104  00143E  0E00               	movlw	0
  4105  001440  6E15               	movwf	(sm_send_event@event+1)^0,c
  4106  001442  0E07               	movlw	7
  4107  001444  6E14               	movwf	sm_send_event@event^0,c
  4108  001446  EC29  F041         	call	_sm_send_event	;wreg free
  4109                           
  4110                           ;sm_MenuConfiguration_MC50.c: 264:                  SetSegmentValueMain(dMinus,dMinus);
  4111  00144A  0E18               	movlw	24
  4112  00144C  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4113  00144E  0E18               	movlw	24
  4114  001450  ECE1  F047         	call	_SetSegmentValueMain
  4115                           
  4116                           ; BSR set to: 0
  4117                           ;sm_MenuConfiguration_MC50.c: 265:                  ClearFlag_rfCMD();
  4118  001454  EC32  F049         	call	_ClearFlag_rfCMD	;wreg free
  4119                           
  4120                           ;sm_MenuConfiguration_MC50.c: 266:                  button_struct.processed=1;
  4121  001458  0E01               	movlw	1
  4122  00145A  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  4123  00145C  D7DC               	goto	l22383
  4124  00145E                     l22399:
  4125                           
  4126                           ; BSR set to: 0
  4127                           ;sm_MenuConfiguration_MC50.c: 272:         {;sm_MenuConfiguration_MC50.c: 273:          
      +                             if (button_struct.current==0x00)
  4128  00145E  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  4129  001460  A4D8               	btfss	status,2,c
  4130  001462  D047               	goto	l22419
  4131                           
  4132                           ; BSR set to: 0
  4133                           ;sm_MenuConfiguration_MC50.c: 274:             {;sm_MenuConfiguration_MC50.c: 275:      
      +                                     ts_system.timeoutMenu=((1000/50)*5);
  4134  001464  0E00               	movlw	0
  4135  001466  0101               	movlb	1	; () banked
  4136  001468  6FA9               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4137  00146A  0E64               	movlw	100
  4138  00146C  6FA8               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4139                           
  4140                           ; BSR set to: 1
  4141                           ;sm_MenuConfiguration_MC50.c: 276:                 if(edit_Param.tempValue<=edit_Param.M
      +                          in)
  4142  00146E  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4143  001470  5C4B               	subwf	(_edit_Param+5)^0,w,c	;volatile
  4144  001472  A0D8               	btfss	status,0,c
  4145  001474  D003               	goto	l22407
  4146                           
  4147                           ; BSR set to: 1
  4148                           ;sm_MenuConfiguration_MC50.c: 277:                 {;sm_MenuConfiguration_MC50.c: 278:  
      +                                             edit_Param.tempValue=edit_Param.Max;
  4149  001476  C04A  F049         	movff	_edit_Param+4,_edit_Param+3	;volatile
  4150                           
  4151                           ;sm_MenuConfiguration_MC50.c: 279:                 }
  4152  00147A  D001               	goto	l22409
  4153  00147C                     l22407:
  4154                           
  4155                           ; BSR set to: 1
  4156                           ;sm_MenuConfiguration_MC50.c: 281:                 {;sm_MenuConfiguration_MC50.c: 282:  
      +                                             edit_Param.tempValue--;
  4157  00147C  0649               	decf	(_edit_Param+3)^0,f,c	;volatile
  4158  00147E                     l22409:
  4159                           
  4160                           ; BSR set to: 1
  4161                           ;sm_MenuConfiguration_MC50.c: 284:                 if ((edit_Param.Value==(unsigned char
      +                          *)&var_sys_NVM.TypeofMotor)||(edit_Param.Value==(unsigned char*)&var_sys_NVM.Direction_m
      +                          otor)){
  4162  00147E  0E98               	movlw	_var_sys_NVM& (0+255)
  4163  001480  0F1C               	addlw	28
  4164  001482  0100               	movlb	0	; () banked
  4165  001484  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  4166  001486  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  4167  001488  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  4168  00148A  E101               	bnz	u27115
  4169  00148C  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  4170  00148E                     u27115:
  4171  00148E  B4D8               	btfsc	status,2,c
  4172  001490  D009               	goto	u27120
  4173                           
  4174                           ; BSR set to: 0
  4175  001492  0E98               	movlw	_var_sys_NVM& (0+255)
  4176  001494  0F1B               	addlw	27
  4177  001496  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  4178  001498  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  4179  00149A  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  4180  00149C  E101               	bnz	u27125
  4181  00149E  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  4182  0014A0                     u27125:
  4183  0014A0  A4D8               	btfss	status,2,c
  4184  0014A2  D016               	goto	l22415
  4185  0014A4                     u27120:
  4186                           
  4187                           ; BSR set to: 0
  4188                           ;sm_MenuConfiguration_MC50.c: 285:                 SetSegmentValueMain(menu_st.menuList[
      +                          edit_Param.tempValue].value_display1, menu_st.menuList[edit_Param.tempValue].value_displ
      +                          ay2);
  4189  0014A4  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4190  0014A6  0D02               	mullw	2
  4191  0014A8  0E52               	movlw	low (_menu_st+1)
  4192  0014AA  24F3               	addwf	243,w,c
  4193  0014AC  6ED9               	movwf	fsr2l,c
  4194  0014AE  0E01               	movlw	high (_menu_st+1)
  4195  0014B0  20F4               	addwfc	prodh,w,c
  4196  0014B2  6EDA               	movwf	fsr2h,c
  4197  0014B4  50DF               	movf	indf2,w,c
  4198  0014B6  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4199  0014B8  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4200  0014BA  0D02               	mullw	2
  4201  0014BC  0E51               	movlw	low _menu_st
  4202  0014BE  24F3               	addwf	243,w,c
  4203  0014C0  6ED9               	movwf	fsr2l,c
  4204  0014C2  0E01               	movlw	high _menu_st
  4205  0014C4  20F4               	addwfc	prodh,w,c
  4206  0014C6  6EDA               	movwf	fsr2h,c
  4207  0014C8  50DF               	movf	indf2,w,c
  4208  0014CA  ECE1  F047         	call	_SetSegmentValueMain
  4209                           
  4210                           ;sm_MenuConfiguration_MC50.c: 286:                 }
  4211  0014CE  D683               	goto	l22279
  4212  0014D0                     l22415:
  4213                           
  4214                           ; BSR set to: 0
  4215                           ;sm_MenuConfiguration_MC50.c: 289:                 SetSegmentValueMain(edit_Param.tempVa
      +                          lue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10));
  4216  0014D0  0E0A               	movlw	10
  4217  0014D2  6E10               	movwf	___lbdiv@divisor^0,c
  4218  0014D4  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4219  0014D6  ECED  F044         	call	___lbdiv
  4220  0014DA  0DF6               	mullw	246
  4221  0014DC  50F3               	movf	243,w,c
  4222  0014DE  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  4223  0014E0  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4224  0014E2  0E0A               	movlw	10
  4225  0014E4  6E10               	movwf	___lbdiv@divisor^0,c
  4226  0014E6  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4227  0014E8  ECED  F044         	call	___lbdiv
  4228  0014EC  ECE1  F047         	call	_SetSegmentValueMain
  4229  0014F0  D672               	goto	l22279
  4230  0014F2                     l22419:
  4231                           
  4232                           ; BSR set to: 0
  4233  0014F2  0E17               	movlw	23
  4234  0014F4  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  4235  0014F6  A4D8               	btfss	status,2,c
  4236  0014F8  D045               	goto	l22439
  4237                           
  4238                           ; BSR set to: 0
  4239                           ;sm_MenuConfiguration_MC50.c: 294:             {;sm_MenuConfiguration_MC50.c: 295:      
      +                                     ts_system.timeoutMenu=((1000/50)*5) ;
  4240  0014FA  0E00               	movlw	0
  4241  0014FC  0101               	movlb	1	; () banked
  4242  0014FE  6FA9               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4243  001500  0E64               	movlw	100
  4244  001502  6FA8               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4245                           
  4246                           ; BSR set to: 1
  4247                           ;sm_MenuConfiguration_MC50.c: 296:                 edit_Param.tempValue++;
  4248  001504  2A49               	incf	(_edit_Param+3)^0,f,c	;volatile
  4249                           
  4250                           ; BSR set to: 1
  4251                           ;sm_MenuConfiguration_MC50.c: 297:                 if(edit_Param.tempValue>edit_Param.Ma
      +                          x)
  4252  001506  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4253  001508  5C4A               	subwf	(_edit_Param+4)^0,w,c	;volatile
  4254  00150A  A0D8               	btfss	status,0,c
  4255                           
  4256                           ; BSR set to: 1
  4257                           ;sm_MenuConfiguration_MC50.c: 298:                 {;sm_MenuConfiguration_MC50.c: 299:  
      +                                              edit_Param.tempValue=edit_Param.Min;
  4258  00150C  C04B  F049         	movff	_edit_Param+5,_edit_Param+3	;volatile
  4259                           
  4260                           ; BSR set to: 1
  4261                           ;sm_MenuConfiguration_MC50.c: 301:                 if ((edit_Param.Value==(unsigned char
      +                          *)&var_sys_NVM.TypeofMotor)||(edit_Param.Value==(unsigned char*)&var_sys_NVM.Direction_m
      +                          otor)){
  4262  001510  0E98               	movlw	_var_sys_NVM& (0+255)
  4263  001512  0F1C               	addlw	28
  4264  001514  0100               	movlb	0	; () banked
  4265  001516  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  4266  001518  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  4267  00151A  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  4268  00151C  E101               	bnz	u27155
  4269  00151E  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  4270  001520                     u27155:
  4271  001520  B4D8               	btfsc	status,2,c
  4272  001522  D009               	goto	u27160
  4273                           
  4274                           ; BSR set to: 0
  4275  001524  0E98               	movlw	_var_sys_NVM& (0+255)
  4276  001526  0F1B               	addlw	27
  4277  001528  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  4278  00152A  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  4279  00152C  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  4280  00152E  E101               	bnz	u27165
  4281  001530  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  4282  001532                     u27165:
  4283  001532  A4D8               	btfss	status,2,c
  4284  001534  D016               	goto	l22435
  4285  001536                     u27160:
  4286                           
  4287                           ; BSR set to: 0
  4288                           ;sm_MenuConfiguration_MC50.c: 302:                     SetSegmentValueMain(menu_st.menuL
      +                          ist[edit_Param.tempValue].value_display1, menu_st.menuList[edit_Param.tempValue].value_d
      +                          isplay2);
  4289  001536  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4290  001538  0D02               	mullw	2
  4291  00153A  0E52               	movlw	low (_menu_st+1)
  4292  00153C  24F3               	addwf	243,w,c
  4293  00153E  6ED9               	movwf	fsr2l,c
  4294  001540  0E01               	movlw	high (_menu_st+1)
  4295  001542  20F4               	addwfc	prodh,w,c
  4296  001544  6EDA               	movwf	fsr2h,c
  4297  001546  50DF               	movf	indf2,w,c
  4298  001548  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4299  00154A  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4300  00154C  0D02               	mullw	2
  4301  00154E  0E51               	movlw	low _menu_st
  4302  001550  24F3               	addwf	243,w,c
  4303  001552  6ED9               	movwf	fsr2l,c
  4304  001554  0E01               	movlw	high _menu_st
  4305  001556  20F4               	addwfc	prodh,w,c
  4306  001558  6EDA               	movwf	fsr2h,c
  4307  00155A  50DF               	movf	indf2,w,c
  4308  00155C  ECE1  F047         	call	_SetSegmentValueMain
  4309                           
  4310                           ;sm_MenuConfiguration_MC50.c: 303:                 }
  4311  001560  D63A               	goto	l22279
  4312  001562                     l22435:
  4313                           
  4314                           ; BSR set to: 0
  4315                           ;sm_MenuConfiguration_MC50.c: 306:                 SetSegmentValueMain(edit_Param.tempVa
      +                          lue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10));
  4316  001562  0E0A               	movlw	10
  4317  001564  6E10               	movwf	___lbdiv@divisor^0,c
  4318  001566  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4319  001568  ECED  F044         	call	___lbdiv
  4320  00156C  0DF6               	mullw	246
  4321  00156E  50F3               	movf	243,w,c
  4322  001570  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  4323  001572  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4324  001574  0E0A               	movlw	10
  4325  001576  6E10               	movwf	___lbdiv@divisor^0,c
  4326  001578  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4327  00157A  ECED  F044         	call	___lbdiv
  4328  00157E  ECE1  F047         	call	_SetSegmentValueMain
  4329  001582  D629               	goto	l22279
  4330  001584                     l22439:
  4331                           
  4332                           ; BSR set to: 0
  4333  001584  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  4334  001586  A4D8               	btfss	status,2,c
  4335  001588  D023               	goto	l22455
  4336                           
  4337                           ; BSR set to: 0
  4338  00158A  0E09               	movlw	9
  4339  00158C  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  4340  00158E  D020               	goto	l22455
  4341                           
  4342                           ; BSR set to: 0
  4343                           ;sm_MenuConfiguration_MC50.c: 312:             {;sm_MenuConfiguration_MC50.c: 313:      
      +                                     ts_system.timeoutMenu=((1000/50)*5) ;
  4344  001590  0E00               	movlw	0
  4345  001592  0101               	movlb	1	; () banked
  4346  001594  6FA9               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4347  001596  0E64               	movlw	100
  4348  001598  6FA8               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4349                           
  4350                           ; BSR set to: 1
  4351                           ;sm_MenuConfiguration_MC50.c: 315:                 edit_Param.Value[0]=edit_Param.tempVa
      +                          lue;
  4352  00159A  C047  FFD9         	movff	_edit_Param+1,fsr2l	;volatile
  4353  00159E  C048  FFDA         	movff	_edit_Param+2,fsr2h	;volatile
  4354  0015A2  C049  FFDF         	movff	_edit_Param+3,indf2	;volatile
  4355                           
  4356                           ; BSR set to: 1
  4357                           ;sm_MenuConfiguration_MC50.c: 316:                 sm_send_event(&menuConfiguration_stat
      +                          eMachine, ev_ParameterIsEdited);
  4358  0015A6  0EBD               	movlw	low _menuConfiguration_stateMachine
  4359  0015A8  6E12               	movwf	sm_send_event@psm^0,c
  4360  0015AA  0E02               	movlw	high _menuConfiguration_stateMachine
  4361  0015AC  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4362  0015AE  0E00               	movlw	0
  4363  0015B0  6E15               	movwf	(sm_send_event@event+1)^0,c
  4364  0015B2  0E02               	movlw	2
  4365  0015B4  6E14               	movwf	sm_send_event@event^0,c
  4366  0015B6  EC29  F041         	call	_sm_send_event	;wreg free
  4367                           
  4368                           ;sm_MenuConfiguration_MC50.c: 317:                 SetSegmentValueMain(dBar,d1);
  4369  0015BA  0E01               	movlw	1
  4370  0015BC  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4371  0015BE  0E19               	movlw	25
  4372  0015C0  ECE1  F047         	call	_SetSegmentValueMain
  4373                           
  4374                           ; BSR set to: 0
  4375                           ;sm_MenuConfiguration_MC50.c: 318:                 ts_system.timeSinalizationDigit=((100
      +                          0/50)*2);
  4376  0015C4  0E00               	movlw	0
  4377  0015C6  0101               	movlb	1	; () banked
  4378  0015C8  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
  4379  0015CA  0E28               	movlw	40
  4380  0015CC  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
  4381  0015CE  D603               	goto	l22279
  4382  0015D0                     l22455:
  4383                           
  4384                           ; BSR set to: 0
  4385  0015D0  0101               	movlb	1	; () banked
  4386  0015D2  BFA9               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  4387  0015D4  D008               	goto	u27200
  4388  0015D6  51A9               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  4389  0015D8  E103               	bnz	u27190
  4390  0015DA  05A8               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  4391  0015DC  A0D8               	btfss	status,0,c
  4392  0015DE  D003               	goto	u27200
  4393  0015E0                     u27190:
  4394                           
  4395                           ; BSR set to: 1
  4396  0015E0  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  4397  0015E2  A4D8               	btfss	status,2,c
  4398  0015E4  0012               	return	
  4399  0015E6                     u27200:
  4400                           
  4401                           ; BSR set to: 1
  4402                           ;sm_MenuConfiguration_MC50.c: 323:             {;sm_MenuConfiguration_MC50.c: 324:      
      +                                     ts_system.timeoutMenu=((1000/50)*5) ;
  4403  0015E6  0E00               	movlw	0
  4404  0015E8  6FA9               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4405  0015EA  0E64               	movlw	100
  4406  0015EC  6FA8               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4407                           
  4408                           ; BSR set to: 1
  4409                           ;sm_MenuConfiguration_MC50.c: 325:                 load_New_Menu(menu_st.actualMenu);
  4410  0015EE  5166               	movf	(_menu_st+21)& (0+255),w,b
  4411  0015F0  EC81  F01E         	call	_load_New_Menu
  4412                           
  4413                           ;sm_MenuConfiguration_MC50.c: 326:                 sm_send_event(&menuConfiguration_stat
      +                          eMachine, ev_CancelEdition);
  4414  0015F4  0EBD               	movlw	low _menuConfiguration_stateMachine
  4415  0015F6  6E12               	movwf	sm_send_event@psm^0,c
  4416  0015F8  0E02               	movlw	high _menuConfiguration_stateMachine
  4417  0015FA  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4418  0015FC  0E00               	movlw	0
  4419  0015FE  6E15               	movwf	(sm_send_event@event+1)^0,c
  4420  001600  0E03               	movlw	3
  4421  001602  6E14               	movwf	sm_send_event@event^0,c
  4422  001604  EC29  F041         	call	_sm_send_event	;wreg free
  4423  001608  D5E6               	goto	l22279
  4424  00160A                     l22467:
  4425                           
  4426                           ; BSR set to: 0
  4427                           ;sm_MenuConfiguration_MC50.c: 332:         {;sm_MenuConfiguration_MC50.c: 333:          
      +                             if (ts_system.timeSinalizationDigit<=0)
  4428  00160A  0101               	movlb	1	; () banked
  4429  00160C  BFA7               	btfsc	(_ts_system+13)& (0+255),7,b	;volatile
  4430  00160E  D005               	goto	u27210
  4431  001610  51A7               	movf	(_ts_system+13)& (0+255),w,b	;volatile
  4432  001612  E102               	bnz	u27211
  4433  001614  05A6               	decf	(_ts_system+12)& (0+255),w,b	;volatile
  4434  001616  B0D8               	btfsc	status,0,c
  4435  001618                     u27211:
  4436  001618  0012               	return	
  4437  00161A                     u27210:
  4438                           
  4439                           ; BSR set to: 1
  4440                           ;sm_MenuConfiguration_MC50.c: 334:             {;sm_MenuConfiguration_MC50.c: 335:      
      +                                     ts_system.timeoutMenu=((1000/50)*5) ;
  4441  00161A  0E00               	movlw	0
  4442  00161C  6FA9               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4443  00161E  0E64               	movlw	100
  4444  001620  6FA8               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4445                           
  4446                           ; BSR set to: 1
  4447                           ;sm_MenuConfiguration_MC50.c: 337:                 if((menu_st.actualMenu==E_Menu && men
      +                          u_st.parameterSelected==8)||(edit_Param.Value==(unsigned char*)&var_sys_NVM.TypeofMotor)
      +                          )
  4448  001622  0566               	decf	(_menu_st+21)& (0+255),w,b
  4449  001624  A4D8               	btfss	status,2,c
  4450  001626  D004               	goto	u27230
  4451                           
  4452                           ; BSR set to: 1
  4453  001628  0E08               	movlw	8
  4454  00162A  1968               	xorwf	(_menu_st+23)& (0+255),w,b
  4455  00162C  B4D8               	btfsc	status,2,c
  4456  00162E  D00A               	goto	u27240
  4457  001630                     u27230:
  4458                           
  4459                           ; BSR set to: 1
  4460  001630  0E98               	movlw	_var_sys_NVM& (0+255)
  4461  001632  0F1C               	addlw	28
  4462  001634  0100               	movlb	0	; () banked
  4463  001636  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  4464  001638  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  4465  00163A  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  4466  00163C  E101               	bnz	u27245
  4467  00163E  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  4468  001640                     u27245:
  4469  001640  A4D8               	btfss	status,2,c
  4470  001642  D005               	goto	l22479
  4471  001644                     u27240:
  4472                           
  4473                           ;sm_MenuConfiguration_MC50.c: 338:                 {;sm_MenuConfiguration_MC50.c: 341:  
      +                                             ResetDefaultMemory(var_sys_NVM.TypeofMotor);
  4474  001644  0100               	movlb	0	; () banked
  4475  001646  51B4               	movf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
  4476  001648  ECB3  F02D         	call	_ResetDefaultMemory
  4477                           
  4478                           ;sm_MenuConfiguration_MC50.c: 343:                 }
  4479  00164C  D023               	goto	l22497
  4480  00164E                     l22479:
  4481                           
  4482                           ; BSR set to: 0
  4483  00164E  0101               	movlb	1	; () banked
  4484  001650  0566               	decf	(_menu_st+21)& (0+255),w,b
  4485  001652  B4D8               	btfsc	status,2,c
  4486  001654  D004               	goto	u27260
  4487                           
  4488                           ; BSR set to: 1
  4489  001656  0E0A               	movlw	10
  4490  001658  1966               	xorwf	(_menu_st+21)& (0+255),w,b
  4491  00165A  A4D8               	btfss	status,2,c
  4492  00165C  D004               	goto	l22485
  4493  00165E                     u27260:
  4494                           
  4495                           ; BSR set to: 1
  4496                           ;sm_MenuConfiguration_MC50.c: 345:                 {;sm_MenuConfiguration_MC50.c: 346:  
      +                                             SaveNVM_VarSystem(pageMemoryE);
  4497  00165E  0E01               	movlw	1
  4498  001660  EC0A  F045         	call	_SaveNVM_VarSystem
  4499                           
  4500                           ;sm_MenuConfiguration_MC50.c: 347:                 }
  4501  001664  D017               	goto	l22497
  4502  001666                     l22485:
  4503                           
  4504                           ; BSR set to: 1
  4505                           ;sm_MenuConfiguration_MC50.c: 349:                 {;sm_MenuConfiguration_MC50.c: 350:  
      +                                             if (menu_st.parameterSelected == 1 && edit_Param.Value[0] >=1 && menu
      +                          _st.actualMenu == P2_SMenu )
  4506  001666  0568               	decf	(_menu_st+23)& (0+255),w,b
  4507  001668  A4D8               	btfss	status,2,c
  4508  00166A  D00E               	goto	l22493
  4509                           
  4510                           ; BSR set to: 1
  4511  00166C  C047  FFD9         	movff	_edit_Param+1,fsr2l	;volatile
  4512  001670  C048  FFDA         	movff	_edit_Param+2,fsr2h	;volatile
  4513  001674  50DF               	movf	indf2,w,c
  4514  001676  B4D8               	btfsc	status,2,c
  4515  001678  D007               	goto	l22493
  4516                           
  4517                           ; BSR set to: 1
  4518  00167A  0E06               	movlw	6
  4519  00167C  1966               	xorwf	(_menu_st+21)& (0+255),w,b
  4520  00167E  A4D8               	btfss	status,2,c
  4521  001680  D003               	goto	l22493
  4522                           
  4523                           ; BSR set to: 1
  4524                           ;sm_MenuConfiguration_MC50.c: 351:                     {;sm_MenuConfiguration_MC50.c: 35
      +                          2:                       var_sys_NVM.motorPower = 9;
  4525  001682  0E09               	movlw	9
  4526  001684  0100               	movlb	0	; () banked
  4527  001686  6F9A               	movwf	(_var_sys_NVM+2)& (0+255),b	;volatile
  4528  001688                     l22493:
  4529                           
  4530                           ;sm_MenuConfiguration_MC50.c: 355:                       SaveNVM_VarSystem(pageMemoryE);
  4531  001688  0E01               	movlw	1
  4532  00168A  EC0A  F045         	call	_SaveNVM_VarSystem
  4533                           
  4534                           ;sm_MenuConfiguration_MC50.c: 356:                       SaveNVM_VarSystem(pageMemoryP);
  4535  00168E  0E00               	movlw	0
  4536  001690  EC0A  F045         	call	_SaveNVM_VarSystem
  4537  001694                     l22497:
  4538                           
  4539                           ;sm_MenuConfiguration_MC50.c: 360:                 sm_send_event(&menuConfiguration_stat
      +                          eMachine, ev_ParameterIsSaved);
  4540  001694  0EBD               	movlw	low _menuConfiguration_stateMachine
  4541  001696  6E12               	movwf	sm_send_event@psm^0,c
  4542  001698  0E02               	movlw	high _menuConfiguration_stateMachine
  4543  00169A  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4544  00169C  0E00               	movlw	0
  4545  00169E  6E15               	movwf	(sm_send_event@event+1)^0,c
  4546  0016A0  0E04               	movlw	4
  4547  0016A2  6E14               	movwf	sm_send_event@event^0,c
  4548  0016A4  EC29  F041         	call	_sm_send_event	;wreg free
  4549                           
  4550                           ;sm_MenuConfiguration_MC50.c: 363:                 menu_st.parameterSelected++;
  4551  0016A8  0101               	movlb	1	; () banked
  4552  0016AA  2B68               	incf	(_menu_st+23)& (0+255),f,b
  4553                           
  4554                           ; BSR set to: 1
  4555                           ;sm_MenuConfiguration_MC50.c: 364:                 if(menu_st.actualMenu<=E_Menu)
  4556  0016AC  0E02               	movlw	2
  4557  0016AE  6166               	cpfslt	(_menu_st+21)& (0+255),b
  4558  0016B0  D005               	goto	l22507
  4559                           
  4560                           ; BSR set to: 1
  4561                           ;sm_MenuConfiguration_MC50.c: 365:                 {;sm_MenuConfiguration_MC50.c: 366:  
      +                                             menu_st.lastMainParameterSelected++;
  4562  0016B2  2B69               	incf	(_menu_st+24)& (0+255),f,b
  4563                           
  4564                           ; BSR set to: 1
  4565                           ;sm_MenuConfiguration_MC50.c: 367:                     load_New_Menu(menu_st.actualMenu)
      +                          ;
  4566  0016B4  5166               	movf	(_menu_st+21)& (0+255),w,b
  4567  0016B6  EC81  F01E         	call	_load_New_Menu
  4568                           
  4569                           ;sm_MenuConfiguration_MC50.c: 368:                 }
  4570  0016BA  0012               	return	
  4571  0016BC                     l22507:
  4572                           
  4573                           ; BSR set to: 1
  4574  0016BC  5167               	movf	(_menu_st+22)& (0+255),w,b
  4575  0016BE  5D68               	subwf	(_menu_st+23)& (0+255),w,b
  4576  0016C0  A0D8               	btfss	status,0,c
  4577  0016C2  D005               	goto	l22513
  4578                           
  4579                           ; BSR set to: 1
  4580                           ;sm_MenuConfiguration_MC50.c: 370:                 {;sm_MenuConfiguration_MC50.c: 371:  
      +                                             menu_st.lastMainParameterSelected++;
  4581  0016C4  2B69               	incf	(_menu_st+24)& (0+255),f,b
  4582                           
  4583                           ; BSR set to: 1
  4584                           ;sm_MenuConfiguration_MC50.c: 372:                     load_New_Menu(menu_st.lastMenu);
  4585  0016C6  5165               	movf	(_menu_st+20)& (0+255),w,b
  4586  0016C8  EC81  F01E         	call	_load_New_Menu
  4587                           
  4588                           ;sm_MenuConfiguration_MC50.c: 373:                 }
  4589  0016CC  0012               	return	
  4590  0016CE                     l22513:
  4591                           
  4592                           ; BSR set to: 1
  4593                           ;sm_MenuConfiguration_MC50.c: 375:                 {;sm_MenuConfiguration_MC50.c: 376:  
      +                                             load_New_Menu(menu_st.actualMenu);
  4594  0016CE  5166               	movf	(_menu_st+21)& (0+255),w,b
  4595  0016D0  EC81  F01E         	call	_load_New_Menu
  4596  0016D4  0012               	return	
  4597  0016D6                     l22515:
  4598                           
  4599                           ; BSR set to: 0
  4600                           ;sm_MenuConfiguration_MC50.c: 382:         {;sm_MenuConfiguration_MC50.c: 383:          
      +                             if(ts_system.timeoutMenu<=0)
  4601  0016D6  0101               	movlb	1	; () banked
  4602  0016D8  BFA9               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  4603  0016DA  D005               	goto	u27320
  4604  0016DC  51A9               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  4605  0016DE  E102               	bnz	u27321
  4606  0016E0  05A8               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  4607  0016E2  B0D8               	btfsc	status,0,c
  4608  0016E4                     u27321:
  4609  0016E4  0012               	return	
  4610  0016E6                     u27320:
  4611                           
  4612                           ; BSR set to: 1
  4613                           ;sm_MenuConfiguration_MC50.c: 384:             {;sm_MenuConfiguration_MC50.c: 386:      
      +                                     if(auxCounter<=0){
  4614  0016E6  0100               	movlb	0	; () banked
  4615  0016E8  51F8               	movf	_auxCounter& (0+255),w,b
  4616  0016EA  11F9               	iorwf	(_auxCounter+1)& (0+255),w,b
  4617  0016EC  A4D8               	btfss	status,2,c
  4618  0016EE  D010               	goto	l22525
  4619                           
  4620                           ; BSR set to: 0
  4621                           ;sm_MenuConfiguration_MC50.c: 387:                     menu_st.lastMainParameterSelected
      +                          ++;
  4622  0016F0  0101               	movlb	1	; () banked
  4623  0016F2  2B69               	incf	(_menu_st+24)& (0+255),f,b
  4624                           
  4625                           ; BSR set to: 1
  4626                           ;sm_MenuConfiguration_MC50.c: 388:                     load_New_Menu(menu_st.actualMenu)
      +                          ;
  4627  0016F4  5166               	movf	(_menu_st+21)& (0+255),w,b
  4628  0016F6  EC81  F01E         	call	_load_New_Menu
  4629                           
  4630                           ;sm_MenuConfiguration_MC50.c: 389:                     sm_send_event(&menuConfiguration_
      +                          stateMachine, ev_ParameterIsSaved);
  4631  0016FA  0EBD               	movlw	low _menuConfiguration_stateMachine
  4632  0016FC  6E12               	movwf	sm_send_event@psm^0,c
  4633  0016FE  0E02               	movlw	high _menuConfiguration_stateMachine
  4634  001700  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4635  001702  0E00               	movlw	0
  4636  001704  6E15               	movwf	(sm_send_event@event+1)^0,c
  4637  001706  0E04               	movlw	4
  4638  001708  6E14               	movwf	sm_send_event@event^0,c
  4639  00170A  EC29  F041         	call	_sm_send_event	;wreg free
  4640                           
  4641                           ;sm_MenuConfiguration_MC50.c: 390:                 }
  4642  00170E  0012               	return	
  4643  001710                     l22525:
  4644                           
  4645                           ; BSR set to: 0
  4646                           ;sm_MenuConfiguration_MC50.c: 392:                 {;sm_MenuConfiguration_MC50.c: 393:  
      +                                             ts_system.timeoutMenu=(1000/50)*3;
  4647  001710  0E00               	movlw	0
  4648  001712  0101               	movlb	1	; () banked
  4649  001714  6FA9               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4650  001716  0E3C               	movlw	60
  4651  001718  6FA8               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4652                           
  4653                           ; BSR set to: 1
  4654                           ;sm_MenuConfiguration_MC50.c: 394:                     edit_Param.tempValue=(unsigned ch
      +                          ar)(tempCounter/auxCounter);
  4655  00171A  C1F9  F010         	movff	_tempCounter,___lldiv@dividend
  4656  00171E  C1FA  F011         	movff	_tempCounter+1,___lldiv@dividend+1
  4657  001722  C1FB  F012         	movff	_tempCounter+2,___lldiv@dividend+2
  4658  001726  C1FC  F013         	movff	_tempCounter+3,___lldiv@dividend+3
  4659  00172A  C0F8  F014         	movff	_auxCounter,___lldiv@divisor
  4660  00172E  C0F9  F015         	movff	_auxCounter+1,___lldiv@divisor+1
  4661  001732  6A16               	clrf	(___lldiv@divisor+2)^0,c
  4662  001734  6A17               	clrf	(___lldiv@divisor+3)^0,c
  4663  001736  EC26  F03D         	call	___lldiv	;wreg free
  4664  00173A  5010               	movf	?___lldiv^0,w,c
  4665  00173C  6E49               	movwf	(_edit_Param+3)^0,c	;volatile
  4666                           
  4667                           ;sm_MenuConfiguration_MC50.c: 395:                     tempCounter=tempCounter-(tempCoun
      +                          ter/auxCounter*auxCounter);
  4668  00173E  C0F8  F014         	movff	_auxCounter,___lldiv@divisor
  4669  001742  C0F9  F015         	movff	_auxCounter+1,___lldiv@divisor+1
  4670  001746  6A16               	clrf	(___lldiv@divisor+2)^0,c
  4671  001748  6A17               	clrf	(___lldiv@divisor+3)^0,c
  4672  00174A  C1F9  F010         	movff	_tempCounter,___lldiv@dividend
  4673  00174E  C1FA  F011         	movff	_tempCounter+1,___lldiv@dividend+1
  4674  001752  C1FB  F012         	movff	_tempCounter+2,___lldiv@dividend+2
  4675  001756  C1FC  F013         	movff	_tempCounter+3,___lldiv@dividend+3
  4676  00175A  EC26  F03D         	call	___lldiv	;wreg free
  4677  00175E  C010  F01D         	movff	?___lldiv,___lmul@multiplier
  4678  001762  C011  F01E         	movff	?___lldiv+1,___lmul@multiplier+1
  4679  001766  C012  F01F         	movff	?___lldiv+2,___lmul@multiplier+2
  4680  00176A  C013  F020         	movff	?___lldiv+3,___lmul@multiplier+3
  4681  00176E  C0F8  F021         	movff	_auxCounter,___lmul@multiplicand
  4682  001772  C0F9  F022         	movff	_auxCounter+1,___lmul@multiplicand+1
  4683  001776  6A23               	clrf	(___lmul@multiplicand+2)^0,c
  4684  001778  6A24               	clrf	(___lmul@multiplicand+3)^0,c
  4685  00177A  EC37  F042         	call	___lmul	;wreg free
  4686  00177E  501D               	movf	?___lmul^0,w,c
  4687  001780  0101               	movlb	1	; () banked
  4688  001782  5DF9               	subwf	_tempCounter& (0+255),w,b
  4689  001784  6FF9               	movwf	_tempCounter& (0+255),b
  4690  001786  501E               	movf	(?___lmul+1)^0,w,c
  4691  001788  59FA               	subwfb	(_tempCounter+1)& (0+255),w,b
  4692  00178A  6FFA               	movwf	(_tempCounter+1)& (0+255),b
  4693  00178C  501F               	movf	(?___lmul+2)^0,w,c
  4694  00178E  59FB               	subwfb	(_tempCounter+2)& (0+255),w,b
  4695  001790  6FFB               	movwf	(_tempCounter+2)& (0+255),b
  4696  001792  5020               	movf	(?___lmul+3)^0,w,c
  4697  001794  59FC               	subwfb	(_tempCounter+3)& (0+255),w,b
  4698  001796  6FFC               	movwf	(_tempCounter+3)& (0+255),b
  4699                           
  4700                           ; BSR set to: 1
  4701                           ;sm_MenuConfiguration_MC50.c: 396:                     auxCounter=auxCounter/100;
  4702  001798  C0F8  F010         	movff	_auxCounter,___lwdiv@dividend
  4703  00179C  C0F9  F011         	movff	_auxCounter+1,___lwdiv@dividend+1
  4704  0017A0  0E00               	movlw	0
  4705  0017A2  6E13               	movwf	(___lwdiv@divisor+1)^0,c
  4706  0017A4  0E64               	movlw	100
  4707  0017A6  6E12               	movwf	___lwdiv@divisor^0,c
  4708  0017A8  ECB7  F042         	call	___lwdiv	;wreg free
  4709  0017AC  C010  F0F8         	movff	?___lwdiv,_auxCounter
  4710  0017B0  C011  F0F9         	movff	?___lwdiv+1,_auxCounter+1
  4711                           
  4712                           ;sm_MenuConfiguration_MC50.c: 397:                     SetSegmentValueIntermitentMain(ed
      +                          it_Param.tempValue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10),( 500/50));
  4713  0017B4  0E0A               	movlw	10
  4714  0017B6  6E10               	movwf	___lbdiv@divisor^0,c
  4715  0017B8  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4716  0017BA  ECED  F044         	call	___lbdiv
  4717  0017BE  0DF6               	mullw	246
  4718  0017C0  50F3               	movf	243,w,c
  4719  0017C2  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  4720  0017C4  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  4721  0017C6  0E00               	movlw	0
  4722  0017C8  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  4723  0017CA  0E0A               	movlw	10
  4724  0017CC  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  4725  0017CE  0E0A               	movlw	10
  4726  0017D0  6E10               	movwf	___lbdiv@divisor^0,c
  4727  0017D2  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4728  0017D4  ECED  F044         	call	___lbdiv
  4729  0017D8  EC7D  F048         	call	_SetSegmentValueIntermitentMain
  4730  0017DC  0012               	return	
  4731  0017DE                     l22535:
  4732                           
  4733                           ; BSR set to: 0
  4734                           ;sm_MenuConfiguration_MC50.c: 403:         {;sm_MenuConfiguration_MC50.c: 404:          
      +                             if(firstselectflag==1){
  4735  0017DE  0101               	movlb	1	; () banked
  4736  0017E0  05FD               	decf	_firstselectflag& (0+255),w,b
  4737  0017E2  A4D8               	btfss	status,2,c
  4738  0017E4  D004               	goto	l22539
  4739                           
  4740                           ; BSR set to: 1
  4741                           ;sm_MenuConfiguration_MC50.c: 405:                 edit_Param.tempValue=0;
  4742  0017E6  0E00               	movlw	0
  4743  0017E8  6E49               	movwf	(_edit_Param+3)^0,c	;volatile
  4744                           
  4745                           ;sm_MenuConfiguration_MC50.c: 406:                 firstselectflag=0;
  4746  0017EA  0E00               	movlw	0
  4747  0017EC  6FFD               	movwf	_firstselectflag& (0+255),b
  4748  0017EE                     l22539:
  4749                           
  4750                           ; BSR set to: 1
  4751                           ;sm_MenuConfiguration_MC50.c: 408:             controlSelectRemote();
  4752  0017EE  EC6A  F019         	call	_controlSelectRemote	;wreg free
  4753                           
  4754                           ;sm_MenuConfiguration_MC50.c: 409:         };sm_MenuConfiguration_MC50.c: 410:         b
      +                          reak;
  4755  0017F2  0012               	return	
  4756  0017F4                     l22541:
  4757                           
  4758                           ; BSR set to: 0
  4759                           ;sm_MenuConfiguration_MC50.c: 412:         {;sm_MenuConfiguration_MC50.c: 413:          
      +                             controlSaveRemote();
  4760  0017F4  ECC9  F038         	call	_controlSaveRemote	;wreg free
  4761                           
  4762                           ;sm_MenuConfiguration_MC50.c: 414:         };sm_MenuConfiguration_MC50.c: 415:         b
      +                          reak;
  4763  0017F8  0012               	return	
  4764  0017FA                     l22543:
  4765                           
  4766                           ; BSR set to: 0
  4767                           ;sm_MenuConfiguration_MC50.c: 417:         {;sm_MenuConfiguration_MC50.c: 418:          
      +                             controlLearnDigit();
  4768  0017FA  EC72  F045         	call	_controlLearnDigit	;wreg free
  4769                           
  4770                           ;sm_MenuConfiguration_MC50.c: 419:             if(var_sys.LearningIsEnabled==NO)
  4771  0017FE  0101               	movlb	1	; () banked
  4772  001800  5126               	movf	(_var_sys+38)& (0+255),w,b	;volatile
  4773  001802  A4D8               	btfss	status,2,c
  4774  001804  0012               	return	
  4775                           
  4776                           ; BSR set to: 1
  4777                           ;sm_MenuConfiguration_MC50.c: 420:             {;sm_MenuConfiguration_MC50.c: 421:      
      +                                     sm_send_event(&main_stateMachine, ev_goto_StandBy);
  4778  001806  0EED               	movlw	low _main_stateMachine
  4779  001808  6E12               	movwf	sm_send_event@psm^0,c
  4780  00180A  0E01               	movlw	high _main_stateMachine
  4781  00180C  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4782  00180E  0E00               	movlw	0
  4783  001810  6E15               	movwf	(sm_send_event@event+1)^0,c
  4784  001812  0E07               	movlw	7
  4785  001814  6E14               	movwf	sm_send_event@event^0,c
  4786  001816  EC29  F041         	call	_sm_send_event	;wreg free
  4787                           
  4788                           ;sm_MenuConfiguration_MC50.c: 422:                 sm_send_event(&menuConfiguration_stat
      +                          eMachine, ev_ParameterIsSaved);
  4789  00181A  0EBD               	movlw	low _menuConfiguration_stateMachine
  4790  00181C  6E12               	movwf	sm_send_event@psm^0,c
  4791  00181E  0E02               	movlw	high _menuConfiguration_stateMachine
  4792  001820  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4793  001822  0E00               	movlw	0
  4794  001824  6E15               	movwf	(sm_send_event@event+1)^0,c
  4795  001826  0E04               	movlw	4
  4796  001828  6E14               	movwf	sm_send_event@event^0,c
  4797  00182A  EC29  F041         	call	_sm_send_event	;wreg free
  4798                           
  4799                           ;sm_MenuConfiguration_MC50.c: 423:                 SetSegmentValueMain(dMinus,dMinus);
  4800  00182E  0E18               	movlw	24
  4801  001830  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4802  001832  0E18               	movlw	24
  4803  001834  ECE1  F047         	call	_SetSegmentValueMain
  4804                           
  4805                           ; BSR set to: 0
  4806                           ;sm_MenuConfiguration_MC50.c: 424:                 SaveNVM_VarSystem(pageMemoryCounters)
      +                          ;
  4807  001838  0E02               	movlw	2
  4808  00183A  EC0A  F045         	call	_SaveNVM_VarSystem
  4809  00183E  D5E9               	goto	l22381
  4810  001840                     l22559:
  4811  001840  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  4812  001844  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  4813  001848  50DF               	movf	indf2,w,c
  4814  00184A  0100               	movlb	0	; () banked
  4815  00184C  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  4816  00184E  6BEC               	clrf	(??_sm_execute_menuConfiguration+1)& (0+255),b
  4817                           
  4818                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4819                           ; Switch size 1, requested type "simple"
  4820                           ; Number of cases is 1, Range of values is 0 to 0
  4821                           ; switch strategies available:
  4822                           ; Name         Instructions Cycles
  4823                           ; simple_byte            4     3 (average)
  4824                           ;	Chosen strategy is simple_byte
  4825  001850  51EC               	movf	(??_sm_execute_menuConfiguration+1)& (0+255),w,b
  4826  001852  0A00               	xorlw	0	; case 0
  4827  001854  A4D8               	btfss	status,2,c
  4828  001856  0012               	return	
  4829                           
  4830                           ; BSR set to: 0
  4831                           ; Switch size 1, requested type "simple"
  4832                           ; Number of cases is 7, Range of values is 0 to 6
  4833                           ; switch strategies available:
  4834                           ; Name         Instructions Cycles
  4835                           ; simple_byte           22    12 (average)
  4836                           ;	Chosen strategy is simple_byte
  4837  001858  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  4838  00185A  0A00               	xorlw	0	; case 0
  4839  00185C  B4D8               	btfsc	status,2,c
  4840  00185E  D431               	goto	l22249
  4841  001860  0A01               	xorlw	1	; case 1
  4842  001862  B4D8               	btfsc	status,2,c
  4843  001864  D5FC               	goto	l22399
  4844  001866  0A03               	xorlw	3	; case 2
  4845  001868  B4D8               	btfsc	status,2,c
  4846  00186A  D6CF               	goto	l22467
  4847  00186C  0A01               	xorlw	1	; case 3
  4848  00186E  B4D8               	btfsc	status,2,c
  4849  001870  D732               	goto	l22515
  4850  001872  0A07               	xorlw	7	; case 4
  4851  001874  B4D8               	btfsc	status,2,c
  4852  001876  D7B3               	goto	l22535
  4853  001878  0A01               	xorlw	1	; case 5
  4854  00187A  B4D8               	btfsc	status,2,c
  4855  00187C  D7BB               	goto	l22541
  4856  00187E  0A03               	xorlw	3	; case 6
  4857  001880  A4D8               	btfss	status,2,c
  4858  001882  0012               	return	
  4859  001884  D7BA               	goto	l22543
  4860  001886                     __end_of_sm_execute_menuConfiguration:
  4861                           	callstack 0
  4862                           
  4863 ;; *************** function _setValueToEdit *****************
  4864 ;; Defined at:
  4865 ;;		line 648 in file "sm_MenuConfiguration_MC50.c"
  4866 ;; Parameters:    Size  Location     Type
  4867 ;;  menuType        1    wreg     enum E10813
  4868 ;;  ParameterSel    1   57[COMRAM] unsigned char 
  4869 ;; Auto vars:     Size  Location     Type
  4870 ;;  menuType        1    6[BANK0 ] enum E10813
  4871 ;;  posindex        1    7[BANK0 ] unsigned char 
  4872 ;;  haveValueToE    1    8[BANK0 ] unsigned char 
  4873 ;; Return value:  Size  Location     Type
  4874 ;;                  1    wreg      unsigned char 
  4875 ;; Registers used:
  4876 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4877 ;; Tracked objects:
  4878 ;;		On entry : 3F/1
  4879 ;;		On exit  : 3F/0
  4880 ;;		Unchanged: 0/0
  4881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4882 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4883 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4884 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4885 ;;      Totals:         1       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4886 ;;Total ram usage:        6 bytes
  4887 ;; Hardware stack levels used: 1
  4888 ;; Hardware stack levels required when called: 14
  4889 ;; This function calls:
  4890 ;;		_InitReceiver
  4891 ;;		_SaveNVM_VarSystem
  4892 ;;		_cmdMemoryIsEmpty
  4893 ;;		_load_New_Menu
  4894 ;;		_sm_send_event
  4895 ;; This function is called by:
  4896 ;;		_sm_execute_menuConfiguration
  4897 ;; This function uses a non-reentrant model
  4898 ;;
  4899                           
  4900                           	psect	text3
  4901  001F94                     __ptext3:
  4902                           	callstack 0
  4903  001F94                     _setValueToEdit:
  4904                           	callstack 14
  4905                           
  4906                           ;incstack = 0
  4907                           ;setValueToEdit@menuType stored from wreg
  4908  001F94  0100               	movlb	0	; () banked
  4909  001F96  6FDE               	movwf	setValueToEdit@menuType& (0+255),b
  4910                           
  4911                           ;sm_MenuConfiguration_MC50.c: 649:     char haveValueToEdit=0;
  4912  001F98  0E00               	movlw	0
  4913  001F9A  0100               	movlb	0	; () banked
  4914  001F9C  6FE0               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  4915                           
  4916                           ;sm_MenuConfiguration_MC50.c: 652:     switch (menuType)
  4917  001F9E  D254               	goto	l20801
  4918  001FA0                     l3353:
  4919                           
  4920                           ; BSR set to: 0
  4921                           ;sm_MenuConfiguration_MC50.c: 655:         {;sm_MenuConfiguration_MC50.c: 656:          
      +                             menu_st.lastMainParameterSelected= menu_st.parameterSelected;
  4922  001FA0  C168  F169         	movff	_menu_st+23,_menu_st+24
  4923                           
  4924                           ; BSR set to: 0
  4925                           ;sm_MenuConfiguration_MC50.c: 657:             edit_Param.Min=0;
  4926  001FA4  0E00               	movlw	0
  4927  001FA6  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  4928                           
  4929                           ;sm_MenuConfiguration_MC50.c: 658:             switch (ParameterSelected)
  4930  001FA8  D034               	goto	l20557
  4931  001FAA                     l20511:
  4932                           
  4933                           ; BSR set to: 0
  4934                           ;sm_MenuConfiguration_MC50.c: 661:                 {;sm_MenuConfiguration_MC50.c: 662:  
      +                                             load_New_Menu(P0_SMenu);
  4935  001FAA  0E04               	movlw	4
  4936  001FAC  EC81  F01E         	call	_load_New_Menu
  4937                           
  4938                           ;sm_MenuConfiguration_MC50.c: 664:                 };sm_MenuConfiguration_MC50.c: 665:  
      +                                         break;
  4939  001FB0  D274               	goto	l20803
  4940  001FB2                     l20513:
  4941                           
  4942                           ; BSR set to: 0
  4943                           ;sm_MenuConfiguration_MC50.c: 667:                 {;sm_MenuConfiguration_MC50.c: 668:  
      +                                             load_New_Menu(P1_SMenu);
  4944  001FB2  0E05               	movlw	5
  4945  001FB4  EC81  F01E         	call	_load_New_Menu
  4946                           
  4947                           ;sm_MenuConfiguration_MC50.c: 669:                 };sm_MenuConfiguration_MC50.c: 670:  
      +                                         break;
  4948  001FB8  D270               	goto	l20803
  4949  001FBA                     l20515:
  4950                           
  4951                           ; BSR set to: 0
  4952                           ;sm_MenuConfiguration_MC50.c: 672:                 {;sm_MenuConfiguration_MC50.c: 673:  
      +                                             load_New_Menu(P2_SMenu);
  4953  001FBA  0E06               	movlw	6
  4954  001FBC  EC81  F01E         	call	_load_New_Menu
  4955                           
  4956                           ;sm_MenuConfiguration_MC50.c: 674:                 };sm_MenuConfiguration_MC50.c: 675:  
      +                                         break;
  4957  001FC0  D26C               	goto	l20803
  4958  001FC2                     l20517:
  4959                           
  4960                           ; BSR set to: 0
  4961                           ;sm_MenuConfiguration_MC50.c: 677:                 {;sm_MenuConfiguration_MC50.c: 678:  
      +                                             edit_Param.Max=99;
  4962  001FC2  0E63               	movlw	99
  4963  001FC4  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  4964                           
  4965                           ; BSR set to: 0
  4966                           ;sm_MenuConfiguration_MC50.c: 680:                     edit_Param.tempValue=var_sys_NVM.
      +                          walkTime;
  4967  001FC6  C09C  F049         	movff	_var_sys_NVM+4,_edit_Param+3	;volatile
  4968                           
  4969                           ; BSR set to: 0
  4970                           ;sm_MenuConfiguration_MC50.c: 681:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.walkTime;
  4971  001FCA  0E9C               	movlw	low (_var_sys_NVM+4)
  4972  001FCC                     L13:
  4973  001FCC  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  4974  001FCE  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  4975                           
  4976                           ; BSR set to: 0
  4977                           ;sm_MenuConfiguration_MC50.c: 682:                     haveValueToEdit=1;
  4978  001FD0  0E01               	movlw	1
  4979  001FD2  6FE0               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  4980                           
  4981                           ;sm_MenuConfiguration_MC50.c: 683:                 };sm_MenuConfiguration_MC50.c: 684:  
      +                                         break;
  4982  001FD4  D262               	goto	l20803
  4983  001FD6                     l20525:
  4984                           
  4985                           ; BSR set to: 0
  4986                           ;sm_MenuConfiguration_MC50.c: 686:                 {;sm_MenuConfiguration_MC50.c: 687:  
      +                                             load_New_Menu(P4_SMenu);
  4987  001FD6  0E07               	movlw	7
  4988  001FD8  EC81  F01E         	call	_load_New_Menu
  4989                           
  4990                           ;sm_MenuConfiguration_MC50.c: 688:                 };sm_MenuConfiguration_MC50.c: 689:  
      +                                         break;
  4991  001FDC  D25E               	goto	l20803
  4992  001FDE                     l20527:
  4993                           
  4994                           ; BSR set to: 0
  4995                           ;sm_MenuConfiguration_MC50.c: 691:                 {;sm_MenuConfiguration_MC50.c: 692:  
      +                                             load_New_Menu(P5_SMenu);
  4996  001FDE  0E08               	movlw	8
  4997  001FE0  EC81  F01E         	call	_load_New_Menu
  4998                           
  4999                           ;sm_MenuConfiguration_MC50.c: 693:                 };sm_MenuConfiguration_MC50.c: 694:  
      +                                         break;
  5000  001FE4  D25A               	goto	l20803
  5001  001FE6                     l20529:
  5002                           
  5003                           ; BSR set to: 0
  5004                           ;sm_MenuConfiguration_MC50.c: 696:                 {;sm_MenuConfiguration_MC50.c: 697:  
      +                                             load_New_Menu(P6_SMenu);
  5005  001FE6  0E09               	movlw	9
  5006  001FE8  EC81  F01E         	call	_load_New_Menu
  5007                           
  5008                           ;sm_MenuConfiguration_MC50.c: 698:                 };sm_MenuConfiguration_MC50.c: 699:  
      +                                         break;
  5009  001FEC  D256               	goto	l20803
  5010  001FEE                     l20531:
  5011                           
  5012                           ; BSR set to: 0
  5013                           ;sm_MenuConfiguration_MC50.c: 701:                 {;sm_MenuConfiguration_MC50.c: 702:  
      +                                             edit_Param.Max=2;
  5014  001FEE  0E02               	movlw	2
  5015  001FF0  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5016                           
  5017                           ; BSR set to: 0
  5018                           ;sm_MenuConfiguration_MC50.c: 704:                     edit_Param.tempValue=var_sys_NVM.
      +                          operationMode;
  5019  001FF2  C0A4  F049         	movff	_var_sys_NVM+12,_edit_Param+3	;volatile
  5020                           
  5021                           ; BSR set to: 0
  5022                           ;sm_MenuConfiguration_MC50.c: 705:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.operationMode;
  5023  001FF6  0EA4               	movlw	low (_var_sys_NVM+12)
  5024  001FF8  D7E9               	goto	L13
  5025  001FFA                     l20539:
  5026                           
  5027                           ; BSR set to: 0
  5028                           ;sm_MenuConfiguration_MC50.c: 710:                 {;sm_MenuConfiguration_MC50.c: 711:  
      +                                             edit_Param.Max=3;
  5029  001FFA  0E03               	movlw	3
  5030  001FFC  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5031                           
  5032                           ; BSR set to: 0
  5033                           ;sm_MenuConfiguration_MC50.c: 713:                     edit_Param.tempValue=var_sys_NVM.
      +                          flashLightMode;
  5034  001FFE  C0A5  F049         	movff	_var_sys_NVM+13,_edit_Param+3	;volatile
  5035                           
  5036                           ; BSR set to: 0
  5037                           ;sm_MenuConfiguration_MC50.c: 714:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.flashLightMode;
  5038  002002  0EA5               	movlw	low (_var_sys_NVM+13)
  5039  002004  D7E3               	goto	L13
  5040  002006                     l20547:
  5041                           
  5042                           ; BSR set to: 0
  5043                           ;sm_MenuConfiguration_MC50.c: 719:                 {;sm_MenuConfiguration_MC50.c: 720:  
      +                                             edit_Param.Max=1;
  5044  002006  0E01               	movlw	1
  5045  002008  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5046                           
  5047                           ; BSR set to: 0
  5048                           ;sm_MenuConfiguration_MC50.c: 722:                     edit_Param.tempValue=var_sys_NVM.
      +                          programmingDistance;
  5049  00200A  C0A6  F049         	movff	_var_sys_NVM+14,_edit_Param+3	;volatile
  5050                           
  5051                           ; BSR set to: 0
  5052                           ;sm_MenuConfiguration_MC50.c: 723:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.programmingDistance;
  5053  00200E  0EA6               	movlw	low (_var_sys_NVM+14)
  5054  002010  D7DD               	goto	L13
  5055  002012                     l20557:
  5056                           
  5057                           ; BSR set to: 0
  5058  002012  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5059  002014  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5060  002016  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5061                           
  5062                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5063                           ; Switch size 1, requested type "simple"
  5064                           ; Number of cases is 1, Range of values is 0 to 0
  5065                           ; switch strategies available:
  5066                           ; Name         Instructions Cycles
  5067                           ; simple_byte            4     3 (average)
  5068                           ;	Chosen strategy is simple_byte
  5069  002018  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5070  00201A  0A00               	xorlw	0	; case 0
  5071  00201C  A4D8               	btfss	status,2,c
  5072  00201E  D23D               	goto	l20803
  5073                           
  5074                           ; BSR set to: 0
  5075                           ; Switch size 1, requested type "simple"
  5076                           ; Number of cases is 10, Range of values is 0 to 9
  5077                           ; switch strategies available:
  5078                           ; Name         Instructions Cycles
  5079                           ; simple_byte           31    16 (average)
  5080                           ;	Chosen strategy is simple_byte
  5081  002020  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5082  002022  0A00               	xorlw	0	; case 0
  5083  002024  B4D8               	btfsc	status,2,c
  5084  002026  D7C1               	goto	l20511
  5085  002028  0A01               	xorlw	1	; case 1
  5086  00202A  B4D8               	btfsc	status,2,c
  5087  00202C  D7C2               	goto	l20513
  5088  00202E  0A03               	xorlw	3	; case 2
  5089  002030  B4D8               	btfsc	status,2,c
  5090  002032  D7C3               	goto	l20515
  5091  002034  0A01               	xorlw	1	; case 3
  5092  002036  B4D8               	btfsc	status,2,c
  5093  002038  D7C4               	goto	l20517
  5094  00203A  0A07               	xorlw	7	; case 4
  5095  00203C  B4D8               	btfsc	status,2,c
  5096  00203E  D7CB               	goto	l20525
  5097  002040  0A01               	xorlw	1	; case 5
  5098  002042  B4D8               	btfsc	status,2,c
  5099  002044  D7CC               	goto	l20527
  5100  002046  0A03               	xorlw	3	; case 6
  5101  002048  B4D8               	btfsc	status,2,c
  5102  00204A  D7CD               	goto	l20529
  5103  00204C  0A01               	xorlw	1	; case 7
  5104  00204E  B4D8               	btfsc	status,2,c
  5105  002050  D7CE               	goto	l20531
  5106  002052  0A0F               	xorlw	15	; case 8
  5107  002054  B4D8               	btfsc	status,2,c
  5108  002056  D7D1               	goto	l20539
  5109  002058  0A01               	xorlw	1	; case 9
  5110  00205A  B4D8               	btfsc	status,2,c
  5111  00205C  D7D4               	goto	l20547
  5112  00205E  D21D               	goto	l20803
  5113  002060                     l3367:
  5114                           
  5115                           ; BSR set to: 0
  5116                           ;sm_MenuConfiguration_MC50.c: 733:         {;sm_MenuConfiguration_MC50.c: 734:          
      +                             menu_st.lastMainParameterSelected= menu_st.parameterSelected;
  5117  002060  C168  F169         	movff	_menu_st+23,_menu_st+24
  5118                           
  5119                           ; BSR set to: 0
  5120                           ;sm_MenuConfiguration_MC50.c: 735:             edit_Param.Max=1;
  5121  002064  0E01               	movlw	1
  5122  002066  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5123                           
  5124                           ;sm_MenuConfiguration_MC50.c: 736:             edit_Param.Min=0;
  5125  002068  0E00               	movlw	0
  5126  00206A  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5127                           
  5128                           ;sm_MenuConfiguration_MC50.c: 737:             switch (ParameterSelected)
  5129  00206C  D057               	goto	l20613
  5130  00206E                     l20561:
  5131                           
  5132                           ; BSR set to: 0
  5133                           ;sm_MenuConfiguration_MC50.c: 740:                 {;sm_MenuConfiguration_MC50.c: 741:  
      +                                             load_New_Menu(E0_SMenu);
  5134  00206E  0E0A               	movlw	10
  5135  002070  EC81  F01E         	call	_load_New_Menu
  5136                           
  5137                           ;sm_MenuConfiguration_MC50.c: 742:                 };sm_MenuConfiguration_MC50.c: 743:  
      +                                         break;
  5138  002074  D212               	goto	l20803
  5139  002076                     l20563:
  5140                           
  5141                           ; BSR set to: 0
  5142                           ;sm_MenuConfiguration_MC50.c: 745:                 {;sm_MenuConfiguration_MC50.c: 748:  
      +                                             load_New_Menu(E1_SMenu);
  5143  002076  0E0B               	movlw	11
  5144  002078  EC81  F01E         	call	_load_New_Menu
  5145                           
  5146                           ;sm_MenuConfiguration_MC50.c: 750:                 };sm_MenuConfiguration_MC50.c: 751:  
      +                                         break;
  5147  00207C  D20E               	goto	l20803
  5148  00207E                     l20565:
  5149                           
  5150                           ; BSR set to: 0
  5151                           ;sm_MenuConfiguration_MC50.c: 753:                 {;sm_MenuConfiguration_MC50.c: 754:  
      +                                             edit_Param.Max=99;
  5152  00207E  0E63               	movlw	99
  5153  002080  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5154                           
  5155                           ; BSR set to: 0
  5156                           ;sm_MenuConfiguration_MC50.c: 756:                     edit_Param.tempValue=var_sys_NVM.
      +                          ligthTime;
  5157  002082  C0AC  F049         	movff	_var_sys_NVM+20,_edit_Param+3	;volatile
  5158                           
  5159                           ; BSR set to: 0
  5160                           ;sm_MenuConfiguration_MC50.c: 757:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.ligthTime;
  5161  002086  0EAC               	movlw	low (_var_sys_NVM+20)
  5162  002088  D7A1               	goto	L13
  5163  00208A                     l20573:
  5164                           
  5165                           ; BSR set to: 0
  5166                           ;sm_MenuConfiguration_MC50.c: 762:                 {;sm_MenuConfiguration_MC50.c: 763:  
      +                                            edit_Param.Max=9;
  5167  00208A  0E09               	movlw	9
  5168  00208C  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5169                           
  5170                           ;sm_MenuConfiguration_MC50.c: 764:                    edit_Param.Min=1;
  5171  00208E  0E01               	movlw	1
  5172  002090  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5173                           
  5174                           ; BSR set to: 0
  5175                           ;sm_MenuConfiguration_MC50.c: 765:                    edit_Param.tempValue=var_sys_NVM.f
      +                          olow_me;
  5176  002092  C0AD  F049         	movff	_var_sys_NVM+21,_edit_Param+3	;volatile
  5177                           
  5178                           ; BSR set to: 0
  5179                           ;sm_MenuConfiguration_MC50.c: 766:                    edit_Param.Value=(unsigned char*)&
      +                          var_sys_NVM.folow_me;
  5180  002096  0EAD               	movlw	low (_var_sys_NVM+21)
  5181  002098  D799               	goto	L13
  5182  00209A                     l3375:
  5183                           
  5184                           ; BSR set to: 0
  5185                           ;sm_MenuConfiguration_MC50.c: 778:                 {;sm_MenuConfiguration_MC50.c: 779:  
      +                                            edit_Param.tempValue=var_sys_NVM.electricBrake;
  5186  00209A  C0AF  F049         	movff	_var_sys_NVM+23,_edit_Param+3	;volatile
  5187                           
  5188                           ; BSR set to: 0
  5189                           ;sm_MenuConfiguration_MC50.c: 780:                    edit_Param.Value=(unsigned char*)&
      +                          var_sys_NVM.electricBrake;
  5190  00209E  0EAF               	movlw	low (_var_sys_NVM+23)
  5191  0020A0  D795               	goto	L13
  5192  0020A2                     l20585:
  5193                           
  5194                           ; BSR set to: 0
  5195                           ;sm_MenuConfiguration_MC50.c: 785:                 {;sm_MenuConfiguration_MC50.c: 786:  
      +                                             edit_Param.Max=9;
  5196  0020A2  0E09               	movlw	9
  5197  0020A4  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5198                           
  5199                           ;sm_MenuConfiguration_MC50.c: 787:                     edit_Param.Min=1;
  5200  0020A6  0E01               	movlw	1
  5201  0020A8  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5202                           
  5203                           ; BSR set to: 0
  5204                           ;sm_MenuConfiguration_MC50.c: 788:                     edit_Param.tempValue=var_sys_NVM.
      +                          velocityDecelaration;
  5205  0020AA  C0B0  F049         	movff	_var_sys_NVM+24,_edit_Param+3	;volatile
  5206                           
  5207                           ; BSR set to: 0
  5208                           ;sm_MenuConfiguration_MC50.c: 789:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.velocityDecelaration;
  5209  0020AE  0EB0               	movlw	low (_var_sys_NVM+24)
  5210  0020B0  D78D               	goto	L13
  5211  0020B2                     l20593:
  5212                           
  5213                           ; BSR set to: 0
  5214                           ;sm_MenuConfiguration_MC50.c: 794:                 {;sm_MenuConfiguration_MC50.c: 795:  
      +                                             edit_Param.tempValue=0;
  5215  0020B2  0E00               	movlw	0
  5216  0020B4  6E49               	movwf	(_edit_Param+3)^0,c	;volatile
  5217                           
  5218                           ;sm_MenuConfiguration_MC50.c: 796:                     ts_system.timeoutMenu=0;
  5219  0020B6  0E00               	movlw	0
  5220  0020B8  0101               	movlb	1	; () banked
  5221  0020BA  6FA9               	movwf	(_ts_system+15)& (0+255),b	;volatile
  5222  0020BC  0E00               	movlw	0
  5223  0020BE  6FA8               	movwf	(_ts_system+14)& (0+255),b	;volatile
  5224                           
  5225                           ;sm_MenuConfiguration_MC50.c: 798:                     auxCounter=10000;
  5226  0020C0  0E27               	movlw	39
  5227  0020C2  0100               	movlb	0	; () banked
  5228  0020C4  6FF9               	movwf	(_auxCounter+1)& (0+255),b
  5229  0020C6  0E10               	movlw	16
  5230  0020C8  6FF8               	movwf	_auxCounter& (0+255),b
  5231                           
  5232                           ;sm_MenuConfiguration_MC50.c: 799:                     ts_system.timeBetweenSaveCounters
      +                          =0;
  5233  0020CA  0E00               	movlw	0
  5234  0020CC  0101               	movlb	1	; () banked
  5235  0020CE  6FC1               	movwf	(_ts_system+39)& (0+255),b	;volatile
  5236  0020D0  0E00               	movlw	0
  5237  0020D2  6FC0               	movwf	(_ts_system+38)& (0+255),b	;volatile
  5238                           
  5239                           ; BSR set to: 1
  5240                           ;sm_MenuConfiguration_MC50.c: 800:                     tempCounter=var_sys.actualCounter
      +                          Moves;
  5241  0020D4  C13C  F1F9         	movff	_var_sys+60,_tempCounter	;volatile
  5242  0020D8  C13D  F1FA         	movff	_var_sys+61,_tempCounter+1	;volatile
  5243  0020DC  C13E  F1FB         	movff	_var_sys+62,_tempCounter+2	;volatile
  5244  0020E0  C13F  F1FC         	movff	_var_sys+63,_tempCounter+3	;volatile
  5245                           
  5246                           ; BSR set to: 1
  5247                           ;sm_MenuConfiguration_MC50.c: 801:                     sm_send_event(&menuConfiguration_
      +                          stateMachine, ev_showCounter);
  5248  0020E4  0EBD               	movlw	low _menuConfiguration_stateMachine
  5249  0020E6  6E12               	movwf	sm_send_event@psm^0,c
  5250  0020E8  0E02               	movlw	high _menuConfiguration_stateMachine
  5251  0020EA  6E13               	movwf	(sm_send_event@psm+1)^0,c
  5252  0020EC  0E00               	movlw	0
  5253  0020EE  6E15               	movwf	(sm_send_event@event+1)^0,c
  5254  0020F0  0E05               	movlw	5
  5255  0020F2  6E14               	movwf	sm_send_event@event^0,c
  5256  0020F4  EC29  F041         	call	_sm_send_event	;wreg free
  5257                           
  5258                           ;sm_MenuConfiguration_MC50.c: 802:                 };sm_MenuConfiguration_MC50.c: 803:  
      +                                         break;
  5259  0020F8  D1D0               	goto	l20803
  5260  0020FA                     l20599:
  5261                           
  5262                           ; BSR set to: 0
  5263                           ;sm_MenuConfiguration_MC50.c: 805:                 {;sm_MenuConfiguration_MC50.c: 806:  
      +                                             edit_Param.tempValue=0;
  5264  0020FA  0E00               	movlw	0
  5265  0020FC  6E49               	movwf	(_edit_Param+3)^0,c	;volatile
  5266                           
  5267                           ;sm_MenuConfiguration_MC50.c: 807:                     haveValueToEdit=1;
  5268  0020FE  0E01               	movlw	1
  5269  002100  6FE0               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  5270                           
  5271                           ; BSR set to: 0
  5272                           ;sm_MenuConfiguration_MC50.c: 808:                     edit_Param.Value = 0;
  5273  002102  0E00               	movlw	0
  5274  002104  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5275  002106  0E00               	movlw	0
  5276  002108  6E48               	movwf	(_edit_Param+2)^0,c	;volatile
  5277                           
  5278                           ;sm_MenuConfiguration_MC50.c: 809:                 };sm_MenuConfiguration_MC50.c: 810:  
      +                                         break;
  5279  00210A  D1C7               	goto	l20803
  5280  00210C                     l20603:
  5281                           
  5282                           ; BSR set to: 0
  5283                           ;sm_MenuConfiguration_MC50.c: 812:                 {;sm_MenuConfiguration_MC50.c: 813:  
      +                                             edit_Param.Max=3;
  5284  00210C  0E03               	movlw	3
  5285  00210E  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5286                           
  5287                           ;sm_MenuConfiguration_MC50.c: 814:                     edit_Param.Min=0;
  5288  002110  0E00               	movlw	0
  5289  002112  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5290                           
  5291                           ; BSR set to: 0
  5292                           ;sm_MenuConfiguration_MC50.c: 815:                     edit_Param.tempValue=var_sys_NVM.
      +                          flashRGBMode;
  5293  002114  C0B1  F049         	movff	_var_sys_NVM+25,_edit_Param+3	;volatile
  5294                           
  5295                           ; BSR set to: 0
  5296                           ;sm_MenuConfiguration_MC50.c: 816:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.flashRGBMode;
  5297  002118  0EB1               	movlw	low (_var_sys_NVM+25)
  5298  00211A  D758               	goto	L13
  5299  00211C                     l20613:
  5300                           
  5301                           ; BSR set to: 0
  5302  00211C  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5303  00211E  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5304  002120  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5305                           
  5306                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5307                           ; Switch size 1, requested type "simple"
  5308                           ; Number of cases is 1, Range of values is 0 to 0
  5309                           ; switch strategies available:
  5310                           ; Name         Instructions Cycles
  5311                           ; simple_byte            4     3 (average)
  5312                           ;	Chosen strategy is simple_byte
  5313  002122  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5314  002124  0A00               	xorlw	0	; case 0
  5315  002126  A4D8               	btfss	status,2,c
  5316  002128  D1B8               	goto	l20803
  5317                           
  5318                           ; BSR set to: 0
  5319                           ; Switch size 1, requested type "simple"
  5320                           ; Number of cases is 10, Range of values is 0 to 9
  5321                           ; switch strategies available:
  5322                           ; Name         Instructions Cycles
  5323                           ; simple_byte           31    16 (average)
  5324                           ;	Chosen strategy is simple_byte
  5325  00212A  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5326  00212C  0A00               	xorlw	0	; case 0
  5327  00212E  B4D8               	btfsc	status,2,c
  5328  002130  D79E               	goto	l20561
  5329  002132  0A01               	xorlw	1	; case 1
  5330  002134  B4D8               	btfsc	status,2,c
  5331  002136  D79F               	goto	l20563
  5332  002138  0A03               	xorlw	3	; case 2
  5333  00213A  B4D8               	btfsc	status,2,c
  5334  00213C  D7A0               	goto	l20565
  5335  00213E  0A01               	xorlw	1	; case 3
  5336  002140  B4D8               	btfsc	status,2,c
  5337  002142  D7A3               	goto	l20573
  5338  002144  0A07               	xorlw	7	; case 4
  5339  002146  B4D8               	btfsc	status,2,c
  5340  002148  D1A8               	goto	l20803
  5341  00214A  0A01               	xorlw	1	; case 5
  5342  00214C  B4D8               	btfsc	status,2,c
  5343  00214E  D7A5               	goto	l3375
  5344  002150  0A03               	xorlw	3	; case 6
  5345  002152  B4D8               	btfsc	status,2,c
  5346  002154  D7A6               	goto	l20585
  5347  002156  0A01               	xorlw	1	; case 7
  5348  002158  B4D8               	btfsc	status,2,c
  5349  00215A  D7AB               	goto	l20593
  5350  00215C  0A0F               	xorlw	15	; case 8
  5351  00215E  B4D8               	btfsc	status,2,c
  5352  002160  D7CC               	goto	l20599
  5353  002162  0A01               	xorlw	1	; case 9
  5354  002164  B4D8               	btfsc	status,2,c
  5355  002166  D7D2               	goto	l20603
  5356  002168  D198               	goto	l20803
  5357  00216A                     l20615:
  5358                           
  5359                           ; BSR set to: 0
  5360                           ;sm_MenuConfiguration_MC50.c: 829:                 {;sm_MenuConfiguration_MC50.c: 830:  
      +                                          sm_send_event(&menuConfiguration_stateMachine, ev_SartLearning);
  5361  00216A  0EBD               	movlw	low _menuConfiguration_stateMachine
  5362  00216C  6E12               	movwf	sm_send_event@psm^0,c
  5363  00216E  0E02               	movlw	high _menuConfiguration_stateMachine
  5364  002170  6E13               	movwf	(sm_send_event@psm+1)^0,c
  5365  002172  0E00               	movlw	0
  5366  002174  6E15               	movwf	(sm_send_event@event+1)^0,c
  5367  002176  0E14               	movlw	20
  5368  002178  6E14               	movwf	sm_send_event@event^0,c
  5369  00217A  EC29  F041         	call	_sm_send_event	;wreg free
  5370                           
  5371                           ;sm_MenuConfiguration_MC50.c: 831:                  sm_send_event(&controlGate_stateMach
      +                          ine,ev_SartLearning );
  5372  00217E  0EE2               	movlw	low _controlGate_stateMachine
  5373  002180  6E12               	movwf	sm_send_event@psm^0,c
  5374  002182  0E01               	movlw	high _controlGate_stateMachine
  5375  002184  6E13               	movwf	(sm_send_event@psm+1)^0,c
  5376  002186  0E00               	movlw	0
  5377  002188  6E15               	movwf	(sm_send_event@event+1)^0,c
  5378  00218A  0E14               	movlw	20
  5379  00218C  6E14               	movwf	sm_send_event@event^0,c
  5380  00218E  EC29  F041         	call	_sm_send_event	;wreg free
  5381                           
  5382                           ;sm_MenuConfiguration_MC50.c: 832:                  var_sys.LearningIsEnabled=YES;
  5383  002192  0E01               	movlw	1
  5384  002194  0101               	movlb	1	; () banked
  5385  002196  6F26               	movwf	(_var_sys+38)& (0+255),b	;volatile
  5386                           
  5387                           ; BSR set to: 1
  5388                           ;sm_MenuConfiguration_MC50.c: 833:                  var_sys.programinAutomatic = Automat
      +                          ic;
  5389  002198  0E00               	movlw	0
  5390  00219A  6F2A               	movwf	(_var_sys+42)& (0+255),b	;volatile
  5391                           
  5392                           ; BSR set to: 1
  5393                           ;sm_MenuConfiguration_MC50.c: 834:                  SaveNVM_VarSystem(pageMemoryE);
  5394  00219C  0E01               	movlw	1
  5395  00219E  EC0A  F045         	call	_SaveNVM_VarSystem
  5396                           
  5397                           ;sm_MenuConfiguration_MC50.c: 837:                 };sm_MenuConfiguration_MC50.c: 838:  
      +                                         break;
  5398  0021A2  D17B               	goto	l20803
  5399  0021A4                     l20623:
  5400                           
  5401                           ; BSR set to: 0
  5402                           ;sm_MenuConfiguration_MC50.c: 840:                 {;sm_MenuConfiguration_MC50.c: 841:  
      +                                          sm_send_event(&menuConfiguration_stateMachine, ev_SartLearning);
  5403  0021A4  0EBD               	movlw	low _menuConfiguration_stateMachine
  5404  0021A6  6E12               	movwf	sm_send_event@psm^0,c
  5405  0021A8  0E02               	movlw	high _menuConfiguration_stateMachine
  5406  0021AA  6E13               	movwf	(sm_send_event@psm+1)^0,c
  5407  0021AC  0E00               	movlw	0
  5408  0021AE  6E15               	movwf	(sm_send_event@event+1)^0,c
  5409  0021B0  0E14               	movlw	20
  5410  0021B2  6E14               	movwf	sm_send_event@event^0,c
  5411  0021B4  EC29  F041         	call	_sm_send_event	;wreg free
  5412                           
  5413                           ;sm_MenuConfiguration_MC50.c: 842:                  sm_send_event(&controlGate_stateMach
      +                          ine, ev_SartLearning);
  5414  0021B8  0EE2               	movlw	low _controlGate_stateMachine
  5415  0021BA  6E12               	movwf	sm_send_event@psm^0,c
  5416  0021BC  0E01               	movlw	high _controlGate_stateMachine
  5417  0021BE  6E13               	movwf	(sm_send_event@psm+1)^0,c
  5418  0021C0  0E00               	movlw	0
  5419  0021C2  6E15               	movwf	(sm_send_event@event+1)^0,c
  5420  0021C4  0E14               	movlw	20
  5421  0021C6  6E14               	movwf	sm_send_event@event^0,c
  5422  0021C8  EC29  F041         	call	_sm_send_event	;wreg free
  5423                           
  5424                           ;sm_MenuConfiguration_MC50.c: 843:                  var_sys.LearningIsEnabled=YES;
  5425  0021CC  0E01               	movlw	1
  5426  0021CE  0101               	movlb	1	; () banked
  5427  0021D0  6F26               	movwf	(_var_sys+38)& (0+255),b	;volatile
  5428                           
  5429                           ; BSR set to: 1
  5430                           ;sm_MenuConfiguration_MC50.c: 844:                  var_sys.programinAutomatic = Manual;
  5431  0021D2  0E01               	movlw	1
  5432  0021D4  6F2A               	movwf	(_var_sys+42)& (0+255),b	;volatile
  5433                           
  5434                           ; BSR set to: 1
  5435                           ;sm_MenuConfiguration_MC50.c: 845:                  SaveNVM_VarSystem(pageMemoryE);
  5436  0021D6  0E01               	movlw	1
  5437  0021D8  EC0A  F045         	call	_SaveNVM_VarSystem
  5438                           
  5439                           ;sm_MenuConfiguration_MC50.c: 848:                 };sm_MenuConfiguration_MC50.c: 849:  
      +                                         break;
  5440  0021DC  D15E               	goto	l20803
  5441  0021DE                     l3385:
  5442                           
  5443                           ; BSR set to: 0
  5444                           ;sm_MenuConfiguration_MC50.c: 851:                 {;sm_MenuConfiguration_MC50.c: 852:  
      +                                          edit_Param.tempValue=var_sys_NVM.TypeofMotor;
  5445  0021DE  C0B4  F049         	movff	_var_sys_NVM+28,_edit_Param+3	;volatile
  5446                           
  5447                           ; BSR set to: 0
  5448                           ;sm_MenuConfiguration_MC50.c: 853:                  load_New_Menu(TypeMotor_Menu);
  5449  0021E2  0E03               	movlw	3
  5450  0021E4  EC81  F01E         	call	_load_New_Menu
  5451                           
  5452                           ;sm_MenuConfiguration_MC50.c: 854:                  edit_Param.Value=(unsigned char*)&va
      +                          r_sys_NVM.TypeofMotor;
  5453  0021E8  0EB4               	movlw	low (_var_sys_NVM+28)
  5454  0021EA  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5455  0021EC  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5456                           
  5457                           ;sm_MenuConfiguration_MC50.c: 855:                  haveValueToEdit=1;
  5458  0021EE  0E01               	movlw	1
  5459  0021F0  0100               	movlb	0	; () banked
  5460  0021F2  6FE0               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  5461                           
  5462                           ; BSR set to: 0
  5463                           ;sm_MenuConfiguration_MC50.c: 856:                  edit_Param.Max=2;
  5464  0021F4  0E02               	movlw	2
  5465  0021F6  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5466                           
  5467                           ; BSR set to: 0
  5468                           ;sm_MenuConfiguration_MC50.c: 857:                  edit_Param.Min=0;
  5469  0021F8  0E00               	movlw	0
  5470  0021FA  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5471                           
  5472                           ;sm_MenuConfiguration_MC50.c: 859:                 };sm_MenuConfiguration_MC50.c: 860:  
      +                                         break;
  5473  0021FC  D14E               	goto	l20803
  5474  0021FE                     l3386:
  5475                           
  5476                           ; BSR set to: 0
  5477                           ;sm_MenuConfiguration_MC50.c: 862:                 {;sm_MenuConfiguration_MC50.c: 863:  
      +                                          edit_Param.tempValue=var_sys_NVM.Direction_motor;
  5478  0021FE  C0B3  F049         	movff	_var_sys_NVM+27,_edit_Param+3	;volatile
  5479                           
  5480                           ; BSR set to: 0
  5481                           ;sm_MenuConfiguration_MC50.c: 864:                  load_New_Menu(Direction_Menu);
  5482  002202  0E02               	movlw	2
  5483  002204  EC81  F01E         	call	_load_New_Menu
  5484                           
  5485                           ;sm_MenuConfiguration_MC50.c: 865:                  edit_Param.Value=(unsigned char*)&va
      +                          r_sys_NVM.Direction_motor;
  5486  002208  0EB3               	movlw	low (_var_sys_NVM+27)
  5487  00220A  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5488  00220C  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5489                           
  5490                           ;sm_MenuConfiguration_MC50.c: 866:                  haveValueToEdit=1;
  5491  00220E  0E01               	movlw	1
  5492  002210  0100               	movlb	0	; () banked
  5493  002212  6FE0               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  5494                           
  5495                           ; BSR set to: 0
  5496                           ;sm_MenuConfiguration_MC50.c: 867:                  edit_Param.Max=1;
  5497  002214  0E01               	movlw	1
  5498  002216  D7EF               	goto	L14
  5499  002218                     l20653:
  5500                           
  5501                           ; BSR set to: 0
  5502  002218  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5503  00221A  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5504  00221C  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5505                           
  5506                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5507                           ; Switch size 1, requested type "simple"
  5508                           ; Number of cases is 1, Range of values is 0 to 0
  5509                           ; switch strategies available:
  5510                           ; Name         Instructions Cycles
  5511                           ; simple_byte            4     3 (average)
  5512                           ;	Chosen strategy is simple_byte
  5513  00221E  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5514  002220  0A00               	xorlw	0	; case 0
  5515  002222  A4D8               	btfss	status,2,c
  5516  002224  D13A               	goto	l20803
  5517                           
  5518                           ; BSR set to: 0
  5519                           ; Switch size 1, requested type "simple"
  5520                           ; Number of cases is 4, Range of values is 0 to 3
  5521                           ; switch strategies available:
  5522                           ; Name         Instructions Cycles
  5523                           ; simple_byte           13     7 (average)
  5524                           ;	Chosen strategy is simple_byte
  5525  002226  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5526  002228  0A00               	xorlw	0	; case 0
  5527  00222A  B4D8               	btfsc	status,2,c
  5528  00222C  D79E               	goto	l20615
  5529  00222E  0A01               	xorlw	1	; case 1
  5530  002230  B4D8               	btfsc	status,2,c
  5531  002232  D7B8               	goto	l20623
  5532  002234  0A03               	xorlw	3	; case 2
  5533  002236  B4D8               	btfsc	status,2,c
  5534  002238  D7D2               	goto	l3385
  5535  00223A  0A01               	xorlw	1	; case 3
  5536  00223C  B4D8               	btfsc	status,2,c
  5537  00223E  D7DF               	goto	l3386
  5538  002240  D12C               	goto	l20803
  5539  002242                     l20655:
  5540                           
  5541                           ; BSR set to: 0
  5542                           ;sm_MenuConfiguration_MC50.c: 883:                 {;sm_MenuConfiguration_MC50.c: 884:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.decelarationOpen;
  5543  002242  0E98               	movlw	low _var_sys_NVM
  5544  002244  D001               	goto	L15
  5545  002246                     l20657:
  5546                           
  5547                           ; BSR set to: 0
  5548                           ;sm_MenuConfiguration_MC50.c: 888:                 {;sm_MenuConfiguration_MC50.c: 889:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.decelarationClose;
  5549  002246  0E99               	movlw	low (_var_sys_NVM+1)
  5550  002248                     L15:
  5551  002248  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5552  00224A  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5553                           
  5554                           ;sm_MenuConfiguration_MC50.c: 890:                 };sm_MenuConfiguration_MC50.c: 891:  
      +                                         break;
  5555  00224C  D00E               	goto	l20663
  5556  00224E                     l20661:
  5557                           
  5558                           ; BSR set to: 0
  5559  00224E  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5560  002250  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5561  002252  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5562                           
  5563                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5564                           ; Switch size 1, requested type "simple"
  5565                           ; Number of cases is 1, Range of values is 0 to 0
  5566                           ; switch strategies available:
  5567                           ; Name         Instructions Cycles
  5568                           ; simple_byte            4     3 (average)
  5569                           ;	Chosen strategy is simple_byte
  5570  002254  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5571  002256  0A00               	xorlw	0	; case 0
  5572  002258  A4D8               	btfss	status,2,c
  5573  00225A  D007               	goto	l20663
  5574                           
  5575                           ; BSR set to: 0
  5576                           ; Switch size 1, requested type "simple"
  5577                           ; Number of cases is 2, Range of values is 0 to 1
  5578                           ; switch strategies available:
  5579                           ; Name         Instructions Cycles
  5580                           ; simple_byte            7     4 (average)
  5581                           ;	Chosen strategy is simple_byte
  5582  00225C  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5583  00225E  0A00               	xorlw	0	; case 0
  5584  002260  B4D8               	btfsc	status,2,c
  5585  002262  D7EF               	goto	l20655
  5586  002264  0A01               	xorlw	1	; case 1
  5587  002266  B4D8               	btfsc	status,2,c
  5588  002268  D7EE               	goto	l20657
  5589  00226A                     l20663:
  5590                           
  5591                           ; BSR set to: 0
  5592                           ;sm_MenuConfiguration_MC50.c: 895:                 edit_Param.Max=45;
  5593  00226A  0E2D               	movlw	45
  5594  00226C                     L29:
  5595  00226C  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5596                           
  5597                           ;sm_MenuConfiguration_MC50.c: 896:                 edit_Param.Min=0;
  5598  00226E  0E00               	movlw	0
  5599  002270  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5600  002272                     L19:
  5601                           
  5602                           ;sm_MenuConfiguration_MC50.c: 899:             haveValueToEdit=1;
  5603  002272  0E01               	movlw	1
  5604  002274  6FE0               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  5605                           
  5606                           ; BSR set to: 0
  5607                           ;sm_MenuConfiguration_MC50.c: 900:             edit_Param.tempValue= edit_Param.Value[0]
      +                          ;
  5608  002276  C047  FFD9         	movff	_edit_Param+1,fsr2l	;volatile
  5609  00227A  C048  FFDA         	movff	_edit_Param+2,fsr2h	;volatile
  5610  00227E  50DF               	movf	indf2,w,c
  5611  002280  6E49               	movwf	(_edit_Param+3)^0,c	;volatile
  5612                           
  5613                           ;sm_MenuConfiguration_MC50.c: 901:         };sm_MenuConfiguration_MC50.c: 902:         b
      +                          reak;
  5614  002282  D10B               	goto	l20803
  5615  002284                     l20667:
  5616                           
  5617                           ; BSR set to: 0
  5618                           ;sm_MenuConfiguration_MC50.c: 904:         {;sm_MenuConfiguration_MC50.c: 905:          
      +                             edit_Param.Max=9;
  5619  002284  0E09               	movlw	9
  5620  002286  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5621                           
  5622                           ;sm_MenuConfiguration_MC50.c: 906:             edit_Param.Min=0;
  5623  002288  0E00               	movlw	0
  5624  00228A  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5625                           
  5626                           ;sm_MenuConfiguration_MC50.c: 907:             switch (ParameterSelected)
  5627  00228C  D00F               	goto	l20683
  5628  00228E                     l20669:
  5629                           
  5630                           ; BSR set to: 0
  5631                           ;sm_MenuConfiguration_MC50.c: 910:                 {;sm_MenuConfiguration_MC50.c: 911:  
      +                                               if (var_sys_NVM.motorSensitivity <2)
  5632  00228E  0E02               	movlw	2
  5633  002290  619B               	cpfslt	(_var_sys_NVM+3)& (0+255),b	;volatile
  5634  002292  D002               	goto	l20673
  5635                           
  5636                           ; BSR set to: 0
  5637                           ;sm_MenuConfiguration_MC50.c: 912:                       {;sm_MenuConfiguration_MC50.c: 
      +                          913:                         edit_Param.Min=0;
  5638  002294  0E00               	movlw	0
  5639  002296  D001               	goto	L16
  5640  002298                     l20673:
  5641                           
  5642                           ; BSR set to: 0
  5643                           ;sm_MenuConfiguration_MC50.c: 916:                       {;sm_MenuConfiguration_MC50.c: 
      +                          917:                         edit_Param.Min=9;
  5644  002298  0E09               	movlw	9
  5645  00229A                     L16:
  5646  00229A  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5647                           
  5648                           ; BSR set to: 0
  5649                           ;sm_MenuConfiguration_MC50.c: 919:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.motorPower;
  5650  00229C  0E9A               	movlw	low (_var_sys_NVM+2)
  5651  00229E  D003               	goto	L18
  5652  0022A0                     l20677:
  5653                           
  5654                           ; BSR set to: 0
  5655                           ;sm_MenuConfiguration_MC50.c: 923:                 {;sm_MenuConfiguration_MC50.c: 924:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.motorSensitivity;
  5656  0022A0  0E9B               	movlw	low (_var_sys_NVM+3)
  5657  0022A2  D001               	goto	L18
  5658  0022A4                     l20679:
  5659                           
  5660                           ; BSR set to: 0
  5661                           ;sm_MenuConfiguration_MC50.c: 928:                 {;sm_MenuConfiguration_MC50.c: 929:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.decelarationSensivity;
  5662  0022A4  0EA7               	movlw	low (_var_sys_NVM+15)
  5663  0022A6                     L18:
  5664  0022A6  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5665  0022A8  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5666                           
  5667                           ;sm_MenuConfiguration_MC50.c: 930:                 };sm_MenuConfiguration_MC50.c: 931:  
      +                                         break;
  5668  0022AA  D7E3               	goto	L19
  5669  0022AC                     l20683:
  5670                           
  5671                           ; BSR set to: 0
  5672  0022AC  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5673  0022AE  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5674  0022B0  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5675                           
  5676                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5677                           ; Switch size 1, requested type "simple"
  5678                           ; Number of cases is 1, Range of values is 0 to 0
  5679                           ; switch strategies available:
  5680                           ; Name         Instructions Cycles
  5681                           ; simple_byte            4     3 (average)
  5682                           ;	Chosen strategy is simple_byte
  5683  0022B2  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5684  0022B4  0A00               	xorlw	0	; case 0
  5685  0022B6  A4D8               	btfss	status,2,c
  5686  0022B8  D7DC               	goto	L19
  5687                           
  5688                           ; BSR set to: 0
  5689                           ; Switch size 1, requested type "simple"
  5690                           ; Number of cases is 3, Range of values is 0 to 2
  5691                           ; switch strategies available:
  5692                           ; Name         Instructions Cycles
  5693                           ; simple_byte           10     6 (average)
  5694                           ;	Chosen strategy is simple_byte
  5695  0022BA  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5696  0022BC  0A00               	xorlw	0	; case 0
  5697  0022BE  B4D8               	btfsc	status,2,c
  5698  0022C0  D7E6               	goto	l20669
  5699  0022C2  0A01               	xorlw	1	; case 1
  5700  0022C4  B4D8               	btfsc	status,2,c
  5701  0022C6  D7EC               	goto	l20677
  5702  0022C8  0A03               	xorlw	3	; case 2
  5703  0022CA  B4D8               	btfsc	status,2,c
  5704  0022CC  D7EB               	goto	l20679
  5705  0022CE  D7D1               	goto	L19
  5706  0022D0                     l20689:
  5707                           
  5708                           ; BSR set to: 0
  5709                           ;sm_MenuConfiguration_MC50.c: 942:                 {;sm_MenuConfiguration_MC50.c: 943:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.autoTimeFullClose;
  5710  0022D0  0E9D               	movlw	low (_var_sys_NVM+5)
  5711  0022D2  D001               	goto	L20
  5712  0022D4                     l20691:
  5713                           
  5714                           ; BSR set to: 0
  5715                           ;sm_MenuConfiguration_MC50.c: 947:                 {;sm_MenuConfiguration_MC50.c: 948:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.autoTimeWalkClose;
  5716  0022D4  0E9E               	movlw	low (_var_sys_NVM+6)
  5717  0022D6                     L20:
  5718  0022D6  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5719  0022D8  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5720                           
  5721                           ;sm_MenuConfiguration_MC50.c: 949:                 };sm_MenuConfiguration_MC50.c: 950:  
      +                                         break;
  5722  0022DA  D00E               	goto	l20697
  5723  0022DC                     l20695:
  5724                           
  5725                           ; BSR set to: 0
  5726  0022DC  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5727  0022DE  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5728  0022E0  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5729                           
  5730                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5731                           ; Switch size 1, requested type "simple"
  5732                           ; Number of cases is 1, Range of values is 0 to 0
  5733                           ; switch strategies available:
  5734                           ; Name         Instructions Cycles
  5735                           ; simple_byte            4     3 (average)
  5736                           ;	Chosen strategy is simple_byte
  5737  0022E2  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5738  0022E4  0A00               	xorlw	0	; case 0
  5739  0022E6  A4D8               	btfss	status,2,c
  5740  0022E8  D007               	goto	l20697
  5741                           
  5742                           ; BSR set to: 0
  5743                           ; Switch size 1, requested type "simple"
  5744                           ; Number of cases is 2, Range of values is 0 to 1
  5745                           ; switch strategies available:
  5746                           ; Name         Instructions Cycles
  5747                           ; simple_byte            7     4 (average)
  5748                           ;	Chosen strategy is simple_byte
  5749  0022EA  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5750  0022EC  0A00               	xorlw	0	; case 0
  5751  0022EE  B4D8               	btfsc	status,2,c
  5752  0022F0  D7EF               	goto	l20689
  5753  0022F2  0A01               	xorlw	1	; case 1
  5754  0022F4  B4D8               	btfsc	status,2,c
  5755  0022F6  D7EE               	goto	l20691
  5756  0022F8                     l20697:
  5757                           
  5758                           ; BSR set to: 0
  5759                           ;sm_MenuConfiguration_MC50.c: 952:             edit_Param.Max=99;
  5760  0022F8  0E63               	movlw	99
  5761  0022FA  D7B8               	goto	L29
  5762  0022FC                     l20701:
  5763                           
  5764                           ; BSR set to: 0
  5765                           ;sm_MenuConfiguration_MC50.c: 963:                 {;sm_MenuConfiguration_MC50.c: 964:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.photoCellIsON;
  5766  0022FC  0E9F               	movlw	low (_var_sys_NVM+7)
  5767  0022FE  D034               	goto	L125
  5768  002300                     l20703:
  5769                           
  5770                           ; BSR set to: 0
  5771                           ;sm_MenuConfiguration_MC50.c: 968:                 {;sm_MenuConfiguration_MC50.c: 969:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.photoCellInOpen;
  5772  002300  0EA0               	movlw	low (_var_sys_NVM+8)
  5773  002302  D032               	goto	L125
  5774  002304                     l20707:
  5775                           
  5776                           ; BSR set to: 0
  5777  002304  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5778  002306  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5779  002308  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5780                           
  5781                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5782                           ; Switch size 1, requested type "simple"
  5783                           ; Number of cases is 1, Range of values is 0 to 0
  5784                           ; switch strategies available:
  5785                           ; Name         Instructions Cycles
  5786                           ; simple_byte            4     3 (average)
  5787                           ;	Chosen strategy is simple_byte
  5788  00230A  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5789  00230C  0A00               	xorlw	0	; case 0
  5790  00230E  A4D8               	btfss	status,2,c
  5791  002310  D02D               	goto	L124
  5792                           
  5793                           ; BSR set to: 0
  5794                           ; Switch size 1, requested type "simple"
  5795                           ; Number of cases is 2, Range of values is 0 to 1
  5796                           ; switch strategies available:
  5797                           ; Name         Instructions Cycles
  5798                           ; simple_byte            7     4 (average)
  5799                           ;	Chosen strategy is simple_byte
  5800  002312  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5801  002314  0A00               	xorlw	0	; case 0
  5802  002316  B4D8               	btfsc	status,2,c
  5803  002318  D7F1               	goto	l20701
  5804  00231A  0A01               	xorlw	1	; case 1
  5805  00231C  B4D8               	btfsc	status,2,c
  5806  00231E  D7F0               	goto	l20703
  5807  002320  D025               	goto	L124
  5808  002322                     l20713:
  5809                           
  5810                           ; BSR set to: 0
  5811                           ;sm_MenuConfiguration_MC50.c: 984:                 {;sm_MenuConfiguration_MC50.c: 985:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.securityBandIsON;
  5812  002322  0EA1               	movlw	low (_var_sys_NVM+9)
  5813  002324  D021               	goto	L125
  5814  002326                     l20715:
  5815                           
  5816                           ; BSR set to: 0
  5817                           ;sm_MenuConfiguration_MC50.c: 989:                 {;sm_MenuConfiguration_MC50.c: 990:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.securityBandType;
  5818  002326  0EA2               	movlw	low (_var_sys_NVM+10)
  5819  002328  D01F               	goto	L125
  5820  00232A                     l20717:
  5821                           
  5822                           ; BSR set to: 0
  5823                           ;sm_MenuConfiguration_MC50.c: 994:                 {;sm_MenuConfiguration_MC50.c: 995:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.securityBandInOpen;
  5824  00232A  0EA3               	movlw	low (_var_sys_NVM+11)
  5825  00232C  D01D               	goto	L125
  5826  00232E                     l20719:
  5827                           
  5828                           ; BSR set to: 0
  5829                           ;sm_MenuConfiguration_MC50.c: 999:                 {;sm_MenuConfiguration_MC50.c: 1000: 
      +                                              edit_Param.Value=(unsigned char*)&var_sys_NVM.Stopboton;
  5830  00232E  0EAE               	movlw	low (_var_sys_NVM+22)
  5831  002330  D01B               	goto	L125
  5832  002332                     l20723:
  5833                           
  5834                           ; BSR set to: 0
  5835  002332  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5836  002334  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5837  002336  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5838                           
  5839                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5840                           ; Switch size 1, requested type "simple"
  5841                           ; Number of cases is 1, Range of values is 0 to 0
  5842                           ; switch strategies available:
  5843                           ; Name         Instructions Cycles
  5844                           ; simple_byte            4     3 (average)
  5845                           ;	Chosen strategy is simple_byte
  5846  002338  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5847  00233A  0A00               	xorlw	0	; case 0
  5848  00233C  A4D8               	btfss	status,2,c
  5849  00233E  D016               	goto	L124
  5850                           
  5851                           ; BSR set to: 0
  5852                           ; Switch size 1, requested type "simple"
  5853                           ; Number of cases is 4, Range of values is 0 to 3
  5854                           ; switch strategies available:
  5855                           ; Name         Instructions Cycles
  5856                           ; simple_byte           13     7 (average)
  5857                           ;	Chosen strategy is simple_byte
  5858  002340  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5859  002342  0A00               	xorlw	0	; case 0
  5860  002344  B4D8               	btfsc	status,2,c
  5861  002346  D7ED               	goto	l20713
  5862  002348  0A01               	xorlw	1	; case 1
  5863  00234A  B4D8               	btfsc	status,2,c
  5864  00234C  D7EC               	goto	l20715
  5865  00234E  0A03               	xorlw	3	; case 2
  5866  002350  B4D8               	btfsc	status,2,c
  5867  002352  D7EB               	goto	l20717
  5868  002354  0A01               	xorlw	1	; case 3
  5869  002356  B4D8               	btfsc	status,2,c
  5870  002358  D7EA               	goto	l20719
  5871  00235A  D008               	goto	L124
  5872  00235C                     l20729:
  5873                           
  5874                           ; BSR set to: 0
  5875                           ;sm_MenuConfiguration_MC50.c: 1018:                 {;sm_MenuConfiguration_MC50.c: 1019:
      +                                               edit_Param.Value=(unsigned char*)&var_sys_NVM.homemPresente;
  5876  00235C  0EA8               	movlw	low (_var_sys_NVM+16)
  5877  00235E  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5878  002360  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5879                           
  5880                           ; BSR set to: 0
  5881                           ;sm_MenuConfiguration_MC50.c: 1020:                       edit_Param.Max=2;
  5882  002362  0E02               	movlw	2
  5883  002364  D783               	goto	L29
  5884  002366                     l20735:
  5885                           
  5886                           ; BSR set to: 0
  5887                           ;sm_MenuConfiguration_MC50.c: 1025:                 {;sm_MenuConfiguration_MC50.c: 1026:
      +                                               edit_Param.Value=(unsigned char*)&var_sys_NVM.logicDigital;
  5888  002366  0EA9               	movlw	low (_var_sys_NVM+17)
  5889  002368                     L125:
  5890  002368  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5891  00236A  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5892  00236C                     L124:
  5893                           
  5894                           ; BSR set to: 0
  5895                           ;sm_MenuConfiguration_MC50.c: 1027:                     edit_Param.Max=1;
  5896  00236C  0E01               	movlw	1
  5897  00236E  D77E               	goto	L29
  5898  002370                     l20743:
  5899                           
  5900                           ; BSR set to: 0
  5901  002370  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5902  002372  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5903  002374  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5904                           
  5905                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5906                           ; Switch size 1, requested type "simple"
  5907                           ; Number of cases is 1, Range of values is 0 to 0
  5908                           ; switch strategies available:
  5909                           ; Name         Instructions Cycles
  5910                           ; simple_byte            4     3 (average)
  5911                           ;	Chosen strategy is simple_byte
  5912  002376  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5913  002378  0A00               	xorlw	0	; case 0
  5914  00237A  A4D8               	btfss	status,2,c
  5915  00237C  D77A               	goto	L19
  5916                           
  5917                           ; BSR set to: 0
  5918                           ; Switch size 1, requested type "simple"
  5919                           ; Number of cases is 2, Range of values is 0 to 1
  5920                           ; switch strategies available:
  5921                           ; Name         Instructions Cycles
  5922                           ; simple_byte            7     4 (average)
  5923                           ;	Chosen strategy is simple_byte
  5924  00237E  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5925  002380  0A00               	xorlw	0	; case 0
  5926  002382  B4D8               	btfsc	status,2,c
  5927  002384  D7EB               	goto	l20729
  5928  002386  0A01               	xorlw	1	; case 1
  5929  002388  B4D8               	btfsc	status,2,c
  5930  00238A  D7ED               	goto	l20735
  5931  00238C  D772               	goto	L19
  5932  00238E                     l20749:
  5933                           
  5934                           ; BSR set to: 0
  5935                           ;sm_MenuConfiguration_MC50.c: 1042:                 {;sm_MenuConfiguration_MC50.c: 1043:
      +                                               edit_Param.Value=(unsigned char*)&var_sys_NVM.softStart;
  5936  00238E  0EAA               	movlw	low (_var_sys_NVM+18)
  5937  002390  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5938  002392  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5939                           
  5940                           ; BSR set to: 0
  5941                           ;sm_MenuConfiguration_MC50.c: 1044:                      edit_Param.Max=9;
  5942  002394  0E09               	movlw	9
  5943  002396  D76A               	goto	L29
  5944  002398                     l20755:
  5945                           
  5946                           ; BSR set to: 0
  5947                           ;sm_MenuConfiguration_MC50.c: 1049:                 {;sm_MenuConfiguration_MC50.c: 1050:
      +                                               edit_Param.Value=(unsigned char*)&var_sys_NVM.softstop;
  5948  002398  0EAB               	movlw	low (_var_sys_NVM+19)
  5949  00239A  D7FA               	goto	L27
  5950  00239C                     l20763:
  5951                           
  5952                           ; BSR set to: 0
  5953  00239C  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5954  00239E  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5955  0023A0  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5956                           
  5957                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5958                           ; Switch size 1, requested type "simple"
  5959                           ; Number of cases is 1, Range of values is 0 to 0
  5960                           ; switch strategies available:
  5961                           ; Name         Instructions Cycles
  5962                           ; simple_byte            4     3 (average)
  5963                           ;	Chosen strategy is simple_byte
  5964  0023A2  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5965  0023A4  0A00               	xorlw	0	; case 0
  5966  0023A6  A4D8               	btfss	status,2,c
  5967  0023A8  D764               	goto	L19
  5968                           
  5969                           ; BSR set to: 0
  5970                           ; Switch size 1, requested type "simple"
  5971                           ; Number of cases is 2, Range of values is 0 to 1
  5972                           ; switch strategies available:
  5973                           ; Name         Instructions Cycles
  5974                           ; simple_byte            7     4 (average)
  5975                           ;	Chosen strategy is simple_byte
  5976  0023AA  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5977  0023AC  0A00               	xorlw	0	; case 0
  5978  0023AE  B4D8               	btfsc	status,2,c
  5979  0023B0  D7EE               	goto	l20749
  5980  0023B2  0A01               	xorlw	1	; case 1
  5981  0023B4  B4D8               	btfsc	status,2,c
  5982  0023B6  D7F0               	goto	l20755
  5983  0023B8  D75C               	goto	L19
  5984  0023BA                     l20769:
  5985                           
  5986                           ; BSR set to: 0
  5987                           ;sm_MenuConfiguration_MC50.c: 1068:                 {;sm_MenuConfiguration_MC50.c: 1069:
      +                                 edit_Param.Value=&value;
  5988  0023BA  0EF8               	movlw	low setValueToEdit@value
  5989  0023BC  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5990  0023BE  0E01               	movlw	high setValueToEdit@value
  5991  0023C0  6E48               	movwf	(_edit_Param+2)^0,c	;volatile
  5992                           
  5993                           ; BSR set to: 0
  5994                           ;sm_MenuConfiguration_MC50.c: 1070:                     for(unsigned char posindex=0; po
      +                          sindex <= *(unsigned char*)&var_sys_NVM.positionRemotesFull; posindex++)
  5995  0023C2  0E00               	movlw	0
  5996  0023C4  6FDF               	movwf	setValueToEdit@posindex& (0+255),b
  5997  0023C6  D00D               	goto	l20779
  5998  0023C8                     l3433:
  5999                           
  6000                           ; BSR set to: 0
  6001                           ;sm_MenuConfiguration_MC50.c: 1071:                     {;sm_MenuConfiguration_MC50.c: 1
      +                          072:                         value=posindex;
  6002  0023C8  C0DF  F1F8         	movff	setValueToEdit@posindex,setValueToEdit@value
  6003                           
  6004                           ; BSR set to: 0
  6005                           ;sm_MenuConfiguration_MC50.c: 1073:                         if(cmdMemoryIsEmpty(menu_st.
      +                          parameterSelected, posindex))
  6006  0023CC  C0DF  F02E         	movff	setValueToEdit@posindex,cmdMemoryIsEmpty@position
  6007  0023D0  0101               	movlb	1	; () banked
  6008  0023D2  5168               	movf	(_menu_st+23)& (0+255),w,b
  6009  0023D4  ECB7  F03A         	call	_cmdMemoryIsEmpty
  6010  0023D8  0900               	iorlw	0
  6011  0023DA  A4D8               	btfss	status,2,c
  6012  0023DC  D008               	goto	u23900
  6013                           
  6014                           ;sm_MenuConfiguration_MC50.c: 1075:                     }
  6015  0023DE  0100               	movlb	0	; () banked
  6016  0023E0  2BDF               	incf	setValueToEdit@posindex& (0+255),f,b
  6017  0023E2                     l20779:
  6018                           
  6019                           ; BSR set to: 0
  6020  0023E2  EE20  F0B8         	lfsr	2,_var_sys_NVM+32
  6021  0023E6  51DF               	movf	setValueToEdit@posindex& (0+255),w,b
  6022  0023E8  5CDE               	subwf	postinc2,w,c
  6023  0023EA  B0D8               	btfsc	status,0,c
  6024  0023EC  D7ED               	goto	l3433
  6025  0023EE                     u23900:
  6026                           
  6027                           ;sm_MenuConfiguration_MC50.c: 1076:                     edit_Param.Max=*(unsigned char*)
      +                          &var_sys_NVM.positionRemotesFull;
  6028  0023EE  EE20  F0B8         	lfsr	2,_var_sys_NVM+32
  6029  0023F2  D005               	goto	L28
  6030  0023F4                     l20783:
  6031                           
  6032                           ; BSR set to: 0
  6033                           ;sm_MenuConfiguration_MC50.c: 1080:                 {;sm_MenuConfiguration_MC50.c: 1081:
      +                                               edit_Param.Value=(unsigned char*)&var_sys_NVM.positionRemotesWalk;
  6034  0023F4  0EB9               	movlw	low (_var_sys_NVM+33)
  6035  0023F6  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  6036  0023F8  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  6037                           
  6038                           ; BSR set to: 0
  6039                           ;sm_MenuConfiguration_MC50.c: 1082:                     edit_Param.Max=*(unsigned char*)
      +                          &var_sys_NVM.positionRemotesWalk;
  6040  0023FA  EE20  F0B9         	lfsr	2,_var_sys_NVM+33
  6041  0023FE                     L28:
  6042  0023FE  50DF               	movf	indf2,w,c
  6043  002400  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  6044                           
  6045                           ;sm_MenuConfiguration_MC50.c: 1083:                 };sm_MenuConfiguration_MC50.c: 1084:
      +                                           break;
  6046  002402  D00E               	goto	l20791
  6047  002404                     l20789:
  6048                           
  6049                           ; BSR set to: 0
  6050  002404  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  6051  002406  6FDC               	movwf	??_setValueToEdit& (0+255),b
  6052  002408  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  6053                           
  6054                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6055                           ; Switch size 1, requested type "simple"
  6056                           ; Number of cases is 1, Range of values is 0 to 0
  6057                           ; switch strategies available:
  6058                           ; Name         Instructions Cycles
  6059                           ; simple_byte            4     3 (average)
  6060                           ;	Chosen strategy is simple_byte
  6061  00240A  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  6062  00240C  0A00               	xorlw	0	; case 0
  6063  00240E  A4D8               	btfss	status,2,c
  6064  002410  D007               	goto	l20791
  6065                           
  6066                           ; BSR set to: 0
  6067                           ; Switch size 1, requested type "simple"
  6068                           ; Number of cases is 2, Range of values is 0 to 1
  6069                           ; switch strategies available:
  6070                           ; Name         Instructions Cycles
  6071                           ; simple_byte            7     4 (average)
  6072                           ;	Chosen strategy is simple_byte
  6073  002412  51DC               	movf	??_setValueToEdit& (0+255),w,b
  6074  002414  0A00               	xorlw	0	; case 0
  6075  002416  B4D8               	btfsc	status,2,c
  6076  002418  D7D0               	goto	l20769
  6077  00241A  0A01               	xorlw	1	; case 1
  6078  00241C  B4D8               	btfsc	status,2,c
  6079  00241E  D7EA               	goto	l20783
  6080  002420                     l20791:
  6081                           
  6082                           ;sm_MenuConfiguration_MC50.c: 1086:             edit_Param.position=*edit_Param.Value;
  6083  002420  C047  FFD9         	movff	_edit_Param+1,fsr2l	;volatile
  6084  002424  C048  FFDA         	movff	_edit_Param+2,fsr2h	;volatile
  6085  002428  50DF               	movf	indf2,w,c
  6086  00242A  6E46               	movwf	_edit_Param^0,c	;volatile
  6087                           
  6088                           ;sm_MenuConfiguration_MC50.c: 1087:             edit_Param.Min=0;
  6089  00242C  0E00               	movlw	0
  6090  00242E  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  6091                           
  6092                           ;sm_MenuConfiguration_MC50.c: 1088:             haveValueToEdit=1;
  6093  002430  0E01               	movlw	1
  6094  002432  0100               	movlb	0	; () banked
  6095  002434  6FE0               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  6096                           
  6097                           ;sm_MenuConfiguration_MC50.c: 1089:             edit_Param.tempValue=*edit_Param.Value;
  6098  002436  C047  FFD9         	movff	_edit_Param+1,fsr2l	;volatile
  6099  00243A  C048  FFDA         	movff	_edit_Param+2,fsr2h	;volatile
  6100  00243E  50DF               	movf	indf2,w,c
  6101  002440  6E49               	movwf	(_edit_Param+3)^0,c	;volatile
  6102                           
  6103                           ; BSR set to: 0
  6104                           ;sm_MenuConfiguration_MC50.c: 1090:             InitReceiver();
  6105  002442  ECD4  F047         	call	_InitReceiver	;wreg free
  6106                           
  6107                           ;sm_MenuConfiguration_MC50.c: 1091:         };sm_MenuConfiguration_MC50.c: 1092:        
      +                           break;
  6108  002446  D029               	goto	l20803
  6109  002448                     l20801:
  6110                           
  6111                           ; BSR set to: 0
  6112  002448  51DE               	movf	setValueToEdit@menuType& (0+255),w,b
  6113  00244A  6FDC               	movwf	??_setValueToEdit& (0+255),b
  6114  00244C  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  6115                           
  6116                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6117                           ; Switch size 1, requested type "simple"
  6118                           ; Number of cases is 1, Range of values is 0 to 0
  6119                           ; switch strategies available:
  6120                           ; Name         Instructions Cycles
  6121                           ; simple_byte            4     3 (average)
  6122                           ;	Chosen strategy is simple_byte
  6123  00244E  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  6124  002450  0A00               	xorlw	0	; case 0
  6125  002452  A4D8               	btfss	status,2,c
  6126  002454  D022               	goto	l20803
  6127                           
  6128                           ; BSR set to: 0
  6129                           ; Switch size 1, requested type "simple"
  6130                           ; Number of cases is 11, Range of values is 0 to 12
  6131                           ; switch strategies available:
  6132                           ; Name         Instructions Cycles
  6133                           ; simple_byte           34    18 (average)
  6134                           ;	Chosen strategy is simple_byte
  6135  002456  51DC               	movf	??_setValueToEdit& (0+255),w,b
  6136  002458  0A00               	xorlw	0	; case 0
  6137  00245A  B4D8               	btfsc	status,2,c
  6138  00245C  D5A1               	goto	l3353
  6139  00245E  0A01               	xorlw	1	; case 1
  6140  002460  B4D8               	btfsc	status,2,c
  6141  002462  D5FE               	goto	l3367
  6142  002464  0A05               	xorlw	5	; case 4
  6143  002466  B4D8               	btfsc	status,2,c
  6144  002468  D6D7               	goto	l20653
  6145  00246A  0A01               	xorlw	1	; case 5
  6146  00246C  B4D8               	btfsc	status,2,c
  6147  00246E  D6EF               	goto	l20661
  6148  002470  0A03               	xorlw	3	; case 6
  6149  002472  B4D8               	btfsc	status,2,c
  6150  002474  D707               	goto	l20667
  6151  002476  0A01               	xorlw	1	; case 7
  6152  002478  B4D8               	btfsc	status,2,c
  6153  00247A  D730               	goto	l20695
  6154  00247C  0A0F               	xorlw	15	; case 8
  6155  00247E  B4D8               	btfsc	status,2,c
  6156  002480  D741               	goto	l20707
  6157  002482  0A01               	xorlw	1	; case 9
  6158  002484  B4D8               	btfsc	status,2,c
  6159  002486  D755               	goto	l20723
  6160  002488  0A03               	xorlw	3	; case 10
  6161  00248A  B4D8               	btfsc	status,2,c
  6162  00248C  D771               	goto	l20743
  6163  00248E  0A01               	xorlw	1	; case 11
  6164  002490  B4D8               	btfsc	status,2,c
  6165  002492  D784               	goto	l20763
  6166  002494  0A07               	xorlw	7	; case 12
  6167  002496  B4D8               	btfsc	status,2,c
  6168  002498  D7B5               	goto	l20789
  6169  00249A                     l20803:
  6170                           
  6171                           ;sm_MenuConfiguration_MC50.c: 1095:     return haveValueToEdit;
  6172  00249A  0100               	movlb	0	; () banked
  6173  00249C  51E0               	movf	setValueToEdit@haveValueToEdit& (0+255),w,b
  6174                           
  6175                           ; BSR set to: 0
  6176  00249E  0012               	return		;funcret
  6177  0024A0                     __end_of_setValueToEdit:
  6178                           	callstack 0
  6179                           
  6180 ;; *************** function _load_New_Menu *****************
  6181 ;; Defined at:
  6182 ;;		line 434 in file "sm_MenuConfiguration_MC50.c"
  6183 ;; Parameters:    Size  Location     Type
  6184 ;;  Menu            1    wreg     enum E10813
  6185 ;; Auto vars:     Size  Location     Type
  6186 ;;  Menu            1   33[COMRAM] enum E10813
  6187 ;;  i               1   34[COMRAM] unsigned char 
  6188 ;; Return value:  Size  Location     Type
  6189 ;;                  1    wreg      void 
  6190 ;; Registers used:
  6191 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6192 ;; Tracked objects:
  6193 ;;		On entry : 0/0
  6194 ;;		On exit  : 0/0
  6195 ;;		Unchanged: 0/0
  6196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6198 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6199 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6200 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6201 ;;Total ram usage:        4 bytes
  6202 ;; Hardware stack levels used: 1
  6203 ;; Hardware stack levels required when called: 5
  6204 ;; This function calls:
  6205 ;;		_SetSegmentValueIntermitentMain
  6206 ;;		_SetSegmentValueMain
  6207 ;; This function is called by:
  6208 ;;		_sm_execute_main
  6209 ;;		_sm_execute_menuConfiguration
  6210 ;;		_setValueToEdit
  6211 ;; This function uses a non-reentrant model
  6212 ;;
  6213                           
  6214                           	psect	text4
  6215  003D02                     __ptext4:
  6216                           	callstack 0
  6217  003D02                     _load_New_Menu:
  6218                           	callstack 22
  6219                           
  6220                           ; BSR set to: 0
  6221                           ;incstack = 0
  6222                           ;load_New_Menu@Menu stored from wreg
  6223  003D02  6E22               	movwf	load_New_Menu@Menu^0,c
  6224                           
  6225                           ;sm_MenuConfiguration_MC50.c: 435:     ts_system.timeoutMenu=((1000/50)*5) ;
  6226  003D04  0E00               	movlw	0
  6227  003D06  0101               	movlb	1	; () banked
  6228  003D08  6FA9               	movwf	(_ts_system+15)& (0+255),b	;volatile
  6229  003D0A  0E64               	movlw	100
  6230  003D0C  6FA8               	movwf	(_ts_system+14)& (0+255),b	;volatile
  6231                           
  6232                           ; BSR set to: 1
  6233                           ;sm_MenuConfiguration_MC50.c: 439:     if(menu_st.actualMenu!=Menu && Menu>E_Menu)
  6234  003D0E  5022               	movf	load_New_Menu@Menu^0,w,c
  6235  003D10  1966               	xorwf	(_menu_st+21)& (0+255),w,b
  6236  003D12  B4D8               	btfsc	status,2,c
  6237  003D14  D006               	goto	l19811
  6238                           
  6239                           ; BSR set to: 1
  6240  003D16  0E01               	movlw	1
  6241  003D18  6422               	cpfsgt	load_New_Menu@Menu^0,c
  6242  003D1A  D003               	goto	l19811
  6243                           
  6244                           ; BSR set to: 1
  6245                           ;sm_MenuConfiguration_MC50.c: 440:     {;sm_MenuConfiguration_MC50.c: 441:         menu_
      +                          st.parameterSelected=0;
  6246  003D1C  0E00               	movlw	0
  6247  003D1E  6F68               	movwf	(_menu_st+23)& (0+255),b
  6248                           
  6249                           ;sm_MenuConfiguration_MC50.c: 442:     }
  6250  003D20  D005               	goto	l19815
  6251  003D22                     l19811:
  6252                           
  6253                           ; BSR set to: 1
  6254  003D22  0E02               	movlw	2
  6255  003D24  6022               	cpfslt	load_New_Menu@Menu^0,c
  6256  003D26  D002               	goto	l19815
  6257                           
  6258                           ; BSR set to: 1
  6259                           ;sm_MenuConfiguration_MC50.c: 444:     {;sm_MenuConfiguration_MC50.c: 445:        menu_s
      +                          t.parameterSelected = menu_st.lastMainParameterSelected;
  6260  003D28  C169  F168         	movff	_menu_st+24,_menu_st+23
  6261  003D2C                     l19815:
  6262                           
  6263                           ; BSR set to: 1
  6264                           ;sm_MenuConfiguration_MC50.c: 449:     menu_st.lastMenu=((void*)0);
  6265  003D2C  0E00               	movlw	0
  6266  003D2E  6F65               	movwf	(_menu_st+20)& (0+255),b
  6267                           
  6268                           ;sm_MenuConfiguration_MC50.c: 450:     switch (Menu)
  6269  003D30  D0F6               	goto	l19867
  6270  003D32                     l19817:
  6271                           
  6272                           ; BSR set to: 1
  6273                           ;sm_MenuConfiguration_MC50.c: 453:         {;sm_MenuConfiguration_MC50.c: 455:          
      +                             menu_st.actualMenu=P_Menu;
  6274  003D32  0E00               	movlw	0
  6275  003D34  6F66               	movwf	(_menu_st+21)& (0+255),b
  6276                           
  6277                           ;sm_MenuConfiguration_MC50.c: 456:             menu_st.menuSize=10;
  6278  003D36  0E0A               	movlw	10
  6279  003D38  6F67               	movwf	(_menu_st+22)& (0+255),b
  6280                           
  6281                           ;sm_MenuConfiguration_MC50.c: 457:             menu_st.lastMainParameterSelected=0;
  6282  003D3A  0E00               	movlw	0
  6283  003D3C  6F69               	movwf	(_menu_st+24)& (0+255),b
  6284                           
  6285                           ;sm_MenuConfiguration_MC50.c: 458:             for (i=0;i<(10);i++)
  6286  003D3E  0E00               	movlw	0
  6287  003D40  6E23               	movwf	load_New_Menu@i^0,c
  6288  003D42                     l19823:
  6289                           
  6290                           ;sm_MenuConfiguration_MC50.c: 459:             {;sm_MenuConfiguration_MC50.c: 460:      
      +                                    menu_st.menuList[i].value_display1=dP;
  6291  003D42  5023               	movf	load_New_Menu@i^0,w,c
  6292  003D44  0D02               	mullw	2
  6293  003D46  0E51               	movlw	low _menu_st
  6294  003D48  24F3               	addwf	243,w,c
  6295  003D4A  6ED9               	movwf	fsr2l,c
  6296  003D4C  0E01               	movlw	high _menu_st
  6297  003D4E  20F4               	addwfc	prodh,w,c
  6298  003D50  6EDA               	movwf	fsr2h,c
  6299  003D52  0E10               	movlw	16
  6300  003D54  6EDF               	movwf	indf2,c
  6301                           
  6302                           ;sm_MenuConfiguration_MC50.c: 461:                menu_st.menuList[i].value_display2=i;
  6303  003D56  5023               	movf	load_New_Menu@i^0,w,c
  6304  003D58  0D02               	mullw	2
  6305  003D5A  0E52               	movlw	low (_menu_st+1)
  6306  003D5C  24F3               	addwf	243,w,c
  6307  003D5E  6ED9               	movwf	fsr2l,c
  6308  003D60  0E01               	movlw	high (_menu_st+1)
  6309  003D62  20F4               	addwfc	prodh,w,c
  6310  003D64  6EDA               	movwf	fsr2h,c
  6311  003D66  C023  FFDF         	movff	load_New_Menu@i,indf2
  6312                           
  6313                           ;sm_MenuConfiguration_MC50.c: 462:             }
  6314  003D6A  2A23               	incf	load_New_Menu@i^0,f,c
  6315  003D6C  0E09               	movlw	9
  6316  003D6E  6423               	cpfsgt	load_New_Menu@i^0,c
  6317  003D70  D7E8               	goto	l19823
  6318  003D72  D107               	goto	l19869
  6319  003D74                     l19829:
  6320                           
  6321                           ; BSR set to: 1
  6322                           ;sm_MenuConfiguration_MC50.c: 466:         {;sm_MenuConfiguration_MC50.c: 468:          
      +                             menu_st.actualMenu=E_Menu;
  6323  003D74  0E01               	movlw	1
  6324  003D76  6F66               	movwf	(_menu_st+21)& (0+255),b
  6325                           
  6326                           ;sm_MenuConfiguration_MC50.c: 469:             menu_st.menuSize=10;
  6327  003D78  0E0A               	movlw	10
  6328  003D7A  6F67               	movwf	(_menu_st+22)& (0+255),b
  6329                           
  6330                           ;sm_MenuConfiguration_MC50.c: 470:             menu_st.lastMainParameterSelected=0;
  6331  003D7C  0E00               	movlw	0
  6332  003D7E  6F69               	movwf	(_menu_st+24)& (0+255),b
  6333                           
  6334                           ;sm_MenuConfiguration_MC50.c: 471:             for (i=0;i<(10);i++)
  6335  003D80  0E00               	movlw	0
  6336  003D82  6E23               	movwf	load_New_Menu@i^0,c
  6337  003D84                     l19835:
  6338                           
  6339                           ;sm_MenuConfiguration_MC50.c: 472:             {;sm_MenuConfiguration_MC50.c: 473:      
      +                                    menu_st.menuList[i].value_display1=dE;
  6340  003D84  5023               	movf	load_New_Menu@i^0,w,c
  6341  003D86  0D02               	mullw	2
  6342  003D88  0E51               	movlw	low _menu_st
  6343  003D8A  24F3               	addwf	243,w,c
  6344  003D8C  6ED9               	movwf	fsr2l,c
  6345  003D8E  0E01               	movlw	high _menu_st
  6346  003D90  20F4               	addwfc	prodh,w,c
  6347  003D92  6EDA               	movwf	fsr2h,c
  6348  003D94  0E0E               	movlw	14
  6349  003D96  6EDF               	movwf	indf2,c
  6350                           
  6351                           ;sm_MenuConfiguration_MC50.c: 474:                menu_st.menuList[i].value_display2=i;
  6352  003D98  5023               	movf	load_New_Menu@i^0,w,c
  6353  003D9A  0D02               	mullw	2
  6354  003D9C  0E52               	movlw	low (_menu_st+1)
  6355  003D9E  24F3               	addwf	243,w,c
  6356  003DA0  6ED9               	movwf	fsr2l,c
  6357  003DA2  0E01               	movlw	high (_menu_st+1)
  6358  003DA4  20F4               	addwfc	prodh,w,c
  6359  003DA6  6EDA               	movwf	fsr2h,c
  6360  003DA8  C023  FFDF         	movff	load_New_Menu@i,indf2
  6361                           
  6362                           ;sm_MenuConfiguration_MC50.c: 475:             }
  6363  003DAC  2A23               	incf	load_New_Menu@i^0,f,c
  6364  003DAE  0E09               	movlw	9
  6365  003DB0  6423               	cpfsgt	load_New_Menu@i^0,c
  6366  003DB2  D7E8               	goto	l19835
  6367  003DB4  D0E6               	goto	l19869
  6368  003DB6                     l19841:
  6369                           
  6370                           ; BSR set to: 1
  6371                           ;sm_MenuConfiguration_MC50.c: 479:         {;sm_MenuConfiguration_MC50.c: 480:          
      +                             menu_st.lastMenu=P_Menu;
  6372  003DB6  0E00               	movlw	0
  6373  003DB8  6F65               	movwf	(_menu_st+20)& (0+255),b
  6374                           
  6375                           ;sm_MenuConfiguration_MC50.c: 481:             menu_st.actualMenu=P0_SMenu;
  6376  003DBA  0E04               	movlw	4
  6377  003DBC  6F66               	movwf	(_menu_st+21)& (0+255),b
  6378                           
  6379                           ;sm_MenuConfiguration_MC50.c: 482:             menu_st.menuSize=4;
  6380  003DBE  0E04               	movlw	4
  6381  003DC0  6F67               	movwf	(_menu_st+22)& (0+255),b
  6382                           
  6383                           ;sm_MenuConfiguration_MC50.c: 483:             menu_st.menuList[0].value_display1=dA;
  6384  003DC2  0E0A               	movlw	10
  6385  003DC4  6F51               	movwf	_menu_st& (0+255),b
  6386                           
  6387                           ;sm_MenuConfiguration_MC50.c: 484:             menu_st.menuList[0].value_display2=dU;
  6388  003DC6  0E13               	movlw	19
  6389  003DC8  6F52               	movwf	(_menu_st+1)& (0+255),b
  6390                           
  6391                           ;sm_MenuConfiguration_MC50.c: 485:             menu_st.menuList[1].value_display1=dM;
  6392  003DCA  0E17               	movlw	23
  6393  003DCC  6F53               	movwf	(_menu_st+2)& (0+255),b
  6394                           
  6395                           ;sm_MenuConfiguration_MC50.c: 486:             menu_st.menuList[1].value_display2=dA;
  6396  003DCE  0E0A               	movlw	10
  6397  003DD0  6F54               	movwf	(_menu_st+3)& (0+255),b
  6398                           
  6399                           ;sm_MenuConfiguration_MC50.c: 487:             menu_st.menuList[2].value_display1=d5;
  6400  003DD2  0E05               	movlw	5
  6401  003DD4  6F55               	movwf	(_menu_st+4)& (0+255),b
  6402                           
  6403                           ;sm_MenuConfiguration_MC50.c: 488:             menu_st.menuList[2].value_display2=dy;
  6404  003DD6  0E21               	movlw	33
  6405  003DD8  6F56               	movwf	(_menu_st+5)& (0+255),b
  6406                           
  6407                           ;sm_MenuConfiguration_MC50.c: 489:             menu_st.menuList[3].value_display1=dd;
  6408  003DDA  0E0D               	movlw	13
  6409  003DDC  6F57               	movwf	(_menu_st+6)& (0+255),b
  6410                           
  6411                           ;sm_MenuConfiguration_MC50.c: 490:             menu_st.menuList[3].value_display2=d1;
  6412  003DDE  0E01               	movlw	1
  6413  003DE0  D051               	goto	L31
  6414  003DE2                     l19843:
  6415                           
  6416                           ; BSR set to: 1
  6417                           ;sm_MenuConfiguration_MC50.c: 494:         {;sm_MenuConfiguration_MC50.c: 495:          
      +                             menu_st.lastMenu=P_Menu;
  6418  003DE2  0E00               	movlw	0
  6419  003DE4  6F65               	movwf	(_menu_st+20)& (0+255),b
  6420                           
  6421                           ;sm_MenuConfiguration_MC50.c: 496:             menu_st.actualMenu=P1_SMenu;
  6422  003DE6  0E05               	movlw	5
  6423  003DE8  6F66               	movwf	(_menu_st+21)& (0+255),b
  6424                           
  6425                           ;sm_MenuConfiguration_MC50.c: 497:             menu_st.menuSize=2;
  6426  003DEA  0E02               	movlw	2
  6427  003DEC  6F67               	movwf	(_menu_st+22)& (0+255),b
  6428                           
  6429                           ;sm_MenuConfiguration_MC50.c: 498:             menu_st.menuList[0].value_display1=dd;
  6430  003DEE  0E0D               	movlw	13
  6431  003DF0  6F51               	movwf	_menu_st& (0+255),b
  6432                           
  6433                           ;sm_MenuConfiguration_MC50.c: 499:             menu_st.menuList[0].value_display2=dA;
  6434  003DF2  0E0A               	movlw	10
  6435  003DF4  6F52               	movwf	(_menu_st+1)& (0+255),b
  6436                           
  6437                           ;sm_MenuConfiguration_MC50.c: 500:             menu_st.menuList[1].value_display1=dd;
  6438  003DF6  0E0D               	movlw	13
  6439  003DF8  6F53               	movwf	(_menu_st+2)& (0+255),b
  6440                           
  6441                           ;sm_MenuConfiguration_MC50.c: 501:             menu_st.menuList[1].value_display2=dF;
  6442  003DFA  0E0F               	movlw	15
  6443  003DFC  D08E               	goto	L38
  6444  003DFE                     l19845:
  6445                           
  6446                           ; BSR set to: 1
  6447                           ;sm_MenuConfiguration_MC50.c: 508:         {;sm_MenuConfiguration_MC50.c: 509:          
      +                             menu_st.lastMenu=P_Menu;
  6448  003DFE  0E00               	movlw	0
  6449  003E00  6F65               	movwf	(_menu_st+20)& (0+255),b
  6450                           
  6451                           ;sm_MenuConfiguration_MC50.c: 510:             menu_st.actualMenu=P2_SMenu;
  6452  003E02  0E06               	movlw	6
  6453  003E04  6F66               	movwf	(_menu_st+21)& (0+255),b
  6454                           
  6455                           ;sm_MenuConfiguration_MC50.c: 511:             menu_st.menuSize=3;
  6456  003E06  0E03               	movlw	3
  6457  003E08  6F67               	movwf	(_menu_st+22)& (0+255),b
  6458                           
  6459                           ;sm_MenuConfiguration_MC50.c: 512:             menu_st.menuList[0].value_display1=dF;
  6460  003E0A  0E0F               	movlw	15
  6461  003E0C  6F51               	movwf	_menu_st& (0+255),b
  6462                           
  6463                           ;sm_MenuConfiguration_MC50.c: 513:             menu_st.menuList[0].value_display2=d0;
  6464  003E0E  0E00               	movlw	0
  6465  003E10  6F52               	movwf	(_menu_st+1)& (0+255),b
  6466                           
  6467                           ;sm_MenuConfiguration_MC50.c: 514:             menu_st.menuList[1].value_display1=dF;
  6468  003E12  0E0F               	movlw	15
  6469  003E14  6F53               	movwf	(_menu_st+2)& (0+255),b
  6470                           
  6471                           ;sm_MenuConfiguration_MC50.c: 515:             menu_st.menuList[1].value_display2=d5;
  6472  003E16  0E05               	movlw	5
  6473  003E18  6F54               	movwf	(_menu_st+3)& (0+255),b
  6474                           
  6475                           ;sm_MenuConfiguration_MC50.c: 516:             menu_st.menuList[2].value_display1=dF;
  6476  003E1A  0E0F               	movlw	15
  6477  003E1C  6F55               	movwf	(_menu_st+4)& (0+255),b
  6478                           
  6479                           ;sm_MenuConfiguration_MC50.c: 517:             menu_st.menuList[2].value_display2=dd;
  6480  003E1E  0E0D               	movlw	13
  6481  003E20  D073               	goto	L33
  6482  003E22                     l19847:
  6483                           
  6484                           ; BSR set to: 1
  6485                           ;sm_MenuConfiguration_MC50.c: 521:         {;sm_MenuConfiguration_MC50.c: 522:          
      +                             menu_st.lastMenu=P_Menu;
  6486  003E22  0E00               	movlw	0
  6487  003E24  6F65               	movwf	(_menu_st+20)& (0+255),b
  6488                           
  6489                           ;sm_MenuConfiguration_MC50.c: 523:             menu_st.actualMenu=P4_SMenu;
  6490  003E26  0E07               	movlw	7
  6491  003E28  6F66               	movwf	(_menu_st+21)& (0+255),b
  6492                           
  6493                           ;sm_MenuConfiguration_MC50.c: 524:             menu_st.menuSize=2;
  6494  003E2A  0E02               	movlw	2
  6495  003E2C  6F67               	movwf	(_menu_st+22)& (0+255),b
  6496                           
  6497                           ;sm_MenuConfiguration_MC50.c: 525:             menu_st.menuList[0].value_display1=dA;
  6498  003E2E  0E0A               	movlw	10
  6499  003E30  6F51               	movwf	_menu_st& (0+255),b
  6500                           
  6501                           ;sm_MenuConfiguration_MC50.c: 526:             menu_st.menuList[0].value_display2=dF;
  6502  003E32  0E0F               	movlw	15
  6503  003E34  6F52               	movwf	(_menu_st+1)& (0+255),b
  6504                           
  6505                           ;sm_MenuConfiguration_MC50.c: 527:             menu_st.menuList[1].value_display1=dA;
  6506  003E36  0E0A               	movlw	10
  6507  003E38  6F53               	movwf	(_menu_st+2)& (0+255),b
  6508                           
  6509                           ;sm_MenuConfiguration_MC50.c: 528:             menu_st.menuList[1].value_display2=dP;
  6510  003E3A  0E10               	movlw	16
  6511  003E3C  D06E               	goto	L38
  6512  003E3E                     l19849:
  6513                           
  6514                           ; BSR set to: 1
  6515                           ;sm_MenuConfiguration_MC50.c: 532:         {;sm_MenuConfiguration_MC50.c: 533:          
      +                             menu_st.lastMenu=P_Menu;
  6516  003E3E  0E00               	movlw	0
  6517  003E40  6F65               	movwf	(_menu_st+20)& (0+255),b
  6518                           
  6519                           ;sm_MenuConfiguration_MC50.c: 534:             menu_st.actualMenu=P5_SMenu;
  6520  003E42  0E08               	movlw	8
  6521  003E44  6F66               	movwf	(_menu_st+21)& (0+255),b
  6522                           
  6523                           ;sm_MenuConfiguration_MC50.c: 535:             menu_st.menuSize=2;
  6524  003E46  0E02               	movlw	2
  6525  003E48  6F67               	movwf	(_menu_st+22)& (0+255),b
  6526                           
  6527                           ;sm_MenuConfiguration_MC50.c: 536:             menu_st.menuList[0].value_display1=dL;
  6528  003E4A  0E12               	movlw	18
  6529  003E4C  6F51               	movwf	_menu_st& (0+255),b
  6530                           
  6531                           ;sm_MenuConfiguration_MC50.c: 537:             menu_st.menuList[0].value_display2=dE;
  6532  003E4E  0E0E               	movlw	14
  6533  003E50  6F52               	movwf	(_menu_st+1)& (0+255),b
  6534                           
  6535                           ;sm_MenuConfiguration_MC50.c: 538:             menu_st.menuList[1].value_display1=dH;
  6536  003E52  0E11               	movlw	17
  6537  003E54  6F53               	movwf	(_menu_st+2)& (0+255),b
  6538                           
  6539                           ;sm_MenuConfiguration_MC50.c: 539:             menu_st.menuList[1].value_display2=dC;
  6540  003E56  0E0C               	movlw	12
  6541  003E58  D060               	goto	L38
  6542  003E5A                     l19851:
  6543                           
  6544                           ; BSR set to: 1
  6545                           ;sm_MenuConfiguration_MC50.c: 543:         {;sm_MenuConfiguration_MC50.c: 544:          
      +                             menu_st.lastMenu=P_Menu;
  6546  003E5A  0E00               	movlw	0
  6547  003E5C  6F65               	movwf	(_menu_st+20)& (0+255),b
  6548                           
  6549                           ;sm_MenuConfiguration_MC50.c: 545:             menu_st.actualMenu=P6_SMenu;
  6550  003E5E  0E09               	movlw	9
  6551  003E60  6F66               	movwf	(_menu_st+21)& (0+255),b
  6552                           
  6553                           ;sm_MenuConfiguration_MC50.c: 546:             menu_st.menuSize=4;
  6554  003E62  0E04               	movlw	4
  6555  003E64  6F67               	movwf	(_menu_st+22)& (0+255),b
  6556                           
  6557                           ;sm_MenuConfiguration_MC50.c: 547:             menu_st.menuList[0].value_display1=dL;
  6558  003E66  0E12               	movlw	18
  6559  003E68  6F51               	movwf	_menu_st& (0+255),b
  6560                           
  6561                           ;sm_MenuConfiguration_MC50.c: 548:             menu_st.menuList[0].value_display2=dA;
  6562  003E6A  0E0A               	movlw	10
  6563  003E6C  6F52               	movwf	(_menu_st+1)& (0+255),b
  6564                           
  6565                           ;sm_MenuConfiguration_MC50.c: 549:             menu_st.menuList[1].value_display1=dH;
  6566  003E6E  0E11               	movlw	17
  6567  003E70  6F53               	movwf	(_menu_st+2)& (0+255),b
  6568                           
  6569                           ;sm_MenuConfiguration_MC50.c: 550:             menu_st.menuList[1].value_display2=dA;
  6570  003E72  0E0A               	movlw	10
  6571  003E74  6F54               	movwf	(_menu_st+3)& (0+255),b
  6572                           
  6573                           ;sm_MenuConfiguration_MC50.c: 551:             menu_st.menuList[2].value_display1=dH;
  6574  003E76  0E11               	movlw	17
  6575  003E78  6F55               	movwf	(_menu_st+4)& (0+255),b
  6576                           
  6577                           ;sm_MenuConfiguration_MC50.c: 552:             menu_st.menuList[2].value_display2=dL;
  6578  003E7A  0E12               	movlw	18
  6579  003E7C  6F56               	movwf	(_menu_st+5)& (0+255),b
  6580                           
  6581                           ;sm_MenuConfiguration_MC50.c: 553:             menu_st.menuList[3].value_display1=d5;
  6582  003E7E  0E05               	movlw	5
  6583  003E80  6F57               	movwf	(_menu_st+6)& (0+255),b
  6584                           
  6585                           ;sm_MenuConfiguration_MC50.c: 554:             menu_st.menuList[3].value_display2=dt;
  6586  003E82  0E15               	movlw	21
  6587  003E84                     L31:
  6588  003E84  6F58               	movwf	(_menu_st+7)& (0+255),b
  6589                           
  6590                           ;sm_MenuConfiguration_MC50.c: 556:         };sm_MenuConfiguration_MC50.c: 557:         b
      +                          reak;
  6591  003E86  D07D               	goto	l19869
  6592  003E88                     l19853:
  6593                           
  6594                           ; BSR set to: 1
  6595                           ;sm_MenuConfiguration_MC50.c: 559:         {;sm_MenuConfiguration_MC50.c: 560:          
      +                             menu_st.lastMenu=E_Menu;
  6596  003E88  0E01               	movlw	1
  6597  003E8A  6F65               	movwf	(_menu_st+20)& (0+255),b
  6598                           
  6599                           ;sm_MenuConfiguration_MC50.c: 561:             menu_st.actualMenu=E0_SMenu;
  6600  003E8C  0E0A               	movlw	10
  6601  003E8E  6F66               	movwf	(_menu_st+21)& (0+255),b
  6602                           
  6603                           ;sm_MenuConfiguration_MC50.c: 562:             menu_st.menuSize=2;
  6604  003E90  0E02               	movlw	2
  6605  003E92  6F67               	movwf	(_menu_st+22)& (0+255),b
  6606                           
  6607                           ;sm_MenuConfiguration_MC50.c: 563:             menu_st.menuList[0].value_display1=dH;
  6608  003E94  0E11               	movlw	17
  6609  003E96  6F51               	movwf	_menu_st& (0+255),b
  6610                           
  6611                           ;sm_MenuConfiguration_MC50.c: 564:             menu_st.menuList[0].value_display2=dP;
  6612  003E98  0E10               	movlw	16
  6613  003E9A  6F52               	movwf	(_menu_st+1)& (0+255),b
  6614                           
  6615                           ;sm_MenuConfiguration_MC50.c: 565:             menu_st.menuList[1].value_display1=dP;
  6616  003E9C  0E10               	movlw	16
  6617  003E9E  6F53               	movwf	(_menu_st+2)& (0+255),b
  6618                           
  6619                           ;sm_MenuConfiguration_MC50.c: 566:             menu_st.menuList[1].value_display2=dL;
  6620  003EA0  0E12               	movlw	18
  6621  003EA2  D03B               	goto	L38
  6622  003EA4                     l19855:
  6623                           
  6624                           ; BSR set to: 1
  6625                           ;sm_MenuConfiguration_MC50.c: 570:         {;sm_MenuConfiguration_MC50.c: 571:          
      +                             menu_st.lastMenu=E_Menu;
  6626  003EA4  0E01               	movlw	1
  6627  003EA6  6F65               	movwf	(_menu_st+20)& (0+255),b
  6628                           
  6629                           ;sm_MenuConfiguration_MC50.c: 572:             menu_st.actualMenu=E1_SMenu;
  6630  003EA8  0E0B               	movlw	11
  6631  003EAA  6F66               	movwf	(_menu_st+21)& (0+255),b
  6632                           
  6633                           ;sm_MenuConfiguration_MC50.c: 573:             menu_st.menuSize=2;
  6634  003EAC  0E02               	movlw	2
  6635  003EAE  6F67               	movwf	(_menu_st+22)& (0+255),b
  6636                           
  6637                           ;sm_MenuConfiguration_MC50.c: 574:             menu_st.menuList[0].value_display1=dr;
  6638  003EB0  0E14               	movlw	20
  6639  003EB2  6F51               	movwf	_menu_st& (0+255),b
  6640                           
  6641                           ;sm_MenuConfiguration_MC50.c: 575:             menu_st.menuList[0].value_display2=dq;
  6642  003EB4  0E24               	movlw	36
  6643  003EB6  6F52               	movwf	(_menu_st+1)& (0+255),b
  6644                           
  6645                           ;sm_MenuConfiguration_MC50.c: 576:             menu_st.menuList[1].value_display1=dr;
  6646  003EB8  0E14               	movlw	20
  6647  003EBA  6F53               	movwf	(_menu_st+2)& (0+255),b
  6648                           
  6649                           ;sm_MenuConfiguration_MC50.c: 577:             menu_st.menuList[1].value_display2=dc;
  6650  003EBC  0E23               	movlw	35
  6651  003EBE  D02D               	goto	L38
  6652  003EC0                     l19857:
  6653                           
  6654                           ; BSR set to: 1
  6655                           ;sm_MenuConfiguration_MC50.c: 581:         {;sm_MenuConfiguration_MC50.c: 583:          
      +                             menu_st.actualMenu=S_Menu;
  6656  003EC0  0E0C               	movlw	12
  6657  003EC2  6F66               	movwf	(_menu_st+21)& (0+255),b
  6658                           
  6659                           ;sm_MenuConfiguration_MC50.c: 584:             menu_st.parameterSelected=0;
  6660  003EC4  0E00               	movlw	0
  6661  003EC6  6F68               	movwf	(_menu_st+23)& (0+255),b
  6662                           
  6663                           ;sm_MenuConfiguration_MC50.c: 585:             menu_st.menuSize=2;
  6664  003EC8  0E02               	movlw	2
  6665  003ECA  6F67               	movwf	(_menu_st+22)& (0+255),b
  6666                           
  6667                           ;sm_MenuConfiguration_MC50.c: 586:             menu_st.menuList[0].value_display1=d5;
  6668  003ECC  0E05               	movlw	5
  6669  003ECE  6F51               	movwf	_menu_st& (0+255),b
  6670                           
  6671                           ;sm_MenuConfiguration_MC50.c: 587:             menu_st.menuList[0].value_display2=dU;
  6672  003ED0  0E13               	movlw	19
  6673  003ED2  6F52               	movwf	(_menu_st+1)& (0+255),b
  6674                           
  6675                           ;sm_MenuConfiguration_MC50.c: 588:             menu_st.menuList[1].value_display1=d5;
  6676  003ED4  0E05               	movlw	5
  6677  003ED6  D7B0               	goto	L39
  6678  003ED8                     l19859:
  6679                           
  6680                           ; BSR set to: 1
  6681                           ;sm_MenuConfiguration_MC50.c: 593:         {;sm_MenuConfiguration_MC50.c: 595:          
      +                             menu_st.actualMenu=Del_Menu;
  6682  003ED8  0E0D               	movlw	13
  6683  003EDA  6F66               	movwf	(_menu_st+21)& (0+255),b
  6684                           
  6685                           ;sm_MenuConfiguration_MC50.c: 596:             menu_st.menuSize=1;
  6686  003EDC  0E01               	movlw	1
  6687  003EDE  6F67               	movwf	(_menu_st+22)& (0+255),b
  6688                           
  6689                           ;sm_MenuConfiguration_MC50.c: 597:             menu_st.menuList[0].value_display1=dd;
  6690  003EE0  0E0D               	movlw	13
  6691  003EE2  6F51               	movwf	_menu_st& (0+255),b
  6692                           
  6693                           ;sm_MenuConfiguration_MC50.c: 598:             menu_st.menuList[0].value_display2=dL;
  6694  003EE4  0E12               	movlw	18
  6695  003EE6  6F52               	movwf	(_menu_st+1)& (0+255),b
  6696                           
  6697                           ;sm_MenuConfiguration_MC50.c: 599:             ts_system.timeSinalizationDigit=(1000/50)
      +                          *3;
  6698  003EE8  0E00               	movlw	0
  6699  003EEA  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
  6700  003EEC  0E3C               	movlw	60
  6701  003EEE  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
  6702                           
  6703                           ;sm_MenuConfiguration_MC50.c: 600:         };sm_MenuConfiguration_MC50.c: 601:         b
      +                          reak;
  6704  003EF0  D048               	goto	l19869
  6705  003EF2                     l19861:
  6706                           
  6707                           ; BSR set to: 1
  6708                           ;sm_MenuConfiguration_MC50.c: 604:         {;sm_MenuConfiguration_MC50.c: 608:          
      +                             menu_st.menuList[0].value_display1=d5;
  6709  003EF2  0E05               	movlw	5
  6710  003EF4  6F51               	movwf	_menu_st& (0+255),b
  6711                           
  6712                           ;sm_MenuConfiguration_MC50.c: 609:             menu_st.menuList[0].value_display2=dC;
  6713  003EF6  0E0C               	movlw	12
  6714  003EF8  6F52               	movwf	(_menu_st+1)& (0+255),b
  6715                           
  6716                           ;sm_MenuConfiguration_MC50.c: 610:             menu_st.menuList[1].value_display1=d5;
  6717  003EFA  0E05               	movlw	5
  6718  003EFC  6F53               	movwf	(_menu_st+2)& (0+255),b
  6719                           
  6720                           ;sm_MenuConfiguration_MC50.c: 611:             menu_st.menuList[1].value_display2=dE;
  6721  003EFE  0E0E               	movlw	14
  6722  003F00  6F54               	movwf	(_menu_st+3)& (0+255),b
  6723                           
  6724                           ;sm_MenuConfiguration_MC50.c: 612:             menu_st.menuList[2].value_display1=db;
  6725  003F02  0E22               	movlw	34
  6726  003F04  6F55               	movwf	(_menu_st+4)& (0+255),b
  6727                           
  6728                           ;sm_MenuConfiguration_MC50.c: 613:             menu_st.menuList[2].value_display2=dr;
  6729  003F06  0E14               	movlw	20
  6730  003F08                     L33:
  6731  003F08  6F56               	movwf	(_menu_st+5)& (0+255),b
  6732                           
  6733                           ;sm_MenuConfiguration_MC50.c: 614:         };sm_MenuConfiguration_MC50.c: 615:         b
      +                          reak;
  6734  003F0A  D03B               	goto	l19869
  6735  003F0C                     l19863:
  6736                           
  6737                           ; BSR set to: 1
  6738                           ;sm_MenuConfiguration_MC50.c: 617:         {;sm_MenuConfiguration_MC50.c: 621:          
      +                             menu_st.menuList[0].value_display1=dL;
  6739  003F0C  0E12               	movlw	18
  6740  003F0E  6F51               	movwf	_menu_st& (0+255),b
  6741                           
  6742                           ;sm_MenuConfiguration_MC50.c: 622:             menu_st.menuList[0].value_display2=dE;
  6743  003F10  0E0E               	movlw	14
  6744  003F12  6F52               	movwf	(_menu_st+1)& (0+255),b
  6745                           
  6746                           ;sm_MenuConfiguration_MC50.c: 623:             menu_st.menuList[1].value_display1=dr;
  6747  003F14  0E14               	movlw	20
  6748  003F16  6F53               	movwf	(_menu_st+2)& (0+255),b
  6749                           
  6750                           ;sm_MenuConfiguration_MC50.c: 624:             menu_st.menuList[1].value_display2=dt;
  6751  003F18  0E15               	movlw	21
  6752  003F1A                     L38:
  6753  003F1A  6F54               	movwf	(_menu_st+3)& (0+255),b
  6754                           
  6755                           ;sm_MenuConfiguration_MC50.c: 626:         };sm_MenuConfiguration_MC50.c: 627:         b
      +                          reak;
  6756  003F1C  D032               	goto	l19869
  6757  003F1E                     l19867:
  6758                           
  6759                           ; BSR set to: 1
  6760  003F1E  5022               	movf	load_New_Menu@Menu^0,w,c
  6761  003F20  6E20               	movwf	??_load_New_Menu^0,c
  6762  003F22  6A21               	clrf	(??_load_New_Menu+1)^0,c
  6763                           
  6764                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6765                           ; Switch size 1, requested type "simple"
  6766                           ; Number of cases is 1, Range of values is 0 to 0
  6767                           ; switch strategies available:
  6768                           ; Name         Instructions Cycles
  6769                           ; simple_byte            4     3 (average)
  6770                           ;	Chosen strategy is simple_byte
  6771  003F24  5021               	movf	(??_load_New_Menu+1)^0,w,c
  6772  003F26  0A00               	xorlw	0	; case 0
  6773  003F28  A4D8               	btfss	status,2,c
  6774  003F2A  D02B               	goto	l19869
  6775                           
  6776                           ; BSR set to: 1
  6777                           ; Switch size 1, requested type "simple"
  6778                           ; Number of cases is 14, Range of values is 0 to 13
  6779                           ; switch strategies available:
  6780                           ; Name         Instructions Cycles
  6781                           ; simple_byte           43    22 (average)
  6782                           ;	Chosen strategy is simple_byte
  6783  003F2C  5020               	movf	??_load_New_Menu^0,w,c
  6784  003F2E  0A00               	xorlw	0	; case 0
  6785  003F30  B4D8               	btfsc	status,2,c
  6786  003F32  D6FF               	goto	l19817
  6787  003F34  0A01               	xorlw	1	; case 1
  6788  003F36  B4D8               	btfsc	status,2,c
  6789  003F38  D71D               	goto	l19829
  6790  003F3A  0A03               	xorlw	3	; case 2
  6791  003F3C  B4D8               	btfsc	status,2,c
  6792  003F3E  D7E6               	goto	l19863
  6793  003F40  0A01               	xorlw	1	; case 3
  6794  003F42  B4D8               	btfsc	status,2,c
  6795  003F44  D7D6               	goto	l19861
  6796  003F46  0A07               	xorlw	7	; case 4
  6797  003F48  B4D8               	btfsc	status,2,c
  6798  003F4A  D735               	goto	l19841
  6799  003F4C  0A01               	xorlw	1	; case 5
  6800  003F4E  B4D8               	btfsc	status,2,c
  6801  003F50  D748               	goto	l19843
  6802  003F52  0A03               	xorlw	3	; case 6
  6803  003F54  B4D8               	btfsc	status,2,c
  6804  003F56  D753               	goto	l19845
  6805  003F58  0A01               	xorlw	1	; case 7
  6806  003F5A  B4D8               	btfsc	status,2,c
  6807  003F5C  D762               	goto	l19847
  6808  003F5E  0A0F               	xorlw	15	; case 8
  6809  003F60  B4D8               	btfsc	status,2,c
  6810  003F62  D76D               	goto	l19849
  6811  003F64  0A01               	xorlw	1	; case 9
  6812  003F66  B4D8               	btfsc	status,2,c
  6813  003F68  D778               	goto	l19851
  6814  003F6A  0A03               	xorlw	3	; case 10
  6815  003F6C  B4D8               	btfsc	status,2,c
  6816  003F6E  D78C               	goto	l19853
  6817  003F70  0A01               	xorlw	1	; case 11
  6818  003F72  B4D8               	btfsc	status,2,c
  6819  003F74  D797               	goto	l19855
  6820  003F76  0A07               	xorlw	7	; case 12
  6821  003F78  B4D8               	btfsc	status,2,c
  6822  003F7A  D7A2               	goto	l19857
  6823  003F7C  0A01               	xorlw	1	; case 13
  6824  003F7E  B4D8               	btfsc	status,2,c
  6825  003F80  D7AB               	goto	l19859
  6826  003F82                     l19869:
  6827                           
  6828                           ;sm_MenuConfiguration_MC50.c: 632:     if(menu_st.parameterSelected>=menu_st.menuSize)
  6829  003F82  0101               	movlb	1	; () banked
  6830  003F84  5167               	movf	(_menu_st+22)& (0+255),w,b
  6831  003F86  5D68               	subwf	(_menu_st+23)& (0+255),w,b
  6832  003F88  A0D8               	btfss	status,0,c
  6833  003F8A  D002               	goto	l19873
  6834                           
  6835                           ; BSR set to: 1
  6836                           ;sm_MenuConfiguration_MC50.c: 633:     {;sm_MenuConfiguration_MC50.c: 634:         menu_
      +                          st.parameterSelected=0;
  6837  003F8C  0E00               	movlw	0
  6838  003F8E  6F68               	movwf	(_menu_st+23)& (0+255),b
  6839  003F90                     l19873:
  6840                           
  6841                           ; BSR set to: 1
  6842                           ;sm_MenuConfiguration_MC50.c: 637:     if(Menu==Del_Menu)
  6843  003F90  0E0D               	movlw	13
  6844  003F92  1822               	xorwf	load_New_Menu@Menu^0,w,c
  6845  003F94  A4D8               	btfss	status,2,c
  6846  003F96  D01A               	goto	l19877
  6847                           
  6848                           ; BSR set to: 1
  6849                           ;sm_MenuConfiguration_MC50.c: 638:     {;sm_MenuConfiguration_MC50.c: 639:         SetSe
      +                          gmentValueIntermitentMain(menu_st.menuList[ menu_st.parameterSelected].value_display1, m
      +                          enu_st.menuList[ menu_st.parameterSelected].value_display2,( 500/50));
  6850  003F98  5168               	movf	(_menu_st+23)& (0+255),w,b
  6851  003F9A  0D02               	mullw	2
  6852  003F9C  0E52               	movlw	low (_menu_st+1)
  6853  003F9E  24F3               	addwf	243,w,c
  6854  003FA0  6ED9               	movwf	fsr2l,c
  6855  003FA2  0E01               	movlw	high (_menu_st+1)
  6856  003FA4  20F4               	addwfc	prodh,w,c
  6857  003FA6  6EDA               	movwf	fsr2h,c
  6858  003FA8  50DF               	movf	indf2,w,c
  6859  003FAA  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  6860  003FAC  0E00               	movlw	0
  6861  003FAE  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  6862  003FB0  0E0A               	movlw	10
  6863  003FB2  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  6864  003FB4  5168               	movf	(_menu_st+23)& (0+255),w,b
  6865  003FB6  0D02               	mullw	2
  6866  003FB8  0E51               	movlw	low _menu_st
  6867  003FBA  24F3               	addwf	243,w,c
  6868  003FBC  6ED9               	movwf	fsr2l,c
  6869  003FBE  0E01               	movlw	high _menu_st
  6870  003FC0  20F4               	addwfc	prodh,w,c
  6871  003FC2  6EDA               	movwf	fsr2h,c
  6872  003FC4  50DF               	movf	indf2,w,c
  6873  003FC6  EC7D  F048         	call	_SetSegmentValueIntermitentMain
  6874                           
  6875                           ;sm_MenuConfiguration_MC50.c: 640:     }
  6876  003FCA  0012               	return	
  6877  003FCC                     l19877:
  6878                           
  6879                           ; BSR set to: 1
  6880                           ;sm_MenuConfiguration_MC50.c: 642:     {;sm_MenuConfiguration_MC50.c: 643:         SetSe
      +                          gmentValueMain(menu_st.menuList[ menu_st.parameterSelected].value_display1, menu_st.menu
      +                          List[ menu_st.parameterSelected].value_display2);
  6881  003FCC  5168               	movf	(_menu_st+23)& (0+255),w,b
  6882  003FCE  0D02               	mullw	2
  6883  003FD0  0E52               	movlw	low (_menu_st+1)
  6884  003FD2  24F3               	addwf	243,w,c
  6885  003FD4  6ED9               	movwf	fsr2l,c
  6886  003FD6  0E01               	movlw	high (_menu_st+1)
  6887  003FD8  20F4               	addwfc	prodh,w,c
  6888  003FDA  6EDA               	movwf	fsr2h,c
  6889  003FDC  50DF               	movf	indf2,w,c
  6890  003FDE  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  6891  003FE0  5168               	movf	(_menu_st+23)& (0+255),w,b
  6892  003FE2  0D02               	mullw	2
  6893  003FE4  0E51               	movlw	low _menu_st
  6894  003FE6  24F3               	addwf	243,w,c
  6895  003FE8  6ED9               	movwf	fsr2l,c
  6896  003FEA  0E01               	movlw	high _menu_st
  6897  003FEC  20F4               	addwfc	prodh,w,c
  6898  003FEE  6EDA               	movwf	fsr2h,c
  6899  003FF0  50DF               	movf	indf2,w,c
  6900  003FF2  ECE1  F047         	call	_SetSegmentValueMain
  6901  003FF6  0012               	return		;funcret
  6902  003FF8                     __end_of_load_New_Menu:
  6903                           	callstack 0
  6904                           
  6905 ;; *************** function _InitReceiver *****************
  6906 ;; Defined at:
  6907 ;;		line 207 in file "inputs_MC50.c"
  6908 ;; Parameters:    Size  Location     Type
  6909 ;;		None
  6910 ;; Auto vars:     Size  Location     Type
  6911 ;;		None
  6912 ;; Return value:  Size  Location     Type
  6913 ;;                  1    wreg      void 
  6914 ;; Registers used:
  6915 ;;		wreg, status,2
  6916 ;; Tracked objects:
  6917 ;;		On entry : 30/F
  6918 ;;		On exit  : 3F/0
  6919 ;;		Unchanged: 0/0
  6920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6924 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6925 ;;Total ram usage:        0 bytes
  6926 ;; Hardware stack levels used: 1
  6927 ;; Hardware stack levels required when called: 4
  6928 ;; This function calls:
  6929 ;;		Nothing
  6930 ;; This function is called by:
  6931 ;;		_main
  6932 ;;		_setValueToEdit
  6933 ;; This function uses a non-reentrant model
  6934 ;;
  6935                           
  6936                           	psect	text5
  6937  008FA8                     __ptext5:
  6938                           	callstack 0
  6939  008FA8                     _InitReceiver:
  6940                           	callstack 23
  6941                           
  6942                           ;inputs_MC50.c: 208:     TMR0IF = 0;
  6943                           
  6944                           ;incstack = 0
  6945  008FA8  010E               	movlb	14	; () banked
  6946  008FAA  9BCA               	bcf	202,5,b	;volatile
  6947                           
  6948                           ;inputs_MC50.c: 209:     TMR0IE = 1;
  6949  008FAC  8BC2               	bsf	194,5,b	;volatile
  6950                           
  6951                           ;inputs_MC50.c: 210:     GIE = 1;
  6952  008FAE  8EF2               	bsf	4082,7,c	;volatile
  6953                           
  6954                           ; BSR set to: 14
  6955                           ;inputs_MC50.c: 211:     RFstate = 0;
  6956  008FB0  0E00               	movlw	0
  6957  008FB2  0101               	movlb	1	; () banked
  6958  008FB4  6F98               	movwf	_RFstate& (0+255),b
  6959                           
  6960                           ;inputs_MC50.c: 212:     RFFull_12BIT=0;
  6961  008FB6  0E00               	movlw	0
  6962  008FB8  0100               	movlb	0	; () banked
  6963  008FBA  6F8A               	movwf	_RFFull_12BIT& (0+255),b	;volatile
  6964                           
  6965                           ;inputs_MC50.c: 213:     RFFull = 0;
  6966  008FBC  0E00               	movlw	0
  6967  008FBE  6F8B               	movwf	_RFFull& (0+255),b	;volatile
  6968                           
  6969                           ; BSR set to: 0
  6970  008FC0  0012               	return		;funcret
  6971  008FC2                     __end_of_InitReceiver:
  6972                           	callstack 0
  6973                           
  6974 ;; *************** function _controlSelectRemote *****************
  6975 ;; Defined at:
  6976 ;;		line 1098 in file "sm_MenuConfiguration_MC50.c"
  6977 ;; Parameters:    Size  Location     Type
  6978 ;;		None
  6979 ;; Auto vars:     Size  Location     Type
  6980 ;;  typeRemote      1   11[BANK0 ] enum E10392
  6981 ;;  pos             1   10[BANK0 ] unsigned char 
  6982 ;;  tempSerial      4   12[BANK0 ] unsigned long 
  6983 ;;  temp            1   16[BANK0 ] unsigned char 
  6984 ;;  validSerial     1    9[BANK0 ] unsigned char 
  6985 ;; Return value:  Size  Location     Type
  6986 ;;                  1    wreg      void 
  6987 ;; Registers used:
  6988 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6989 ;; Tracked objects:
  6990 ;;		On entry : 3F/1
  6991 ;;		On exit  : 0/0
  6992 ;;		Unchanged: 0/0
  6993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6995 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6996 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6997 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6998 ;;Total ram usage:        9 bytes
  6999 ;; Hardware stack levels used: 1
  7000 ;; Hardware stack levels required when called: 14
  7001 ;; This function calls:
  7002 ;;		_ClearFlag_rfCMD
  7003 ;;		_RemoveSerial
  7004 ;;		_SaveNVM_VarSystem
  7005 ;;		_SetSegmentValue
  7006 ;;		_SetSegmentValueIntermitentMain
  7007 ;;		_SetSegmentValueMain
  7008 ;;		___awdiv
  7009 ;;		___lbmod
  7010 ;;		_cmdMemoryIsEmpty
  7011 ;;		_getSerialCmd
  7012 ;;		_getTypeRemote
  7013 ;;		_saveNewSerial
  7014 ;;		_sm_send_event
  7015 ;;		_validateRemoteSerialNumber
  7016 ;; This function is called by:
  7017 ;;		_sm_execute_menuConfiguration
  7018 ;; This function uses a non-reentrant model
  7019 ;;
  7020                           
  7021                           	psect	text6
  7022  0032D4                     __ptext6:
  7023                           	callstack 0
  7024  0032D4                     _controlSelectRemote:
  7025                           	callstack 14
  7026                           
  7027                           ; BSR set to: 1
  7028                           ;sm_MenuConfiguration_MC50.c: 1099:     unsigned long tempSerial;;sm_MenuConfiguration_M
      +                          C50.c: 1100:     char temp=getSerialCmd(&tempSerial);
  7029                           
  7030                           ; BSR set to: 0
  7031                           ;incstack = 0
  7032  0032D4  0EE4               	movlw	low controlSelectRemote@tempSerial
  7033  0032D6  6E1B               	movwf	getSerialCmd@serial^0,c
  7034  0032D8  EC30  F043         	call	_getSerialCmd	;wreg free
  7035  0032DC  0100               	movlb	0	; () banked
  7036  0032DE  6FE8               	movwf	controlSelectRemote@temp& (0+255),b
  7037                           
  7038                           ; BSR set to: 0
  7039                           ;sm_MenuConfiguration_MC50.c: 1101:     char validSerial;;sm_MenuConfiguration_MC50.c: 1
      +                          102:     if(ts_system.timeoutMenu<=0 || button_struct.current==0x00)
  7040  0032E0  0101               	movlb	1	; () banked
  7041  0032E2  BFA9               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  7042  0032E4  D008               	goto	u23920
  7043  0032E6  51A9               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  7044  0032E8  E103               	bnz	u23910
  7045  0032EA  05A8               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  7046  0032EC  A0D8               	btfss	status,0,c
  7047  0032EE  D003               	goto	u23920
  7048  0032F0                     u23910:
  7049                           
  7050                           ; BSR set to: 1
  7051  0032F0  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  7052  0032F2  A4D8               	btfss	status,2,c
  7053  0032F4  D028               	goto	l20947
  7054  0032F6                     u23920:
  7055                           
  7056                           ; BSR set to: 1
  7057                           ;sm_MenuConfiguration_MC50.c: 1103:     {;sm_MenuConfiguration_MC50.c: 1104:         sm_
      +                          send_event(&main_stateMachine, ev_goto_StandBy);
  7058  0032F6  0EED               	movlw	low _main_stateMachine
  7059  0032F8  6E12               	movwf	sm_send_event@psm^0,c
  7060  0032FA  0E01               	movlw	high _main_stateMachine
  7061  0032FC  6E13               	movwf	(sm_send_event@psm+1)^0,c
  7062  0032FE  0E00               	movlw	0
  7063  003300  6E15               	movwf	(sm_send_event@event+1)^0,c
  7064  003302  0E07               	movlw	7
  7065  003304  6E14               	movwf	sm_send_event@event^0,c
  7066  003306  EC29  F041         	call	_sm_send_event	;wreg free
  7067                           
  7068                           ;sm_MenuConfiguration_MC50.c: 1105:         sm_send_event(&menuConfiguration_stateMachin
      +                          e, ev_CancelEdition);
  7069  00330A  0EBD               	movlw	low _menuConfiguration_stateMachine
  7070  00330C  6E12               	movwf	sm_send_event@psm^0,c
  7071  00330E  0E02               	movlw	high _menuConfiguration_stateMachine
  7072  003310  6E13               	movwf	(sm_send_event@psm+1)^0,c
  7073  003312  0E00               	movlw	0
  7074  003314  6E15               	movwf	(sm_send_event@event+1)^0,c
  7075  003316  0E03               	movlw	3
  7076  003318  6E14               	movwf	sm_send_event@event^0,c
  7077  00331A  EC29  F041         	call	_sm_send_event	;wreg free
  7078                           
  7079                           ;sm_MenuConfiguration_MC50.c: 1106:         var_sys.DistanceProgrammingActive=NO;
  7080  00331E  0E00               	movlw	0
  7081  003320  0101               	movlb	1	; () banked
  7082  003322  6F40               	movwf	(_var_sys+64)& (0+255),b	;volatile
  7083                           
  7084                           ; BSR set to: 1
  7085                           ;sm_MenuConfiguration_MC50.c: 1107:         var_sys.ProgrammingDistanceIs=NoCMD;
  7086  003324  0E00               	movlw	0
  7087  003326  6F3B               	movwf	(_var_sys+59)& (0+255),b	;volatile
  7088                           
  7089                           ; BSR set to: 1
  7090                           ;sm_MenuConfiguration_MC50.c: 1108:         SetSegmentValueMain(dMinus,dMinus);
  7091  003328  0E18               	movlw	24
  7092  00332A  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  7093  00332C  0E18               	movlw	24
  7094  00332E  ECE1  F047         	call	_SetSegmentValueMain
  7095                           
  7096                           ; BSR set to: 0
  7097                           ;sm_MenuConfiguration_MC50.c: 1109:         ClearFlag_rfCMD();
  7098  003332  EC32  F049         	call	_ClearFlag_rfCMD	;wreg free
  7099                           
  7100                           ;sm_MenuConfiguration_MC50.c: 1110:         button_struct.processed=1;
  7101  003336  0E01               	movlw	1
  7102  003338  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  7103                           
  7104                           ;sm_MenuConfiguration_MC50.c: 1111:         ts_system.timeoutMenu = 0;
  7105  00333A  0E00               	movlw	0
  7106  00333C  0101               	movlb	1	; () banked
  7107  00333E  6FA9               	movwf	(_ts_system+15)& (0+255),b	;volatile
  7108  003340  0E00               	movlw	0
  7109  003342  6FA8               	movwf	(_ts_system+14)& (0+255),b	;volatile
  7110                           
  7111                           ;sm_MenuConfiguration_MC50.c: 1113:     }
  7112  003344  0012               	return	
  7113  003346                     l20947:
  7114                           
  7115                           ; BSR set to: 1
  7116  003346  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  7117  003348  A4D8               	btfss	status,2,c
  7118  00334A  D05B               	goto	l20969
  7119                           
  7120                           ; BSR set to: 1
  7121  00334C  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  7122  00334E  B4D8               	btfsc	status,2,c
  7123  003350  D058               	goto	l20969
  7124                           
  7125                           ; BSR set to: 1
  7126                           ;sm_MenuConfiguration_MC50.c: 1115:     {;sm_MenuConfiguration_MC50.c: 1116:         ts_
      +                          system.timeoutMenu=((1000/50)*5) ;
  7127  003352  0E00               	movlw	0
  7128  003354  6FA9               	movwf	(_ts_system+15)& (0+255),b	;volatile
  7129  003356  0E64               	movlw	100
  7130  003358  6FA8               	movwf	(_ts_system+14)& (0+255),b	;volatile
  7131                           
  7132                           ; BSR set to: 1
  7133                           ;sm_MenuConfiguration_MC50.c: 1117:         if(edit_Param.tempValue<=edit_Param.Min)
  7134  00335A  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7135  00335C  5C4B               	subwf	(_edit_Param+5)^0,w,c	;volatile
  7136  00335E  A0D8               	btfss	status,0,c
  7137  003360  D003               	goto	l20957
  7138                           
  7139                           ; BSR set to: 1
  7140                           ;sm_MenuConfiguration_MC50.c: 1118:         {;sm_MenuConfiguration_MC50.c: 1119:        
      +                               edit_Param.tempValue=edit_Param.Max;
  7141  003362  C04A  F049         	movff	_edit_Param+4,_edit_Param+3	;volatile
  7142                           
  7143                           ;sm_MenuConfiguration_MC50.c: 1120:         }
  7144  003366  D001               	goto	l20959
  7145  003368                     l20957:
  7146                           
  7147                           ; BSR set to: 1
  7148                           ;sm_MenuConfiguration_MC50.c: 1122:         {;sm_MenuConfiguration_MC50.c: 1123:        
      +                               edit_Param.tempValue--;
  7149  003368  0649               	decf	(_edit_Param+3)^0,f,c	;volatile
  7150  00336A                     l20959:
  7151                           
  7152                           ; BSR set to: 1
  7153                           ;sm_MenuConfiguration_MC50.c: 1125:         if(cmdMemoryIsEmpty(menu_st.parameterSelecte
      +                          d,edit_Param.tempValue)==1 || edit_Param.tempValue==edit_Param.Max)
  7154  00336A  C049  F02E         	movff	_edit_Param+3,cmdMemoryIsEmpty@position	;volatile
  7155  00336E  5168               	movf	(_menu_st+23)& (0+255),w,b
  7156  003370  ECB7  F03A         	call	_cmdMemoryIsEmpty
  7157  003374  06E8               	decf	wreg,f,c
  7158  003376  B4D8               	btfsc	status,2,c
  7159  003378  D004               	goto	u23970
  7160  00337A  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  7161  00337C  1849               	xorwf	(_edit_Param+3)^0,w,c	;volatile
  7162  00337E  A4D8               	btfss	status,2,c
  7163  003380  D021               	goto	l20965
  7164  003382                     u23970:
  7165                           
  7166                           ;sm_MenuConfiguration_MC50.c: 1126:         {;sm_MenuConfiguration_MC50.c: 1127:        
      +                               SetSegmentValueIntermitentMain((edit_Param.tempValue-edit_Param.tempValue%10)/10, e
      +                          dit_Param.tempValue%10,(1000/50));
  7167  003382  0E0A               	movlw	10
  7168  003384  6E10               	movwf	___lbmod@divisor^0,c
  7169  003386  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7170  003388  ECA9  F046         	call	___lbmod
  7171  00338C  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  7172  00338E  0E00               	movlw	0
  7173  003390  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  7174  003392  0E14               	movlw	20
  7175  003394  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  7176  003396  0E0A               	movlw	10
  7177  003398  6E10               	movwf	___lbmod@divisor^0,c
  7178  00339A  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7179  00339C  ECA9  F046         	call	___lbmod
  7180  0033A0  0100               	movlb	0	; () banked
  7181  0033A2  6FE0               	movwf	??_controlSelectRemote& (0+255),b
  7182  0033A4  51E0               	movf	??_controlSelectRemote& (0+255),w,b
  7183  0033A6  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  7184  0033A8  6E14               	movwf	___awdiv@dividend^0,c
  7185  0033AA  6A15               	clrf	(___awdiv@dividend+1)^0,c
  7186  0033AC  A0D8               	btfss	status,0,c
  7187  0033AE  0615               	decf	(___awdiv@dividend+1)^0,f,c
  7188  0033B0  0E00               	movlw	0
  7189  0033B2  6E17               	movwf	(___awdiv@divisor+1)^0,c
  7190  0033B4  0E0A               	movlw	10
  7191  0033B6  6E16               	movwf	___awdiv@divisor^0,c
  7192  0033B8  ECA2  F03C         	call	___awdiv	;wreg free
  7193  0033BC  5014               	movf	?___awdiv^0,w,c
  7194  0033BE  EC7D  F048         	call	_SetSegmentValueIntermitentMain
  7195                           
  7196                           ;sm_MenuConfiguration_MC50.c: 1128:         }
  7197  0033C2  D01C               	goto	l20967
  7198  0033C4                     l20965:
  7199                           
  7200                           ;sm_MenuConfiguration_MC50.c: 1130:         {;sm_MenuConfiguration_MC50.c: 1131:        
      +                               SetSegmentValueMain((edit_Param.tempValue-edit_Param.tempValue%10)/10, edit_Param.t
      +                          empValue%10);
  7201  0033C4  0E0A               	movlw	10
  7202  0033C6  6E10               	movwf	___lbmod@divisor^0,c
  7203  0033C8  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7204  0033CA  ECA9  F046         	call	___lbmod
  7205  0033CE  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  7206  0033D0  0E0A               	movlw	10
  7207  0033D2  6E10               	movwf	___lbmod@divisor^0,c
  7208  0033D4  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7209  0033D6  ECA9  F046         	call	___lbmod
  7210  0033DA  0100               	movlb	0	; () banked
  7211  0033DC  6FE0               	movwf	??_controlSelectRemote& (0+255),b
  7212  0033DE  51E0               	movf	??_controlSelectRemote& (0+255),w,b
  7213  0033E0  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  7214  0033E2  6E14               	movwf	___awdiv@dividend^0,c
  7215  0033E4  6A15               	clrf	(___awdiv@dividend+1)^0,c
  7216  0033E6  A0D8               	btfss	status,0,c
  7217  0033E8  0615               	decf	(___awdiv@dividend+1)^0,f,c
  7218  0033EA  0E00               	movlw	0
  7219  0033EC  6E17               	movwf	(___awdiv@divisor+1)^0,c
  7220  0033EE  0E0A               	movlw	10
  7221  0033F0  6E16               	movwf	___awdiv@divisor^0,c
  7222  0033F2  ECA2  F03C         	call	___awdiv	;wreg free
  7223  0033F6  5014               	movf	?___awdiv^0,w,c
  7224  0033F8  ECE1  F047         	call	_SetSegmentValueMain
  7225  0033FC                     l20967:
  7226                           
  7227                           ;sm_MenuConfiguration_MC50.c: 1133:         button_struct.processed=1;
  7228  0033FC  0E01               	movlw	1
  7229  0033FE  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  7230                           
  7231                           ;sm_MenuConfiguration_MC50.c: 1134:     }
  7232  003400  0012               	return	
  7233  003402                     l20969:
  7234                           
  7235                           ; BSR set to: 1
  7236  003402  0E17               	movlw	23
  7237  003404  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  7238  003406  A4D8               	btfss	status,2,c
  7239  003408  D057               	goto	l20991
  7240                           
  7241                           ; BSR set to: 1
  7242  00340A  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  7243  00340C  B4D8               	btfsc	status,2,c
  7244  00340E  D054               	goto	l20991
  7245                           
  7246                           ; BSR set to: 1
  7247                           ;sm_MenuConfiguration_MC50.c: 1136:     {;sm_MenuConfiguration_MC50.c: 1137:         ts_
      +                          system.timeoutMenu=((1000/50)*5) ;
  7248  003410  0E00               	movlw	0
  7249  003412  6FA9               	movwf	(_ts_system+15)& (0+255),b	;volatile
  7250  003414  0E64               	movlw	100
  7251  003416  6FA8               	movwf	(_ts_system+14)& (0+255),b	;volatile
  7252                           
  7253                           ; BSR set to: 1
  7254                           ;sm_MenuConfiguration_MC50.c: 1138:         edit_Param.tempValue++;
  7255  003418  2A49               	incf	(_edit_Param+3)^0,f,c	;volatile
  7256                           
  7257                           ; BSR set to: 1
  7258                           ;sm_MenuConfiguration_MC50.c: 1139:         if(edit_Param.tempValue>edit_Param.Max)
  7259  00341A  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7260  00341C  5C4A               	subwf	(_edit_Param+4)^0,w,c	;volatile
  7261  00341E  A0D8               	btfss	status,0,c
  7262                           
  7263                           ; BSR set to: 1
  7264                           ;sm_MenuConfiguration_MC50.c: 1140:         {;sm_MenuConfiguration_MC50.c: 1141:        
      +                                edit_Param.tempValue=edit_Param.Min;
  7265  003420  C04B  F049         	movff	_edit_Param+5,_edit_Param+3	;volatile
  7266                           
  7267                           ; BSR set to: 1
  7268                           ;sm_MenuConfiguration_MC50.c: 1143:         if(cmdMemoryIsEmpty(menu_st.parameterSelecte
      +                          d,edit_Param.tempValue)==1|| edit_Param.tempValue==edit_Param.Max)
  7269  003424  C049  F02E         	movff	_edit_Param+3,cmdMemoryIsEmpty@position	;volatile
  7270  003428  5168               	movf	(_menu_st+23)& (0+255),w,b
  7271  00342A  ECB7  F03A         	call	_cmdMemoryIsEmpty
  7272  00342E  06E8               	decf	wreg,f,c
  7273  003430  B4D8               	btfsc	status,2,c
  7274  003432  D004               	goto	u24020
  7275  003434  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  7276  003436  1849               	xorwf	(_edit_Param+3)^0,w,c	;volatile
  7277  003438  A4D8               	btfss	status,2,c
  7278  00343A  D021               	goto	l20987
  7279  00343C                     u24020:
  7280                           
  7281                           ;sm_MenuConfiguration_MC50.c: 1144:         {;sm_MenuConfiguration_MC50.c: 1145:        
      +                               SetSegmentValueIntermitentMain((edit_Param.tempValue-edit_Param.tempValue%10)/10, e
      +                          dit_Param.tempValue%10,(1000/50));
  7282  00343C  0E0A               	movlw	10
  7283  00343E  6E10               	movwf	___lbmod@divisor^0,c
  7284  003440  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7285  003442  ECA9  F046         	call	___lbmod
  7286  003446  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  7287  003448  0E00               	movlw	0
  7288  00344A  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  7289  00344C  0E14               	movlw	20
  7290  00344E  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  7291  003450  0E0A               	movlw	10
  7292  003452  6E10               	movwf	___lbmod@divisor^0,c
  7293  003454  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7294  003456  ECA9  F046         	call	___lbmod
  7295  00345A  0100               	movlb	0	; () banked
  7296  00345C  6FE0               	movwf	??_controlSelectRemote& (0+255),b
  7297  00345E  51E0               	movf	??_controlSelectRemote& (0+255),w,b
  7298  003460  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  7299  003462  6E14               	movwf	___awdiv@dividend^0,c
  7300  003464  6A15               	clrf	(___awdiv@dividend+1)^0,c
  7301  003466  A0D8               	btfss	status,0,c
  7302  003468  0615               	decf	(___awdiv@dividend+1)^0,f,c
  7303  00346A  0E00               	movlw	0
  7304  00346C  6E17               	movwf	(___awdiv@divisor+1)^0,c
  7305  00346E  0E0A               	movlw	10
  7306  003470  6E16               	movwf	___awdiv@divisor^0,c
  7307  003472  ECA2  F03C         	call	___awdiv	;wreg free
  7308  003476  5014               	movf	?___awdiv^0,w,c
  7309  003478  EC7D  F048         	call	_SetSegmentValueIntermitentMain
  7310                           
  7311                           ;sm_MenuConfiguration_MC50.c: 1146:         }
  7312  00347C  D7BF               	goto	l20967
  7313  00347E                     l20987:
  7314                           
  7315                           ;sm_MenuConfiguration_MC50.c: 1148:         {;sm_MenuConfiguration_MC50.c: 1149:        
      +                               SetSegmentValue((edit_Param.tempValue-edit_Param.tempValue%10)/10, edit_Param.tempV
      +                          alue%10);
  7316  00347E  0E0A               	movlw	10
  7317  003480  6E10               	movwf	___lbmod@divisor^0,c
  7318  003482  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7319  003484  ECA9  F046         	call	___lbmod
  7320  003488  6E1C               	movwf	SetSegmentValue@d2^0,c
  7321  00348A  0E0A               	movlw	10
  7322  00348C  6E10               	movwf	___lbmod@divisor^0,c
  7323  00348E  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7324  003490  ECA9  F046         	call	___lbmod
  7325  003494  0100               	movlb	0	; () banked
  7326  003496  6FE0               	movwf	??_controlSelectRemote& (0+255),b
  7327  003498  51E0               	movf	??_controlSelectRemote& (0+255),w,b
  7328  00349A  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  7329  00349C  6E14               	movwf	___awdiv@dividend^0,c
  7330  00349E  6A15               	clrf	(___awdiv@dividend+1)^0,c
  7331  0034A0  A0D8               	btfss	status,0,c
  7332  0034A2  0615               	decf	(___awdiv@dividend+1)^0,f,c
  7333  0034A4  0E00               	movlw	0
  7334  0034A6  6E17               	movwf	(___awdiv@divisor+1)^0,c
  7335  0034A8  0E0A               	movlw	10
  7336  0034AA  6E16               	movwf	___awdiv@divisor^0,c
  7337  0034AC  ECA2  F03C         	call	___awdiv	;wreg free
  7338  0034B0  5014               	movf	?___awdiv^0,w,c
  7339  0034B2  ECFB  F047         	call	_SetSegmentValue
  7340  0034B6  D7A2               	goto	l20967
  7341  0034B8                     l20991:
  7342                           
  7343                           ; BSR set to: 1
  7344  0034B8  0E63               	movlw	99
  7345  0034BA  644A               	cpfsgt	(_edit_Param+4)^0,c	;volatile
  7346  0034BC  D01A               	goto	l21001
  7347                           
  7348                           ; BSR set to: 1
  7349  0034BE  0E63               	movlw	99
  7350  0034C0  6449               	cpfsgt	(_edit_Param+3)^0,c	;volatile
  7351  0034C2  D017               	goto	l21001
  7352                           
  7353                           ; BSR set to: 1
  7354                           ;sm_MenuConfiguration_MC50.c: 1154:     {;sm_MenuConfiguration_MC50.c: 1155:         if(
      +                          menu_st.parameterSelected==0)
  7355  0034C4  5168               	movf	(_menu_st+23)& (0+255),w,b
  7356  0034C6  A4D8               	btfss	status,2,c
  7357  0034C8  D00A               	goto	l20999
  7358                           
  7359                           ; BSR set to: 1
  7360                           ;sm_MenuConfiguration_MC50.c: 1156:         {;sm_MenuConfiguration_MC50.c: 1157:        
      +                               SetSegmentValueIntermitentMain(dL, dU,( 500/50));
  7361  0034CA  0E13               	movlw	19
  7362  0034CC  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  7363  0034CE  0E00               	movlw	0
  7364  0034D0  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  7365  0034D2  0E0A               	movlw	10
  7366  0034D4  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  7367  0034D6  0E12               	movlw	18
  7368  0034D8  EC7D  F048         	call	_SetSegmentValueIntermitentMain
  7369                           
  7370                           ;sm_MenuConfiguration_MC50.c: 1158:         }
  7371  0034DC  0012               	return	
  7372  0034DE                     l20999:
  7373                           
  7374                           ; BSR set to: 1
  7375                           ;sm_MenuConfiguration_MC50.c: 1160:         {;sm_MenuConfiguration_MC50.c: 1161:        
      +                               SetSegmentValueIntermitentMain(dL, dP,( 500/50));
  7376  0034DE  0E10               	movlw	16
  7377  0034E0  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  7378  0034E2  0E00               	movlw	0
  7379  0034E4  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  7380  0034E6  0E0A               	movlw	10
  7381  0034E8  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  7382  0034EA  0E12               	movlw	18
  7383  0034EC  EC7D  F048         	call	_SetSegmentValueIntermitentMain
  7384  0034F0  0012               	return	
  7385  0034F2                     l21001:
  7386                           
  7387                           ; BSR set to: 1
  7388  0034F2  0100               	movlb	0	; () banked
  7389  0034F4  29E8               	incf	controlSelectRemote@temp& (0+255),w,b
  7390  0034F6  B4D8               	btfsc	status,2,c
  7391  0034F8  D097               	goto	l21059
  7392                           
  7393                           ; BSR set to: 0
  7394  0034FA  51E8               	movf	controlSelectRemote@temp& (0+255),w,b
  7395  0034FC  B4D8               	btfsc	status,2,c
  7396  0034FE  D00F               	goto	u24110
  7397                           
  7398                           ; BSR set to: 0
  7399  003500  05E8               	decf	controlSelectRemote@temp& (0+255),w,b
  7400  003502  B4D8               	btfsc	status,2,c
  7401  003504  D00C               	goto	u24110
  7402                           
  7403                           ; BSR set to: 0
  7404  003506  0E02               	movlw	2
  7405  003508  19E8               	xorwf	controlSelectRemote@temp& (0+255),w,b
  7406  00350A  B4D8               	btfsc	status,2,c
  7407  00350C  D008               	goto	u24110
  7408                           
  7409                           ; BSR set to: 0
  7410  00350E  0E04               	movlw	4
  7411  003510  19E8               	xorwf	controlSelectRemote@temp& (0+255),w,b
  7412  003512  B4D8               	btfsc	status,2,c
  7413  003514  D004               	goto	u24110
  7414                           
  7415                           ; BSR set to: 0
  7416  003516  0E08               	movlw	8
  7417  003518  19E8               	xorwf	controlSelectRemote@temp& (0+255),w,b
  7418  00351A  A4D8               	btfss	status,2,c
  7419  00351C  D085               	goto	l21059
  7420  00351E                     u24110:
  7421                           
  7422                           ; BSR set to: 0
  7423                           ;sm_MenuConfiguration_MC50.c: 1165:     {;sm_MenuConfiguration_MC50.c: 1166:         cha
      +                          r pos;;sm_MenuConfiguration_MC50.c: 1167:         validSerial=validateRemoteSerialNumber
      +                          (tempSerial,NO,&pos);
  7424  00351E  C0E4  F02E         	movff	controlSelectRemote@tempSerial,validateRemoteSerialNumber@serial
  7425  003522  C0E5  F02F         	movff	controlSelectRemote@tempSerial+1,validateRemoteSerialNumber@serial+1
  7426  003526  C0E6  F030         	movff	controlSelectRemote@tempSerial+2,validateRemoteSerialNumber@serial+2
  7427  00352A  C0E7  F031         	movff	controlSelectRemote@tempSerial+3,validateRemoteSerialNumber@serial+3
  7428  00352E  0E00               	movlw	0
  7429  003530  6E32               	movwf	validateRemoteSerialNumber@VerifyOnlySerial^0,c
  7430  003532  0EE2               	movlw	low controlSelectRemote@pos
  7431  003534  6E33               	movwf	validateRemoteSerialNumber@position^0,c
  7432  003536  6A34               	clrf	(validateRemoteSerialNumber@position+1)^0,c
  7433  003538  EC80  F02A         	call	_validateRemoteSerialNumber	;wreg free
  7434  00353C  6FE1               	movwf	controlSelectRemote@validSerial& (0+255),b
  7435                           
  7436                           ; BSR set to: 0
  7437                           ;sm_MenuConfiguration_MC50.c: 1169:         TypeRemote_st typeRemote = getTypeRemote();
  7438  00353E  EC2F  F049         	call	_getTypeRemote	;wreg free
  7439  003542  0100               	movlb	0	; () banked
  7440  003544  6FE3               	movwf	controlSelectRemote@typeRemote& (0+255),b
  7441                           
  7442                           ; BSR set to: 0
  7443                           ;sm_MenuConfiguration_MC50.c: 1170:         if(validSerial==0&&(typeRemote==Keeloq_Rolli
      +                          ngCode || (var_sys_NVM.OnlyRollingCode==NO)))
  7444  003546  51E1               	movf	controlSelectRemote@validSerial& (0+255),w,b
  7445  003548  A4D8               	btfss	status,2,c
  7446  00354A  0012               	return	
  7447                           
  7448                           ; BSR set to: 0
  7449  00354C  51E3               	movf	controlSelectRemote@typeRemote& (0+255),w,b
  7450  00354E  B4D8               	btfsc	status,2,c
  7451  003550  D003               	goto	u24140
  7452                           
  7453                           ; BSR set to: 0
  7454  003552  51BE               	movf	(_var_sys_NVM+38)& (0+255),w,b	;volatile
  7455  003554  A4D8               	btfss	status,2,c
  7456  003556  0012               	return	
  7457  003558                     u24140:
  7458                           
  7459                           ; BSR set to: 0
  7460                           ;sm_MenuConfiguration_MC50.c: 1171:         {;sm_MenuConfiguration_MC50.c: 1172:        
      +                               saveNewSerial(menu_st.parameterSelected,tempSerial,edit_Param.tempValue);
  7461  003558  C0E4  F0D8         	movff	controlSelectRemote@tempSerial,saveNewSerial@tempSerial
  7462  00355C  C0E5  F0D9         	movff	controlSelectRemote@tempSerial+1,saveNewSerial@tempSerial+1
  7463  003560  C0E6  F0DA         	movff	controlSelectRemote@tempSerial+2,saveNewSerial@tempSerial+2
  7464  003564  C0E7  F0DB         	movff	controlSelectRemote@tempSerial+3,saveNewSerial@tempSerial+3
  7465  003568  C049  F0DC         	movff	_edit_Param+3,saveNewSerial@position	;volatile
  7466  00356C  0101               	movlb	1	; () banked
  7467  00356E  5168               	movf	(_menu_st+23)& (0+255),w,b
  7468  003570  EC4E  F03F         	call	_saveNewSerial
  7469                           
  7470                           ;sm_MenuConfiguration_MC50.c: 1173:             if(edit_Param.tempValue==var_sys_NVM.pos
      +                          itionRemotesFull&&var_sys_NVM.positionRemotesFull<99)
  7471  003574  0100               	movlb	0	; () banked
  7472  003576  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
  7473  003578  1849               	xorwf	(_edit_Param+3)^0,w,c	;volatile
  7474  00357A  A4D8               	btfss	status,2,c
  7475  00357C  D004               	goto	l21031
  7476                           
  7477                           ; BSR set to: 0
  7478  00357E  0E63               	movlw	99
  7479  003580  61B8               	cpfslt	(_var_sys_NVM+32)& (0+255),b	;volatile
  7480  003582  D001               	goto	l21031
  7481                           
  7482                           ; BSR set to: 0
  7483                           ;sm_MenuConfiguration_MC50.c: 1174:                 var_sys_NVM.positionRemotesFull++;
  7484  003584  2BB8               	incf	(_var_sys_NVM+32)& (0+255),f,b	;volatile
  7485  003586                     l21031:
  7486                           
  7487                           ; BSR set to: 0
  7488                           ;sm_MenuConfiguration_MC50.c: 1175:             sm_send_event(&menuConfiguration_stateMa
      +                          chine, ev_addRemotes);
  7489  003586  0EBD               	movlw	low _menuConfiguration_stateMachine
  7490  003588  6E12               	movwf	sm_send_event@psm^0,c
  7491  00358A  0E02               	movlw	high _menuConfiguration_stateMachine
  7492  00358C  6E13               	movwf	(sm_send_event@psm+1)^0,c
  7493  00358E  0E00               	movlw	0
  7494  003590  6E15               	movwf	(sm_send_event@event+1)^0,c
  7495  003592  0E08               	movlw	8
  7496  003594  6E14               	movwf	sm_send_event@event^0,c
  7497  003596  EC29  F041         	call	_sm_send_event	;wreg free
  7498                           
  7499                           ;sm_MenuConfiguration_MC50.c: 1176:             var_sys.DistanceProgrammingActive=NO;
  7500  00359A  0E00               	movlw	0
  7501  00359C  0101               	movlb	1	; () banked
  7502  00359E  6F40               	movwf	(_var_sys+64)& (0+255),b	;volatile
  7503                           
  7504                           ; BSR set to: 1
  7505                           ;sm_MenuConfiguration_MC50.c: 1177:             var_sys.ProgrammingDistanceIs=NoCMD;
  7506  0035A0  0E00               	movlw	0
  7507  0035A2  6F3B               	movwf	(_var_sys+59)& (0+255),b	;volatile
  7508                           
  7509                           ; BSR set to: 1
  7510                           ;sm_MenuConfiguration_MC50.c: 1178:             ts_system.timeSinalizationDigit=(1000/50
      +                          )*2;
  7511  0035A4  0E00               	movlw	0
  7512  0035A6  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
  7513  0035A8  0E28               	movlw	40
  7514  0035AA  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
  7515                           
  7516                           ; BSR set to: 1
  7517                           ;sm_MenuConfiguration_MC50.c: 1179:             SetSegmentValueIntermitentMain((edit_Par
      +                          am.tempValue-edit_Param.tempValue%10)/10, edit_Param.tempValue%10,( 200/50));
  7518  0035AC  0E0A               	movlw	10
  7519  0035AE  6E10               	movwf	___lbmod@divisor^0,c
  7520  0035B0  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7521  0035B2  ECA9  F046         	call	___lbmod
  7522  0035B6  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  7523  0035B8  0E00               	movlw	0
  7524  0035BA  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  7525  0035BC  0E04               	movlw	4
  7526  0035BE  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  7527  0035C0  0E0A               	movlw	10
  7528  0035C2  6E10               	movwf	___lbmod@divisor^0,c
  7529  0035C4  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7530  0035C6  ECA9  F046         	call	___lbmod
  7531  0035CA  0100               	movlb	0	; () banked
  7532  0035CC  6FE0               	movwf	??_controlSelectRemote& (0+255),b
  7533  0035CE  51E0               	movf	??_controlSelectRemote& (0+255),w,b
  7534  0035D0  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  7535  0035D2  6E14               	movwf	___awdiv@dividend^0,c
  7536  0035D4  6A15               	clrf	(___awdiv@dividend+1)^0,c
  7537  0035D6  A0D8               	btfss	status,0,c
  7538  0035D8  0615               	decf	(___awdiv@dividend+1)^0,f,c
  7539  0035DA  0E00               	movlw	0
  7540  0035DC  6E17               	movwf	(___awdiv@divisor+1)^0,c
  7541  0035DE  0E0A               	movlw	10
  7542  0035E0  6E16               	movwf	___awdiv@divisor^0,c
  7543  0035E2  ECA2  F03C         	call	___awdiv	;wreg free
  7544  0035E6  5014               	movf	?___awdiv^0,w,c
  7545  0035E8  EC7D  F048         	call	_SetSegmentValueIntermitentMain
  7546                           
  7547                           ;sm_MenuConfiguration_MC50.c: 1180:             if(edit_Param.Max==edit_Param.tempValue 
      +                          || edit_Param.Max==0 )
  7548  0035EC  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7549  0035EE  184A               	xorwf	(_edit_Param+4)^0,w,c	;volatile
  7550  0035F0  B4D8               	btfsc	status,2,c
  7551  0035F2  D003               	goto	u24180
  7552  0035F4  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  7553  0035F6  A4D8               	btfss	status,2,c
  7554  0035F8  0012               	return	
  7555  0035FA                     u24180:
  7556                           
  7557                           ;sm_MenuConfiguration_MC50.c: 1181:             {;sm_MenuConfiguration_MC50.c: 1185:    
      +                                       if(var_sys_NVM.positionRemotesFull==0 && var_sys_NVM.positionRemotesFull==0
      +                           && typeRemote==Keeloq_RollingCode)
  7558  0035FA  0100               	movlb	0	; () banked
  7559  0035FC  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
  7560  0035FE  A4D8               	btfss	status,2,c
  7561  003600  D008               	goto	l21053
  7562                           
  7563                           ; BSR set to: 0
  7564  003602  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
  7565  003604  A4D8               	btfss	status,2,c
  7566  003606  D005               	goto	l21053
  7567                           
  7568                           ; BSR set to: 0
  7569  003608  51E3               	movf	controlSelectRemote@typeRemote& (0+255),w,b
  7570  00360A  A4D8               	btfss	status,2,c
  7571  00360C  D002               	goto	l21053
  7572                           
  7573                           ; BSR set to: 0
  7574                           ;sm_MenuConfiguration_MC50.c: 1186:                 {;sm_MenuConfiguration_MC50.c: 1188:
      +                                               var_sys_NVM.OnlyRollingCode=YES;
  7575  00360E  0E01               	movlw	1
  7576  003610  6FBE               	movwf	(_var_sys_NVM+38)& (0+255),b	;volatile
  7577  003612                     l21053:
  7578                           
  7579                           ; BSR set to: 0
  7580                           ;sm_MenuConfiguration_MC50.c: 1192:                 edit_Param.tempValue++;
  7581  003612  2A49               	incf	(_edit_Param+3)^0,f,c	;volatile
  7582                           
  7583                           ; BSR set to: 0
  7584                           ;sm_MenuConfiguration_MC50.c: 1193:                 edit_Param.Value[0]=edit_Param.tempV
      +                          alue;
  7585  003614  C047  FFD9         	movff	_edit_Param+1,fsr2l	;volatile
  7586  003618  C048  FFDA         	movff	_edit_Param+2,fsr2h	;volatile
  7587  00361C  C049  FFDF         	movff	_edit_Param+3,indf2	;volatile
  7588                           
  7589                           ; BSR set to: 0
  7590                           ;sm_MenuConfiguration_MC50.c: 1194:                 SaveNVM_VarSystem(pageMemoryCounters
      +                          );
  7591  003620  0E02               	movlw	2
  7592  003622  EC0A  F045         	call	_SaveNVM_VarSystem
  7593  003626  0012               	return	
  7594  003628                     l21059:
  7595                           
  7596                           ; BSR set to: 0
  7597  003628  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  7598  00362A  1849               	xorwf	(_edit_Param+3)^0,w,c	;volatile
  7599  00362C  B4D8               	btfsc	status,2,c
  7600  00362E  0012               	return	
  7601                           
  7602                           ; BSR set to: 0
  7603  003630  0E27               	movlw	39
  7604  003632  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  7605  003634  A4D8               	btfss	status,2,c
  7606  003636  0012               	return	
  7607                           
  7608                           ; BSR set to: 0
  7609  003638  0E27               	movlw	39
  7610  00363A  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  7611  00363C  0012               	return	
  7612                           
  7613                           ; BSR set to: 0
  7614                           ;sm_MenuConfiguration_MC50.c: 1201:     {;sm_MenuConfiguration_MC50.c: 1202:         ts_
      +                          system.timeoutMenu=((1000/50)*5) ;
  7615  00363E  0E00               	movlw	0
  7616  003640  0101               	movlb	1	; () banked
  7617  003642  6FA9               	movwf	(_ts_system+15)& (0+255),b	;volatile
  7618  003644  0E64               	movlw	100
  7619  003646  6FA8               	movwf	(_ts_system+14)& (0+255),b	;volatile
  7620                           
  7621                           ; BSR set to: 1
  7622                           ;sm_MenuConfiguration_MC50.c: 1203:         RemoveSerial(menu_st.parameterSelected,edit_
      +                          Param.tempValue);
  7623  003648  C049  F03A         	movff	_edit_Param+3,RemoveSerial@position	;volatile
  7624  00364C  5168               	movf	(_menu_st+23)& (0+255),w,b
  7625  00364E  EC67  F03D         	call	_RemoveSerial
  7626                           
  7627                           ;sm_MenuConfiguration_MC50.c: 1204:         SetSegmentValueIntermitentMain((edit_Param.t
      +                          empValue-edit_Param.tempValue%10)/10, edit_Param.tempValue%10,(1000/50));
  7628  003652  0E0A               	movlw	10
  7629  003654  6E10               	movwf	___lbmod@divisor^0,c
  7630  003656  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7631  003658  ECA9  F046         	call	___lbmod
  7632  00365C  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  7633  00365E  0E00               	movlw	0
  7634  003660  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  7635  003662  0E14               	movlw	20
  7636  003664  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  7637  003666  0E0A               	movlw	10
  7638  003668  6E10               	movwf	___lbmod@divisor^0,c
  7639  00366A  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7640  00366C  ECA9  F046         	call	___lbmod
  7641  003670  0100               	movlb	0	; () banked
  7642  003672  6FE0               	movwf	??_controlSelectRemote& (0+255),b
  7643  003674  51E0               	movf	??_controlSelectRemote& (0+255),w,b
  7644  003676  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  7645  003678  6E14               	movwf	___awdiv@dividend^0,c
  7646  00367A  6A15               	clrf	(___awdiv@dividend+1)^0,c
  7647  00367C  A0D8               	btfss	status,0,c
  7648  00367E  0615               	decf	(___awdiv@dividend+1)^0,f,c
  7649  003680  0E00               	movlw	0
  7650  003682  6E17               	movwf	(___awdiv@divisor+1)^0,c
  7651  003684  0E0A               	movlw	10
  7652  003686  6E16               	movwf	___awdiv@divisor^0,c
  7653  003688  ECA2  F03C         	call	___awdiv	;wreg free
  7654  00368C  5014               	movf	?___awdiv^0,w,c
  7655  00368E  EC7D  F048         	call	_SetSegmentValueIntermitentMain
  7656  003692  0012               	return	
  7657  003694                     __end_of_controlSelectRemote:
  7658                           	callstack 0
  7659                           
  7660 ;; *************** function _saveNewSerial *****************
  7661 ;; Defined at:
  7662 ;;		line 81 in file "controlMemory_MC50.c"
  7663 ;; Parameters:    Size  Location     Type
  7664 ;;  cmdType         1    wreg     unsigned char 
  7665 ;;  tempSerial      4    0[BANK0 ] unsigned long 
  7666 ;;  position        1    4[BANK0 ] unsigned char 
  7667 ;; Auto vars:     Size  Location     Type
  7668 ;;  cmdType         1   57[COMRAM] unsigned char 
  7669 ;; Return value:  Size  Location     Type
  7670 ;;                  1    wreg      void 
  7671 ;; Registers used:
  7672 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7673 ;; Tracked objects:
  7674 ;;		On entry : 3F/1
  7675 ;;		On exit  : 0/0
  7676 ;;		Unchanged: 0/0
  7677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7678 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7679 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7680 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7681 ;;      Totals:         1       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7682 ;;Total ram usage:        8 bytes
  7683 ;; Hardware stack levels used: 1
  7684 ;; Hardware stack levels required when called: 13
  7685 ;; This function calls:
  7686 ;;		_i2c_writeNBytes
  7687 ;; This function is called by:
  7688 ;;		_controlSelectRemote
  7689 ;; This function uses a non-reentrant model
  7690 ;;
  7691                           
  7692                           	psect	text7
  7693  007E9C                     __ptext7:
  7694                           	callstack 0
  7695  007E9C                     _saveNewSerial:
  7696                           	callstack 14
  7697                           
  7698                           ;incstack = 0
  7699                           ;saveNewSerial@cmdType stored from wreg
  7700  007E9C  6E3A               	movwf	saveNewSerial@cmdType^0,c
  7701                           
  7702                           ;controlMemory_MC50.c: 81: void saveNewSerial(char cmdType,unsigned long tempSerial, cha
      +                          r position);controlMemory_MC50.c: 82: {;controlMemory_MC50.c: 83:     if(cmdType==0)
  7703  007E9E  503A               	movf	saveNewSerial@cmdType^0,w,c
  7704  007EA0  A4D8               	btfss	status,2,c
  7705  007EA2  D01A               	goto	l19597
  7706                           
  7707                           ;controlMemory_MC50.c: 84:     {;controlMemory_MC50.c: 86:         i2c_writeNBytes(0x50,
      +                           (uint16_t)(0x0200 + (position * 4)), (char*)&tempSerial, 4);
  7708  007EA4  0100               	movlb	0	; () banked
  7709  007EA6  51DC               	movf	saveNewSerial@position& (0+255),w,b
  7710  007EA8  6FDD               	movwf	??_saveNewSerial& (0+255),b
  7711  007EAA  6BDE               	clrf	(??_saveNewSerial+1)& (0+255),b
  7712  007EAC  90D8               	bcf	status,0,c
  7713  007EAE  37DD               	rlcf	??_saveNewSerial& (0+255),f,b
  7714  007EB0  37DE               	rlcf	(??_saveNewSerial+1)& (0+255),f,b
  7715  007EB2  90D8               	bcf	status,0,c
  7716  007EB4  37DD               	rlcf	??_saveNewSerial& (0+255),f,b
  7717  007EB6  37DE               	rlcf	(??_saveNewSerial+1)& (0+255),f,b
  7718  007EB8  0E00               	movlw	0
  7719  007EBA  25DD               	addwf	??_saveNewSerial& (0+255),w,b
  7720  007EBC  6E22               	movwf	i2c_writeNBytes@reg^0,c
  7721  007EBE  0E02               	movlw	2
  7722  007EC0  21DE               	addwfc	(??_saveNewSerial+1)& (0+255),w,b
  7723  007EC2  6E23               	movwf	(i2c_writeNBytes@reg+1)^0,c
  7724  007EC4  0ED8               	movlw	low saveNewSerial@tempSerial
  7725  007EC6  6E24               	movwf	i2c_writeNBytes@data^0,c
  7726  007EC8  0E00               	movlw	0
  7727  007ECA  6E26               	movwf	(i2c_writeNBytes@len+1)^0,c
  7728  007ECC  0E04               	movlw	4
  7729  007ECE  6E25               	movwf	i2c_writeNBytes@len^0,c
  7730  007ED0  0E50               	movlw	80
  7731  007ED2  EC14  F03F         	call	_i2c_writeNBytes
  7732                           
  7733                           ;controlMemory_MC50.c: 87:     }
  7734  007ED6  0012               	return	
  7735  007ED8                     l19597:
  7736                           
  7737                           ;controlMemory_MC50.c: 89:     {;controlMemory_MC50.c: 91:         i2c_writeNBytes(0x50,
      +                           (uint16_t)(0x0500 + (position * 4)), (char*)&tempSerial, 4);
  7738  007ED8  0100               	movlb	0	; () banked
  7739  007EDA  51DC               	movf	saveNewSerial@position& (0+255),w,b
  7740  007EDC  6FDD               	movwf	??_saveNewSerial& (0+255),b
  7741  007EDE  6BDE               	clrf	(??_saveNewSerial+1)& (0+255),b
  7742  007EE0  90D8               	bcf	status,0,c
  7743  007EE2  37DD               	rlcf	??_saveNewSerial& (0+255),f,b
  7744  007EE4  37DE               	rlcf	(??_saveNewSerial+1)& (0+255),f,b
  7745  007EE6  90D8               	bcf	status,0,c
  7746  007EE8  37DD               	rlcf	??_saveNewSerial& (0+255),f,b
  7747  007EEA  37DE               	rlcf	(??_saveNewSerial+1)& (0+255),f,b
  7748  007EEC  0E00               	movlw	0
  7749  007EEE  25DD               	addwf	??_saveNewSerial& (0+255),w,b
  7750  007EF0  6E22               	movwf	i2c_writeNBytes@reg^0,c
  7751  007EF2  0E05               	movlw	5
  7752  007EF4  21DE               	addwfc	(??_saveNewSerial+1)& (0+255),w,b
  7753  007EF6  6E23               	movwf	(i2c_writeNBytes@reg+1)^0,c
  7754  007EF8  0ED8               	movlw	low saveNewSerial@tempSerial
  7755  007EFA  6E24               	movwf	i2c_writeNBytes@data^0,c
  7756  007EFC  0E00               	movlw	0
  7757  007EFE  6E26               	movwf	(i2c_writeNBytes@len+1)^0,c
  7758  007F00  0E04               	movlw	4
  7759  007F02  6E25               	movwf	i2c_writeNBytes@len^0,c
  7760  007F04  0E50               	movlw	80
  7761  007F06  EC14  F03F         	call	_i2c_writeNBytes
  7762  007F0A  0012               	return		;funcret
  7763  007F0C                     __end_of_saveNewSerial:
  7764                           	callstack 0
  7765                           
  7766 ;; *************** function _getTypeRemote *****************
  7767 ;; Defined at:
  7768 ;;		line 459 in file "inputs_MC50.c"
  7769 ;; Parameters:    Size  Location     Type
  7770 ;;		None
  7771 ;; Auto vars:     Size  Location     Type
  7772 ;;		None
  7773 ;; Return value:  Size  Location     Type
  7774 ;;                  1    wreg      enum E10559
  7775 ;; Registers used:
  7776 ;;		wreg, status,2
  7777 ;; Tracked objects:
  7778 ;;		On entry : 3F/0
  7779 ;;		On exit  : 3F/2
  7780 ;;		Unchanged: 0/0
  7781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7785 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7786 ;;Total ram usage:        0 bytes
  7787 ;; Hardware stack levels used: 1
  7788 ;; Hardware stack levels required when called: 4
  7789 ;; This function calls:
  7790 ;;		Nothing
  7791 ;; This function is called by:
  7792 ;;		_controlSelectRemote
  7793 ;; This function uses a non-reentrant model
  7794 ;;
  7795                           
  7796                           	psect	text8
  7797  00925E                     __ptext8:
  7798                           	callstack 0
  7799  00925E                     _getTypeRemote:
  7800                           	callstack 23
  7801                           
  7802                           ; BSR set to: 0
  7803                           ;inputs_MC50.c: 460:     return classic_data.type;
  7804                           
  7805                           ;incstack = 0
  7806  00925E  0102               	movlb	2	; () banked
  7807  009260  51A0               	movf	(_classic_data+14)& (0+255),w,b
  7808                           
  7809                           ; BSR set to: 2
  7810  009262  0012               	return		;funcret
  7811  009264                     __end_of_getTypeRemote:
  7812                           	callstack 0
  7813                           
  7814 ;; *************** function _getSerialCmd *****************
  7815 ;; Defined at:
  7816 ;;		line 442 in file "inputs_MC50.c"
  7817 ;; Parameters:    Size  Location     Type
  7818 ;;  serial          1   26[COMRAM] PTR unsigned long 
  7819 ;;		 -> controlSelectRemote@tempSerial(4), 
  7820 ;; Auto vars:     Size  Location     Type
  7821 ;;  temp            1   27[COMRAM] char 
  7822 ;; Return value:  Size  Location     Type
  7823 ;;                  1    wreg      char 
  7824 ;; Registers used:
  7825 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7826 ;; Tracked objects:
  7827 ;;		On entry : 3F/1
  7828 ;;		On exit  : 0/0
  7829 ;;		Unchanged: 0/0
  7830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7831 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7832 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7834 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7835 ;;Total ram usage:        2 bytes
  7836 ;; Hardware stack levels used: 1
  7837 ;; Hardware stack levels required when called: 5
  7838 ;; This function calls:
  7839 ;;		_memcpy
  7840 ;; This function is called by:
  7841 ;;		_controlSelectRemote
  7842 ;; This function uses a non-reentrant model
  7843 ;;
  7844                           
  7845                           	psect	text9
  7846  008660                     __ptext9:
  7847                           	callstack 0
  7848  008660                     _getSerialCmd:
  7849                           	callstack 22
  7850                           
  7851                           ; BSR set to: 1
  7852                           ;inputs_MC50.c: 443:     signed char temp=-1;
  7853                           
  7854                           ; BSR set to: 2
  7855                           ;incstack = 0
  7856  008660  681C               	setf	getSerialCmd@temp^0,c
  7857                           
  7858                           ; BSR set to: 1
  7859                           ;inputs_MC50.c: 444:     if(RFFull)
  7860  008662  0100               	movlb	0	; () banked
  7861  008664  518B               	movf	_RFFull& (0+255),w,b	;volatile
  7862  008666  B4D8               	btfsc	status,2,c
  7863  008668  D020               	goto	l19647
  7864                           
  7865                           ; BSR set to: 0
  7866                           ;inputs_MC50.c: 445:     {;inputs_MC50.c: 446:         if(RFFull_12BIT)
  7867  00866A  518A               	movf	_RFFull_12BIT& (0+255),w,b	;volatile
  7868  00866C  B4D8               	btfsc	status,2,c
  7869  00866E  D00E               	goto	l19643
  7870                           
  7871                           ; BSR set to: 0
  7872                           ;inputs_MC50.c: 447:         {;inputs_MC50.c: 448:             memcpy((char*)serial,&cla
      +                          ssic_data.serialnumber,4);
  7873  008670  C01B  F010         	movff	getSerialCmd@serial,memcpy@d1
  7874  008674  6A11               	clrf	(memcpy@d1+1)^0,c
  7875  008676  0E96               	movlw	low (_classic_data+4)
  7876  008678  6E12               	movwf	memcpy@s1^0,c
  7877  00867A  0E02               	movlw	high (_classic_data+4)
  7878  00867C  6E13               	movwf	(memcpy@s1+1)^0,c
  7879  00867E  0E00               	movlw	0
  7880  008680  6E15               	movwf	(memcpy@n+1)^0,c
  7881  008682  0E04               	movlw	4
  7882  008684  6E14               	movwf	memcpy@n^0,c
  7883  008686  EC0C  F044         	call	_memcpy	;wreg free
  7884                           
  7885                           ;inputs_MC50.c: 449:         }
  7886  00868A  D00D               	goto	l19645
  7887  00868C                     l19643:
  7888                           
  7889                           ; BSR set to: 0
  7890                           ;inputs_MC50.c: 451:         {;inputs_MC50.c: 452:             memcpy((char*)serial,(cha
      +                          r*)BufferRF+4,4);
  7891  00868C  C01B  F010         	movff	getSerialCmd@serial,memcpy@d1
  7892  008690  6A11               	clrf	(memcpy@d1+1)^0,c
  7893  008692  0ECC               	movlw	low (_BufferRF+4)
  7894  008694  6E12               	movwf	memcpy@s1^0,c
  7895  008696  0E02               	movlw	high (_BufferRF+4)
  7896  008698  6E13               	movwf	(memcpy@s1+1)^0,c
  7897  00869A  0E00               	movlw	0
  7898  00869C  6E15               	movwf	(memcpy@n+1)^0,c
  7899  00869E  0E04               	movlw	4
  7900  0086A0  6E14               	movwf	memcpy@n^0,c
  7901  0086A2  EC0C  F044         	call	_memcpy	;wreg free
  7902  0086A6                     l19645:
  7903                           
  7904                           ;inputs_MC50.c: 454:         temp=classic_data.fcode1;
  7905  0086A6  C29E  F01C         	movff	_classic_data+12,getSerialCmd@temp
  7906  0086AA                     l19647:
  7907                           
  7908                           ;inputs_MC50.c: 456:     return temp;
  7909  0086AA  501C               	movf	getSerialCmd@temp^0,w,c
  7910  0086AC  0012               	return		;funcret
  7911  0086AE                     __end_of_getSerialCmd:
  7912                           	callstack 0
  7913                           
  7914 ;; *************** function _cmdMemoryIsEmpty *****************
  7915 ;; Defined at:
  7916 ;;		line 110 in file "controlMemory_MC50.c"
  7917 ;; Parameters:    Size  Location     Type
  7918 ;;  cmdType         1    wreg     unsigned char 
  7919 ;;  position        1   45[COMRAM] unsigned char 
  7920 ;; Auto vars:     Size  Location     Type
  7921 ;;  cmdType         1   48[COMRAM] unsigned char 
  7922 ;;  tempSerial      4   49[COMRAM] unsigned long 
  7923 ;; Return value:  Size  Location     Type
  7924 ;;                  1    wreg      unsigned char 
  7925 ;; Registers used:
  7926 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7927 ;; Tracked objects:
  7928 ;;		On entry : 3F/1
  7929 ;;		On exit  : 0/0
  7930 ;;		Unchanged: 0/0
  7931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7932 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7933 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7934 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7935 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7936 ;;Total ram usage:        8 bytes
  7937 ;; Hardware stack levels used: 1
  7938 ;; Hardware stack levels required when called: 13
  7939 ;; This function calls:
  7940 ;;		_i2c_readDataBlock
  7941 ;; This function is called by:
  7942 ;;		_setValueToEdit
  7943 ;;		_controlSelectRemote
  7944 ;; This function uses a non-reentrant model
  7945 ;;
  7946                           
  7947                           	psect	text10
  7948  00756E                     __ptext10:
  7949                           	callstack 0
  7950  00756E                     _cmdMemoryIsEmpty:
  7951                           	callstack 14
  7952                           
  7953                           ;incstack = 0
  7954                           ;cmdMemoryIsEmpty@cmdType stored from wreg
  7955  00756E  6E31               	movwf	cmdMemoryIsEmpty@cmdType^0,c
  7956                           
  7957                           ;controlMemory_MC50.c: 110: char cmdMemoryIsEmpty(char cmdType, char position);controlMe
      +                          mory_MC50.c: 111: {;controlMemory_MC50.c: 112:     unsigned long tempSerial=0;
  7958  007570  0E00               	movlw	0
  7959  007572  6E32               	movwf	cmdMemoryIsEmpty@tempSerial^0,c
  7960  007574  0E00               	movlw	0
  7961  007576  6E33               	movwf	(cmdMemoryIsEmpty@tempSerial+1)^0,c
  7962  007578  0E00               	movlw	0
  7963  00757A  6E34               	movwf	(cmdMemoryIsEmpty@tempSerial+2)^0,c
  7964  00757C  0E00               	movlw	0
  7965  00757E  6E35               	movwf	(cmdMemoryIsEmpty@tempSerial+3)^0,c
  7966                           
  7967                           ;controlMemory_MC50.c: 115:      if(cmdType==0)
  7968  007580  5031               	movf	cmdMemoryIsEmpty@cmdType^0,w,c
  7969  007582  A4D8               	btfss	status,2,c
  7970  007584  D01A               	goto	l19613
  7971                           
  7972                           ;controlMemory_MC50.c: 116:     {;controlMemory_MC50.c: 117:          i2c_readDataBlock(
      +                          0x50, (uint16_t)(0x0200 + (position * 4)),(char*)&tempSerial, 4);
  7973  007586  502E               	movf	cmdMemoryIsEmpty@position^0,w,c
  7974  007588  6E2F               	movwf	??_cmdMemoryIsEmpty^0,c
  7975  00758A  6A30               	clrf	(??_cmdMemoryIsEmpty+1)^0,c
  7976  00758C  90D8               	bcf	status,0,c
  7977  00758E  362F               	rlcf	??_cmdMemoryIsEmpty^0,f,c
  7978  007590  3630               	rlcf	(??_cmdMemoryIsEmpty+1)^0,f,c
  7979  007592  90D8               	bcf	status,0,c
  7980  007594  362F               	rlcf	??_cmdMemoryIsEmpty^0,f,c
  7981  007596  3630               	rlcf	(??_cmdMemoryIsEmpty+1)^0,f,c
  7982  007598  0E00               	movlw	0
  7983  00759A  242F               	addwf	??_cmdMemoryIsEmpty^0,w,c
  7984  00759C  6E22               	movwf	i2c_readDataBlock@reg^0,c
  7985  00759E  0E02               	movlw	2
  7986  0075A0  2030               	addwfc	(??_cmdMemoryIsEmpty+1)^0,w,c
  7987  0075A2  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
  7988  0075A4  0E32               	movlw	low cmdMemoryIsEmpty@tempSerial
  7989  0075A6  6E24               	movwf	i2c_readDataBlock@data^0,c
  7990  0075A8  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
  7991  0075AA  0E00               	movlw	0
  7992  0075AC  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
  7993  0075AE  0E04               	movlw	4
  7994  0075B0  6E26               	movwf	i2c_readDataBlock@len^0,c
  7995  0075B2  0E50               	movlw	80
  7996  0075B4  ECD9  F03E         	call	_i2c_readDataBlock
  7997                           
  7998                           ;controlMemory_MC50.c: 118:     }
  7999  0075B8  D019               	goto	l19615
  8000  0075BA                     l19613:
  8001                           
  8002                           ;controlMemory_MC50.c: 120:     {;controlMemory_MC50.c: 121:          i2c_readDataBlock(
      +                          0x50, (uint16_t)(0x0500 + (position * 4)),(char*)&tempSerial, 4);
  8003  0075BA  502E               	movf	cmdMemoryIsEmpty@position^0,w,c
  8004  0075BC  6E2F               	movwf	??_cmdMemoryIsEmpty^0,c
  8005  0075BE  6A30               	clrf	(??_cmdMemoryIsEmpty+1)^0,c
  8006  0075C0  90D8               	bcf	status,0,c
  8007  0075C2  362F               	rlcf	??_cmdMemoryIsEmpty^0,f,c
  8008  0075C4  3630               	rlcf	(??_cmdMemoryIsEmpty+1)^0,f,c
  8009  0075C6  90D8               	bcf	status,0,c
  8010  0075C8  362F               	rlcf	??_cmdMemoryIsEmpty^0,f,c
  8011  0075CA  3630               	rlcf	(??_cmdMemoryIsEmpty+1)^0,f,c
  8012  0075CC  0E00               	movlw	0
  8013  0075CE  242F               	addwf	??_cmdMemoryIsEmpty^0,w,c
  8014  0075D0  6E22               	movwf	i2c_readDataBlock@reg^0,c
  8015  0075D2  0E05               	movlw	5
  8016  0075D4  2030               	addwfc	(??_cmdMemoryIsEmpty+1)^0,w,c
  8017  0075D6  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
  8018  0075D8  0E32               	movlw	low cmdMemoryIsEmpty@tempSerial
  8019  0075DA  6E24               	movwf	i2c_readDataBlock@data^0,c
  8020  0075DC  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
  8021  0075DE  0E00               	movlw	0
  8022  0075E0  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
  8023  0075E2  0E04               	movlw	4
  8024  0075E4  6E26               	movwf	i2c_readDataBlock@len^0,c
  8025  0075E6  0E50               	movlw	80
  8026  0075E8  ECD9  F03E         	call	_i2c_readDataBlock
  8027  0075EC                     l19615:
  8028                           
  8029                           ;controlMemory_MC50.c: 124:      if( tempSerial==0)
  8030  0075EC  5032               	movf	cmdMemoryIsEmpty@tempSerial^0,w,c
  8031  0075EE  1033               	iorwf	(cmdMemoryIsEmpty@tempSerial+1)^0,w,c
  8032  0075F0  1034               	iorwf	(cmdMemoryIsEmpty@tempSerial+2)^0,w,c
  8033  0075F2  1035               	iorwf	(cmdMemoryIsEmpty@tempSerial+3)^0,w,c
  8034  0075F4  A4D8               	btfss	status,2,c
  8035  0075F6  D002               	goto	l19623
  8036                           
  8037                           ;controlMemory_MC50.c: 125:      {;controlMemory_MC50.c: 126:          return 1;
  8038  0075F8  0E01               	movlw	1
  8039  0075FA  0012               	return	
  8040  0075FC                     l19623:
  8041                           
  8042                           ;controlMemory_MC50.c: 129:      {;controlMemory_MC50.c: 130:          return 0;
  8043  0075FC  0E00               	movlw	0
  8044  0075FE  0012               	return		;funcret
  8045  007600                     __end_of_cmdMemoryIsEmpty:
  8046                           	callstack 0
  8047                           
  8048 ;; *************** function _RemoveSerial *****************
  8049 ;; Defined at:
  8050 ;;		line 95 in file "controlMemory_MC50.c"
  8051 ;; Parameters:    Size  Location     Type
  8052 ;;  cmdType         1    wreg     unsigned char 
  8053 ;;  position        1   57[COMRAM] unsigned char 
  8054 ;; Auto vars:     Size  Location     Type
  8055 ;;  cmdType         1    2[BANK0 ] unsigned char 
  8056 ;;  tempSerial      4    3[BANK0 ] unsigned long 
  8057 ;; Return value:  Size  Location     Type
  8058 ;;                  1    wreg      void 
  8059 ;; Registers used:
  8060 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8061 ;; Tracked objects:
  8062 ;;		On entry : 3F/1
  8063 ;;		On exit  : 0/0
  8064 ;;		Unchanged: 0/0
  8065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8066 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8067 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8068 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8069 ;;      Totals:         1       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8070 ;;Total ram usage:        8 bytes
  8071 ;; Hardware stack levels used: 1
  8072 ;; Hardware stack levels required when called: 13
  8073 ;; This function calls:
  8074 ;;		_i2c_writeNBytes
  8075 ;; This function is called by:
  8076 ;;		_controlSelectRemote
  8077 ;; This function uses a non-reentrant model
  8078 ;;
  8079                           
  8080                           	psect	text11
  8081  007ACE                     __ptext11:
  8082                           	callstack 0
  8083  007ACE                     _RemoveSerial:
  8084                           	callstack 14
  8085                           
  8086                           ;incstack = 0
  8087                           ;RemoveSerial@cmdType stored from wreg
  8088  007ACE  0100               	movlb	0	; () banked
  8089  007AD0  6FDA               	movwf	RemoveSerial@cmdType& (0+255),b
  8090                           
  8091                           ;controlMemory_MC50.c: 95: void RemoveSerial(char cmdType, char position);controlMemory_
      +                          MC50.c: 96: {;controlMemory_MC50.c: 97:     unsigned long tempSerial=0;
  8092  007AD2  0E00               	movlw	0
  8093  007AD4  0100               	movlb	0	; () banked
  8094  007AD6  6FDB               	movwf	RemoveSerial@tempSerial& (0+255),b
  8095  007AD8  0E00               	movlw	0
  8096  007ADA  6FDC               	movwf	(RemoveSerial@tempSerial+1)& (0+255),b
  8097  007ADC  0E00               	movlw	0
  8098  007ADE  6FDD               	movwf	(RemoveSerial@tempSerial+2)& (0+255),b
  8099  007AE0  0E00               	movlw	0
  8100  007AE2  6FDE               	movwf	(RemoveSerial@tempSerial+3)& (0+255),b
  8101                           
  8102                           ; BSR set to: 0
  8103                           ;controlMemory_MC50.c: 100:     if(cmdType==0)
  8104  007AE4  51DA               	movf	RemoveSerial@cmdType& (0+255),w,b
  8105  007AE6  A4D8               	btfss	status,2,c
  8106  007AE8  D019               	goto	l19605
  8107                           
  8108                           ; BSR set to: 0
  8109                           ;controlMemory_MC50.c: 101:     {;controlMemory_MC50.c: 102:        i2c_writeNBytes(0x50
      +                          , (uint16_t)(0x0200 + (position * 4)), (char*)&tempSerial, 4);
  8110  007AEA  503A               	movf	RemoveSerial@position^0,w,c
  8111  007AEC  6FD8               	movwf	??_RemoveSerial& (0+255),b
  8112  007AEE  6BD9               	clrf	(??_RemoveSerial+1)& (0+255),b
  8113  007AF0  90D8               	bcf	status,0,c
  8114  007AF2  37D8               	rlcf	??_RemoveSerial& (0+255),f,b
  8115  007AF4  37D9               	rlcf	(??_RemoveSerial+1)& (0+255),f,b
  8116  007AF6  90D8               	bcf	status,0,c
  8117  007AF8  37D8               	rlcf	??_RemoveSerial& (0+255),f,b
  8118  007AFA  37D9               	rlcf	(??_RemoveSerial+1)& (0+255),f,b
  8119  007AFC  0E00               	movlw	0
  8120  007AFE  25D8               	addwf	??_RemoveSerial& (0+255),w,b
  8121  007B00  6E22               	movwf	i2c_writeNBytes@reg^0,c
  8122  007B02  0E02               	movlw	2
  8123  007B04  21D9               	addwfc	(??_RemoveSerial+1)& (0+255),w,b
  8124  007B06  6E23               	movwf	(i2c_writeNBytes@reg+1)^0,c
  8125  007B08  0EDB               	movlw	low RemoveSerial@tempSerial
  8126  007B0A  6E24               	movwf	i2c_writeNBytes@data^0,c
  8127  007B0C  0E00               	movlw	0
  8128  007B0E  6E26               	movwf	(i2c_writeNBytes@len+1)^0,c
  8129  007B10  0E04               	movlw	4
  8130  007B12  6E25               	movwf	i2c_writeNBytes@len^0,c
  8131  007B14  0E50               	movlw	80
  8132  007B16  EC14  F03F         	call	_i2c_writeNBytes
  8133                           
  8134                           ;controlMemory_MC50.c: 103:     }
  8135  007B1A  0012               	return	
  8136  007B1C                     l19605:
  8137                           
  8138                           ; BSR set to: 0
  8139                           ;controlMemory_MC50.c: 105:     {;controlMemory_MC50.c: 106:        i2c_writeNBytes(0x50
      +                          , (uint16_t)(0x0500 + (position * 4)), (char*)&tempSerial, 4);
  8140  007B1C  503A               	movf	RemoveSerial@position^0,w,c
  8141  007B1E  6FD8               	movwf	??_RemoveSerial& (0+255),b
  8142  007B20  6BD9               	clrf	(??_RemoveSerial+1)& (0+255),b
  8143  007B22  90D8               	bcf	status,0,c
  8144  007B24  37D8               	rlcf	??_RemoveSerial& (0+255),f,b
  8145  007B26  37D9               	rlcf	(??_RemoveSerial+1)& (0+255),f,b
  8146  007B28  90D8               	bcf	status,0,c
  8147  007B2A  37D8               	rlcf	??_RemoveSerial& (0+255),f,b
  8148  007B2C  37D9               	rlcf	(??_RemoveSerial+1)& (0+255),f,b
  8149  007B2E  0E00               	movlw	0
  8150  007B30  25D8               	addwf	??_RemoveSerial& (0+255),w,b
  8151  007B32  6E22               	movwf	i2c_writeNBytes@reg^0,c
  8152  007B34  0E05               	movlw	5
  8153  007B36  21D9               	addwfc	(??_RemoveSerial+1)& (0+255),w,b
  8154  007B38  6E23               	movwf	(i2c_writeNBytes@reg+1)^0,c
  8155  007B3A  0EDB               	movlw	low RemoveSerial@tempSerial
  8156  007B3C  6E24               	movwf	i2c_writeNBytes@data^0,c
  8157  007B3E  0E00               	movlw	0
  8158  007B40  6E26               	movwf	(i2c_writeNBytes@len+1)^0,c
  8159  007B42  0E04               	movlw	4
  8160  007B44  6E25               	movwf	i2c_writeNBytes@len^0,c
  8161  007B46  0E50               	movlw	80
  8162  007B48  EC14  F03F         	call	_i2c_writeNBytes
  8163  007B4C  0012               	return		;funcret
  8164  007B4E                     __end_of_RemoveSerial:
  8165                           	callstack 0
  8166                           
  8167 ;; *************** function _controlSaveRemote *****************
  8168 ;; Defined at:
  8169 ;;		line 1209 in file "sm_MenuConfiguration_MC50.c"
  8170 ;; Parameters:    Size  Location     Type
  8171 ;;		None
  8172 ;; Auto vars:     Size  Location     Type
  8173 ;;		None
  8174 ;; Return value:  Size  Location     Type
  8175 ;;                  1    wreg      void 
  8176 ;; Registers used:
  8177 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8178 ;; Tracked objects:
  8179 ;;		On entry : 3F/0
  8180 ;;		On exit  : 0/0
  8181 ;;		Unchanged: 0/0
  8182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8185 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8186 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8187 ;;Total ram usage:        1 bytes
  8188 ;; Hardware stack levels used: 1
  8189 ;; Hardware stack levels required when called: 6
  8190 ;; This function calls:
  8191 ;;		_ClearFlag_rfCMD
  8192 ;;		_SetSegmentValueIntermitentMain
  8193 ;;		_SetSegmentValueMain
  8194 ;;		___awdiv
  8195 ;;		___lbmod
  8196 ;;		_sm_send_event
  8197 ;; This function is called by:
  8198 ;;		_sm_execute_menuConfiguration
  8199 ;; This function uses a non-reentrant model
  8200 ;;
  8201                           
  8202                           	psect	text12
  8203  007192                     __ptext12:
  8204                           	callstack 0
  8205  007192                     _controlSaveRemote:
  8206                           	callstack 22
  8207                           
  8208                           ; BSR set to: 0
  8209                           ;sm_MenuConfiguration_MC50.c: 1210:      if (ts_system.timeSinalizationDigit<=0)
  8210                           
  8211                           ;incstack = 0
  8212  007192  0101               	movlb	1	; () banked
  8213  007194  BFA7               	btfsc	(_ts_system+13)& (0+255),7,b	;volatile
  8214  007196  D005               	goto	u24250
  8215  007198  51A7               	movf	(_ts_system+13)& (0+255),w,b	;volatile
  8216  00719A  E154               	bnz	l3483
  8217  00719C  05A6               	decf	(_ts_system+12)& (0+255),w,b	;volatile
  8218  00719E  B0D8               	btfsc	status,0,c
  8219  0071A0  0012               	return	
  8220  0071A2                     u24250:
  8221                           
  8222                           ; BSR set to: 1
  8223                           ;sm_MenuConfiguration_MC50.c: 1211:      {;sm_MenuConfiguration_MC50.c: 1212:          i
      +                          f(edit_Param.Max==0)
  8224  0071A2  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  8225  0071A4  A4D8               	btfss	status,2,c
  8226  0071A6  D02E               	goto	l21081
  8227                           
  8228                           ; BSR set to: 1
  8229                           ;sm_MenuConfiguration_MC50.c: 1213:          {;sm_MenuConfiguration_MC50.c: 1214:       
      +                                 ts_system.timeoutMenu=10*(1000/50);
  8230  0071A8  0E00               	movlw	0
  8231  0071AA  6FA9               	movwf	(_ts_system+15)& (0+255),b	;volatile
  8232  0071AC  0EC8               	movlw	200
  8233  0071AE  6FA8               	movwf	(_ts_system+14)& (0+255),b	;volatile
  8234                           
  8235                           ; BSR set to: 1
  8236                           ;sm_MenuConfiguration_MC50.c: 1215:              sm_send_event(&menuConfiguration_stateM
      +                          achine, ev_NextRemote);
  8237  0071B0  0EBD               	movlw	low _menuConfiguration_stateMachine
  8238  0071B2  6E12               	movwf	sm_send_event@psm^0,c
  8239  0071B4  0E02               	movlw	high _menuConfiguration_stateMachine
  8240  0071B6  6E13               	movwf	(sm_send_event@psm+1)^0,c
  8241  0071B8  0E00               	movlw	0
  8242  0071BA  6E15               	movwf	(sm_send_event@event+1)^0,c
  8243  0071BC  0E09               	movlw	9
  8244  0071BE  6E14               	movwf	sm_send_event@event^0,c
  8245  0071C0  EC29  F041         	call	_sm_send_event	;wreg free
  8246                           
  8247                           ;sm_MenuConfiguration_MC50.c: 1216:              SetSegmentValueIntermitentMain((edit_Pa
      +                          ram.tempValue-edit_Param.tempValue%10)/10, edit_Param.tempValue%10,(1000/50));
  8248  0071C4  0E0A               	movlw	10
  8249  0071C6  6E10               	movwf	___lbmod@divisor^0,c
  8250  0071C8  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  8251  0071CA  ECA9  F046         	call	___lbmod
  8252  0071CE  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  8253  0071D0  0E00               	movlw	0
  8254  0071D2  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  8255  0071D4  0E14               	movlw	20
  8256  0071D6  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  8257  0071D8  0E0A               	movlw	10
  8258  0071DA  6E10               	movwf	___lbmod@divisor^0,c
  8259  0071DC  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  8260  0071DE  ECA9  F046         	call	___lbmod
  8261  0071E2  6E20               	movwf	??_controlSaveRemote^0,c
  8262  0071E4  5020               	movf	??_controlSaveRemote^0,w,c
  8263  0071E6  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  8264  0071E8  6E14               	movwf	___awdiv@dividend^0,c
  8265  0071EA  6A15               	clrf	(___awdiv@dividend+1)^0,c
  8266  0071EC  A0D8               	btfss	status,0,c
  8267  0071EE  0615               	decf	(___awdiv@dividend+1)^0,f,c
  8268  0071F0  0E00               	movlw	0
  8269  0071F2  6E17               	movwf	(___awdiv@divisor+1)^0,c
  8270  0071F4  0E0A               	movlw	10
  8271  0071F6  6E16               	movwf	___awdiv@divisor^0,c
  8272  0071F8  ECA2  F03C         	call	___awdiv	;wreg free
  8273  0071FC  5014               	movf	?___awdiv^0,w,c
  8274  0071FE  EC7D  F048         	call	_SetSegmentValueIntermitentMain
  8275                           
  8276                           ;sm_MenuConfiguration_MC50.c: 1217:          }
  8277  007202  0012               	return	
  8278  007204                     l21081:
  8279                           
  8280                           ; BSR set to: 1
  8281                           ;sm_MenuConfiguration_MC50.c: 1219:          {;sm_MenuConfiguration_MC50.c: 1220:       
      +                                sm_send_event(&main_stateMachine, ev_goto_StandBy);
  8282  007204  0EED               	movlw	low _main_stateMachine
  8283  007206  6E12               	movwf	sm_send_event@psm^0,c
  8284  007208  0E01               	movlw	high _main_stateMachine
  8285  00720A  6E13               	movwf	(sm_send_event@psm+1)^0,c
  8286  00720C  0E00               	movlw	0
  8287  00720E  6E15               	movwf	(sm_send_event@event+1)^0,c
  8288  007210  0E07               	movlw	7
  8289  007212  6E14               	movwf	sm_send_event@event^0,c
  8290  007214  EC29  F041         	call	_sm_send_event	;wreg free
  8291                           
  8292                           ;sm_MenuConfiguration_MC50.c: 1221:             sm_send_event(&menuConfiguration_stateMa
      +                          chine, ev_ParameterIsSaved);
  8293  007218  0EBD               	movlw	low _menuConfiguration_stateMachine
  8294  00721A  6E12               	movwf	sm_send_event@psm^0,c
  8295  00721C  0E02               	movlw	high _menuConfiguration_stateMachine
  8296  00721E  6E13               	movwf	(sm_send_event@psm+1)^0,c
  8297  007220  0E00               	movlw	0
  8298  007222  6E15               	movwf	(sm_send_event@event+1)^0,c
  8299  007224  0E04               	movlw	4
  8300  007226  6E14               	movwf	sm_send_event@event^0,c
  8301  007228  EC29  F041         	call	_sm_send_event	;wreg free
  8302                           
  8303                           ;sm_MenuConfiguration_MC50.c: 1222:             SetSegmentValueMain(dMinus,dMinus);
  8304  00722C  0E18               	movlw	24
  8305  00722E  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  8306  007230  0E18               	movlw	24
  8307  007232  ECE1  F047         	call	_SetSegmentValueMain
  8308                           
  8309                           ; BSR set to: 0
  8310                           ;sm_MenuConfiguration_MC50.c: 1223:             ClearFlag_rfCMD();
  8311  007236  EC32  F049         	call	_ClearFlag_rfCMD	;wreg free
  8312                           
  8313                           ;sm_MenuConfiguration_MC50.c: 1224:             ts_system.timeoutMenu = 0;
  8314  00723A  0E00               	movlw	0
  8315  00723C  0101               	movlb	1	; () banked
  8316  00723E  6FA9               	movwf	(_ts_system+15)& (0+255),b	;volatile
  8317  007240  0E00               	movlw	0
  8318  007242  6FA8               	movwf	(_ts_system+14)& (0+255),b	;volatile
  8319  007244                     l3483:
  8320  007244  0012               	return		;funcret
  8321  007246                     __end_of_controlSaveRemote:
  8322                           	callstack 0
  8323                           
  8324 ;; *************** function ___lbmod *****************
  8325 ;; Defined at:
  8326 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\lbmod.c"
  8327 ;; Parameters:    Size  Location     Type
  8328 ;;  dividend        1    wreg     unsigned char 
  8329 ;;  divisor         1   15[COMRAM] unsigned char 
  8330 ;; Auto vars:     Size  Location     Type
  8331 ;;  dividend        1   16[COMRAM] unsigned char 
  8332 ;;  rem             1   18[COMRAM] unsigned char 
  8333 ;;  counter         1   17[COMRAM] unsigned char 
  8334 ;; Return value:  Size  Location     Type
  8335 ;;                  1    wreg      unsigned char 
  8336 ;; Registers used:
  8337 ;;		wreg, status,2, status,0
  8338 ;; Tracked objects:
  8339 ;;		On entry : 0/1
  8340 ;;		On exit  : 0/0
  8341 ;;		Unchanged: 0/0
  8342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8343 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8344 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8346 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8347 ;;Total ram usage:        4 bytes
  8348 ;; Hardware stack levels used: 1
  8349 ;; Hardware stack levels required when called: 4
  8350 ;; This function calls:
  8351 ;;		Nothing
  8352 ;; This function is called by:
  8353 ;;		_controlSelectRemote
  8354 ;;		_controlSaveRemote
  8355 ;; This function uses a non-reentrant model
  8356 ;;
  8357                           
  8358                           	psect	text13
  8359  008D52                     __ptext13:
  8360                           	callstack 0
  8361  008D52                     ___lbmod:
  8362                           	callstack 23
  8363                           
  8364                           ;incstack = 0
  8365                           ;___lbmod@dividend stored from wreg
  8366  008D52  6E11               	movwf	___lbmod@dividend^0,c
  8367  008D54  0E08               	movlw	8
  8368  008D56  6E12               	movwf	___lbmod@counter^0,c
  8369  008D58  0E00               	movlw	0
  8370  008D5A  6E13               	movwf	___lbmod@rem^0,c
  8371  008D5C                     l12521:
  8372  008D5C  90D8               	bcf	status,0,c
  8373  008D5E  3411               	rlcf	___lbmod@dividend^0,w,c
  8374  008D60  3413               	rlcf	___lbmod@rem^0,w,c
  8375  008D62  6E13               	movwf	___lbmod@rem^0,c
  8376  008D64  90D8               	bcf	status,0,c
  8377  008D66  3611               	rlcf	___lbmod@dividend^0,f,c
  8378  008D68  5010               	movf	___lbmod@divisor^0,w,c
  8379  008D6A  5C13               	subwf	___lbmod@rem^0,w,c
  8380  008D6C  A0D8               	btfss	status,0,c
  8381  008D6E  D002               	goto	l12529
  8382  008D70  5010               	movf	___lbmod@divisor^0,w,c
  8383  008D72  5E13               	subwf	___lbmod@rem^0,f,c
  8384  008D74                     l12529:
  8385  008D74  2E12               	decfsz	___lbmod@counter^0,f,c
  8386  008D76  D7F2               	goto	l12521
  8387  008D78  5013               	movf	___lbmod@rem^0,w,c
  8388  008D7A  0012               	return		;funcret
  8389  008D7C                     __end_of___lbmod:
  8390                           	callstack 0
  8391                           
  8392 ;; *************** function ___awdiv *****************
  8393 ;; Defined at:
  8394 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awdiv.c"
  8395 ;; Parameters:    Size  Location     Type
  8396 ;;  dividend        2   19[COMRAM] int 
  8397 ;;  divisor         2   21[COMRAM] int 
  8398 ;; Auto vars:     Size  Location     Type
  8399 ;;  quotient        2   25[COMRAM] int 
  8400 ;;  sign            1   24[COMRAM] unsigned char 
  8401 ;;  counter         1   23[COMRAM] unsigned char 
  8402 ;; Return value:  Size  Location     Type
  8403 ;;                  2   19[COMRAM] int 
  8404 ;; Registers used:
  8405 ;;		wreg, status,2, status,0
  8406 ;; Tracked objects:
  8407 ;;		On entry : 0/0
  8408 ;;		On exit  : 0/0
  8409 ;;		Unchanged: 0/0
  8410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8411 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8412 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8414 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8415 ;;Total ram usage:        8 bytes
  8416 ;; Hardware stack levels used: 1
  8417 ;; Hardware stack levels required when called: 4
  8418 ;; This function calls:
  8419 ;;		Nothing
  8420 ;; This function is called by:
  8421 ;;		_controlSelectRemote
  8422 ;;		_controlSaveRemote
  8423 ;; This function uses a non-reentrant model
  8424 ;;
  8425                           
  8426                           	psect	text14
  8427  007944                     __ptext14:
  8428                           	callstack 0
  8429  007944                     ___awdiv:
  8430                           	callstack 23
  8431                           
  8432                           ;incstack = 0
  8433  007944  0E00               	movlw	0
  8434  007946  6E19               	movwf	___awdiv@sign^0,c
  8435  007948  AE17               	btfss	(___awdiv@divisor+1)^0,7,c
  8436  00794A  D006               	goto	l12457
  8437  00794C  6C16               	negf	___awdiv@divisor^0,c
  8438  00794E  1E17               	comf	(___awdiv@divisor+1)^0,f,c
  8439  007950  B0D8               	btfsc	status,0,c
  8440  007952  2A17               	incf	(___awdiv@divisor+1)^0,f,c
  8441  007954  0E01               	movlw	1
  8442  007956  6E19               	movwf	___awdiv@sign^0,c
  8443  007958                     l12457:
  8444  007958  AE15               	btfss	(___awdiv@dividend+1)^0,7,c
  8445  00795A  D006               	goto	l12463
  8446  00795C  6C14               	negf	___awdiv@dividend^0,c
  8447  00795E  1E15               	comf	(___awdiv@dividend+1)^0,f,c
  8448  007960  B0D8               	btfsc	status,0,c
  8449  007962  2A15               	incf	(___awdiv@dividend+1)^0,f,c
  8450  007964  0E01               	movlw	1
  8451  007966  1A19               	xorwf	___awdiv@sign^0,f,c
  8452  007968                     l12463:
  8453  007968  0E00               	movlw	0
  8454  00796A  6E1B               	movwf	(___awdiv@quotient+1)^0,c
  8455  00796C  0E00               	movlw	0
  8456  00796E  6E1A               	movwf	___awdiv@quotient^0,c
  8457  007970  5016               	movf	___awdiv@divisor^0,w,c
  8458  007972  1017               	iorwf	(___awdiv@divisor+1)^0,w,c
  8459  007974  B4D8               	btfsc	status,2,c
  8460  007976  D01C               	goto	l12485
  8461  007978  0E01               	movlw	1
  8462  00797A  6E18               	movwf	___awdiv@counter^0,c
  8463  00797C  D004               	goto	l12471
  8464  00797E                     l12469:
  8465  00797E  90D8               	bcf	status,0,c
  8466  007980  3616               	rlcf	___awdiv@divisor^0,f,c
  8467  007982  3617               	rlcf	(___awdiv@divisor+1)^0,f,c
  8468  007984  2A18               	incf	___awdiv@counter^0,f,c
  8469  007986                     l12471:
  8470  007986  AE17               	btfss	(___awdiv@divisor+1)^0,7,c
  8471  007988  D7FA               	goto	l12469
  8472  00798A                     u12100:
  8473  00798A  90D8               	bcf	status,0,c
  8474  00798C  361A               	rlcf	___awdiv@quotient^0,f,c
  8475  00798E  361B               	rlcf	(___awdiv@quotient+1)^0,f,c
  8476  007990  5016               	movf	___awdiv@divisor^0,w,c
  8477  007992  5C14               	subwf	___awdiv@dividend^0,w,c
  8478  007994  5017               	movf	(___awdiv@divisor+1)^0,w,c
  8479  007996  5815               	subwfb	(___awdiv@dividend+1)^0,w,c
  8480  007998  A0D8               	btfss	status,0,c
  8481  00799A  D005               	goto	l12481
  8482  00799C  5016               	movf	___awdiv@divisor^0,w,c
  8483  00799E  5E14               	subwf	___awdiv@dividend^0,f,c
  8484  0079A0  5017               	movf	(___awdiv@divisor+1)^0,w,c
  8485  0079A2  5A15               	subwfb	(___awdiv@dividend+1)^0,f,c
  8486  0079A4  801A               	bsf	___awdiv@quotient^0,0,c
  8487  0079A6                     l12481:
  8488  0079A6  90D8               	bcf	status,0,c
  8489  0079A8  3217               	rrcf	(___awdiv@divisor+1)^0,f,c
  8490  0079AA  3216               	rrcf	___awdiv@divisor^0,f,c
  8491  0079AC  2E18               	decfsz	___awdiv@counter^0,f,c
  8492  0079AE  D7ED               	goto	u12100
  8493  0079B0                     l12485:
  8494  0079B0  5019               	movf	___awdiv@sign^0,w,c
  8495  0079B2  B4D8               	btfsc	status,2,c
  8496  0079B4  D004               	goto	l12489
  8497  0079B6  6C1A               	negf	___awdiv@quotient^0,c
  8498  0079B8  1E1B               	comf	(___awdiv@quotient+1)^0,f,c
  8499  0079BA  B0D8               	btfsc	status,0,c
  8500  0079BC  2A1B               	incf	(___awdiv@quotient+1)^0,f,c
  8501  0079BE                     l12489:
  8502  0079BE  C01A  F014         	movff	___awdiv@quotient,?___awdiv
  8503  0079C2  C01B  F015         	movff	___awdiv@quotient+1,?___awdiv+1
  8504  0079C6  0012               	return		;funcret
  8505  0079C8                     __end_of___awdiv:
  8506                           	callstack 0
  8507                           
  8508 ;; *************** function _SetSegmentValueMain *****************
  8509 ;; Defined at:
  8510 ;;		line 104 in file "outputs_MC50.c"
  8511 ;; Parameters:    Size  Location     Type
  8512 ;;  d1              1    wreg     unsigned char 
  8513 ;;  d2              1   27[COMRAM] unsigned char 
  8514 ;; Auto vars:     Size  Location     Type
  8515 ;;  d1              1   28[COMRAM] unsigned char 
  8516 ;; Return value:  Size  Location     Type
  8517 ;;                  1    wreg      void 
  8518 ;; Registers used:
  8519 ;;		wreg, status,2
  8520 ;; Tracked objects:
  8521 ;;		On entry : 0/0
  8522 ;;		On exit  : 3F/0
  8523 ;;		Unchanged: 0/0
  8524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8525 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8526 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8528 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8529 ;;Total ram usage:        2 bytes
  8530 ;; Hardware stack levels used: 1
  8531 ;; Hardware stack levels required when called: 4
  8532 ;; This function calls:
  8533 ;;		Nothing
  8534 ;; This function is called by:
  8535 ;;		_sm_execute_main
  8536 ;;		_sm_execute_menuConfiguration
  8537 ;;		_load_New_Menu
  8538 ;;		_controlSelectRemote
  8539 ;;		_controlSaveRemote
  8540 ;; This function uses a non-reentrant model
  8541 ;;
  8542                           
  8543                           	psect	text15
  8544  008FC2                     __ptext15:
  8545                           	callstack 0
  8546  008FC2                     _SetSegmentValueMain:
  8547                           	callstack 22
  8548                           
  8549                           ;incstack = 0
  8550                           ;SetSegmentValueMain@d1 stored from wreg
  8551  008FC2  6E1D               	movwf	SetSegmentValueMain@d1^0,c
  8552                           
  8553                           ;outputs_MC50.c: 104: void SetSegmentValueMain(char d1, char d2);outputs_MC50.c: 105: {;
      +                          outputs_MC50.c: 106:     dispStruct.display_grp.value_display1=d1;
  8554  008FC4  C01D  F072         	movff	SetSegmentValueMain@d1,_dispStruct	;volatile
  8555                           
  8556                           ;outputs_MC50.c: 107:     dispStruct.display_grp.value_display2=d2;
  8557  008FC8  C01C  F073         	movff	SetSegmentValueMain@d2,_dispStruct+1	;volatile
  8558                           
  8559                           ;outputs_MC50.c: 108:     dispStruct.intermitentFreq=0;
  8560  008FCC  0E00               	movlw	0
  8561  008FCE  0100               	movlb	0	; () banked
  8562  008FD0  6F76               	movwf	(_dispStruct+4)& (0+255),b	;volatile
  8563  008FD2  0E00               	movlw	0
  8564  008FD4  6F75               	movwf	(_dispStruct+3)& (0+255),b	;volatile
  8565                           
  8566                           ; BSR set to: 0
  8567                           ;outputs_MC50.c: 109:     dispStruct.upFase=0;
  8568  008FD6  0E00               	movlw	0
  8569  008FD8  6F77               	movwf	(_dispStruct+5)& (0+255),b	;volatile
  8570                           
  8571                           ; BSR set to: 0
  8572  008FDA  0012               	return		;funcret
  8573  008FDC                     __end_of_SetSegmentValueMain:
  8574                           	callstack 0
  8575                           
  8576 ;; *************** function _ClearFlag_rfCMD *****************
  8577 ;; Defined at:
  8578 ;;		line 463 in file "inputs_MC50.c"
  8579 ;; Parameters:    Size  Location     Type
  8580 ;;		None
  8581 ;; Auto vars:     Size  Location     Type
  8582 ;;		None
  8583 ;; Return value:  Size  Location     Type
  8584 ;;                  1    wreg      void 
  8585 ;; Registers used:
  8586 ;;		wreg, status,2
  8587 ;; Tracked objects:
  8588 ;;		On entry : 0/1
  8589 ;;		On exit  : 0/0
  8590 ;;		Unchanged: 0/0
  8591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8595 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8596 ;;Total ram usage:        0 bytes
  8597 ;; Hardware stack levels used: 1
  8598 ;; Hardware stack levels required when called: 4
  8599 ;; This function calls:
  8600 ;;		Nothing
  8601 ;; This function is called by:
  8602 ;;		_sm_execute_menuConfiguration
  8603 ;;		_controlSelectRemote
  8604 ;;		_controlSaveRemote
  8605 ;; This function uses a non-reentrant model
  8606 ;;
  8607                           
  8608                           	psect	text16
  8609  009264                     __ptext16:
  8610                           	callstack 0
  8611  009264                     _ClearFlag_rfCMD:
  8612                           	callstack 23
  8613                           
  8614                           ;inputs_MC50.c: 464:     rfCMD.processed=1;
  8615                           
  8616                           ; BSR set to: 0
  8617                           ;incstack = 0
  8618  009264  0E01               	movlw	1
  8619  009266  6E45               	movwf	(_rfCMD+10)^0,c	;volatile
  8620  009268  0012               	return		;funcret
  8621  00926A                     __end_of_ClearFlag_rfCMD:
  8622                           	callstack 0
  8623                           
  8624 ;; *************** function _controlLearnDigit *****************
  8625 ;; Defined at:
  8626 ;;		line 1230 in file "sm_MenuConfiguration_MC50.c"
  8627 ;; Parameters:    Size  Location     Type
  8628 ;;		None
  8629 ;; Auto vars:     Size  Location     Type
  8630 ;;		None
  8631 ;; Return value:  Size  Location     Type
  8632 ;;                  1    wreg      void 
  8633 ;; Registers used:
  8634 ;;		wreg, status,2, status,0, cstack
  8635 ;; Tracked objects:
  8636 ;;		On entry : 3F/0
  8637 ;;		On exit  : 3E/0
  8638 ;;		Unchanged: 0/0
  8639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8643 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8644 ;;Total ram usage:        0 bytes
  8645 ;; Hardware stack levels used: 1
  8646 ;; Hardware stack levels required when called: 5
  8647 ;; This function calls:
  8648 ;;		_SetSegmentValueLearn
  8649 ;; This function is called by:
  8650 ;;		_sm_execute_menuConfiguration
  8651 ;; This function uses a non-reentrant model
  8652 ;;
  8653                           
  8654                           	psect	text17
  8655  008AE4                     __ptext17:
  8656                           	callstack 0
  8657  008AE4                     _controlLearnDigit:
  8658                           	callstack 23
  8659                           
  8660                           ; BSR set to: 0
  8661                           ;sm_MenuConfiguration_MC50.c: 1232:     if(ts_system.timeSinalizationDigit<=0 )
  8662                           
  8663                           ;incstack = 0
  8664  008AE4  0101               	movlb	1	; () banked
  8665  008AE6  BFA7               	btfsc	(_ts_system+13)& (0+255),7,b	;volatile
  8666  008AE8  D005               	goto	u13660
  8667  008AEA  51A7               	movf	(_ts_system+13)& (0+255),w,b	;volatile
  8668  008AEC  E112               	bnz	l3489
  8669  008AEE  05A6               	decf	(_ts_system+12)& (0+255),w,b	;volatile
  8670  008AF0  B0D8               	btfsc	status,0,c
  8671  008AF2  0012               	return	
  8672  008AF4                     u13660:
  8673                           
  8674                           ; BSR set to: 1
  8675                           ;sm_MenuConfiguration_MC50.c: 1233:     {;sm_MenuConfiguration_MC50.c: 1234:         ts_
      +                          system.timeSinalizationDigit=( 100/50);
  8676  008AF4  0E00               	movlw	0
  8677  008AF6  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
  8678  008AF8  0E02               	movlw	2
  8679  008AFA  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
  8680                           
  8681                           ; BSR set to: 1
  8682                           ;sm_MenuConfiguration_MC50.c: 1235:         if(var_sys.StateMotor==InClose)
  8683  008AFC  0E03               	movlw	3
  8684  008AFE  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
  8685  008B00  A4D8               	btfss	status,2,c
  8686  008B02  D004               	goto	l13843
  8687                           
  8688                           ; BSR set to: 1
  8689                           ;sm_MenuConfiguration_MC50.c: 1236:         {;sm_MenuConfiguration_MC50.c: 1237:        
      +                               SetSegmentValueLearn(Left);
  8690  008B04  0E00               	movlw	0
  8691  008B06  EC00  F035         	call	_SetSegmentValueLearn
  8692                           
  8693                           ;sm_MenuConfiguration_MC50.c: 1238:         }
  8694  008B0A  0012               	return	
  8695  008B0C                     l13843:
  8696                           
  8697                           ; BSR set to: 1
  8698                           ;sm_MenuConfiguration_MC50.c: 1240:         {;sm_MenuConfiguration_MC50.c: 1241:        
      +                               SetSegmentValueLearn(Rigth);
  8699  008B0C  0E01               	movlw	1
  8700  008B0E  EC00  F035         	call	_SetSegmentValueLearn
  8701  008B12                     l3489:
  8702  008B12  0012               	return		;funcret
  8703  008B14                     __end_of_controlLearnDigit:
  8704                           	callstack 0
  8705                           
  8706 ;; *************** function _SetSegmentValueLearn *****************
  8707 ;; Defined at:
  8708 ;;		line 124 in file "outputs_MC50.c"
  8709 ;; Parameters:    Size  Location     Type
  8710 ;;  direction       1    wreg     enum E10602
  8711 ;; Auto vars:     Size  Location     Type
  8712 ;;  direction       1   17[COMRAM] enum E10602
  8713 ;; Return value:  Size  Location     Type
  8714 ;;                  1    wreg      void 
  8715 ;; Registers used:
  8716 ;;		wreg, status,2, status,0
  8717 ;; Tracked objects:
  8718 ;;		On entry : 3F/1
  8719 ;;		On exit  : 3F/0
  8720 ;;		Unchanged: 0/0
  8721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8723 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8724 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8725 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8726 ;;Total ram usage:        3 bytes
  8727 ;; Hardware stack levels used: 1
  8728 ;; Hardware stack levels required when called: 4
  8729 ;; This function calls:
  8730 ;;		Nothing
  8731 ;; This function is called by:
  8732 ;;		_controlLearnDigit
  8733 ;; This function uses a non-reentrant model
  8734 ;;
  8735                           
  8736                           	psect	text18
  8737  006A00                     __ptext18:
  8738                           	callstack 0
  8739  006A00                     _SetSegmentValueLearn:
  8740                           	callstack 23
  8741                           
  8742                           ;incstack = 0
  8743                           ;SetSegmentValueLearn@direction stored from wreg
  8744  006A00  6E12               	movwf	SetSegmentValueLearn@direction^0,c
  8745                           
  8746                           ;outputs_MC50.c: 124: void SetSegmentValueLearn(Direction_en direction);outputs_MC50.c: 
      +                          125: {;outputs_MC50.c: 126:     dispStruct.intermitentFreq=0;
  8747  006A02  0E00               	movlw	0
  8748  006A04  0100               	movlb	0	; () banked
  8749  006A06  6F76               	movwf	(_dispStruct+4)& (0+255),b	;volatile
  8750  006A08  0E00               	movlw	0
  8751  006A0A  6F75               	movwf	(_dispStruct+3)& (0+255),b	;volatile
  8752                           
  8753                           ;outputs_MC50.c: 127:     dispStruct.upFase=0;
  8754  006A0C  0E00               	movlw	0
  8755  006A0E  6F77               	movwf	(_dispStruct+5)& (0+255),b	;volatile
  8756                           
  8757                           ;outputs_MC50.c: 128:     switch (direction)
  8758  006A10  D066               	goto	l12295
  8759  006A12                     l12241:
  8760                           
  8761                           ; BSR set to: 0
  8762                           ;outputs_MC50.c: 131:             if(dispStruct.display_grp.value_display1==sA && dispSt
      +                          ruct.display_grp.value_display2==dBlank)
  8763  006A12  0E1A               	movlw	26
  8764  006A14  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8765  006A16  A4D8               	btfss	status,2,c
  8766  006A18  D009               	goto	l12247
  8767                           
  8768                           ; BSR set to: 0
  8769  006A1A  0E20               	movlw	32
  8770  006A1C  1973               	xorwf	(_dispStruct+1)& (0+255),w,b	;volatile
  8771  006A1E  A4D8               	btfss	status,2,c
  8772  006A20  D005               	goto	l12247
  8773                           
  8774                           ; BSR set to: 0
  8775                           ;outputs_MC50.c: 132:             {;outputs_MC50.c: 133:                dispStruct.displ
      +                          ay_grp.value_display1=dBlank;
  8776  006A22  0E20               	movlw	32
  8777  006A24  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8778                           
  8779                           ;outputs_MC50.c: 134:                dispStruct.display_grp.value_display2=sA;
  8780  006A26  0E1A               	movlw	26
  8781  006A28  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8782                           
  8783                           ;outputs_MC50.c: 135:             }
  8784  006A2A  0012               	return	
  8785  006A2C                     l12247:
  8786                           
  8787                           ; BSR set to: 0
  8788  006A2C  0E20               	movlw	32
  8789  006A2E  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8790  006A30  A4D8               	btfss	status,2,c
  8791  006A32  D009               	goto	l12253
  8792                           
  8793                           ; BSR set to: 0
  8794  006A34  0E1D               	movlw	29
  8795  006A36  1973               	xorwf	(_dispStruct+1)& (0+255),w,b	;volatile
  8796  006A38  A4D8               	btfss	status,2,c
  8797  006A3A  D005               	goto	l12253
  8798                           
  8799                           ; BSR set to: 0
  8800                           ;outputs_MC50.c: 137:             {;outputs_MC50.c: 138:                dispStruct.displ
      +                          ay_grp.value_display1=sD;
  8801  006A3C  0E1D               	movlw	29
  8802  006A3E  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8803                           
  8804                           ;outputs_MC50.c: 139:                dispStruct.display_grp.value_display2=dBlank;
  8805  006A40  0E20               	movlw	32
  8806  006A42  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8807                           
  8808                           ;outputs_MC50.c: 140:             }
  8809  006A44  0012               	return	
  8810  006A46                     l12253:
  8811                           
  8812                           ; BSR set to: 0
  8813  006A46  0E1F               	movlw	31
  8814  006A48  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8815  006A4A  A4D8               	btfss	status,2,c
  8816  006A4C  D005               	goto	l12257
  8817                           
  8818                           ; BSR set to: 0
  8819                           ;outputs_MC50.c: 142:             {;outputs_MC50.c: 143:                dispStruct.displ
      +                          ay_grp.value_display1=sA;
  8820  006A4E  0E1A               	movlw	26
  8821  006A50  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8822                           
  8823                           ;outputs_MC50.c: 144:                dispStruct.display_grp.value_display2=dBlank;
  8824  006A52  0E20               	movlw	32
  8825  006A54  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8826                           
  8827                           ;outputs_MC50.c: 145:             }
  8828  006A56  0012               	return	
  8829  006A58                     l12257:
  8830                           
  8831                           ; BSR set to: 0
  8832  006A58  0E20               	movlw	32
  8833  006A5A  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8834  006A5C  A4D8               	btfss	status,2,c
  8835  006A5E  D002               	goto	l12261
  8836                           
  8837                           ; BSR set to: 0
  8838                           ;outputs_MC50.c: 147:             {;outputs_MC50.c: 148:                dispStruct.displ
      +                          ay_grp.value_display2++;
  8839  006A60  2B73               	incf	(_dispStruct+1)& (0+255),f,b	;volatile
  8840                           
  8841                           ;outputs_MC50.c: 149:             }
  8842  006A62  0012               	return	
  8843  006A64                     l12261:
  8844                           
  8845                           ; BSR set to: 0
  8846  006A64  0E20               	movlw	32
  8847  006A66  1973               	xorwf	(_dispStruct+1)& (0+255),w,b	;volatile
  8848  006A68  A4D8               	btfss	status,2,c
  8849  006A6A  D002               	goto	l12265
  8850                           
  8851                           ; BSR set to: 0
  8852                           ;outputs_MC50.c: 151:             {;outputs_MC50.c: 152:                dispStruct.displ
      +                          ay_grp.value_display1++;
  8853  006A6C  2B72               	incf	_dispStruct& (0+255),f,b	;volatile
  8854                           
  8855                           ;outputs_MC50.c: 153:             }
  8856  006A6E  0012               	return	
  8857  006A70                     l12265:
  8858                           
  8859                           ; BSR set to: 0
  8860                           ;outputs_MC50.c: 155:             {;outputs_MC50.c: 156:                dispStruct.displ
      +                          ay_grp.value_display1=sA;
  8861  006A70  0E1A               	movlw	26
  8862  006A72  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8863                           
  8864                           ;outputs_MC50.c: 157:                dispStruct.display_grp.value_display2=dBlank;
  8865  006A74  0E20               	movlw	32
  8866  006A76  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8867  006A78  0012               	return	
  8868  006A7A                     l12267:
  8869                           
  8870                           ; BSR set to: 0
  8871                           ;outputs_MC50.c: 161:             if(dispStruct.display_grp.value_display2==sA && dispSt
      +                          ruct.display_grp.value_display1==dBlank)
  8872  006A7A  0E1A               	movlw	26
  8873  006A7C  1973               	xorwf	(_dispStruct+1)& (0+255),w,b	;volatile
  8874  006A7E  A4D8               	btfss	status,2,c
  8875  006A80  D009               	goto	l12273
  8876                           
  8877                           ; BSR set to: 0
  8878  006A82  0E20               	movlw	32
  8879  006A84  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8880  006A86  A4D8               	btfss	status,2,c
  8881  006A88  D005               	goto	l12273
  8882                           
  8883                           ; BSR set to: 0
  8884                           ;outputs_MC50.c: 162:             {;outputs_MC50.c: 163:                dispStruct.displ
      +                          ay_grp.value_display1=sA;
  8885  006A8A  0E1A               	movlw	26
  8886  006A8C  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8887                           
  8888                           ;outputs_MC50.c: 164:                dispStruct.display_grp.value_display2=dBlank;
  8889  006A8E  0E20               	movlw	32
  8890  006A90  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8891                           
  8892                           ;outputs_MC50.c: 165:             }
  8893  006A92  0012               	return	
  8894  006A94                     l12273:
  8895                           
  8896                           ; BSR set to: 0
  8897  006A94  0E20               	movlw	32
  8898  006A96  1973               	xorwf	(_dispStruct+1)& (0+255),w,b	;volatile
  8899  006A98  A4D8               	btfss	status,2,c
  8900  006A9A  D009               	goto	l12279
  8901                           
  8902                           ; BSR set to: 0
  8903  006A9C  0E1D               	movlw	29
  8904  006A9E  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8905  006AA0  A4D8               	btfss	status,2,c
  8906  006AA2  D005               	goto	l12279
  8907                           
  8908                           ; BSR set to: 0
  8909                           ;outputs_MC50.c: 167:             {;outputs_MC50.c: 168:                dispStruct.displ
      +                          ay_grp.value_display1=dBlank;
  8910  006AA4  0E20               	movlw	32
  8911  006AA6  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8912                           
  8913                           ;outputs_MC50.c: 169:                dispStruct.display_grp.value_display2=sD;
  8914  006AA8  0E1D               	movlw	29
  8915  006AAA  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8916                           
  8917                           ;outputs_MC50.c: 170:             }
  8918  006AAC  0012               	return	
  8919  006AAE                     l12279:
  8920                           
  8921                           ; BSR set to: 0
  8922  006AAE  0E1A               	movlw	26
  8923  006AB0  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8924  006AB2  A4D8               	btfss	status,2,c
  8925  006AB4  D003               	goto	l12283
  8926                           
  8927                           ; BSR set to: 0
  8928                           ;outputs_MC50.c: 172:             {;outputs_MC50.c: 173:                dispStruct.displ
      +                          ay_grp.value_display1=sF;
  8929  006AB6  0E1F               	movlw	31
  8930  006AB8  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8931                           
  8932                           ;outputs_MC50.c: 174:             }
  8933  006ABA  0012               	return	
  8934  006ABC                     l12283:
  8935                           
  8936                           ; BSR set to: 0
  8937  006ABC  0E20               	movlw	32
  8938  006ABE  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8939  006AC0  A4D8               	btfss	status,2,c
  8940  006AC2  D002               	goto	l12287
  8941                           
  8942                           ; BSR set to: 0
  8943                           ;outputs_MC50.c: 176:             {;outputs_MC50.c: 177:                dispStruct.displ
      +                          ay_grp.value_display2--;
  8944  006AC4  0773               	decf	(_dispStruct+1)& (0+255),f,b	;volatile
  8945                           
  8946                           ;outputs_MC50.c: 178:             }
  8947  006AC6  0012               	return	
  8948  006AC8                     l12287:
  8949                           
  8950                           ; BSR set to: 0
  8951  006AC8  0E20               	movlw	32
  8952  006ACA  1973               	xorwf	(_dispStruct+1)& (0+255),w,b	;volatile
  8953  006ACC  A4D8               	btfss	status,2,c
  8954  006ACE  D002               	goto	l12291
  8955                           
  8956                           ; BSR set to: 0
  8957                           ;outputs_MC50.c: 180:             {;outputs_MC50.c: 181:                dispStruct.displ
      +                          ay_grp.value_display1--;
  8958  006AD0  0772               	decf	_dispStruct& (0+255),f,b	;volatile
  8959                           
  8960                           ;outputs_MC50.c: 182:             }
  8961  006AD2  0012               	return	
  8962  006AD4                     l12291:
  8963                           
  8964                           ; BSR set to: 0
  8965                           ;outputs_MC50.c: 184:             {;outputs_MC50.c: 185:                dispStruct.displ
      +                          ay_grp.value_display1=sA;
  8966  006AD4  0E1A               	movlw	26
  8967  006AD6  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8968                           
  8969                           ;outputs_MC50.c: 186:                dispStruct.display_grp.value_display2=dBlank;
  8970  006AD8  0E20               	movlw	32
  8971  006ADA  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8972  006ADC  0012               	return	
  8973  006ADE                     l12295:
  8974                           
  8975                           ; BSR set to: 0
  8976  006ADE  5012               	movf	SetSegmentValueLearn@direction^0,w,c
  8977  006AE0  6E10               	movwf	??_SetSegmentValueLearn^0,c
  8978  006AE2  6A11               	clrf	(??_SetSegmentValueLearn+1)^0,c
  8979                           
  8980                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8981                           ; Switch size 1, requested type "simple"
  8982                           ; Number of cases is 1, Range of values is 0 to 0
  8983                           ; switch strategies available:
  8984                           ; Name         Instructions Cycles
  8985                           ; simple_byte            4     3 (average)
  8986                           ;	Chosen strategy is simple_byte
  8987  006AE4  5011               	movf	(??_SetSegmentValueLearn+1)^0,w,c
  8988  006AE6  0A00               	xorlw	0	; case 0
  8989  006AE8  A4D8               	btfss	status,2,c
  8990  006AEA  0012               	return	
  8991                           
  8992                           ; BSR set to: 0
  8993                           ; Switch size 1, requested type "simple"
  8994                           ; Number of cases is 2, Range of values is 0 to 1
  8995                           ; switch strategies available:
  8996                           ; Name         Instructions Cycles
  8997                           ; simple_byte            7     4 (average)
  8998                           ;	Chosen strategy is simple_byte
  8999  006AEC  5010               	movf	??_SetSegmentValueLearn^0,w,c
  9000  006AEE  0A00               	xorlw	0	; case 0
  9001  006AF0  B4D8               	btfsc	status,2,c
  9002  006AF2  D7C3               	goto	l12267
  9003  006AF4  0A01               	xorlw	1	; case 1
  9004  006AF6  A4D8               	btfss	status,2,c
  9005  006AF8  0012               	return	
  9006  006AFA  D78B               	goto	l12241
  9007  006AFC                     __end_of_SetSegmentValueLearn:
  9008                           	callstack 0
  9009                           
  9010 ;; *************** function ___lldiv *****************
  9011 ;; Defined at:
  9012 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\__lldiv.c"
  9013 ;; Parameters:    Size  Location     Type
  9014 ;;  dividend        4   15[COMRAM] unsigned long 
  9015 ;;  divisor         4   19[COMRAM] unsigned long 
  9016 ;; Auto vars:     Size  Location     Type
  9017 ;;  quotient        4   23[COMRAM] unsigned long 
  9018 ;;  counter         1   27[COMRAM] unsigned char 
  9019 ;; Return value:  Size  Location     Type
  9020 ;;                  4   15[COMRAM] unsigned long 
  9021 ;; Registers used:
  9022 ;;		wreg, status,2, status,0
  9023 ;; Tracked objects:
  9024 ;;		On entry : 0/1
  9025 ;;		On exit  : 0/0
  9026 ;;		Unchanged: 0/0
  9027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9028 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9029 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9031 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9032 ;;Total ram usage:       13 bytes
  9033 ;; Hardware stack levels used: 1
  9034 ;; Hardware stack levels required when called: 4
  9035 ;; This function calls:
  9036 ;;		Nothing
  9037 ;; This function is called by:
  9038 ;;		_sm_execute_menuConfiguration
  9039 ;; This function uses a non-reentrant model
  9040 ;;
  9041                           
  9042                           	psect	text19
  9043  007A4C                     __ptext19:
  9044                           	callstack 0
  9045  007A4C                     ___lldiv:
  9046                           	callstack 24
  9047                           
  9048                           ; BSR set to: 0
  9049                           ;incstack = 0
  9050  007A4C  0E00               	movlw	0
  9051  007A4E  6E18               	movwf	___lldiv@quotient^0,c
  9052  007A50  0E00               	movlw	0
  9053  007A52  6E19               	movwf	(___lldiv@quotient+1)^0,c
  9054  007A54  0E00               	movlw	0
  9055  007A56  6E1A               	movwf	(___lldiv@quotient+2)^0,c
  9056  007A58  0E00               	movlw	0
  9057  007A5A  6E1B               	movwf	(___lldiv@quotient+3)^0,c
  9058  007A5C  5014               	movf	___lldiv@divisor^0,w,c
  9059  007A5E  1015               	iorwf	(___lldiv@divisor+1)^0,w,c
  9060  007A60  1016               	iorwf	(___lldiv@divisor+2)^0,w,c
  9061  007A62  1017               	iorwf	(___lldiv@divisor+3)^0,w,c
  9062  007A64  B4D8               	btfsc	status,2,c
  9063  007A66  D02A               	goto	l3675
  9064  007A68  0E01               	movlw	1
  9065  007A6A  6E1C               	movwf	___lldiv@counter^0,c
  9066  007A6C  D006               	goto	l13861
  9067  007A6E                     l13859:
  9068  007A6E  90D8               	bcf	status,0,c
  9069  007A70  3614               	rlcf	___lldiv@divisor^0,f,c
  9070  007A72  3615               	rlcf	(___lldiv@divisor+1)^0,f,c
  9071  007A74  3616               	rlcf	(___lldiv@divisor+2)^0,f,c
  9072  007A76  3617               	rlcf	(___lldiv@divisor+3)^0,f,c
  9073  007A78  2A1C               	incf	___lldiv@counter^0,f,c
  9074  007A7A                     l13861:
  9075  007A7A  AE17               	btfss	(___lldiv@divisor+3)^0,7,c
  9076  007A7C  D7F8               	goto	l13859
  9077  007A7E                     u13700:
  9078  007A7E  90D8               	bcf	status,0,c
  9079  007A80  3618               	rlcf	___lldiv@quotient^0,f,c
  9080  007A82  3619               	rlcf	(___lldiv@quotient+1)^0,f,c
  9081  007A84  361A               	rlcf	(___lldiv@quotient+2)^0,f,c
  9082  007A86  361B               	rlcf	(___lldiv@quotient+3)^0,f,c
  9083  007A88  5014               	movf	___lldiv@divisor^0,w,c
  9084  007A8A  5C10               	subwf	___lldiv@dividend^0,w,c
  9085  007A8C  5015               	movf	(___lldiv@divisor+1)^0,w,c
  9086  007A8E  5811               	subwfb	(___lldiv@dividend+1)^0,w,c
  9087  007A90  5016               	movf	(___lldiv@divisor+2)^0,w,c
  9088  007A92  5812               	subwfb	(___lldiv@dividend+2)^0,w,c
  9089  007A94  5017               	movf	(___lldiv@divisor+3)^0,w,c
  9090  007A96  5813               	subwfb	(___lldiv@dividend+3)^0,w,c
  9091  007A98  A0D8               	btfss	status,0,c
  9092  007A9A  D009               	goto	l13871
  9093  007A9C  5014               	movf	___lldiv@divisor^0,w,c
  9094  007A9E  5E10               	subwf	___lldiv@dividend^0,f,c
  9095  007AA0  5015               	movf	(___lldiv@divisor+1)^0,w,c
  9096  007AA2  5A11               	subwfb	(___lldiv@dividend+1)^0,f,c
  9097  007AA4  5016               	movf	(___lldiv@divisor+2)^0,w,c
  9098  007AA6  5A12               	subwfb	(___lldiv@dividend+2)^0,f,c
  9099  007AA8  5017               	movf	(___lldiv@divisor+3)^0,w,c
  9100  007AAA  5A13               	subwfb	(___lldiv@dividend+3)^0,f,c
  9101  007AAC  8018               	bsf	___lldiv@quotient^0,0,c
  9102  007AAE                     l13871:
  9103  007AAE  90D8               	bcf	status,0,c
  9104  007AB0  3217               	rrcf	(___lldiv@divisor+3)^0,f,c
  9105  007AB2  3216               	rrcf	(___lldiv@divisor+2)^0,f,c
  9106  007AB4  3215               	rrcf	(___lldiv@divisor+1)^0,f,c
  9107  007AB6  3214               	rrcf	___lldiv@divisor^0,f,c
  9108  007AB8  2E1C               	decfsz	___lldiv@counter^0,f,c
  9109  007ABA  D7E1               	goto	u13700
  9110  007ABC                     l3675:
  9111  007ABC  C018  F010         	movff	___lldiv@quotient,?___lldiv
  9112  007AC0  C019  F011         	movff	___lldiv@quotient+1,?___lldiv+1
  9113  007AC4  C01A  F012         	movff	___lldiv@quotient+2,?___lldiv+2
  9114  007AC8  C01B  F013         	movff	___lldiv@quotient+3,?___lldiv+3
  9115  007ACC  0012               	return		;funcret
  9116  007ACE                     __end_of___lldiv:
  9117                           	callstack 0
  9118                           
  9119 ;; *************** function _sm_execute_ControlGate *****************
  9120 ;; Defined at:
  9121 ;;		line 128 in file "sm_ControlGate_MC50.c"
  9122 ;; Parameters:    Size  Location     Type
  9123 ;;  psm             2   15[BANK0 ] PTR struct .
  9124 ;;		 -> controlGate_stateMachine(11), 
  9125 ;; Auto vars:     Size  Location     Type
  9126 ;;  typeOpenOrde    1   19[BANK0 ] enum E10372
  9127 ;; Return value:  Size  Location     Type
  9128 ;;                  1    wreg      void 
  9129 ;; Registers used:
  9130 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  9131 ;; Tracked objects:
  9132 ;;		On entry : 3F/0
  9133 ;;		On exit  : 0/0
  9134 ;;		Unchanged: 0/0
  9135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9136 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9137 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9138 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9139 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9140 ;;Total ram usage:        5 bytes
  9141 ;; Hardware stack levels used: 1
  9142 ;; Hardware stack levels required when called: 15
  9143 ;; This function calls:
  9144 ;;		_GetOpenOrder
  9145 ;;		_SetSegmentValueIntermitent
  9146 ;;		_WaitPreFlash
  9147 ;;		_actionZone_Closed
  9148 ;;		_actionZone_Closing
  9149 ;;		_actionZone_Opened
  9150 ;;		_actionZone_Opening
  9151 ;;		_sm_execute_ControlLearning
  9152 ;;		_sm_send_event
  9153 ;; This function is called by:
  9154 ;;		_main
  9155 ;; This function uses a non-reentrant model
  9156 ;;
  9157                           
  9158                           	psect	text20
  9159  003694                     __ptext20:
  9160                           	callstack 0
  9161  003694                     _sm_execute_ControlGate:
  9162                           	callstack 15
  9163                           
  9164                           ; BSR set to: 0
  9165                           ;sm_ControlGate_MC50.c: 129:     TypeCMD typeOpenOrder;;sm_ControlGate_MC50.c: 133:     
      +                          if ( (main_stateMachine.current_state == st_MenuConfiguration) && (menuConfiguration_sta
      +                          teMachine.current_state != st_LearningMode) )
  9166                           
  9167                           ;incstack = 0
  9168  003694  0101               	movlb	1	; () banked
  9169  003696  05ED               	decf	_main_stateMachine& (0+255),w,b
  9170  003698  11EE               	iorwf	(_main_stateMachine+1)& (0+255),w,b
  9171  00369A  A4D8               	btfss	status,2,c
  9172  00369C  D006               	goto	l23113
  9173                           
  9174                           ; BSR set to: 1
  9175  00369E  0E06               	movlw	6
  9176  0036A0  0102               	movlb	2	; () banked
  9177  0036A2  19BD               	xorwf	_menuConfiguration_stateMachine& (0+255),w,b
  9178  0036A4  11BE               	iorwf	(_menuConfiguration_stateMachine+1)& (0+255),w,b
  9179  0036A6  A4D8               	btfss	status,2,c
  9180  0036A8  0012               	return	
  9181  0036AA                     l23113:
  9182                           
  9183                           ;sm_ControlGate_MC50.c: 137:         if (var_sys.preflashingcontrol == YES){
  9184  0036AA  0101               	movlb	1	; () banked
  9185  0036AC  051D               	decf	(_var_sys+29)& (0+255),w,b	;volatile
  9186  0036AE  A4D8               	btfss	status,2,c
  9187  0036B0  D0CE               	goto	l23187
  9188                           
  9189                           ; BSR set to: 1
  9190                           ;sm_ControlGate_MC50.c: 139:         WaitPreFlash();
  9191  0036B2  EC86  F03F         	call	_WaitPreFlash	;wreg free
  9192  0036B6  D0CB               	goto	l23187
  9193  0036B8                     l23117:
  9194                           
  9195                           ; BSR set to: 0
  9196                           ;sm_ControlGate_MC50.c: 145:         {;sm_ControlGate_MC50.c: 148:             if (psm->
      +                          last_event == ev_GateClosed) {
  9197  0036B8  EE20 F004          	lfsr	2,4
  9198  0036BC  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9199  0036BE  26D9               	addwf	fsr2l,f,c
  9200  0036C0  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9201  0036C2  22DA               	addwfc	fsr2h,f,c
  9202  0036C4  0E0A               	movlw	10
  9203  0036C6  18DE               	xorwf	postinc2,w,c
  9204  0036C8  10DE               	iorwf	postinc2,w,c
  9205  0036CA  A4D8               	btfss	status,2,c
  9206  0036CC  D006               	goto	l23121
  9207  0036CE                     u28590:
  9208                           
  9209                           ; BSR set to: 0
  9210                           ;sm_ControlGate_MC50.c: 149:                 psm->current_state = st_Closed;
  9211  0036CE  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9212  0036D2  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9213  0036D6  0E01               	movlw	1
  9214  0036D8  D0B5               	goto	L55
  9215  0036DA                     l23121:
  9216                           
  9217                           ; BSR set to: 0
  9218  0036DA  EE20 F004          	lfsr	2,4
  9219  0036DE  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9220  0036E0  26D9               	addwf	fsr2l,f,c
  9221  0036E2  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9222  0036E4  22DA               	addwfc	fsr2h,f,c
  9223  0036E6  0E0B               	movlw	11
  9224  0036E8  18DE               	xorwf	postinc2,w,c
  9225  0036EA  10DE               	iorwf	postinc2,w,c
  9226  0036EC  A4D8               	btfss	status,2,c
  9227  0036EE  D0CF               	goto	l23189
  9228  0036F0  D038               	goto	u28660
  9229  0036F2                     l23125:
  9230                           
  9231                           ; BSR set to: 0
  9232                           ;sm_ControlGate_MC50.c: 160:         {;sm_ControlGate_MC50.c: 161:             if (psm->
      +                          last_event == ev_OpenGate) {
  9233  0036F2  EE20 F004          	lfsr	2,4
  9234  0036F6  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9235  0036F8  26D9               	addwf	fsr2l,f,c
  9236  0036FA  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9237  0036FC  22DA               	addwfc	fsr2h,f,c
  9238  0036FE  0E0C               	movlw	12
  9239  003700  18DE               	xorwf	postinc2,w,c
  9240  003702  10DE               	iorwf	postinc2,w,c
  9241  003704  A4D8               	btfss	status,2,c
  9242  003706  D072               	goto	l23173
  9243  003708                     u28610:
  9244                           
  9245                           ; BSR set to: 0
  9246                           ;sm_ControlGate_MC50.c: 162:                 psm->current_state = st_Opening;
  9247  003708  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9248  00370C  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9249  003710  0E02               	movlw	2
  9250  003712  D098               	goto	L55
  9251  003714                     l23133:
  9252                           
  9253                           ; BSR set to: 0
  9254                           ;sm_ControlGate_MC50.c: 169:         {;sm_ControlGate_MC50.c: 170:             if (psm->
      +                          last_event == ev_StopGate) {
  9255  003714  EE20 F004          	lfsr	2,4
  9256  003718  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9257  00371A  26D9               	addwf	fsr2l,f,c
  9258  00371C  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9259  00371E  22DA               	addwfc	fsr2h,f,c
  9260  003720  0E0D               	movlw	13
  9261  003722  18DE               	xorwf	postinc2,w,c
  9262  003724  10DE               	iorwf	postinc2,w,c
  9263  003726  B4D8               	btfsc	status,2,c
  9264  003728  D01C               	goto	u28660
  9265                           
  9266                           ; BSR set to: 0
  9267                           
  9268                           ;sm_ControlGate_MC50.c: 172:             } else if (psm->last_event == ev_CloseGate) {
  9269                           
  9270                           ; BSR set to: 0
  9271                           ;sm_ControlGate_MC50.c: 171:                 psm->current_state = st_Opened;
  9272  00372A  EE20 F004          	lfsr	2,4
  9273  00372E  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9274  003730  26D9               	addwf	fsr2l,f,c
  9275  003732  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9276  003734  22DA               	addwfc	fsr2h,f,c
  9277  003736  0E0E               	movlw	14
  9278  003738  18DE               	xorwf	postinc2,w,c
  9279  00373A  10DE               	iorwf	postinc2,w,c
  9280  00373C  A4D8               	btfss	status,2,c
  9281  00373E  D02D               	goto	L129
  9282  003740                     u28640:
  9283                           
  9284                           ; BSR set to: 0
  9285                           ;sm_ControlGate_MC50.c: 173:                 psm->current_state = st_Closing;
  9286  003740  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9287  003744  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9288  003748  0E03               	movlw	3
  9289  00374A  D07C               	goto	L55
  9290  00374C                     l23145:
  9291                           
  9292                           ; BSR set to: 0
  9293                           ;sm_ControlGate_MC50.c: 180:         {;sm_ControlGate_MC50.c: 181:             if (psm->
      +                          last_event == ev_StopGate) {
  9294  00374C  EE20 F004          	lfsr	2,4
  9295  003750  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9296  003752  26D9               	addwf	fsr2l,f,c
  9297  003754  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9298  003756  22DA               	addwfc	fsr2h,f,c
  9299  003758  0E0D               	movlw	13
  9300  00375A  18DE               	xorwf	postinc2,w,c
  9301  00375C  10DE               	iorwf	postinc2,w,c
  9302  00375E  A4D8               	btfss	status,2,c
  9303  003760  D006               	goto	l23149
  9304  003762                     u28660:
  9305                           
  9306                           ; BSR set to: 0
  9307                           ;sm_ControlGate_MC50.c: 182:                 psm->current_state = st_Opened;
  9308  003762  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9309  003766  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9310  00376A  0E04               	movlw	4
  9311  00376C  D06B               	goto	L55
  9312  00376E                     l23149:
  9313                           
  9314                           ; BSR set to: 0
  9315  00376E  EE20 F004          	lfsr	2,4
  9316  003772  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9317  003774  26D9               	addwf	fsr2l,f,c
  9318  003776  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9319  003778  22DA               	addwfc	fsr2h,f,c
  9320  00377A  0E0F               	movlw	15
  9321  00377C  18DE               	xorwf	postinc2,w,c
  9322  00377E  10DE               	iorwf	postinc2,w,c
  9323  003780  B4D8               	btfsc	status,2,c
  9324  003782  D7A5               	goto	u28590
  9325                           
  9326                           ; BSR set to: 0
  9327                           
  9328                           ;sm_ControlGate_MC50.c: 185:             } else if (psm->last_event == ev_OpenGate) {
  9329                           
  9330                           ; BSR set to: 0
  9331                           ;sm_ControlGate_MC50.c: 184:                 psm->current_state = st_Closed;
  9332  003784  EE20 F004          	lfsr	2,4
  9333  003788  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9334  00378A  26D9               	addwf	fsr2l,f,c
  9335  00378C  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9336  00378E  22DA               	addwfc	fsr2h,f,c
  9337  003790  0E0C               	movlw	12
  9338  003792  18DE               	xorwf	postinc2,w,c
  9339  003794  10DE               	iorwf	postinc2,w,c
  9340  003796  B4D8               	btfsc	status,2,c
  9341  003798  D7B7               	goto	u28610
  9342  00379A                     L129:
  9343                           
  9344                           ; BSR set to: 0
  9345                           
  9346                           ;sm_ControlGate_MC50.c: 187:             } else if (psm->last_event == ev_ErrorGate) {
  9347                           
  9348                           ; BSR set to: 0
  9349                           ;sm_ControlGate_MC50.c: 186:                 psm->current_state = st_Opening;
  9350  00379A  EE20 F004          	lfsr	2,4
  9351  00379E  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9352  0037A0  26D9               	addwf	fsr2l,f,c
  9353  0037A2  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9354  0037A4  22DA               	addwfc	fsr2h,f,c
  9355  0037A6  0E10               	movlw	16
  9356  0037A8  D044               	goto	L126
  9357  0037AA                     l23161:
  9358                           
  9359                           ; BSR set to: 0
  9360                           ;sm_ControlGate_MC50.c: 193:         {;sm_ControlGate_MC50.c: 194:             if (psm->
      +                          last_event == ev_CloseGate) {
  9361  0037AA  EE20 F004          	lfsr	2,4
  9362  0037AE  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9363  0037B0  26D9               	addwf	fsr2l,f,c
  9364  0037B2  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9365  0037B4  22DA               	addwfc	fsr2h,f,c
  9366  0037B6  0E0E               	movlw	14
  9367  0037B8  18DE               	xorwf	postinc2,w,c
  9368  0037BA  10DE               	iorwf	postinc2,w,c
  9369  0037BC  B4D8               	btfsc	status,2,c
  9370  0037BE  D7C0               	goto	u28640
  9371                           
  9372                           ; BSR set to: 0
  9373                           
  9374                           ;sm_ControlGate_MC50.c: 196:             } else if (psm->last_event == ev_OpenGate) {
  9375                           
  9376                           ; BSR set to: 0
  9377                           ;sm_ControlGate_MC50.c: 195:                 psm->current_state = st_Closing;
  9378  0037C0  EE20 F004          	lfsr	2,4
  9379  0037C4  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9380  0037C6  26D9               	addwf	fsr2l,f,c
  9381  0037C8  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9382  0037CA  22DA               	addwfc	fsr2h,f,c
  9383  0037CC  0E0C               	movlw	12
  9384  0037CE  18DE               	xorwf	postinc2,w,c
  9385  0037D0  10DE               	iorwf	postinc2,w,c
  9386  0037D2  B4D8               	btfsc	status,2,c
  9387  0037D4  D799               	goto	u28610
  9388                           
  9389                           ; BSR set to: 0
  9390                           
  9391                           ;sm_ControlGate_MC50.c: 198:             } else if (psm->last_event == ev_ErrorGate) {
  9392                           
  9393                           ; BSR set to: 0
  9394                           ;sm_ControlGate_MC50.c: 197:                 psm->current_state = st_Opening;
  9395  0037D6  EE20 F004          	lfsr	2,4
  9396  0037DA  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9397  0037DC  26D9               	addwf	fsr2l,f,c
  9398  0037DE  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9399  0037E0  22DA               	addwfc	fsr2h,f,c
  9400  0037E2  0E10               	movlw	16
  9401  0037E4  18DE               	xorwf	postinc2,w,c
  9402  0037E6  10DE               	iorwf	postinc2,w,c
  9403  0037E8  B4D8               	btfsc	status,2,c
  9404  0037EA  D027               	goto	L127
  9405  0037EC                     l23173:
  9406                           
  9407                           ; BSR set to: 0
  9408  0037EC  EE20 F004          	lfsr	2,4
  9409  0037F0  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9410  0037F2  26D9               	addwf	fsr2l,f,c
  9411  0037F4  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9412  0037F6  22DA               	addwfc	fsr2h,f,c
  9413  0037F8  0E14               	movlw	20
  9414  0037FA  18DE               	xorwf	postinc2,w,c
  9415  0037FC  10DE               	iorwf	postinc2,w,c
  9416  0037FE  A4D8               	btfss	status,2,c
  9417  003800  D046               	goto	l23189
  9418                           
  9419                           ; BSR set to: 0
  9420                           ;sm_ControlGate_MC50.c: 205:                 psm->current_state = st_Learning;
  9421  003802  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9422  003806  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9423  00380A  0E05               	movlw	5
  9424  00380C  D01B               	goto	L55
  9425  00380E                     l23177:
  9426                           
  9427                           ; BSR set to: 0
  9428                           ;sm_ControlGate_MC50.c: 217:         {;sm_ControlGate_MC50.c: 218:             if (psm->
      +                          last_event == ev_LearningComplete) {
  9429  00380E  EE20 F004          	lfsr	2,4
  9430  003812  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9431  003814  26D9               	addwf	fsr2l,f,c
  9432  003816  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9433  003818  22DA               	addwfc	fsr2h,f,c
  9434  00381A  0E13               	movlw	19
  9435  00381C  18DE               	xorwf	postinc2,w,c
  9436  00381E  10DE               	iorwf	postinc2,w,c
  9437  003820  B4D8               	btfsc	status,2,c
  9438  003822  D755               	goto	u28590
  9439                           
  9440                           ; BSR set to: 0
  9441                           
  9442                           ;sm_ControlGate_MC50.c: 220:             } else if (psm->last_event == ev_ErrorLearning)
      +                           {
  9443                           
  9444                           ; BSR set to: 0
  9445                           ;sm_ControlGate_MC50.c: 219:                 psm->current_state = st_Closed;
  9446  003824  EE20 F004          	lfsr	2,4
  9447  003828  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9448  00382A  26D9               	addwf	fsr2l,f,c
  9449  00382C  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9450  00382E  22DA               	addwfc	fsr2h,f,c
  9451  003830  0E12               	movlw	18
  9452  003832                     L126:
  9453  003832  18DE               	xorwf	postinc2,w,c
  9454  003834  10DE               	iorwf	postinc2,w,c
  9455  003836  A4D8               	btfss	status,2,c
  9456  003838  D02A               	goto	l23189
  9457  00383A                     L127:
  9458                           
  9459                           ; BSR set to: 0
  9460                           ;sm_ControlGate_MC50.c: 221:                 psm->current_state = st_Idle;
  9461  00383A  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9462  00383E  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9463  003842  0E00               	movlw	0
  9464  003844                     L55:
  9465  003844  6EDE               	movwf	postinc2,c
  9466  003846  0E00               	movlw	0
  9467  003848  6EDD               	movwf	postdec2,c
  9468  00384A  D021               	goto	l23189
  9469  00384C                     l2648:
  9470                           
  9471                           ; BSR set to: 0
  9472  00384C  D7FF               	goto	l2648
  9473  00384E                     l23187:
  9474                           
  9475                           ; BSR set to: 1
  9476  00384E  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9477  003852  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9478  003856  50DF               	movf	indf2,w,c
  9479  003858  0100               	movlb	0	; () banked
  9480  00385A  6FE9               	movwf	??_sm_execute_ControlGate& (0+255),b
  9481  00385C  6BEA               	clrf	(??_sm_execute_ControlGate+1)& (0+255),b
  9482                           
  9483                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9484                           ; Switch size 1, requested type "simple"
  9485                           ; Number of cases is 1, Range of values is 0 to 0
  9486                           ; switch strategies available:
  9487                           ; Name         Instructions Cycles
  9488                           ; simple_byte            4     3 (average)
  9489                           ;	Chosen strategy is simple_byte
  9490  00385E  51EA               	movf	(??_sm_execute_ControlGate+1)& (0+255),w,b
  9491  003860  0A00               	xorlw	0	; case 0
  9492  003862  A4D8               	btfss	status,2,c
  9493  003864  D7F3               	goto	l2648
  9494                           
  9495                           ; BSR set to: 0
  9496                           ; Switch size 1, requested type "simple"
  9497                           ; Number of cases is 6, Range of values is 0 to 5
  9498                           ; switch strategies available:
  9499                           ; Name         Instructions Cycles
  9500                           ; simple_byte           19    10 (average)
  9501                           ;	Chosen strategy is simple_byte
  9502  003866  51E9               	movf	??_sm_execute_ControlGate& (0+255),w,b
  9503  003868  0A00               	xorlw	0	; case 0
  9504  00386A  B4D8               	btfsc	status,2,c
  9505  00386C  D725               	goto	l23117
  9506  00386E  0A01               	xorlw	1	; case 1
  9507  003870  B4D8               	btfsc	status,2,c
  9508  003872  D73F               	goto	l23125
  9509  003874  0A03               	xorlw	3	; case 2
  9510  003876  B4D8               	btfsc	status,2,c
  9511  003878  D74D               	goto	l23133
  9512  00387A  0A01               	xorlw	1	; case 3
  9513  00387C  B4D8               	btfsc	status,2,c
  9514  00387E  D766               	goto	l23145
  9515  003880  0A07               	xorlw	7	; case 4
  9516  003882  B4D8               	btfsc	status,2,c
  9517  003884  D792               	goto	l23161
  9518  003886  0A01               	xorlw	1	; case 5
  9519  003888  B4D8               	btfsc	status,2,c
  9520  00388A  D7C1               	goto	l23177
  9521  00388C  D7DF               	goto	l2648
  9522  00388E                     l23189:
  9523                           
  9524                           ; BSR set to: 0
  9525                           ;sm_ControlGate_MC50.c: 234:     sm_send_event(&controlGate_stateMachine, ev_NULL);
  9526  00388E  0EE2               	movlw	low _controlGate_stateMachine
  9527  003890  6E12               	movwf	sm_send_event@psm^0,c
  9528  003892  0E01               	movlw	high _controlGate_stateMachine
  9529  003894  6E13               	movwf	(sm_send_event@psm+1)^0,c
  9530  003896  0E00               	movlw	0
  9531  003898  6E15               	movwf	(sm_send_event@event+1)^0,c
  9532  00389A  0E00               	movlw	0
  9533  00389C  6E14               	movwf	sm_send_event@event^0,c
  9534  00389E  EC29  F041         	call	_sm_send_event	;wreg free
  9535                           
  9536                           ;sm_ControlGate_MC50.c: 239:     switch ((sm_state_ControlGate_t) psm->current_state) {
  9537  0038A2  D07D               	goto	l23253
  9538  0038A4                     l23191:
  9539                           
  9540                           ; BSR set to: 0
  9541                           ;sm_ControlGate_MC50.c: 241:         {;sm_ControlGate_MC50.c: 244:             ts_system
      +                          .TimeStopADCZeroOffsetCalc = (5 * (1000/50));
  9542  0038A4  0E00               	movlw	0
  9543  0038A6  0101               	movlb	1	; () banked
  9544  0038A8  6FD9               	movwf	(_ts_system+63)& (0+255),b	;volatile
  9545  0038AA  0E64               	movlw	100
  9546  0038AC  6FD8               	movwf	(_ts_system+62)& (0+255),b	;volatile
  9547                           
  9548                           ;sm_ControlGate_MC50.c: 247:             var_sys.PositionIsLost = YES;
  9549  0038AE  0E01               	movlw	1
  9550  0038B0  6F48               	movwf	(_var_sys+72)& (0+255),b	;volatile
  9551                           
  9552                           ; BSR set to: 1
  9553                           ;sm_ControlGate_MC50.c: 248:             if (var_sys.WorkTimeMaxAlarmState == EmAlarme |
      +                          | var_sys.NumberOffErrors > 3)
  9554  0038B2  0E02               	movlw	2
  9555  0038B4  1942               	xorwf	(_var_sys+66)& (0+255),w,b	;volatile
  9556  0038B6  B4D8               	btfsc	status,2,c
  9557  0038B8  D003               	goto	u28770
  9558                           
  9559                           ; BSR set to: 1
  9560  0038BA  0E03               	movlw	3
  9561  0038BC  6543               	cpfsgt	(_var_sys+67)& (0+255),b	;volatile
  9562  0038BE  D027               	goto	l23213
  9563  0038C0                     u28770:
  9564                           
  9565                           ; BSR set to: 1
  9566                           ;sm_ControlGate_MC50.c: 249:             {;sm_ControlGate_MC50.c: 252:                 t
      +                          ypeOpenOrder = GetOpenOrder();
  9567  0038C0  ECCC  F028         	call	_GetOpenOrder	;wreg free
  9568  0038C4  0100               	movlb	0	; () banked
  9569  0038C6  6FEB               	movwf	sm_execute_ControlGate@typeOpenOrder& (0+255),b
  9570                           
  9571                           ; BSR set to: 0
  9572                           ;sm_ControlGate_MC50.c: 253:                 SetSegmentValueIntermitent(dE,dr, (1000/50)
      +                          );
  9573  0038C8  0E14               	movlw	20
  9574  0038CA  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
  9575  0038CC  0E00               	movlw	0
  9576  0038CE  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
  9577  0038D0  0E14               	movlw	20
  9578  0038D2  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
  9579  0038D4  0E0E               	movlw	14
  9580  0038D6  ECA1  F045         	call	_SetSegmentValueIntermitent
  9581                           
  9582                           ; BSR set to: 1
  9583                           ;sm_ControlGate_MC50.c: 254:                 ts_system.timeSinalizationDigit = ( 500/50)
      +                          ;
  9584  0038DA  0E00               	movlw	0
  9585  0038DC  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
  9586  0038DE  0E0A               	movlw	10
  9587  0038E0  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
  9588                           
  9589                           ; BSR set to: 1
  9590                           ;sm_ControlGate_MC50.c: 255:                 if ((typeOpenOrder != NoCMD) ||(button_stru
      +                          ct.current==0 || button_struct.current==0x00 ||button_struct.current==0x17 ))
  9591  0038E2  0100               	movlb	0	; () banked
  9592  0038E4  51EB               	movf	sm_execute_ControlGate@typeOpenOrder& (0+255),w,b
  9593  0038E6  A4D8               	btfss	status,2,c
  9594  0038E8  D00A               	goto	u28810
  9595                           
  9596                           ; BSR set to: 0
  9597  0038EA  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  9598  0038EC  B4D8               	btfsc	status,2,c
  9599  0038EE  D007               	goto	u28810
  9600                           
  9601                           ; BSR set to: 0
  9602  0038F0  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  9603  0038F2  B4D8               	btfsc	status,2,c
  9604  0038F4  D004               	goto	u28810
  9605                           
  9606                           ; BSR set to: 0
  9607  0038F6  0E17               	movlw	23
  9608  0038F8  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  9609  0038FA  A4D8               	btfss	status,2,c
  9610  0038FC  0012               	return	
  9611  0038FE                     u28810:
  9612                           
  9613                           ; BSR set to: 0
  9614                           ;sm_ControlGate_MC50.c: 256:                 {;sm_ControlGate_MC50.c: 257:              
      +                                 var_sys.WorkTimeMaxAlarmState = Clear;
  9615  0038FE  0E00               	movlw	0
  9616  003900  0101               	movlb	1	; () banked
  9617  003902  6F42               	movwf	(_var_sys+66)& (0+255),b	;volatile
  9618                           
  9619                           ;sm_ControlGate_MC50.c: 258:                     var_sys.NumberOffErrors = 0;
  9620  003904  0E00               	movlw	0
  9621  003906  6F43               	movwf	(_var_sys+67)& (0+255),b	;volatile
  9622                           
  9623                           ;sm_ControlGate_MC50.c: 259:                     button_struct.processed=1;
  9624  003908  0E01               	movlw	1
  9625  00390A  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  9626  00390C  0012               	return	
  9627  00390E                     l23213:
  9628                           
  9629                           ; BSR set to: 1
  9630                           ;sm_ControlGate_MC50.c: 264:             {;sm_ControlGate_MC50.c: 267:                  
      +                             var_sys.Statedoorcontrol = st_Closed;
  9631  00390E  0E01               	movlw	1
  9632  003910  6F1C               	movwf	(_var_sys+28)& (0+255),b	;volatile
  9633                           
  9634                           ; BSR set to: 1
  9635                           ;sm_ControlGate_MC50.c: 268:                     var_sys.actualCounterMoves++;
  9636  003912  0E01               	movlw	1
  9637  003914  273C               	addwf	(_var_sys+60)& (0+255),f,b	;volatile
  9638  003916  0E00               	movlw	0
  9639  003918  233D               	addwfc	(_var_sys+61)& (0+255),f,b	;volatile
  9640  00391A  233E               	addwfc	(_var_sys+62)& (0+255),f,b	;volatile
  9641  00391C  233F               	addwfc	(_var_sys+63)& (0+255),f,b	;volatile
  9642                           
  9643                           ; BSR set to: 1
  9644                           ;sm_ControlGate_MC50.c: 269:                     var_sys.Timewalkisactived = 0;
  9645  00391E  0E00               	movlw	0
  9646  003920  6F4A               	movwf	(_var_sys+74)& (0+255),b	;volatile
  9647                           
  9648                           ; BSR set to: 1
  9649                           ;sm_ControlGate_MC50.c: 270:                     var_sys.PositionActual = 0;
  9650  003922  0E00               	movlw	0
  9651  003924  6F1E               	movwf	(_var_sys+30)& (0+255),b	;volatile
  9652  003926  0E00               	movlw	0
  9653  003928  6F1F               	movwf	(_var_sys+31)& (0+255),b	;volatile
  9654  00392A  0E00               	movlw	0
  9655  00392C  6F20               	movwf	(_var_sys+32)& (0+255),b	;volatile
  9656  00392E  0E00               	movlw	0
  9657  003930  6F21               	movwf	(_var_sys+33)& (0+255),b	;volatile
  9658                           
  9659                           ; BSR set to: 1
  9660                           ;sm_ControlGate_MC50.c: 272:                     var_sys.PositionIsLost = NO;
  9661  003932  0E00               	movlw	0
  9662  003934  6F48               	movwf	(_var_sys+72)& (0+255),b	;volatile
  9663                           
  9664                           ; BSR set to: 1
  9665                           ;sm_ControlGate_MC50.c: 273:                     var_sys.NumberOffErrors = 0;
  9666  003936  0E00               	movlw	0
  9667  003938  6F43               	movwf	(_var_sys+67)& (0+255),b	;volatile
  9668                           
  9669                           ; BSR set to: 1
  9670                           ;sm_ControlGate_MC50.c: 274:                     var_sys.StateMotor = Stopped;
  9671  00393A  0E00               	movlw	0
  9672  00393C  6F00               	movwf	_var_sys& (0+255),b	;volatile
  9673                           
  9674                           ; BSR set to: 1
  9675                           ;sm_ControlGate_MC50.c: 276:                     ts_system.timeSinalizationDigit = (1000
      +                          /50) * 2;
  9676  00393E  0E00               	movlw	0
  9677  003940  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
  9678  003942  0E28               	movlw	40
  9679  003944  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
  9680                           
  9681                           ; BSR set to: 1
  9682                           ;sm_ControlGate_MC50.c: 277:                     SetSegmentValueIntermitent(dF, dC, ( 20
      +                          0/50));
  9683  003946  0E0C               	movlw	12
  9684  003948  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
  9685  00394A  0E00               	movlw	0
  9686  00394C  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
  9687  00394E  0E04               	movlw	4
  9688  003950  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
  9689  003952  0E0F               	movlw	15
  9690  003954  ECA1  F045         	call	_SetSegmentValueIntermitent
  9691                           
  9692                           ; BSR set to: 1
  9693                           ;sm_ControlGate_MC50.c: 278:                     sm_send_event(&controlGate_stateMachine
      +                          , ev_GateClosed);
  9694  003958  0EE2               	movlw	low _controlGate_stateMachine
  9695  00395A  6E12               	movwf	sm_send_event@psm^0,c
  9696  00395C  0E01               	movlw	high _controlGate_stateMachine
  9697  00395E  6E13               	movwf	(sm_send_event@psm+1)^0,c
  9698  003960  0E00               	movlw	0
  9699  003962  6E15               	movwf	(sm_send_event@event+1)^0,c
  9700  003964  0E0A               	movlw	10
  9701  003966  6E14               	movwf	sm_send_event@event^0,c
  9702  003968  EC29  F041         	call	_sm_send_event	;wreg free
  9703  00396C  0012               	return	
  9704  00396E                     l23233:
  9705                           
  9706                           ; BSR set to: 0
  9707                           ;sm_ControlGate_MC50.c: 285:         {;sm_ControlGate_MC50.c: 287:             actionZon
      +                          e_Closed();
  9708  00396E  EC23  F039         	call	_actionZone_Closed	;wreg free
  9709                           
  9710                           ;sm_ControlGate_MC50.c: 288:         };sm_ControlGate_MC50.c: 289:             break;
  9711  003972  0012               	return	
  9712  003974                     l23235:
  9713                           
  9714                           ; BSR set to: 0
  9715                           ;sm_ControlGate_MC50.c: 291:         {;sm_ControlGate_MC50.c: 293:             actionZon
      +                          e_Opening();
  9716  003974  EC7D  F022         	call	_actionZone_Opening	;wreg free
  9717  003978                     l23237:
  9718                           
  9719                           ;sm_ControlGate_MC50.c: 295:             ts_system.TimeStopADCZeroOffsetCalc = (5 * (100
      +                          0/50));
  9720  003978  0E00               	movlw	0
  9721  00397A  0101               	movlb	1	; () banked
  9722  00397C  6FD9               	movwf	(_ts_system+63)& (0+255),b	;volatile
  9723  00397E  0E64               	movlw	100
  9724  003980  6FD8               	movwf	(_ts_system+62)& (0+255),b	;volatile
  9725                           
  9726                           ;sm_ControlGate_MC50.c: 296:         };sm_ControlGate_MC50.c: 297:             break;
  9727  003982  0012               	return	
  9728  003984                     l23239:
  9729                           
  9730                           ; BSR set to: 0
  9731                           ;sm_ControlGate_MC50.c: 299:         {;sm_ControlGate_MC50.c: 301:             actionZon
      +                          e_Opened();
  9732  003984  ECEC  F026         	call	_actionZone_Opened	;wreg free
  9733  003988  D7F7               	goto	l23237
  9734  00398A                     l23243:
  9735                           
  9736                           ; BSR set to: 0
  9737                           ;sm_ControlGate_MC50.c: 307:         {;sm_ControlGate_MC50.c: 309:             actionZon
      +                          e_Closing();
  9738  00398A  ECFC  F01F         	call	_actionZone_Closing	;wreg free
  9739  00398E  D7F4               	goto	l23237
  9740  003990                     l23247:
  9741                           
  9742                           ; BSR set to: 0
  9743                           ;sm_ControlGate_MC50.c: 315:         {;sm_ControlGate_MC50.c: 316:             sm_execut
      +                          e_ControlLearning(&controlLearning_stateMachine);
  9744  003990  0EB2               	movlw	low _controlLearning_stateMachine
  9745  003992  6FDC               	movwf	sm_execute_ControlLearning@psm& (0+255),b
  9746  003994  0E02               	movlw	high _controlLearning_stateMachine
  9747  003996  6FDD               	movwf	(sm_execute_ControlLearning@psm+1)& (0+255),b
  9748  003998  EC43  F00C         	call	_sm_execute_ControlLearning	;wreg free
  9749  00399C  D7ED               	goto	l23237
  9750  00399E                     l23253:
  9751  00399E  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9752  0039A2  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9753  0039A6  50DF               	movf	indf2,w,c
  9754  0039A8  0100               	movlb	0	; () banked
  9755  0039AA  6FE9               	movwf	??_sm_execute_ControlGate& (0+255),b
  9756  0039AC  6BEA               	clrf	(??_sm_execute_ControlGate+1)& (0+255),b
  9757                           
  9758                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9759                           ; Switch size 1, requested type "simple"
  9760                           ; Number of cases is 1, Range of values is 0 to 0
  9761                           ; switch strategies available:
  9762                           ; Name         Instructions Cycles
  9763                           ; simple_byte            4     3 (average)
  9764                           ;	Chosen strategy is simple_byte
  9765  0039AE  51EA               	movf	(??_sm_execute_ControlGate+1)& (0+255),w,b
  9766  0039B0  0A00               	xorlw	0	; case 0
  9767  0039B2  A4D8               	btfss	status,2,c
  9768  0039B4  0012               	return	
  9769                           
  9770                           ; BSR set to: 0
  9771                           ; Switch size 1, requested type "simple"
  9772                           ; Number of cases is 6, Range of values is 0 to 5
  9773                           ; switch strategies available:
  9774                           ; Name         Instructions Cycles
  9775                           ; simple_byte           19    10 (average)
  9776                           ;	Chosen strategy is simple_byte
  9777  0039B6  51E9               	movf	??_sm_execute_ControlGate& (0+255),w,b
  9778  0039B8  0A00               	xorlw	0	; case 0
  9779  0039BA  B4D8               	btfsc	status,2,c
  9780  0039BC  D773               	goto	l23191
  9781  0039BE  0A01               	xorlw	1	; case 1
  9782  0039C0  B4D8               	btfsc	status,2,c
  9783  0039C2  D7D5               	goto	l23233
  9784  0039C4  0A03               	xorlw	3	; case 2
  9785  0039C6  B4D8               	btfsc	status,2,c
  9786  0039C8  D7D5               	goto	l23235
  9787  0039CA  0A01               	xorlw	1	; case 3
  9788  0039CC  B4D8               	btfsc	status,2,c
  9789  0039CE  D7DD               	goto	l23243
  9790  0039D0  0A07               	xorlw	7	; case 4
  9791  0039D2  B4D8               	btfsc	status,2,c
  9792  0039D4  D7D7               	goto	l23239
  9793  0039D6  0A01               	xorlw	1	; case 5
  9794  0039D8  A4D8               	btfss	status,2,c
  9795  0039DA  0012               	return	
  9796  0039DC  D7D9               	goto	l23247
  9797  0039DE                     __end_of_sm_execute_ControlGate:
  9798                           	callstack 0
  9799                           
  9800 ;; *************** function _sm_execute_ControlLearning *****************
  9801 ;; Defined at:
  9802 ;;		line 29 in file "sm_ControlLearning_MC50.c"
  9803 ;; Parameters:    Size  Location     Type
  9804 ;;  psm             2    4[BANK0 ] PTR struct .
  9805 ;;		 -> controlLearning_stateMachine(11), 
  9806 ;; Auto vars:     Size  Location     Type
  9807 ;;  typeOpenOrde    1   57[COMRAM] enum E10372
  9808 ;; Return value:  Size  Location     Type
  9809 ;;                  1    wreg      void 
  9810 ;; Registers used:
  9811 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  9812 ;; Tracked objects:
  9813 ;;		On entry : 3F/0
  9814 ;;		On exit  : 0/0
  9815 ;;		Unchanged: 0/0
  9816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9817 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9818 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9819 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9820 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9821 ;;Total ram usage:        5 bytes
  9822 ;; Hardware stack levels used: 1
  9823 ;; Hardware stack levels required when called: 14
  9824 ;; This function calls:
  9825 ;;		_GetOpenOrder
  9826 ;;		_SaveNVM_VarSystem
  9827 ;;		_calculateMean
  9828 ;;		_clearLearningValue
  9829 ;;		_generateErrorLearnig
  9830 ;;		_sm_send_event
  9831 ;; This function is called by:
  9832 ;;		_sm_execute_ControlGate
  9833 ;; This function uses a non-reentrant model
  9834 ;;
  9835                           
  9836                           	psect	text21
  9837  001886                     __ptext21:
  9838                           	callstack 0
  9839  001886                     _sm_execute_ControlLearning:
  9840                           	callstack 15
  9841                           
  9842                           ; BSR set to: 0
  9843                           ;sm_ControlLearning_MC50.c: 31:    TypeCMD typeOpenOrder = GetOpenOrder();
  9844                           
  9845                           ;incstack = 0
  9846  001886  ECCC  F028         	call	_GetOpenOrder	;wreg free
  9847  00188A  6E3A               	movwf	sm_execute_ControlLearning@typeOpenOrder^0,c
  9848                           
  9849                           ;sm_ControlLearning_MC50.c: 33:     switch((sm_state_ControlLearning_t) psm->current_sta
      +                          te)
  9850  00188C  D0B8               	goto	l21913
  9851  00188E                     l21839:
  9852                           
  9853                           ; BSR set to: 0
  9854                           ;sm_ControlLearning_MC50.c: 36:         {;sm_ControlLearning_MC50.c: 37:              if
      +                          ((psm->last_event==ev_GateClosed)&&(var_sys_NVM.decelarationSensivity != 0)&& (var_sys.p
      +                          rograminAutomatic == 0))
  9855  00188E  EE20 F004          	lfsr	2,4
  9856  001892  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9857  001894  26D9               	addwf	fsr2l,f,c
  9858  001896  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9859  001898  22DA               	addwfc	fsr2h,f,c
  9860  00189A  0E0A               	movlw	10
  9861  00189C  18DE               	xorwf	postinc2,w,c
  9862  00189E  10DE               	iorwf	postinc2,w,c
  9863  0018A0  A4D8               	btfss	status,2,c
  9864  0018A2  D00D               	goto	l21847
  9865                           
  9866                           ; BSR set to: 0
  9867  0018A4  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
  9868  0018A6  B4D8               	btfsc	status,2,c
  9869  0018A8  D00A               	goto	l21847
  9870                           
  9871                           ; BSR set to: 0
  9872  0018AA  0101               	movlb	1	; () banked
  9873  0018AC  512A               	movf	(_var_sys+42)& (0+255),w,b	;volatile
  9874  0018AE  A4D8               	btfss	status,2,c
  9875  0018B0  D006               	goto	l21847
  9876  0018B2                     u25910:
  9877                           
  9878                           ; BSR set to: 1
  9879                           ;sm_ControlLearning_MC50.c: 38:             {;sm_ControlLearning_MC50.c: 39:            
      +                               psm->current_state = st_WaitLearnigOpen;
  9880  0018B2  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
  9881  0018B6  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
  9882  0018BA  0E02               	movlw	2
  9883  0018BC  D08A               	goto	L66
  9884  0018BE                     l21847:
  9885  0018BE  0100               	movlb	0	; () banked
  9886  0018C0  EE20 F004          	lfsr	2,4
  9887  0018C4  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9888  0018C6  26D9               	addwf	fsr2l,f,c
  9889  0018C8  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9890  0018CA  22DA               	addwfc	fsr2h,f,c
  9891  0018CC  0E0A               	movlw	10
  9892  0018CE  18DE               	xorwf	postinc2,w,c
  9893  0018D0  10DE               	iorwf	postinc2,w,c
  9894  0018D2  A4D8               	btfss	status,2,c
  9895  0018D4  D00D               	goto	l21855
  9896                           
  9897                           ; BSR set to: 0
  9898  0018D6  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
  9899  0018D8  B4D8               	btfsc	status,2,c
  9900  0018DA  D004               	goto	u25940
  9901                           
  9902                           ; BSR set to: 0
  9903  0018DC  0101               	movlb	1	; () banked
  9904  0018DE  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
  9905  0018E0  A4D8               	btfss	status,2,c
  9906  0018E2  D006               	goto	l21855
  9907  0018E4                     u25940:
  9908                           
  9909                           ;sm_ControlLearning_MC50.c: 43:             {;sm_ControlLearning_MC50.c: 44:            
      +                               psm->current_state = st_WaitForOpened;
  9910  0018E4  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
  9911  0018E8  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
  9912  0018EC  0E04               	movlw	4
  9913  0018EE  D071               	goto	L66
  9914  0018F0                     l21855:
  9915  0018F0  0100               	movlb	0	; () banked
  9916  0018F2  EE20 F004          	lfsr	2,4
  9917  0018F6  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9918  0018F8  26D9               	addwf	fsr2l,f,c
  9919  0018FA  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9920  0018FC  22DA               	addwfc	fsr2h,f,c
  9921  0018FE  0E0B               	movlw	11
  9922  001900  18DE               	xorwf	postinc2,w,c
  9923  001902  10DE               	iorwf	postinc2,w,c
  9924  001904  A4D8               	btfss	status,2,c
  9925  001906  D09B               	goto	l21915
  9926                           
  9927                           ; BSR set to: 0
  9928                           ;sm_ControlLearning_MC50.c: 47:             {;sm_ControlLearning_MC50.c: 48:            
      +                               psm->current_state = st_WaitForClosed;
  9929  001908  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
  9930  00190C  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
  9931  001910  0E01               	movlw	1
  9932  001912  D05F               	goto	L66
  9933  001914                     l21859:
  9934                           
  9935                           ; BSR set to: 0
  9936                           ;sm_ControlLearning_MC50.c: 53:         {;sm_ControlLearning_MC50.c: 54:             if(
      +                          (psm->last_event==ev_GateClosed)&&(var_sys_NVM.decelarationSensivity != 0) && (var_sys.p
      +                          rograminAutomatic == 0))
  9937  001914  EE20 F004          	lfsr	2,4
  9938  001918  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9939  00191A  26D9               	addwf	fsr2l,f,c
  9940  00191C  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9941  00191E  22DA               	addwfc	fsr2h,f,c
  9942  001920  0E0A               	movlw	10
  9943  001922  18DE               	xorwf	postinc2,w,c
  9944  001924  10DE               	iorwf	postinc2,w,c
  9945  001926  A4D8               	btfss	status,2,c
  9946  001928  D007               	goto	l21867
  9947                           
  9948                           ; BSR set to: 0
  9949  00192A  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
  9950  00192C  B4D8               	btfsc	status,2,c
  9951  00192E  D004               	goto	l21867
  9952                           
  9953                           ; BSR set to: 0
  9954  001930  0101               	movlb	1	; () banked
  9955  001932  512A               	movf	(_var_sys+42)& (0+255),w,b	;volatile
  9956  001934  B4D8               	btfsc	status,2,c
  9957  001936  D7BD               	goto	u25910
  9958  001938                     l21867:
  9959  001938  0100               	movlb	0	; () banked
  9960  00193A  EE20 F004          	lfsr	2,4
  9961  00193E  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9962  001940  26D9               	addwf	fsr2l,f,c
  9963  001942  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9964  001944  22DA               	addwfc	fsr2h,f,c
  9965  001946  0E0A               	movlw	10
  9966  001948  18DE               	xorwf	postinc2,w,c
  9967  00194A  10DE               	iorwf	postinc2,w,c
  9968  00194C  A4D8               	btfss	status,2,c
  9969  00194E  D007               	goto	l21875
  9970                           
  9971                           ; BSR set to: 0
  9972  001950  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
  9973  001952  B4D8               	btfsc	status,2,c
  9974  001954  D7C7               	goto	u25940
  9975                           
  9976                           ; BSR set to: 0
  9977  001956  0101               	movlb	1	; () banked
  9978  001958  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
  9979  00195A  B4D8               	btfsc	status,2,c
  9980  00195C  D7C3               	goto	u25940
  9981  00195E                     l21875:
  9982  00195E  0100               	movlb	0	; () banked
  9983  001960                     L68:
  9984  001960  EE20 F004          	lfsr	2,4
  9985  001964  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9986  001966  26D9               	addwf	fsr2l,f,c
  9987  001968  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9988  00196A  22DA               	addwfc	fsr2h,f,c
  9989  00196C  0E10               	movlw	16
  9990  00196E  18DE               	xorwf	postinc2,w,c
  9991  001970  10DE               	iorwf	postinc2,w,c
  9992  001972  A4D8               	btfss	status,2,c
  9993  001974  D064               	goto	l21915
  9994  001976  D03C               	goto	L128
  9995  001978                     l21879:
  9996                           
  9997                           ; BSR set to: 0
  9998                           ;sm_ControlLearning_MC50.c: 70:         {;sm_ControlLearning_MC50.c: 71:             if(
      +                          psm->last_event==ev_GateOpened)
  9999  001978  EE20 F004          	lfsr	2,4
 10000  00197C  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
 10001  00197E  26D9               	addwf	fsr2l,f,c
 10002  001980  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
 10003  001982  22DA               	addwfc	fsr2h,f,c
 10004  001984  0E0B               	movlw	11
 10005  001986  18DE               	xorwf	postinc2,w,c
 10006  001988  10DE               	iorwf	postinc2,w,c
 10007  00198A  A4D8               	btfss	status,2,c
 10008  00198C  D7E9               	goto	L68
 10009                           
 10010                           ; BSR set to: 0
 10011                           ;sm_ControlLearning_MC50.c: 72:             {;sm_ControlLearning_MC50.c: 73:            
      +                               psm->current_state = st_WaitLearnigClose;
 10012  00198E  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
 10013  001992  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
 10014  001996  0E03               	movlw	3
 10015  001998  D01C               	goto	L66
 10016  00199A                     l21887:
 10017                           
 10018                           ; BSR set to: 0
 10019                           ;sm_ControlLearning_MC50.c: 82:         {;sm_ControlLearning_MC50.c: 83:             if(
      +                          psm->last_event==ev_GateClosed)
 10020  00199A  EE20 F004          	lfsr	2,4
 10021  00199E  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
 10022  0019A0  26D9               	addwf	fsr2l,f,c
 10023  0019A2  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
 10024  0019A4  22DA               	addwfc	fsr2h,f,c
 10025  0019A6  0E0A               	movlw	10
 10026  0019A8  18DE               	xorwf	postinc2,w,c
 10027  0019AA  10DE               	iorwf	postinc2,w,c
 10028  0019AC  A4D8               	btfss	status,2,c
 10029  0019AE  D7D8               	goto	L68
 10030  0019B0  D799               	goto	u25940
 10031  0019B2                     l21895:
 10032                           
 10033                           ; BSR set to: 0
 10034                           ;sm_ControlLearning_MC50.c: 94:         {;sm_ControlLearning_MC50.c: 95:             if(
      +                          psm->last_event==ev_GateOpened)
 10035  0019B2  EE20 F004          	lfsr	2,4
 10036  0019B6  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
 10037  0019B8  26D9               	addwf	fsr2l,f,c
 10038  0019BA  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
 10039  0019BC  22DA               	addwfc	fsr2h,f,c
 10040  0019BE  0E0B               	movlw	11
 10041  0019C0  18DE               	xorwf	postinc2,w,c
 10042  0019C2  10DE               	iorwf	postinc2,w,c
 10043  0019C4  A4D8               	btfss	status,2,c
 10044  0019C6  D7CC               	goto	L68
 10045                           
 10046                           ; BSR set to: 0
 10047                           ;sm_ControlLearning_MC50.c: 96:             {;sm_ControlLearning_MC50.c: 97:            
      +                               psm->current_state = st_WaitForEndLearn;
 10048  0019C8  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
 10049  0019CC  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
 10050  0019D0  0E05               	movlw	5
 10051  0019D2                     L66:
 10052  0019D2  6EDE               	movwf	postinc2,c
 10053  0019D4  0E00               	movlw	0
 10054  0019D6  6EDD               	movwf	postdec2,c
 10055  0019D8  D032               	goto	l21915
 10056  0019DA                     l21903:
 10057                           
 10058                           ; BSR set to: 0
 10059                           ;sm_ControlLearning_MC50.c: 106:         {;sm_ControlLearning_MC50.c: 107:             i
      +                          f(psm->last_event==ev_GateClosed)
 10060  0019DA  EE20 F004          	lfsr	2,4
 10061  0019DE  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
 10062  0019E0  26D9               	addwf	fsr2l,f,c
 10063  0019E2  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
 10064  0019E4  22DA               	addwfc	fsr2h,f,c
 10065  0019E6  0E0A               	movlw	10
 10066  0019E8  18DE               	xorwf	postinc2,w,c
 10067  0019EA  10DE               	iorwf	postinc2,w,c
 10068  0019EC  A4D8               	btfss	status,2,c
 10069  0019EE  D7B8               	goto	L68
 10070  0019F0                     L128:
 10071                           
 10072                           ; BSR set to: 0
 10073                           ;sm_ControlLearning_MC50.c: 112:             {;sm_ControlLearning_MC50.c: 113:          
      +                                 psm->current_state = st_InitLearning;
 10074  0019F0  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
 10075  0019F4  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
 10076  0019F8  0E00               	movlw	0
 10077  0019FA  D7EB               	goto	L66
 10078  0019FC                     l2907:
 10079                           
 10080                           ; BSR set to: 0
 10081  0019FC  D7FF               	goto	l2907
 10082  0019FE                     l21913:
 10083  0019FE  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
 10084  001A02  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
 10085  001A06  50DF               	movf	indf2,w,c
 10086  001A08  0100               	movlb	0	; () banked
 10087  001A0A  6FDE               	movwf	??_sm_execute_ControlLearning& (0+255),b
 10088  001A0C  6BDF               	clrf	(??_sm_execute_ControlLearning+1)& (0+255),b
 10089                           
 10090                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10091                           ; Switch size 1, requested type "simple"
 10092                           ; Number of cases is 1, Range of values is 0 to 0
 10093                           ; switch strategies available:
 10094                           ; Name         Instructions Cycles
 10095                           ; simple_byte            4     3 (average)
 10096                           ;	Chosen strategy is simple_byte
 10097  001A0E  51DF               	movf	(??_sm_execute_ControlLearning+1)& (0+255),w,b
 10098  001A10  0A00               	xorlw	0	; case 0
 10099  001A12  A4D8               	btfss	status,2,c
 10100  001A14  D7F3               	goto	l2907
 10101                           
 10102                           ; BSR set to: 0
 10103                           ; Switch size 1, requested type "simple"
 10104                           ; Number of cases is 6, Range of values is 0 to 5
 10105                           ; switch strategies available:
 10106                           ; Name         Instructions Cycles
 10107                           ; simple_byte           19    10 (average)
 10108                           ;	Chosen strategy is simple_byte
 10109  001A16  51DE               	movf	??_sm_execute_ControlLearning& (0+255),w,b
 10110  001A18  0A00               	xorlw	0	; case 0
 10111  001A1A  B4D8               	btfsc	status,2,c
 10112  001A1C  D738               	goto	l21839
 10113  001A1E  0A01               	xorlw	1	; case 1
 10114  001A20  B4D8               	btfsc	status,2,c
 10115  001A22  D778               	goto	l21859
 10116  001A24  0A03               	xorlw	3	; case 2
 10117  001A26  B4D8               	btfsc	status,2,c
 10118  001A28  D7A7               	goto	l21879
 10119  001A2A  0A01               	xorlw	1	; case 3
 10120  001A2C  B4D8               	btfsc	status,2,c
 10121  001A2E  D7B5               	goto	l21887
 10122  001A30  0A07               	xorlw	7	; case 4
 10123  001A32  B4D8               	btfsc	status,2,c
 10124  001A34  D7BE               	goto	l21895
 10125  001A36  0A01               	xorlw	1	; case 5
 10126  001A38  B4D8               	btfsc	status,2,c
 10127  001A3A  D7CF               	goto	l21903
 10128  001A3C  D7DF               	goto	l2907
 10129  001A3E                     l21915:
 10130                           
 10131                           ;sm_ControlLearning_MC50.c: 126:     sm_send_event(&controlLearning_stateMachine, ev_NUL
      +                          L);
 10132  001A3E  0EB2               	movlw	low _controlLearning_stateMachine
 10133  001A40  6E12               	movwf	sm_send_event@psm^0,c
 10134  001A42  0E02               	movlw	high _controlLearning_stateMachine
 10135  001A44  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10136  001A46  0E00               	movlw	0
 10137  001A48  6E15               	movwf	(sm_send_event@event+1)^0,c
 10138  001A4A  0E00               	movlw	0
 10139  001A4C  6E14               	movwf	sm_send_event@event^0,c
 10140  001A4E  EC29  F041         	call	_sm_send_event	;wreg free
 10141                           
 10142                           ;sm_ControlLearning_MC50.c: 131:     switch((sm_state_ControlGate_t) psm->current_state)
 10143  001A52  D280               	goto	l22171
 10144  001A54                     l21917:
 10145                           
 10146                           ; BSR set to: 0
 10147                           ;sm_ControlLearning_MC50.c: 134:         {;sm_ControlLearning_MC50.c: 135:             i
      +                          f(var_sys.FimCurso_CloseIsEnabled==YES)
 10148  001A54  0101               	movlb	1	; () banked
 10149  001A56  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
 10150  001A58  A4D8               	btfss	status,2,c
 10151  001A5A  D03A               	goto	l21935
 10152                           
 10153                           ; BSR set to: 1
 10154                           ;sm_ControlLearning_MC50.c: 136:             {;sm_ControlLearning_MC50.c: 137:          
      +                                 control_limit_switch = 1;
 10155  001A5C  0E01               	movlw	1
 10156  001A5E  0100               	movlb	0	; () banked
 10157  001A60  6F81               	movwf	_control_limit_switch& (0+255),b
 10158                           
 10159                           ; BSR set to: 0
 10160                           ;sm_ControlLearning_MC50.c: 138:                 sm_send_event(&controlLearning_stateMac
      +                          hine, ev_GateClosed);
 10161  001A62  0EB2               	movlw	low _controlLearning_stateMachine
 10162  001A64  6E12               	movwf	sm_send_event@psm^0,c
 10163  001A66  0E02               	movlw	high _controlLearning_stateMachine
 10164  001A68  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10165  001A6A  0E00               	movlw	0
 10166  001A6C  6E15               	movwf	(sm_send_event@event+1)^0,c
 10167  001A6E  0E0A               	movlw	10
 10168  001A70  6E14               	movwf	sm_send_event@event^0,c
 10169  001A72  EC29  F041         	call	_sm_send_event	;wreg free
 10170                           
 10171                           ;sm_ControlLearning_MC50.c: 139:                 var_sys.StateMotor=InOpenFull;
 10172  001A76  0E01               	movlw	1
 10173  001A78  0101               	movlb	1	; () banked
 10174  001A7A  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10175                           
 10176                           ; BSR set to: 1
 10177                           ;sm_ControlLearning_MC50.c: 140:                 clearLearningValue();
 10178  001A7C  ECE6  F03D         	call	_clearLearningValue	;wreg free
 10179                           
 10180                           ; BSR set to: 0
 10181                           ;sm_ControlLearning_MC50.c: 141:                  if ((var_sys_NVM.decelarationSensivity
      +                           != 0) && (var_sys.programinAutomatic == 0))
 10182  001A80  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
 10183  001A82  B4D8               	btfsc	status,2,c
 10184  001A84  D016               	goto	l21933
 10185                           
 10186                           ; BSR set to: 0
 10187  001A86  0101               	movlb	1	; () banked
 10188  001A88  512A               	movf	(_var_sys+42)& (0+255),w,b	;volatile
 10189  001A8A  A4D8               	btfss	status,2,c
 10190  001A8C  D012               	goto	l21933
 10191  001A8E                     u26130:
 10192                           
 10193                           ; BSR set to: 1
 10194                           ;sm_ControlLearning_MC50.c: 142:                          {;sm_ControlLearning_MC50.c: 1
      +                          43:                 ts_system.TimeLearningDecelaration=(1000/50)*15;
 10195  001A8E  0E01               	movlw	1
 10196  001A90  6FD1               	movwf	(_ts_system+55)& (0+255),b	;volatile
 10197  001A92  0E2C               	movlw	44
 10198  001A94  6FD0               	movwf	(_ts_system+54)& (0+255),b	;volatile
 10199                           
 10200                           ;sm_ControlLearning_MC50.c: 144:                 ts_system.TimeWaitToGetCurrent=(1000/50
      +                          )*6;
 10201  001A96  0E00               	movlw	0
 10202  001A98  6FCF               	movwf	(_ts_system+53)& (0+255),b	;volatile
 10203  001A9A  0E78               	movlw	120
 10204  001A9C  6FCE               	movwf	(_ts_system+52)& (0+255),b	;volatile
 10205                           
 10206                           ;sm_ControlLearning_MC50.c: 145:                 ts_system.TimeWaitReleCapacitor = (1000
      +                          /50);
 10207  001A9E  0E00               	movlw	0
 10208  001AA0  6FDF               	movwf	(_ts_system+69)& (0+255),b	;volatile
 10209  001AA2  0E14               	movlw	20
 10210  001AA4  6FDE               	movwf	(_ts_system+68)& (0+255),b	;volatile
 10211                           
 10212                           ;sm_ControlLearning_MC50.c: 146:                 var_sys.LearningDecelaration=YES;
 10213  001AA6  0E01               	movlw	1
 10214  001AA8  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
 10215                           
 10216                           ;sm_ControlLearning_MC50.c: 147:                 control_limit_switch = 0;
 10217  001AAA  0E00               	movlw	0
 10218  001AAC  0100               	movlb	0	; () banked
 10219  001AAE  6F81               	movwf	_control_limit_switch& (0+255),b
 10220                           
 10221                           ;sm_ControlLearning_MC50.c: 148:                  }
 10222  001AB0  0012               	return	
 10223  001AB2                     l21933:
 10224                           
 10225                           ;sm_ControlLearning_MC50.c: 150:                 {;sm_ControlLearning_MC50.c: 151:      
      +                                     var_sys.LearningDecelaration=NO;
 10226  001AB2  0E00               	movlw	0
 10227  001AB4  0101               	movlb	1	; () banked
 10228  001AB6  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
 10229                           
 10230                           ;sm_ControlLearning_MC50.c: 152:                 ts_system.TimeWaitToGetCurrent=(1000/50
      +                          )*4;
 10231  001AB8  0E00               	movlw	0
 10232  001ABA  6FCF               	movwf	(_ts_system+53)& (0+255),b	;volatile
 10233  001ABC  0E50               	movlw	80
 10234  001ABE  6FCE               	movwf	(_ts_system+52)& (0+255),b	;volatile
 10235                           
 10236                           ;sm_ControlLearning_MC50.c: 153:                 ts_system.TimeWaitReleCapacitor = (1000
      +                          /50);
 10237  001AC0  0E00               	movlw	0
 10238  001AC2  6FDF               	movwf	(_ts_system+69)& (0+255),b	;volatile
 10239  001AC4  0E14               	movlw	20
 10240  001AC6  6FDE               	movwf	(_ts_system+68)& (0+255),b	;volatile
 10241                           
 10242                           ;sm_ControlLearning_MC50.c: 154:                 control_limit_switch = 0;
 10243  001AC8  0E00               	movlw	0
 10244  001ACA  0100               	movlb	0	; () banked
 10245  001ACC  6F81               	movwf	_control_limit_switch& (0+255),b
 10246  001ACE  0012               	return	
 10247  001AD0                     l21935:
 10248                           
 10249                           ; BSR set to: 1
 10250                           ;sm_ControlLearning_MC50.c: 159:             {;sm_ControlLearning_MC50.c: 160:          
      +                                 sm_send_event(&controlLearning_stateMachine, ev_GateOpened);
 10251  001AD0  0EB2               	movlw	low _controlLearning_stateMachine
 10252  001AD2  6E12               	movwf	sm_send_event@psm^0,c
 10253  001AD4  0E02               	movlw	high _controlLearning_stateMachine
 10254  001AD6  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10255  001AD8  0E00               	movlw	0
 10256  001ADA  6E15               	movwf	(sm_send_event@event+1)^0,c
 10257  001ADC  0E0B               	movlw	11
 10258  001ADE  6E14               	movwf	sm_send_event@event^0,c
 10259  001AE0  EC29  F041         	call	_sm_send_event	;wreg free
 10260                           
 10261                           ;sm_ControlLearning_MC50.c: 161:                 var_sys.StateMotor = InClose;
 10262  001AE4  0E03               	movlw	3
 10263  001AE6  0101               	movlb	1	; () banked
 10264  001AE8  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10265                           
 10266                           ; BSR set to: 1
 10267                           ;sm_ControlLearning_MC50.c: 162:                 var_sys.LearningDecelaration= YES;
 10268  001AEA  0E01               	movlw	1
 10269  001AEC  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
 10270                           
 10271                           ; BSR set to: 1
 10272                           ;sm_ControlLearning_MC50.c: 164:         };sm_ControlLearning_MC50.c: 165:         break
      +                          ;
 10273                           
 10274                           ;sm_ControlLearning_MC50.c: 163:             }
 10275  001AEE  0012               	return	
 10276  001AF0                     l21941:
 10277                           
 10278                           ; BSR set to: 0
 10279                           ;sm_ControlLearning_MC50.c: 167:         {;sm_ControlLearning_MC50.c: 168:             i
      +                          f(((var_sys.FimCurso_CloseIsEnabled==YES)||(control_limit_switch == 1)) || ((button_stru
      +                          ct.current == 0 ||typeOpenOrder == TypeFull) && var_sys.programinAutomatic == 1))
 10280  001AF0  0101               	movlb	1	; () banked
 10281  001AF2  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
 10282  001AF4  B4D8               	btfsc	status,2,c
 10283  001AF6  D00E               	goto	u26180
 10284                           
 10285                           ; BSR set to: 1
 10286  001AF8  0100               	movlb	0	; () banked
 10287  001AFA  0581               	decf	_control_limit_switch& (0+255),w,b
 10288  001AFC  B4D8               	btfsc	status,2,c
 10289  001AFE  D00A               	goto	u26180
 10290                           
 10291                           ; BSR set to: 0
 10292  001B00  504D               	movf	(_button_struct+1)^0,w,c	;volatile
 10293  001B02  B4D8               	btfsc	status,2,c
 10294  001B04  D003               	goto	u26170
 10295                           
 10296                           ; BSR set to: 0
 10297  001B06  043A               	decf	sm_execute_ControlLearning@typeOpenOrder^0,w,c
 10298  001B08  A4D8               	btfss	status,2,c
 10299  001B0A  D028               	goto	l21969
 10300  001B0C                     u26170:
 10301                           
 10302                           ; BSR set to: 0
 10303  001B0C  0101               	movlb	1	; () banked
 10304  001B0E  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 10305  001B10  A4D8               	btfss	status,2,c
 10306  001B12  D024               	goto	l21969
 10307  001B14                     u26180:
 10308                           
 10309                           ;sm_ControlLearning_MC50.c: 169:             {;sm_ControlLearning_MC50.c: 171:          
      +                                 control_limit_switch = 1;
 10310  001B14  0E01               	movlw	1
 10311  001B16  0100               	movlb	0	; () banked
 10312  001B18  6F81               	movwf	_control_limit_switch& (0+255),b
 10313                           
 10314                           ;sm_ControlLearning_MC50.c: 172:                 var_sys.StateMotor=Stopped;
 10315  001B1A  0E00               	movlw	0
 10316  001B1C  0101               	movlb	1	; () banked
 10317  001B1E  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10318                           
 10319                           ; BSR set to: 1
 10320                           ;sm_ControlLearning_MC50.c: 173:                 if(ts_system.TimeWaitToNextState<=0)
 10321  001B20  BFBF               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 10322  001B22  D005               	goto	u26190
 10323  001B24  51BF               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 10324  001B26  E102               	bnz	u26191
 10325  001B28  05BE               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 10326  001B2A  B0D8               	btfsc	status,0,c
 10327  001B2C                     u26191:
 10328  001B2C  0012               	return	
 10329  001B2E                     u26190:
 10330                           
 10331                           ; BSR set to: 1
 10332                           ;sm_ControlLearning_MC50.c: 174:                 {;sm_ControlLearning_MC50.c: 175:      
      +                                         sm_send_event(&controlLearning_stateMachine, ev_GateClosed);
 10333  001B2E  0EB2               	movlw	low _controlLearning_stateMachine
 10334  001B30  6E12               	movwf	sm_send_event@psm^0,c
 10335  001B32  0E02               	movlw	high _controlLearning_stateMachine
 10336  001B34  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10337  001B36  0E00               	movlw	0
 10338  001B38  6E15               	movwf	(sm_send_event@event+1)^0,c
 10339  001B3A  0E0A               	movlw	10
 10340  001B3C  6E14               	movwf	sm_send_event@event^0,c
 10341  001B3E  EC29  F041         	call	_sm_send_event	;wreg free
 10342                           
 10343                           ;sm_ControlLearning_MC50.c: 176:                     var_sys.StateMotor=InOpenFull;
 10344  001B42  0E01               	movlw	1
 10345  001B44  0101               	movlb	1	; () banked
 10346  001B46  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10347                           
 10348                           ; BSR set to: 1
 10349                           ;sm_ControlLearning_MC50.c: 177:                     clearLearningValue();
 10350  001B48  ECE6  F03D         	call	_clearLearningValue	;wreg free
 10351                           
 10352                           ; BSR set to: 0
 10353                           ;sm_ControlLearning_MC50.c: 178:                         if ((var_sys_NVM.decelarationSe
      +                          nsivity != 0) && (var_sys.programinAutomatic == 0))
 10354  001B4C  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
 10355  001B4E  B4D8               	btfsc	status,2,c
 10356  001B50  D7B0               	goto	l21933
 10357                           
 10358                           ; BSR set to: 0
 10359  001B52  0101               	movlb	1	; () banked
 10360  001B54  512A               	movf	(_var_sys+42)& (0+255),w,b	;volatile
 10361  001B56  B4D8               	btfsc	status,2,c
 10362  001B58  D79A               	goto	u26130
 10363  001B5A  D7AB               	goto	l21933
 10364  001B5C                     l21969:
 10365  001B5C  0101               	movlb	1	; () banked
 10366  001B5E  5100               	movf	_var_sys& (0+255),w,b	;volatile
 10367  001B60  A4D8               	btfss	status,2,c
 10368  001B62  D003               	goto	l21973
 10369  001B64                     u26220:
 10370                           
 10371                           ; BSR set to: 1
 10372                           ;sm_ControlLearning_MC50.c: 196:             {;sm_ControlLearning_MC50.c: 197:          
      +                                 generateErrorLearnig();
 10373  001B64  EC62  F040         	call	_generateErrorLearnig	;wreg free
 10374                           
 10375                           ;sm_ControlLearning_MC50.c: 198:             }
 10376  001B68  0012               	return	
 10377  001B6A                     l21973:
 10378                           
 10379                           ; BSR set to: 1
 10380                           ;sm_ControlLearning_MC50.c: 200:             {;sm_ControlLearning_MC50.c: 201:          
      +                                 ts_system.TimeWaitToNextState=(2*(1000/50));
 10381  001B6A  0E00               	movlw	0
 10382  001B6C  6FBF               	movwf	(_ts_system+37)& (0+255),b	;volatile
 10383  001B6E  0E28               	movlw	40
 10384  001B70  6FBE               	movwf	(_ts_system+36)& (0+255),b	;volatile
 10385  001B72  0012               	return	
 10386  001B74                     l21975:
 10387                           
 10388                           ; BSR set to: 0
 10389                           ;sm_ControlLearning_MC50.c: 206:         {;sm_ControlLearning_MC50.c: 207:             i
      +                          f((var_sys.FimCurso_OpenIsEnabled==YES) || (ts_system.TimeLearningDecelaration<=0)||(con
      +                          trol_limit_switch == 1))
 10390  001B74  0101               	movlb	1	; () banked
 10391  001B76  0504               	decf	(_var_sys+4)& (0+255),w,b	;volatile
 10392  001B78  A4D8               	btfss	status,2,c
 10393                           
 10394                           ; BSR set to: 1
 10395  001B7A  BFD1               	btfsc	(_ts_system+55)& (0+255),7,b	;volatile
 10396  001B7C  D009               	goto	u26250
 10397  001B7E  51D1               	movf	(_ts_system+55)& (0+255),w,b	;volatile
 10398  001B80  E103               	bnz	u26240
 10399  001B82  05D0               	decf	(_ts_system+54)& (0+255),w,b	;volatile
 10400  001B84  A0D8               	btfss	status,0,c
 10401  001B86  D004               	goto	u26250
 10402  001B88                     u26240:
 10403                           
 10404                           ; BSR set to: 1
 10405  001B88  0100               	movlb	0	; () banked
 10406  001B8A  0581               	decf	_control_limit_switch& (0+255),w,b
 10407  001B8C  A4D8               	btfss	status,2,c
 10408  001B8E  D02A               	goto	l21997
 10409  001B90                     u26250:
 10410                           
 10411                           ;sm_ControlLearning_MC50.c: 209:             {;sm_ControlLearning_MC50.c: 210:          
      +                                  control_limit_switch = 1;
 10412  001B90  0E01               	movlw	1
 10413  001B92  0100               	movlb	0	; () banked
 10414  001B94  6F81               	movwf	_control_limit_switch& (0+255),b
 10415                           
 10416                           ;sm_ControlLearning_MC50.c: 211:                 var_sys.StateMotor=Stopped;
 10417  001B96  0E00               	movlw	0
 10418  001B98  0101               	movlb	1	; () banked
 10419  001B9A  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10420                           
 10421                           ; BSR set to: 1
 10422                           ;sm_ControlLearning_MC50.c: 212:             if(ts_system.TimeWaitToNextState<=0)
 10423  001B9C  BFBF               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 10424  001B9E  D005               	goto	u26260
 10425  001BA0  51BF               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 10426  001BA2  E102               	bnz	u26261
 10427  001BA4  05BE               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 10428  001BA6  B0D8               	btfsc	status,0,c
 10429  001BA8                     u26261:
 10430  001BA8  0012               	return	
 10431  001BAA                     u26260:
 10432                           
 10433                           ; BSR set to: 1
 10434                           ;sm_ControlLearning_MC50.c: 213:             {;sm_ControlLearning_MC50.c: 215:          
      +                                 sm_send_event(&controlLearning_stateMachine, ev_GateOpened);
 10435  001BAA  0EB2               	movlw	low _controlLearning_stateMachine
 10436  001BAC  6E12               	movwf	sm_send_event@psm^0,c
 10437  001BAE  0E02               	movlw	high _controlLearning_stateMachine
 10438  001BB0  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10439  001BB2  0E00               	movlw	0
 10440  001BB4  6E15               	movwf	(sm_send_event@event+1)^0,c
 10441  001BB6  0E0B               	movlw	11
 10442  001BB8  6E14               	movwf	sm_send_event@event^0,c
 10443  001BBA  EC29  F041         	call	_sm_send_event	;wreg free
 10444                           
 10445                           ;sm_ControlLearning_MC50.c: 216:                 var_sys.StateMotor=InClose;
 10446  001BBE  0E03               	movlw	3
 10447  001BC0  0101               	movlb	1	; () banked
 10448  001BC2  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10449                           
 10450                           ; BSR set to: 1
 10451                           ;sm_ControlLearning_MC50.c: 217:                 ts_system.TimeLearningDecelaration=(100
      +                          0/50)*5;
 10452  001BC4  0E00               	movlw	0
 10453  001BC6  6FD1               	movwf	(_ts_system+55)& (0+255),b	;volatile
 10454  001BC8  0E64               	movlw	100
 10455  001BCA  6FD0               	movwf	(_ts_system+54)& (0+255),b	;volatile
 10456                           
 10457                           ; BSR set to: 1
 10458                           ;sm_ControlLearning_MC50.c: 218:                 ts_system.TimeWaitToGetCurrent=(1000/50
      +                          )*5;
 10459  001BCC  0E00               	movlw	0
 10460  001BCE  6FCF               	movwf	(_ts_system+53)& (0+255),b	;volatile
 10461  001BD0  0E64               	movlw	100
 10462  001BD2                     L67:
 10463  001BD2  6FCE               	movwf	(_ts_system+52)& (0+255),b	;volatile
 10464                           
 10465                           ; BSR set to: 1
 10466                           ;sm_ControlLearning_MC50.c: 219:                 ts_system.TimeWaitReleCapacitor = (1000
      +                          /50);
 10467  001BD4  0E00               	movlw	0
 10468  001BD6  6FDF               	movwf	(_ts_system+69)& (0+255),b	;volatile
 10469  001BD8  0E14               	movlw	20
 10470  001BDA  6FDE               	movwf	(_ts_system+68)& (0+255),b	;volatile
 10471                           
 10472                           ; BSR set to: 1
 10473                           ;sm_ControlLearning_MC50.c: 220:                 control_limit_switch = 0;
 10474  001BDC  0E00               	movlw	0
 10475  001BDE  0100               	movlb	0	; () banked
 10476  001BE0  6F81               	movwf	_control_limit_switch& (0+255),b
 10477  001BE2  0012               	return	
 10478  001BE4                     l21997:
 10479                           
 10480                           ; BSR set to: 0
 10481  001BE4  0101               	movlb	1	; () banked
 10482  001BE6  5100               	movf	_var_sys& (0+255),w,b	;volatile
 10483  001BE8  B4D8               	btfsc	status,2,c
 10484  001BEA  D7BC               	goto	u26220
 10485                           
 10486                           ; BSR set to: 1
 10487                           ;sm_ControlLearning_MC50.c: 230:             {;sm_ControlLearning_MC50.c: 231:          
      +                                 ts_system.TimeWaitToNextState=(2*(1000/50));
 10488  001BEC  0E00               	movlw	0
 10489  001BEE  6FBF               	movwf	(_ts_system+37)& (0+255),b	;volatile
 10490  001BF0  0E28               	movlw	40
 10491  001BF2  6FBE               	movwf	(_ts_system+36)& (0+255),b	;volatile
 10492                           
 10493                           ; BSR set to: 1
 10494                           ;sm_ControlLearning_MC50.c: 232:                 if (ts_system.TimeWaitReleCapacitor <=0
      +                          )
 10495  001BF4  BFDF               	btfsc	(_ts_system+69)& (0+255),7,b	;volatile
 10496  001BF6  D005               	goto	u26280
 10497  001BF8  51DF               	movf	(_ts_system+69)& (0+255),w,b	;volatile
 10498  001BFA  E102               	bnz	u26281
 10499  001BFC  05DE               	decf	(_ts_system+68)& (0+255),w,b	;volatile
 10500  001BFE  B0D8               	btfsc	status,0,c
 10501  001C00                     u26281:
 10502  001C00  0012               	return	
 10503  001C02                     u26280:
 10504                           
 10505                           ; BSR set to: 1
 10506                           ;sm_ControlLearning_MC50.c: 233:                 {;sm_ControlLearning_MC50.c: 234:      
      +                                     if(ts_system.TimeWaitToGetCurrent>0)
 10507  001C02  BFCF               	btfsc	(_ts_system+53)& (0+255),7,b	;volatile
 10508  001C04  0012               	return	
 10509  001C06  51CF               	movf	(_ts_system+53)& (0+255),w,b	;volatile
 10510  001C08  E103               	bnz	u26290
 10511  001C0A  05CE               	decf	(_ts_system+52)& (0+255),w,b	;volatile
 10512  001C0C  A0D8               	btfss	status,0,c
 10513  001C0E  0012               	return	
 10514  001C10                     u26290:
 10515                           
 10516                           ; BSR set to: 1
 10517                           ;sm_ControlLearning_MC50.c: 235:                 {;sm_ControlLearning_MC50.c: 236:      
      +                                         learn_st.openHistCurrent=calculateMean(learn_st.openHistCurrent,var_sys.A
      +                          ctualHistCurrent);
 10518  001C10  C06E  F010         	movff	_learn_st+14,calculateMean@meanValue	;volatile
 10519  001C14  C06F  F011         	movff	_learn_st+15,calculateMean@meanValue+1	;volatile
 10520  001C18  6A12               	clrf	(calculateMean@meanValue+2)^0,c
 10521  001C1A  6A13               	clrf	(calculateMean@meanValue+3)^0,c
 10522  001C1C  C130  F014         	movff	_var_sys+48,calculateMean@newValue	;volatile
 10523  001C20  C131  F015         	movff	_var_sys+49,calculateMean@newValue+1	;volatile
 10524  001C24  C132  F016         	movff	_var_sys+50,calculateMean@newValue+2	;volatile
 10525  001C28  C133  F017         	movff	_var_sys+51,calculateMean@newValue+3	;volatile
 10526  001C2C  ECC9  F040         	call	_calculateMean	;wreg free
 10527  001C30  C010  F06E         	movff	?_calculateMean,_learn_st+14	;volatile
 10528  001C34  C011  F06F         	movff	?_calculateMean+1,_learn_st+15	;volatile
 10529  001C38  0012               	return	
 10530  001C3A                     l22009:
 10531                           
 10532                           ; BSR set to: 0
 10533                           ;sm_ControlLearning_MC50.c: 243:         {;sm_ControlLearning_MC50.c: 244:             i
      +                          f((var_sys.FimCurso_CloseIsEnabled==YES)||(control_limit_switch == 1))
 10534  001C3A  0101               	movlb	1	; () banked
 10535  001C3C  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
 10536  001C3E  B4D8               	btfsc	status,2,c
 10537  001C40  D004               	goto	u26310
 10538                           
 10539                           ; BSR set to: 1
 10540  001C42  0100               	movlb	0	; () banked
 10541  001C44  0581               	decf	_control_limit_switch& (0+255),w,b
 10542  001C46  A4D8               	btfss	status,2,c
 10543  001C48  D020               	goto	l22029
 10544  001C4A                     u26310:
 10545                           
 10546                           ;sm_ControlLearning_MC50.c: 245:             {;sm_ControlLearning_MC50.c: 246:          
      +                                 control_limit_switch = 1;
 10547  001C4A  0E01               	movlw	1
 10548  001C4C  0100               	movlb	0	; () banked
 10549  001C4E  6F81               	movwf	_control_limit_switch& (0+255),b
 10550                           
 10551                           ;sm_ControlLearning_MC50.c: 247:                 var_sys.StateMotor=Stopped;
 10552  001C50  0E00               	movlw	0
 10553  001C52  0101               	movlb	1	; () banked
 10554  001C54  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10555                           
 10556                           ; BSR set to: 1
 10557                           ;sm_ControlLearning_MC50.c: 248:                 if(ts_system.TimeWaitToNextState<=0)
 10558  001C56  BFBF               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 10559  001C58  D005               	goto	u26320
 10560  001C5A  51BF               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 10561  001C5C  E102               	bnz	u26321
 10562  001C5E  05BE               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 10563  001C60  B0D8               	btfsc	status,0,c
 10564  001C62                     u26321:
 10565  001C62  0012               	return	
 10566  001C64                     u26320:
 10567                           
 10568                           ; BSR set to: 1
 10569                           ;sm_ControlLearning_MC50.c: 249:                 {;sm_ControlLearning_MC50.c: 250:      
      +                                         sm_send_event(&controlLearning_stateMachine, ev_GateClosed);
 10570  001C64  0EB2               	movlw	low _controlLearning_stateMachine
 10571  001C66  6E12               	movwf	sm_send_event@psm^0,c
 10572  001C68  0E02               	movlw	high _controlLearning_stateMachine
 10573  001C6A  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10574  001C6C  0E00               	movlw	0
 10575  001C6E  6E15               	movwf	(sm_send_event@event+1)^0,c
 10576  001C70  0E0A               	movlw	10
 10577  001C72  6E14               	movwf	sm_send_event@event^0,c
 10578  001C74  EC29  F041         	call	_sm_send_event	;wreg free
 10579                           
 10580                           ;sm_ControlLearning_MC50.c: 251:                     var_sys.StateMotor=InOpenFull;
 10581  001C78  0E01               	movlw	1
 10582  001C7A  0101               	movlb	1	; () banked
 10583  001C7C  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10584                           
 10585                           ; BSR set to: 1
 10586                           ;sm_ControlLearning_MC50.c: 252:                     var_sys.LearningDecelaration=NO;
 10587  001C7E  0E00               	movlw	0
 10588  001C80  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
 10589                           
 10590                           ; BSR set to: 1
 10591                           ;sm_ControlLearning_MC50.c: 253:                     ts_system.TimeWaitToGetCurrent=(100
      +                          0/50)*3;
 10592  001C82  0E00               	movlw	0
 10593  001C84  6FCF               	movwf	(_ts_system+53)& (0+255),b	;volatile
 10594  001C86  0E3C               	movlw	60
 10595  001C88  D7A4               	goto	L67
 10596  001C8A                     l22029:
 10597                           
 10598                           ; BSR set to: 0
 10599  001C8A  0101               	movlb	1	; () banked
 10600  001C8C  5100               	movf	_var_sys& (0+255),w,b	;volatile
 10601  001C8E  B4D8               	btfsc	status,2,c
 10602  001C90  D769               	goto	u26220
 10603                           
 10604                           ; BSR set to: 1
 10605                           ;sm_ControlLearning_MC50.c: 265:             {;sm_ControlLearning_MC50.c: 266:          
      +                                 ts_system.TimeWaitToNextState=(2*(1000/50));
 10606  001C92  0E00               	movlw	0
 10607  001C94  6FBF               	movwf	(_ts_system+37)& (0+255),b	;volatile
 10608  001C96  0E28               	movlw	40
 10609  001C98  6FBE               	movwf	(_ts_system+36)& (0+255),b	;volatile
 10610                           
 10611                           ; BSR set to: 1
 10612                           ;sm_ControlLearning_MC50.c: 267:                 if (ts_system.TimeWaitReleCapacitor <=0
      +                          )
 10613  001C9A  BFDF               	btfsc	(_ts_system+69)& (0+255),7,b	;volatile
 10614  001C9C  D005               	goto	u26340
 10615  001C9E  51DF               	movf	(_ts_system+69)& (0+255),w,b	;volatile
 10616  001CA0  E102               	bnz	u26341
 10617  001CA2  05DE               	decf	(_ts_system+68)& (0+255),w,b	;volatile
 10618  001CA4  B0D8               	btfsc	status,0,c
 10619  001CA6                     u26341:
 10620  001CA6  0012               	return	
 10621  001CA8                     u26340:
 10622                           
 10623                           ; BSR set to: 1
 10624                           ;sm_ControlLearning_MC50.c: 268:                 {;sm_ControlLearning_MC50.c: 269:      
      +                                     if(ts_system.TimeWaitToGetCurrent>0)
 10625  001CA8  BFCF               	btfsc	(_ts_system+53)& (0+255),7,b	;volatile
 10626  001CAA  0012               	return	
 10627  001CAC  51CF               	movf	(_ts_system+53)& (0+255),w,b	;volatile
 10628  001CAE  E103               	bnz	u26350
 10629  001CB0  05CE               	decf	(_ts_system+52)& (0+255),w,b	;volatile
 10630  001CB2  A0D8               	btfss	status,0,c
 10631  001CB4  0012               	return	
 10632  001CB6                     u26350:
 10633                           
 10634                           ; BSR set to: 1
 10635                           ;sm_ControlLearning_MC50.c: 270:                 {;sm_ControlLearning_MC50.c: 271:      
      +                                         learn_st.closeHistCurrent=calculateMean(learn_st.closeHistCurrent,var_sys
      +                          .ActualHistCurrent);
 10636  001CB6  C070  F010         	movff	_learn_st+16,calculateMean@meanValue	;volatile
 10637  001CBA  C071  F011         	movff	_learn_st+17,calculateMean@meanValue+1	;volatile
 10638  001CBE  6A12               	clrf	(calculateMean@meanValue+2)^0,c
 10639  001CC0  6A13               	clrf	(calculateMean@meanValue+3)^0,c
 10640  001CC2  C130  F014         	movff	_var_sys+48,calculateMean@newValue	;volatile
 10641  001CC6  C131  F015         	movff	_var_sys+49,calculateMean@newValue+1	;volatile
 10642  001CCA  C132  F016         	movff	_var_sys+50,calculateMean@newValue+2	;volatile
 10643  001CCE  C133  F017         	movff	_var_sys+51,calculateMean@newValue+3	;volatile
 10644  001CD2  ECC9  F040         	call	_calculateMean	;wreg free
 10645  001CD6  C010  F070         	movff	?_calculateMean,_learn_st+16	;volatile
 10646  001CDA  C011  F071         	movff	?_calculateMean+1,_learn_st+17	;volatile
 10647  001CDE  0012               	return	
 10648  001CE0                     l22041:
 10649                           
 10650                           ; BSR set to: 0
 10651                           ;sm_ControlLearning_MC50.c: 278:         {;sm_ControlLearning_MC50.c: 279:             i
      +                          f(((var_sys.FimCurso_OpenIsEnabled==YES)||control_limit_switch == 1)||(var_sys.LearningD
      +                          ecelaration==YES && (button_struct.current == 0 ||typeOpenOrder == TypeFull) && var_sys.
      +                          programinAutomatic == 1))
 10652  001CE0  0101               	movlb	1	; () banked
 10653  001CE2  0504               	decf	(_var_sys+4)& (0+255),w,b	;volatile
 10654  001CE4  B4D8               	btfsc	status,2,c
 10655  001CE6  D011               	goto	u26410
 10656                           
 10657                           ; BSR set to: 1
 10658  001CE8  0100               	movlb	0	; () banked
 10659  001CEA  0581               	decf	_control_limit_switch& (0+255),w,b
 10660  001CEC  B4D8               	btfsc	status,2,c
 10661  001CEE  D00D               	goto	u26410
 10662                           
 10663                           ; BSR set to: 0
 10664  001CF0  0101               	movlb	1	; () banked
 10665  001CF2  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 10666  001CF4  A4D8               	btfss	status,2,c
 10667  001CF6  D02C               	goto	l22067
 10668                           
 10669                           ; BSR set to: 1
 10670  001CF8  504D               	movf	(_button_struct+1)^0,w,c	;volatile
 10671  001CFA  B4D8               	btfsc	status,2,c
 10672  001CFC  D003               	goto	u26400
 10673                           
 10674                           ; BSR set to: 1
 10675  001CFE  043A               	decf	sm_execute_ControlLearning@typeOpenOrder^0,w,c
 10676  001D00  A4D8               	btfss	status,2,c
 10677  001D02  D026               	goto	l22067
 10678  001D04                     u26400:
 10679                           
 10680                           ; BSR set to: 1
 10681  001D04  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 10682  001D06  A4D8               	btfss	status,2,c
 10683  001D08  D023               	goto	l22067
 10684  001D0A                     u26410:
 10685                           
 10686                           ;sm_ControlLearning_MC50.c: 280:             {;sm_ControlLearning_MC50.c: 282:          
      +                                 var_sys.Counter_Learning = 0;
 10687  001D0A  0E00               	movlw	0
 10688  001D0C  0101               	movlb	1	; () banked
 10689  001D0E  6F17               	movwf	(_var_sys+23)& (0+255),b	;volatile
 10690                           
 10691                           ;sm_ControlLearning_MC50.c: 283:                 var_sys.LearningDecelaration = NO;
 10692  001D10  0E00               	movlw	0
 10693  001D12  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
 10694                           
 10695                           ;sm_ControlLearning_MC50.c: 284:                 control_limit_switch = 1;
 10696  001D14  0E01               	movlw	1
 10697  001D16  0100               	movlb	0	; () banked
 10698  001D18  6F81               	movwf	_control_limit_switch& (0+255),b
 10699                           
 10700                           ;sm_ControlLearning_MC50.c: 285:                 var_sys.StateMotor=Stopped;
 10701  001D1A  0E00               	movlw	0
 10702  001D1C  0101               	movlb	1	; () banked
 10703  001D1E  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10704                           
 10705                           ; BSR set to: 1
 10706                           ;sm_ControlLearning_MC50.c: 286:                 if(ts_system.TimeWaitToNextState<=0)
 10707  001D20  BFBF               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 10708  001D22  D005               	goto	u26420
 10709  001D24  51BF               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 10710  001D26  E102               	bnz	u26421
 10711  001D28  05BE               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 10712  001D2A  B0D8               	btfsc	status,0,c
 10713  001D2C                     u26421:
 10714  001D2C  0012               	return	
 10715  001D2E                     u26420:
 10716                           
 10717                           ; BSR set to: 1
 10718                           ;sm_ControlLearning_MC50.c: 287:                 {;sm_ControlLearning_MC50.c: 288:      
      +                                         sm_send_event(&controlLearning_stateMachine, ev_GateOpened);
 10719  001D2E  0EB2               	movlw	low _controlLearning_stateMachine
 10720  001D30  6E12               	movwf	sm_send_event@psm^0,c
 10721  001D32  0E02               	movlw	high _controlLearning_stateMachine
 10722  001D34  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10723  001D36  0E00               	movlw	0
 10724  001D38  6E15               	movwf	(sm_send_event@event+1)^0,c
 10725  001D3A  0E0B               	movlw	11
 10726  001D3C  6E14               	movwf	sm_send_event@event^0,c
 10727  001D3E  EC29  F041         	call	_sm_send_event	;wreg free
 10728                           
 10729                           ;sm_ControlLearning_MC50.c: 289:                     var_sys.StateMotor=InClose;
 10730  001D42  0E03               	movlw	3
 10731  001D44  0101               	movlb	1	; () banked
 10732  001D46  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10733                           
 10734                           ; BSR set to: 1
 10735                           ;sm_ControlLearning_MC50.c: 290:                     ts_system.TimeWaitToGetCurrent=(100
      +                          0/50)*4;
 10736  001D48  0E00               	movlw	0
 10737  001D4A  6FCF               	movwf	(_ts_system+53)& (0+255),b	;volatile
 10738  001D4C  0E50               	movlw	80
 10739  001D4E  D741               	goto	L67
 10740  001D50                     l22067:
 10741                           
 10742                           ; BSR set to: 1
 10743  001D50  5100               	movf	_var_sys& (0+255),w,b	;volatile
 10744  001D52  B4D8               	btfsc	status,2,c
 10745  001D54  D707               	goto	u26220
 10746                           
 10747                           ; BSR set to: 1
 10748  001D56  504D               	movf	(_button_struct+1)^0,w,c	;volatile
 10749  001D58  B4D8               	btfsc	status,2,c
 10750  001D5A  D003               	goto	u26450
 10751                           
 10752                           ; BSR set to: 1
 10753  001D5C  043A               	decf	sm_execute_ControlLearning@typeOpenOrder^0,w,c
 10754  001D5E  A4D8               	btfss	status,2,c
 10755  001D60  D00F               	goto	l22081
 10756  001D62                     u26450:
 10757                           
 10758                           ; BSR set to: 1
 10759  001D62  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 10760  001D64  A4D8               	btfss	status,2,c
 10761  001D66  D00C               	goto	l22081
 10762                           
 10763                           ; BSR set to: 1
 10764  001D68  5147               	movf	(_var_sys+71)& (0+255),w,b	;volatile
 10765  001D6A  A4D8               	btfss	status,2,c
 10766  001D6C  D009               	goto	l22081
 10767  001D6E                     u26470:
 10768                           
 10769                           ; BSR set to: 1
 10770                           ;sm_ControlLearning_MC50.c: 303:                 var_sys.LearningDecelaration=YES;
 10771  001D6E  0E01               	movlw	1
 10772  001D70  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
 10773                           
 10774                           ;sm_ControlLearning_MC50.c: 306:                 button_struct.processed = 1;
 10775  001D72  0E01               	movlw	1
 10776  001D74  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 10777                           
 10778                           ;sm_ControlLearning_MC50.c: 307:                 ts_system.TimeWaitToGetCurrent=(1000/50
      +                          )*4;
 10779  001D76  0E00               	movlw	0
 10780  001D78  6FCF               	movwf	(_ts_system+53)& (0+255),b	;volatile
 10781  001D7A  0E50               	movlw	80
 10782  001D7C  6FCE               	movwf	(_ts_system+52)& (0+255),b	;volatile
 10783                           
 10784                           ;sm_ControlLearning_MC50.c: 309:             }
 10785  001D7E  0012               	return	
 10786  001D80                     l22081:
 10787                           
 10788                           ; BSR set to: 1
 10789  001D80  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 10790  001D82  A4D8               	btfss	status,2,c
 10791  001D84  D00C               	goto	l22089
 10792                           
 10793                           ; BSR set to: 1
 10794                           ;sm_ControlLearning_MC50.c: 313:                 ts_system.TimeWaitToNextState=(2*(1000/
      +                          50));
 10795  001D86  0E00               	movlw	0
 10796  001D88  6FBF               	movwf	(_ts_system+37)& (0+255),b	;volatile
 10797  001D8A  0E28               	movlw	40
 10798  001D8C  6FBE               	movwf	(_ts_system+36)& (0+255),b	;volatile
 10799                           
 10800                           ; BSR set to: 1
 10801                           ;sm_ControlLearning_MC50.c: 315:                 if(ts_system.TimeWaitToGetCurrent>0)
 10802  001D8E  BFCF               	btfsc	(_ts_system+53)& (0+255),7,b	;volatile
 10803  001D90  0012               	return	
 10804  001D92  51CF               	movf	(_ts_system+53)& (0+255),w,b	;volatile
 10805  001D94  E103               	bnz	u26490
 10806  001D96  05CE               	decf	(_ts_system+52)& (0+255),w,b	;volatile
 10807  001D98  A0D8               	btfss	status,0,c
 10808  001D9A  0012               	return	
 10809  001D9C                     u26490:
 10810  001D9C  D739               	goto	u26290
 10811  001D9E                     l22089:
 10812                           
 10813                           ; BSR set to: 1
 10814                           ;sm_ControlLearning_MC50.c: 322:             {;sm_ControlLearning_MC50.c: 323:          
      +                                 var_sys.Counter_Learning = 1;
 10815  001D9E  0E01               	movlw	1
 10816  001DA0  6F17               	movwf	(_var_sys+23)& (0+255),b	;volatile
 10817                           
 10818                           ;sm_ControlLearning_MC50.c: 324:                 ts_system.TimeWaitToNextState=(2*(1000/
      +                          50));
 10819  001DA2  0E00               	movlw	0
 10820  001DA4  6FBF               	movwf	(_ts_system+37)& (0+255),b	;volatile
 10821  001DA6  0E28               	movlw	40
 10822  001DA8  6FBE               	movwf	(_ts_system+36)& (0+255),b	;volatile
 10823                           
 10824                           ; BSR set to: 1
 10825                           ;sm_ControlLearning_MC50.c: 326:                 if (ts_system.TimeWaitReleCapacitor <=0
      +                          )
 10826  001DAA  BFDF               	btfsc	(_ts_system+69)& (0+255),7,b	;volatile
 10827  001DAC  D005               	goto	u26500
 10828  001DAE  51DF               	movf	(_ts_system+69)& (0+255),w,b	;volatile
 10829  001DB0  E102               	bnz	u26501
 10830  001DB2  05DE               	decf	(_ts_system+68)& (0+255),w,b	;volatile
 10831  001DB4  B0D8               	btfsc	status,0,c
 10832  001DB6                     u26501:
 10833  001DB6  0012               	return	
 10834  001DB8                     u26500:
 10835                           
 10836                           ; BSR set to: 1
 10837                           ;sm_ControlLearning_MC50.c: 327:                 {;sm_ControlLearning_MC50.c: 328:      
      +                                     if(ts_system.TimeWaitToGetCurrent>0)
 10838  001DB8  BFCF               	btfsc	(_ts_system+53)& (0+255),7,b	;volatile
 10839  001DBA  0012               	return	
 10840  001DBC  51CF               	movf	(_ts_system+53)& (0+255),w,b	;volatile
 10841  001DBE  E103               	bnz	u26510
 10842  001DC0  05CE               	decf	(_ts_system+52)& (0+255),w,b	;volatile
 10843  001DC2  A0D8               	btfss	status,0,c
 10844  001DC4  0012               	return	
 10845  001DC6                     u26510:
 10846                           
 10847                           ; BSR set to: 1
 10848                           ;sm_ControlLearning_MC50.c: 329:                 {;sm_ControlLearning_MC50.c: 330:      
      +                                         learn_st.openCurrent=calculateMean(learn_st.openCurrent,var_sys.ActualCur
      +                          rent);
 10849  001DC6  C06A  F010         	movff	_learn_st+10,calculateMean@meanValue	;volatile
 10850  001DCA  C06B  F011         	movff	_learn_st+11,calculateMean@meanValue+1	;volatile
 10851  001DCE  6A12               	clrf	(calculateMean@meanValue+2)^0,c
 10852  001DD0  6A13               	clrf	(calculateMean@meanValue+3)^0,c
 10853  001DD2  C12E  F014         	movff	_var_sys+46,calculateMean@newValue	;volatile
 10854  001DD6  C12F  F015         	movff	_var_sys+47,calculateMean@newValue+1	;volatile
 10855  001DDA  6A16               	clrf	(calculateMean@newValue+2)^0,c
 10856  001DDC  6A17               	clrf	(calculateMean@newValue+3)^0,c
 10857  001DDE  ECC9  F040         	call	_calculateMean	;wreg free
 10858  001DE2  C010  F06A         	movff	?_calculateMean,_learn_st+10	;volatile
 10859  001DE6  C011  F06B         	movff	?_calculateMean+1,_learn_st+11	;volatile
 10860  001DEA  0012               	return	
 10861  001DEC                     l22097:
 10862                           
 10863                           ; BSR set to: 0
 10864                           ;sm_ControlLearning_MC50.c: 337:         {;sm_ControlLearning_MC50.c: 338:             i
      +                          f((var_sys.FimCurso_CloseIsEnabled==YES)||( var_sys.LearningDecelaration==YES && (button
      +                          _struct.current == 0 || typeOpenOrder == TypeFull) && var_sys.programinAutomatic == 1))
 10865  001DEC  0101               	movlb	1	; () banked
 10866  001DEE  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
 10867  001DF0  B4D8               	btfsc	status,2,c
 10868  001DF2  D00C               	goto	u26560
 10869                           
 10870                           ; BSR set to: 1
 10871  001DF4  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 10872  001DF6  A4D8               	btfss	status,2,c
 10873  001DF8  D06F               	goto	l22143
 10874                           
 10875                           ; BSR set to: 1
 10876  001DFA  504D               	movf	(_button_struct+1)^0,w,c	;volatile
 10877  001DFC  B4D8               	btfsc	status,2,c
 10878  001DFE  D003               	goto	u26550
 10879                           
 10880                           ; BSR set to: 1
 10881  001E00  043A               	decf	sm_execute_ControlLearning@typeOpenOrder^0,w,c
 10882  001E02  A4D8               	btfss	status,2,c
 10883  001E04  D069               	goto	l22143
 10884  001E06                     u26550:
 10885                           
 10886                           ; BSR set to: 1
 10887  001E06  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 10888  001E08  A4D8               	btfss	status,2,c
 10889  001E0A  D066               	goto	l22143
 10890  001E0C                     u26560:
 10891                           
 10892                           ; BSR set to: 1
 10893                           ;sm_ControlLearning_MC50.c: 339:             {;sm_ControlLearning_MC50.c: 342:          
      +                                 var_sys.Statedoorcontrol = st_Closed;
 10894  001E0C  0E01               	movlw	1
 10895  001E0E  6F1C               	movwf	(_var_sys+28)& (0+255),b	;volatile
 10896                           
 10897                           ;sm_ControlLearning_MC50.c: 343:                 var_sys.Counter_Learning = 0;
 10898  001E10  0E00               	movlw	0
 10899  001E12  6F17               	movwf	(_var_sys+23)& (0+255),b	;volatile
 10900                           
 10901                           ;sm_ControlLearning_MC50.c: 344:                 var_sys.LearningDecelaration = NO;
 10902  001E14  0E00               	movlw	0
 10903  001E16  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
 10904                           
 10905                           ;sm_ControlLearning_MC50.c: 345:                 var_sys.StateMotor=Stopped;
 10906  001E18  0E00               	movlw	0
 10907  001E1A  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10908                           
 10909                           ; BSR set to: 1
 10910                           ;sm_ControlLearning_MC50.c: 346:                 sm_send_event(&controlLearning_stateMac
      +                          hine, ev_GateClosed);
 10911  001E1C  0EB2               	movlw	low _controlLearning_stateMachine
 10912  001E1E  6E12               	movwf	sm_send_event@psm^0,c
 10913  001E20  0E02               	movlw	high _controlLearning_stateMachine
 10914  001E22  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10915  001E24  0E00               	movlw	0
 10916  001E26  6E15               	movwf	(sm_send_event@event+1)^0,c
 10917  001E28  0E0A               	movlw	10
 10918  001E2A  6E14               	movwf	sm_send_event@event^0,c
 10919  001E2C  EC29  F041         	call	_sm_send_event	;wreg free
 10920                           
 10921                           ;sm_ControlLearning_MC50.c: 347:                 sm_send_event(&controlGate_stateMachine
      +                          , ev_LearningComplete);
 10922  001E30  0EE2               	movlw	low _controlGate_stateMachine
 10923  001E32  6E12               	movwf	sm_send_event@psm^0,c
 10924  001E34  0E01               	movlw	high _controlGate_stateMachine
 10925  001E36  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10926  001E38  0E00               	movlw	0
 10927  001E3A  6E15               	movwf	(sm_send_event@event+1)^0,c
 10928  001E3C  0E13               	movlw	19
 10929  001E3E  6E14               	movwf	sm_send_event@event^0,c
 10930  001E40  EC29  F041         	call	_sm_send_event	;wreg free
 10931                           
 10932                           ;sm_ControlLearning_MC50.c: 348:                 var_sys_NVM.learningTimeToClose=learn_s
      +                          t.timeClose;
 10933  001E44  C060  F0D0         	movff	_learn_st,_var_sys_NVM+56	;volatile
 10934  001E48  C061  F0D1         	movff	_learn_st+1,_var_sys_NVM+57	;volatile
 10935  001E4C  C062  F0D2         	movff	_learn_st+2,_var_sys_NVM+58	;volatile
 10936  001E50  C063  F0D3         	movff	_learn_st+3,_var_sys_NVM+59	;volatile
 10937                           
 10938                           ;sm_ControlLearning_MC50.c: 349:                 var_sys_NVM.learningTimeToOpen=learn_st
      +                          .timeOpen;
 10939  001E54  C064  F0CC         	movff	_learn_st+4,_var_sys_NVM+52	;volatile
 10940  001E58  C065  F0CD         	movff	_learn_st+5,_var_sys_NVM+53	;volatile
 10941  001E5C  C066  F0CE         	movff	_learn_st+6,_var_sys_NVM+54	;volatile
 10942  001E60  C067  F0CF         	movff	_learn_st+7,_var_sys_NVM+55	;volatile
 10943                           
 10944                           ;sm_ControlLearning_MC50.c: 350:                 if (var_sys.programinAutomatic == 1){
 10945  001E64  0101               	movlb	1	; () banked
 10946  001E66  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 10947  001E68  A4D8               	btfss	status,2,c
 10948  001E6A  D005               	goto	l22121
 10949                           
 10950                           ; BSR set to: 1
 10951                           ;sm_ControlLearning_MC50.c: 351:                     var_sys_NVM.decelarationClose=learn
      +                          _st.timeDecelerationClose ;
 10952  001E6C  C068  F099         	movff	_learn_st+8,_var_sys_NVM+1	;volatile
 10953                           
 10954                           ;sm_ControlLearning_MC50.c: 352:                     var_sys_NVM.decelarationOpen=learn_
      +                          st.timeDecelerationOpen ;
 10955  001E70  C069  F098         	movff	_learn_st+9,_var_sys_NVM	;volatile
 10956                           
 10957                           ;sm_ControlLearning_MC50.c: 353:                                 }
 10958  001E74  D005               	goto	l22123
 10959  001E76                     l22121:
 10960                           
 10961                           ; BSR set to: 1
 10962                           ;sm_ControlLearning_MC50.c: 355:                     var_sys_NVM.decelarationClose=4 ;
 10963  001E76  0E04               	movlw	4
 10964  001E78  0100               	movlb	0	; () banked
 10965  001E7A  6F99               	movwf	(_var_sys_NVM+1)& (0+255),b	;volatile
 10966                           
 10967                           ;sm_ControlLearning_MC50.c: 356:                     var_sys_NVM.decelarationOpen=4 ;
 10968  001E7C  0E04               	movlw	4
 10969  001E7E  6F98               	movwf	_var_sys_NVM& (0+255),b	;volatile
 10970  001E80                     l22123:
 10971                           
 10972                           ;sm_ControlLearning_MC50.c: 358:                 var_sys_NVM.learningCurrentNormalClose=
      +                          learn_st.closeCurrent;
 10973  001E80  C06C  F0C8         	movff	_learn_st+12,_var_sys_NVM+48	;volatile
 10974  001E84  C06D  F0C9         	movff	_learn_st+13,_var_sys_NVM+49	;volatile
 10975                           
 10976                           ;sm_ControlLearning_MC50.c: 359:                 var_sys_NVM.learningCurrentNormalOpen=l
      +                          earn_st.openCurrent;
 10977  001E88  C06A  F0CA         	movff	_learn_st+10,_var_sys_NVM+50	;volatile
 10978  001E8C  C06B  F0CB         	movff	_learn_st+11,_var_sys_NVM+51	;volatile
 10979                           
 10980                           ;sm_ControlLearning_MC50.c: 360:                 var_sys_NVM.learningCurrentDecelaration
      +                          Open=learn_st.openHistCurrent;
 10981  001E90  C06E  F0C4         	movff	_learn_st+14,_var_sys_NVM+44	;volatile
 10982  001E94  C06F  F0C5         	movff	_learn_st+15,_var_sys_NVM+45	;volatile
 10983  001E98  0100               	movlb	0	; () banked
 10984  001E9A  6BC6               	clrf	(_var_sys_NVM+46)& (0+255),b	;volatile
 10985  001E9C  6BC7               	clrf	(_var_sys_NVM+47)& (0+255),b	;volatile
 10986                           
 10987                           ; BSR set to: 0
 10988                           ;sm_ControlLearning_MC50.c: 361:                 var_sys_NVM.learningCurrentDecelaration
      +                          Close=learn_st.closeHistCurrent;
 10989  001E9E  C070  F0C0         	movff	_learn_st+16,_var_sys_NVM+40	;volatile
 10990  001EA2  C071  F0C1         	movff	_learn_st+17,_var_sys_NVM+41	;volatile
 10991  001EA6  6BC2               	clrf	(_var_sys_NVM+42)& (0+255),b	;volatile
 10992  001EA8  6BC3               	clrf	(_var_sys_NVM+43)& (0+255),b	;volatile
 10993                           
 10994                           ; BSR set to: 0
 10995                           ;sm_ControlLearning_MC50.c: 362:                 SaveNVM_VarSystem(pageMemoryP);
 10996  001EAA  0E00               	movlw	0
 10997  001EAC  EC0A  F045         	call	_SaveNVM_VarSystem
 10998                           
 10999                           ;sm_ControlLearning_MC50.c: 363:                 SaveNVM_VarSystem(pageMemoryLearningVar
      +                          s);
 11000  001EB0  0E03               	movlw	3
 11001  001EB2  EC0A  F045         	call	_SaveNVM_VarSystem
 11002                           
 11003                           ;sm_ControlLearning_MC50.c: 364:                 SaveNVM_VarSystem(pageMemoryCounters);
 11004  001EB6  0E02               	movlw	2
 11005  001EB8  EC0A  F045         	call	_SaveNVM_VarSystem
 11006                           
 11007                           ;sm_ControlLearning_MC50.c: 365:                 var_sys.LearningIsEnabled=NO;
 11008  001EBC  0E00               	movlw	0
 11009  001EBE  0101               	movlb	1	; () banked
 11010  001EC0  6F26               	movwf	(_var_sys+38)& (0+255),b	;volatile
 11011                           
 11012                           ; BSR set to: 1
 11013                           ;sm_ControlLearning_MC50.c: 366:                 var_sys.PositionActual=0;
 11014  001EC2  0E00               	movlw	0
 11015  001EC4  6F1E               	movwf	(_var_sys+30)& (0+255),b	;volatile
 11016  001EC6  0E00               	movlw	0
 11017  001EC8  6F1F               	movwf	(_var_sys+31)& (0+255),b	;volatile
 11018  001ECA  0E00               	movlw	0
 11019  001ECC  6F20               	movwf	(_var_sys+32)& (0+255),b	;volatile
 11020  001ECE  0E00               	movlw	0
 11021  001ED0  6F21               	movwf	(_var_sys+33)& (0+255),b	;volatile
 11022                           
 11023                           ; BSR set to: 1
 11024                           ;sm_ControlLearning_MC50.c: 367:                 var_sys.PositionIsLost = NO;
 11025  001ED2  0E00               	movlw	0
 11026  001ED4  6F48               	movwf	(_var_sys+72)& (0+255),b	;volatile
 11027                           
 11028                           ;sm_ControlLearning_MC50.c: 369:             }
 11029  001ED6  0012               	return	
 11030  001ED8                     l22143:
 11031                           
 11032                           ; BSR set to: 1
 11033  001ED8  5100               	movf	_var_sys& (0+255),w,b	;volatile
 11034  001EDA  B4D8               	btfsc	status,2,c
 11035  001EDC  D643               	goto	u26220
 11036                           
 11037                           ; BSR set to: 1
 11038  001EDE  504D               	movf	(_button_struct+1)^0,w,c	;volatile
 11039  001EE0  B4D8               	btfsc	status,2,c
 11040  001EE2  D003               	goto	u26600
 11041                           
 11042                           ; BSR set to: 1
 11043  001EE4  043A               	decf	sm_execute_ControlLearning@typeOpenOrder^0,w,c
 11044  001EE6  A4D8               	btfss	status,2,c
 11045  001EE8  D003               	goto	l22155
 11046  001EEA                     u26600:
 11047                           
 11048                           ; BSR set to: 1
 11049  001EEA  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 11050  001EEC  B4D8               	btfsc	status,2,c
 11051  001EEE  D73F               	goto	u26470
 11052  001EF0                     l22155:
 11053                           
 11054                           ; BSR set to: 1
 11055  001EF0  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 11056  001EF2  A4D8               	btfss	status,2,c
 11057  001EF4  D008               	goto	l22161
 11058                           
 11059                           ; BSR set to: 1
 11060                           ;sm_ControlLearning_MC50.c: 384:                  if(ts_system.TimeWaitToGetCurrent>0)
 11061  001EF6  BFCF               	btfsc	(_ts_system+53)& (0+255),7,b	;volatile
 11062  001EF8  0012               	return	
 11063  001EFA  51CF               	movf	(_ts_system+53)& (0+255),w,b	;volatile
 11064  001EFC  E103               	bnz	u26630
 11065  001EFE  05CE               	decf	(_ts_system+52)& (0+255),w,b	;volatile
 11066  001F00  A0D8               	btfss	status,0,c
 11067  001F02  0012               	return	
 11068  001F04                     u26630:
 11069  001F04  D6D8               	goto	u26350
 11070  001F06                     l22161:
 11071                           
 11072                           ; BSR set to: 1
 11073                           ;sm_ControlLearning_MC50.c: 390:             {;sm_ControlLearning_MC50.c: 391:          
      +                                 var_sys.Counter_Learning = 1;
 11074  001F06  0E01               	movlw	1
 11075  001F08  6F17               	movwf	(_var_sys+23)& (0+255),b	;volatile
 11076                           
 11077                           ;sm_ControlLearning_MC50.c: 392:                 ts_system.TimeWaitToNextState=(2*(1000/
      +                          50));
 11078  001F0A  0E00               	movlw	0
 11079  001F0C  6FBF               	movwf	(_ts_system+37)& (0+255),b	;volatile
 11080  001F0E  0E28               	movlw	40
 11081  001F10  6FBE               	movwf	(_ts_system+36)& (0+255),b	;volatile
 11082                           
 11083                           ; BSR set to: 1
 11084                           ;sm_ControlLearning_MC50.c: 395:                 if (ts_system.TimeWaitReleCapacitor <=0
      +                          )
 11085  001F12  BFDF               	btfsc	(_ts_system+69)& (0+255),7,b	;volatile
 11086  001F14  D005               	goto	u26640
 11087  001F16  51DF               	movf	(_ts_system+69)& (0+255),w,b	;volatile
 11088  001F18  E102               	bnz	u26641
 11089  001F1A  05DE               	decf	(_ts_system+68)& (0+255),w,b	;volatile
 11090  001F1C  B0D8               	btfsc	status,0,c
 11091  001F1E                     u26641:
 11092  001F1E  0012               	return	
 11093  001F20                     u26640:
 11094                           
 11095                           ; BSR set to: 1
 11096                           ;sm_ControlLearning_MC50.c: 396:                 {;sm_ControlLearning_MC50.c: 397:      
      +                                     if(ts_system.TimeWaitToGetCurrent>0)
 11097  001F20  BFCF               	btfsc	(_ts_system+53)& (0+255),7,b	;volatile
 11098  001F22  0012               	return	
 11099  001F24  51CF               	movf	(_ts_system+53)& (0+255),w,b	;volatile
 11100  001F26  E103               	bnz	u26650
 11101  001F28  05CE               	decf	(_ts_system+52)& (0+255),w,b	;volatile
 11102  001F2A  A0D8               	btfss	status,0,c
 11103  001F2C  0012               	return	
 11104  001F2E                     u26650:
 11105                           
 11106                           ; BSR set to: 1
 11107                           ;sm_ControlLearning_MC50.c: 398:                 {;sm_ControlLearning_MC50.c: 399:      
      +                                         learn_st.closeCurrent=calculateMean(learn_st.closeCurrent,var_sys.ActualC
      +                          urrent);
 11108  001F2E  C06C  F010         	movff	_learn_st+12,calculateMean@meanValue	;volatile
 11109  001F32  C06D  F011         	movff	_learn_st+13,calculateMean@meanValue+1	;volatile
 11110  001F36  6A12               	clrf	(calculateMean@meanValue+2)^0,c
 11111  001F38  6A13               	clrf	(calculateMean@meanValue+3)^0,c
 11112  001F3A  C12E  F014         	movff	_var_sys+46,calculateMean@newValue	;volatile
 11113  001F3E  C12F  F015         	movff	_var_sys+47,calculateMean@newValue+1	;volatile
 11114  001F42  6A16               	clrf	(calculateMean@newValue+2)^0,c
 11115  001F44  6A17               	clrf	(calculateMean@newValue+3)^0,c
 11116  001F46  ECC9  F040         	call	_calculateMean	;wreg free
 11117  001F4A  C010  F06C         	movff	?_calculateMean,_learn_st+12	;volatile
 11118  001F4E  C011  F06D         	movff	?_calculateMean+1,_learn_st+13	;volatile
 11119  001F52  0012               	return	
 11120  001F54                     l22171:
 11121  001F54  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
 11122  001F58  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
 11123  001F5C  50DF               	movf	indf2,w,c
 11124  001F5E  0100               	movlb	0	; () banked
 11125  001F60  6FDE               	movwf	??_sm_execute_ControlLearning& (0+255),b
 11126  001F62  6BDF               	clrf	(??_sm_execute_ControlLearning+1)& (0+255),b
 11127                           
 11128                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11129                           ; Switch size 1, requested type "simple"
 11130                           ; Number of cases is 1, Range of values is 0 to 0
 11131                           ; switch strategies available:
 11132                           ; Name         Instructions Cycles
 11133                           ; simple_byte            4     3 (average)
 11134                           ;	Chosen strategy is simple_byte
 11135  001F64  51DF               	movf	(??_sm_execute_ControlLearning+1)& (0+255),w,b
 11136  001F66  0A00               	xorlw	0	; case 0
 11137  001F68  A4D8               	btfss	status,2,c
 11138  001F6A  0012               	return	
 11139                           
 11140                           ; BSR set to: 0
 11141                           ; Switch size 1, requested type "simple"
 11142                           ; Number of cases is 6, Range of values is 0 to 5
 11143                           ; switch strategies available:
 11144                           ; Name         Instructions Cycles
 11145                           ; simple_byte           19    10 (average)
 11146                           ;	Chosen strategy is simple_byte
 11147  001F6C  51DE               	movf	??_sm_execute_ControlLearning& (0+255),w,b
 11148  001F6E  0A00               	xorlw	0	; case 0
 11149  001F70  B4D8               	btfsc	status,2,c
 11150  001F72  D570               	goto	l21917
 11151  001F74  0A01               	xorlw	1	; case 1
 11152  001F76  B4D8               	btfsc	status,2,c
 11153  001F78  D5BB               	goto	l21941
 11154  001F7A  0A03               	xorlw	3	; case 2
 11155  001F7C  B4D8               	btfsc	status,2,c
 11156  001F7E  D5FA               	goto	l21975
 11157  001F80  0A01               	xorlw	1	; case 3
 11158  001F82  B4D8               	btfsc	status,2,c
 11159  001F84  D65A               	goto	l22009
 11160  001F86  0A07               	xorlw	7	; case 4
 11161  001F88  B4D8               	btfsc	status,2,c
 11162  001F8A  D6AA               	goto	l22041
 11163  001F8C  0A01               	xorlw	1	; case 5
 11164  001F8E  A4D8               	btfss	status,2,c
 11165  001F90  0012               	return	
 11166  001F92  D72C               	goto	l22097
 11167  001F94                     __end_of_sm_execute_ControlLearning:
 11168                           	callstack 0
 11169                           
 11170 ;; *************** function _generateErrorLearnig *****************
 11171 ;; Defined at:
 11172 ;;		line 424 in file "sm_ControlLearning_MC50.c"
 11173 ;; Parameters:    Size  Location     Type
 11174 ;;		None
 11175 ;; Auto vars:     Size  Location     Type
 11176 ;;		None
 11177 ;; Return value:  Size  Location     Type
 11178 ;;                  1    wreg      void 
 11179 ;; Registers used:
 11180 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11181 ;; Tracked objects:
 11182 ;;		On entry : 3E/1
 11183 ;;		On exit  : 0/0
 11184 ;;		Unchanged: 0/0
 11185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11189 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11190 ;;Total ram usage:        0 bytes
 11191 ;; Hardware stack levels used: 1
 11192 ;; Hardware stack levels required when called: 6
 11193 ;; This function calls:
 11194 ;;		_sm_init
 11195 ;; This function is called by:
 11196 ;;		_sm_execute_ControlLearning
 11197 ;; This function uses a non-reentrant model
 11198 ;;
 11199                           
 11200                           	psect	text22
 11201  0080C4                     __ptext22:
 11202                           	callstack 0
 11203  0080C4                     _generateErrorLearnig:
 11204                           	callstack 22
 11205                           
 11206                           ;sm_ControlLearning_MC50.c: 428:     var_sys.LearningIsEnabled=NO;
 11207                           
 11208                           ;incstack = 0
 11209  0080C4  0E00               	movlw	0
 11210  0080C6  0101               	movlb	1	; () banked
 11211  0080C8  6F26               	movwf	(_var_sys+38)& (0+255),b	;volatile
 11212                           
 11213                           ; BSR set to: 1
 11214                           ;sm_ControlLearning_MC50.c: 430:     sm_init(&menuConfiguration_stateMachine,st_MainMenu
      +                          ,HIST_NONE);
 11215  0080CA  0EBD               	movlw	low _menuConfiguration_stateMachine
 11216  0080CC  6E12               	movwf	sm_init@psm^0,c
 11217  0080CE  0E02               	movlw	high _menuConfiguration_stateMachine
 11218  0080D0  6E13               	movwf	(sm_init@psm+1)^0,c
 11219  0080D2  0E00               	movlw	0
 11220  0080D4  6E15               	movwf	(sm_init@initial_state+1)^0,c
 11221  0080D6  0E00               	movlw	0
 11222  0080D8  6E14               	movwf	sm_init@initial_state^0,c
 11223  0080DA  0E00               	movlw	0
 11224  0080DC  6E16               	movwf	sm_init@hist_mode^0,c
 11225  0080DE  EC0C  F042         	call	_sm_init	;wreg free
 11226                           
 11227                           ;sm_ControlLearning_MC50.c: 431:     sm_init(&main_stateMachine,st_standBy,HIST_NONE);
 11228  0080E2  0EED               	movlw	low _main_stateMachine
 11229  0080E4  6E12               	movwf	sm_init@psm^0,c
 11230  0080E6  0E01               	movlw	high _main_stateMachine
 11231  0080E8  6E13               	movwf	(sm_init@psm+1)^0,c
 11232  0080EA  0E00               	movlw	0
 11233  0080EC  6E15               	movwf	(sm_init@initial_state+1)^0,c
 11234  0080EE  0E00               	movlw	0
 11235  0080F0  6E14               	movwf	sm_init@initial_state^0,c
 11236  0080F2  0E00               	movlw	0
 11237  0080F4  6E16               	movwf	sm_init@hist_mode^0,c
 11238  0080F6  EC0C  F042         	call	_sm_init	;wreg free
 11239                           
 11240                           ;sm_ControlLearning_MC50.c: 432:     sm_init(&controlGate_stateMachine,st_Idle,HIST_NONE
      +                          );
 11241  0080FA  0EE2               	movlw	low _controlGate_stateMachine
 11242  0080FC  6E12               	movwf	sm_init@psm^0,c
 11243  0080FE  0E01               	movlw	high _controlGate_stateMachine
 11244  008100  6E13               	movwf	(sm_init@psm+1)^0,c
 11245  008102  0E00               	movlw	0
 11246  008104  6E15               	movwf	(sm_init@initial_state+1)^0,c
 11247  008106  0E00               	movlw	0
 11248  008108  6E14               	movwf	sm_init@initial_state^0,c
 11249  00810A  0E00               	movlw	0
 11250  00810C  6E16               	movwf	sm_init@hist_mode^0,c
 11251  00810E  EC0C  F042         	call	_sm_init	;wreg free
 11252                           
 11253                           ;sm_ControlLearning_MC50.c: 433:     sm_init(&controlLearning_stateMachine,st_InitLearni
      +                          ng,HIST_NONE);
 11254  008112  0EB2               	movlw	low _controlLearning_stateMachine
 11255  008114  6E12               	movwf	sm_init@psm^0,c
 11256  008116  0E02               	movlw	high _controlLearning_stateMachine
 11257  008118  6E13               	movwf	(sm_init@psm+1)^0,c
 11258  00811A  0E00               	movlw	0
 11259  00811C  6E15               	movwf	(sm_init@initial_state+1)^0,c
 11260  00811E  0E00               	movlw	0
 11261  008120  6E14               	movwf	sm_init@initial_state^0,c
 11262  008122  0E00               	movlw	0
 11263  008124  6E16               	movwf	sm_init@hist_mode^0,c
 11264  008126  EC0C  F042         	call	_sm_init	;wreg free
 11265  00812A  0012               	return		;funcret
 11266  00812C                     __end_of_generateErrorLearnig:
 11267                           	callstack 0
 11268                           
 11269 ;; *************** function _sm_init *****************
 11270 ;; Defined at:
 11271 ;;		line 12 in file "sm_common_MC50.c"
 11272 ;; Parameters:    Size  Location     Type
 11273 ;;  psm             2   17[COMRAM] PTR struct .
 11274 ;;		 -> controlLearning_stateMachine(11), controlGate_stateMachine(11), main_stateMachine(11), menuConfiguration_stateMa
      +chine(11), 
 11275 ;;  initial_stat    2   19[COMRAM] int 
 11276 ;;  hist_mode       1   21[COMRAM] enum E348
 11277 ;; Auto vars:     Size  Location     Type
 11278 ;;		None
 11279 ;; Return value:  Size  Location     Type
 11280 ;;                  1    wreg      void 
 11281 ;; Registers used:
 11282 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11283 ;; Tracked objects:
 11284 ;;		On entry : 0/1
 11285 ;;		On exit  : 0/0
 11286 ;;		Unchanged: 0/0
 11287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11288 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11291 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11292 ;;Total ram usage:        5 bytes
 11293 ;; Hardware stack levels used: 1
 11294 ;; Hardware stack levels required when called: 5
 11295 ;; This function calls:
 11296 ;;		_sm_restart
 11297 ;; This function is called by:
 11298 ;;		_main
 11299 ;;		_generateErrorLearnig
 11300 ;; This function uses a non-reentrant model
 11301 ;;
 11302                           
 11303                           	psect	text23
 11304  008418                     __ptext23:
 11305                           	callstack 0
 11306  008418                     _sm_init:
 11307                           	callstack 25
 11308                           
 11309                           ;sm_common_MC50.c: 12: void sm_init(sm_t *psm, int initial_state, sm_history_t hist_mode
      +                          );sm_common_MC50.c: 13: {;sm_common_MC50.c: 14:  psm->initial_state = initial_state;
 11310                           
 11311                           ;incstack = 0
 11312  008418  EE20 F002          	lfsr	2,2
 11313  00841C  5012               	movf	sm_init@psm^0,w,c
 11314  00841E  26D9               	addwf	fsr2l,f,c
 11315  008420  5013               	movf	(sm_init@psm+1)^0,w,c
 11316  008422  22DA               	addwfc	fsr2h,f,c
 11317  008424  C014  FFDE         	movff	sm_init@initial_state,postinc2
 11318  008428  C015  FFDD         	movff	sm_init@initial_state+1,postdec2
 11319                           
 11320                           ;sm_common_MC50.c: 15:  psm->history = hist_mode;
 11321  00842C  EE20 F006          	lfsr	2,6
 11322  008430  5012               	movf	sm_init@psm^0,w,c
 11323  008432  26D9               	addwf	fsr2l,f,c
 11324  008434  5013               	movf	(sm_init@psm+1)^0,w,c
 11325  008436  22DA               	addwfc	fsr2h,f,c
 11326  008438  C016  FFDF         	movff	sm_init@hist_mode,indf2
 11327                           
 11328                           ;sm_common_MC50.c: 16:  psm->current_state = initial_state;
 11329  00843C  C012  FFD9         	movff	sm_init@psm,fsr2l
 11330  008440  C013  FFDA         	movff	sm_init@psm+1,fsr2h
 11331  008444  C014  FFDE         	movff	sm_init@initial_state,postinc2
 11332  008448  C015  FFDD         	movff	sm_init@initial_state+1,postdec2
 11333                           
 11334                           ;sm_common_MC50.c: 19:  psm->parent_machine = ((void*)0);
 11335  00844C  EE20 F007          	lfsr	2,7
 11336  008450  5012               	movf	sm_init@psm^0,w,c
 11337  008452  26D9               	addwf	fsr2l,f,c
 11338  008454  5013               	movf	(sm_init@psm+1)^0,w,c
 11339  008456  22DA               	addwfc	fsr2h,f,c
 11340  008458  0E00               	movlw	0
 11341  00845A  6EDE               	movwf	postinc2,c
 11342  00845C  0E00               	movlw	0
 11343  00845E  6EDD               	movwf	postdec2,c
 11344                           
 11345                           ;sm_common_MC50.c: 20:  sm_restart(psm);
 11346  008460  C012  F010         	movff	sm_init@psm,sm_restart@psm
 11347  008464  C013  F011         	movff	sm_init@psm+1,sm_restart@psm+1
 11348  008468  ECEA  F043         	call	_sm_restart	;wreg free
 11349  00846C  0012               	return		;funcret
 11350  00846E                     __end_of_sm_init:
 11351                           	callstack 0
 11352                           
 11353 ;; *************** function _sm_restart *****************
 11354 ;; Defined at:
 11355 ;;		line 23 in file "sm_common_MC50.c"
 11356 ;; Parameters:    Size  Location     Type
 11357 ;;  psm             2   15[COMRAM] PTR struct .
 11358 ;;		 -> controlLearning_stateMachine(11), controlGate_stateMachine(11), main_stateMachine(11), menuConfiguration_stateMa
      +chine(11), 
 11359 ;; Auto vars:     Size  Location     Type
 11360 ;;		None
 11361 ;; Return value:  Size  Location     Type
 11362 ;;                  1    wreg      void 
 11363 ;; Registers used:
 11364 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 11365 ;; Tracked objects:
 11366 ;;		On entry : 0/1
 11367 ;;		On exit  : 0/0
 11368 ;;		Unchanged: 0/0
 11369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11370 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11373 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11374 ;;Total ram usage:        2 bytes
 11375 ;; Hardware stack levels used: 1
 11376 ;; Hardware stack levels required when called: 4
 11377 ;; This function calls:
 11378 ;;		Nothing
 11379 ;; This function is called by:
 11380 ;;		_sm_init
 11381 ;; This function uses a non-reentrant model
 11382 ;;
 11383                           
 11384                           	psect	text24
 11385  0087D4                     __ptext24:
 11386                           	callstack 0
 11387  0087D4                     _sm_restart:
 11388                           	callstack 25
 11389                           
 11390                           ;sm_common_MC50.c: 24:  if(psm->history == HIST_NONE){
 11391                           
 11392                           ;incstack = 0
 11393  0087D4  EE20 F006          	lfsr	2,6
 11394  0087D8  5010               	movf	sm_restart@psm^0,w,c
 11395  0087DA  26D9               	addwf	fsr2l,f,c
 11396  0087DC  5011               	movf	(sm_restart@psm+1)^0,w,c
 11397  0087DE  22DA               	addwfc	fsr2h,f,c
 11398  0087E0  50DF               	movf	indf2,w,c
 11399  0087E2  A4D8               	btfss	status,2,c
 11400  0087E4  D00E               	goto	l19541
 11401                           
 11402                           ;sm_common_MC50.c: 25:   psm->current_state = psm->initial_state;
 11403  0087E6  EE20 F002          	lfsr	2,2
 11404  0087EA  5010               	movf	sm_restart@psm^0,w,c
 11405  0087EC  26D9               	addwf	fsr2l,f,c
 11406  0087EE  5011               	movf	(sm_restart@psm+1)^0,w,c
 11407  0087F0  22DA               	addwfc	fsr2h,f,c
 11408  0087F2  C010  FFE1         	movff	sm_restart@psm,fsr1l
 11409  0087F6  C011  FFE2         	movff	sm_restart@psm+1,fsr1h
 11410  0087FA  CFDE FFE6          	movff	postinc2,postinc1
 11411  0087FE  CFDD FFE5          	movff	postdec2,postdec1
 11412  008802                     l19541:
 11413                           
 11414                           ;sm_common_MC50.c: 27:  psm->last_event = 0;
 11415  008802  EE20 F004          	lfsr	2,4
 11416  008806  5010               	movf	sm_restart@psm^0,w,c
 11417  008808  26D9               	addwf	fsr2l,f,c
 11418  00880A  5011               	movf	(sm_restart@psm+1)^0,w,c
 11419  00880C  22DA               	addwfc	fsr2h,f,c
 11420  00880E  0E00               	movlw	0
 11421  008810  6EDE               	movwf	postinc2,c
 11422  008812  0E00               	movlw	0
 11423  008814  6EDD               	movwf	postdec2,c
 11424  008816  0012               	return		;funcret
 11425  008818                     __end_of_sm_restart:
 11426                           	callstack 0
 11427                           
 11428 ;; *************** function _clearLearningValue *****************
 11429 ;; Defined at:
 11430 ;;		line 436 in file "sm_ControlLearning_MC50.c"
 11431 ;; Parameters:    Size  Location     Type
 11432 ;;		None
 11433 ;; Auto vars:     Size  Location     Type
 11434 ;;		None
 11435 ;; Return value:  Size  Location     Type
 11436 ;;                  1    wreg      void 
 11437 ;; Registers used:
 11438 ;;		wreg, status,2
 11439 ;; Tracked objects:
 11440 ;;		On entry : 3F/1
 11441 ;;		On exit  : 3F/0
 11442 ;;		Unchanged: 0/0
 11443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11447 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11448 ;;Total ram usage:        0 bytes
 11449 ;; Hardware stack levels used: 1
 11450 ;; Hardware stack levels required when called: 4
 11451 ;; This function calls:
 11452 ;;		Nothing
 11453 ;; This function is called by:
 11454 ;;		_sm_execute_ControlLearning
 11455 ;; This function uses a non-reentrant model
 11456 ;;
 11457                           
 11458                           	psect	text25
 11459  007BCC                     __ptext25:
 11460                           	callstack 0
 11461  007BCC                     _clearLearningValue:
 11462                           	callstack 24
 11463                           
 11464                           ; BSR set to: 1
 11465                           ;sm_ControlLearning_MC50.c: 438:     learn_st.timeOpen=0;
 11466                           
 11467                           ;incstack = 0
 11468  007BCC  0E00               	movlw	0
 11469  007BCE  0100               	movlb	0	; () banked
 11470  007BD0  6F64               	movwf	(_learn_st+4)& (0+255),b	;volatile
 11471  007BD2  0E00               	movlw	0
 11472  007BD4  6F65               	movwf	(_learn_st+5)& (0+255),b	;volatile
 11473  007BD6  0E00               	movlw	0
 11474  007BD8  6F66               	movwf	(_learn_st+6)& (0+255),b	;volatile
 11475  007BDA  0E00               	movlw	0
 11476  007BDC  6F67               	movwf	(_learn_st+7)& (0+255),b	;volatile
 11477                           
 11478                           ;sm_ControlLearning_MC50.c: 439:     learn_st.timeClose=0;
 11479  007BDE  0E00               	movlw	0
 11480  007BE0  6F60               	movwf	_learn_st& (0+255),b	;volatile
 11481  007BE2  0E00               	movlw	0
 11482  007BE4  6F61               	movwf	(_learn_st+1)& (0+255),b	;volatile
 11483  007BE6  0E00               	movlw	0
 11484  007BE8  6F62               	movwf	(_learn_st+2)& (0+255),b	;volatile
 11485  007BEA  0E00               	movlw	0
 11486  007BEC  6F63               	movwf	(_learn_st+3)& (0+255),b	;volatile
 11487                           
 11488                           ;sm_ControlLearning_MC50.c: 440:     learn_st.timeDecelerationOpen=0;
 11489  007BEE  0E00               	movlw	0
 11490  007BF0  6F69               	movwf	(_learn_st+9)& (0+255),b	;volatile
 11491                           
 11492                           ;sm_ControlLearning_MC50.c: 441:     learn_st.timeDecelerationClose=0;
 11493  007BF2  0E00               	movlw	0
 11494  007BF4  6F68               	movwf	(_learn_st+8)& (0+255),b	;volatile
 11495                           
 11496                           ;sm_ControlLearning_MC50.c: 442:     learn_st.openCurrent=0;
 11497  007BF6  0E00               	movlw	0
 11498  007BF8  6F6B               	movwf	(_learn_st+11)& (0+255),b	;volatile
 11499  007BFA  0E00               	movlw	0
 11500  007BFC  6F6A               	movwf	(_learn_st+10)& (0+255),b	;volatile
 11501                           
 11502                           ;sm_ControlLearning_MC50.c: 443:     learn_st.closeCurrent=0;
 11503  007BFE  0E00               	movlw	0
 11504  007C00  6F6D               	movwf	(_learn_st+13)& (0+255),b	;volatile
 11505  007C02  0E00               	movlw	0
 11506  007C04  6F6C               	movwf	(_learn_st+12)& (0+255),b	;volatile
 11507                           
 11508                           ;sm_ControlLearning_MC50.c: 444:     learn_st.openHistCurrent=0;
 11509  007C06  0E00               	movlw	0
 11510  007C08  6F6F               	movwf	(_learn_st+15)& (0+255),b	;volatile
 11511  007C0A  0E00               	movlw	0
 11512  007C0C  6F6E               	movwf	(_learn_st+14)& (0+255),b	;volatile
 11513                           
 11514                           ;sm_ControlLearning_MC50.c: 445:     learn_st.closeHistCurrent=0;
 11515  007C0E  0E00               	movlw	0
 11516  007C10  6F71               	movwf	(_learn_st+17)& (0+255),b	;volatile
 11517  007C12  0E00               	movlw	0
 11518  007C14  6F70               	movwf	(_learn_st+16)& (0+255),b	;volatile
 11519                           
 11520                           ;sm_ControlLearning_MC50.c: 446:     var_sys_NVM.learningCurrentNormalClose=0;
 11521  007C16  0E00               	movlw	0
 11522  007C18  6FC9               	movwf	(_var_sys_NVM+49)& (0+255),b	;volatile
 11523  007C1A  0E00               	movlw	0
 11524  007C1C  6FC8               	movwf	(_var_sys_NVM+48)& (0+255),b	;volatile
 11525                           
 11526                           ;sm_ControlLearning_MC50.c: 447:     var_sys_NVM.learningCurrentNormalOpen=0;
 11527  007C1E  0E00               	movlw	0
 11528  007C20  6FCB               	movwf	(_var_sys_NVM+51)& (0+255),b	;volatile
 11529  007C22  0E00               	movlw	0
 11530  007C24  6FCA               	movwf	(_var_sys_NVM+50)& (0+255),b	;volatile
 11531                           
 11532                           ;sm_ControlLearning_MC50.c: 448:     var_sys_NVM.learningCurrentDecelarationClose=0;
 11533  007C26  0E00               	movlw	0
 11534  007C28  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 11535  007C2A  0E00               	movlw	0
 11536  007C2C  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 11537  007C2E  0E00               	movlw	0
 11538  007C30  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 11539  007C32  0E00               	movlw	0
 11540  007C34  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 11541                           
 11542                           ;sm_ControlLearning_MC50.c: 449:     var_sys_NVM.learningCurrentDecelarationOpen=0;
 11543  007C36  0E00               	movlw	0
 11544  007C38  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 11545  007C3A  0E00               	movlw	0
 11546  007C3C  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 11547  007C3E  0E00               	movlw	0
 11548  007C40  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 11549  007C42  0E00               	movlw	0
 11550  007C44  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 11551                           
 11552                           ; BSR set to: 0
 11553  007C46  0012               	return		;funcret
 11554  007C48                     __end_of_clearLearningValue:
 11555                           	callstack 0
 11556                           
 11557 ;; *************** function _calculateMean *****************
 11558 ;; Defined at:
 11559 ;;		line 411 in file "sm_ControlLearning_MC50.c"
 11560 ;; Parameters:    Size  Location     Type
 11561 ;;  meanValue       4   15[COMRAM] unsigned long 
 11562 ;;  newValue        4   19[COMRAM] unsigned long 
 11563 ;; Auto vars:     Size  Location     Type
 11564 ;;		None
 11565 ;; Return value:  Size  Location     Type
 11566 ;;                  4   15[COMRAM] unsigned long 
 11567 ;; Registers used:
 11568 ;;		wreg, status,2, status,0
 11569 ;; Tracked objects:
 11570 ;;		On entry : 3E/1
 11571 ;;		On exit  : 3E/0
 11572 ;;		Unchanged: 3E/0
 11573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11574 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11576 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11577 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11578 ;;Total ram usage:       12 bytes
 11579 ;; Hardware stack levels used: 1
 11580 ;; Hardware stack levels required when called: 4
 11581 ;; This function calls:
 11582 ;;		Nothing
 11583 ;; This function is called by:
 11584 ;;		_sm_execute_ControlLearning
 11585 ;; This function uses a non-reentrant model
 11586 ;;
 11587                           
 11588                           	psect	text26
 11589  008192                     __ptext26:
 11590                           	callstack 0
 11591  008192                     _calculateMean:
 11592                           	callstack 24
 11593                           
 11594                           ;sm_ControlLearning_MC50.c: 411: unsigned long calculateMean(unsigned long meanValue,uns
      +                          igned long newValue);sm_ControlLearning_MC50.c: 412: {;sm_ControlLearning_MC50.c: 413:  
      +                             if(meanValue==0)
 11595                           
 11596                           ; BSR set to: 0
 11597                           ;incstack = 0
 11598  008192  5010               	movf	calculateMean@meanValue^0,w,c
 11599  008194  1011               	iorwf	(calculateMean@meanValue+1)^0,w,c
 11600  008196  1012               	iorwf	(calculateMean@meanValue+2)^0,w,c
 11601  008198  1013               	iorwf	(calculateMean@meanValue+3)^0,w,c
 11602  00819A  A4D8               	btfss	status,2,c
 11603  00819C  D009               	goto	l20501
 11604                           
 11605                           ;sm_ControlLearning_MC50.c: 414:     {;sm_ControlLearning_MC50.c: 415:         meanValue
      +                          =newValue;
 11606  00819E  C014  F010         	movff	calculateMean@newValue,calculateMean@meanValue
 11607  0081A2  C015  F011         	movff	calculateMean@newValue+1,calculateMean@meanValue+1
 11608  0081A6  C016  F012         	movff	calculateMean@newValue+2,calculateMean@meanValue+2
 11609  0081AA  C017  F013         	movff	calculateMean@newValue+3,calculateMean@meanValue+3
 11610                           
 11611                           ;sm_ControlLearning_MC50.c: 416:     }
 11612  0081AE  D019               	goto	l20503
 11613  0081B0                     l20501:
 11614                           
 11615                           ;sm_ControlLearning_MC50.c: 418:     {;sm_ControlLearning_MC50.c: 419:         meanValue
      +                          =(meanValue+newValue)/2;
 11616  0081B0  5014               	movf	calculateMean@newValue^0,w,c
 11617  0081B2  2410               	addwf	calculateMean@meanValue^0,w,c
 11618  0081B4  6E18               	movwf	??_calculateMean^0,c
 11619  0081B6  5015               	movf	(calculateMean@newValue+1)^0,w,c
 11620  0081B8  2011               	addwfc	(calculateMean@meanValue+1)^0,w,c
 11621  0081BA  6E19               	movwf	(??_calculateMean+1)^0,c
 11622  0081BC  5016               	movf	(calculateMean@newValue+2)^0,w,c
 11623  0081BE  2012               	addwfc	(calculateMean@meanValue+2)^0,w,c
 11624  0081C0  6E1A               	movwf	(??_calculateMean+2)^0,c
 11625  0081C2  5017               	movf	(calculateMean@newValue+3)^0,w,c
 11626  0081C4  2013               	addwfc	(calculateMean@meanValue+3)^0,w,c
 11627  0081C6  6E1B               	movwf	(??_calculateMean+3)^0,c
 11628  0081C8  90D8               	bcf	status,0,c
 11629  0081CA  321B               	rrcf	(??_calculateMean+3)^0,f,c
 11630  0081CC  321A               	rrcf	(??_calculateMean+2)^0,f,c
 11631  0081CE  3219               	rrcf	(??_calculateMean+1)^0,f,c
 11632  0081D0  3218               	rrcf	??_calculateMean^0,f,c
 11633  0081D2  C018  F010         	movff	??_calculateMean,calculateMean@meanValue
 11634  0081D6  C019  F011         	movff	??_calculateMean+1,calculateMean@meanValue+1
 11635  0081DA  C01A  F012         	movff	??_calculateMean+2,calculateMean@meanValue+2
 11636  0081DE  C01B  F013         	movff	??_calculateMean+3,calculateMean@meanValue+3
 11637  0081E2                     l20503:
 11638                           
 11639                           ;sm_ControlLearning_MC50.c: 421:     return meanValue;
 11640  0081E2  C010  F010         	movff	calculateMean@meanValue,?_calculateMean
 11641  0081E6  C011  F011         	movff	calculateMean@meanValue+1,?_calculateMean+1
 11642  0081EA  C012  F012         	movff	calculateMean@meanValue+2,?_calculateMean+2
 11643  0081EE  C013  F013         	movff	calculateMean@meanValue+3,?_calculateMean+3
 11644  0081F2  0012               	return		;funcret
 11645  0081F4                     __end_of_calculateMean:
 11646                           	callstack 0
 11647                           
 11648 ;; *************** function _actionZone_Opening *****************
 11649 ;; Defined at:
 11650 ;;		line 374 in file "sm_ControlGate_MC50.c"
 11651 ;; Parameters:    Size  Location     Type
 11652 ;;		None
 11653 ;; Auto vars:     Size  Location     Type
 11654 ;;  typeOpenOrde    1   14[BANK0 ] enum E10372
 11655 ;;  securityOpen    1   13[BANK0 ] enum E10397
 11656 ;;  securityClos    1   12[BANK0 ] enum E10397
 11657 ;; Return value:  Size  Location     Type
 11658 ;;                  1    wreg      void 
 11659 ;; Registers used:
 11660 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11661 ;; Tracked objects:
 11662 ;;		On entry : 3F/0
 11663 ;;		On exit  : 0/0
 11664 ;;		Unchanged: 0/0
 11665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11667 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11669 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11670 ;;Total ram usage:        3 bytes
 11671 ;; Hardware stack levels used: 1
 11672 ;; Hardware stack levels required when called: 8
 11673 ;; This function calls:
 11674 ;;		_CloseOrder
 11675 ;;		_GetOpenOrder
 11676 ;;		_GetSecurityStateInClosing
 11677 ;;		_GetSecurityStateInOpening
 11678 ;;		_InitFullAutoTime
 11679 ;;		_InitWalkAutoTime
 11680 ;;		_SetSegmentValueIntermitent
 11681 ;;		_StopOrder
 11682 ;;		_VerifyFollowMe
 11683 ;;		_controlVelocity
 11684 ;;		_setPositionInvertionInClosing
 11685 ;;		_setPositionInvertionInOpening
 11686 ;;		_sm_send_event
 11687 ;; This function is called by:
 11688 ;;		_sm_execute_ControlGate
 11689 ;; This function uses a non-reentrant model
 11690 ;;
 11691                           
 11692                           	psect	text27
 11693  0044FA                     __ptext27:
 11694                           	callstack 0
 11695  0044FA                     _actionZone_Opening:
 11696                           	callstack 21
 11697                           
 11698                           ; BSR set to: 0
 11699                           ;sm_ControlGate_MC50.c: 375:     StateEnum securityClosing = GetSecurityStateInClosing()
      +                          ;
 11700                           
 11701                           ;incstack = 0
 11702  0044FA  EC78  F039         	call	_GetSecurityStateInClosing	;wreg free
 11703  0044FE  0100               	movlb	0	; () banked
 11704  004500  6FE4               	movwf	actionZone_Opening@securityClosing& (0+255),b
 11705                           
 11706                           ;sm_ControlGate_MC50.c: 376:     StateEnum securityOpening = GetSecurityStateInOpening()
      +                          ;
 11707  004502  ECCB  F039         	call	_GetSecurityStateInOpening	;wreg free
 11708  004506  0100               	movlb	0	; () banked
 11709  004508  6FE5               	movwf	actionZone_Opening@securityOpening& (0+255),b
 11710                           
 11711                           ; BSR set to: 0
 11712                           ;sm_ControlGate_MC50.c: 377:     TypeCMD typeOpenOrder = GetOpenOrder();
 11713  00450A  ECCC  F028         	call	_GetOpenOrder	;wreg free
 11714  00450E  0100               	movlb	0	; () banked
 11715  004510  6FE6               	movwf	actionZone_Opening@typeOpenOrder& (0+255),b
 11716                           
 11717                           ; BSR set to: 0
 11718                           ;sm_ControlGate_MC50.c: 380:     controlVelocity();
 11719  004512  ECDD  F025         	call	_controlVelocity	;wreg free
 11720                           
 11721                           ;sm_ControlGate_MC50.c: 381:     InitFullAutoTime();
 11722  004516  ECEE  F047         	call	_InitFullAutoTime	;wreg free
 11723                           
 11724                           ; BSR set to: 0
 11725                           ;sm_ControlGate_MC50.c: 383:     var_sys.passoAPassoAutoClose = NO;
 11726  00451A  0E00               	movlw	0
 11727  00451C  0101               	movlb	1	; () banked
 11728  00451E  6F50               	movwf	(_var_sys+80)& (0+255),b	;volatile
 11729                           
 11730                           ; BSR set to: 1
 11731                           ;sm_ControlGate_MC50.c: 385:     VerifyFollowMe(securityClosing);
 11732  004520  0100               	movlb	0	; () banked
 11733  004522  51E4               	movf	actionZone_Opening@securityClosing& (0+255),w,b
 11734  004524  EC46  F047         	call	_VerifyFollowMe
 11735                           
 11736                           ;sm_ControlGate_MC50.c: 386:     if (var_sys.NumberOffErrors > 3) {
 11737  004528  0E03               	movlw	3
 11738  00452A  0101               	movlb	1	; () banked
 11739  00452C  6543               	cpfsgt	(_var_sys+67)& (0+255),b	;volatile
 11740  00452E  D00D               	goto	l21373
 11741                           
 11742                           ; BSR set to: 1
 11743                           ;sm_ControlGate_MC50.c: 388:         var_sys.StateMotor = Stopped;
 11744  004530  0E00               	movlw	0
 11745  004532  6F00               	movwf	_var_sys& (0+255),b	;volatile
 11746  004534                     l21371:
 11747                           
 11748                           ; BSR set to: 1
 11749                           ;sm_ControlGate_MC50.c: 389:         sm_send_event(&controlGate_stateMachine, ev_ErrorGa
      +                          te);
 11750  004534  0EE2               	movlw	low _controlGate_stateMachine
 11751  004536  6E12               	movwf	sm_send_event@psm^0,c
 11752  004538  0E01               	movlw	high _controlGate_stateMachine
 11753  00453A  6E13               	movwf	(sm_send_event@psm+1)^0,c
 11754  00453C  0E00               	movlw	0
 11755  00453E  6E15               	movwf	(sm_send_event@event+1)^0,c
 11756  004540  0E10               	movlw	16
 11757  004542  6E14               	movwf	sm_send_event@event^0,c
 11758  004544  EC29  F041         	call	_sm_send_event	;wreg free
 11759                           
 11760                           ;sm_ControlGate_MC50.c: 390:     } else if (var_sys.StateMotor == InOpenWalk && ts_syste
      +                          m.timeOpenWalk <= 0)
 11761  004548  0012               	return	
 11762  00454A                     l21373:
 11763                           
 11764                           ; BSR set to: 1
 11765  00454A  0E02               	movlw	2
 11766  00454C  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 11767  00454E  A4D8               	btfss	status,2,c
 11768  004550  D013               	goto	l21387
 11769                           
 11770                           ; BSR set to: 1
 11771  004552  BFAB               	btfsc	(_ts_system+17)& (0+255),7,b	;volatile
 11772  004554  D005               	goto	u24840
 11773  004556  51AB               	movf	(_ts_system+17)& (0+255),w,b	;volatile
 11774  004558  E10F               	bnz	l21387
 11775  00455A  05AA               	decf	(_ts_system+16)& (0+255),w,b	;volatile
 11776  00455C  B0D8               	btfsc	status,0,c
 11777  00455E  D00C               	goto	l21387
 11778  004560                     u24840:
 11779                           
 11780                           ; BSR set to: 1
 11781                           ;sm_ControlGate_MC50.c: 391:     {;sm_ControlGate_MC50.c: 396:         setPositionInvert
      +                          ionInOpening();
 11782  004560  EC6F  F036         	call	_setPositionInvertionInOpening	;wreg free
 11783                           
 11784                           ; BSR set to: 1
 11785                           ;sm_ControlGate_MC50.c: 397:         StopOrder();
 11786  004564  EC9C  F047         	call	_StopOrder	;wreg free
 11787                           
 11788                           ;sm_ControlGate_MC50.c: 398:         InitWalkAutoTime();
 11789  004568  EC73  F048         	call	_InitWalkAutoTime	;wreg free
 11790                           
 11791                           ; BSR set to: 0
 11792                           ;sm_ControlGate_MC50.c: 399:         var_sys.passoAPassoAutoClose = YES;
 11793  00456C  0E01               	movlw	1
 11794  00456E  0101               	movlb	1	; () banked
 11795  004570  6F50               	movwf	(_var_sys+80)& (0+255),b	;volatile
 11796                           
 11797                           ; BSR set to: 1
 11798                           ;sm_ControlGate_MC50.c: 400:         Abertura_pedonal = 1;
 11799  004572  0E01               	movlw	1
 11800  004574  6F8D               	movwf	_Abertura_pedonal& (0+255),b
 11801                           
 11802                           ;sm_ControlGate_MC50.c: 402:     } else if ((var_sys.FimCurso_OpenIsEnabled == YES)||(va
      +                          r_sys.TimeMaxMotorIsON<=0) && (var_sys.LearningIsEnabled==NO) && (var_sys.PositionIsLost
      +                          ==NO) && (var_sys.Statedoorcontrol == st_Opening))
 11803  004576  0012               	return	
 11804  004578                     l21387:
 11805                           
 11806                           ; BSR set to: 1
 11807  004578  0504               	decf	(_var_sys+4)& (0+255),w,b	;volatile
 11808  00457A  B4D8               	btfsc	status,2,c
 11809  00457C  D010               	goto	u24890
 11810                           
 11811                           ; BSR set to: 1
 11812  00457E  5118               	movf	(_var_sys+24)& (0+255),w,b	;volatile
 11813  004580  1119               	iorwf	(_var_sys+25)& (0+255),w,b	;volatile
 11814  004582  111A               	iorwf	(_var_sys+26)& (0+255),w,b	;volatile
 11815  004584  111B               	iorwf	(_var_sys+27)& (0+255),w,b	;volatile
 11816  004586  A4D8               	btfss	status,2,c
 11817  004588  D02F               	goto	l21407
 11818                           
 11819                           ; BSR set to: 1
 11820  00458A  5126               	movf	(_var_sys+38)& (0+255),w,b	;volatile
 11821  00458C  A4D8               	btfss	status,2,c
 11822  00458E  D02C               	goto	l21407
 11823                           
 11824                           ; BSR set to: 1
 11825  004590  5148               	movf	(_var_sys+72)& (0+255),w,b	;volatile
 11826  004592  A4D8               	btfss	status,2,c
 11827  004594  D029               	goto	l21407
 11828                           
 11829                           ; BSR set to: 1
 11830  004596  0E02               	movlw	2
 11831  004598  191C               	xorwf	(_var_sys+28)& (0+255),w,b	;volatile
 11832  00459A  A4D8               	btfss	status,2,c
 11833  00459C  D025               	goto	l21407
 11834  00459E                     u24890:
 11835                           
 11836                           ; BSR set to: 1
 11837                           ;sm_ControlGate_MC50.c: 403:     {;sm_ControlGate_MC50.c: 408:         var_sys.Statedoor
      +                          control = st_Opened;
 11838  00459E  0E04               	movlw	4
 11839  0045A0  6F1C               	movwf	(_var_sys+28)& (0+255),b	;volatile
 11840                           
 11841                           ; BSR set to: 1
 11842                           ;sm_ControlGate_MC50.c: 409:         var_sys.PositionActual = var_sys_NVM.learningTimeTo
      +                          Close;
 11843  0045A2  C0D0  F11E         	movff	_var_sys_NVM+56,_var_sys+30	;volatile
 11844  0045A6  C0D1  F11F         	movff	_var_sys_NVM+57,_var_sys+31	;volatile
 11845  0045AA  C0D2  F120         	movff	_var_sys_NVM+58,_var_sys+32	;volatile
 11846  0045AE  C0D3  F121         	movff	_var_sys_NVM+59,_var_sys+33	;volatile
 11847                           
 11848                           ;sm_ControlGate_MC50.c: 410:         var_sys.AutoInversionActiveStop = NO;
 11849  0045B2  0E00               	movlw	0
 11850  0045B4  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 11851                           
 11852                           ;sm_ControlGate_MC50.c: 411:         var_sys.PositionIsLost = NO;
 11853  0045B6  0E00               	movlw	0
 11854  0045B8  6F48               	movwf	(_var_sys+72)& (0+255),b	;volatile
 11855                           
 11856                           ;sm_ControlGate_MC50.c: 412:         var_sys.DigitSinalizedTemp = 1;
 11857  0045BA  0E01               	movlw	1
 11858  0045BC  6F22               	movwf	(_var_sys+34)& (0+255),b	;volatile
 11859                           
 11860                           ;sm_ControlGate_MC50.c: 413:         var_sys.NumberOffErrors = 0;
 11861  0045BE  0E00               	movlw	0
 11862  0045C0  6F43               	movwf	(_var_sys+67)& (0+255),b	;volatile
 11863                           
 11864                           ;sm_ControlGate_MC50.c: 414:         ts_system.timeSinalizationDigit = (1000/50) * 2;
 11865  0045C2  0E00               	movlw	0
 11866  0045C4  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
 11867  0045C6  0E28               	movlw	40
 11868  0045C8  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
 11869                           
 11870                           ; BSR set to: 1
 11871                           ;sm_ControlGate_MC50.c: 415:         SetSegmentValueIntermitent(dF, d0, ( 200/50));
 11872  0045CA  0E00               	movlw	0
 11873  0045CC  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 11874  0045CE  0E00               	movlw	0
 11875  0045D0  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 11876  0045D2  0E04               	movlw	4
 11877  0045D4  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 11878  0045D6  0E0F               	movlw	15
 11879  0045D8  ECA1  F045         	call	_SetSegmentValueIntermitent
 11880                           
 11881                           ; BSR set to: 1
 11882                           ;sm_ControlGate_MC50.c: 416:         StopOrder();
 11883  0045DC  EC9C  F047         	call	_StopOrder	;wreg free
 11884                           
 11885                           ;sm_ControlGate_MC50.c: 417:         var_sys.passoAPassoAutoClose = YES;
 11886  0045E0  0E01               	movlw	1
 11887  0045E2  0101               	movlb	1	; () banked
 11888  0045E4  6F50               	movwf	(_var_sys+80)& (0+255),b	;volatile
 11889                           
 11890                           ;sm_ControlGate_MC50.c: 419:     }
 11891  0045E6  0012               	return	
 11892  0045E8                     l21407:
 11893                           
 11894                           ; BSR set to: 1
 11895  0045E8  0100               	movlb	0	; () banked
 11896  0045EA  05E5               	decf	actionZone_Opening@securityOpening& (0+255),w,b
 11897  0045EC  B4D8               	btfsc	status,2,c
 11898  0045EE  D012               	goto	u24930
 11899                           
 11900                           ; BSR set to: 0
 11901  0045F0  0101               	movlb	1	; () banked
 11902  0045F2  BFC5               	btfsc	(_ts_system+43)& (0+255),7,b	;volatile
 11903  0045F4  D025               	goto	l21427
 11904  0045F6  51C5               	movf	(_ts_system+43)& (0+255),w,b	;volatile
 11905  0045F8  E103               	bnz	u24910
 11906  0045FA  05C4               	decf	(_ts_system+42)& (0+255),w,b	;volatile
 11907  0045FC  A0D8               	btfss	status,0,c
 11908  0045FE  D020               	goto	l21427
 11909  004600                     u24910:
 11910                           
 11911                           ; BSR set to: 1
 11912  004600  0541               	decf	(_var_sys+65)& (0+255),w,b	;volatile
 11913  004602  A4D8               	btfss	status,2,c
 11914  004604  D01D               	goto	l21427
 11915                           
 11916                           ; BSR set to: 1
 11917  004606  BFCB               	btfsc	(_ts_system+49)& (0+255),7,b	;volatile
 11918  004608  D005               	goto	u24930
 11919  00460A  51CB               	movf	(_ts_system+49)& (0+255),w,b	;volatile
 11920  00460C  E119               	bnz	l21427
 11921  00460E  05CA               	decf	(_ts_system+48)& (0+255),w,b	;volatile
 11922  004610  B0D8               	btfsc	status,0,c
 11923  004612  D016               	goto	l21427
 11924  004614                     u24930:
 11925  004614  0101               	movlb	1	; () banked
 11926  004616  5127               	movf	(_var_sys+39)& (0+255),w,b	;volatile
 11927  004618  A4D8               	btfss	status,2,c
 11928  00461A  D012               	goto	l21427
 11929                           
 11930                           ; BSR set to: 1
 11931                           ;sm_ControlGate_MC50.c: 422:         if (securityOpening != YES){
 11932  00461C  0100               	movlb	0	; () banked
 11933  00461E  05E5               	decf	actionZone_Opening@securityOpening& (0+255),w,b
 11934  004620  B4D8               	btfsc	status,2,c
 11935  004622  D002               	goto	l21421
 11936                           
 11937                           ; BSR set to: 0
 11938                           ;sm_ControlGate_MC50.c: 423:              var_sys.NumberOffErrors++;
 11939  004624  0101               	movlb	1	; () banked
 11940  004626  2B43               	incf	(_var_sys+67)& (0+255),f,b	;volatile
 11941  004628                     l21421:
 11942                           
 11943                           ;sm_ControlGate_MC50.c: 426:         var_sys.AutoInversionActive = YES;
 11944  004628  0E01               	movlw	1
 11945  00462A  0101               	movlb	1	; () banked
 11946  00462C  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 11947                           
 11948                           ; BSR set to: 1
 11949                           ;sm_ControlGate_MC50.c: 427:         ts_system.TimeWaitToNextState = ( 500/50);
 11950  00462E  0E00               	movlw	0
 11951  004630  6FBF               	movwf	(_ts_system+37)& (0+255),b	;volatile
 11952  004632  0E0A               	movlw	10
 11953  004634  6FBE               	movwf	(_ts_system+36)& (0+255),b	;volatile
 11954                           
 11955                           ; BSR set to: 1
 11956                           ;sm_ControlGate_MC50.c: 428:         ts_system.TimeStopElectricBrake = ((1000/50)+( 500/
      +                          50));
 11957  004636  0E00               	movlw	0
 11958  004638  6FDB               	movwf	(_ts_system+65)& (0+255),b	;volatile
 11959  00463A  0E1E               	movlw	30
 11960  00463C  6FDA               	movwf	(_ts_system+64)& (0+255),b	;volatile
 11961                           
 11962                           ;sm_ControlGate_MC50.c: 430:     }
 11963  00463E  0012               	return	
 11964  004640                     l21427:
 11965                           
 11966                           ; BSR set to: 1
 11967  004640  BFC5               	btfsc	(_ts_system+43)& (0+255),7,b	;volatile
 11968  004642  D02D               	goto	l21457
 11969  004644  51C5               	movf	(_ts_system+43)& (0+255),w,b	;volatile
 11970  004646  E103               	bnz	u24960
 11971  004648  05C4               	decf	(_ts_system+42)& (0+255),w,b	;volatile
 11972  00464A  A0D8               	btfss	status,0,c
 11973  00464C  D028               	goto	l21457
 11974  00464E                     u24960:
 11975                           
 11976                           ; BSR set to: 1
 11977  00464E  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 11978  004650  A4D8               	btfss	status,2,c
 11979  004652  D025               	goto	l21457
 11980                           
 11981                           ; BSR set to: 1
 11982                           ;sm_ControlGate_MC50.c: 432:         if (var_sys.InvertionCurrentClosing == YES) {
 11983  004654  0544               	decf	(_var_sys+68)& (0+255),w,b	;volatile
 11984  004656  A4D8               	btfss	status,2,c
 11985  004658  D005               	goto	l21439
 11986                           
 11987                           ; BSR set to: 1
 11988                           ;sm_ControlGate_MC50.c: 434:             var_sys.StateMotor = Stopped;
 11989  00465A  0E00               	movlw	0
 11990  00465C  6F00               	movwf	_var_sys& (0+255),b	;volatile
 11991                           
 11992                           ; BSR set to: 1
 11993                           ;sm_ControlGate_MC50.c: 435:             setPositionInvertionInClosing();
 11994  00465E  ECC8  F031         	call	_setPositionInvertionInClosing	;wreg free
 11995  004662  D768               	goto	l21371
 11996  004664                     l21439:
 11997                           
 11998                           ; BSR set to: 1
 11999  004664  BFBF               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 12000  004666  D005               	goto	u24990
 12001  004668  51BF               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 12002  00466A  E116               	bnz	l21455
 12003  00466C  05BE               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 12004  00466E  B0D8               	btfsc	status,0,c
 12005  004670  D013               	goto	l21455
 12006  004672                     u24990:
 12007                           
 12008                           ; BSR set to: 1
 12009                           ;sm_ControlGate_MC50.c: 438:             CloseOrder();
 12010  004672  ECE7  F046         	call	_CloseOrder	;wreg free
 12011                           
 12012                           ;sm_ControlGate_MC50.c: 440:             setPositionInvertionInOpening();
 12013  004676  EC6F  F036         	call	_setPositionInvertionInOpening	;wreg free
 12014                           
 12015                           ; BSR set to: 1
 12016                           ;sm_ControlGate_MC50.c: 441:             var_sys.AutoInversionActive = NO;
 12017  00467A  0E00               	movlw	0
 12018  00467C  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 12019                           
 12020                           ; BSR set to: 1
 12021                           ;sm_ControlGate_MC50.c: 442:             var_sys.InvertionCurrentOpening = YES;
 12022  00467E  0E01               	movlw	1
 12023  004680  6F45               	movwf	(_var_sys+69)& (0+255),b	;volatile
 12024                           
 12025                           ; BSR set to: 1
 12026                           ;sm_ControlGate_MC50.c: 443:             ts_system.TimeInversionStart = (1000/50);
 12027  004682  0E00               	movlw	0
 12028  004684  6FCB               	movwf	(_ts_system+49)& (0+255),b	;volatile
 12029  004686  0E14               	movlw	20
 12030  004688  6FCA               	movwf	(_ts_system+48)& (0+255),b	;volatile
 12031                           
 12032                           ; BSR set to: 1
 12033                           ;sm_ControlGate_MC50.c: 444:             ts_system.InvertionTimeClosingFromOpen = (1000/
      +                          50) * 2;
 12034  00468A  0E00               	movlw	0
 12035  00468C  6FCD               	movwf	(_ts_system+51)& (0+255),b	;volatile
 12036  00468E  0E28               	movlw	40
 12037  004690  6FCC               	movwf	(_ts_system+50)& (0+255),b	;volatile
 12038                           
 12039                           ; BSR set to: 1
 12040                           ;sm_ControlGate_MC50.c: 445:             var_sys.InvertionClosingFromOpen = YES;
 12041  004692  0E01               	movlw	1
 12042  004694  6F46               	movwf	(_var_sys+70)& (0+255),b	;volatile
 12043                           
 12044                           ;sm_ControlGate_MC50.c: 449:         } else
 12045  004696  0012               	return	
 12046  004698                     l21455:
 12047                           
 12048                           ; BSR set to: 1
 12049                           ;sm_ControlGate_MC50.c: 450:         {;sm_ControlGate_MC50.c: 451:             var_sys.S
      +                          tateMotor = Stopped;
 12050  004698  0E00               	movlw	0
 12051  00469A  6F00               	movwf	_var_sys& (0+255),b	;volatile
 12052  00469C  0012               	return	
 12053  00469E                     l21457:
 12054                           
 12055                           ; BSR set to: 1
 12056  00469E  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 12057  0046A0  A4D8               	btfss	status,2,c
 12058  0046A2  D00A               	goto	l21477
 12059                           
 12060                           ; BSR set to: 1
 12061                           ;sm_ControlGate_MC50.c: 457:                 var_sys.StateMotor = Stopped;
 12062  0046A4  0E00               	movlw	0
 12063  0046A6  6F00               	movwf	_var_sys& (0+255),b	;volatile
 12064                           
 12065                           ; BSR set to: 1
 12066                           ;sm_ControlGate_MC50.c: 460:         if (ts_system.TimeWaitToNextState <= 0) {
 12067  0046A8  BFBF               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 12068  0046AA  D7E3               	goto	u24990
 12069  0046AC  51BF               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 12070  0046AE  E14E               	bnz	l2718
 12071  0046B0  05BE               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 12072  0046B2  B0D8               	btfsc	status,0,c
 12073  0046B4  0012               	return	
 12074  0046B6  D7DD               	goto	u24990
 12075  0046B8                     l21477:
 12076                           
 12077                           ; BSR set to: 1
 12078  0046B8  5100               	movf	_var_sys& (0+255),w,b	;volatile
 12079  0046BA  A4D8               	btfss	status,2,c
 12080  0046BC  D018               	goto	l21495
 12081                           
 12082                           ; BSR set to: 1
 12083  0046BE  BFBF               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 12084  0046C0  D005               	goto	u25030
 12085  0046C2  51BF               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 12086  0046C4  E114               	bnz	l21495
 12087  0046C6  05BE               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 12088  0046C8  B0D8               	btfsc	status,0,c
 12089  0046CA  D011               	goto	l21495
 12090  0046CC                     u25030:
 12091                           
 12092                           ; BSR set to: 1
 12093                           ;sm_ControlGate_MC50.c: 479:       if(securityOpening != ST){
 12094  0046CC  0E02               	movlw	2
 12095  0046CE  0100               	movlb	0	; () banked
 12096  0046D0  19E5               	xorwf	actionZone_Opening@securityOpening& (0+255),w,b
 12097  0046D2  B4D8               	btfsc	status,2,c
 12098  0046D4  D007               	goto	l21491
 12099                           
 12100                           ; BSR set to: 0
 12101                           ;sm_ControlGate_MC50.c: 480:         var_sys.NumberOffErrors++;
 12102  0046D6  0101               	movlb	1	; () banked
 12103  0046D8  2B43               	incf	(_var_sys+67)& (0+255),f,b	;volatile
 12104                           
 12105                           ; BSR set to: 1
 12106                           ;sm_ControlGate_MC50.c: 482:         var_sys.StateMotor = Stopped;
 12107  0046DA  0E00               	movlw	0
 12108  0046DC  6F00               	movwf	_var_sys& (0+255),b	;volatile
 12109                           
 12110                           ; BSR set to: 1
 12111                           ;sm_ControlGate_MC50.c: 483:         setPositionInvertionInOpening();
 12112  0046DE  EC6F  F036         	call	_setPositionInvertionInOpening	;wreg free
 12113  0046E2  D728               	goto	l21371
 12114  0046E4                     l21491:
 12115                           
 12116                           ; BSR set to: 0
 12117                           ;sm_ControlGate_MC50.c: 486:           setPositionInvertionInOpening();
 12118  0046E4  EC6F  F036         	call	_setPositionInvertionInOpening	;wreg free
 12119  0046E8                     l21493:
 12120                           
 12121                           ;sm_ControlGate_MC50.c: 487:           StopOrder();
 12122  0046E8  EC9C  F047         	call	_StopOrder	;wreg free
 12123  0046EC  0012               	return	
 12124  0046EE                     l21495:
 12125                           
 12126                           ; BSR set to: 1
 12127  0046EE  0100               	movlb	0	; () banked
 12128  0046F0  05A8               	decf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 12129  0046F2  A4D8               	btfss	status,2,c
 12130  0046F4  D005               	goto	l21501
 12131                           
 12132                           ; BSR set to: 0
 12133                           ;sm_ControlGate_MC50.c: 492:         if (typeOpenOrder != TypeFullOpen) {
 12134  0046F6  0E03               	movlw	3
 12135  0046F8  19E6               	xorwf	actionZone_Opening@typeOpenOrder& (0+255),w,b
 12136  0046FA  B4D8               	btfsc	status,2,c
 12137  0046FC  0012               	return	
 12138  0046FE  D7F4               	goto	l21493
 12139  004700                     l21501:
 12140                           
 12141                           ; BSR set to: 0
 12142  004700  0E02               	movlw	2
 12143  004702  19E6               	xorwf	actionZone_Opening@typeOpenOrder& (0+255),w,b
 12144  004704  A4D8               	btfss	status,2,c
 12145  004706  D011               	goto	l21513
 12146                           
 12147                           ; BSR set to: 0
 12148  004708  0E02               	movlw	2
 12149  00470A  0101               	movlb	1	; () banked
 12150  00470C  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 12151  00470E  A4D8               	btfss	status,2,c
 12152  004710  D00C               	goto	l21513
 12153                           
 12154                           ; BSR set to: 1
 12155  004712  0E02               	movlw	2
 12156  004714  0100               	movlb	0	; () banked
 12157  004716  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 12158  004718  B4D8               	btfsc	status,2,c
 12159  00471A  D007               	goto	l21513
 12160                           
 12161                           ; BSR set to: 0
 12162                           ;sm_ControlGate_MC50.c: 502:         setPositionInvertionInOpening();
 12163  00471C  EC6F  F036         	call	_setPositionInvertionInOpening	;wreg free
 12164                           
 12165                           ; BSR set to: 1
 12166                           ;sm_ControlGate_MC50.c: 503:         StopOrder();
 12167  004720  EC9C  F047         	call	_StopOrder	;wreg free
 12168                           
 12169                           ;sm_ControlGate_MC50.c: 504:         InitWalkAutoTime();
 12170  004724  EC73  F048         	call	_InitWalkAutoTime	;wreg free
 12171                           
 12172                           ;sm_ControlGate_MC50.c: 505:     } else if ((typeOpenOrder == TypeFull || typeOpenOrder 
      +                          == TypeFullOpen || typeOpenOrder == TypeFullClose) && var_sys_NVM.operationMode != ModoC
      +                          ondominio) {
 12173  004728  0012               	return	
 12174  00472A                     l21513:
 12175  00472A  0100               	movlb	0	; () banked
 12176  00472C  05E6               	decf	actionZone_Opening@typeOpenOrder& (0+255),w,b
 12177  00472E  B4D8               	btfsc	status,2,c
 12178  004730  D008               	goto	u25120
 12179                           
 12180                           ; BSR set to: 0
 12181  004732  0E03               	movlw	3
 12182  004734  19E6               	xorwf	actionZone_Opening@typeOpenOrder& (0+255),w,b
 12183  004736  B4D8               	btfsc	status,2,c
 12184  004738  D004               	goto	u25120
 12185                           
 12186                           ; BSR set to: 0
 12187  00473A  0E04               	movlw	4
 12188  00473C  19E6               	xorwf	actionZone_Opening@typeOpenOrder& (0+255),w,b
 12189  00473E  A4D8               	btfss	status,2,c
 12190  004740  0012               	return	
 12191  004742                     u25120:
 12192                           
 12193                           ; BSR set to: 0
 12194  004742  0E02               	movlw	2
 12195  004744  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 12196  004746  B4D8               	btfsc	status,2,c
 12197  004748  0012               	return	
 12198  00474A  D7CC               	goto	l21491
 12199  00474C                     l2718:
 12200  00474C  0012               	return		;funcret
 12201  00474E                     __end_of_actionZone_Opening:
 12202                           	callstack 0
 12203                           
 12204 ;; *************** function _setPositionInvertionInOpening *****************
 12205 ;; Defined at:
 12206 ;;		line 894 in file "sm_ControlGate_MC50.c"
 12207 ;; Parameters:    Size  Location     Type
 12208 ;;		None
 12209 ;; Auto vars:     Size  Location     Type
 12210 ;;		None
 12211 ;; Return value:  Size  Location     Type
 12212 ;;                  1    wreg      void 
 12213 ;; Registers used:
 12214 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12215 ;; Tracked objects:
 12216 ;;		On entry : 3E/1
 12217 ;;		On exit  : 3F/1
 12218 ;;		Unchanged: 0/0
 12219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12222 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12223 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12224 ;;Total ram usage:        8 bytes
 12225 ;; Hardware stack levels used: 1
 12226 ;; Hardware stack levels required when called: 6
 12227 ;; This function calls:
 12228 ;;		_getTimeDecelaration
 12229 ;; This function is called by:
 12230 ;;		_actionZone_Opening
 12231 ;; This function uses a non-reentrant model
 12232 ;;
 12233                           
 12234                           	psect	text28
 12235  006CDE                     __ptext28:
 12236                           	callstack 0
 12237  006CDE                     _setPositionInvertionInOpening:
 12238                           	callstack 22
 12239                           
 12240                           ;sm_ControlGate_MC50.c: 896:     if(var_sys_NVM.TypeofMotor != 2){
 12241                           
 12242                           ;incstack = 0
 12243  006CDE  0E02               	movlw	2
 12244  006CE0  0100               	movlb	0	; () banked
 12245  006CE2  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 12246  006CE4  B4D8               	btfsc	status,2,c
 12247  006CE6  D009               	goto	l20453
 12248                           
 12249                           ; BSR set to: 0
 12250                           ;sm_ControlGate_MC50.c: 897:        var_sys.PositionActual -= ( 100/50);
 12251  006CE8  0EFE               	movlw	254
 12252  006CEA  0101               	movlb	1	; () banked
 12253  006CEC  271E               	addwf	(_var_sys+30)& (0+255),f,b	;volatile
 12254  006CEE  0EFF               	movlw	255
 12255  006CF0  231F               	addwfc	(_var_sys+31)& (0+255),f,b	;volatile
 12256  006CF2  0EFF               	movlw	255
 12257  006CF4  2320               	addwfc	(_var_sys+32)& (0+255),f,b	;volatile
 12258  006CF6  0EFF               	movlw	255
 12259  006CF8  D006               	goto	L69
 12260  006CFA                     l20453:
 12261                           
 12262                           ; BSR set to: 0
 12263                           ;sm_ControlGate_MC50.c: 901:          var_sys.PositionActual += ( 50/50);
 12264  006CFA  0E01               	movlw	1
 12265  006CFC  0101               	movlb	1	; () banked
 12266  006CFE  271E               	addwf	(_var_sys+30)& (0+255),f,b	;volatile
 12267  006D00  0E00               	movlw	0
 12268  006D02  231F               	addwfc	(_var_sys+31)& (0+255),f,b	;volatile
 12269  006D04  2320               	addwfc	(_var_sys+32)& (0+255),f,b	;volatile
 12270  006D06                     L69:
 12271  006D06  2321               	addwfc	(_var_sys+33)& (0+255),f,b	;volatile
 12272                           
 12273                           ; BSR set to: 1
 12274                           ;sm_ControlGate_MC50.c: 906:     if (var_sys.PositionActual < getTimeDecelaration(InClos
      +                          e)) {
 12275  006D08  0E03               	movlw	3
 12276  006D0A  ECFB  F035         	call	_getTimeDecelaration
 12277  006D0E  5029               	movf	?_getTimeDecelaration^0,w,c
 12278  006D10  0101               	movlb	1	; () banked
 12279  006D12  5D1E               	subwf	(_var_sys+30)& (0+255),w,b	;volatile
 12280  006D14  502A               	movf	(?_getTimeDecelaration+1)^0,w,c
 12281  006D16  591F               	subwfb	(_var_sys+31)& (0+255),w,b	;volatile
 12282  006D18  502B               	movf	(?_getTimeDecelaration+2)^0,w,c
 12283  006D1A  5920               	subwfb	(_var_sys+32)& (0+255),w,b	;volatile
 12284  006D1C  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 12285  006D1E  0A80               	xorlw	128
 12286  006D20  6E32               	movwf	??_setPositionInvertionInOpening^0,c
 12287  006D22  502C               	movf	(?_getTimeDecelaration+3)^0,w,c
 12288  006D24  0A80               	xorlw	128
 12289  006D26  5832               	subwfb	??_setPositionInvertionInOpening^0,w,c
 12290  006D28  B0D8               	btfsc	status,0,c
 12291  006D2A  D004               	goto	l20459
 12292                           
 12293                           ; BSR set to: 1
 12294                           ;sm_ControlGate_MC50.c: 907:         var_sys.PositionActual = getTimeDecelaration(InClos
      +                          e);
 12295  006D2C  0E03               	movlw	3
 12296  006D2E  ECFB  F035         	call	_getTimeDecelaration
 12297  006D32  D015               	goto	L70
 12298  006D34                     l20459:
 12299                           
 12300                           ; BSR set to: 1
 12301  006D34  0E01               	movlw	1
 12302  006D36  ECFB  F035         	call	_getTimeDecelaration
 12303  006D3A  0101               	movlb	1	; () banked
 12304  006D3C  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 12305  006D3E  5C29               	subwf	?_getTimeDecelaration^0,w,c
 12306  006D40  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 12307  006D42  582A               	subwfb	(?_getTimeDecelaration+1)^0,w,c
 12308  006D44  5120               	movf	(_var_sys+32)& (0+255),w,b	;volatile
 12309  006D46  582B               	subwfb	(?_getTimeDecelaration+2)^0,w,c
 12310  006D48  502C               	movf	(?_getTimeDecelaration+3)^0,w,c
 12311  006D4A  0A80               	xorlw	128
 12312  006D4C  6E32               	movwf	??_setPositionInvertionInOpening^0,c
 12313  006D4E  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 12314  006D50  0A80               	xorlw	128
 12315  006D52  5832               	subwfb	??_setPositionInvertionInOpening^0,w,c
 12316  006D54  B0D8               	btfsc	status,0,c
 12317  006D56  D00B               	goto	l20463
 12318                           
 12319                           ; BSR set to: 1
 12320                           ;sm_ControlGate_MC50.c: 909:         var_sys.PositionActual = getTimeDecelaration(InOpen
      +                          Full);
 12321  006D58  0E01               	movlw	1
 12322  006D5A  ECFB  F035         	call	_getTimeDecelaration
 12323  006D5E                     L70:
 12324  006D5E  C029  F11E         	movff	?_getTimeDecelaration,_var_sys+30	;volatile
 12325  006D62  C02A  F11F         	movff	?_getTimeDecelaration+1,_var_sys+31	;volatile
 12326  006D66  C02B  F120         	movff	?_getTimeDecelaration+2,_var_sys+32	;volatile
 12327  006D6A  C02C  F121         	movff	?_getTimeDecelaration+3,_var_sys+33	;volatile
 12328  006D6E                     l20463:
 12329                           
 12330                           ;sm_ControlGate_MC50.c: 911:     var_sys.TimeMaxMotorIsON = var_sys.PositionActual + var
      +                          _sys_NVM.decelarationClose*( 500/50) + (1000/50)*10;
 12331  006D6E  0100               	movlb	0	; () banked
 12332  006D70  5199               	movf	(_var_sys_NVM+1)& (0+255),w,b	;volatile
 12333  006D72  0D0A               	mullw	10
 12334  006D74  CFF3 F032          	movff	prodl,??_setPositionInvertionInOpening
 12335  006D78  CFF4 F033          	movff	prodh,??_setPositionInvertionInOpening+1
 12336  006D7C  0E00               	movlw	0
 12337  006D7E  BE33               	btfsc	(??_setPositionInvertionInOpening+1)^0,7,c
 12338  006D80  0EFF               	movlw	255
 12339  006D82  6E34               	movwf	(??_setPositionInvertionInOpening+2)^0,c
 12340  006D84  6E35               	movwf	(??_setPositionInvertionInOpening+3)^0,c
 12341  006D86  0101               	movlb	1	; () banked
 12342  006D88  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 12343  006D8A  2432               	addwf	??_setPositionInvertionInOpening^0,w,c
 12344  006D8C  6E36               	movwf	(??_setPositionInvertionInOpening+4)^0,c
 12345  006D8E  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 12346  006D90  2033               	addwfc	(??_setPositionInvertionInOpening+1)^0,w,c
 12347  006D92  6E37               	movwf	(??_setPositionInvertionInOpening+5)^0,c
 12348  006D94  5120               	movf	(_var_sys+32)& (0+255),w,b	;volatile
 12349  006D96  2034               	addwfc	(??_setPositionInvertionInOpening+2)^0,w,c
 12350  006D98  6E38               	movwf	(??_setPositionInvertionInOpening+6)^0,c
 12351  006D9A  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 12352  006D9C  2035               	addwfc	(??_setPositionInvertionInOpening+3)^0,w,c
 12353  006D9E  6E39               	movwf	(??_setPositionInvertionInOpening+7)^0,c
 12354  006DA0  0EC8               	movlw	200
 12355  006DA2  2436               	addwf	(??_setPositionInvertionInOpening+4)^0,w,c
 12356  006DA4  6F18               	movwf	(_var_sys+24)& (0+255),b	;volatile
 12357  006DA6  0E00               	movlw	0
 12358  006DA8  2037               	addwfc	(??_setPositionInvertionInOpening+5)^0,w,c
 12359  006DAA  6F19               	movwf	(_var_sys+25)& (0+255),b	;volatile
 12360  006DAC  0E00               	movlw	0
 12361  006DAE  2038               	addwfc	(??_setPositionInvertionInOpening+6)^0,w,c
 12362  006DB0  6F1A               	movwf	(_var_sys+26)& (0+255),b	;volatile
 12363  006DB2  0E00               	movlw	0
 12364  006DB4  2039               	addwfc	(??_setPositionInvertionInOpening+7)^0,w,c
 12365  006DB6  6F1B               	movwf	(_var_sys+27)& (0+255),b	;volatile
 12366                           
 12367                           ; BSR set to: 1
 12368  006DB8  0012               	return		;funcret
 12369  006DBA                     __end_of_setPositionInvertionInOpening:
 12370                           	callstack 0
 12371                           
 12372 ;; *************** function _controlVelocity *****************
 12373 ;; Defined at:
 12374 ;;		line 527 in file "outputs_MC50.c"
 12375 ;; Parameters:    Size  Location     Type
 12376 ;;		None
 12377 ;; Auto vars:     Size  Location     Type
 12378 ;;		None
 12379 ;; Return value:  Size  Location     Type
 12380 ;;                  1    wreg      void 
 12381 ;; Registers used:
 12382 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12383 ;; Tracked objects:
 12384 ;;		On entry : 3E/1
 12385 ;;		On exit  : 3E/0
 12386 ;;		Unchanged: 0/0
 12387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12388 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12390 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12391 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12392 ;;Total ram usage:        1 bytes
 12393 ;; Hardware stack levels used: 1
 12394 ;; Hardware stack levels required when called: 7
 12395 ;; This function calls:
 12396 ;;		_ControlDecelarationFactor
 12397 ;;		_InitSoftStop
 12398 ;;		_getStateOpenPosition
 12399 ;;		_getTimeDecelaration
 12400 ;; This function is called by:
 12401 ;;		_main
 12402 ;;		_actionZone_Opening
 12403 ;; This function uses a non-reentrant model
 12404 ;;
 12405                           
 12406                           	psect	text29
 12407  004BBA                     __ptext29:
 12408                           	callstack 0
 12409  004BBA                     _controlVelocity:
 12410                           	callstack 21
 12411                           
 12412                           ;outputs_MC50.c: 531:     if(var_sys.LearningIsEnabled==YES && var_sys.LearningDecelarat
      +                          ion==YES)
 12413                           
 12414                           ; BSR set to: 1
 12415                           ;incstack = 0
 12416  004BBA  0101               	movlb	1	; () banked
 12417  004BBC  0526               	decf	(_var_sys+38)& (0+255),w,b	;volatile
 12418  004BBE  A4D8               	btfss	status,2,c
 12419  004BC0  D017               	goto	l20265
 12420                           
 12421                           ; BSR set to: 1
 12422  004BC2  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 12423  004BC4  A4D8               	btfss	status,2,c
 12424  004BC6  D014               	goto	l20265
 12425                           
 12426                           ; BSR set to: 1
 12427                           ;outputs_MC50.c: 532:     {;outputs_MC50.c: 533:         if(powerControl_st.decelaration
      +                          Active==NO)
 12428  004BC8  517B               	movf	_powerControl_st& (0+255),w,b
 12429  004BCA  A4D8               	btfss	status,2,c
 12430  004BCC  D008               	goto	l20259
 12431                           
 12432                           ; BSR set to: 1
 12433                           ;outputs_MC50.c: 534:         {;outputs_MC50.c: 535:             ts_system.TimeStopedBef
      +                          oreDecelaration=( 500/50);
 12434  004BCE  0E00               	movlw	0
 12435  004BD0  6FC7               	movwf	(_ts_system+45)& (0+255),b	;volatile
 12436  004BD2  0E0A               	movlw	10
 12437  004BD4  6FC6               	movwf	(_ts_system+44)& (0+255),b	;volatile
 12438                           
 12439                           ;outputs_MC50.c: 536:             ts_system.TimeCurrentWaitForAlarm=(1000/50);
 12440  004BD6  0E00               	movlw	0
 12441  004BD8  6FC9               	movwf	(_ts_system+47)& (0+255),b	;volatile
 12442  004BDA  0E14               	movlw	20
 12443  004BDC  6FC8               	movwf	(_ts_system+46)& (0+255),b	;volatile
 12444  004BDE                     l20259:
 12445                           
 12446                           ; BSR set to: 1
 12447                           ;outputs_MC50.c: 538:         ControlDecelarationFactor();
 12448  004BDE  EC15  F048         	call	_ControlDecelarationFactor	;wreg free
 12449                           
 12450                           ; BSR set to: 1
 12451                           ;outputs_MC50.c: 539:         powerControl_st.decelarationActive=YES;
 12452  004BE2  0E01               	movlw	1
 12453  004BE4  6F7B               	movwf	_powerControl_st& (0+255),b
 12454                           
 12455                           ; BSR set to: 1
 12456                           ;outputs_MC50.c: 540:         var_sys.velocityFactor=0;
 12457  004BE6  0E00               	movlw	0
 12458  004BE8  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12459  004BEA  0E00               	movlw	0
 12460  004BEC  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12461                           
 12462                           ;outputs_MC50.c: 541:     }
 12463  004BEE  0012               	return	
 12464  004BF0                     l20265:
 12465                           
 12466                           ; BSR set to: 1
 12467  004BF0  0526               	decf	(_var_sys+38)& (0+255),w,b	;volatile
 12468  004BF2  B4D8               	btfsc	status,2,c
 12469  004BF4  D003               	goto	u23380
 12470                           
 12471                           ; BSR set to: 1
 12472  004BF6  0509               	decf	(_var_sys+9)& (0+255),w,b	;volatile
 12473  004BF8  A4D8               	btfss	status,2,c
 12474  004BFA  D007               	goto	l20271
 12475  004BFC                     u23380:
 12476                           
 12477                           ; BSR set to: 1
 12478                           ;outputs_MC50.c: 544:     {;outputs_MC50.c: 545:         var_sys.velocityFactor=0;
 12479  004BFC  0E00               	movlw	0
 12480  004BFE  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12481  004C00  0E00               	movlw	0
 12482  004C02  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12483                           
 12484                           ;outputs_MC50.c: 546:         powerControl_st.decelarationActive=NO;
 12485  004C04  0E00               	movlw	0
 12486  004C06  6F7B               	movwf	_powerControl_st& (0+255),b
 12487                           
 12488                           ;outputs_MC50.c: 547:     }
 12489  004C08  0012               	return	
 12490  004C0A                     l20271:
 12491                           
 12492                           ; BSR set to: 1
 12493  004C0A  0E03               	movlw	3
 12494  004C0C  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 12495  004C0E  A4D8               	btfss	status,2,c
 12496  004C10  D068               	goto	l20319
 12497                           
 12498                           ; BSR set to: 1
 12499  004C12  0E03               	movlw	3
 12500  004C14  ECFB  F035         	call	_getTimeDecelaration
 12501  004C18  5029               	movf	?_getTimeDecelaration^0,w,c
 12502  004C1A  0101               	movlb	1	; () banked
 12503  004C1C  5D1E               	subwf	(_var_sys+30)& (0+255),w,b	;volatile
 12504  004C1E  502A               	movf	(?_getTimeDecelaration+1)^0,w,c
 12505  004C20  591F               	subwfb	(_var_sys+31)& (0+255),w,b	;volatile
 12506  004C22  502B               	movf	(?_getTimeDecelaration+2)^0,w,c
 12507  004C24  5920               	subwfb	(_var_sys+32)& (0+255),w,b	;volatile
 12508  004C26  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 12509  004C28  0A80               	xorlw	128
 12510  004C2A  0100               	movlb	0	; () banked
 12511  004C2C  6FDA               	movwf	??_controlVelocity& (0+255),b
 12512  004C2E  502C               	movf	(?_getTimeDecelaration+3)^0,w,c
 12513  004C30  0A80               	xorlw	128
 12514  004C32  59DA               	subwfb	??_controlVelocity& (0+255),w,b
 12515  004C34  A0D8               	btfss	status,0,c
 12516  004C36  D004               	goto	u23410
 12517                           
 12518                           ; BSR set to: 0
 12519  004C38  0101               	movlb	1	; () banked
 12520  004C3A  0548               	decf	(_var_sys+72)& (0+255),w,b	;volatile
 12521  004C3C  A4D8               	btfss	status,2,c
 12522  004C3E  D051               	goto	l20319
 12523  004C40                     u23410:
 12524  004C40  0100               	movlb	0	; () banked
 12525  004C42  5199               	movf	(_var_sys_NVM+1)& (0+255),w,b	;volatile
 12526  004C44  B4D8               	btfsc	status,2,c
 12527  004C46  D004               	goto	u23430
 12528                           
 12529                           ; BSR set to: 0
 12530  004C48  0101               	movlb	1	; () banked
 12531  004C4A  5112               	movf	(_var_sys+18)& (0+255),w,b	;volatile
 12532  004C4C  B4D8               	btfsc	status,2,c
 12533  004C4E  D00C               	goto	u23450
 12534  004C50                     u23430:
 12535  004C50  0101               	movlb	1	; () banked
 12536  004C52  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 12537  004C54  D005               	goto	u23440
 12538  004C56  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 12539  004C58  E144               	bnz	l20319
 12540  004C5A  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 12541  004C5C  B0D8               	btfsc	status,0,c
 12542  004C5E  D041               	goto	l20319
 12543  004C60                     u23440:
 12544                           
 12545                           ; BSR set to: 1
 12546  004C60  0100               	movlb	0	; () banked
 12547  004C62  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 12548  004C64  B4D8               	btfsc	status,2,c
 12549  004C66  D03D               	goto	l20319
 12550  004C68                     u23450:
 12551                           
 12552                           ;outputs_MC50.c: 550:     {;outputs_MC50.c: 552:             if ((powerControl_st.decela
      +                          rationActive==NO) && (var_sys.AutoInversionActiveStop==NO ))
 12553  004C68  0101               	movlb	1	; () banked
 12554  004C6A  517B               	movf	_powerControl_st& (0+255),w,b
 12555  004C6C  A4D8               	btfss	status,2,c
 12556  004C6E  D022               	goto	l20305
 12557                           
 12558                           ; BSR set to: 1
 12559  004C70  5112               	movf	(_var_sys+18)& (0+255),w,b	;volatile
 12560  004C72  A4D8               	btfss	status,2,c
 12561  004C74  D01F               	goto	l20305
 12562                           
 12563                           ; BSR set to: 1
 12564                           ;outputs_MC50.c: 553:                 {;outputs_MC50.c: 556:                     ts_syst
      +                          em.TimeCurrentWaitForAlarm=(1000/50);
 12565  004C76  0E00               	movlw	0
 12566  004C78  6FC9               	movwf	(_ts_system+47)& (0+255),b	;volatile
 12567  004C7A  0E14               	movlw	20
 12568  004C7C  6FC8               	movwf	(_ts_system+46)& (0+255),b	;volatile
 12569                           
 12570                           ;outputs_MC50.c: 558:                     if (var_sys_NVM.softstop > 0){
 12571  004C7E  0100               	movlb	0	; () banked
 12572  004C80  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 12573  004C82  B4D8               	btfsc	status,2,c
 12574  004C84  D008               	goto	l20295
 12575                           
 12576                           ; BSR set to: 0
 12577                           ;outputs_MC50.c: 559:                         var_sys.AutoInversionActive = NO;
 12578  004C86  0E00               	movlw	0
 12579  004C88  0101               	movlb	1	; () banked
 12580  004C8A  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 12581                           
 12582                           ;outputs_MC50.c: 560:                         var_sys.AutoInversionActiveStop = YES;
 12583  004C8C  0E01               	movlw	1
 12584  004C8E  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 12585                           
 12586                           ; BSR set to: 1
 12587                           ;outputs_MC50.c: 561:                         InitSoftStop();
 12588  004C90  EC7E  F043         	call	_InitSoftStop	;wreg free
 12589                           
 12590                           ;outputs_MC50.c: 563:                     }
 12591  004C94  D00F               	goto	l20305
 12592  004C96                     l20295:
 12593                           
 12594                           ; BSR set to: 0
 12595                           ;outputs_MC50.c: 565:                     {;outputs_MC50.c: 566:                        
      +                           ts_system.TimeStopedBeforeDecelaration=( 500/50);
 12596  004C96  0E00               	movlw	0
 12597  004C98  0101               	movlb	1	; () banked
 12598  004C9A  6FC7               	movwf	(_ts_system+45)& (0+255),b	;volatile
 12599  004C9C  0E0A               	movlw	10
 12600  004C9E  6FC6               	movwf	(_ts_system+44)& (0+255),b	;volatile
 12601                           
 12602                           ; BSR set to: 1
 12603                           ;outputs_MC50.c: 567:                         ControlDecelarationFactor();
 12604  004CA0  EC15  F048         	call	_ControlDecelarationFactor	;wreg free
 12605                           
 12606                           ; BSR set to: 1
 12607                           ;outputs_MC50.c: 568:                         powerControl_st.decelarationActive=YES;
 12608  004CA4  0E01               	movlw	1
 12609  004CA6  6F7B               	movwf	_powerControl_st& (0+255),b
 12610                           
 12611                           ; BSR set to: 1
 12612                           ;outputs_MC50.c: 569:                         var_sys.velocityFactor=0;
 12613  004CA8  0E00               	movlw	0
 12614  004CAA  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12615  004CAC  0E00               	movlw	0
 12616  004CAE  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12617                           
 12618                           ; BSR set to: 1
 12619                           ;outputs_MC50.c: 570:                          var_sys.AutoInversionActiveStop = NO;
 12620  004CB0  0E00               	movlw	0
 12621  004CB2  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 12622  004CB4                     l20305:
 12623                           
 12624                           ;outputs_MC50.c: 574:                 if ((var_sys.velocityFactorstop <= 0)&&(var_sys.Au
      +                          toInversionActiveStop == YES) && (var_sys_NVM.softstop > 0))
 12625  004CB4  0101               	movlb	1	; () banked
 12626  004CB6  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 12627  004CB8  D005               	goto	u23490
 12628  004CBA  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 12629  004CBC  E102               	bnz	u23491
 12630  004CBE  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 12631  004CC0  B0D8               	btfsc	status,0,c
 12632  004CC2                     u23491:
 12633  004CC2  0012               	return	
 12634  004CC4                     u23490:
 12635                           
 12636                           ; BSR set to: 1
 12637  004CC4  0512               	decf	(_var_sys+18)& (0+255),w,b	;volatile
 12638  004CC6  A4D8               	btfss	status,2,c
 12639  004CC8  0012               	return	
 12640                           
 12641                           ; BSR set to: 1
 12642  004CCA  0100               	movlb	0	; () banked
 12643  004CCC  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 12644  004CCE  B4D8               	btfsc	status,2,c
 12645  004CD0  0012               	return	
 12646                           
 12647                           ; BSR set to: 0
 12648                           ;outputs_MC50.c: 575:                 {;outputs_MC50.c: 576:                 ts_system.T
      +                          imeStopedBeforeDecelaration=( 100/50);
 12649  004CD2  0E00               	movlw	0
 12650  004CD4  0101               	movlb	1	; () banked
 12651  004CD6  6FC7               	movwf	(_ts_system+45)& (0+255),b	;volatile
 12652  004CD8  0E02               	movlw	2
 12653  004CDA  6FC6               	movwf	(_ts_system+44)& (0+255),b	;volatile
 12654                           
 12655                           ;outputs_MC50.c: 577:                 var_sys.AutoInversionActiveStop = NO;
 12656  004CDC  0E00               	movlw	0
 12657  004CDE  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 12658  004CE0  D77E               	goto	l20259
 12659  004CE2                     l20319:
 12660  004CE2  0101               	movlb	1	; () banked
 12661  004CE4  5100               	movf	_var_sys& (0+255),w,b	;volatile
 12662  004CE6  ECEE  F032         	call	_getStateOpenPosition
 12663  004CEA  06E8               	decf	wreg,f,c
 12664  004CEC  A4D8               	btfss	status,2,c
 12665  004CEE  D042               	goto	l20361
 12666                           
 12667                           ; BSR set to: 0
 12668  004CF0  5198               	movf	_var_sys_NVM& (0+255),w,b	;volatile
 12669  004CF2  B4D8               	btfsc	status,2,c
 12670  004CF4  D004               	goto	u23540
 12671                           
 12672                           ; BSR set to: 0
 12673  004CF6  0101               	movlb	1	; () banked
 12674  004CF8  5112               	movf	(_var_sys+18)& (0+255),w,b	;volatile
 12675  004CFA  B4D8               	btfsc	status,2,c
 12676  004CFC  D00C               	goto	u23560
 12677  004CFE                     u23540:
 12678  004CFE  0101               	movlb	1	; () banked
 12679  004D00  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 12680  004D02  D005               	goto	u23550
 12681  004D04  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 12682  004D06  E136               	bnz	l20361
 12683  004D08  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 12684  004D0A  B0D8               	btfsc	status,0,c
 12685  004D0C  D033               	goto	l20361
 12686  004D0E                     u23550:
 12687                           
 12688                           ; BSR set to: 1
 12689  004D0E  0100               	movlb	0	; () banked
 12690  004D10  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 12691  004D12  B4D8               	btfsc	status,2,c
 12692  004D14  D02F               	goto	l20361
 12693  004D16                     u23560:
 12694                           
 12695                           ;outputs_MC50.c: 586:     {;outputs_MC50.c: 588:             if ((powerControl_st.decela
      +                          rationActive==NO) && (var_sys.AutoInversionActiveStop==NO ))
 12696  004D16  0101               	movlb	1	; () banked
 12697  004D18  517B               	movf	_powerControl_st& (0+255),w,b
 12698  004D1A  A4D8               	btfss	status,2,c
 12699  004D1C  D022               	goto	l20347
 12700                           
 12701                           ; BSR set to: 1
 12702  004D1E  5112               	movf	(_var_sys+18)& (0+255),w,b	;volatile
 12703  004D20  A4D8               	btfss	status,2,c
 12704  004D22  D01F               	goto	l20347
 12705                           
 12706                           ; BSR set to: 1
 12707                           ;outputs_MC50.c: 589:         {;outputs_MC50.c: 592:             ts_system.TimeCurrentWa
      +                          itForAlarm=(1000/50);
 12708  004D24  0E00               	movlw	0
 12709  004D26  6FC9               	movwf	(_ts_system+47)& (0+255),b	;volatile
 12710  004D28  0E14               	movlw	20
 12711  004D2A  6FC8               	movwf	(_ts_system+46)& (0+255),b	;volatile
 12712                           
 12713                           ;outputs_MC50.c: 594:             if (var_sys_NVM.softstop > 0){
 12714  004D2C  0100               	movlb	0	; () banked
 12715  004D2E  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 12716  004D30  B4D8               	btfsc	status,2,c
 12717  004D32  D008               	goto	l20339
 12718                           
 12719                           ; BSR set to: 0
 12720                           ;outputs_MC50.c: 595:                 var_sys.AutoInversionActive = NO;
 12721  004D34  0E00               	movlw	0
 12722  004D36  0101               	movlb	1	; () banked
 12723  004D38  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 12724                           
 12725                           ;outputs_MC50.c: 596:                 var_sys.AutoInversionActiveStop = YES;
 12726  004D3A  0E01               	movlw	1
 12727  004D3C  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 12728                           
 12729                           ; BSR set to: 1
 12730                           ;outputs_MC50.c: 597:                 InitSoftStop();
 12731  004D3E  EC7E  F043         	call	_InitSoftStop	;wreg free
 12732                           
 12733                           ;outputs_MC50.c: 598:             }else{
 12734  004D42  D00F               	goto	l20347
 12735  004D44                     l20339:
 12736                           
 12737                           ; BSR set to: 0
 12738                           ;outputs_MC50.c: 599:                 ts_system.TimeStopedBeforeDecelaration=( 500/50);
 12739  004D44  0E00               	movlw	0
 12740  004D46  0101               	movlb	1	; () banked
 12741  004D48  6FC7               	movwf	(_ts_system+45)& (0+255),b	;volatile
 12742  004D4A  0E0A               	movlw	10
 12743  004D4C  6FC6               	movwf	(_ts_system+44)& (0+255),b	;volatile
 12744                           
 12745                           ;outputs_MC50.c: 600:                  var_sys.AutoInversionActiveStop = NO;
 12746  004D4E  0E00               	movlw	0
 12747  004D50  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 12748                           
 12749                           ; BSR set to: 1
 12750                           ;outputs_MC50.c: 601:                 ControlDecelarationFactor();
 12751  004D52  EC15  F048         	call	_ControlDecelarationFactor	;wreg free
 12752                           
 12753                           ; BSR set to: 1
 12754                           ;outputs_MC50.c: 602:                 powerControl_st.decelarationActive=YES;
 12755  004D56  0E01               	movlw	1
 12756  004D58  6F7B               	movwf	_powerControl_st& (0+255),b
 12757                           
 12758                           ; BSR set to: 1
 12759                           ;outputs_MC50.c: 603:                 var_sys.velocityFactor=0;
 12760  004D5A  0E00               	movlw	0
 12761  004D5C  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12762  004D5E  0E00               	movlw	0
 12763  004D60  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12764  004D62                     l20347:
 12765                           
 12766                           ;outputs_MC50.c: 607:         if ((var_sys.velocityFactorstop <= 0)&&(var_sys.AutoInvers
      +                          ionActiveStop == YES) && (var_sys_NVM.softstop > 0))
 12767  004D62  0101               	movlb	1	; () banked
 12768  004D64  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 12769  004D66  D7AE               	goto	u23490
 12770  004D68  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 12771  004D6A  E135               	bnz	l2306
 12772  004D6C  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 12773  004D6E  B0D8               	btfsc	status,0,c
 12774  004D70  0012               	return	
 12775  004D72  D7A8               	goto	u23490
 12776  004D74                     l20361:
 12777  004D74  0101               	movlb	1	; () banked
 12778  004D76  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 12779  004D78  D012               	goto	l20369
 12780  004D7A  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 12781  004D7C  E103               	bnz	u23630
 12782  004D7E  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 12783  004D80  A0D8               	btfss	status,0,c
 12784  004D82  D00D               	goto	l20369
 12785  004D84                     u23630:
 12786                           
 12787                           ; BSR set to: 1
 12788  004D84  5100               	movf	_var_sys& (0+255),w,b	;volatile
 12789  004D86  B4D8               	btfsc	status,2,c
 12790  004D88  D00A               	goto	l20369
 12791                           
 12792                           ; BSR set to: 1
 12793                           ;outputs_MC50.c: 618:     {;outputs_MC50.c: 619:         var_sys.velocityFactorstop=(var
      +                          _sys.velocityFactorstop)- var_sys.SoftStopDecrementControl;
 12794  004D8A  5113               	movf	(_var_sys+19)& (0+255),w,b	;volatile
 12795  004D8C  5D10               	subwf	(_var_sys+16)& (0+255),w,b	;volatile
 12796  004D8E  6F10               	movwf	(_var_sys+16)& (0+255),b	;volatile
 12797  004D90  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 12798  004D92  A0D8               	btfss	status,0,c
 12799  004D94  0511               	decf	(_var_sys+17)& (0+255),w,b	;volatile
 12800  004D96  6F11               	movwf	(_var_sys+17)& (0+255),b	;volatile
 12801  004D98                     l20367:
 12802                           
 12803                           ; BSR set to: 1
 12804                           ;outputs_MC50.c: 620:         powerControl_st.decelarationActive=NO;
 12805  004D98  0E00               	movlw	0
 12806  004D9A  6F7B               	movwf	_powerControl_st& (0+255),b
 12807                           
 12808                           ;outputs_MC50.c: 623:     }
 12809  004D9C  0012               	return	
 12810  004D9E                     l20369:
 12811                           
 12812                           ; BSR set to: 1
 12813  004D9E  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 12814  004DA0  D010               	goto	l20377
 12815  004DA2  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 12816  004DA4  E103               	bnz	u23650
 12817  004DA6  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 12818  004DA8  A0D8               	btfss	status,0,c
 12819  004DAA  D00B               	goto	l20377
 12820  004DAC                     u23650:
 12821                           
 12822                           ; BSR set to: 1
 12823  004DAC  5100               	movf	_var_sys& (0+255),w,b	;volatile
 12824  004DAE  B4D8               	btfsc	status,2,c
 12825  004DB0  D008               	goto	l20377
 12826                           
 12827                           ; BSR set to: 1
 12828                           ;outputs_MC50.c: 626:     {;outputs_MC50.c: 627:         var_sys.velocityFactor=(var_sys
      +                          .velocityFactor)-var_sys.SoftStartDecrementControl;
 12829  004DB2  5114               	movf	(_var_sys+20)& (0+255),w,b	;volatile
 12830  004DB4  5D0E               	subwf	(_var_sys+14)& (0+255),w,b	;volatile
 12831  004DB6  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12832  004DB8  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 12833  004DBA  A0D8               	btfss	status,0,c
 12834  004DBC  050F               	decf	(_var_sys+15)& (0+255),w,b	;volatile
 12835  004DBE  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12836  004DC0  D7EB               	goto	l20367
 12837  004DC2                     l20377:
 12838                           
 12839                           ; BSR set to: 1
 12840                           ;outputs_MC50.c: 634:     {;outputs_MC50.c: 635:          var_sys.velocityFactorstop = 0
      +                          ;
 12841  004DC2  0E00               	movlw	0
 12842  004DC4  6F11               	movwf	(_var_sys+17)& (0+255),b	;volatile
 12843  004DC6  0E00               	movlw	0
 12844  004DC8  6F10               	movwf	(_var_sys+16)& (0+255),b	;volatile
 12845                           
 12846                           ;outputs_MC50.c: 636:          var_sys.velocityFactor=0;
 12847  004DCA  0E00               	movlw	0
 12848  004DCC  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12849  004DCE  0E00               	movlw	0
 12850  004DD0  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12851                           
 12852                           ;outputs_MC50.c: 637:          powerControl_st.decelarationActive=NO;
 12853  004DD2  0E00               	movlw	0
 12854  004DD4  6F7B               	movwf	_powerControl_st& (0+255),b
 12855  004DD6                     l2306:
 12856  004DD6  0012               	return		;funcret
 12857  004DD8                     __end_of_controlVelocity:
 12858                           	callstack 0
 12859                           
 12860 ;; *************** function _getStateOpenPosition *****************
 12861 ;; Defined at:
 12862 ;;		line 470 in file "outputs_MC50.c"
 12863 ;; Parameters:    Size  Location     Type
 12864 ;;  stateMotor      1    wreg     enum E10381
 12865 ;; Auto vars:     Size  Location     Type
 12866 ;;  stateMotor      1    1[BANK0 ] enum E10381
 12867 ;;  state           1    0[BANK0 ] _Bool 
 12868 ;; Return value:  Size  Location     Type
 12869 ;;                  1    wreg      _Bool 
 12870 ;; Registers used:
 12871 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12872 ;; Tracked objects:
 12873 ;;		On entry : 3F/1
 12874 ;;		On exit  : 3F/0
 12875 ;;		Unchanged: 0/0
 12876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12878 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12879 ;;      Temps:          9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12880 ;;      Totals:         9       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12881 ;;Total ram usage:       11 bytes
 12882 ;; Hardware stack levels used: 1
 12883 ;; Hardware stack levels required when called: 6
 12884 ;; This function calls:
 12885 ;;		___lmul
 12886 ;;		_getTimeDecelaration
 12887 ;; This function is called by:
 12888 ;;		_controlVelocity
 12889 ;; This function uses a non-reentrant model
 12890 ;;
 12891                           
 12892                           	psect	text30
 12893  0065DC                     __ptext30:
 12894                           	callstack 0
 12895  0065DC                     _getStateOpenPosition:
 12896                           	callstack 21
 12897                           
 12898                           ;incstack = 0
 12899                           ;getStateOpenPosition@stateMotor stored from wreg
 12900  0065DC  0100               	movlb	0	; () banked
 12901  0065DE  6FD9               	movwf	getStateOpenPosition@stateMotor& (0+255),b
 12902                           
 12903                           ;outputs_MC50.c: 470: _Bool getStateOpenPosition(stateMotor_enum stateMotor);outputs_MC5
      +                          0.c: 471: {;outputs_MC50.c: 472:     _Bool state=0;
 12904  0065E0  0E00               	movlw	0
 12905  0065E2  0100               	movlb	0	; () banked
 12906  0065E4  6FD8               	movwf	getStateOpenPosition@state& (0+255),b
 12907                           
 12908                           ; BSR set to: 0
 12909                           ;outputs_MC50.c: 473:     if(var_sys.PositionIsLost==YES)
 12910  0065E6  0101               	movlb	1	; () banked
 12911  0065E8  0548               	decf	(_var_sys+72)& (0+255),w,b	;volatile
 12912  0065EA  A4D8               	btfss	status,2,c
 12913  0065EC  D002               	goto	l19745
 12914  0065EE                     u22630:
 12915                           
 12916                           ;outputs_MC50.c: 474:     {;outputs_MC50.c: 475:         state=1;
 12917  0065EE  0E01               	movlw	1
 12918  0065F0  D046               	goto	L71
 12919  0065F2                     l19745:
 12920                           
 12921                           ; BSR set to: 1
 12922  0065F2  0100               	movlb	0	; () banked
 12923  0065F4  519C               	movf	(_var_sys_NVM+4)& (0+255),w,b	;volatile
 12924  0065F6  0D14               	mullw	20
 12925  0065F8  CFF3 F032          	movff	prodl,??_getStateOpenPosition
 12926  0065FC  CFF4 F033          	movff	prodh,??_getStateOpenPosition+1
 12927  006600  0E00               	movlw	0
 12928  006602  BE33               	btfsc	(??_getStateOpenPosition+1)^0,7,c
 12929  006604  0EFF               	movlw	255
 12930  006606  6E34               	movwf	(??_getStateOpenPosition+2)^0,c
 12931  006608  6E35               	movwf	(??_getStateOpenPosition+3)^0,c
 12932  00660A  51CC               	movf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 12933  00660C  5C32               	subwf	??_getStateOpenPosition^0,w,c
 12934  00660E  51CD               	movf	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 12935  006610  5833               	subwfb	(??_getStateOpenPosition+1)^0,w,c
 12936  006612  51CE               	movf	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 12937  006614  5834               	subwfb	(??_getStateOpenPosition+2)^0,w,c
 12938  006616  51CF               	movf	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 12939  006618  5835               	subwfb	(??_getStateOpenPosition+3)^0,w,c
 12940  00661A  B0D8               	btfsc	status,0,c
 12941  00661C  D033               	goto	l19759
 12942                           
 12943                           ; BSR set to: 0
 12944  00661E  0E02               	movlw	2
 12945  006620  19D9               	xorwf	getStateOpenPosition@stateMotor& (0+255),w,b
 12946  006622  A4D8               	btfss	status,2,c
 12947  006624  D02F               	goto	l19759
 12948                           
 12949                           ; BSR set to: 0
 12950                           ;outputs_MC50.c: 478:     {;outputs_MC50.c: 479:         if(var_sys_NVM.walkTime<(var_sy
      +                          s_NVM.decelarationOpen/2))
 12951  006626  90D8               	bcf	status,0,c
 12952  006628  3198               	rrcf	_var_sys_NVM& (0+255),w,b	;volatile
 12953  00662A  619C               	cpfslt	(_var_sys_NVM+4)& (0+255),b	;volatile
 12954  00662C  D001               	goto	l19753
 12955  00662E  D7DF               	goto	u22630
 12956  006630                     l19753:
 12957                           
 12958                           ; BSR set to: 0
 12959  006630  519C               	movf	(_var_sys_NVM+4)& (0+255),w,b	;volatile
 12960  006632  0D14               	mullw	20
 12961  006634  CFF3 F032          	movff	prodl,??_getStateOpenPosition
 12962  006638  CFF4 F033          	movff	prodh,??_getStateOpenPosition+1
 12963  00663C  0E00               	movlw	0
 12964  00663E  BE33               	btfsc	(??_getStateOpenPosition+1)^0,7,c
 12965  006640  0EFF               	movlw	255
 12966  006642  6E34               	movwf	(??_getStateOpenPosition+2)^0,c
 12967  006644  6E35               	movwf	(??_getStateOpenPosition+3)^0,c
 12968  006646  0ED8               	movlw	216
 12969  006648  2432               	addwf	??_getStateOpenPosition^0,w,c
 12970  00664A  6E36               	movwf	(??_getStateOpenPosition+4)^0,c
 12971  00664C  0EFF               	movlw	255
 12972  00664E  2033               	addwfc	(??_getStateOpenPosition+1)^0,w,c
 12973  006650  6E37               	movwf	(??_getStateOpenPosition+5)^0,c
 12974  006652  0EFF               	movlw	255
 12975  006654  2034               	addwfc	(??_getStateOpenPosition+2)^0,w,c
 12976  006656  6E38               	movwf	(??_getStateOpenPosition+6)^0,c
 12977  006658  0EFF               	movlw	255
 12978  00665A  2035               	addwfc	(??_getStateOpenPosition+3)^0,w,c
 12979  00665C  6E39               	movwf	(??_getStateOpenPosition+7)^0,c
 12980  00665E  0101               	movlb	1	; () banked
 12981  006660  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 12982  006662  5C36               	subwf	(??_getStateOpenPosition+4)^0,w,c
 12983  006664  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 12984  006666  5837               	subwfb	(??_getStateOpenPosition+5)^0,w,c
 12985  006668  5120               	movf	(_var_sys+32)& (0+255),w,b	;volatile
 12986  00666A  5838               	subwfb	(??_getStateOpenPosition+6)^0,w,c
 12987  00666C  5039               	movf	(??_getStateOpenPosition+7)^0,w,c
 12988  00666E  0A80               	xorlw	128
 12989  006670  6E3A               	movwf	(??_getStateOpenPosition+8)^0,c
 12990  006672  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 12991  006674  0A80               	xorlw	128
 12992  006676  583A               	subwfb	(??_getStateOpenPosition+8)^0,w,c
 12993  006678  A0D8               	btfss	status,0,c
 12994  00667A  D7B9               	goto	u22630
 12995                           
 12996                           ; BSR set to: 1
 12997                           ;outputs_MC50.c: 488:         {;outputs_MC50.c: 489:             state= 0;
 12998  00667C  0E00               	movlw	0
 12999  00667E                     L71:
 13000  00667E  0100               	movlb	0	; () banked
 13001  006680  6FD8               	movwf	getStateOpenPosition@state& (0+255),b
 13002  006682  D032               	goto	l2249
 13003  006684                     l19759:
 13004                           
 13005                           ; BSR set to: 0
 13006  006684  0E02               	movlw	2
 13007  006686  19D9               	xorwf	getStateOpenPosition@stateMotor& (0+255),w,b
 13008  006688  B4D8               	btfsc	status,2,c
 13009  00668A  D003               	goto	u22690
 13010                           
 13011                           ; BSR set to: 0
 13012  00668C  05D9               	decf	getStateOpenPosition@stateMotor& (0+255),w,b
 13013  00668E  A4D8               	btfss	status,2,c
 13014  006690  D02B               	goto	l2249
 13015  006692                     u22690:
 13016                           
 13017                           ; BSR set to: 0
 13018                           ;outputs_MC50.c: 493:     {;outputs_MC50.c: 494:          if((var_sys_NVM.learningTimeTo
      +                          Open)<(((unsigned long)var_sys_NVM.decelarationOpen*( 500/50))))
 13019  006692  5198               	movf	_var_sys_NVM& (0+255),w,b	;volatile
 13020  006694  6E1D               	movwf	___lmul@multiplier^0,c
 13021  006696  6A1E               	clrf	(___lmul@multiplier+1)^0,c
 13022  006698  6A1F               	clrf	(___lmul@multiplier+2)^0,c
 13023  00669A  6A20               	clrf	(___lmul@multiplier+3)^0,c
 13024  00669C  0E0A               	movlw	10
 13025  00669E  6E21               	movwf	___lmul@multiplicand^0,c
 13026  0066A0  0E00               	movlw	0
 13027  0066A2  6E22               	movwf	(___lmul@multiplicand+1)^0,c
 13028  0066A4  0E00               	movlw	0
 13029  0066A6  6E23               	movwf	(___lmul@multiplicand+2)^0,c
 13030  0066A8  0E00               	movlw	0
 13031  0066AA  6E24               	movwf	(___lmul@multiplicand+3)^0,c
 13032  0066AC  EC37  F042         	call	___lmul	;wreg free
 13033  0066B0  501D               	movf	?___lmul^0,w,c
 13034  0066B2  0100               	movlb	0	; () banked
 13035  0066B4  5DCC               	subwf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 13036  0066B6  501E               	movf	(?___lmul+1)^0,w,c
 13037  0066B8  59CD               	subwfb	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 13038  0066BA  501F               	movf	(?___lmul+2)^0,w,c
 13039  0066BC  59CE               	subwfb	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 13040  0066BE  5020               	movf	(?___lmul+3)^0,w,c
 13041  0066C0  59CF               	subwfb	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 13042  0066C2  A0D8               	btfss	status,0,c
 13043  0066C4  D794               	goto	u22630
 13044                           
 13045                           ; BSR set to: 0
 13046  0066C6  51D9               	movf	getStateOpenPosition@stateMotor& (0+255),w,b
 13047  0066C8  ECFB  F035         	call	_getTimeDecelaration
 13048  0066CC  0101               	movlb	1	; () banked
 13049  0066CE  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 13050  0066D0  5C29               	subwf	?_getTimeDecelaration^0,w,c
 13051  0066D2  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 13052  0066D4  582A               	subwfb	(?_getTimeDecelaration+1)^0,w,c
 13053  0066D6  5120               	movf	(_var_sys+32)& (0+255),w,b	;volatile
 13054  0066D8  582B               	subwfb	(?_getTimeDecelaration+2)^0,w,c
 13055  0066DA  502C               	movf	(?_getTimeDecelaration+3)^0,w,c
 13056  0066DC  0A80               	xorlw	128
 13057  0066DE  6E32               	movwf	??_getStateOpenPosition^0,c
 13058  0066E0  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 13059  0066E2  0A80               	xorlw	128
 13060  0066E4  5832               	subwfb	??_getStateOpenPosition^0,w,c
 13061  0066E6  D7C8               	goto	L72
 13062  0066E8                     l2249:
 13063                           
 13064                           ; BSR set to: 0
 13065                           ;outputs_MC50.c: 507:     return state;
 13066  0066E8  51D8               	movf	getStateOpenPosition@state& (0+255),w,b
 13067                           
 13068                           ; BSR set to: 0
 13069  0066EA  0012               	return		;funcret
 13070  0066EC                     __end_of_getStateOpenPosition:
 13071                           	callstack 0
 13072                           
 13073 ;; *************** function _InitSoftStop *****************
 13074 ;; Defined at:
 13075 ;;		line 849 in file "sm_ControlGate_MC50.c"
 13076 ;; Parameters:    Size  Location     Type
 13077 ;;		None
 13078 ;; Auto vars:     Size  Location     Type
 13079 ;;		None
 13080 ;; Return value:  Size  Location     Type
 13081 ;;                  1    wreg      void 
 13082 ;; Registers used:
 13083 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 13084 ;; Tracked objects:
 13085 ;;		On entry : 3F/1
 13086 ;;		On exit  : 3E/0
 13087 ;;		Unchanged: 0/0
 13088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13091 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13092 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13093 ;;Total ram usage:        1 bytes
 13094 ;; Hardware stack levels used: 1
 13095 ;; Hardware stack levels required when called: 5
 13096 ;; This function calls:
 13097 ;;		_GetMotorPower
 13098 ;; This function is called by:
 13099 ;;		_controlVelocity
 13100 ;; This function uses a non-reentrant model
 13101 ;;
 13102                           
 13103                           	psect	text31
 13104  0086FC                     __ptext31:
 13105                           	callstack 0
 13106  0086FC                     _InitSoftStop:
 13107                           	callstack 22
 13108                           
 13109                           ; BSR set to: 1
 13110                           ;sm_ControlGate_MC50.c: 850:     if (((var_sys.AutoInversionActiveStop == YES)|| (var_sy
      +                          s.AutoInversionActive == YES))&&(var_sys_NVM.softstop >0)) {
 13111                           
 13112                           ; BSR set to: 0
 13113                           ;incstack = 0
 13114  0086FC  0512               	decf	(_var_sys+18)& (0+255),w,b	;volatile
 13115  0086FE  B4D8               	btfsc	status,2,c
 13116  008700  D003               	goto	u22730
 13117                           
 13118                           ; BSR set to: 1
 13119  008702  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 13120  008704  A4D8               	btfss	status,2,c
 13121  008706  0012               	return	
 13122  008708                     u22730:
 13123                           
 13124                           ; BSR set to: 1
 13125  008708  0100               	movlb	0	; () banked
 13126  00870A  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 13127  00870C  B4D8               	btfsc	status,2,c
 13128  00870E  0012               	return	
 13129                           
 13130                           ; BSR set to: 0
 13131                           ;sm_ControlGate_MC50.c: 853:         var_sys.velocityFactor = 0;
 13132  008710  0E00               	movlw	0
 13133  008712  0101               	movlb	1	; () banked
 13134  008714  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 13135  008716  0E00               	movlw	0
 13136  008718  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 13137                           
 13138                           ;sm_ControlGate_MC50.c: 854:         var_sys.velocityFactorstop = 0;
 13139  00871A  0E00               	movlw	0
 13140  00871C  6F11               	movwf	(_var_sys+17)& (0+255),b	;volatile
 13141  00871E  0E00               	movlw	0
 13142  008720  6F10               	movwf	(_var_sys+16)& (0+255),b	;volatile
 13143                           
 13144                           ; BSR set to: 1
 13145                           ;sm_ControlGate_MC50.c: 855:         var_sys.velocityFactorstop = GetMotorPower();
 13146  008722  ECA8  F037         	call	_GetMotorPower	;wreg free
 13147  008726  6E14               	movwf	??_InitSoftStop^0,c
 13148  008728  5014               	movf	??_InitSoftStop^0,w,c
 13149  00872A  6F10               	movwf	(_var_sys+16)& (0+255),b	;volatile
 13150  00872C  6B11               	clrf	(_var_sys+17)& (0+255),b	;volatile
 13151                           
 13152                           ; BSR set to: 1
 13153                           ;sm_ControlGate_MC50.c: 859:         ts_system.timeSoftStop = var_sys.velocityFactorstop
      +                           + 1;
 13154  00872E  0E01               	movlw	1
 13155  008730  2510               	addwf	(_var_sys+16)& (0+255),w,b	;volatile
 13156  008732  6FB2               	movwf	(_ts_system+24)& (0+255),b	;volatile
 13157  008734  0E00               	movlw	0
 13158  008736  2111               	addwfc	(_var_sys+17)& (0+255),w,b	;volatile
 13159  008738  6FB3               	movwf	(_ts_system+25)& (0+255),b	;volatile
 13160                           
 13161                           ; BSR set to: 1
 13162                           ;sm_ControlGate_MC50.c: 861:         var_sys.SoftStopDecrementControl = 10 - var_sys_NVM
      +                          .softstop;
 13163  00873A  0100               	movlb	0	; () banked
 13164  00873C  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 13165  00873E  080A               	sublw	10
 13166  008740  0101               	movlb	1	; () banked
 13167  008742  6F13               	movwf	(_var_sys+19)& (0+255),b	;volatile
 13168  008744  0012               	return		;funcret
 13169  008746                     __end_of_InitSoftStop:
 13170                           	callstack 0
 13171                           
 13172 ;; *************** function _ControlDecelarationFactor *****************
 13173 ;; Defined at:
 13174 ;;		line 463 in file "outputs_MC50.c"
 13175 ;; Parameters:    Size  Location     Type
 13176 ;;		None
 13177 ;; Auto vars:     Size  Location     Type
 13178 ;;		None
 13179 ;; Return value:  Size  Location     Type
 13180 ;;                  1    wreg      void 
 13181 ;; Registers used:
 13182 ;;		wreg, status,2, status,0, prodl, prodh
 13183 ;; Tracked objects:
 13184 ;;		On entry : 3E/1
 13185 ;;		On exit  : 3F/1
 13186 ;;		Unchanged: 0/0
 13187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13191 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13192 ;;Total ram usage:        0 bytes
 13193 ;; Hardware stack levels used: 1
 13194 ;; Hardware stack levels required when called: 4
 13195 ;; This function calls:
 13196 ;;		Nothing
 13197 ;; This function is called by:
 13198 ;;		_controlVelocity
 13199 ;; This function uses a non-reentrant model
 13200 ;;
 13201                           
 13202                           	psect	text32
 13203  00902A                     __ptext32:
 13204                           	callstack 0
 13205  00902A                     _ControlDecelarationFactor:
 13206                           	callstack 23
 13207                           
 13208                           ;outputs_MC50.c: 465:     powerControl_st.decelarationCyclesOn=1;
 13209                           
 13210                           ;incstack = 0
 13211  00902A  0E01               	movlw	1
 13212  00902C  0101               	movlb	1	; () banked
 13213  00902E  6F7C               	movwf	(_powerControl_st+1)& (0+255),b
 13214                           
 13215                           ;outputs_MC50.c: 466:     powerControl_st.decelarationCyclesOff=2;
 13216  009030  0E02               	movlw	2
 13217  009032  6F7D               	movwf	(_powerControl_st+2)& (0+255),b
 13218                           
 13219                           ; BSR set to: 1
 13220                           ;outputs_MC50.c: 467:     powerControl_st.decelarationPower=var_sys_NVM.velocityDecelara
      +                          tion*var_sys.Torquerelanty;
 13221  009034  0100               	movlb	0	; () banked
 13222  009036  51B0               	movf	(_var_sys_NVM+24)& (0+255),w,b	;volatile
 13223  009038  0101               	movlb	1	; () banked
 13224  00903A  0315               	mulwf	(_var_sys+21)& (0+255),b	;volatile
 13225  00903C  CFF3 F17E          	movff	prodl,_powerControl_st+3
 13226                           
 13227                           ; BSR set to: 1
 13228  009040  0012               	return		;funcret
 13229  009042                     __end_of_ControlDecelarationFactor:
 13230                           	callstack 0
 13231                           
 13232 ;; *************** function _actionZone_Opened *****************
 13233 ;; Defined at:
 13234 ;;		line 514 in file "sm_ControlGate_MC50.c"
 13235 ;; Parameters:    Size  Location     Type
 13236 ;;		None
 13237 ;; Auto vars:     Size  Location     Type
 13238 ;;  typeOpenOrde    1   32[COMRAM] enum E10372
 13239 ;;  securityClos    1   31[COMRAM] enum E10397
 13240 ;; Return value:  Size  Location     Type
 13241 ;;                  1    wreg      void 
 13242 ;; Registers used:
 13243 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13244 ;; Tracked objects:
 13245 ;;		On entry : 3F/0
 13246 ;;		On exit  : 3E/0
 13247 ;;		Unchanged: 0/0
 13248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13250 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13252 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13253 ;;Total ram usage:        2 bytes
 13254 ;; Hardware stack levels used: 1
 13255 ;; Hardware stack levels required when called: 7
 13256 ;; This function calls:
 13257 ;;		_CloseOrder
 13258 ;;		_GetOpenOrder
 13259 ;;		_GetSecurityStateInClosing
 13260 ;;		_InitFullAutoTime
 13261 ;;		_InitWalkAutoTime
 13262 ;;		_OpenFullOrder
 13263 ;;		_OpenWalkOrder
 13264 ;;		_VerifyFollowMe
 13265 ;; This function is called by:
 13266 ;;		_sm_execute_ControlGate
 13267 ;; This function uses a non-reentrant model
 13268 ;;
 13269                           
 13270                           	psect	text33
 13271  004DD8                     __ptext33:
 13272                           	callstack 0
 13273  004DD8                     _actionZone_Opened:
 13274                           	callstack 22
 13275                           
 13276                           ; BSR set to: 0
 13277                           ;sm_ControlGate_MC50.c: 515:     StateEnum securityClosing = GetSecurityStateInClosing()
      +                          ;
 13278                           
 13279                           ; BSR set to: 1
 13280                           ;incstack = 0
 13281  004DD8  EC78  F039         	call	_GetSecurityStateInClosing	;wreg free
 13282  004DDC  6E20               	movwf	actionZone_Opened@securityClosing^0,c
 13283                           
 13284                           ;sm_ControlGate_MC50.c: 517:     if ((securityClosing != NO) && (Abertura_pedonal == 0))
      +                           {
 13285  004DDE  5020               	movf	actionZone_Opened@securityClosing^0,w,c
 13286  004DE0  B4D8               	btfsc	status,2,c
 13287  004DE2  D007               	goto	l21533
 13288  004DE4  0101               	movlb	1	; () banked
 13289  004DE6  518D               	movf	_Abertura_pedonal& (0+255),w,b
 13290  004DE8  A4D8               	btfss	status,2,c
 13291  004DEA  D003               	goto	l21533
 13292                           
 13293                           ; BSR set to: 1
 13294                           ;sm_ControlGate_MC50.c: 518:         InitFullAutoTime();
 13295  004DEC  ECEE  F047         	call	_InitFullAutoTime	;wreg free
 13296                           
 13297                           ;sm_ControlGate_MC50.c: 519:     }
 13298  004DF0  D008               	goto	l2722
 13299  004DF2                     l21533:
 13300  004DF2  5020               	movf	actionZone_Opened@securityClosing^0,w,c
 13301  004DF4  B4D8               	btfsc	status,2,c
 13302  004DF6  D005               	goto	l2722
 13303  004DF8  0101               	movlb	1	; () banked
 13304  004DFA  058D               	decf	_Abertura_pedonal& (0+255),w,b
 13305  004DFC  B4D8               	btfsc	status,2,c
 13306                           
 13307                           ; BSR set to: 1
 13308                           ;sm_ControlGate_MC50.c: 521:          InitWalkAutoTime();
 13309  004DFE  EC73  F048         	call	_InitWalkAutoTime	;wreg free
 13310  004E02                     l2722:
 13311                           
 13312                           ;sm_ControlGate_MC50.c: 524:     TypeCMD typeOpenOrder = GetOpenOrder();
 13313  004E02  ECCC  F028         	call	_GetOpenOrder	;wreg free
 13314  004E06  6E21               	movwf	actionZone_Opened@typeOpenOrder^0,c
 13315                           
 13316                           ;sm_ControlGate_MC50.c: 526:     VerifyFollowMe(securityClosing);
 13317  004E08  5020               	movf	actionZone_Opened@securityClosing^0,w,c
 13318  004E0A  EC46  F047         	call	_VerifyFollowMe
 13319                           
 13320                           ;sm_ControlGate_MC50.c: 530:     if ((PORTBbits.RB1==0) && (var_sys_NVM.autoTimeFullClos
      +                          e != 0)&&(var_sys.AutoCloseActive != 0) && (button_struct.current != 0x35)&& (var_sys_NV
      +                          M.operationMode == ModoCondominio)){
 13321  004E0E  B28E               	btfsc	142,1,c	;volatile
 13322  004E10  D013               	goto	l2724
 13323  004E12  0100               	movlb	0	; () banked
 13324  004E14  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 13325  004E16  B4D8               	btfsc	status,2,c
 13326  004E18  D00F               	goto	l2724
 13327                           
 13328                           ; BSR set to: 0
 13329  004E1A  0101               	movlb	1	; () banked
 13330  004E1C  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
 13331  004E1E  B4D8               	btfsc	status,2,c
 13332  004E20  D00B               	goto	l2724
 13333                           
 13334                           ; BSR set to: 1
 13335  004E22  0E35               	movlw	53
 13336  004E24  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 13337  004E26  B4D8               	btfsc	status,2,c
 13338  004E28  D007               	goto	l2724
 13339                           
 13340                           ; BSR set to: 1
 13341  004E2A  0E02               	movlw	2
 13342  004E2C  0100               	movlb	0	; () banked
 13343  004E2E  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 13344  004E30  A4D8               	btfss	status,2,c
 13345  004E32  D002               	goto	l2724
 13346                           
 13347                           ; BSR set to: 0
 13348                           ;sm_ControlGate_MC50.c: 531:       typeOpenOrder = NoCMD;
 13349  004E34  0E00               	movlw	0
 13350  004E36  6E21               	movwf	actionZone_Opened@typeOpenOrder^0,c
 13351  004E38                     l2724:
 13352                           
 13353                           ;sm_ControlGate_MC50.c: 535:      if (typeOpenOrder != NoCMD)
 13354  004E38  5021               	movf	actionZone_Opened@typeOpenOrder^0,w,c
 13355  004E3A  B4D8               	btfsc	status,2,c
 13356  004E3C  D05D               	goto	l2725
 13357                           
 13358                           ;sm_ControlGate_MC50.c: 536:      {;sm_ControlGate_MC50.c: 539:         ts_system.timeSi
      +                          nalizationDigit = (1000/50) * 3;
 13359  004E3E  0E00               	movlw	0
 13360  004E40  0101               	movlb	1	; () banked
 13361  004E42  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
 13362  004E44  0E3C               	movlw	60
 13363  004E46  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
 13364                           
 13365                           ; BSR set to: 1
 13366                           ;sm_ControlGate_MC50.c: 541:        if ( var_sys_NVM.operationMode == ModoCondominio && 
      +                          var_sys_NVM.autoTimeFullClose == 0 && (typeOpenOrder == TypeFull|| typeOpenOrder == Type
      +                          FullClose ))
 13367  004E48  0E02               	movlw	2
 13368  004E4A  0100               	movlb	0	; () banked
 13369  004E4C  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 13370  004E4E  A4D8               	btfss	status,2,c
 13371  004E50  D00D               	goto	l21565
 13372                           
 13373                           ; BSR set to: 0
 13374  004E52  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 13375  004E54  A4D8               	btfss	status,2,c
 13376  004E56  D00A               	goto	l21565
 13377                           
 13378                           ; BSR set to: 0
 13379  004E58  0421               	decf	actionZone_Opened@typeOpenOrder^0,w,c
 13380  004E5A  B4D8               	btfsc	status,2,c
 13381  004E5C  D004               	goto	u25270
 13382                           
 13383                           ; BSR set to: 0
 13384  004E5E  0E04               	movlw	4
 13385  004E60  1821               	xorwf	actionZone_Opened@typeOpenOrder^0,w,c
 13386  004E62  A4D8               	btfss	status,2,c
 13387  004E64  D003               	goto	l21565
 13388  004E66                     u25270:
 13389                           
 13390                           ;sm_ControlGate_MC50.c: 542:         {;sm_ControlGate_MC50.c: 544:             CloseOrde
      +                          r();
 13391  004E66  ECE7  F046         	call	_CloseOrder	;wreg free
 13392                           
 13393                           ;sm_ControlGate_MC50.c: 546:         }
 13394  004E6A  0012               	return	
 13395  004E6C                     l21565:
 13396                           
 13397                           ; BSR set to: 0
 13398  004E6C  51A8               	movf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 13399  004E6E  B4D8               	btfsc	status,2,c
 13400  004E70  D014               	goto	l21579
 13401                           
 13402                           ; BSR set to: 0
 13403                           ;sm_ControlGate_MC50.c: 553:             if (typeOpenOrder == TypeFullOpen && var_sys.Fi
      +                          mCurso_OpenIsEnabled == NO && var_sys.Statedoorcontrol != st_Opened) {
 13404  004E72  0E03               	movlw	3
 13405  004E74  1821               	xorwf	actionZone_Opened@typeOpenOrder^0,w,c
 13406  004E76  A4D8               	btfss	status,2,c
 13407  004E78  D00B               	goto	l21575
 13408                           
 13409                           ; BSR set to: 0
 13410  004E7A  0101               	movlb	1	; () banked
 13411  004E7C  5104               	movf	(_var_sys+4)& (0+255),w,b	;volatile
 13412  004E7E  A4D8               	btfss	status,2,c
 13413  004E80  D007               	goto	l21575
 13414                           
 13415                           ; BSR set to: 1
 13416  004E82  0E04               	movlw	4
 13417  004E84  191C               	xorwf	(_var_sys+28)& (0+255),w,b	;volatile
 13418  004E86  B4D8               	btfsc	status,2,c
 13419  004E88  D003               	goto	l21575
 13420  004E8A                     u25310:
 13421                           
 13422                           ; BSR set to: 1
 13423                           ;sm_ControlGate_MC50.c: 555:                 OpenFullOrder();
 13424  004E8A  ECFA  F046         	call	_OpenFullOrder	;wreg free
 13425                           
 13426                           ;sm_ControlGate_MC50.c: 556:             } else if (typeOpenOrder == TypeFullClose) {
 13427  004E8E  0012               	return	
 13428  004E90                     l21575:
 13429  004E90  0E04               	movlw	4
 13430  004E92  1821               	xorwf	actionZone_Opened@typeOpenOrder^0,w,c
 13431  004E94  A4D8               	btfss	status,2,c
 13432  004E96  0012               	return	
 13433  004E98  D7E6               	goto	u25270
 13434  004E9A                     l21579:
 13435                           
 13436                           ; BSR set to: 0
 13437  004E9A  0E03               	movlw	3
 13438  004E9C  0101               	movlb	1	; () banked
 13439  004E9E  190B               	xorwf	(_var_sys+11)& (0+255),w,b	;volatile
 13440  004EA0  A4D8               	btfss	status,2,c
 13441  004EA2  D009               	goto	l21587
 13442                           
 13443                           ; BSR set to: 1
 13444  004EA4  0421               	decf	actionZone_Opened@typeOpenOrder^0,w,c
 13445  004EA6  A4D8               	btfss	status,2,c
 13446  004EA8  D006               	goto	l21587
 13447  004EAA                     u25340:
 13448                           
 13449                           ; BSR set to: 1
 13450                           ;sm_ControlGate_MC50.c: 563:             OpenFullOrder();
 13451  004EAA  ECFA  F046         	call	_OpenFullOrder	;wreg free
 13452  004EAE                     l21585:
 13453                           
 13454                           ;sm_ControlGate_MC50.c: 565:             var_sys.AutoInversionActive = NO;
 13455  004EAE  0E00               	movlw	0
 13456  004EB0  0101               	movlb	1	; () banked
 13457  004EB2  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 13458                           
 13459                           ;sm_ControlGate_MC50.c: 567:         } else if (var_sys.LastState == InClose && typeOpen
      +                          Order == TypeWalk) {
 13460  004EB4  0012               	return	
 13461  004EB6                     l21587:
 13462                           
 13463                           ; BSR set to: 1
 13464  004EB6  0E03               	movlw	3
 13465  004EB8  190B               	xorwf	(_var_sys+11)& (0+255),w,b	;volatile
 13466  004EBA  A4D8               	btfss	status,2,c
 13467  004EBC  D007               	goto	l21595
 13468                           
 13469                           ; BSR set to: 1
 13470  004EBE  0E02               	movlw	2
 13471  004EC0  1821               	xorwf	actionZone_Opened@typeOpenOrder^0,w,c
 13472  004EC2  A4D8               	btfss	status,2,c
 13473  004EC4  D003               	goto	l21595
 13474                           
 13475                           ; BSR set to: 1
 13476                           ;sm_ControlGate_MC50.c: 569:             OpenWalkOrder();
 13477  004EC6  ECBE  F03F         	call	_OpenWalkOrder	;wreg free
 13478  004ECA  D7F1               	goto	l21585
 13479  004ECC                     l21595:
 13480                           
 13481                           ; BSR set to: 1
 13482  004ECC  0E03               	movlw	3
 13483  004ECE  1821               	xorwf	actionZone_Opened@typeOpenOrder^0,w,c
 13484  004ED0  A4D8               	btfss	status,2,c
 13485  004ED2  D005               	goto	l21605
 13486                           
 13487                           ; BSR set to: 1
 13488                           ;sm_ControlGate_MC50.c: 574:             if (var_sys.Statedoorcontrol == st_Opened){
 13489  004ED4  0E04               	movlw	4
 13490  004ED6  191C               	xorwf	(_var_sys+28)& (0+255),w,b	;volatile
 13491  004ED8  B4D8               	btfsc	status,2,c
 13492  004EDA  0012               	return	
 13493  004EDC  D7E6               	goto	u25340
 13494  004EDE                     l21605:
 13495                           
 13496                           ; BSR set to: 1
 13497  004EDE  0100               	movlb	0	; () banked
 13498  004EE0  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 13499  004EE2  B4D8               	btfsc	status,2,c
 13500  004EE4  D007               	goto	l21611
 13501                           
 13502                           ; BSR set to: 0
 13503  004EE6  0E02               	movlw	2
 13504  004EE8  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 13505  004EEA  A4D8               	btfss	status,2,c
 13506  004EEC  D003               	goto	l21611
 13507                           
 13508                           ; BSR set to: 0
 13509                           ;sm_ControlGate_MC50.c: 582:         {;sm_ControlGate_MC50.c: 584:             InitFullA
      +                          utoTime();
 13510  004EEE  ECEE  F047         	call	_InitFullAutoTime	;wreg free
 13511                           
 13512                           ;sm_ControlGate_MC50.c: 586:         }
 13513  004EF2  0012               	return	
 13514  004EF4                     l21611:
 13515                           
 13516                           ; BSR set to: 0
 13517  004EF4  5020               	movf	actionZone_Opened@securityClosing^0,w,c
 13518  004EF6  D7CE               	goto	L73
 13519  004EF8                     l2725:
 13520  004EF8  B28E               	btfsc	142,1,c	;volatile
 13521  004EFA  D00B               	goto	l21619
 13522  004EFC  0100               	movlb	0	; () banked
 13523  004EFE  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 13524  004F00  B4D8               	btfsc	status,2,c
 13525  004F02  D007               	goto	l21619
 13526                           
 13527                           ; BSR set to: 0
 13528                           ;sm_ControlGate_MC50.c: 597:         ts_system.timeWaitToClose = ((int) var_sys_NVM.auto
      +                          TimeFullClose * (1000/50));
 13529  004F04  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 13530  004F06  0D14               	mullw	20
 13531  004F08  CFF3 F1AC          	movff	prodl,_ts_system+18	;volatile
 13532  004F0C  CFF4 F1AD          	movff	prodh,_ts_system+19	;volatile
 13533                           
 13534                           ;sm_ControlGate_MC50.c: 599:     }
 13535  004F10  0012               	return	
 13536  004F12                     l21619:
 13537  004F12  0101               	movlb	1	; () banked
 13538  004F14  053A               	decf	(_var_sys+58)& (0+255),w,b	;volatile
 13539  004F16  A4D8               	btfss	status,2,c
 13540  004F18  D00F               	goto	l21629
 13541                           
 13542                           ; BSR set to: 1
 13543  004F1A  5020               	movf	actionZone_Opened@securityClosing^0,w,c
 13544  004F1C  A4D8               	btfss	status,2,c
 13545  004F1E  D00C               	goto	l21629
 13546                           
 13547                           ; BSR set to: 1
 13548                           ;sm_ControlGate_MC50.c: 603:         var_sys.StateFollowIsOn = NO;
 13549  004F20  0E00               	movlw	0
 13550  004F22  6F3A               	movwf	(_var_sys+58)& (0+255),b	;volatile
 13551                           
 13552                           ; BSR set to: 1
 13553                           ;sm_ControlGate_MC50.c: 610:         var_sys.AutoCloseActive = var_sys_NVM.folow_me;
 13554  004F24  C0AD  F123         	movff	_var_sys_NVM+21,_var_sys+35	;volatile
 13555                           
 13556                           ; BSR set to: 1
 13557                           ;sm_ControlGate_MC50.c: 611:         ts_system.timeWaitToClose = var_sys_NVM.folow_me * 
      +                          (1000/50);
 13558  004F28  0100               	movlb	0	; () banked
 13559  004F2A  51AD               	movf	(_var_sys_NVM+21)& (0+255),w,b	;volatile
 13560  004F2C  0D14               	mullw	20
 13561  004F2E  CFF3 F1AC          	movff	prodl,_ts_system+18	;volatile
 13562  004F32  CFF4 F1AD          	movff	prodh,_ts_system+19	;volatile
 13563                           
 13564                           ;sm_ControlGate_MC50.c: 613:     }else if (ts_system.timeWaitToClose <= 0 && var_sys_NVM
      +                          .operationMode == ModoPassoPasso && var_sys.passoAPassoAutoClose == YES && var_sys.AutoC
      +                          loseActive != 0) {
 13565  004F36  0012               	return	
 13566  004F38                     l21629:
 13567                           
 13568                           ; BSR set to: 1
 13569  004F38  BFAD               	btfsc	(_ts_system+19)& (0+255),7,b	;volatile
 13570  004F3A  D005               	goto	u25460
 13571  004F3C  51AD               	movf	(_ts_system+19)& (0+255),w,b	;volatile
 13572  004F3E  E113               	bnz	l21641
 13573  004F40  05AC               	decf	(_ts_system+18)& (0+255),w,b	;volatile
 13574  004F42  B0D8               	btfsc	status,0,c
 13575  004F44  D010               	goto	l21641
 13576  004F46                     u25460:
 13577                           
 13578                           ; BSR set to: 1
 13579  004F46  0100               	movlb	0	; () banked
 13580  004F48  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 13581  004F4A  A4D8               	btfss	status,2,c
 13582  004F4C  D00C               	goto	l21641
 13583                           
 13584                           ; BSR set to: 0
 13585  004F4E  0101               	movlb	1	; () banked
 13586  004F50  0550               	decf	(_var_sys+80)& (0+255),w,b	;volatile
 13587  004F52  A4D8               	btfss	status,2,c
 13588  004F54  D008               	goto	l21641
 13589                           
 13590                           ; BSR set to: 1
 13591  004F56  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
 13592  004F58  B4D8               	btfsc	status,2,c
 13593  004F5A  D005               	goto	l21641
 13594                           
 13595                           ; BSR set to: 1
 13596                           ;sm_ControlGate_MC50.c: 615:         var_sys.AutoCloseActive = 0;
 13597  004F5C  0E00               	movlw	0
 13598  004F5E  6F23               	movwf	(_var_sys+35)& (0+255),b	;volatile
 13599                           
 13600                           ;sm_ControlGate_MC50.c: 617:         var_sys.passoAPassoAutoClose = NO;
 13601  004F60  0E00               	movlw	0
 13602  004F62  6F50               	movwf	(_var_sys+80)& (0+255),b	;volatile
 13603  004F64  D780               	goto	u25270
 13604  004F66                     l21641:
 13605  004F66  0101               	movlb	1	; () banked
 13606  004F68  BFAD               	btfsc	(_ts_system+19)& (0+255),7,b	;volatile
 13607  004F6A  D005               	goto	u25500
 13608  004F6C  51AD               	movf	(_ts_system+19)& (0+255),w,b	;volatile
 13609  004F6E  E119               	bnz	l21659
 13610  004F70  05AC               	decf	(_ts_system+18)& (0+255),w,b	;volatile
 13611  004F72  B0D8               	btfsc	status,0,c
 13612  004F74  D016               	goto	l21659
 13613  004F76                     u25500:
 13614                           
 13615                           ; BSR set to: 1
 13616  004F76  0100               	movlb	0	; () banked
 13617  004F78  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 13618  004F7A  B4D8               	btfsc	status,2,c
 13619  004F7C  D012               	goto	l21659
 13620                           
 13621                           ; BSR set to: 0
 13622  004F7E  0101               	movlb	1	; () banked
 13623  004F80  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
 13624  004F82  B4D8               	btfsc	status,2,c
 13625  004F84  D00E               	goto	l21659
 13626                           
 13627                           ; BSR set to: 1
 13628                           ;sm_ControlGate_MC50.c: 621:         var_sys.AutoCloseActive = 0;
 13629  004F86  0E00               	movlw	0
 13630  004F88  6F23               	movwf	(_var_sys+35)& (0+255),b	;volatile
 13631                           
 13632                           ; BSR set to: 1
 13633                           ;sm_ControlGate_MC50.c: 627:         if ( var_sys.AutoInversionActive == YES )
 13634  004F8A  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 13635  004F8C  A4D8               	btfss	status,2,c
 13636  004F8E  D003               	goto	l21655
 13637                           
 13638                           ; BSR set to: 1
 13639                           ;sm_ControlGate_MC50.c: 628:         {;sm_ControlGate_MC50.c: 629:             var_sys.A
      +                          utoInversionActive = NO;
 13640  004F90  0E00               	movlw	0
 13641  004F92  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 13642  004F94  D77A               	goto	u25310
 13643  004F96                     l21655:
 13644                           
 13645                           ; BSR set to: 1
 13646                           ;sm_ControlGate_MC50.c: 633:         {;sm_ControlGate_MC50.c: 634:             CloseOrde
      +                          r();
 13647  004F96  ECE7  F046         	call	_CloseOrder	;wreg free
 13648                           
 13649                           ;sm_ControlGate_MC50.c: 635:             var_sys.PositionIsLost = 0;
 13650  004F9A  0E00               	movlw	0
 13651  004F9C  0101               	movlb	1	; () banked
 13652  004F9E  6F48               	movwf	(_var_sys+72)& (0+255),b	;volatile
 13653  004FA0  0012               	return	
 13654  004FA2                     l21659:
 13655  004FA2  0101               	movlb	1	; () banked
 13656  004FA4  0522               	decf	(_var_sys+34)& (0+255),w,b	;volatile
 13657  004FA6  A4D8               	btfss	status,2,c
 13658  004FA8  0012               	return	
 13659                           
 13660                           ; BSR set to: 1
 13661  004FAA  5020               	movf	actionZone_Opened@securityClosing^0,w,c
 13662  004FAC  A4D8               	btfss	status,2,c
 13663  004FAE  0012               	return	
 13664                           
 13665                           ; BSR set to: 1
 13666                           ;sm_ControlGate_MC50.c: 638:     {;sm_ControlGate_MC50.c: 639:         if (ts_system.tim
      +                          eSinalizationDigit <= 1) {
 13667  004FB0  BFA7               	btfsc	(_ts_system+13)& (0+255),7,b	;volatile
 13668  004FB2  D006               	goto	u25560
 13669  004FB4  51A7               	movf	(_ts_system+13)& (0+255),w,b	;volatile
 13670  004FB6  E103               	bnz	u25561
 13671  004FB8  0E02               	movlw	2
 13672  004FBA  5DA6               	subwf	(_ts_system+12)& (0+255),w,b	;volatile
 13673  004FBC  B0D8               	btfsc	status,0,c
 13674  004FBE                     u25561:
 13675  004FBE  0012               	return	
 13676  004FC0                     u25560:
 13677                           
 13678                           ; BSR set to: 1
 13679                           ;sm_ControlGate_MC50.c: 640:             var_sys.DigitSinalizedTemp = NO;
 13680  004FC0  0E00               	movlw	0
 13681  004FC2  6F22               	movwf	(_var_sys+34)& (0+255),b	;volatile
 13682  004FC4  0012               	return		;funcret
 13683  004FC6                     __end_of_actionZone_Opened:
 13684                           	callstack 0
 13685                           
 13686 ;; *************** function _VerifyFollowMe *****************
 13687 ;; Defined at:
 13688 ;;		line 117 in file "sm_ControlGate_MC50.c"
 13689 ;; Parameters:    Size  Location     Type
 13690 ;;  securityClos    1    wreg     enum E10397
 13691 ;; Auto vars:     Size  Location     Type
 13692 ;;  securityClos    1   15[COMRAM] enum E10397
 13693 ;; Return value:  Size  Location     Type
 13694 ;;                  1    wreg      void 
 13695 ;; Registers used:
 13696 ;;		wreg, status,2, status,0
 13697 ;; Tracked objects:
 13698 ;;		On entry : 0/0
 13699 ;;		On exit  : 3E/0
 13700 ;;		Unchanged: 0/0
 13701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13702 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13703 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13705 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13706 ;;Total ram usage:        1 bytes
 13707 ;; Hardware stack levels used: 1
 13708 ;; Hardware stack levels required when called: 4
 13709 ;; This function calls:
 13710 ;;		Nothing
 13711 ;; This function is called by:
 13712 ;;		_actionZone_Opening
 13713 ;;		_actionZone_Opened
 13714 ;; This function uses a non-reentrant model
 13715 ;;
 13716                           
 13717                           	psect	text34
 13718  008E8C                     __ptext34:
 13719                           	callstack 0
 13720  008E8C                     _VerifyFollowMe:
 13721                           	callstack 24
 13722                           
 13723                           ;incstack = 0
 13724                           ;VerifyFollowMe@securityClose stored from wreg
 13725  008E8C  6E10               	movwf	VerifyFollowMe@securityClose^0,c
 13726                           
 13727                           ;sm_ControlGate_MC50.c: 120:     if (var_sys_NVM.folow_me != 0 && var_sys_NVM.photoCellI
      +                          nOpen == 0)
 13728  008E8E  0100               	movlb	0	; () banked
 13729  008E90  51AD               	movf	(_var_sys_NVM+21)& (0+255),w,b	;volatile
 13730  008E92  B4D8               	btfsc	status,2,c
 13731  008E94  0012               	return	
 13732                           
 13733                           ; BSR set to: 0
 13734  008E96  51A0               	movf	(_var_sys_NVM+8)& (0+255),w,b	;volatile
 13735  008E98  A4D8               	btfss	status,2,c
 13736  008E9A  0012               	return	
 13737                           
 13738                           ; BSR set to: 0
 13739                           ;sm_ControlGate_MC50.c: 121:     {;sm_ControlGate_MC50.c: 122:         if (securityClose
      +                           == YES && var_sys.StateFollowIsOn == NO) {
 13740  008E9C  0410               	decf	VerifyFollowMe@securityClose^0,w,c
 13741  008E9E  A4D8               	btfss	status,2,c
 13742  008EA0  0012               	return	
 13743                           
 13744                           ; BSR set to: 0
 13745  008EA2  0101               	movlb	1	; () banked
 13746  008EA4  513A               	movf	(_var_sys+58)& (0+255),w,b	;volatile
 13747  008EA6  A4D8               	btfss	status,2,c
 13748  008EA8  0012               	return	
 13749                           
 13750                           ; BSR set to: 1
 13751                           ;sm_ControlGate_MC50.c: 123:             var_sys.StateFollowIsOn = YES;
 13752  008EAA  0E01               	movlw	1
 13753  008EAC  6F3A               	movwf	(_var_sys+58)& (0+255),b	;volatile
 13754  008EAE  0012               	return		;funcret
 13755  008EB0                     __end_of_VerifyFollowMe:
 13756                           	callstack 0
 13757                           
 13758 ;; *************** function _CloseOrder *****************
 13759 ;; Defined at:
 13760 ;;		line 63 in file "sm_ControlGate_MC50.c"
 13761 ;; Parameters:    Size  Location     Type
 13762 ;;		None
 13763 ;; Auto vars:     Size  Location     Type
 13764 ;;		None
 13765 ;; Return value:  Size  Location     Type
 13766 ;;                  1    wreg      void 
 13767 ;; Registers used:
 13768 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13769 ;; Tracked objects:
 13770 ;;		On entry : 3E/1
 13771 ;;		On exit  : 3E/0
 13772 ;;		Unchanged: 0/0
 13773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13777 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13778 ;;Total ram usage:        0 bytes
 13779 ;; Hardware stack levels used: 1
 13780 ;; Hardware stack levels required when called: 6
 13781 ;; This function calls:
 13782 ;;		_InitSoftStart
 13783 ;;		_sm_send_event
 13784 ;; This function is called by:
 13785 ;;		_actionZone_Opening
 13786 ;;		_actionZone_Opened
 13787 ;; This function uses a non-reentrant model
 13788 ;;
 13789                           
 13790                           	psect	text35
 13791  008DCE                     __ptext35:
 13792                           	callstack 0
 13793  008DCE                     _CloseOrder:
 13794                           	callstack 22
 13795                           
 13796                           ;sm_ControlGate_MC50.c: 65:     var_sys.StateMotor = InClose;
 13797                           
 13798                           ;incstack = 0
 13799  008DCE  0E03               	movlw	3
 13800  008DD0  0101               	movlb	1	; () banked
 13801  008DD2  6F00               	movwf	_var_sys& (0+255),b	;volatile
 13802                           
 13803                           ; BSR set to: 1
 13804                           ;sm_ControlGate_MC50.c: 66:     sm_send_event(&controlGate_stateMachine, ev_CloseGate);
 13805  008DD4  0EE2               	movlw	low _controlGate_stateMachine
 13806  008DD6  6E12               	movwf	sm_send_event@psm^0,c
 13807  008DD8  0E01               	movlw	high _controlGate_stateMachine
 13808  008DDA  6E13               	movwf	(sm_send_event@psm+1)^0,c
 13809  008DDC  0E00               	movlw	0
 13810  008DDE  6E15               	movwf	(sm_send_event@event+1)^0,c
 13811  008DE0  0E0E               	movlw	14
 13812  008DE2  6E14               	movwf	sm_send_event@event^0,c
 13813  008DE4  EC29  F041         	call	_sm_send_event	;wreg free
 13814                           
 13815                           ;sm_ControlGate_MC50.c: 67:     var_sys.LastState = InClose;
 13816  008DE8  0E03               	movlw	3
 13817  008DEA  0101               	movlb	1	; () banked
 13818  008DEC  6F0B               	movwf	(_var_sys+11)& (0+255),b	;volatile
 13819                           
 13820                           ; BSR set to: 1
 13821                           ;sm_ControlGate_MC50.c: 68:     InitSoftStart();
 13822  008DEE  EC57  F041         	call	_InitSoftStart	;wreg free
 13823  008DF2  0012               	return		;funcret
 13824  008DF4                     __end_of_CloseOrder:
 13825                           	callstack 0
 13826                           
 13827 ;; *************** function _actionZone_Closing *****************
 13828 ;; Defined at:
 13829 ;;		line 649 in file "sm_ControlGate_MC50.c"
 13830 ;; Parameters:    Size  Location     Type
 13831 ;;		None
 13832 ;; Auto vars:     Size  Location     Type
 13833 ;;  typeOpenOrde    1   50[COMRAM] enum E10372
 13834 ;;  securityClos    1   49[COMRAM] enum E10397
 13835 ;; Return value:  Size  Location     Type
 13836 ;;                  1    wreg      void 
 13837 ;; Registers used:
 13838 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13839 ;; Tracked objects:
 13840 ;;		On entry : 3F/0
 13841 ;;		On exit  : 0/0
 13842 ;;		Unchanged: 0/0
 13843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13845 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13847 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13848 ;;Total ram usage:        2 bytes
 13849 ;; Hardware stack levels used: 1
 13850 ;; Hardware stack levels required when called: 7
 13851 ;; This function calls:
 13852 ;;		_GetOpenOrder
 13853 ;;		_GetSecurityStateInClosing
 13854 ;;		_InitFullAutoTime
 13855 ;;		_InitWalkAutoTime
 13856 ;;		_OpenFullOrder
 13857 ;;		_OpenWalkOrder
 13858 ;;		_SetSegmentValueIntermitent
 13859 ;;		_StopOrder
 13860 ;;		___lmul
 13861 ;;		_setPositionInvertionInClosing
 13862 ;;		_sm_send_event
 13863 ;; This function is called by:
 13864 ;;		_sm_execute_ControlGate
 13865 ;; This function uses a non-reentrant model
 13866 ;;
 13867                           
 13868                           	psect	text36
 13869  003FF8                     __ptext36:
 13870                           	callstack 0
 13871  003FF8                     _actionZone_Closing:
 13872                           	callstack 22
 13873                           
 13874                           ; BSR set to: 0
 13875                           ;sm_ControlGate_MC50.c: 651:     TypeCMD typeOpenOrder = GetOpenOrder();
 13876                           
 13877                           ;incstack = 0
 13878  003FF8  ECCC  F028         	call	_GetOpenOrder	;wreg free
 13879  003FFC  6E33               	movwf	actionZone_Closing@typeOpenOrder^0,c
 13880                           
 13881                           ;sm_ControlGate_MC50.c: 653:     StateEnum securityClosing = GetSecurityStateInClosing()
      +                          ;
 13882  003FFE  EC78  F039         	call	_GetSecurityStateInClosing	;wreg free
 13883  004002  6E32               	movwf	actionZone_Closing@securityClosing^0,c
 13884                           
 13885                           ;sm_ControlGate_MC50.c: 654:     Abertura_pedonal = 0;
 13886  004004  0E00               	movlw	0
 13887  004006  0101               	movlb	1	; () banked
 13888  004008  6F8D               	movwf	_Abertura_pedonal& (0+255),b
 13889                           
 13890                           ; BSR set to: 1
 13891                           ;sm_ControlGate_MC50.c: 656:     InitFullAutoTime();
 13892  00400A  ECEE  F047         	call	_InitFullAutoTime	;wreg free
 13893                           
 13894                           ; BSR set to: 0
 13895                           ;sm_ControlGate_MC50.c: 658:     var_sys.passoAPassoAutoClose = NO;
 13896  00400E  0E00               	movlw	0
 13897  004010  0101               	movlb	1	; () banked
 13898  004012  6F50               	movwf	(_var_sys+80)& (0+255),b	;volatile
 13899                           
 13900                           ; BSR set to: 1
 13901                           ;sm_ControlGate_MC50.c: 660:     if (var_sys.NumberOffErrors > 3) {
 13902  004014  0E03               	movlw	3
 13903  004016  6543               	cpfsgt	(_var_sys+67)& (0+255),b	;volatile
 13904  004018  D00D               	goto	l21683
 13905                           
 13906                           ; BSR set to: 1
 13907                           ;sm_ControlGate_MC50.c: 662:         var_sys.StateMotor = Stopped;
 13908  00401A  0E00               	movlw	0
 13909  00401C  6F00               	movwf	_var_sys& (0+255),b	;volatile
 13910  00401E                     l21681:
 13911                           
 13912                           ; BSR set to: 1
 13913                           ;sm_ControlGate_MC50.c: 663:         sm_send_event(&controlGate_stateMachine, ev_ErrorGa
      +                          te);
 13914  00401E  0EE2               	movlw	low _controlGate_stateMachine
 13915  004020  6E12               	movwf	sm_send_event@psm^0,c
 13916  004022  0E01               	movlw	high _controlGate_stateMachine
 13917  004024  6E13               	movwf	(sm_send_event@psm+1)^0,c
 13918  004026  0E00               	movlw	0
 13919  004028  6E15               	movwf	(sm_send_event@event+1)^0,c
 13920  00402A  0E10               	movlw	16
 13921  00402C  6E14               	movwf	sm_send_event@event^0,c
 13922  00402E  EC29  F041         	call	_sm_send_event	;wreg free
 13923                           
 13924                           ;sm_ControlGate_MC50.c: 664:     } else if ((var_sys.FimCurso_CloseIsEnabled == YES)||(v
      +                          ar_sys.TimeMaxMotorIsON<=0) && (var_sys.LearningIsEnabled==NO) && (var_sys.PositionIsLos
      +                          t==NO)) {
 13925  004032  0012               	return	
 13926  004034                     l21683:
 13927                           
 13928                           ; BSR set to: 1
 13929  004034  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
 13930  004036  B4D8               	btfsc	status,2,c
 13931  004038  D00C               	goto	u25610
 13932                           
 13933                           ; BSR set to: 1
 13934  00403A  5118               	movf	(_var_sys+24)& (0+255),w,b	;volatile
 13935  00403C  1119               	iorwf	(_var_sys+25)& (0+255),w,b	;volatile
 13936  00403E  111A               	iorwf	(_var_sys+26)& (0+255),w,b	;volatile
 13937  004040  111B               	iorwf	(_var_sys+27)& (0+255),w,b	;volatile
 13938  004042  A4D8               	btfss	status,2,c
 13939  004044  D05F               	goto	l21715
 13940                           
 13941                           ; BSR set to: 1
 13942  004046  5126               	movf	(_var_sys+38)& (0+255),w,b	;volatile
 13943  004048  A4D8               	btfss	status,2,c
 13944  00404A  D05C               	goto	l21715
 13945                           
 13946                           ; BSR set to: 1
 13947  00404C  5148               	movf	(_var_sys+72)& (0+255),w,b	;volatile
 13948  00404E  A4D8               	btfss	status,2,c
 13949  004050  D059               	goto	l21715
 13950  004052                     u25610:
 13951                           
 13952                           ; BSR set to: 1
 13953                           ;sm_ControlGate_MC50.c: 666:         if (var_sys_NVM.flashLightMode == 2) {
 13954  004052  0E02               	movlw	2
 13955  004054  0100               	movlb	0	; () banked
 13956  004056  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 13957  004058  A4D8               	btfss	status,2,c
 13958  00405A  D018               	goto	l21695
 13959                           
 13960                           ; BSR set to: 0
 13961                           ;sm_ControlGate_MC50.c: 667:             ts_system.TimeOnFlashLigth = (long) ((long) var
      +                          _sys_NVM.ligthTime * ((1000/50)*60));
 13962  00405C  51AC               	movf	(_var_sys_NVM+20)& (0+255),w,b	;volatile
 13963  00405E  6E1D               	movwf	___lmul@multiplier^0,c
 13964  004060  6A1E               	clrf	(___lmul@multiplier+1)^0,c
 13965  004062  6A1F               	clrf	(___lmul@multiplier+2)^0,c
 13966  004064  6A20               	clrf	(___lmul@multiplier+3)^0,c
 13967  004066  0EB0               	movlw	176
 13968  004068  6E21               	movwf	___lmul@multiplicand^0,c
 13969  00406A  0E04               	movlw	4
 13970  00406C  6E22               	movwf	(___lmul@multiplicand+1)^0,c
 13971  00406E  0E00               	movlw	0
 13972  004070  6E23               	movwf	(___lmul@multiplicand+2)^0,c
 13973  004072  0E00               	movlw	0
 13974  004074  6E24               	movwf	(___lmul@multiplicand+3)^0,c
 13975  004076  EC37  F042         	call	___lmul	;wreg free
 13976  00407A  C01D  F1BA         	movff	?___lmul,_ts_system+32	;volatile
 13977  00407E  C01E  F1BB         	movff	?___lmul+1,_ts_system+33	;volatile
 13978  004082  C01F  F1BC         	movff	?___lmul+2,_ts_system+34	;volatile
 13979  004086  C020  F1BD         	movff	?___lmul+3,_ts_system+35	;volatile
 13980                           
 13981                           ;sm_ControlGate_MC50.c: 668:         }
 13982  00408A  D009               	goto	l2768
 13983  00408C                     l21695:
 13984                           
 13985                           ; BSR set to: 0
 13986                           ;sm_ControlGate_MC50.c: 670:             ts_system.TimeOnFlashLigth = 0;
 13987  00408C  0E00               	movlw	0
 13988  00408E  0101               	movlb	1	; () banked
 13989  004090  6FBA               	movwf	(_ts_system+32)& (0+255),b	;volatile
 13990  004092  0E00               	movlw	0
 13991  004094  6FBB               	movwf	(_ts_system+33)& (0+255),b	;volatile
 13992  004096  0E00               	movlw	0
 13993  004098  6FBC               	movwf	(_ts_system+34)& (0+255),b	;volatile
 13994  00409A  0E00               	movlw	0
 13995  00409C  6FBD               	movwf	(_ts_system+35)& (0+255),b	;volatile
 13996  00409E                     l2768:
 13997                           
 13998                           ;sm_ControlGate_MC50.c: 672:         var_sys.AutoInversionActiveStop = NO;
 13999  00409E  0E00               	movlw	0
 14000  0040A0  0101               	movlb	1	; () banked
 14001  0040A2  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 14002                           
 14003                           ;sm_ControlGate_MC50.c: 674:         var_sys.Statedoorcontrol = st_Closed;
 14004  0040A4  0E01               	movlw	1
 14005  0040A6  6F1C               	movwf	(_var_sys+28)& (0+255),b	;volatile
 14006                           
 14007                           ; BSR set to: 1
 14008                           ;sm_ControlGate_MC50.c: 675:         var_sys.actualCounterMoves++;
 14009  0040A8  0E01               	movlw	1
 14010  0040AA  273C               	addwf	(_var_sys+60)& (0+255),f,b	;volatile
 14011  0040AC  0E00               	movlw	0
 14012  0040AE  233D               	addwfc	(_var_sys+61)& (0+255),f,b	;volatile
 14013  0040B0  233E               	addwfc	(_var_sys+62)& (0+255),f,b	;volatile
 14014  0040B2  233F               	addwfc	(_var_sys+63)& (0+255),f,b	;volatile
 14015                           
 14016                           ; BSR set to: 1
 14017                           ;sm_ControlGate_MC50.c: 676:         var_sys.Timewalkisactived = 0;
 14018  0040B4  0E00               	movlw	0
 14019  0040B6  6F4A               	movwf	(_var_sys+74)& (0+255),b	;volatile
 14020                           
 14021                           ; BSR set to: 1
 14022                           ;sm_ControlGate_MC50.c: 677:         var_sys.PositionActual = 0;
 14023  0040B8  0E00               	movlw	0
 14024  0040BA  6F1E               	movwf	(_var_sys+30)& (0+255),b	;volatile
 14025  0040BC  0E00               	movlw	0
 14026  0040BE  6F1F               	movwf	(_var_sys+31)& (0+255),b	;volatile
 14027  0040C0  0E00               	movlw	0
 14028  0040C2  6F20               	movwf	(_var_sys+32)& (0+255),b	;volatile
 14029  0040C4  0E00               	movlw	0
 14030  0040C6  6F21               	movwf	(_var_sys+33)& (0+255),b	;volatile
 14031                           
 14032                           ; BSR set to: 1
 14033                           ;sm_ControlGate_MC50.c: 679:         var_sys.PositionIsLost = NO;
 14034  0040C8  0E00               	movlw	0
 14035  0040CA  6F48               	movwf	(_var_sys+72)& (0+255),b	;volatile
 14036                           
 14037                           ; BSR set to: 1
 14038                           ;sm_ControlGate_MC50.c: 680:         var_sys.NumberOffErrors = 0;
 14039  0040CC  0E00               	movlw	0
 14040  0040CE  6F43               	movwf	(_var_sys+67)& (0+255),b	;volatile
 14041                           
 14042                           ; BSR set to: 1
 14043                           ;sm_ControlGate_MC50.c: 681:         var_sys.StateMotor = Stopped;
 14044  0040D0  0E00               	movlw	0
 14045  0040D2  6F00               	movwf	_var_sys& (0+255),b	;volatile
 14046                           
 14047                           ; BSR set to: 1
 14048                           ;sm_ControlGate_MC50.c: 683:         ts_system.timeSinalizationDigit = (1000/50) * 2;
 14049  0040D4  0E00               	movlw	0
 14050  0040D6  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
 14051  0040D8  0E28               	movlw	40
 14052  0040DA  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
 14053                           
 14054                           ; BSR set to: 1
 14055                           ;sm_ControlGate_MC50.c: 684:         SetSegmentValueIntermitent(dF, dC, ( 200/50));
 14056  0040DC  0E0C               	movlw	12
 14057  0040DE  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 14058  0040E0  0E00               	movlw	0
 14059  0040E2  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 14060  0040E4  0E04               	movlw	4
 14061  0040E6  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 14062  0040E8  0E0F               	movlw	15
 14063  0040EA  ECA1  F045         	call	_SetSegmentValueIntermitent
 14064                           
 14065                           ; BSR set to: 1
 14066                           ;sm_ControlGate_MC50.c: 687:          sm_send_event(&controlGate_stateMachine, ev_Closed
      +                          Gate);
 14067  0040EE  0EE2               	movlw	low _controlGate_stateMachine
 14068  0040F0  6E12               	movwf	sm_send_event@psm^0,c
 14069  0040F2  0E01               	movlw	high _controlGate_stateMachine
 14070  0040F4  6E13               	movwf	(sm_send_event@psm+1)^0,c
 14071  0040F6  0E00               	movlw	0
 14072  0040F8  6E15               	movwf	(sm_send_event@event+1)^0,c
 14073  0040FA  0E0F               	movlw	15
 14074  0040FC  6E14               	movwf	sm_send_event@event^0,c
 14075  0040FE  EC29  F041         	call	_sm_send_event	;wreg free
 14076                           
 14077                           ;sm_ControlGate_MC50.c: 691:     }
 14078  004102  0012               	return	
 14079  004104                     l21715:
 14080                           
 14081                           ; BSR set to: 1
 14082  004104  0432               	decf	actionZone_Closing@securityClosing^0,w,c
 14083  004106  B4D8               	btfsc	status,2,c
 14084  004108  D011               	goto	u25660
 14085                           
 14086                           ; BSR set to: 1
 14087  00410A  BFC5               	btfsc	(_ts_system+43)& (0+255),7,b	;volatile
 14088  00410C  D021               	goto	l21735
 14089  00410E  51C5               	movf	(_ts_system+43)& (0+255),w,b	;volatile
 14090  004110  E103               	bnz	u25640
 14091  004112  05C4               	decf	(_ts_system+42)& (0+255),w,b	;volatile
 14092  004114  A0D8               	btfss	status,0,c
 14093  004116  D01C               	goto	l21735
 14094  004118                     u25640:
 14095                           
 14096                           ; BSR set to: 1
 14097  004118  0541               	decf	(_var_sys+65)& (0+255),w,b	;volatile
 14098  00411A  A4D8               	btfss	status,2,c
 14099  00411C  D019               	goto	l21735
 14100                           
 14101                           ; BSR set to: 1
 14102  00411E  BFCB               	btfsc	(_ts_system+49)& (0+255),7,b	;volatile
 14103  004120  D005               	goto	u25660
 14104  004122  51CB               	movf	(_ts_system+49)& (0+255),w,b	;volatile
 14105  004124  E115               	bnz	l21735
 14106  004126  05CA               	decf	(_ts_system+48)& (0+255),w,b	;volatile
 14107  004128  B0D8               	btfsc	status,0,c
 14108  00412A  D012               	goto	l21735
 14109  00412C                     u25660:
 14110                           
 14111                           ; BSR set to: 1
 14112  00412C  5127               	movf	(_var_sys+39)& (0+255),w,b	;volatile
 14113  00412E  A4D8               	btfss	status,2,c
 14114  004130  D00F               	goto	l21735
 14115                           
 14116                           ; BSR set to: 1
 14117                           ;sm_ControlGate_MC50.c: 694:          if (securityClosing != YES){
 14118  004132  0432               	decf	actionZone_Closing@securityClosing^0,w,c
 14119  004134  A4D8               	btfss	status,2,c
 14120                           
 14121                           ; BSR set to: 1
 14122                           ;sm_ControlGate_MC50.c: 695:             var_sys.NumberOffErrors++;
 14123  004136  2B43               	incf	(_var_sys+67)& (0+255),f,b	;volatile
 14124                           
 14125                           ; BSR set to: 1
 14126                           ;sm_ControlGate_MC50.c: 697:         var_sys.NumberOffErrors++;
 14127                           
 14128                           ;sm_ControlGate_MC50.c: 696:         }
 14129  004138  2B43               	incf	(_var_sys+67)& (0+255),f,b	;volatile
 14130                           
 14131                           ; BSR set to: 1
 14132                           ;sm_ControlGate_MC50.c: 698:         var_sys.AutoInversionActive = YES;
 14133  00413A  0E01               	movlw	1
 14134  00413C  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 14135                           
 14136                           ; BSR set to: 1
 14137                           ;sm_ControlGate_MC50.c: 699:         ts_system.TimeWaitToNextState = ( 500/50);
 14138  00413E  0E00               	movlw	0
 14139  004140  6FBF               	movwf	(_ts_system+37)& (0+255),b	;volatile
 14140  004142  0E0A               	movlw	10
 14141  004144  6FBE               	movwf	(_ts_system+36)& (0+255),b	;volatile
 14142                           
 14143                           ; BSR set to: 1
 14144                           ;sm_ControlGate_MC50.c: 700:         ts_system.TimeStopElectricBrake = ((1000/50)+( 500/
      +                          50));
 14145  004146  0E00               	movlw	0
 14146  004148  6FDB               	movwf	(_ts_system+65)& (0+255),b	;volatile
 14147  00414A  0E1E               	movlw	30
 14148  00414C  6FDA               	movwf	(_ts_system+64)& (0+255),b	;volatile
 14149                           
 14150                           ;sm_ControlGate_MC50.c: 702:     }
 14151  00414E  0012               	return	
 14152  004150                     l21735:
 14153                           
 14154                           ; BSR set to: 1
 14155  004150  BFC5               	btfsc	(_ts_system+43)& (0+255),7,b	;volatile
 14156  004152  D02E               	goto	l21765
 14157  004154  51C5               	movf	(_ts_system+43)& (0+255),w,b	;volatile
 14158  004156  E103               	bnz	u25690
 14159  004158  05C4               	decf	(_ts_system+42)& (0+255),w,b	;volatile
 14160  00415A  A0D8               	btfss	status,0,c
 14161  00415C  D029               	goto	l21765
 14162  00415E                     u25690:
 14163                           
 14164                           ; BSR set to: 1
 14165  00415E  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 14166  004160  A4D8               	btfss	status,2,c
 14167  004162  D026               	goto	l21765
 14168                           
 14169                           ; BSR set to: 1
 14170                           ;sm_ControlGate_MC50.c: 704:         if (var_sys.InvertionCurrentOpening == YES) {
 14171  004164  0545               	decf	(_var_sys+69)& (0+255),w,b	;volatile
 14172  004166  A4D8               	btfss	status,2,c
 14173  004168  D005               	goto	l21747
 14174  00416A                     u25710:
 14175                           
 14176                           ; BSR set to: 1
 14177                           ;sm_ControlGate_MC50.c: 706:             var_sys.StateMotor = Stopped;
 14178  00416A  0E00               	movlw	0
 14179  00416C  6F00               	movwf	_var_sys& (0+255),b	;volatile
 14180                           
 14181                           ; BSR set to: 1
 14182                           ;sm_ControlGate_MC50.c: 707:             setPositionInvertionInClosing();
 14183  00416E  ECC8  F031         	call	_setPositionInvertionInClosing	;wreg free
 14184  004172  D755               	goto	l21681
 14185  004174                     l21747:
 14186                           
 14187                           ; BSR set to: 1
 14188  004174  BFBF               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 14189  004176  D005               	goto	u25720
 14190  004178  51BF               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 14191  00417A  E117               	bnz	l21763
 14192  00417C  05BE               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 14193  00417E  B0D8               	btfsc	status,0,c
 14194  004180  D014               	goto	l21763
 14195  004182                     u25720:
 14196                           
 14197                           ; BSR set to: 1
 14198                           ;sm_ControlGate_MC50.c: 710:          if(var_sys.Timewalkisactived == YES){
 14199  004182  054A               	decf	(_var_sys+74)& (0+255),w,b	;volatile
 14200  004184  A4D8               	btfss	status,2,c
 14201  004186  D003               	goto	l21753
 14202                           
 14203                           ; BSR set to: 1
 14204                           ;sm_ControlGate_MC50.c: 711:                 OpenWalkOrder();
 14205  004188  ECBE  F03F         	call	_OpenWalkOrder	;wreg free
 14206                           
 14207                           ;sm_ControlGate_MC50.c: 713:             }
 14208  00418C  D004               	goto	l21757
 14209  00418E                     l21753:
 14210                           
 14211                           ; BSR set to: 1
 14212                           ;sm_ControlGate_MC50.c: 716:             OpenFullOrder();
 14213  00418E  ECFA  F046         	call	_OpenFullOrder	;wreg free
 14214                           
 14215                           ;sm_ControlGate_MC50.c: 718:             setPositionInvertionInClosing();
 14216  004192  ECC8  F031         	call	_setPositionInvertionInClosing	;wreg free
 14217  004196                     l21757:
 14218                           
 14219                           ;sm_ControlGate_MC50.c: 720:             var_sys.AutoInversionActive = NO;
 14220  004196  0E00               	movlw	0
 14221  004198  0101               	movlb	1	; () banked
 14222  00419A  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 14223                           
 14224                           ; BSR set to: 1
 14225                           ;sm_ControlGate_MC50.c: 721:             var_sys.InvertionCurrentClosing = YES;
 14226  00419C  0E01               	movlw	1
 14227  00419E  6F44               	movwf	(_var_sys+68)& (0+255),b	;volatile
 14228                           
 14229                           ; BSR set to: 1
 14230                           ;sm_ControlGate_MC50.c: 722:             ts_system.TimeInversionStart = (1000/50);
 14231  0041A0  0E00               	movlw	0
 14232  0041A2  6FCB               	movwf	(_ts_system+49)& (0+255),b	;volatile
 14233  0041A4  0E14               	movlw	20
 14234  0041A6  6FCA               	movwf	(_ts_system+48)& (0+255),b	;volatile
 14235                           
 14236                           ;sm_ControlGate_MC50.c: 726:         } else
 14237  0041A8  0012               	return	
 14238  0041AA                     l21763:
 14239                           
 14240                           ; BSR set to: 1
 14241                           ;sm_ControlGate_MC50.c: 727:         {;sm_ControlGate_MC50.c: 728:             var_sys.S
      +                          tateMotor = Stopped;
 14242  0041AA  0E00               	movlw	0
 14243  0041AC  6F00               	movwf	_var_sys& (0+255),b	;volatile
 14244  0041AE  0012               	return	
 14245  0041B0                     l21765:
 14246                           
 14247                           ; BSR set to: 1
 14248  0041B0  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 14249  0041B2  A4D8               	btfss	status,2,c
 14250  0041B4  D017               	goto	l21781
 14251                           
 14252                           ; BSR set to: 1
 14253                           ;sm_ControlGate_MC50.c: 732:                 var_sys.StateMotor = Stopped;
 14254  0041B6  0E00               	movlw	0
 14255  0041B8  6F00               	movwf	_var_sys& (0+255),b	;volatile
 14256                           
 14257                           ; BSR set to: 1
 14258                           ;sm_ControlGate_MC50.c: 737:         if (ts_system.TimeWaitToNextState <= 0) {
 14259  0041BA  BFBF               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 14260  0041BC  D005               	goto	u25750
 14261  0041BE  51BF               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 14262  0041C0  E160               	bnz	l2805
 14263  0041C2  05BE               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 14264  0041C4  B0D8               	btfsc	status,0,c
 14265  0041C6  0012               	return	
 14266  0041C8                     u25750:
 14267                           
 14268                           ; BSR set to: 1
 14269                           ;sm_ControlGate_MC50.c: 738:             if(var_sys.Timewalkisactived == YES){
 14270  0041C8  054A               	decf	(_var_sys+74)& (0+255),w,b	;volatile
 14271  0041CA  A4D8               	btfss	status,2,c
 14272  0041CC  D003               	goto	l21775
 14273                           
 14274                           ; BSR set to: 1
 14275                           ;sm_ControlGate_MC50.c: 739:                 OpenWalkOrder();
 14276  0041CE  ECBE  F03F         	call	_OpenWalkOrder	;wreg free
 14277                           
 14278                           ;sm_ControlGate_MC50.c: 741:             }
 14279  0041D2  D004               	goto	l21779
 14280  0041D4                     l21775:
 14281                           
 14282                           ; BSR set to: 1
 14283                           ;sm_ControlGate_MC50.c: 744:                  OpenFullOrder();
 14284  0041D4  ECFA  F046         	call	_OpenFullOrder	;wreg free
 14285                           
 14286                           ;sm_ControlGate_MC50.c: 746:             setPositionInvertionInClosing();
 14287  0041D8  ECC8  F031         	call	_setPositionInvertionInClosing	;wreg free
 14288  0041DC                     l21779:
 14289                           
 14290                           ;sm_ControlGate_MC50.c: 748:             var_sys.AutoInversionActive = NO;
 14291  0041DC  0E00               	movlw	0
 14292  0041DE  0101               	movlb	1	; () banked
 14293  0041E0  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 14294  0041E2  0012               	return	
 14295  0041E4                     l21781:
 14296                           
 14297                           ; BSR set to: 1
 14298  0041E4  5100               	movf	_var_sys& (0+255),w,b	;volatile
 14299  0041E6  A4D8               	btfss	status,2,c
 14300  0041E8  D00B               	goto	l21797
 14301                           
 14302                           ; BSR set to: 1
 14303                           ;sm_ControlGate_MC50.c: 755:         if(securityClosing != ST){
 14304  0041EA  0E02               	movlw	2
 14305  0041EC  1832               	xorwf	actionZone_Closing@securityClosing^0,w,c
 14306  0041EE  B4D8               	btfsc	status,2,c
 14307  0041F0  D002               	goto	l21793
 14308                           
 14309                           ; BSR set to: 1
 14310                           ;sm_ControlGate_MC50.c: 756:            var_sys.NumberOffErrors++;
 14311  0041F2  2B43               	incf	(_var_sys+67)& (0+255),f,b	;volatile
 14312  0041F4  D7BA               	goto	u25710
 14313  0041F6                     l21793:
 14314                           
 14315                           ; BSR set to: 1
 14316                           ;sm_ControlGate_MC50.c: 761:         {;sm_ControlGate_MC50.c: 762:             setPositi
      +                          onInvertionInClosing();
 14317  0041F6  ECC8  F031         	call	_setPositionInvertionInClosing	;wreg free
 14318  0041FA                     l21795:
 14319                           
 14320                           ;sm_ControlGate_MC50.c: 763:             StopOrder();
 14321  0041FA  EC9C  F047         	call	_StopOrder	;wreg free
 14322  0041FE  0012               	return	
 14323  004200                     l21797:
 14324                           
 14325                           ; BSR set to: 1
 14326  004200  BFCD               	btfsc	(_ts_system+51)& (0+255),7,b	;volatile
 14327  004202  D005               	goto	u25790
 14328  004204  51CD               	movf	(_ts_system+51)& (0+255),w,b	;volatile
 14329  004206  E10B               	bnz	l21807
 14330  004208  05CC               	decf	(_ts_system+50)& (0+255),w,b	;volatile
 14331  00420A  B0D8               	btfsc	status,0,c
 14332  00420C  D008               	goto	l21807
 14333  00420E                     u25790:
 14334                           
 14335                           ; BSR set to: 1
 14336  00420E  0546               	decf	(_var_sys+70)& (0+255),w,b	;volatile
 14337  004210  A4D8               	btfss	status,2,c
 14338  004212  D005               	goto	l21807
 14339                           
 14340                           ; BSR set to: 1
 14341                           ;sm_ControlGate_MC50.c: 768:         setPositionInvertionInClosing();
 14342  004214  ECC8  F031         	call	_setPositionInvertionInClosing	;wreg free
 14343                           
 14344                           ; BSR set to: 1
 14345                           ;sm_ControlGate_MC50.c: 769:         var_sys.InvertionClosingFromOpen = NO;
 14346  004218  0E00               	movlw	0
 14347  00421A  6F46               	movwf	(_var_sys+70)& (0+255),b	;volatile
 14348  00421C  D7EE               	goto	l21795
 14349  00421E                     l21807:
 14350                           
 14351                           ; BSR set to: 1
 14352  00421E  0100               	movlb	0	; () banked
 14353  004220  05A8               	decf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 14354  004222  B4D8               	btfsc	status,2,c
 14355  004224  D004               	goto	u25820
 14356                           
 14357                           ; BSR set to: 0
 14358  004226  0E02               	movlw	2
 14359  004228  19A8               	xorwf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 14360  00422A  A4D8               	btfss	status,2,c
 14361  00422C  D005               	goto	l21815
 14362  00422E                     u25820:
 14363                           
 14364                           ; BSR set to: 0
 14365                           ;sm_ControlGate_MC50.c: 773:         if (typeOpenOrder != TypeFullClose) {
 14366  00422E  0E04               	movlw	4
 14367  004230  1833               	xorwf	actionZone_Closing@typeOpenOrder^0,w,c
 14368  004232  B4D8               	btfsc	status,2,c
 14369  004234  0012               	return	
 14370  004236  D7E1               	goto	l21795
 14371  004238                     l21815:
 14372                           
 14373                           ; BSR set to: 0
 14374  004238  5033               	movf	actionZone_Closing@typeOpenOrder^0,w,c
 14375  00423A  B4D8               	btfsc	status,2,c
 14376  00423C  0012               	return	
 14377                           
 14378                           ; BSR set to: 0
 14379                           ;sm_ControlGate_MC50.c: 788:         if ( var_sys_NVM.operationMode == ModoPassoPasso )
 14380  00423E  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 14381  004240  A4D8               	btfss	status,2,c
 14382  004242  D013               	goto	l21831
 14383                           
 14384                           ; BSR set to: 0
 14385                           ;sm_ControlGate_MC50.c: 789:         {;sm_ControlGate_MC50.c: 790:             setPositi
      +                          onInvertionInClosing();
 14386  004244  ECC8  F031         	call	_setPositionInvertionInClosing	;wreg free
 14387                           
 14388                           ; BSR set to: 1
 14389                           ;sm_ControlGate_MC50.c: 791:             StopOrder();
 14390  004248  EC9C  F047         	call	_StopOrder	;wreg free
 14391                           
 14392                           ;sm_ControlGate_MC50.c: 793:             if (typeOpenOrder == TypeWalk && var_sys_NVM.op
      +                          erationMode != ModoCondominio)
 14393  00424C  0E02               	movlw	2
 14394  00424E  1833               	xorwf	actionZone_Closing@typeOpenOrder^0,w,c
 14395  004250  A4D8               	btfss	status,2,c
 14396  004252  0012               	return	
 14397  004254  0E02               	movlw	2
 14398  004256  0100               	movlb	0	; () banked
 14399  004258  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 14400  00425A  B4D8               	btfsc	status,2,c
 14401  00425C  0012               	return	
 14402                           
 14403                           ; BSR set to: 0
 14404                           ;sm_ControlGate_MC50.c: 794:             {;sm_ControlGate_MC50.c: 795:                 I
      +                          nitWalkAutoTime();
 14405  00425E  EC73  F048         	call	_InitWalkAutoTime	;wreg free
 14406                           
 14407                           ; BSR set to: 0
 14408                           ;sm_ControlGate_MC50.c: 796:                 var_sys.showAP = YES;
 14409  004262  0E01               	movlw	1
 14410  004264  0101               	movlb	1	; () banked
 14411  004266  6F4F               	movwf	(_var_sys+79)& (0+255),b	;volatile
 14412  004268  0012               	return	
 14413  00426A                     l21831:
 14414                           
 14415                           ; BSR set to: 0
 14416                           ;sm_ControlGate_MC50.c: 801:         {;sm_ControlGate_MC50.c: 802:             if (typeO
      +                          penOrder != TypeFullClose){
 14417  00426A  0E04               	movlw	4
 14418  00426C  1833               	xorwf	actionZone_Closing@typeOpenOrder^0,w,c
 14419  00426E  B4D8               	btfsc	status,2,c
 14420  004270  D7C4               	goto	l21795
 14421                           
 14422                           ; BSR set to: 0
 14423                           ;sm_ControlGate_MC50.c: 803:                 var_sys.AutoInversionActive = YES;
 14424  004272  0E01               	movlw	1
 14425  004274  0101               	movlb	1	; () banked
 14426  004276  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 14427                           
 14428                           ;sm_ControlGate_MC50.c: 804:                 ts_system.TimeWaitToNextState = ( 500/50);
 14429  004278  0E00               	movlw	0
 14430  00427A  6FBF               	movwf	(_ts_system+37)& (0+255),b	;volatile
 14431  00427C  0E0A               	movlw	10
 14432  00427E  6FBE               	movwf	(_ts_system+36)& (0+255),b	;volatile
 14433                           
 14434                           ;sm_ControlGate_MC50.c: 806:             }
 14435  004280  0012               	return	
 14436  004282                     l2805:
 14437  004282  0012               	return		;funcret
 14438  004284                     __end_of_actionZone_Closing:
 14439                           	callstack 0
 14440                           
 14441 ;; *************** function _setPositionInvertionInClosing *****************
 14442 ;; Defined at:
 14443 ;;		line 867 in file "sm_ControlGate_MC50.c"
 14444 ;; Parameters:    Size  Location     Type
 14445 ;;		None
 14446 ;; Auto vars:     Size  Location     Type
 14447 ;;		None
 14448 ;; Return value:  Size  Location     Type
 14449 ;;                  1    wreg      void 
 14450 ;; Registers used:
 14451 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14452 ;; Tracked objects:
 14453 ;;		On entry : 3E/1
 14454 ;;		On exit  : 3F/1
 14455 ;;		Unchanged: 0/0
 14456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14459 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14460 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14461 ;;Total ram usage:       12 bytes
 14462 ;; Hardware stack levels used: 1
 14463 ;; Hardware stack levels required when called: 6
 14464 ;; This function calls:
 14465 ;;		_getTimeDecelaration
 14466 ;; This function is called by:
 14467 ;;		_actionZone_Opening
 14468 ;;		_actionZone_Closing
 14469 ;; This function uses a non-reentrant model
 14470 ;;
 14471                           
 14472                           	psect	text37
 14473  006390                     __ptext37:
 14474                           	callstack 0
 14475  006390                     _setPositionInvertionInClosing:
 14476                           	callstack 22
 14477                           
 14478                           ;sm_ControlGate_MC50.c: 872:     if(var_sys_NVM.TypeofMotor != 2){
 14479                           
 14480                           ;incstack = 0
 14481  006390  0E02               	movlw	2
 14482  006392  0100               	movlb	0	; () banked
 14483  006394  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 14484  006396  B4D8               	btfsc	status,2,c
 14485  006398  D007               	goto	l20469
 14486                           
 14487                           ; BSR set to: 0
 14488                           ;sm_ControlGate_MC50.c: 874:        var_sys.PositionActual += ( 100/50);
 14489  00639A  0E02               	movlw	2
 14490  00639C  0101               	movlb	1	; () banked
 14491  00639E  271E               	addwf	(_var_sys+30)& (0+255),f,b	;volatile
 14492  0063A0  0E00               	movlw	0
 14493  0063A2  231F               	addwfc	(_var_sys+31)& (0+255),f,b	;volatile
 14494  0063A4  2320               	addwfc	(_var_sys+32)& (0+255),f,b	;volatile
 14495  0063A6  D008               	goto	L74
 14496  0063A8                     l20469:
 14497                           
 14498                           ; BSR set to: 0
 14499                           ;sm_ControlGate_MC50.c: 878:     {;sm_ControlGate_MC50.c: 879:        var_sys.PositionAc
      +                          tual -= ( 50/50);
 14500  0063A8  0EFF               	movlw	255
 14501  0063AA  0101               	movlb	1	; () banked
 14502  0063AC  271E               	addwf	(_var_sys+30)& (0+255),f,b	;volatile
 14503  0063AE  0EFF               	movlw	255
 14504  0063B0  231F               	addwfc	(_var_sys+31)& (0+255),f,b	;volatile
 14505  0063B2  0EFF               	movlw	255
 14506  0063B4  2320               	addwfc	(_var_sys+32)& (0+255),f,b	;volatile
 14507  0063B6  0EFF               	movlw	255
 14508  0063B8                     L74:
 14509  0063B8  2321               	addwfc	(_var_sys+33)& (0+255),f,b	;volatile
 14510                           
 14511                           ; BSR set to: 1
 14512                           ;sm_ControlGate_MC50.c: 882:     if (var_sys.PositionActual > getTimeDecelaration(InOpen
      +                          Full)&& var_sys_NVM.TypeofMotor != 2) {
 14513  0063BA  0E01               	movlw	1
 14514  0063BC  ECFB  F035         	call	_getTimeDecelaration
 14515  0063C0  0101               	movlb	1	; () banked
 14516  0063C2  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 14517  0063C4  5C29               	subwf	?_getTimeDecelaration^0,w,c
 14518  0063C6  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 14519  0063C8  582A               	subwfb	(?_getTimeDecelaration+1)^0,w,c
 14520  0063CA  5120               	movf	(_var_sys+32)& (0+255),w,b	;volatile
 14521  0063CC  582B               	subwfb	(?_getTimeDecelaration+2)^0,w,c
 14522  0063CE  502C               	movf	(?_getTimeDecelaration+3)^0,w,c
 14523  0063D0  0A80               	xorlw	128
 14524  0063D2  0100               	movlb	0	; () banked
 14525  0063D4  6FD8               	movwf	??_setPositionInvertionInClosing& (0+255),b
 14526  0063D6  0101               	movlb	1	; () banked
 14527  0063D8  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 14528  0063DA  0A80               	xorlw	128
 14529  0063DC  0100               	movlb	0	; () banked
 14530  0063DE  59D8               	subwfb	??_setPositionInvertionInClosing& (0+255),w,b
 14531  0063E0  B0D8               	btfsc	status,0,c
 14532  0063E2  D008               	goto	l20477
 14533                           
 14534                           ; BSR set to: 0
 14535  0063E4  0E02               	movlw	2
 14536  0063E6  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 14537  0063E8  B4D8               	btfsc	status,2,c
 14538  0063EA  D004               	goto	l20477
 14539                           
 14540                           ; BSR set to: 0
 14541                           ;sm_ControlGate_MC50.c: 883:         var_sys.PositionActual = getTimeDecelaration(InOpen
      +                          Full);
 14542  0063EC  0E01               	movlw	1
 14543  0063EE  ECFB  F035         	call	_getTimeDecelaration
 14544  0063F2  D01A               	goto	L75
 14545  0063F4                     l20477:
 14546                           
 14547                           ; BSR set to: 0
 14548  0063F4  0E03               	movlw	3
 14549  0063F6  ECFB  F035         	call	_getTimeDecelaration
 14550  0063FA  5029               	movf	?_getTimeDecelaration^0,w,c
 14551  0063FC  0101               	movlb	1	; () banked
 14552  0063FE  5D1E               	subwf	(_var_sys+30)& (0+255),w,b	;volatile
 14553  006400  502A               	movf	(?_getTimeDecelaration+1)^0,w,c
 14554  006402  591F               	subwfb	(_var_sys+31)& (0+255),w,b	;volatile
 14555  006404  502B               	movf	(?_getTimeDecelaration+2)^0,w,c
 14556  006406  5920               	subwfb	(_var_sys+32)& (0+255),w,b	;volatile
 14557  006408  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 14558  00640A  0A80               	xorlw	128
 14559  00640C  0100               	movlb	0	; () banked
 14560  00640E  6FD8               	movwf	??_setPositionInvertionInClosing& (0+255),b
 14561  006410  502C               	movf	(?_getTimeDecelaration+3)^0,w,c
 14562  006412  0A80               	xorlw	128
 14563  006414  59D8               	subwfb	??_setPositionInvertionInClosing& (0+255),w,b
 14564  006416  B0D8               	btfsc	status,0,c
 14565  006418  D00F               	goto	l20483
 14566                           
 14567                           ; BSR set to: 0
 14568  00641A  0E02               	movlw	2
 14569  00641C  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 14570  00641E  B4D8               	btfsc	status,2,c
 14571  006420  D00B               	goto	l20483
 14572                           
 14573                           ; BSR set to: 0
 14574                           ;sm_ControlGate_MC50.c: 887:         var_sys.PositionActual = getTimeDecelaration(InClos
      +                          e);
 14575  006422  0E03               	movlw	3
 14576  006424  ECFB  F035         	call	_getTimeDecelaration
 14577  006428                     L75:
 14578  006428  C029  F11E         	movff	?_getTimeDecelaration,_var_sys+30	;volatile
 14579  00642C  C02A  F11F         	movff	?_getTimeDecelaration+1,_var_sys+31	;volatile
 14580  006430  C02B  F120         	movff	?_getTimeDecelaration+2,_var_sys+32	;volatile
 14581  006434  C02C  F121         	movff	?_getTimeDecelaration+3,_var_sys+33	;volatile
 14582  006438                     l20483:
 14583                           
 14584                           ;sm_ControlGate_MC50.c: 890:     var_sys.TimeMaxMotorIsON = ((signed long)var_sys_NVM.le
      +                          arningTimeToOpen - var_sys.PositionActual) + (var_sys_NVM.decelarationOpen*( 500/50))+ (
      +                          1000/50)*10;
 14585  006438  0100               	movlb	0	; () banked
 14586  00643A  5198               	movf	_var_sys_NVM& (0+255),w,b	;volatile
 14587  00643C  0D0A               	mullw	10
 14588  00643E  CFF3 F0D8          	movff	prodl,??_setPositionInvertionInClosing
 14589  006442  CFF4 F0D9          	movff	prodh,??_setPositionInvertionInClosing+1
 14590  006446  0E00               	movlw	0
 14591  006448  BFD9               	btfsc	(??_setPositionInvertionInClosing+1)& (0+255),7,b
 14592  00644A  0EFF               	movlw	255
 14593  00644C  6FDA               	movwf	(??_setPositionInvertionInClosing+2)& (0+255),b
 14594  00644E  6FDB               	movwf	(??_setPositionInvertionInClosing+3)& (0+255),b
 14595  006450  0101               	movlb	1	; () banked
 14596  006452  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 14597  006454  0100               	movlb	0	; () banked
 14598  006456  5DD8               	subwf	??_setPositionInvertionInClosing& (0+255),w,b
 14599  006458  6FDC               	movwf	(??_setPositionInvertionInClosing+4)& (0+255),b
 14600  00645A  0101               	movlb	1	; () banked
 14601  00645C  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 14602  00645E  0100               	movlb	0	; () banked
 14603  006460  59D9               	subwfb	(??_setPositionInvertionInClosing+1)& (0+255),w,b
 14604  006462  6FDD               	movwf	(??_setPositionInvertionInClosing+5)& (0+255),b
 14605  006464  0101               	movlb	1	; () banked
 14606  006466  5120               	movf	(_var_sys+32)& (0+255),w,b	;volatile
 14607  006468  0100               	movlb	0	; () banked
 14608  00646A  59DA               	subwfb	(??_setPositionInvertionInClosing+2)& (0+255),w,b
 14609  00646C  6FDE               	movwf	(??_setPositionInvertionInClosing+6)& (0+255),b
 14610  00646E  0101               	movlb	1	; () banked
 14611  006470  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 14612  006472  0100               	movlb	0	; () banked
 14613  006474  59DB               	subwfb	(??_setPositionInvertionInClosing+3)& (0+255),w,b
 14614  006476  6FDF               	movwf	(??_setPositionInvertionInClosing+7)& (0+255),b
 14615  006478  51CC               	movf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 14616  00647A  25DC               	addwf	(??_setPositionInvertionInClosing+4)& (0+255),w,b
 14617  00647C  6FE0               	movwf	(??_setPositionInvertionInClosing+8)& (0+255),b
 14618  00647E  51CD               	movf	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 14619  006480  21DD               	addwfc	(??_setPositionInvertionInClosing+5)& (0+255),w,b
 14620  006482  6FE1               	movwf	(??_setPositionInvertionInClosing+9)& (0+255),b
 14621  006484  51CE               	movf	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 14622  006486  21DE               	addwfc	(??_setPositionInvertionInClosing+6)& (0+255),w,b
 14623  006488  6FE2               	movwf	(??_setPositionInvertionInClosing+10)& (0+255),b
 14624  00648A  51CF               	movf	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 14625  00648C  21DF               	addwfc	(??_setPositionInvertionInClosing+7)& (0+255),w,b
 14626  00648E  6FE3               	movwf	(??_setPositionInvertionInClosing+11)& (0+255),b
 14627  006490  0EC8               	movlw	200
 14628  006492  25E0               	addwf	(??_setPositionInvertionInClosing+8)& (0+255),w,b
 14629  006494  0101               	movlb	1	; () banked
 14630  006496  6F18               	movwf	(_var_sys+24)& (0+255),b	;volatile
 14631  006498  0E00               	movlw	0
 14632  00649A  0100               	movlb	0	; () banked
 14633  00649C  21E1               	addwfc	(??_setPositionInvertionInClosing+9)& (0+255),w,b
 14634  00649E  0101               	movlb	1	; () banked
 14635  0064A0  6F19               	movwf	(_var_sys+25)& (0+255),b	;volatile
 14636  0064A2  0E00               	movlw	0
 14637  0064A4  0100               	movlb	0	; () banked
 14638  0064A6  21E2               	addwfc	(??_setPositionInvertionInClosing+10)& (0+255),w,b
 14639  0064A8  0101               	movlb	1	; () banked
 14640  0064AA  6F1A               	movwf	(_var_sys+26)& (0+255),b	;volatile
 14641  0064AC  0E00               	movlw	0
 14642  0064AE  0100               	movlb	0	; () banked
 14643  0064B0  21E3               	addwfc	(??_setPositionInvertionInClosing+11)& (0+255),w,b
 14644  0064B2  0101               	movlb	1	; () banked
 14645  0064B4  6F1B               	movwf	(_var_sys+27)& (0+255),b	;volatile
 14646                           
 14647                           ; BSR set to: 1
 14648  0064B6  0012               	return		;funcret
 14649  0064B8                     __end_of_setPositionInvertionInClosing:
 14650                           	callstack 0
 14651                           
 14652 ;; *************** function _getTimeDecelaration *****************
 14653 ;; Defined at:
 14654 ;;		line 641 in file "outputs_MC50.c"
 14655 ;; Parameters:    Size  Location     Type
 14656 ;;  state           1    wreg     enum E10381
 14657 ;; Auto vars:     Size  Location     Type
 14658 ;;  state           1   48[COMRAM] enum E10381
 14659 ;; Return value:  Size  Location     Type
 14660 ;;                  4   40[COMRAM] long 
 14661 ;; Registers used:
 14662 ;;		wreg, status,2, status,0, cstack
 14663 ;; Tracked objects:
 14664 ;;		On entry : 3E/1
 14665 ;;		On exit  : 0/0
 14666 ;;		Unchanged: 0/0
 14667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14668 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14669 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14670 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14671 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14672 ;;Total ram usage:        9 bytes
 14673 ;; Hardware stack levels used: 1
 14674 ;; Hardware stack levels required when called: 5
 14675 ;; This function calls:
 14676 ;;		___lmul
 14677 ;; This function is called by:
 14678 ;;		_getStateOpenPosition
 14679 ;;		_controlVelocity
 14680 ;;		_setPositionInvertionInClosing
 14681 ;;		_setPositionInvertionInOpening
 14682 ;; This function uses a non-reentrant model
 14683 ;;
 14684                           
 14685                           	psect	text38
 14686  006BF6                     __ptext38:
 14687                           	callstack 0
 14688  006BF6                     _getTimeDecelaration:
 14689                           	callstack 22
 14690                           
 14691                           ; BSR set to: 1
 14692                           ;incstack = 0
 14693                           ;getTimeDecelaration@state stored from wreg
 14694  006BF6  6E31               	movwf	getTimeDecelaration@state^0,c
 14695                           
 14696                           ;outputs_MC50.c: 641: signed long getTimeDecelaration(stateMotor_enum state);outputs_MC5
      +                          0.c: 642: {;outputs_MC50.c: 644:     if(state==InClose)
 14697  006BF8  0E03               	movlw	3
 14698  006BFA  1831               	xorwf	getTimeDecelaration@state^0,w,c
 14699  006BFC  A4D8               	btfss	status,2,c
 14700  006BFE  D033               	goto	l19505
 14701                           
 14702                           ;outputs_MC50.c: 645:     {;outputs_MC50.c: 646:         if (var_sys_NVM.TypeofMotor != 
      +                          2)
 14703  006C00  0E02               	movlw	2
 14704  006C02  0100               	movlb	0	; () banked
 14705  006C04  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 14706  006C06  B4D8               	btfsc	status,2,c
 14707  006C08  D018               	goto	l19501
 14708                           
 14709                           ; BSR set to: 0
 14710                           ;outputs_MC50.c: 647:         {return (signed long)((signed long)var_sys_NVM.decelaratio
      +                          nClose*( 500/50));}
 14711  006C0A  5199               	movf	(_var_sys_NVM+1)& (0+255),w,b	;volatile
 14712  006C0C  6E1D               	movwf	___lmul@multiplier^0,c
 14713  006C0E  6A1E               	clrf	(___lmul@multiplier+1)^0,c
 14714  006C10  6A1F               	clrf	(___lmul@multiplier+2)^0,c
 14715  006C12  6A20               	clrf	(___lmul@multiplier+3)^0,c
 14716  006C14  0E0A               	movlw	10
 14717  006C16  6E21               	movwf	___lmul@multiplicand^0,c
 14718  006C18  0E00               	movlw	0
 14719  006C1A  6E22               	movwf	(___lmul@multiplicand+1)^0,c
 14720  006C1C  0E00               	movlw	0
 14721  006C1E  6E23               	movwf	(___lmul@multiplicand+2)^0,c
 14722  006C20  0E00               	movlw	0
 14723  006C22  6E24               	movwf	(___lmul@multiplicand+3)^0,c
 14724  006C24  EC37  F042         	call	___lmul	;wreg free
 14725  006C28  C01D  F029         	movff	?___lmul,?_getTimeDecelaration
 14726  006C2C  C01E  F02A         	movff	?___lmul+1,?_getTimeDecelaration+1
 14727  006C30  C01F  F02B         	movff	?___lmul+2,?_getTimeDecelaration+2
 14728  006C34  C020  F02C         	movff	?___lmul+3,?_getTimeDecelaration+3
 14729  006C38  0012               	return	
 14730  006C3A                     l19501:
 14731                           
 14732                           ; BSR set to: 0
 14733  006C3A  C099  F02D         	movff	_var_sys_NVM+1,??_getTimeDecelaration	;volatile
 14734  006C3E  6A2E               	clrf	(??_getTimeDecelaration+1)^0,c
 14735  006C40  6A2F               	clrf	(??_getTimeDecelaration+2)^0,c
 14736  006C42  6A30               	clrf	(??_getTimeDecelaration+3)^0,c
 14737  006C44  0E02               	movlw	2
 14738  006C46                     u22345:
 14739  006C46  90D8               	bcf	status,0,c
 14740  006C48  362D               	rlcf	??_getTimeDecelaration^0,f,c
 14741  006C4A  362E               	rlcf	(??_getTimeDecelaration+1)^0,f,c
 14742  006C4C  362F               	rlcf	(??_getTimeDecelaration+2)^0,f,c
 14743  006C4E  3630               	rlcf	(??_getTimeDecelaration+3)^0,f,c
 14744  006C50  2EE8               	decfsz	wreg,f,c
 14745  006C52  D7F9               	goto	u22345
 14746  006C54  C02D  F029         	movff	??_getTimeDecelaration,?_getTimeDecelaration
 14747  006C58  C02E  F02A         	movff	??_getTimeDecelaration+1,?_getTimeDecelaration+1
 14748  006C5C  C02F  F02B         	movff	??_getTimeDecelaration+2,?_getTimeDecelaration+2
 14749  006C60  C030  F02C         	movff	??_getTimeDecelaration+3,?_getTimeDecelaration+3
 14750  006C64  0012               	return	
 14751  006C66                     l19505:
 14752                           
 14753                           ;outputs_MC50.c: 651:     {;outputs_MC50.c: 652:         if (var_sys_NVM.TypeofMotor != 
      +                          2)
 14754  006C66  0E02               	movlw	2
 14755  006C68  0100               	movlb	0	; () banked
 14756  006C6A  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 14757  006C6C  B4D8               	btfsc	status,2,c
 14758  006C6E  D01D               	goto	l19513
 14759                           
 14760                           ; BSR set to: 0
 14761                           ;outputs_MC50.c: 653:         {return (signed long)((signed long)var_sys_NVM.learningTim
      +                          eToOpen-(((signed long)var_sys_NVM.decelarationOpen*( 500/50))));}
 14762  006C70  5198               	movf	_var_sys_NVM& (0+255),w,b	;volatile
 14763  006C72  6E1D               	movwf	___lmul@multiplier^0,c
 14764  006C74  6A1E               	clrf	(___lmul@multiplier+1)^0,c
 14765  006C76  6A1F               	clrf	(___lmul@multiplier+2)^0,c
 14766  006C78  6A20               	clrf	(___lmul@multiplier+3)^0,c
 14767  006C7A  0EF6               	movlw	246
 14768  006C7C  6E21               	movwf	___lmul@multiplicand^0,c
 14769  006C7E  0EFF               	movlw	255
 14770  006C80  6E22               	movwf	(___lmul@multiplicand+1)^0,c
 14771  006C82  0EFF               	movlw	255
 14772  006C84  6E23               	movwf	(___lmul@multiplicand+2)^0,c
 14773  006C86  0EFF               	movlw	255
 14774  006C88  6E24               	movwf	(___lmul@multiplicand+3)^0,c
 14775  006C8A  EC37  F042         	call	___lmul	;wreg free
 14776  006C8E  0100               	movlb	0	; () banked
 14777  006C90  51CC               	movf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 14778  006C92  241D               	addwf	?___lmul^0,w,c
 14779  006C94  6E29               	movwf	?_getTimeDecelaration^0,c
 14780  006C96  51CD               	movf	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 14781  006C98  201E               	addwfc	(?___lmul+1)^0,w,c
 14782  006C9A  6E2A               	movwf	(?_getTimeDecelaration+1)^0,c
 14783  006C9C  51CE               	movf	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 14784  006C9E  201F               	addwfc	(?___lmul+2)^0,w,c
 14785  006CA0  6E2B               	movwf	(?_getTimeDecelaration+2)^0,c
 14786  006CA2  51CF               	movf	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 14787  006CA4  2020               	addwfc	(?___lmul+3)^0,w,c
 14788  006CA6  6E2C               	movwf	(?_getTimeDecelaration+3)^0,c
 14789  006CA8  0012               	return	
 14790  006CAA                     l19513:
 14791                           
 14792                           ; BSR set to: 0
 14793  006CAA  C098  F02D         	movff	_var_sys_NVM,??_getTimeDecelaration	;volatile
 14794  006CAE  6A2E               	clrf	(??_getTimeDecelaration+1)^0,c
 14795  006CB0  6A2F               	clrf	(??_getTimeDecelaration+2)^0,c
 14796  006CB2  6A30               	clrf	(??_getTimeDecelaration+3)^0,c
 14797  006CB4  0E02               	movlw	2
 14798  006CB6                     u22365:
 14799  006CB6  90D8               	bcf	status,0,c
 14800  006CB8  362D               	rlcf	??_getTimeDecelaration^0,f,c
 14801  006CBA  362E               	rlcf	(??_getTimeDecelaration+1)^0,f,c
 14802  006CBC  362F               	rlcf	(??_getTimeDecelaration+2)^0,f,c
 14803  006CBE  3630               	rlcf	(??_getTimeDecelaration+3)^0,f,c
 14804  006CC0  2EE8               	decfsz	wreg,f,c
 14805  006CC2  D7F9               	goto	u22365
 14806  006CC4  502D               	movf	??_getTimeDecelaration^0,w,c
 14807  006CC6  5DCC               	subwf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 14808  006CC8  6E29               	movwf	?_getTimeDecelaration^0,c
 14809  006CCA  502E               	movf	(??_getTimeDecelaration+1)^0,w,c
 14810  006CCC  59CD               	subwfb	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 14811  006CCE  6E2A               	movwf	(?_getTimeDecelaration+1)^0,c
 14812  006CD0  502F               	movf	(??_getTimeDecelaration+2)^0,w,c
 14813  006CD2  59CE               	subwfb	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 14814  006CD4  6E2B               	movwf	(?_getTimeDecelaration+2)^0,c
 14815  006CD6  5030               	movf	(??_getTimeDecelaration+3)^0,w,c
 14816  006CD8  59CF               	subwfb	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 14817  006CDA  6E2C               	movwf	(?_getTimeDecelaration+3)^0,c
 14818  006CDC  0012               	return		;funcret
 14819  006CDE                     __end_of_getTimeDecelaration:
 14820                           	callstack 0
 14821                           
 14822 ;; *************** function ___lmul *****************
 14823 ;; Defined at:
 14824 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul32.c"
 14825 ;; Parameters:    Size  Location     Type
 14826 ;;  multiplier      4   28[COMRAM] unsigned long 
 14827 ;;  multiplicand    4   32[COMRAM] unsigned long 
 14828 ;; Auto vars:     Size  Location     Type
 14829 ;;  product         4   36[COMRAM] unsigned long 
 14830 ;; Return value:  Size  Location     Type
 14831 ;;                  4   28[COMRAM] unsigned long 
 14832 ;; Registers used:
 14833 ;;		wreg, status,2, status,0
 14834 ;; Tracked objects:
 14835 ;;		On entry : 0/1
 14836 ;;		On exit  : 0/0
 14837 ;;		Unchanged: 0/0
 14838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14839 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14840 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14842 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14843 ;;Total ram usage:       12 bytes
 14844 ;; Hardware stack levels used: 1
 14845 ;; Hardware stack levels required when called: 4
 14846 ;; This function calls:
 14847 ;;		Nothing
 14848 ;; This function is called by:
 14849 ;;		_getStateOpenPosition
 14850 ;;		_getTimeDecelaration
 14851 ;;		_actionZone_Closing
 14852 ;;		_sm_execute_menuConfiguration
 14853 ;; This function uses a non-reentrant model
 14854 ;;
 14855                           
 14856                           	psect	text39
 14857  00846E                     __ptext39:
 14858                           	callstack 0
 14859  00846E                     ___lmul:
 14860                           	callstack 24
 14861                           
 14862                           ;incstack = 0
 14863  00846E  0E00               	movlw	0
 14864  008470  6E25               	movwf	___lmul@product^0,c
 14865  008472  0E00               	movlw	0
 14866  008474  6E26               	movwf	(___lmul@product+1)^0,c
 14867  008476  0E00               	movlw	0
 14868  008478  6E27               	movwf	(___lmul@product+2)^0,c
 14869  00847A  0E00               	movlw	0
 14870  00847C  6E28               	movwf	(___lmul@product+3)^0,c
 14871  00847E                     l19391:
 14872  00847E  A01D               	btfss	___lmul@multiplier^0,0,c
 14873  008480  D008               	goto	l19395
 14874  008482  5021               	movf	___lmul@multiplicand^0,w,c
 14875  008484  2625               	addwf	___lmul@product^0,f,c
 14876  008486  5022               	movf	(___lmul@multiplicand+1)^0,w,c
 14877  008488  2226               	addwfc	(___lmul@product+1)^0,f,c
 14878  00848A  5023               	movf	(___lmul@multiplicand+2)^0,w,c
 14879  00848C  2227               	addwfc	(___lmul@product+2)^0,f,c
 14880  00848E  5024               	movf	(___lmul@multiplicand+3)^0,w,c
 14881  008490  2228               	addwfc	(___lmul@product+3)^0,f,c
 14882  008492                     l19395:
 14883  008492  90D8               	bcf	status,0,c
 14884  008494  3621               	rlcf	___lmul@multiplicand^0,f,c
 14885  008496  3622               	rlcf	(___lmul@multiplicand+1)^0,f,c
 14886  008498  3623               	rlcf	(___lmul@multiplicand+2)^0,f,c
 14887  00849A  3624               	rlcf	(___lmul@multiplicand+3)^0,f,c
 14888  00849C  90D8               	bcf	status,0,c
 14889  00849E  3220               	rrcf	(___lmul@multiplier+3)^0,f,c
 14890  0084A0  321F               	rrcf	(___lmul@multiplier+2)^0,f,c
 14891  0084A2  321E               	rrcf	(___lmul@multiplier+1)^0,f,c
 14892  0084A4  321D               	rrcf	___lmul@multiplier^0,f,c
 14893  0084A6  501D               	movf	___lmul@multiplier^0,w,c
 14894  0084A8  101E               	iorwf	(___lmul@multiplier+1)^0,w,c
 14895  0084AA  101F               	iorwf	(___lmul@multiplier+2)^0,w,c
 14896  0084AC  1020               	iorwf	(___lmul@multiplier+3)^0,w,c
 14897  0084AE  A4D8               	btfss	status,2,c
 14898  0084B0  D7E6               	goto	l19391
 14899  0084B2  C025  F01D         	movff	___lmul@product,?___lmul
 14900  0084B6  C026  F01E         	movff	___lmul@product+1,?___lmul+1
 14901  0084BA  C027  F01F         	movff	___lmul@product+2,?___lmul+2
 14902  0084BE  C028  F020         	movff	___lmul@product+3,?___lmul+3
 14903  0084C2  0012               	return		;funcret
 14904  0084C4                     __end_of___lmul:
 14905                           	callstack 0
 14906                           
 14907 ;; *************** function _StopOrder *****************
 14908 ;; Defined at:
 14909 ;;		line 96 in file "sm_ControlGate_MC50.c"
 14910 ;; Parameters:    Size  Location     Type
 14911 ;;		None
 14912 ;; Auto vars:     Size  Location     Type
 14913 ;;		None
 14914 ;; Return value:  Size  Location     Type
 14915 ;;                  1    wreg      void 
 14916 ;; Registers used:
 14917 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14918 ;; Tracked objects:
 14919 ;;		On entry : 3E/1
 14920 ;;		On exit  : 0/0
 14921 ;;		Unchanged: 0/0
 14922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14926 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14927 ;;Total ram usage:        0 bytes
 14928 ;; Hardware stack levels used: 1
 14929 ;; Hardware stack levels required when called: 6
 14930 ;; This function calls:
 14931 ;;		_sm_send_event
 14932 ;; This function is called by:
 14933 ;;		_actionZone_Opening
 14934 ;;		_actionZone_Closing
 14935 ;; This function uses a non-reentrant model
 14936 ;;
 14937                           
 14938                           	psect	text40
 14939  008F38                     __ptext40:
 14940                           	callstack 0
 14941  008F38                     _StopOrder:
 14942                           	callstack 22
 14943                           
 14944                           ;sm_ControlGate_MC50.c: 99:    var_sys.StateMotor = Stopped;
 14945                           
 14946                           ;incstack = 0
 14947  008F38  0E00               	movlw	0
 14948  008F3A  0101               	movlb	1	; () banked
 14949  008F3C  6F00               	movwf	_var_sys& (0+255),b	;volatile
 14950                           
 14951                           ; BSR set to: 1
 14952                           ;sm_ControlGate_MC50.c: 100:    sm_send_event(&controlGate_stateMachine, ev_StopGate);
 14953  008F3E  0EE2               	movlw	low _controlGate_stateMachine
 14954  008F40  6E12               	movwf	sm_send_event@psm^0,c
 14955  008F42  0E01               	movlw	high _controlGate_stateMachine
 14956  008F44  6E13               	movwf	(sm_send_event@psm+1)^0,c
 14957  008F46  0E00               	movlw	0
 14958  008F48  6E15               	movwf	(sm_send_event@event+1)^0,c
 14959  008F4A  0E0D               	movlw	13
 14960  008F4C  6E14               	movwf	sm_send_event@event^0,c
 14961  008F4E  EC29  F041         	call	_sm_send_event	;wreg free
 14962  008F52  0012               	return		;funcret
 14963  008F54                     __end_of_StopOrder:
 14964                           	callstack 0
 14965                           
 14966 ;; *************** function _GetSecurityStateInClosing *****************
 14967 ;; Defined at:
 14968 ;;		line 776 in file "inputs_MC50.c"
 14969 ;; Parameters:    Size  Location     Type
 14970 ;;		None
 14971 ;; Auto vars:     Size  Location     Type
 14972 ;;		None
 14973 ;; Return value:  Size  Location     Type
 14974 ;;                  1    wreg      enum E10564
 14975 ;; Registers used:
 14976 ;;		wreg, status,2, status,0, cstack
 14977 ;; Tracked objects:
 14978 ;;		On entry : 0/0
 14979 ;;		On exit  : 3E/0
 14980 ;;		Unchanged: 0/0
 14981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14985 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14986 ;;Total ram usage:        0 bytes
 14987 ;; Hardware stack levels used: 1
 14988 ;; Hardware stack levels required when called: 5
 14989 ;; This function calls:
 14990 ;;		_SetSegmentValueIntermitent
 14991 ;; This function is called by:
 14992 ;;		_actionZone_Opening
 14993 ;;		_actionZone_Opened
 14994 ;;		_actionZone_Closing
 14995 ;; This function uses a non-reentrant model
 14996 ;;
 14997                           
 14998                           	psect	text41
 14999  0072F0                     __ptext41:
 15000                           	callstack 0
 15001  0072F0                     _GetSecurityStateInClosing:
 15002                           	callstack 23
 15003                           
 15004                           ;inputs_MC50.c: 786:      if((var_sys_NVM.securityBandIsON == 1) && (var_sys.SecurityBar
      +                          IsObstructed == YES)&&(var_sys_NVM.securityBandInOpen == 0)&& (var_sys_NVM.Stopboton == 
      +                          0))
 15005                           
 15006                           ;incstack = 0
 15007  0072F0  0100               	movlb	0	; () banked
 15008  0072F2  05A1               	decf	(_var_sys_NVM+9)& (0+255),w,b	;volatile
 15009  0072F4  A4D8               	btfss	status,2,c
 15010  0072F6  D01B               	goto	l20149
 15011                           
 15012                           ; BSR set to: 0
 15013  0072F8  0101               	movlb	1	; () banked
 15014  0072FA  0502               	decf	(_var_sys+2)& (0+255),w,b	;volatile
 15015  0072FC  A4D8               	btfss	status,2,c
 15016  0072FE  D017               	goto	l20149
 15017                           
 15018                           ; BSR set to: 1
 15019  007300  0100               	movlb	0	; () banked
 15020  007302  51A3               	movf	(_var_sys_NVM+11)& (0+255),w,b	;volatile
 15021  007304  A4D8               	btfss	status,2,c
 15022  007306  D013               	goto	l20149
 15023                           
 15024                           ; BSR set to: 0
 15025  007308  51AE               	movf	(_var_sys_NVM+22)& (0+255),w,b	;volatile
 15026  00730A  A4D8               	btfss	status,2,c
 15027  00730C  D010               	goto	l20149
 15028                           
 15029                           ; BSR set to: 0
 15030                           ;inputs_MC50.c: 787:     {;inputs_MC50.c: 790:         ts_system.timeSinalizationDigit=(
      +                           200/50);
 15031  00730E  0E00               	movlw	0
 15032  007310  0101               	movlb	1	; () banked
 15033  007312  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
 15034  007314  0E04               	movlw	4
 15035  007316  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
 15036                           
 15037                           ; BSR set to: 1
 15038                           ;inputs_MC50.c: 791:         SetSegmentValueIntermitent(dL,dA,(1000/50));
 15039  007318  0E0A               	movlw	10
 15040  00731A  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 15041  00731C  0E00               	movlw	0
 15042  00731E  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 15043  007320  0E14               	movlw	20
 15044  007322  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 15045  007324  0E12               	movlw	18
 15046  007326  ECA1  F045         	call	_SetSegmentValueIntermitent
 15047  00732A                     l20143:
 15048                           
 15049                           ; BSR set to: 1
 15050                           ;inputs_MC50.c: 792:         return YES;
 15051  00732A  0E01               	movlw	1
 15052  00732C  0012               	return	
 15053  00732E                     l20149:
 15054  00732E  0100               	movlb	0	; () banked
 15055  007330  05AE               	decf	(_var_sys_NVM+22)& (0+255),w,b	;volatile
 15056  007332  A4D8               	btfss	status,2,c
 15057  007334  D013               	goto	l20163
 15058                           
 15059                           ; BSR set to: 0
 15060  007336  0101               	movlb	1	; () banked
 15061  007338  0502               	decf	(_var_sys+2)& (0+255),w,b	;volatile
 15062  00733A  A4D8               	btfss	status,2,c
 15063  00733C  D00F               	goto	l20163
 15064                           
 15065                           ; BSR set to: 1
 15066                           ;inputs_MC50.c: 795:     {;inputs_MC50.c: 797:         ts_system.timeSinalizationDigit=(
      +                           200/50);
 15067  00733E  0E00               	movlw	0
 15068  007340  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
 15069  007342  0E04               	movlw	4
 15070  007344  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
 15071                           
 15072                           ; BSR set to: 1
 15073                           ;inputs_MC50.c: 798:         SetSegmentValueIntermitent(d5,dt,(1000/50));
 15074  007346  0E15               	movlw	21
 15075  007348  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 15076  00734A  0E00               	movlw	0
 15077  00734C  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 15078  00734E  0E14               	movlw	20
 15079  007350  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 15080  007352  0E05               	movlw	5
 15081  007354  ECA1  F045         	call	_SetSegmentValueIntermitent
 15082                           
 15083                           ; BSR set to: 1
 15084                           ;inputs_MC50.c: 799:         return ST;
 15085  007358  0E02               	movlw	2
 15086  00735A  0012               	return	
 15087  00735C                     l20163:
 15088  00735C  0100               	movlb	0	; () banked
 15089  00735E  059F               	decf	(_var_sys_NVM+7)& (0+255),w,b	;volatile
 15090  007360  A4D8               	btfss	status,2,c
 15091  007362  D017               	goto	l20179
 15092                           
 15093                           ; BSR set to: 0
 15094  007364  0101               	movlb	1	; () banked
 15095  007366  0501               	decf	(_var_sys+1)& (0+255),w,b	;volatile
 15096  007368  A4D8               	btfss	status,2,c
 15097  00736A  D013               	goto	l20179
 15098                           
 15099                           ; BSR set to: 1
 15100  00736C  0100               	movlb	0	; () banked
 15101  00736E  51A0               	movf	(_var_sys_NVM+8)& (0+255),w,b	;volatile
 15102  007370  A4D8               	btfss	status,2,c
 15103  007372  D00F               	goto	l20179
 15104                           
 15105                           ; BSR set to: 0
 15106                           ;inputs_MC50.c: 803:     {;inputs_MC50.c: 805:         ts_system.timeSinalizationDigit=(
      +                           200/50);
 15107  007374  0E00               	movlw	0
 15108  007376  0101               	movlb	1	; () banked
 15109  007378  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
 15110  00737A  0E04               	movlw	4
 15111  00737C  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
 15112                           
 15113                           ; BSR set to: 1
 15114                           ;inputs_MC50.c: 806:         SetSegmentValueIntermitent(dL,dE,(1000/50));
 15115  00737E  0E0E               	movlw	14
 15116  007380  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 15117  007382  0E00               	movlw	0
 15118  007384  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 15119  007386  0E14               	movlw	20
 15120  007388  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 15121  00738A  0E12               	movlw	18
 15122  00738C  ECA1  F045         	call	_SetSegmentValueIntermitent
 15123  007390  D7CC               	goto	l20143
 15124  007392                     l20179:
 15125                           
 15126                           ;inputs_MC50.c: 811:     {;inputs_MC50.c: 812:         return NO;
 15127  007392  0E00               	movlw	0
 15128  007394  0012               	return		;funcret
 15129  007396                     __end_of_GetSecurityStateInClosing:
 15130                           	callstack 0
 15131                           
 15132 ;; *************** function _actionZone_Closed *****************
 15133 ;; Defined at:
 15134 ;;		line 327 in file "sm_ControlGate_MC50.c"
 15135 ;; Parameters:    Size  Location     Type
 15136 ;;		None
 15137 ;; Auto vars:     Size  Location     Type
 15138 ;;  typeOpenOrde    1   32[COMRAM] enum E10372
 15139 ;;  securityOpen    1   31[COMRAM] enum E10397
 15140 ;; Return value:  Size  Location     Type
 15141 ;;                  1    wreg      void 
 15142 ;; Registers used:
 15143 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15144 ;; Tracked objects:
 15145 ;;		On entry : 3F/0
 15146 ;;		On exit  : 0/0
 15147 ;;		Unchanged: 0/0
 15148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15150 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15152 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15153 ;;Total ram usage:        2 bytes
 15154 ;; Hardware stack levels used: 1
 15155 ;; Hardware stack levels required when called: 8
 15156 ;; This function calls:
 15157 ;;		_GetOpenOrder
 15158 ;;		_GetSecurityStateInOpening
 15159 ;;		_InitFullAutoTime
 15160 ;;		_InitWalkAutoTime
 15161 ;;		_OpenFullOrder
 15162 ;;		_OpenWalkOrder
 15163 ;;		_WaitPreFlash
 15164 ;;		_sm_send_event
 15165 ;; This function is called by:
 15166 ;;		_sm_execute_ControlGate
 15167 ;; This function uses a non-reentrant model
 15168 ;;
 15169                           
 15170                           	psect	text42
 15171  007246                     __ptext42:
 15172                           	callstack 0
 15173  007246                     _actionZone_Closed:
 15174                           	callstack 21
 15175                           
 15176                           ; BSR set to: 0
 15177                           ;sm_ControlGate_MC50.c: 331:     if (main_stateMachine.current_state != st_MenuConfigura
      +                          tion) {
 15178                           
 15179                           ;incstack = 0
 15180  007246  0101               	movlb	1	; () banked
 15181  007248  05ED               	decf	_main_stateMachine& (0+255),w,b
 15182  00724A  11EE               	iorwf	(_main_stateMachine+1)& (0+255),w,b
 15183  00724C  B4D8               	btfsc	status,2,c
 15184  00724E  0012               	return	
 15185                           
 15186                           ; BSR set to: 1
 15187                           ;sm_ControlGate_MC50.c: 334:         TypeCMD typeOpenOrder = GetOpenOrder();
 15188  007250  ECCC  F028         	call	_GetOpenOrder	;wreg free
 15189  007254  6E21               	movwf	actionZone_Closed@typeOpenOrder^0,c
 15190                           
 15191                           ;sm_ControlGate_MC50.c: 336:         StateEnum securityOpening = GetSecurityStateInOpeni
      +                          ng();
 15192  007256  ECCB  F039         	call	_GetSecurityStateInOpening	;wreg free
 15193  00725A  6E20               	movwf	actionZone_Closed@securityOpening^0,c
 15194                           
 15195                           ;sm_ControlGate_MC50.c: 338:         if (var_sys_NVM.homemPresente == 1) {
 15196  00725C  0100               	movlb	0	; () banked
 15197  00725E  05A8               	decf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 15198  007260  A4D8               	btfss	status,2,c
 15199  007262  D018               	goto	l21323
 15200                           
 15201                           ; BSR set to: 0
 15202                           ;sm_ControlGate_MC50.c: 344:             if (typeOpenOrder == TypeFullOpen && var_sys.Fi
      +                          mCurso_OpenIsEnabled == NO && securityOpening == NO) {
 15203  007264  0E03               	movlw	3
 15204  007266  1821               	xorwf	actionZone_Closed@typeOpenOrder^0,w,c
 15205  007268  A4D8               	btfss	status,2,c
 15206  00726A  0012               	return	
 15207                           
 15208                           ; BSR set to: 0
 15209  00726C  0101               	movlb	1	; () banked
 15210  00726E  5104               	movf	(_var_sys+4)& (0+255),w,b	;volatile
 15211  007270  A4D8               	btfss	status,2,c
 15212  007272  0012               	return	
 15213                           
 15214                           ; BSR set to: 1
 15215  007274  5020               	movf	actionZone_Closed@securityOpening^0,w,c
 15216  007276  A4D8               	btfss	status,2,c
 15217  007278  0012               	return	
 15218                           
 15219                           ; BSR set to: 1
 15220                           ;sm_ControlGate_MC50.c: 346:                 OpenFullOrder();
 15221  00727A  ECFA  F046         	call	_OpenFullOrder	;wreg free
 15222  00727E                     l21321:
 15223                           
 15224                           ;sm_ControlGate_MC50.c: 347:                 sm_send_event(&main_stateMachine, ev_MotorI
      +                          sOpen);
 15225  00727E  0EED               	movlw	low _main_stateMachine
 15226  007280  6E12               	movwf	sm_send_event@psm^0,c
 15227  007282  0E01               	movlw	high _main_stateMachine
 15228  007284  6E13               	movwf	(sm_send_event@psm+1)^0,c
 15229  007286  0E00               	movlw	0
 15230  007288  6E15               	movwf	(sm_send_event@event+1)^0,c
 15231  00728A  0E11               	movlw	17
 15232  00728C  6E14               	movwf	sm_send_event@event^0,c
 15233  00728E  EC29  F041         	call	_sm_send_event	;wreg free
 15234  007292  0012               	return	
 15235  007294                     l21323:
 15236                           
 15237                           ; BSR set to: 0
 15238  007294  0421               	decf	actionZone_Closed@typeOpenOrder^0,w,c
 15239  007296  B4D8               	btfsc	status,2,c
 15240  007298  D004               	goto	u24750
 15241                           
 15242                           ; BSR set to: 0
 15243  00729A  0E03               	movlw	3
 15244  00729C  1821               	xorwf	actionZone_Closed@typeOpenOrder^0,w,c
 15245  00729E  A4D8               	btfss	status,2,c
 15246  0072A0  D017               	goto	l21343
 15247  0072A2                     u24750:
 15248                           
 15249                           ; BSR set to: 0
 15250  0072A2  5020               	movf	actionZone_Closed@securityOpening^0,w,c
 15251  0072A4  A4D8               	btfss	status,2,c
 15252  0072A6  D014               	goto	l21343
 15253                           
 15254                           ; BSR set to: 0
 15255  0072A8  0101               	movlb	1	; () banked
 15256  0072AA  511D               	movf	(_var_sys+29)& (0+255),w,b	;volatile
 15257  0072AC  A4D8               	btfss	status,2,c
 15258  0072AE  D010               	goto	l21343
 15259                           
 15260                           ; BSR set to: 1
 15261                           ;sm_ControlGate_MC50.c: 353:             if (var_sys_NVM.flashRGBMode == rgb_pre){
 15262  0072B0  0E02               	movlw	2
 15263  0072B2  0100               	movlb	0	; () banked
 15264  0072B4  19B1               	xorwf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 15265  0072B6  A4D8               	btfss	status,2,c
 15266  0072B8  D006               	goto	l21337
 15267                           
 15268                           ; BSR set to: 0
 15269                           ;sm_ControlGate_MC50.c: 354:                 var_sys.preflashingcontrol = YES;
 15270  0072BA  0E01               	movlw	1
 15271  0072BC  0101               	movlb	1	; () banked
 15272  0072BE  6F1D               	movwf	(_var_sys+29)& (0+255),b	;volatile
 15273                           
 15274                           ; BSR set to: 1
 15275                           ;sm_ControlGate_MC50.c: 355:                 WaitPreFlash();
 15276  0072C0  EC86  F03F         	call	_WaitPreFlash	;wreg free
 15277                           
 15278                           ;sm_ControlGate_MC50.c: 356:             }
 15279  0072C4  0012               	return	
 15280  0072C6                     l21337:
 15281                           
 15282                           ; BSR set to: 0
 15283                           ;sm_ControlGate_MC50.c: 358:                 OpenFullOrder();
 15284  0072C6  ECFA  F046         	call	_OpenFullOrder	;wreg free
 15285                           
 15286                           ;sm_ControlGate_MC50.c: 359:                InitFullAutoTime();
 15287  0072CA  ECEE  F047         	call	_InitFullAutoTime	;wreg free
 15288  0072CE  D7D7               	goto	l21321
 15289  0072D0                     l21343:
 15290  0072D0  0E02               	movlw	2
 15291  0072D2  1821               	xorwf	actionZone_Closed@typeOpenOrder^0,w,c
 15292  0072D4  A4D8               	btfss	status,2,c
 15293  0072D6  0012               	return	
 15294  0072D8  5020               	movf	actionZone_Closed@securityOpening^0,w,c
 15295  0072DA  A4D8               	btfss	status,2,c
 15296  0072DC  0012               	return	
 15297  0072DE  0100               	movlb	0	; () banked
 15298  0072E0  519C               	movf	(_var_sys_NVM+4)& (0+255),w,b	;volatile
 15299  0072E2  B4D8               	btfsc	status,2,c
 15300  0072E4  0012               	return	
 15301                           
 15302                           ; BSR set to: 0
 15303                           ;sm_ControlGate_MC50.c: 367:             OpenWalkOrder();
 15304  0072E6  ECBE  F03F         	call	_OpenWalkOrder	;wreg free
 15305                           
 15306                           ;sm_ControlGate_MC50.c: 368:             InitWalkAutoTime();
 15307  0072EA  EC73  F048         	call	_InitWalkAutoTime	;wreg free
 15308  0072EE  D7C7               	goto	l21321
 15309  0072F0                     __end_of_actionZone_Closed:
 15310                           	callstack 0
 15311                           
 15312 ;; *************** function _WaitPreFlash *****************
 15313 ;; Defined at:
 15314 ;;		line 41 in file "sm_ControlGate_MC50.c"
 15315 ;; Parameters:    Size  Location     Type
 15316 ;;		None
 15317 ;; Auto vars:     Size  Location     Type
 15318 ;;		None
 15319 ;; Return value:  Size  Location     Type
 15320 ;;                  1    wreg      void 
 15321 ;; Registers used:
 15322 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15323 ;; Tracked objects:
 15324 ;;		On entry : 3F/1
 15325 ;;		On exit  : 3F/1
 15326 ;;		Unchanged: 0/0
 15327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15331 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15332 ;;Total ram usage:        0 bytes
 15333 ;; Hardware stack levels used: 1
 15334 ;; Hardware stack levels required when called: 7
 15335 ;; This function calls:
 15336 ;;		_InitFullAutoTime
 15337 ;;		_OpenFullOrder
 15338 ;;		_sm_send_event
 15339 ;; This function is called by:
 15340 ;;		_sm_execute_ControlGate
 15341 ;;		_actionZone_Closed
 15342 ;; This function uses a non-reentrant model
 15343 ;;
 15344                           
 15345                           	psect	text43
 15346  007F0C                     __ptext43:
 15347                           	callstack 0
 15348  007F0C                     _WaitPreFlash:
 15349                           	callstack 21
 15350                           
 15351                           ; BSR set to: 1
 15352                           ;sm_ControlGate_MC50.c: 44:     if ((var_sys_NVM.flashRGBMode == rgb_pre) && (var_sys.pr
      +                          eflashingcontrol == YES) && (ts_system.timewaitFlashRGB <=0) && (aux_i == 0))
 15353                           
 15354                           ;incstack = 0
 15355  007F0C  0E02               	movlw	2
 15356  007F0E  0100               	movlb	0	; () banked
 15357  007F10  19B1               	xorwf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 15358  007F12  A4D8               	btfss	status,2,c
 15359  007F14  D014               	goto	l20389
 15360                           
 15361                           ; BSR set to: 0
 15362  007F16  0101               	movlb	1	; () banked
 15363  007F18  051D               	decf	(_var_sys+29)& (0+255),w,b	;volatile
 15364  007F1A  A4D8               	btfss	status,2,c
 15365  007F1C  D010               	goto	l20389
 15366                           
 15367                           ; BSR set to: 1
 15368  007F1E  BFE1               	btfsc	(_ts_system+71)& (0+255),7,b	;volatile
 15369  007F20  D005               	goto	u23690
 15370  007F22  51E1               	movf	(_ts_system+71)& (0+255),w,b	;volatile
 15371  007F24  E10C               	bnz	l20389
 15372  007F26  05E0               	decf	(_ts_system+70)& (0+255),w,b	;volatile
 15373  007F28  B0D8               	btfsc	status,0,c
 15374  007F2A  D009               	goto	l20389
 15375  007F2C                     u23690:
 15376                           
 15377                           ; BSR set to: 1
 15378  007F2C  518C               	movf	_aux_i& (0+255),w,b
 15379  007F2E  A4D8               	btfss	status,2,c
 15380  007F30  D006               	goto	l20389
 15381                           
 15382                           ; BSR set to: 1
 15383                           ;sm_ControlGate_MC50.c: 45:         {;sm_ControlGate_MC50.c: 46:             ts_system.t
      +                          imewaitFlashRGB = (1000/50) *3;
 15384  007F32  0E00               	movlw	0
 15385  007F34  6FE1               	movwf	(_ts_system+71)& (0+255),b	;volatile
 15386  007F36  0E3C               	movlw	60
 15387  007F38  6FE0               	movwf	(_ts_system+70)& (0+255),b	;volatile
 15388                           
 15389                           ;sm_ControlGate_MC50.c: 47:             aux_i=1;
 15390  007F3A  0E01               	movlw	1
 15391  007F3C  6F8C               	movwf	_aux_i& (0+255),b
 15392  007F3E                     l20389:
 15393                           
 15394                           ;sm_ControlGate_MC50.c: 50:     if ((ts_system.timewaitFlashRGB <= 0) && (aux_i==1 ))
 15395  007F3E  0101               	movlb	1	; () banked
 15396  007F40  BFE1               	btfsc	(_ts_system+71)& (0+255),7,b	;volatile
 15397  007F42  D005               	goto	u23710
 15398  007F44  51E1               	movf	(_ts_system+71)& (0+255),w,b	;volatile
 15399  007F46  E119               	bnz	l2580
 15400  007F48  05E0               	decf	(_ts_system+70)& (0+255),w,b	;volatile
 15401  007F4A  B0D8               	btfsc	status,0,c
 15402  007F4C  0012               	return	
 15403  007F4E                     u23710:
 15404                           
 15405                           ; BSR set to: 1
 15406  007F4E  058C               	decf	_aux_i& (0+255),w,b
 15407  007F50  A4D8               	btfss	status,2,c
 15408  007F52  0012               	return	
 15409                           
 15410                           ; BSR set to: 1
 15411                           ;sm_ControlGate_MC50.c: 51:         {;sm_ControlGate_MC50.c: 54:                 var_sys
      +                          .preflashingcontrol = NO;
 15412  007F54  0E00               	movlw	0
 15413  007F56  6F1D               	movwf	(_var_sys+29)& (0+255),b	;volatile
 15414                           
 15415                           ; BSR set to: 1
 15416                           ;sm_ControlGate_MC50.c: 55:                 OpenFullOrder();
 15417  007F58  ECFA  F046         	call	_OpenFullOrder	;wreg free
 15418                           
 15419                           ;sm_ControlGate_MC50.c: 56:                 InitFullAutoTime();
 15420  007F5C  ECEE  F047         	call	_InitFullAutoTime	;wreg free
 15421                           
 15422                           ; BSR set to: 0
 15423                           ;sm_ControlGate_MC50.c: 57:                 sm_send_event(&main_stateMachine, ev_MotorIs
      +                          Open);
 15424  007F60  0EED               	movlw	low _main_stateMachine
 15425  007F62  6E12               	movwf	sm_send_event@psm^0,c
 15426  007F64  0E01               	movlw	high _main_stateMachine
 15427  007F66  6E13               	movwf	(sm_send_event@psm+1)^0,c
 15428  007F68  0E00               	movlw	0
 15429  007F6A  6E15               	movwf	(sm_send_event@event+1)^0,c
 15430  007F6C  0E11               	movlw	17
 15431  007F6E  6E14               	movwf	sm_send_event@event^0,c
 15432  007F70  EC29  F041         	call	_sm_send_event	;wreg free
 15433                           
 15434                           ;sm_ControlGate_MC50.c: 58:                 aux_i=0;
 15435  007F74  0E00               	movlw	0
 15436  007F76  0101               	movlb	1	; () banked
 15437  007F78  6F8C               	movwf	_aux_i& (0+255),b
 15438  007F7A                     l2580:
 15439                           
 15440                           ; BSR set to: 1
 15441  007F7A  0012               	return		;funcret
 15442  007F7C                     __end_of_WaitPreFlash:
 15443                           	callstack 0
 15444                           
 15445 ;; *************** function _OpenFullOrder *****************
 15446 ;; Defined at:
 15447 ;;		line 29 in file "sm_ControlGate_MC50.c"
 15448 ;; Parameters:    Size  Location     Type
 15449 ;;		None
 15450 ;; Auto vars:     Size  Location     Type
 15451 ;;		None
 15452 ;; Return value:  Size  Location     Type
 15453 ;;                  1    wreg      void 
 15454 ;; Registers used:
 15455 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15456 ;; Tracked objects:
 15457 ;;		On entry : 3E/1
 15458 ;;		On exit  : 3E/0
 15459 ;;		Unchanged: 0/0
 15460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15464 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15465 ;;Total ram usage:        0 bytes
 15466 ;; Hardware stack levels used: 1
 15467 ;; Hardware stack levels required when called: 6
 15468 ;; This function calls:
 15469 ;;		_InitSoftStart
 15470 ;;		_sm_send_event
 15471 ;; This function is called by:
 15472 ;;		_WaitPreFlash
 15473 ;;		_actionZone_Closed
 15474 ;;		_actionZone_Opened
 15475 ;;		_actionZone_Closing
 15476 ;; This function uses a non-reentrant model
 15477 ;;
 15478                           
 15479                           	psect	text44
 15480  008DF4                     __ptext44:
 15481                           	callstack 0
 15482  008DF4                     _OpenFullOrder:
 15483                           	callstack 22
 15484                           
 15485                           ;sm_ControlGate_MC50.c: 32:     var_sys.StateMotor = InOpenFull;
 15486                           
 15487                           ; BSR set to: 1
 15488                           ;incstack = 0
 15489  008DF4  0E01               	movlw	1
 15490  008DF6  0101               	movlb	1	; () banked
 15491  008DF8  6F00               	movwf	_var_sys& (0+255),b	;volatile
 15492                           
 15493                           ; BSR set to: 1
 15494                           ;sm_ControlGate_MC50.c: 33:     sm_send_event(&controlGate_stateMachine, ev_OpenGate);
 15495  008DFA  0EE2               	movlw	low _controlGate_stateMachine
 15496  008DFC  6E12               	movwf	sm_send_event@psm^0,c
 15497  008DFE  0E01               	movlw	high _controlGate_stateMachine
 15498  008E00  6E13               	movwf	(sm_send_event@psm+1)^0,c
 15499  008E02  0E00               	movlw	0
 15500  008E04  6E15               	movwf	(sm_send_event@event+1)^0,c
 15501  008E06  0E0C               	movlw	12
 15502  008E08  6E14               	movwf	sm_send_event@event^0,c
 15503  008E0A  EC29  F041         	call	_sm_send_event	;wreg free
 15504                           
 15505                           ;sm_ControlGate_MC50.c: 34:     var_sys.LastState = InOpenFull;
 15506  008E0E  0E01               	movlw	1
 15507  008E10  0101               	movlb	1	; () banked
 15508  008E12  6F0B               	movwf	(_var_sys+11)& (0+255),b	;volatile
 15509                           
 15510                           ; BSR set to: 1
 15511                           ;sm_ControlGate_MC50.c: 35:     InitSoftStart();
 15512  008E14  EC57  F041         	call	_InitSoftStart	;wreg free
 15513  008E18  0012               	return		;funcret
 15514  008E1A                     __end_of_OpenFullOrder:
 15515                           	callstack 0
 15516                           
 15517 ;; *************** function _InitFullAutoTime *****************
 15518 ;; Defined at:
 15519 ;;		line 109 in file "sm_ControlGate_MC50.c"
 15520 ;; Parameters:    Size  Location     Type
 15521 ;;		None
 15522 ;; Auto vars:     Size  Location     Type
 15523 ;;		None
 15524 ;; Return value:  Size  Location     Type
 15525 ;;                  1    wreg      void 
 15526 ;; Registers used:
 15527 ;;		wreg, status,2, status,0, prodl, prodh
 15528 ;; Tracked objects:
 15529 ;;		On entry : 3E/0
 15530 ;;		On exit  : 3F/0
 15531 ;;		Unchanged: 0/0
 15532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15536 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15537 ;;Total ram usage:        0 bytes
 15538 ;; Hardware stack levels used: 1
 15539 ;; Hardware stack levels required when called: 4
 15540 ;; This function calls:
 15541 ;;		Nothing
 15542 ;; This function is called by:
 15543 ;;		_WaitPreFlash
 15544 ;;		_actionZone_Closed
 15545 ;;		_actionZone_Opening
 15546 ;;		_actionZone_Opened
 15547 ;;		_actionZone_Closing
 15548 ;; This function uses a non-reentrant model
 15549 ;;
 15550                           
 15551                           	psect	text45
 15552  008FDC                     __ptext45:
 15553                           	callstack 0
 15554  008FDC                     _InitFullAutoTime:
 15555                           	callstack 24
 15556                           
 15557                           ;sm_ControlGate_MC50.c: 111:     if (var_sys_NVM.homemPresente == 0) {
 15558                           
 15559                           ;incstack = 0
 15560  008FDC  0100               	movlb	0	; () banked
 15561  008FDE  51A8               	movf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 15562  008FE0  A4D8               	btfss	status,2,c
 15563  008FE2  0012               	return	
 15564                           
 15565                           ; BSR set to: 0
 15566                           ;sm_ControlGate_MC50.c: 112:         ts_system.timeWaitToClose = ((int) var_sys_NVM.auto
      +                          TimeFullClose * (1000/50));
 15567  008FE4  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 15568  008FE6  0D14               	mullw	20
 15569  008FE8  CFF3 F1AC          	movff	prodl,_ts_system+18	;volatile
 15570  008FEC  CFF4 F1AD          	movff	prodh,_ts_system+19	;volatile
 15571                           
 15572                           ; BSR set to: 0
 15573                           ;sm_ControlGate_MC50.c: 113:         var_sys.AutoCloseActive = var_sys_NVM.autoTimeFullC
      +                          lose;
 15574  008FF0  C09D  F123         	movff	_var_sys_NVM+5,_var_sys+35	;volatile
 15575                           
 15576                           ; BSR set to: 0
 15577  008FF4  0012               	return		;funcret
 15578  008FF6                     __end_of_InitFullAutoTime:
 15579                           	callstack 0
 15580                           
 15581 ;; *************** function _OpenWalkOrder *****************
 15582 ;; Defined at:
 15583 ;;		line 71 in file "sm_ControlGate_MC50.c"
 15584 ;; Parameters:    Size  Location     Type
 15585 ;;		None
 15586 ;; Auto vars:     Size  Location     Type
 15587 ;;  diffTime        2   25[COMRAM] int 
 15588 ;; Return value:  Size  Location     Type
 15589 ;;                  1    wreg      void 
 15590 ;; Registers used:
 15591 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15592 ;; Tracked objects:
 15593 ;;		On entry : 3E/1
 15594 ;;		On exit  : 3E/0
 15595 ;;		Unchanged: 0/0
 15596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15598 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15599 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15600 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15601 ;;Total ram usage:        4 bytes
 15602 ;; Hardware stack levels used: 1
 15603 ;; Hardware stack levels required when called: 6
 15604 ;; This function calls:
 15605 ;;		_InitSoftStart
 15606 ;;		_sm_send_event
 15607 ;; This function is called by:
 15608 ;;		_actionZone_Closed
 15609 ;;		_actionZone_Opened
 15610 ;;		_actionZone_Closing
 15611 ;; This function uses a non-reentrant model
 15612 ;;
 15613                           
 15614                           	psect	text46
 15615  007F7C                     __ptext46:
 15616                           	callstack 0
 15617  007F7C                     _OpenWalkOrder:
 15618                           	callstack 22
 15619                           
 15620                           ;sm_ControlGate_MC50.c: 72:     int diffTime = ((int) var_sys_NVM.walkTime * (1000/50)) 
      +                          - var_sys.PositionActual ;
 15621                           
 15622                           ; BSR set to: 0
 15623                           ;incstack = 0
 15624  007F7C  0100               	movlb	0	; () banked
 15625  007F7E  519C               	movf	(_var_sys_NVM+4)& (0+255),w,b	;volatile
 15626  007F80  0D14               	mullw	20
 15627  007F82  CFF3 F018          	movff	prodl,??_OpenWalkOrder
 15628  007F86  CFF4 F019          	movff	prodh,??_OpenWalkOrder+1
 15629  007F8A  0101               	movlb	1	; () banked
 15630  007F8C  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 15631  007F8E  5C18               	subwf	??_OpenWalkOrder^0,w,c
 15632  007F90  6E1A               	movwf	OpenWalkOrder@diffTime^0,c
 15633  007F92  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 15634  007F94  5819               	subwfb	(??_OpenWalkOrder+1)^0,w,c
 15635  007F96  6E1B               	movwf	(OpenWalkOrder@diffTime+1)^0,c
 15636                           
 15637                           ; BSR set to: 1
 15638                           ;sm_ControlGate_MC50.c: 74:     if (diffTime > 0) {
 15639  007F98  BE1B               	btfsc	(OpenWalkOrder@diffTime+1)^0,7,c
 15640  007F9A  D022               	goto	l20427
 15641  007F9C  501B               	movf	(OpenWalkOrder@diffTime+1)^0,w,c
 15642  007F9E  E103               	bnz	u23730
 15643  007FA0  041A               	decf	OpenWalkOrder@diffTime^0,w,c
 15644  007FA2  A0D8               	btfss	status,0,c
 15645  007FA4  D01D               	goto	l20427
 15646  007FA6                     u23730:
 15647                           
 15648                           ; BSR set to: 1
 15649                           ;sm_ControlGate_MC50.c: 76:         sm_send_event(&controlGate_stateMachine, ev_OpenGate
      +                          );
 15650  007FA6  0EE2               	movlw	low _controlGate_stateMachine
 15651  007FA8  6E12               	movwf	sm_send_event@psm^0,c
 15652  007FAA  0E01               	movlw	high _controlGate_stateMachine
 15653  007FAC  6E13               	movwf	(sm_send_event@psm+1)^0,c
 15654  007FAE  0E00               	movlw	0
 15655  007FB0  6E15               	movwf	(sm_send_event@event+1)^0,c
 15656  007FB2  0E0C               	movlw	12
 15657  007FB4  6E14               	movwf	sm_send_event@event^0,c
 15658  007FB6  EC29  F041         	call	_sm_send_event	;wreg free
 15659                           
 15660                           ;sm_ControlGate_MC50.c: 77:         if (var_sys.Statedoorcontrol == st_Closed){
 15661  007FBA  0101               	movlb	1	; () banked
 15662  007FBC  051C               	decf	(_var_sys+28)& (0+255),w,b	;volatile
 15663  007FBE  A4D8               	btfss	status,2,c
 15664  007FC0  D005               	goto	l20421
 15665                           
 15666                           ; BSR set to: 1
 15667                           ;sm_ControlGate_MC50.c: 78:            ts_system.timeOpenWalk = diffTime;
 15668  007FC2  C01A  F1AA         	movff	OpenWalkOrder@diffTime,_ts_system+16	;volatile
 15669  007FC6  C01B  F1AB         	movff	OpenWalkOrder@diffTime+1,_ts_system+17	;volatile
 15670                           
 15671                           ;sm_ControlGate_MC50.c: 79:         }
 15672  007FCA  D006               	goto	l20423
 15673  007FCC                     l20421:
 15674                           
 15675                           ; BSR set to: 1
 15676                           ;sm_ControlGate_MC50.c: 81:             ts_system.timeOpenWalk = diffTime + (1000/50);
 15677  007FCC  0E14               	movlw	20
 15678  007FCE  241A               	addwf	OpenWalkOrder@diffTime^0,w,c
 15679  007FD0  6FAA               	movwf	(_ts_system+16)& (0+255),b	;volatile
 15680  007FD2  0E00               	movlw	0
 15681  007FD4  201B               	addwfc	(OpenWalkOrder@diffTime+1)^0,w,c
 15682  007FD6  6FAB               	movwf	(_ts_system+17)& (0+255),b	;volatile
 15683  007FD8                     l20423:
 15684                           
 15685                           ; BSR set to: 1
 15686                           ;sm_ControlGate_MC50.c: 83:         var_sys.StateMotor = InOpenWalk;
 15687  007FD8  0E02               	movlw	2
 15688  007FDA  6F00               	movwf	_var_sys& (0+255),b	;volatile
 15689                           
 15690                           ; BSR set to: 1
 15691                           ;sm_ControlGate_MC50.c: 84:         var_sys.Timewalkisactived = YES;
 15692  007FDC  0E01               	movlw	1
 15693  007FDE  6F4A               	movwf	(_var_sys+74)& (0+255),b	;volatile
 15694  007FE0                     l20427:
 15695                           
 15696                           ; BSR set to: 1
 15697                           ;sm_ControlGate_MC50.c: 92:     var_sys.LastState = InOpenWalk;
 15698  007FE0  0E02               	movlw	2
 15699  007FE2  6F0B               	movwf	(_var_sys+11)& (0+255),b	;volatile
 15700                           
 15701                           ; BSR set to: 1
 15702                           ;sm_ControlGate_MC50.c: 93:     InitSoftStart();
 15703  007FE4  EC57  F041         	call	_InitSoftStart	;wreg free
 15704  007FE8  0012               	return		;funcret
 15705  007FEA                     __end_of_OpenWalkOrder:
 15706                           	callstack 0
 15707                           
 15708 ;; *************** function _sm_send_event *****************
 15709 ;; Defined at:
 15710 ;;		line 34 in file "sm_common_MC50.c"
 15711 ;; Parameters:    Size  Location     Type
 15712 ;;  psm             2   17[COMRAM] PTR struct .
 15713 ;;		 -> controlLearning_stateMachine(11), controlGate_stateMachine(11), main_stateMachine(11), menuConfiguration_stateMa
      +chine(11), 
 15714 ;;  event           2   19[COMRAM] int 
 15715 ;; Auto vars:     Size  Location     Type
 15716 ;;		None
 15717 ;; Return value:  Size  Location     Type
 15718 ;;                  1    wreg      void 
 15719 ;; Registers used:
 15720 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15721 ;; Tracked objects:
 15722 ;;		On entry : 0/0
 15723 ;;		On exit  : 0/0
 15724 ;;		Unchanged: 0/0
 15725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15726 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15727 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15728 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15729 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15730 ;;Total ram usage:        6 bytes
 15731 ;; Hardware stack levels used: 1
 15732 ;; Hardware stack levels required when called: 5
 15733 ;; This function calls:
 15734 ;;		_sm_get_current_state
 15735 ;; This function is called by:
 15736 ;;		_OpenFullOrder
 15737 ;;		_WaitPreFlash
 15738 ;;		_CloseOrder
 15739 ;;		_OpenWalkOrder
 15740 ;;		_StopOrder
 15741 ;;		_sm_execute_ControlGate
 15742 ;;		_actionZone_Closed
 15743 ;;		_actionZone_Opening
 15744 ;;		_actionZone_Closing
 15745 ;;		_sm_execute_ControlLearning
 15746 ;;		_sm_execute_main
 15747 ;;		_sm_execute_menuConfiguration
 15748 ;;		_setValueToEdit
 15749 ;;		_controlSelectRemote
 15750 ;;		_controlSaveRemote
 15751 ;; This function uses a non-reentrant model
 15752 ;;
 15753                           
 15754                           	psect	text47
 15755  008252                     __ptext47:
 15756                           	callstack 0
 15757  008252                     _sm_send_event:
 15758                           	callstack 24
 15759                           
 15760                           ;sm_common_MC50.c: 34: void sm_send_event(sm_t *psm, int event);sm_common_MC50.c: 35: {;
      +                          sm_common_MC50.c: 36:  if(( psm->parent_machine == ((void*)0)) || (sm_get_current_state(
      +                          psm->parent_machine)==psm->parent_state))
 15761                           
 15762                           ;incstack = 0
 15763  008252  EE20 F007          	lfsr	2,7
 15764  008256  5012               	movf	sm_send_event@psm^0,w,c
 15765  008258  26D9               	addwf	fsr2l,f,c
 15766  00825A  5013               	movf	(sm_send_event@psm+1)^0,w,c
 15767  00825C  22DA               	addwfc	fsr2h,f,c
 15768  00825E  50DE               	movf	postinc2,w,c
 15769  008260  10DE               	iorwf	postinc2,w,c
 15770  008262  B4D8               	btfsc	status,2,c
 15771  008264  D019               	goto	u22380
 15772  008266  EE20 F007          	lfsr	2,7
 15773  00826A  5012               	movf	sm_send_event@psm^0,w,c
 15774  00826C  26D9               	addwf	fsr2l,f,c
 15775  00826E  5013               	movf	(sm_send_event@psm+1)^0,w,c
 15776  008270  22DA               	addwfc	fsr2h,f,c
 15777  008272  CFDE F010          	movff	postinc2,sm_get_current_state@psm
 15778  008276  CFDD F011          	movff	postdec2,sm_get_current_state@psm+1
 15779  00827A  EC91  F048         	call	_sm_get_current_state	;wreg free
 15780  00827E  EE20 F009          	lfsr	2,9
 15781  008282  5012               	movf	sm_send_event@psm^0,w,c
 15782  008284  26D9               	addwf	fsr2l,f,c
 15783  008286  5013               	movf	(sm_send_event@psm+1)^0,w,c
 15784  008288  22DA               	addwfc	fsr2h,f,c
 15785  00828A  50DE               	movf	postinc2,w,c
 15786  00828C  1810               	xorwf	?_sm_get_current_state^0,w,c
 15787  00828E  E10E               	bnz	l3507
 15788  008290  50DE               	movf	postinc2,w,c
 15789  008292  1811               	xorwf	(?_sm_get_current_state+1)^0,w,c
 15790  008294  A4D8               	btfss	status,2,c
 15791  008296  0012               	return	
 15792  008298                     u22380:
 15793                           
 15794                           ;sm_common_MC50.c: 38:  {;sm_common_MC50.c: 39:   psm->last_event = event;
 15795  008298  EE20 F004          	lfsr	2,4
 15796  00829C  5012               	movf	sm_send_event@psm^0,w,c
 15797  00829E  26D9               	addwf	fsr2l,f,c
 15798  0082A0  5013               	movf	(sm_send_event@psm+1)^0,w,c
 15799  0082A2  22DA               	addwfc	fsr2h,f,c
 15800  0082A4  C014  FFDE         	movff	sm_send_event@event,postinc2
 15801  0082A8  C015  FFDD         	movff	sm_send_event@event+1,postdec2
 15802  0082AC                     l3507:
 15803  0082AC  0012               	return		;funcret
 15804  0082AE                     __end_of_sm_send_event:
 15805                           	callstack 0
 15806                           
 15807 ;; *************** function _sm_get_current_state *****************
 15808 ;; Defined at:
 15809 ;;		line 30 in file "sm_common_MC50.c"
 15810 ;; Parameters:    Size  Location     Type
 15811 ;;  psm             2   15[COMRAM] PTR struct .
 15812 ;;		 -> NULL(0), 
 15813 ;; Auto vars:     Size  Location     Type
 15814 ;;		None
 15815 ;; Return value:  Size  Location     Type
 15816 ;;                  2   15[COMRAM] int 
 15817 ;; Registers used:
 15818 ;;		fsr2l, fsr2h
 15819 ;; Tracked objects:
 15820 ;;		On entry : 0/0
 15821 ;;		On exit  : 0/0
 15822 ;;		Unchanged: 0/0
 15823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15824 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15827 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15828 ;;Total ram usage:        2 bytes
 15829 ;; Hardware stack levels used: 1
 15830 ;; Hardware stack levels required when called: 4
 15831 ;; This function calls:
 15832 ;;		Nothing
 15833 ;; This function is called by:
 15834 ;;		_sm_send_event
 15835 ;; This function uses a non-reentrant model
 15836 ;;
 15837                           
 15838                           	psect	text48
 15839  009122                     __ptext48:
 15840                           	callstack 0
 15841  009122                     _sm_get_current_state:
 15842                           	callstack 24
 15843                           
 15844                           ;sm_common_MC50.c: 31:  return psm->current_state;
 15845                           
 15846                           ;incstack = 0
 15847  009122  C010  FFD9         	movff	sm_get_current_state@psm,fsr2l
 15848  009126  C011  FFDA         	movff	sm_get_current_state@psm+1,fsr2h
 15849  00912A  CFDE F010          	movff	postinc2,?_sm_get_current_state
 15850  00912E  CFDD F011          	movff	postdec2,?_sm_get_current_state+1
 15851  009132  0012               	return		;funcret
 15852  009134                     __end_of_sm_get_current_state:
 15853                           	callstack 0
 15854                           
 15855 ;; *************** function _InitSoftStart *****************
 15856 ;; Defined at:
 15857 ;;		line 816 in file "sm_ControlGate_MC50.c"
 15858 ;; Parameters:    Size  Location     Type
 15859 ;;		None
 15860 ;; Auto vars:     Size  Location     Type
 15861 ;;		None
 15862 ;; Return value:  Size  Location     Type
 15863 ;;                  1    wreg      void 
 15864 ;; Registers used:
 15865 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15866 ;; Tracked objects:
 15867 ;;		On entry : 3F/1
 15868 ;;		On exit  : 3E/0
 15869 ;;		Unchanged: 0/0
 15870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15873 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15874 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15875 ;;Total ram usage:        1 bytes
 15876 ;; Hardware stack levels used: 1
 15877 ;; Hardware stack levels required when called: 5
 15878 ;; This function calls:
 15879 ;;		_GetMotorPower
 15880 ;; This function is called by:
 15881 ;;		_OpenFullOrder
 15882 ;;		_CloseOrder
 15883 ;;		_OpenWalkOrder
 15884 ;; This function uses a non-reentrant model
 15885 ;;
 15886                           
 15887                           	psect	text49
 15888  0082AE                     __ptext49:
 15889                           	callstack 0
 15890  0082AE                     _InitSoftStart:
 15891                           	callstack 22
 15892                           
 15893                           ; BSR set to: 1
 15894                           ;sm_ControlGate_MC50.c: 817:     if (var_sys_NVM.softStart != 0 && var_sys.AutoInversion
      +                          Active == NO) {
 15895                           
 15896                           ;incstack = 0
 15897  0082AE  0100               	movlb	0	; () banked
 15898  0082B0  51AA               	movf	(_var_sys_NVM+18)& (0+255),w,b	;volatile
 15899  0082B2  B4D8               	btfsc	status,2,c
 15900  0082B4  0012               	return	
 15901                           
 15902                           ; BSR set to: 0
 15903  0082B6  0101               	movlb	1	; () banked
 15904  0082B8  5127               	movf	(_var_sys+39)& (0+255),w,b	;volatile
 15905  0082BA  A4D8               	btfss	status,2,c
 15906  0082BC  0012               	return	
 15907                           
 15908                           ; BSR set to: 1
 15909                           ;sm_ControlGate_MC50.c: 824:         var_sys.velocityFactorstop = 0;
 15910  0082BE  0E00               	movlw	0
 15911  0082C0  6F11               	movwf	(_var_sys+17)& (0+255),b	;volatile
 15912  0082C2  0E00               	movlw	0
 15913  0082C4  6F10               	movwf	(_var_sys+16)& (0+255),b	;volatile
 15914                           
 15915                           ;sm_ControlGate_MC50.c: 825:         var_sys.velocityFactor = 0;
 15916  0082C6  0E00               	movlw	0
 15917  0082C8  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 15918  0082CA  0E00               	movlw	0
 15919  0082CC  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 15920                           
 15921                           ; BSR set to: 1
 15922                           ;sm_ControlGate_MC50.c: 826:         var_sys.velocityFactor = GetMotorPower();
 15923  0082CE  ECA8  F037         	call	_GetMotorPower	;wreg free
 15924  0082D2  6E14               	movwf	??_InitSoftStart^0,c
 15925  0082D4  5014               	movf	??_InitSoftStart^0,w,c
 15926  0082D6  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 15927  0082D8  6B0F               	clrf	(_var_sys+15)& (0+255),b	;volatile
 15928                           
 15929                           ; BSR set to: 1
 15930                           ;sm_ControlGate_MC50.c: 827:         if ( var_sys.velocityFactor > (81) )
 15931  0082DA  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 15932  0082DC  D00A               	goto	l19535
 15933  0082DE  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 15934  0082E0  E104               	bnz	u22410
 15935  0082E2  0E52               	movlw	82
 15936  0082E4  5D0E               	subwf	(_var_sys+14)& (0+255),w,b	;volatile
 15937  0082E6  A0D8               	btfss	status,0,c
 15938  0082E8  D004               	goto	l19535
 15939  0082EA                     u22410:
 15940                           
 15941                           ; BSR set to: 1
 15942                           ;sm_ControlGate_MC50.c: 828:         {;sm_ControlGate_MC50.c: 829:             var_sys.v
      +                          elocityFactor = (81);
 15943  0082EA  0E00               	movlw	0
 15944  0082EC  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 15945  0082EE  0E51               	movlw	81
 15946  0082F0  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 15947  0082F2                     l19535:
 15948                           
 15949                           ; BSR set to: 1
 15950                           ;sm_ControlGate_MC50.c: 840:         ts_system.timeSoftStart = var_sys.velocityFactor + 
      +                          1;
 15951  0082F2  0E01               	movlw	1
 15952  0082F4  250E               	addwf	(_var_sys+14)& (0+255),w,b	;volatile
 15953  0082F6  6FB0               	movwf	(_ts_system+22)& (0+255),b	;volatile
 15954  0082F8  0E00               	movlw	0
 15955  0082FA  210F               	addwfc	(_var_sys+15)& (0+255),w,b	;volatile
 15956  0082FC  6FB1               	movwf	(_ts_system+23)& (0+255),b	;volatile
 15957                           
 15958                           ;sm_ControlGate_MC50.c: 842:         var_sys.SoftStartDecrementControl = 10 - var_sys_NV
      +                          M.softStart;
 15959  0082FE  0100               	movlb	0	; () banked
 15960  008300  51AA               	movf	(_var_sys_NVM+18)& (0+255),w,b	;volatile
 15961  008302  080A               	sublw	10
 15962  008304  0101               	movlb	1	; () banked
 15963  008306  6F14               	movwf	(_var_sys+20)& (0+255),b	;volatile
 15964  008308  0012               	return		;funcret
 15965  00830A                     __end_of_InitSoftStart:
 15966                           	callstack 0
 15967                           
 15968 ;; *************** function _InitWalkAutoTime *****************
 15969 ;; Defined at:
 15970 ;;		line 103 in file "sm_ControlGate_MC50.c"
 15971 ;; Parameters:    Size  Location     Type
 15972 ;;		None
 15973 ;; Auto vars:     Size  Location     Type
 15974 ;;		None
 15975 ;; Return value:  Size  Location     Type
 15976 ;;                  1    wreg      void 
 15977 ;; Registers used:
 15978 ;;		wreg, status,2, status,0, prodl, prodh
 15979 ;; Tracked objects:
 15980 ;;		On entry : 0/1
 15981 ;;		On exit  : 3F/0
 15982 ;;		Unchanged: 0/0
 15983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15985 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15987 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15988 ;;Total ram usage:        0 bytes
 15989 ;; Hardware stack levels used: 1
 15990 ;; Hardware stack levels required when called: 4
 15991 ;; This function calls:
 15992 ;;		Nothing
 15993 ;; This function is called by:
 15994 ;;		_actionZone_Closed
 15995 ;;		_actionZone_Opening
 15996 ;;		_actionZone_Opened
 15997 ;;		_actionZone_Closing
 15998 ;; This function uses a non-reentrant model
 15999 ;;
 16000                           
 16001                           	psect	text50
 16002  0090E6                     __ptext50:
 16003                           	callstack 0
 16004  0090E6                     _InitWalkAutoTime:
 16005                           	callstack 24
 16006                           
 16007                           ;sm_ControlGate_MC50.c: 105:     ts_system.timeWaitToClose = ((int) var_sys_NVM.autoTime
      +                          WalkClose * (1000/50));
 16008                           
 16009                           ;incstack = 0
 16010  0090E6  0100               	movlb	0	; () banked
 16011  0090E8  519E               	movf	(_var_sys_NVM+6)& (0+255),w,b	;volatile
 16012  0090EA  0D14               	mullw	20
 16013  0090EC  CFF3 F1AC          	movff	prodl,_ts_system+18	;volatile
 16014  0090F0  CFF4 F1AD          	movff	prodh,_ts_system+19	;volatile
 16015                           
 16016                           ; BSR set to: 0
 16017                           ;sm_ControlGate_MC50.c: 106:     var_sys.AutoCloseActive = var_sys_NVM.autoTimeWalkClose
      +                          ;
 16018  0090F4  C09E  F123         	movff	_var_sys_NVM+6,_var_sys+35	;volatile
 16019                           
 16020                           ; BSR set to: 0
 16021  0090F8  0012               	return		;funcret
 16022  0090FA                     __end_of_InitWalkAutoTime:
 16023                           	callstack 0
 16024                           
 16025 ;; *************** function _GetSecurityStateInOpening *****************
 16026 ;; Defined at:
 16027 ;;		line 738 in file "inputs_MC50.c"
 16028 ;; Parameters:    Size  Location     Type
 16029 ;;		None
 16030 ;; Auto vars:     Size  Location     Type
 16031 ;;		None
 16032 ;; Return value:  Size  Location     Type
 16033 ;;                  1    wreg      enum E10564
 16034 ;; Registers used:
 16035 ;;		wreg, status,2, status,0, cstack
 16036 ;; Tracked objects:
 16037 ;;		On entry : 0/0
 16038 ;;		On exit  : 3E/0
 16039 ;;		Unchanged: 0/0
 16040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16044 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16045 ;;Total ram usage:        0 bytes
 16046 ;; Hardware stack levels used: 1
 16047 ;; Hardware stack levels required when called: 5
 16048 ;; This function calls:
 16049 ;;		_SetSegmentValueIntermitent
 16050 ;; This function is called by:
 16051 ;;		_actionZone_Closed
 16052 ;;		_actionZone_Opening
 16053 ;; This function uses a non-reentrant model
 16054 ;;
 16055                           
 16056                           	psect	text51
 16057  007396                     __ptext51:
 16058                           	callstack 0
 16059  007396                     _GetSecurityStateInOpening:
 16060                           	callstack 23
 16061                           
 16062                           ;inputs_MC50.c: 747:     if((var_sys_NVM.securityBandIsON == 1) && (var_sys.SecurityBarI
      +                          sObstructed == YES)&&(var_sys_NVM.securityBandInOpen == 1)&& (var_sys_NVM.Stopboton == 0
      +                          ))
 16063                           
 16064                           ; BSR set to: 0
 16065                           ;incstack = 0
 16066  007396  0100               	movlb	0	; () banked
 16067  007398  05A1               	decf	(_var_sys_NVM+9)& (0+255),w,b	;volatile
 16068  00739A  A4D8               	btfss	status,2,c
 16069  00739C  D01B               	goto	l20097
 16070                           
 16071                           ; BSR set to: 0
 16072  00739E  0101               	movlb	1	; () banked
 16073  0073A0  0502               	decf	(_var_sys+2)& (0+255),w,b	;volatile
 16074  0073A2  A4D8               	btfss	status,2,c
 16075  0073A4  D017               	goto	l20097
 16076                           
 16077                           ; BSR set to: 1
 16078  0073A6  0100               	movlb	0	; () banked
 16079  0073A8  05A3               	decf	(_var_sys_NVM+11)& (0+255),w,b	;volatile
 16080  0073AA  A4D8               	btfss	status,2,c
 16081  0073AC  D013               	goto	l20097
 16082                           
 16083                           ; BSR set to: 0
 16084  0073AE  51AE               	movf	(_var_sys_NVM+22)& (0+255),w,b	;volatile
 16085  0073B0  A4D8               	btfss	status,2,c
 16086  0073B2  D010               	goto	l20097
 16087                           
 16088                           ; BSR set to: 0
 16089                           ;inputs_MC50.c: 748:     {;inputs_MC50.c: 750:         ts_system.timeSinalizationDigit=(
      +                           200/50);
 16090  0073B4  0E00               	movlw	0
 16091  0073B6  0101               	movlb	1	; () banked
 16092  0073B8  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16093  0073BA  0E04               	movlw	4
 16094  0073BC  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16095                           
 16096                           ; BSR set to: 1
 16097                           ;inputs_MC50.c: 751:         SetSegmentValueIntermitent(dL,dA,(1000/50));
 16098  0073BE  0E0A               	movlw	10
 16099  0073C0  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 16100  0073C2  0E00               	movlw	0
 16101  0073C4  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 16102  0073C6  0E14               	movlw	20
 16103  0073C8  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 16104  0073CA  0E12               	movlw	18
 16105  0073CC  ECA1  F045         	call	_SetSegmentValueIntermitent
 16106  0073D0                     l20091:
 16107                           
 16108                           ; BSR set to: 1
 16109                           ;inputs_MC50.c: 752:         return YES;
 16110  0073D0  0E01               	movlw	1
 16111  0073D2  0012               	return	
 16112  0073D4                     l20097:
 16113  0073D4  0100               	movlb	0	; () banked
 16114  0073D6  05AE               	decf	(_var_sys_NVM+22)& (0+255),w,b	;volatile
 16115  0073D8  A4D8               	btfss	status,2,c
 16116  0073DA  D013               	goto	l20111
 16117                           
 16118                           ; BSR set to: 0
 16119  0073DC  0101               	movlb	1	; () banked
 16120  0073DE  0502               	decf	(_var_sys+2)& (0+255),w,b	;volatile
 16121  0073E0  A4D8               	btfss	status,2,c
 16122  0073E2  D00F               	goto	l20111
 16123                           
 16124                           ; BSR set to: 1
 16125                           ;inputs_MC50.c: 756:     {;inputs_MC50.c: 758:         ts_system.timeSinalizationDigit=(
      +                           200/50);
 16126  0073E4  0E00               	movlw	0
 16127  0073E6  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16128  0073E8  0E04               	movlw	4
 16129  0073EA  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16130                           
 16131                           ; BSR set to: 1
 16132                           ;inputs_MC50.c: 759:         SetSegmentValueIntermitent(d5,dt,(1000/50));
 16133  0073EC  0E15               	movlw	21
 16134  0073EE  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 16135  0073F0  0E00               	movlw	0
 16136  0073F2  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 16137  0073F4  0E14               	movlw	20
 16138  0073F6  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 16139  0073F8  0E05               	movlw	5
 16140  0073FA  ECA1  F045         	call	_SetSegmentValueIntermitent
 16141                           
 16142                           ; BSR set to: 1
 16143                           ;inputs_MC50.c: 760:         return ST;
 16144  0073FE  0E02               	movlw	2
 16145  007400  0012               	return	
 16146  007402                     l20111:
 16147  007402  0100               	movlb	0	; () banked
 16148  007404  059F               	decf	(_var_sys_NVM+7)& (0+255),w,b	;volatile
 16149  007406  A4D8               	btfss	status,2,c
 16150  007408  D017               	goto	l20127
 16151                           
 16152                           ; BSR set to: 0
 16153  00740A  0101               	movlb	1	; () banked
 16154  00740C  0501               	decf	(_var_sys+1)& (0+255),w,b	;volatile
 16155  00740E  A4D8               	btfss	status,2,c
 16156  007410  D013               	goto	l20127
 16157                           
 16158                           ; BSR set to: 1
 16159  007412  0100               	movlb	0	; () banked
 16160  007414  05A0               	decf	(_var_sys_NVM+8)& (0+255),w,b	;volatile
 16161  007416  A4D8               	btfss	status,2,c
 16162  007418  D00F               	goto	l20127
 16163                           
 16164                           ; BSR set to: 0
 16165                           ;inputs_MC50.c: 764:     {;inputs_MC50.c: 766:         ts_system.timeSinalizationDigit=(
      +                           200/50);
 16166  00741A  0E00               	movlw	0
 16167  00741C  0101               	movlb	1	; () banked
 16168  00741E  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16169  007420  0E04               	movlw	4
 16170  007422  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16171                           
 16172                           ; BSR set to: 1
 16173                           ;inputs_MC50.c: 767:         SetSegmentValueIntermitent(dL,dE,(1000/50));
 16174  007424  0E0E               	movlw	14
 16175  007426  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 16176  007428  0E00               	movlw	0
 16177  00742A  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 16178  00742C  0E14               	movlw	20
 16179  00742E  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 16180  007430  0E12               	movlw	18
 16181  007432  ECA1  F045         	call	_SetSegmentValueIntermitent
 16182  007436  D7CC               	goto	l20091
 16183  007438                     l20127:
 16184                           
 16185                           ;inputs_MC50.c: 771:     {;inputs_MC50.c: 772:         return NO;
 16186  007438  0E00               	movlw	0
 16187  00743A  0012               	return		;funcret
 16188  00743C                     __end_of_GetSecurityStateInOpening:
 16189                           	callstack 0
 16190                           
 16191 ;; *************** function _SetSegmentValueIntermitent *****************
 16192 ;; Defined at:
 16193 ;;		line 201 in file "outputs_MC50.c"
 16194 ;; Parameters:    Size  Location     Type
 16195 ;;  d1              1    wreg     unsigned char 
 16196 ;;  d2              1   15[COMRAM] unsigned char 
 16197 ;;  time            2   16[COMRAM] int 
 16198 ;; Auto vars:     Size  Location     Type
 16199 ;;  d1              1   18[COMRAM] unsigned char 
 16200 ;; Return value:  Size  Location     Type
 16201 ;;                  1    wreg      void 
 16202 ;; Registers used:
 16203 ;;		wreg, status,2, status,0
 16204 ;; Tracked objects:
 16205 ;;		On entry : 3E/0
 16206 ;;		On exit  : 3F/1
 16207 ;;		Unchanged: 0/0
 16208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16209 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16210 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16212 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16213 ;;Total ram usage:        4 bytes
 16214 ;; Hardware stack levels used: 1
 16215 ;; Hardware stack levels required when called: 4
 16216 ;; This function calls:
 16217 ;;		Nothing
 16218 ;; This function is called by:
 16219 ;;		_GetSecurityStateInOpening
 16220 ;;		_GetSecurityStateInClosing
 16221 ;;		_sm_execute_ControlGate
 16222 ;;		_actionZone_Opening
 16223 ;;		_actionZone_Closing
 16224 ;; This function uses a non-reentrant model
 16225 ;;
 16226                           
 16227                           	psect	text52
 16228  008B42                     __ptext52:
 16229                           	callstack 0
 16230  008B42                     _SetSegmentValueIntermitent:
 16231                           	callstack 24
 16232                           
 16233                           ;incstack = 0
 16234                           ;SetSegmentValueIntermitent@d1 stored from wreg
 16235  008B42  6E13               	movwf	SetSegmentValueIntermitent@d1^0,c
 16236                           
 16237                           ;outputs_MC50.c: 201: void SetSegmentValueIntermitent(char d1, char d2,int time);outputs
      +                          _MC50.c: 202: {;outputs_MC50.c: 204:     if ( main_stateMachine.current_state != st_Menu
      +                          Configuration && (ts_system.timeoutMenu == 0 && button_struct.timer < (1000/50)))
 16238  008B44  0101               	movlb	1	; () banked
 16239  008B46  05ED               	decf	_main_stateMachine& (0+255),w,b
 16240  008B48  11EE               	iorwf	(_main_stateMachine+1)& (0+255),w,b
 16241  008B4A  B4D8               	btfsc	status,2,c
 16242  008B4C  0012               	return	
 16243                           
 16244                           ; BSR set to: 1
 16245  008B4E  51A8               	movf	(_ts_system+14)& (0+255),w,b	;volatile
 16246  008B50  11A9               	iorwf	(_ts_system+15)& (0+255),w,b	;volatile
 16247  008B52  A4D8               	btfss	status,2,c
 16248  008B54  0012               	return	
 16249                           
 16250                           ; BSR set to: 1
 16251  008B56  0E14               	movlw	20
 16252  008B58  604E               	cpfslt	(_button_struct+2)^0,c	;volatile
 16253  008B5A  0012               	return	
 16254                           
 16255                           ; BSR set to: 1
 16256                           ;outputs_MC50.c: 205:     {;outputs_MC50.c: 206:         dispStruct.display_grp.value_di
      +                          splay1=d1;
 16257  008B5C  C013  F072         	movff	SetSegmentValueIntermitent@d1,_dispStruct	;volatile
 16258                           
 16259                           ;outputs_MC50.c: 207:         dispStruct.display_grp.value_display2=d2;
 16260  008B60  C010  F073         	movff	SetSegmentValueIntermitent@d2,_dispStruct+1	;volatile
 16261                           
 16262                           ;outputs_MC50.c: 208:         dispStruct.intermitentFreq=time;
 16263  008B64  C011  F075         	movff	SetSegmentValueIntermitent@time,_dispStruct+3	;volatile
 16264  008B68  C012  F076         	movff	SetSegmentValueIntermitent@time+1,_dispStruct+4	;volatile
 16265                           
 16266                           ; BSR set to: 1
 16267  008B6C  0012               	return		;funcret
 16268  008B6E                     __end_of_SetSegmentValueIntermitent:
 16269                           	callstack 0
 16270                           
 16271 ;; *************** function _GetOpenOrder *****************
 16272 ;; Defined at:
 16273 ;;		line 330 in file "inputs_MC50.c"
 16274 ;; Parameters:    Size  Location     Type
 16275 ;;		None
 16276 ;; Auto vars:     Size  Location     Type
 16277 ;;		None
 16278 ;; Return value:  Size  Location     Type
 16279 ;;                  1    wreg      enum E10539
 16280 ;; Registers used:
 16281 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16282 ;; Tracked objects:
 16283 ;;		On entry : 3E/1
 16284 ;;		On exit  : 0/0
 16285 ;;		Unchanged: 0/0
 16286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16290 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16291 ;;Total ram usage:        0 bytes
 16292 ;; Hardware stack levels used: 1
 16293 ;; Hardware stack levels required when called: 5
 16294 ;; This function calls:
 16295 ;;		_SetSegmentValueIntermitentMain
 16296 ;;		___lbdiv
 16297 ;; This function is called by:
 16298 ;;		_sm_execute_ControlGate
 16299 ;;		_actionZone_Closed
 16300 ;;		_actionZone_Opening
 16301 ;;		_actionZone_Opened
 16302 ;;		_actionZone_Closing
 16303 ;;		_sm_execute_ControlLearning
 16304 ;; This function uses a non-reentrant model
 16305 ;;
 16306                           
 16307                           	psect	text53
 16308  005198                     __ptext53:
 16309                           	callstack 0
 16310  005198                     _GetOpenOrder:
 16311                           	callstack 23
 16312                           
 16313                           ;inputs_MC50.c: 332:    if (var_sys.LearningIsEnabled == NO){
 16314                           
 16315                           ; BSR set to: 1
 16316                           ;incstack = 0
 16317  005198  0101               	movlb	1	; () banked
 16318  00519A  5126               	movf	(_var_sys+38)& (0+255),w,b	;volatile
 16319  00519C  A4D8               	btfss	status,2,c
 16320  00519E  D0C0               	goto	l20067
 16321                           
 16322                           ; BSR set to: 1
 16323                           ;inputs_MC50.c: 334:        if(ts_system.TimeCurrentAlarm>0)
 16324  0051A0  BFC5               	btfsc	(_ts_system+43)& (0+255),7,b	;volatile
 16325  0051A2  D019               	goto	l19959
 16326  0051A4  51C5               	movf	(_ts_system+43)& (0+255),w,b	;volatile
 16327  0051A6  E103               	bnz	u22940
 16328  0051A8  05C4               	decf	(_ts_system+42)& (0+255),w,b	;volatile
 16329  0051AA  A0D8               	btfss	status,0,c
 16330  0051AC  D014               	goto	l19959
 16331  0051AE                     u22940:
 16332                           
 16333                           ; BSR set to: 1
 16334                           ;inputs_MC50.c: 336:         {;inputs_MC50.c: 337:             SetSegmentValueIntermiten
      +                          tMain(dL,d1,(1000/50));
 16335  0051AE  0E01               	movlw	1
 16336  0051B0  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16337  0051B2  0E00               	movlw	0
 16338  0051B4  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16339  0051B6  0E14               	movlw	20
 16340  0051B8  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16341  0051BA  0E12               	movlw	18
 16342  0051BC  EC7D  F048         	call	_SetSegmentValueIntermitentMain
 16343                           
 16344                           ;inputs_MC50.c: 338:             ts_system.timeSinalizationDigit=( 500/50);
 16345  0051C0  0E00               	movlw	0
 16346  0051C2  0101               	movlb	1	; () banked
 16347  0051C4  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16348  0051C6  0E0A               	movlw	10
 16349  0051C8  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16350                           
 16351                           ; BSR set to: 1
 16352                           ;inputs_MC50.c: 339:             rfCMD.processed=1;
 16353  0051CA  0E01               	movlw	1
 16354  0051CC  6E45               	movwf	(_rfCMD+10)^0,c	;volatile
 16355                           
 16356                           ; BSR set to: 1
 16357                           ;inputs_MC50.c: 340:             button_struct.processed=1;
 16358  0051CE  0E01               	movlw	1
 16359  0051D0  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 16360  0051D2                     l19953:
 16361                           
 16362                           ;inputs_MC50.c: 341:             return NoCMD;
 16363  0051D2  0E00               	movlw	0
 16364  0051D4  0012               	return	
 16365  0051D6                     l19959:
 16366                           
 16367                           ; BSR set to: 1
 16368  0051D6  0100               	movlb	0	; () banked
 16369  0051D8  51A8               	movf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 16370  0051DA  B4D8               	btfsc	status,2,c
 16371  0051DC  D02F               	goto	l19993
 16372                           
 16373                           ; BSR set to: 0
 16374                           ;inputs_MC50.c: 344:         {;inputs_MC50.c: 345:             if(button_struct.current=
      +                          =0x35)
 16375  0051DE  0E35               	movlw	53
 16376  0051E0  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16377  0051E2  A4D8               	btfss	status,2,c
 16378  0051E4  D017               	goto	l19977
 16379                           
 16380                           ; BSR set to: 0
 16381                           ;inputs_MC50.c: 346:             {;inputs_MC50.c: 347:                 ts_system.timeSin
      +                          alizationDigit=( 500/50);
 16382  0051E6  0E00               	movlw	0
 16383  0051E8  0101               	movlb	1	; () banked
 16384  0051EA  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16385  0051EC  0E0A               	movlw	10
 16386  0051EE  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16387                           
 16388                           ; BSR set to: 1
 16389                           ;inputs_MC50.c: 348:                 SetSegmentValueIntermitentMain(dL,d0,( 200/50));
 16390  0051F0  0E00               	movlw	0
 16391  0051F2  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16392  0051F4  0E00               	movlw	0
 16393  0051F6  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16394  0051F8  0E04               	movlw	4
 16395  0051FA  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16396  0051FC  0E12               	movlw	18
 16397  0051FE  EC7D  F048         	call	_SetSegmentValueIntermitentMain
 16398                           
 16399                           ;inputs_MC50.c: 349:                 if (var_sys_NVM.homemPresente == 2){
 16400  005202  0E02               	movlw	2
 16401  005204  0100               	movlb	0	; () banked
 16402  005206  19A8               	xorwf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 16403  005208  A4D8               	btfss	status,2,c
 16404  00520A  D002               	goto	l19971
 16405  00520C                     u22970:
 16406                           
 16407                           ; BSR set to: 0
 16408                           ;inputs_MC50.c: 350:                    button_struct.processed=1;
 16409  00520C  0E01               	movlw	1
 16410  00520E  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 16411  005210                     l19971:
 16412                           
 16413                           ; BSR set to: 0
 16414                           ;inputs_MC50.c: 352:                 return TypeFullOpen;
 16415  005210  0E03               	movlw	3
 16416  005212  0012               	return	
 16417  005214                     l19977:
 16418                           
 16419                           ; BSR set to: 0
 16420  005214  0E33               	movlw	51
 16421  005216  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16422  005218  A4D8               	btfss	status,2,c
 16423  00521A  D7DB               	goto	l19953
 16424                           
 16425                           ; BSR set to: 0
 16426                           ;inputs_MC50.c: 355:             {;inputs_MC50.c: 356:                 ts_system.timeSin
      +                          alizationDigit=( 500/50);
 16427  00521C  0E00               	movlw	0
 16428  00521E  0101               	movlb	1	; () banked
 16429  005220  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16430  005222  0E0A               	movlw	10
 16431  005224  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16432                           
 16433                           ; BSR set to: 1
 16434                           ;inputs_MC50.c: 357:                 SetSegmentValueIntermitentMain(dL,d5,( 200/50));
 16435  005226  0E05               	movlw	5
 16436  005228  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16437  00522A  0E00               	movlw	0
 16438  00522C  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16439  00522E  0E04               	movlw	4
 16440  005230  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16441  005232  0E12               	movlw	18
 16442  005234  EC7D  F048         	call	_SetSegmentValueIntermitentMain
 16443  005238                     l19983:
 16444                           
 16445                           ;inputs_MC50.c: 359:                 return TypeFullClose;
 16446  005238  0E04               	movlw	4
 16447  00523A  0012               	return	
 16448  00523C                     l19993:
 16449                           
 16450                           ; BSR set to: 0
 16451  00523C  0E35               	movlw	53
 16452  00523E  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16453  005240  A4D8               	btfss	status,2,c
 16454  005242  D016               	goto	l20015
 16455                           
 16456                           ; BSR set to: 0
 16457                           ;inputs_MC50.c: 371:         {;inputs_MC50.c: 372:             ts_system.timeSinalizatio
      +                          nDigit=(1000/50)*2;
 16458  005244  0E00               	movlw	0
 16459  005246  0101               	movlb	1	; () banked
 16460  005248  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16461  00524A  0E28               	movlw	40
 16462  00524C  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16463                           
 16464                           ; BSR set to: 1
 16465                           ;inputs_MC50.c: 373:             SetSegmentValueIntermitentMain(dL,d0,( 200/50));
 16466  00524E  0E00               	movlw	0
 16467  005250  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16468  005252  0E00               	movlw	0
 16469  005254  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16470  005256  0E04               	movlw	4
 16471  005258  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16472  00525A  0E12               	movlw	18
 16473  00525C  EC7D  F048         	call	_SetSegmentValueIntermitentMain
 16474                           
 16475                           ;inputs_MC50.c: 374:             if(var_sys_NVM.logicDigital==1)
 16476  005260  0100               	movlb	0	; () banked
 16477  005262  05A9               	decf	(_var_sys_NVM+17)& (0+255),w,b	;volatile
 16478  005264  B4D8               	btfsc	status,2,c
 16479  005266  D7D2               	goto	u22970
 16480  005268                     l20009:
 16481                           
 16482                           ;inputs_MC50.c: 380:             {;inputs_MC50.c: 381:                 button_struct.pro
      +                          cessed=1;
 16483  005268  0E01               	movlw	1
 16484  00526A  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 16485                           
 16486                           ;inputs_MC50.c: 382:                 return TypeFull;
 16487  00526C  0E01               	movlw	1
 16488  00526E  0012               	return	
 16489  005270                     l20015:
 16490                           
 16491                           ; BSR set to: 0
 16492  005270  0E33               	movlw	51
 16493  005272  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16494  005274  A4D8               	btfss	status,2,c
 16495  005276  D019               	goto	l20037
 16496                           
 16497                           ; BSR set to: 0
 16498                           ;inputs_MC50.c: 387:         {;inputs_MC50.c: 389:             ts_system.timeSinalizatio
      +                          nDigit=(1000/50)*2;
 16499  005278  0E00               	movlw	0
 16500  00527A  0101               	movlb	1	; () banked
 16501  00527C  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16502  00527E  0E28               	movlw	40
 16503  005280  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16504                           
 16505                           ; BSR set to: 1
 16506                           ;inputs_MC50.c: 390:             SetSegmentValueIntermitentMain(dL,d5,( 200/50));
 16507  005282  0E05               	movlw	5
 16508  005284  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16509  005286  0E00               	movlw	0
 16510  005288  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16511  00528A  0E04               	movlw	4
 16512  00528C  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16513  00528E  0E12               	movlw	18
 16514  005290  EC7D  F048         	call	_SetSegmentValueIntermitentMain
 16515                           
 16516                           ;inputs_MC50.c: 391:             if(var_sys_NVM.logicDigital==1)
 16517  005294  0100               	movlb	0	; () banked
 16518  005296  05A9               	decf	(_var_sys_NVM+17)& (0+255),w,b	;volatile
 16519  005298  A4D8               	btfss	status,2,c
 16520  00529A  D003               	goto	l20031
 16521                           
 16522                           ; BSR set to: 0
 16523                           ;inputs_MC50.c: 392:             {;inputs_MC50.c: 393:                  button_struct.pr
      +                          ocessed=1;
 16524  00529C  0E01               	movlw	1
 16525  00529E  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 16526  0052A0  D7CB               	goto	l19983
 16527  0052A2                     l20031:
 16528                           
 16529                           ; BSR set to: 0
 16530                           ;inputs_MC50.c: 399:             {;inputs_MC50.c: 400:                  button_struct.pr
      +                          ocessed=1;
 16531  0052A2  0E01               	movlw	1
 16532  0052A4  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 16533                           
 16534                           ; BSR set to: 0
 16535                           ;inputs_MC50.c: 402:                 return TypeWalk;
 16536  0052A6  0E02               	movlw	2
 16537  0052A8  0012               	return	
 16538  0052AA                     l20037:
 16539                           
 16540                           ; BSR set to: 0
 16541  0052AA  0E36               	movlw	54
 16542  0052AC  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16543  0052AE  A4D8               	btfss	status,2,c
 16544  0052B0  D00F               	goto	l20051
 16545                           
 16546                           ; BSR set to: 0
 16547                           ;inputs_MC50.c: 408:         {;inputs_MC50.c: 409:             ts_system.timeSinalizatio
      +                          nDigit=(1000/50)*2;
 16548  0052B2  0E00               	movlw	0
 16549  0052B4  0101               	movlb	1	; () banked
 16550  0052B6  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16551  0052B8  0E28               	movlw	40
 16552  0052BA  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16553                           
 16554                           ; BSR set to: 1
 16555                           ;inputs_MC50.c: 410:             SetSegmentValueIntermitentMain(dP,dU,( 200/50));
 16556  0052BC  0E13               	movlw	19
 16557  0052BE  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16558  0052C0  0E00               	movlw	0
 16559  0052C2  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16560  0052C4  0E04               	movlw	4
 16561  0052C6  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16562  0052C8  0E10               	movlw	16
 16563  0052CA  EC7D  F048         	call	_SetSegmentValueIntermitentMain
 16564  0052CE  D7CC               	goto	l20009
 16565  0052D0                     l20051:
 16566                           
 16567                           ; BSR set to: 0
 16568                           ;inputs_MC50.c: 417:         {;inputs_MC50.c: 418:             if(rfCMD.currentType!=NoC
      +                          MD && rfCMD.currentType!=TypeProgrammingModeFull && rfCMD.currentType!=TypeProgrammingMo
      +                          deWalk )
 16569  0052D0  503B               	movf	_rfCMD^0,w,c	;volatile
 16570  0052D2  B4D8               	btfsc	status,2,c
 16571  0052D4  D023               	goto	l20063
 16572                           
 16573                           ; BSR set to: 0
 16574  0052D6  0E06               	movlw	6
 16575  0052D8  183B               	xorwf	_rfCMD^0,w,c	;volatile
 16576  0052DA  B4D8               	btfsc	status,2,c
 16577  0052DC  D01F               	goto	l20063
 16578                           
 16579                           ; BSR set to: 0
 16580  0052DE  0E05               	movlw	5
 16581  0052E0  183B               	xorwf	_rfCMD^0,w,c	;volatile
 16582  0052E2  B4D8               	btfsc	status,2,c
 16583  0052E4  D01B               	goto	l20063
 16584                           
 16585                           ; BSR set to: 0
 16586                           ;inputs_MC50.c: 419:             {;inputs_MC50.c: 420:                 SetSegmentValueIn
      +                          termitentMain(rfCMD.currentPosMem/10, rfCMD.currentPosMem-((rfCMD.currentPosMem/10)*10),
      +                          ( 200/50));
 16587  0052E6  0E0A               	movlw	10
 16588  0052E8  6E10               	movwf	___lbdiv@divisor^0,c
 16589  0052EA  5043               	movf	(_rfCMD+8)^0,w,c	;volatile
 16590  0052EC  ECED  F044         	call	___lbdiv
 16591  0052F0  0DF6               	mullw	246
 16592  0052F2  50F3               	movf	243,w,c
 16593  0052F4  2443               	addwf	(_rfCMD+8)^0,w,c	;volatile
 16594  0052F6  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16595  0052F8  0E00               	movlw	0
 16596  0052FA  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16597  0052FC  0E04               	movlw	4
 16598  0052FE  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16599  005300  0E0A               	movlw	10
 16600  005302  6E10               	movwf	___lbdiv@divisor^0,c
 16601  005304  5043               	movf	(_rfCMD+8)^0,w,c	;volatile
 16602  005306  ECED  F044         	call	___lbdiv
 16603  00530A  EC7D  F048         	call	_SetSegmentValueIntermitentMain
 16604                           
 16605                           ;inputs_MC50.c: 421:                 ts_system.timeSinalizationDigit=(1000/50)*2;
 16606  00530E  0E00               	movlw	0
 16607  005310  0101               	movlb	1	; () banked
 16608  005312  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16609  005314  0E28               	movlw	40
 16610  005316  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16611                           
 16612                           ; BSR set to: 1
 16613                           ;inputs_MC50.c: 422:                 rfCMD.processed=1;
 16614  005318  0E01               	movlw	1
 16615  00531A  6E45               	movwf	(_rfCMD+10)^0,c	;volatile
 16616  00531C                     l20063:
 16617                           
 16618                           ;inputs_MC50.c: 425:             return rfCMD.currentType;
 16619  00531C  503B               	movf	_rfCMD^0,w,c	;volatile
 16620  00531E  0012               	return	
 16621  005320                     l20067:
 16622                           
 16623                           ; BSR set to: 1
 16624                           ;inputs_MC50.c: 428:     {;inputs_MC50.c: 429:        if(rfCMD.currentType!=NoCMD ){
 16625  005320  503B               	movf	_rfCMD^0,w,c	;volatile
 16626  005322  B4D8               	btfsc	status,2,c
 16627  005324  D01B               	goto	l20075
 16628                           
 16629                           ; BSR set to: 1
 16630                           ;inputs_MC50.c: 430:                   SetSegmentValueIntermitentMain(rfCMD.currentPosMe
      +                          m/10, rfCMD.currentPosMem-((rfCMD.currentPosMem/10)*10),( 200/50));
 16631  005326  0E0A               	movlw	10
 16632  005328  6E10               	movwf	___lbdiv@divisor^0,c
 16633  00532A  5043               	movf	(_rfCMD+8)^0,w,c	;volatile
 16634  00532C  ECED  F044         	call	___lbdiv
 16635  005330  0DF6               	mullw	246
 16636  005332  50F3               	movf	243,w,c
 16637  005334  2443               	addwf	(_rfCMD+8)^0,w,c	;volatile
 16638  005336  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16639  005338  0E00               	movlw	0
 16640  00533A  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16641  00533C  0E04               	movlw	4
 16642  00533E  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16643  005340  0E0A               	movlw	10
 16644  005342  6E10               	movwf	___lbdiv@divisor^0,c
 16645  005344  5043               	movf	(_rfCMD+8)^0,w,c	;volatile
 16646  005346  ECED  F044         	call	___lbdiv
 16647  00534A  EC7D  F048         	call	_SetSegmentValueIntermitentMain
 16648                           
 16649                           ;inputs_MC50.c: 431:                 ts_system.timeSinalizationDigit=(1000/50)*1;
 16650  00534E  0E00               	movlw	0
 16651  005350  0101               	movlb	1	; () banked
 16652  005352  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16653  005354  0E14               	movlw	20
 16654  005356  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16655                           
 16656                           ; BSR set to: 1
 16657                           ;inputs_MC50.c: 432:                 rfCMD.processed=1;
 16658  005358  0E01               	movlw	1
 16659  00535A  6E45               	movwf	(_rfCMD+10)^0,c	;volatile
 16660  00535C                     l20075:
 16661                           
 16662                           ; BSR set to: 1
 16663                           ;inputs_MC50.c: 434:        return rfCMD.currentType;
 16664  00535C  503B               	movf	_rfCMD^0,w,c	;volatile
 16665  00535E  0012               	return		;funcret
 16666  005360                     __end_of_GetOpenOrder:
 16667                           	callstack 0
 16668                           
 16669 ;; *************** function ___lbdiv *****************
 16670 ;; Defined at:
 16671 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\lbdiv.c"
 16672 ;; Parameters:    Size  Location     Type
 16673 ;;  dividend        1    wreg     unsigned char 
 16674 ;;  divisor         1   15[COMRAM] unsigned char 
 16675 ;; Auto vars:     Size  Location     Type
 16676 ;;  dividend        1   16[COMRAM] unsigned char 
 16677 ;;  quotient        1   18[COMRAM] unsigned char 
 16678 ;;  counter         1   17[COMRAM] unsigned char 
 16679 ;; Return value:  Size  Location     Type
 16680 ;;                  1    wreg      unsigned char 
 16681 ;; Registers used:
 16682 ;;		wreg, status,2, status,0
 16683 ;; Tracked objects:
 16684 ;;		On entry : 0/0
 16685 ;;		On exit  : 0/0
 16686 ;;		Unchanged: 0/0
 16687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16688 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16689 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16691 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16692 ;;Total ram usage:        4 bytes
 16693 ;; Hardware stack levels used: 1
 16694 ;; Hardware stack levels required when called: 4
 16695 ;; This function calls:
 16696 ;;		Nothing
 16697 ;; This function is called by:
 16698 ;;		_GetOpenOrder
 16699 ;;		_sm_execute_menuConfiguration
 16700 ;; This function uses a non-reentrant model
 16701 ;;
 16702                           
 16703                           	psect	text54
 16704  0089DA                     __ptext54:
 16705                           	callstack 0
 16706  0089DA                     ___lbdiv:
 16707                           	callstack 24
 16708                           
 16709                           ;incstack = 0
 16710                           ;___lbdiv@dividend stored from wreg
 16711  0089DA  6E11               	movwf	___lbdiv@dividend^0,c
 16712  0089DC  0E00               	movlw	0
 16713  0089DE  6E13               	movwf	___lbdiv@quotient^0,c
 16714  0089E0  5010               	movf	___lbdiv@divisor^0,w,c
 16715  0089E2  B4D8               	btfsc	status,2,c
 16716  0089E4  D015               	goto	l19905
 16717  0089E6  0E01               	movlw	1
 16718  0089E8  6E12               	movwf	___lbdiv@counter^0,c
 16719  0089EA  D003               	goto	l19893
 16720  0089EC                     l19889:
 16721  0089EC  90D8               	bcf	status,0,c
 16722  0089EE  3610               	rlcf	___lbdiv@divisor^0,f,c
 16723  0089F0  2A12               	incf	___lbdiv@counter^0,f,c
 16724  0089F2                     l19893:
 16725  0089F2  AE10               	btfss	___lbdiv@divisor^0,7,c
 16726  0089F4  D7FB               	goto	l19889
 16727  0089F6                     u22840:
 16728  0089F6  90D8               	bcf	status,0,c
 16729  0089F8  3613               	rlcf	___lbdiv@quotient^0,f,c
 16730  0089FA  5010               	movf	___lbdiv@divisor^0,w,c
 16731  0089FC  5C11               	subwf	___lbdiv@dividend^0,w,c
 16732  0089FE  A0D8               	btfss	status,0,c
 16733  008A00  D003               	goto	l19901
 16734  008A02  5010               	movf	___lbdiv@divisor^0,w,c
 16735  008A04  5E11               	subwf	___lbdiv@dividend^0,f,c
 16736  008A06  8013               	bsf	___lbdiv@quotient^0,0,c
 16737  008A08                     l19901:
 16738  008A08  90D8               	bcf	status,0,c
 16739  008A0A  3210               	rrcf	___lbdiv@divisor^0,f,c
 16740  008A0C  2E12               	decfsz	___lbdiv@counter^0,f,c
 16741  008A0E  D7F3               	goto	u22840
 16742  008A10                     l19905:
 16743  008A10  5013               	movf	___lbdiv@quotient^0,w,c
 16744  008A12  0012               	return		;funcret
 16745  008A14                     __end_of___lbdiv:
 16746                           	callstack 0
 16747                           
 16748 ;; *************** function _SetSegmentValueIntermitentMain *****************
 16749 ;; Defined at:
 16750 ;;		line 193 in file "outputs_MC50.c"
 16751 ;; Parameters:    Size  Location     Type
 16752 ;;  d1              1    wreg     unsigned char 
 16753 ;;  d2              1   27[COMRAM] unsigned char 
 16754 ;;  time            2   28[COMRAM] int 
 16755 ;; Auto vars:     Size  Location     Type
 16756 ;;  d1              1   30[COMRAM] unsigned char 
 16757 ;; Return value:  Size  Location     Type
 16758 ;;                  1    wreg      void 
 16759 ;; Registers used:
 16760 ;;		wreg
 16761 ;; Tracked objects:
 16762 ;;		On entry : 0/1
 16763 ;;		On exit  : 0/0
 16764 ;;		Unchanged: 0/0
 16765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16766 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16767 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16769 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16770 ;;Total ram usage:        4 bytes
 16771 ;; Hardware stack levels used: 1
 16772 ;; Hardware stack levels required when called: 4
 16773 ;; This function calls:
 16774 ;;		Nothing
 16775 ;; This function is called by:
 16776 ;;		_GetOpenOrder
 16777 ;;		_sm_execute_main
 16778 ;;		_sm_execute_menuConfiguration
 16779 ;;		_load_New_Menu
 16780 ;;		_controlSelectRemote
 16781 ;;		_controlSaveRemote
 16782 ;; This function uses a non-reentrant model
 16783 ;;
 16784                           
 16785                           	psect	text55
 16786  0090FA                     __ptext55:
 16787                           	callstack 0
 16788  0090FA                     _SetSegmentValueIntermitentMain:
 16789                           	callstack 22
 16790                           
 16791                           ;incstack = 0
 16792                           ;SetSegmentValueIntermitentMain@d1 stored from wreg
 16793  0090FA  6E1F               	movwf	SetSegmentValueIntermitentMain@d1^0,c
 16794                           
 16795                           ;outputs_MC50.c: 193: void SetSegmentValueIntermitentMain(char d1, char d2,int time);out
      +                          puts_MC50.c: 194: {;outputs_MC50.c: 195:     dispStruct.display_grp.value_display1=d1;
 16796  0090FC  C01F  F072         	movff	SetSegmentValueIntermitentMain@d1,_dispStruct	;volatile
 16797                           
 16798                           ;outputs_MC50.c: 196:     dispStruct.display_grp.value_display2=d2;
 16799  009100  C01C  F073         	movff	SetSegmentValueIntermitentMain@d2,_dispStruct+1	;volatile
 16800                           
 16801                           ;outputs_MC50.c: 197:     dispStruct.intermitentFreq=time;
 16802  009104  C01D  F075         	movff	SetSegmentValueIntermitentMain@time,_dispStruct+3	;volatile
 16803  009108  C01E  F076         	movff	SetSegmentValueIntermitentMain@time+1,_dispStruct+4	;volatile
 16804  00910C  0012               	return		;funcret
 16805  00910E                     __end_of_SetSegmentValueIntermitentMain:
 16806                           	callstack 0
 16807                           
 16808 ;; *************** function _readbutton *****************
 16809 ;; Defined at:
 16810 ;;		line 471 in file "inputs_MC50.c"
 16811 ;; Parameters:    Size  Location     Type
 16812 ;;		None
 16813 ;; Auto vars:     Size  Location     Type
 16814 ;;		None
 16815 ;; Return value:  Size  Location     Type
 16816 ;;                  1    wreg      void 
 16817 ;; Registers used:
 16818 ;;		wreg, status,2, status,0
 16819 ;; Tracked objects:
 16820 ;;		On entry : 3F/1
 16821 ;;		On exit  : 3F/1
 16822 ;;		Unchanged: 0/0
 16823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16827 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16828 ;;Total ram usage:        0 bytes
 16829 ;; Hardware stack levels used: 1
 16830 ;; Hardware stack levels required when called: 4
 16831 ;; This function calls:
 16832 ;;		Nothing
 16833 ;; This function is called by:
 16834 ;;		_main
 16835 ;; This function uses a non-reentrant model
 16836 ;;
 16837                           
 16838                           	psect	text56
 16839  008058                     __ptext56:
 16840                           	callstack 0
 16841  008058                     _readbutton:
 16842                           	callstack 26
 16843                           
 16844                           ; BSR set to: 1
 16845                           ;inputs_MC50.c: 474:  static unsigned char key1=0, key2=0;;inputs_MC50.c: 479:  key2 = (
      +                           PORTB & 0x37 );
 16846                           
 16847                           ;incstack = 0
 16848  008058  508E               	movf	142,w,c	;volatile
 16849  00805A  0B37               	andlw	55
 16850  00805C  6F96               	movwf	readbutton@key2& (0+255),b
 16851  00805E  F000               	nop		;# 
 16852  008060  F000               	nop		;# 
 16853  008062  F000               	nop		;# 
 16854                           
 16855                           ;inputs_MC50.c: 483:  key1 = ( PORTB & 0x37 );
 16856  008064  508E               	movf	142,w,c	;volatile
 16857  008066  0B37               	andlw	55
 16858  008068  0100               	movlb	0	; () banked
 16859  00806A  6F86               	movwf	readbutton@key1& (0+255),b
 16860                           
 16861                           ;inputs_MC50.c: 485:  if ( key2 == key1 )
 16862  00806C  5186               	movf	readbutton@key1& (0+255),w,b
 16863  00806E  0101               	movlb	1	; () banked
 16864  008070  1996               	xorwf	readbutton@key2& (0+255),w,b
 16865  008072  A4D8               	btfss	status,2,c
 16866  008074  D003               	goto	l16585
 16867                           
 16868                           ; BSR set to: 1
 16869                           ;inputs_MC50.c: 486:  {;inputs_MC50.c: 487:         button_struct.current = key1;
 16870  008076  C086  F04D         	movff	readbutton@key1,_button_struct+1	;volatile
 16871                           
 16872                           ;inputs_MC50.c: 488:  }
 16873  00807A  D002               	goto	l16587
 16874  00807C                     l16585:
 16875                           
 16876                           ; BSR set to: 1
 16877                           ;inputs_MC50.c: 490:     {;inputs_MC50.c: 491:         button_struct.current = 0x37;
 16878  00807C  0E37               	movlw	55
 16879  00807E  6E4D               	movwf	(_button_struct+1)^0,c	;volatile
 16880  008080                     l16587:
 16881                           
 16882                           ; BSR set to: 1
 16883                           ;inputs_MC50.c: 494:     if ( button_struct.current == 0x37 || ( button_struct.current !
      +                          = button_struct.old && button_struct.current == 0x00))
 16884  008080  0E37               	movlw	55
 16885  008082  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16886  008084  B4D8               	btfsc	status,2,c
 16887  008086  D007               	goto	u19080
 16888                           
 16889                           ; BSR set to: 1
 16890  008088  504C               	movf	_button_struct^0,w,c	;volatile
 16891  00808A  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16892  00808C  B4D8               	btfsc	status,2,c
 16893  00808E  D007               	goto	l16595
 16894                           
 16895                           ; BSR set to: 1
 16896  008090  504D               	movf	(_button_struct+1)^0,w,c	;volatile
 16897  008092  A4D8               	btfss	status,2,c
 16898  008094  D004               	goto	l16595
 16899  008096                     u19080:
 16900                           
 16901                           ; BSR set to: 1
 16902                           ;inputs_MC50.c: 495:  {;inputs_MC50.c: 496:   button_struct.processed=0;
 16903  008096  0E00               	movlw	0
 16904  008098  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 16905                           
 16906                           ;inputs_MC50.c: 497:         button_struct.timer=0;
 16907  00809A  0E00               	movlw	0
 16908  00809C  6E4E               	movwf	(_button_struct+2)^0,c	;volatile
 16909  00809E                     l16595:
 16910                           
 16911                           ; BSR set to: 1
 16912                           ;inputs_MC50.c: 500:  if ( button_struct.current != 0x37 )
 16913  00809E  0E37               	movlw	55
 16914  0080A0  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16915  0080A2  B4D8               	btfsc	status,2,c
 16916  0080A4  D007               	goto	l16603
 16917                           
 16918                           ; BSR set to: 1
 16919                           ;inputs_MC50.c: 501:  {;inputs_MC50.c: 502:   button_struct.old = button_struct.current;
 16920  0080A6  C04D  F04C         	movff	_button_struct+1,_button_struct	;volatile
 16921                           
 16922                           ; BSR set to: 1
 16923                           ;inputs_MC50.c: 504:         if ( button_struct.timer < 250 )
 16924  0080AA  0EFA               	movlw	250
 16925  0080AC  604E               	cpfslt	(_button_struct+2)^0,c	;volatile
 16926  0080AE  D004               	goto	l16605
 16927                           
 16928                           ; BSR set to: 1
 16929                           ;inputs_MC50.c: 505:         {;inputs_MC50.c: 506:             button_struct.timer++;
 16930  0080B0  2A4E               	incf	(_button_struct+2)^0,f,c	;volatile
 16931  0080B2  D002               	goto	l16605
 16932  0080B4                     l16603:
 16933                           
 16934                           ; BSR set to: 1
 16935                           ;inputs_MC50.c: 515:  {;inputs_MC50.c: 516:   button_struct.timer=0;
 16936  0080B4  0E00               	movlw	0
 16937  0080B6  6E4E               	movwf	(_button_struct+2)^0,c	;volatile
 16938  0080B8                     l16605:
 16939                           
 16940                           ; BSR set to: 1
 16941                           ;inputs_MC50.c: 520:  if ( button_struct.processed == 1 )
 16942  0080B8  044F               	decf	(_button_struct+3)^0,w,c	;volatile
 16943  0080BA  A4D8               	btfss	status,2,c
 16944  0080BC  0012               	return	
 16945                           
 16946                           ; BSR set to: 1
 16947                           ;inputs_MC50.c: 521:  {;inputs_MC50.c: 522:   button_struct.current = 0x37;
 16948  0080BE  0E37               	movlw	55
 16949  0080C0  6E4D               	movwf	(_button_struct+1)^0,c	;volatile
 16950                           
 16951                           ; BSR set to: 1
 16952  0080C2  0012               	return		;funcret
 16953  0080C4                     __end_of_readbutton:
 16954                           	callstack 0
 16955                           
 16956 ;; *************** function _read_package *****************
 16957 ;; Defined at:
 16958 ;;		line 21 in file "eusartpackage.c"
 16959 ;; Parameters:    Size  Location     Type
 16960 ;;		None
 16961 ;; Auto vars:     Size  Location     Type
 16962 ;;  package         7   23[COMRAM] struct package_t
 16963 ;; Return value:  Size  Location     Type
 16964 ;;                  7   16[COMRAM] struct package_t
 16965 ;; Registers used:
 16966 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
 16967 ;; Tracked objects:
 16968 ;;		On entry : 3F/0
 16969 ;;		On exit  : 3F/E
 16970 ;;		Unchanged: 0/0
 16971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16972 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16973 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16975 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16976 ;;Total ram usage:       14 bytes
 16977 ;; Hardware stack levels used: 1
 16978 ;; Hardware stack levels required when called: 5
 16979 ;; This function calls:
 16980 ;;		_EUSART1_Read
 16981 ;; This function is called by:
 16982 ;;		_main
 16983 ;; This function uses a non-reentrant model
 16984 ;;
 16985                           
 16986                           	psect	text57
 16987  0085C0                     __ptext57:
 16988                           	callstack 0
 16989  0085C0                     _read_package:
 16990                           	callstack 25
 16991                           
 16992                           ; BSR set to: 0
 16993                           ;eusartpackage.c: 22:         struct package_t package;;eusartpackage.c: 24:         if(
      +                          EUSART1_Read()!=0x0A){
 16994                           
 16995                           ; BSR set to: 1
 16996                           ;incstack = 0
 16997  0085C0  ECA3  F043         	call	_EUSART1_Read	;wreg free
 16998  0085C4  0A0A               	xorlw	10
 16999  0085C6  B4D8               	btfsc	status,2,c
 17000  0085C8  D00C               	goto	l16763
 17001  0085CA                     u19610:
 17002                           
 17003                           ; BSR set to: 14
 17004                           ;eusartpackage.c: 25:             package.valid=0;
 17005  0085CA  0E00               	movlw	0
 17006  0085CC  6E1E               	movwf	(read_package@package+6)^0,c
 17007                           
 17008                           ; BSR set to: 14
 17009                           ;eusartpackage.c: 26:             return package;
 17010  0085CE  EE20  F018         	lfsr	2,read_package@package
 17011  0085D2  EE00  F011         	lfsr	0,?_read_package
 17012  0085D6  0E06               	movlw	6
 17013  0085D8                     u19621:
 17014  0085D8  CFDB FFEB          	movff	plusw2,plusw0
 17015  0085DC  06E8               	decf	wreg,f,c
 17016  0085DE  E2FC               	bc	u19621
 17017  0085E0  0012               	return	
 17018  0085E2                     l16763:
 17019                           
 17020                           ; BSR set to: 14
 17021                           ;eusartpackage.c: 29:             package.startbyte=0x0A;
 17022  0085E2  0E0A               	movlw	10
 17023  0085E4  6E1C               	movwf	(read_package@package+4)^0,c
 17024                           
 17025                           ; BSR set to: 14
 17026                           ;eusartpackage.c: 32:         package.functioncode=EUSART1_Read();
 17027  0085E6  ECA3  F043         	call	_EUSART1_Read	;wreg free
 17028  0085EA  6E18               	movwf	read_package@package^0,c
 17029                           
 17030                           ; BSR set to: 14
 17031                           ;eusartpackage.c: 33:         package.address=EUSART1_Read();
 17032  0085EC  ECA3  F043         	call	_EUSART1_Read	;wreg free
 17033  0085F0  6E19               	movwf	(read_package@package+1)^0,c
 17034                           
 17035                           ; BSR set to: 14
 17036                           ;eusartpackage.c: 34:         package.data.data8[0]=EUSART1_Read();
 17037  0085F2  ECA3  F043         	call	_EUSART1_Read	;wreg free
 17038  0085F6  6E1A               	movwf	(read_package@package+2)^0,c
 17039                           
 17040                           ; BSR set to: 14
 17041                           ;eusartpackage.c: 35:         package.data.data8[1]=EUSART1_Read();
 17042  0085F8  ECA3  F043         	call	_EUSART1_Read	;wreg free
 17043  0085FC  6E1B               	movwf	(read_package@package+3)^0,c
 17044                           
 17045                           ; BSR set to: 14
 17046                           ;eusartpackage.c: 38:         if(EUSART1_Read()!=0x0D){
 17047  0085FE  ECA3  F043         	call	_EUSART1_Read	;wreg free
 17048  008602  0A0D               	xorlw	13
 17049  008604  A4D8               	btfss	status,2,c
 17050  008606  D7E1               	goto	u19610
 17051                           
 17052                           ; BSR set to: 14
 17053                           ;eusartpackage.c: 43:             package.endbyte=0x0D;
 17054  008608  0E0D               	movlw	13
 17055  00860A  6E1D               	movwf	(read_package@package+5)^0,c
 17056                           
 17057                           ; BSR set to: 14
 17058                           ;eusartpackage.c: 46:         package.valid=1;
 17059  00860C  0E01               	movlw	1
 17060  00860E  D7DE               	goto	L76
 17061  008610                     __end_of_read_package:
 17062                           	callstack 0
 17063                           
 17064 ;; *************** function _EUSART1_Read *****************
 17065 ;; Defined at:
 17066 ;;		line 151 in file "mcc_generated_files/eusart1.c"
 17067 ;; Parameters:    Size  Location     Type
 17068 ;;		None
 17069 ;; Auto vars:     Size  Location     Type
 17070 ;;  readValue       1   15[COMRAM] unsigned char 
 17071 ;; Return value:  Size  Location     Type
 17072 ;;                  1    wreg      unsigned char 
 17073 ;; Registers used:
 17074 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17075 ;; Tracked objects:
 17076 ;;		On entry : 31/0
 17077 ;;		On exit  : 3F/E
 17078 ;;		Unchanged: 0/0
 17079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17081 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17083 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17084 ;;Total ram usage:        1 bytes
 17085 ;; Hardware stack levels used: 1
 17086 ;; Hardware stack levels required when called: 4
 17087 ;; This function calls:
 17088 ;;		Nothing
 17089 ;; This function is called by:
 17090 ;;		_read_package
 17091 ;; This function uses a non-reentrant model
 17092 ;;
 17093                           
 17094                           	psect	text58
 17095  008746                     __ptext58:
 17096                           	callstack 0
 17097  008746                     _EUSART1_Read:
 17098                           	callstack 25
 17099                           
 17100                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
 17101                           
 17102                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
 17103                           
 17104                           ; BSR set to: 14
 17105                           ;incstack = 0
 17106  008746  0100               	movlb	0	; () banked
 17107  008748  5193               	movf	_eusart1RxCount& (0+255),w,b	;volatile
 17108  00874A  B4D8               	btfsc	status,2,c
 17109  00874C  D7FC               	goto	__ptext58
 17110                           
 17111                           ; BSR set to: 0
 17112                           ;mcc_generated_files/eusart1.c: 159:     eusart1RxLastError = eusart1RxStatusBuffer[eusa
      +                          rt1RxTail];
 17113  00874E  0E74               	movlw	low _eusart1RxStatusBuffer
 17114  008750  2594               	addwf	_eusart1RxTail& (0+255),w,b	;volatile
 17115  008752  6ED9               	movwf	fsr2l,c
 17116  008754  6ADA               	clrf	fsr2h,c
 17117  008756  0E02               	movlw	high _eusart1RxStatusBuffer
 17118  008758  22DA               	addwfc	fsr2h,f,c
 17119  00875A  50DF               	movf	indf2,w,c
 17120  00875C  0101               	movlb	1	; () banked
 17121  00875E  6F99               	movwf	_eusart1RxLastError& (0+255),b	;volatile
 17122                           
 17123                           ;mcc_generated_files/eusart1.c: 161:     readValue = eusart1RxBuffer[eusart1RxTail++];
 17124  008760  0E7C               	movlw	low _eusart1RxBuffer
 17125  008762  0100               	movlb	0	; () banked
 17126  008764  2594               	addwf	_eusart1RxTail& (0+255),w,b	;volatile
 17127  008766  6ED9               	movwf	fsr2l,c
 17128  008768  6ADA               	clrf	fsr2h,c
 17129  00876A  0E02               	movlw	high _eusart1RxBuffer
 17130  00876C  22DA               	addwfc	fsr2h,f,c
 17131  00876E  50DF               	movf	indf2,w,c
 17132  008770  6E10               	movwf	EUSART1_Read@readValue^0,c
 17133                           
 17134                           ; BSR set to: 0
 17135  008772  2B94               	incf	_eusart1RxTail& (0+255),f,b	;volatile
 17136                           
 17137                           ; BSR set to: 0
 17138                           ;mcc_generated_files/eusart1.c: 162:     if(sizeof(eusart1RxBuffer) <= eusart1RxTail)
 17139  008774  0E07               	movlw	7
 17140  008776  6594               	cpfsgt	_eusart1RxTail& (0+255),b
 17141  008778  D002               	goto	l13999
 17142                           
 17143                           ; BSR set to: 0
 17144                           ;mcc_generated_files/eusart1.c: 163:     {;mcc_generated_files/eusart1.c: 164:         e
      +                          usart1RxTail = 0;
 17145  00877A  0E00               	movlw	0
 17146  00877C  6F94               	movwf	_eusart1RxTail& (0+255),b	;volatile
 17147  00877E                     l13999:
 17148                           
 17149                           ; BSR set to: 0
 17150                           ;mcc_generated_files/eusart1.c: 166:     PIE3bits.RC1IE = 0;
 17151  00877E  010E               	movlb	14	; () banked
 17152  008780  9BC5               	bcf	197,5,b	;volatile
 17153                           
 17154                           ; BSR set to: 14
 17155                           ;mcc_generated_files/eusart1.c: 167:     eusart1RxCount--;
 17156  008782  0100               	movlb	0	; () banked
 17157  008784  0793               	decf	_eusart1RxCount& (0+255),f,b	;volatile
 17158                           
 17159                           ; BSR set to: 0
 17160                           ;mcc_generated_files/eusart1.c: 168:     PIE3bits.RC1IE = 1;
 17161  008786  010E               	movlb	14	; () banked
 17162  008788  8BC5               	bsf	197,5,b	;volatile
 17163                           
 17164                           ; BSR set to: 14
 17165                           ;mcc_generated_files/eusart1.c: 170:     return readValue;
 17166  00878A  5010               	movf	EUSART1_Read@readValue^0,w,c
 17167                           
 17168                           ; BSR set to: 14
 17169  00878C  0012               	return		;funcret
 17170  00878E                     __end_of_EUSART1_Read:
 17171                           	callstack 0
 17172                           
 17173 ;; *************** function _readRFButtons *****************
 17174 ;; Defined at:
 17175 ;;		line 231 in file "inputs_MC50.c"
 17176 ;; Parameters:    Size  Location     Type
 17177 ;;		None
 17178 ;; Auto vars:     Size  Location     Type
 17179 ;;		None
 17180 ;; Return value:  Size  Location     Type
 17181 ;;                  1    wreg      void 
 17182 ;; Registers used:
 17183 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 17184 ;; Tracked objects:
 17185 ;;		On entry : 3F/1
 17186 ;;		On exit  : 3E/0
 17187 ;;		Unchanged: 0/0
 17188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17190 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17192 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17193 ;;Total ram usage:        0 bytes
 17194 ;; Hardware stack levels used: 1
 17195 ;; Hardware stack levels required when called: 15
 17196 ;; This function calls:
 17197 ;;		_DecryptPacket_12BIT
 17198 ;;		_keeloqDecryptPacket
 17199 ;; This function is called by:
 17200 ;;		_main
 17201 ;; This function uses a non-reentrant model
 17202 ;;
 17203                           
 17204                           	psect	text59
 17205  0059D0                     __ptext59:
 17206                           	callstack 0
 17207  0059D0                     _readRFButtons:
 17208                           	callstack 15
 17209                           
 17210                           ; BSR set to: 1
 17211                           ;inputs_MC50.c: 232:     static unsigned char key1 = 0;;inputs_MC50.c: 233:     static u
      +                          int32_t serial = 0;;inputs_MC50.c: 234:     static uint16_t rollingCode= 0;;inputs_MC50.
      +                          c: 235:     static TypeCMD keyType = 0;;inputs_MC50.c: 236:     static TypeRemote_st typ
      +                          eRemote;;inputs_MC50.c: 241:     if(RFFull)
 17212                           
 17213                           ; BSR set to: 14
 17214                           ;incstack = 0
 17215  0059D0  0100               	movlb	0	; () banked
 17216  0059D2  518B               	movf	_RFFull& (0+255),w,b	;volatile
 17217  0059D4  B4D8               	btfsc	status,2,c
 17218  0059D6  D0B9               	goto	l22745
 17219                           
 17220                           ; BSR set to: 0
 17221                           ;inputs_MC50.c: 242:     {;inputs_MC50.c: 244:          if(RFFull_12BIT==0)
 17222  0059D8  518A               	movf	_RFFull_12BIT& (0+255),w,b	;volatile
 17223  0059DA  A4D8               	btfss	status,2,c
 17224  0059DC  D00B               	goto	l22691
 17225                           
 17226                           ; BSR set to: 0
 17227                           ;inputs_MC50.c: 245:          {;inputs_MC50.c: 246:             keyType = keeloqDecryptP
      +                          acket(BufferRF,&classic_data);
 17228  0059DE  0EC8               	movlw	low _BufferRF
 17229  0059E0  6FE0               	movwf	keeloqDecryptPacket@data& (0+255),b
 17230  0059E2  0E02               	movlw	high _BufferRF
 17231  0059E4  6FE1               	movwf	(keeloqDecryptPacket@data+1)& (0+255),b
 17232  0059E6  0E92               	movlw	low _classic_data
 17233  0059E8  6FE2               	movwf	keeloqDecryptPacket@classic_data& (0+255),b
 17234  0059EA  0E02               	movlw	high _classic_data
 17235  0059EC  6FE3               	movwf	(keeloqDecryptPacket@classic_data+1)& (0+255),b
 17236  0059EE  ECE3  F027         	call	_keeloqDecryptPacket	;wreg free
 17237  0059F2  D00A               	goto	L77
 17238  0059F4                     l22691:
 17239                           
 17240                           ; BSR set to: 0
 17241                           ;inputs_MC50.c: 249:          {;inputs_MC50.c: 250:             keyType = DecryptPacket_
      +                          12BIT(BufferRF,&classic_data);
 17242  0059F4  0EC8               	movlw	low _BufferRF
 17243  0059F6  6FE0               	movwf	DecryptPacket_12BIT@data& (0+255),b
 17244  0059F8  0E02               	movlw	high _BufferRF
 17245  0059FA  6FE1               	movwf	(DecryptPacket_12BIT@data+1)& (0+255),b
 17246  0059FC  0E92               	movlw	low _classic_data
 17247  0059FE  6FE2               	movwf	DecryptPacket_12BIT@classic_data& (0+255),b
 17248  005A00  0E02               	movlw	high _classic_data
 17249  005A02  6FE3               	movwf	(DecryptPacket_12BIT@classic_data+1)& (0+255),b
 17250  005A04  EC48  F03B         	call	_DecryptPacket_12BIT	;wreg free
 17251  005A08                     L77:
 17252  005A08  6F87               	movwf	readRFButtons@keyType& (0+255),b
 17253                           
 17254                           ; BSR set to: 0
 17255                           ;inputs_MC50.c: 254:         key1 = classic_data.fcode1;
 17256  005A0A  C29E  F088         	movff	_classic_data+12,readRFButtons@key1
 17257                           
 17258                           ; BSR set to: 0
 17259                           ;inputs_MC50.c: 255:         serial = classic_data.serialnumber;
 17260  005A0E  C296  F181         	movff	_classic_data+4,readRFButtons@serial
 17261  005A12  C297  F182         	movff	_classic_data+5,readRFButtons@serial+1
 17262  005A16  C298  F183         	movff	_classic_data+6,readRFButtons@serial+2
 17263  005A1A  C299  F184         	movff	_classic_data+7,readRFButtons@serial+3
 17264                           
 17265                           ; BSR set to: 0
 17266                           ;inputs_MC50.c: 256:         rollingCode = classic_data.sync;
 17267  005A1E  C29A  F185         	movff	_classic_data+8,readRFButtons@rollingCode
 17268  005A22  C29B  F186         	movff	_classic_data+9,readRFButtons@rollingCode+1
 17269                           
 17270                           ; BSR set to: 0
 17271                           ;inputs_MC50.c: 257:         typeRemote = classic_data.type;
 17272  005A26  C2A0  F197         	movff	_classic_data+14,readRFButtons@typeRemote
 17273                           
 17274                           ; BSR set to: 0
 17275                           ;inputs_MC50.c: 270:         if (var_sys.LearningIsEnabled == YES){
 17276  005A2A  0101               	movlb	1	; () banked
 17277  005A2C  0526               	decf	(_var_sys+38)& (0+255),w,b	;volatile
 17278  005A2E  A4D8               	btfss	status,2,c
 17279  005A30  D01E               	goto	l22713
 17280                           
 17281                           ; BSR set to: 1
 17282                           ;inputs_MC50.c: 272:              if (keyType==NoCMD || rfCMD.currentKey!=key1 || rfCMD.
      +                          currentSerial!=serial || keyType!=rfCMD.currentType)
 17283  005A32  0100               	movlb	0	; () banked
 17284  005A34  5187               	movf	readRFButtons@keyType& (0+255),w,b
 17285  005A36  B4D8               	btfsc	status,2,c
 17286  005A38  D044               	goto	u27680
 17287                           
 17288                           ; BSR set to: 0
 17289  005A3A  5188               	movf	readRFButtons@key1& (0+255),w,b
 17290  005A3C  183C               	xorwf	(_rfCMD+1)^0,w,c	;volatile
 17291  005A3E  A4D8               	btfss	status,2,c
 17292  005A40  D040               	goto	u27680
 17293                           
 17294                           ; BSR set to: 0
 17295  005A42  0101               	movlb	1	; () banked
 17296  005A44  5181               	movf	readRFButtons@serial& (0+255),w,b
 17297  005A46  183D               	xorwf	(_rfCMD+2)^0,w,c	;volatile
 17298  005A48  E13C               	bnz	l22725
 17299  005A4A  5182               	movf	(readRFButtons@serial+1)& (0+255),w,b
 17300  005A4C  183E               	xorwf	(_rfCMD+3)^0,w,c	;volatile
 17301  005A4E  E139               	bnz	l22725
 17302  005A50  5183               	movf	(readRFButtons@serial+2)& (0+255),w,b
 17303  005A52  183F               	xorwf	(_rfCMD+4)^0,w,c	;volatile
 17304  005A54  E136               	bnz	l22725
 17305  005A56  5184               	movf	(readRFButtons@serial+3)& (0+255),w,b
 17306  005A58  1840               	xorwf	(_rfCMD+5)^0,w,c	;volatile
 17307  005A5A  A4D8               	btfss	status,2,c
 17308  005A5C  D032               	goto	u27680
 17309                           
 17310                           ; BSR set to: 1
 17311  005A5E  0100               	movlb	0	; () banked
 17312  005A60  5187               	movf	readRFButtons@keyType& (0+255),w,b
 17313  005A62  183B               	xorwf	_rfCMD^0,w,c	;volatile
 17314  005A64  A4D8               	btfss	status,2,c
 17315  005A66  D02D               	goto	u27680
 17316  005A68                     l1649:
 17317                           
 17318                           ;inputs_MC50.c: 274:                 rfCMD.timer=0;
 17319  005A68  0E00               	movlw	0
 17320  005A6A  6E44               	movwf	(_rfCMD+9)^0,c	;volatile
 17321                           
 17322                           ;inputs_MC50.c: 275:         }
 17323  005A6C  D038               	goto	l1652
 17324  005A6E                     l22713:
 17325                           
 17326                           ; BSR set to: 1
 17327  005A6E  0100               	movlb	0	; () banked
 17328  005A70  5187               	movf	readRFButtons@keyType& (0+255),w,b
 17329  005A72  B4D8               	btfsc	status,2,c
 17330  005A74  D026               	goto	u27680
 17331                           
 17332                           ; BSR set to: 0
 17333  005A76  5187               	movf	readRFButtons@keyType& (0+255),w,b
 17334  005A78  183B               	xorwf	_rfCMD^0,w,c	;volatile
 17335  005A7A  B4D8               	btfsc	status,2,c
 17336  005A7C  D00F               	goto	u27660
 17337                           
 17338                           ; BSR set to: 0
 17339  005A7E  0101               	movlb	1	; () banked
 17340  005A80  BFAF               	btfsc	(_ts_system+21)& (0+255),7,b	;volatile
 17341  005A82  D005               	goto	u27650
 17342  005A84  51AF               	movf	(_ts_system+21)& (0+255),w,b	;volatile
 17343  005A86  E10A               	bnz	l22721
 17344  005A88  05AE               	decf	(_ts_system+20)& (0+255),w,b	;volatile
 17345  005A8A  B0D8               	btfsc	status,0,c
 17346  005A8C  D007               	goto	u27660
 17347  005A8E                     u27650:
 17348                           
 17349                           ; BSR set to: 1
 17350  005A8E  5185               	movf	readRFButtons@rollingCode& (0+255),w,b
 17351  005A90  1841               	xorwf	(_rfCMD+6)^0,w,c	;volatile
 17352  005A92  E117               	bnz	l22725
 17353  005A94  5186               	movf	(readRFButtons@rollingCode+1)& (0+255),w,b
 17354  005A96  1842               	xorwf	(_rfCMD+7)^0,w,c	;volatile
 17355  005A98  A4D8               	btfss	status,2,c
 17356  005A9A  D013               	goto	u27680
 17357  005A9C                     u27660:
 17358  005A9C                     l22721:
 17359  005A9C  0100               	movlb	0	; () banked
 17360  005A9E  5188               	movf	readRFButtons@key1& (0+255),w,b
 17361  005AA0  183C               	xorwf	(_rfCMD+1)^0,w,c	;volatile
 17362  005AA2  A4D8               	btfss	status,2,c
 17363  005AA4  D00E               	goto	u27680
 17364                           
 17365                           ; BSR set to: 0
 17366  005AA6  0101               	movlb	1	; () banked
 17367  005AA8  5181               	movf	readRFButtons@serial& (0+255),w,b
 17368  005AAA  183D               	xorwf	(_rfCMD+2)^0,w,c	;volatile
 17369  005AAC  E10A               	bnz	u27680
 17370  005AAE  5182               	movf	(readRFButtons@serial+1)& (0+255),w,b
 17371  005AB0  183E               	xorwf	(_rfCMD+3)^0,w,c	;volatile
 17372  005AB2  E107               	bnz	u27680
 17373  005AB4  5183               	movf	(readRFButtons@serial+2)& (0+255),w,b
 17374  005AB6  183F               	xorwf	(_rfCMD+4)^0,w,c	;volatile
 17375  005AB8  E104               	bnz	u27680
 17376  005ABA  5184               	movf	(readRFButtons@serial+3)& (0+255),w,b
 17377  005ABC  1840               	xorwf	(_rfCMD+5)^0,w,c	;volatile
 17378  005ABE  B4D8               	btfsc	status,2,c
 17379  005AC0  D003               	goto	l22727
 17380  005AC2                     u27680:
 17381  005AC2                     l22725:
 17382                           
 17383                           ;inputs_MC50.c: 278:         {;inputs_MC50.c: 279:            rfCMD.processed=0;
 17384  005AC2  0E00               	movlw	0
 17385  005AC4  6E45               	movwf	(_rfCMD+10)^0,c	;volatile
 17386  005AC6  D7D0               	goto	l1649
 17387  005AC8                     l22727:
 17388                           
 17389                           ; BSR set to: 1
 17390  005AC8  BFAF               	btfsc	(_ts_system+21)& (0+255),7,b	;volatile
 17391  005ACA  D005               	goto	u27690
 17392  005ACC  51AF               	movf	(_ts_system+21)& (0+255),w,b	;volatile
 17393  005ACE  E107               	bnz	l1652
 17394  005AD0  05AE               	decf	(_ts_system+20)& (0+255),w,b	;volatile
 17395  005AD2  B0D8               	btfsc	status,0,c
 17396  005AD4  D004               	goto	l1652
 17397  005AD6                     u27690:
 17398                           
 17399                           ; BSR set to: 1
 17400  005AD6  0E02               	movlw	2
 17401  005AD8  1997               	xorwf	readRFButtons@typeRemote& (0+255),w,b
 17402  005ADA  B4D8               	btfsc	status,2,c
 17403  005ADC  D7F2               	goto	u27680
 17404  005ADE                     l1652:
 17405                           
 17406                           ;inputs_MC50.c: 289:         ts_system.TimeLastCommand=( 500/50);
 17407  005ADE  0E00               	movlw	0
 17408  005AE0  0101               	movlb	1	; () banked
 17409  005AE2  6FAF               	movwf	(_ts_system+21)& (0+255),b	;volatile
 17410  005AE4  0E0A               	movlw	10
 17411  005AE6  6FAE               	movwf	(_ts_system+20)& (0+255),b	;volatile
 17412                           
 17413                           ; BSR set to: 1
 17414                           ;inputs_MC50.c: 291:         rfCMD.currentType=keyType;
 17415  005AE8  C087  F03B         	movff	readRFButtons@keyType,_rfCMD	;volatile
 17416                           
 17417                           ;inputs_MC50.c: 292:         if
 17418  005AEC  503B               	movf	_rfCMD^0,w,c	;volatile
 17419  005AEE  B4D8               	btfsc	status,2,c
 17420  005AF0  D01A               	goto	u27740
 17421                           
 17422                           ; BSR set to: 1
 17423  005AF2  0100               	movlb	0	; () banked
 17424  005AF4  5188               	movf	readRFButtons@key1& (0+255),w,b
 17425  005AF6  183C               	xorwf	(_rfCMD+1)^0,w,c	;volatile
 17426  005AF8  A4D8               	btfss	status,2,c
 17427  005AFA  D015               	goto	u27740
 17428                           
 17429                           ; BSR set to: 0
 17430  005AFC  0101               	movlb	1	; () banked
 17431  005AFE  5181               	movf	readRFButtons@serial& (0+255),w,b
 17432  005B00  183D               	xorwf	(_rfCMD+2)^0,w,c	;volatile
 17433  005B02  E111               	bnz	l1662
 17434  005B04  5182               	movf	(readRFButtons@serial+1)& (0+255),w,b
 17435  005B06  183E               	xorwf	(_rfCMD+3)^0,w,c	;volatile
 17436  005B08  E10E               	bnz	l1662
 17437  005B0A  5183               	movf	(readRFButtons@serial+2)& (0+255),w,b
 17438  005B0C  183F               	xorwf	(_rfCMD+4)^0,w,c	;volatile
 17439  005B0E  E10B               	bnz	l1662
 17440  005B10  5184               	movf	(readRFButtons@serial+3)& (0+255),w,b
 17441  005B12  1840               	xorwf	(_rfCMD+5)^0,w,c	;volatile
 17442  005B14  A4D8               	btfss	status,2,c
 17443  005B16  D007               	goto	u27740
 17444                           
 17445                           ; BSR set to: 1
 17446  005B18  5185               	movf	readRFButtons@rollingCode& (0+255),w,b
 17447  005B1A  1841               	xorwf	(_rfCMD+6)^0,w,c	;volatile
 17448  005B1C  E104               	bnz	u27740
 17449  005B1E  5186               	movf	(readRFButtons@rollingCode+1)& (0+255),w,b
 17450  005B20  1842               	xorwf	(_rfCMD+7)^0,w,c	;volatile
 17451  005B22  B4D8               	btfsc	status,2,c
 17452  005B24  D00E               	goto	l22743
 17453  005B26                     u27740:
 17454  005B26                     l1662:
 17455                           
 17456                           ;inputs_MC50.c: 299:         {;inputs_MC50.c: 300:             rfCMD.currentKey=key1;
 17457  005B26  C088  F03C         	movff	readRFButtons@key1,_rfCMD+1	;volatile
 17458                           
 17459                           ;inputs_MC50.c: 301:             rfCMD.currentSerial=serial;
 17460  005B2A  C181  F03D         	movff	readRFButtons@serial,_rfCMD+2	;volatile
 17461  005B2E  C182  F03E         	movff	readRFButtons@serial+1,_rfCMD+3	;volatile
 17462  005B32  C183  F03F         	movff	readRFButtons@serial+2,_rfCMD+4	;volatile
 17463  005B36  C184  F040         	movff	readRFButtons@serial+3,_rfCMD+5	;volatile
 17464                           
 17465                           ;inputs_MC50.c: 302:             rfCMD.currentPosMem=classic_data.positionMem;
 17466  005B3A  C2A1  F043         	movff	_classic_data+15,_rfCMD+8	;volatile
 17467                           
 17468                           ;inputs_MC50.c: 303:             rfCMD.timer=0;
 17469  005B3E  0E00               	movlw	0
 17470  005B40  6E44               	movwf	(_rfCMD+9)^0,c	;volatile
 17471  005B42                     l22743:
 17472                           
 17473                           ;inputs_MC50.c: 305:         rfCMD.currentRolling=rollingCode;
 17474  005B42  C185  F041         	movff	readRFButtons@rollingCode,_rfCMD+6	;volatile
 17475  005B46  C186  F042         	movff	readRFButtons@rollingCode+1,_rfCMD+7	;volatile
 17476  005B4A                     l22745:
 17477                           
 17478                           ;inputs_MC50.c: 310:     if(rfCMD.processed == 1)
 17479  005B4A  0445               	decf	(_rfCMD+10)^0,w,c	;volatile
 17480  005B4C  A4D8               	btfss	status,2,c
 17481  005B4E  D003               	goto	l22749
 17482                           
 17483                           ;inputs_MC50.c: 311:     {;inputs_MC50.c: 312:        rfCMD.currentType = NoCMD;
 17484  005B50  0E00               	movlw	0
 17485  005B52  6E3B               	movwf	_rfCMD^0,c	;volatile
 17486                           
 17487                           ;inputs_MC50.c: 313:     }
 17488  005B54  0012               	return	
 17489  005B56                     l22749:
 17490  005B56  503B               	movf	_rfCMD^0,w,c	;volatile
 17491  005B58  B4D8               	btfsc	status,2,c
 17492  005B5A  0012               	return	
 17493                           
 17494                           ;inputs_MC50.c: 315:     {;inputs_MC50.c: 317:         if ( rfCMD.timer < 250 )
 17495  005B5C  0EFA               	movlw	250
 17496  005B5E  6044               	cpfslt	(_rfCMD+9)^0,c	;volatile
 17497  005B60  0012               	return	
 17498                           
 17499                           ;inputs_MC50.c: 318:         {;inputs_MC50.c: 319:             rfCMD.timer++;
 17500  005B62  2A44               	incf	(_rfCMD+9)^0,f,c	;volatile
 17501  005B64  0012               	return		;funcret
 17502  005B66                     __end_of_readRFButtons:
 17503                           	callstack 0
 17504                           
 17505 ;; *************** function _keeloqDecryptPacket *****************
 17506 ;; Defined at:
 17507 ;;		line 299 in file "keeloqDecrypt_MC50.c"
 17508 ;; Parameters:    Size  Location     Type
 17509 ;;  data            2    8[BANK0 ] PTR unsigned char 
 17510 ;;		 -> BufferRF(9), 
 17511 ;;  classic_data    2   10[BANK0 ] PTR struct .
 17512 ;;		 -> classic_data(16), 
 17513 ;; Auto vars:     Size  Location     Type
 17514 ;;  commandType     1   17[BANK0 ] enum E10539
 17515 ;;  hop_error       1   16[BANK0 ] enum E10730
 17516 ;; Return value:  Size  Location     Type
 17517 ;;                  1    wreg      enum E10539
 17518 ;; Registers used:
 17519 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 17520 ;; Tracked objects:
 17521 ;;		On entry : 3F/0
 17522 ;;		On exit  : 3F/0
 17523 ;;		Unchanged: 0/0
 17524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17525 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17526 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17527 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17528 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17529 ;;Total ram usage:       10 bytes
 17530 ;; Hardware stack levels used: 1
 17531 ;; Hardware stack levels required when called: 14
 17532 ;; This function calls:
 17533 ;;		_DecCHK
 17534 ;;		_HopCHK
 17535 ;;		_keeloq_classic_decrypt_packet
 17536 ;;		_memcpy
 17537 ;;		_validateRemoteSerialNumber
 17538 ;;		_verifyProgramingMode
 17539 ;; This function is called by:
 17540 ;;		_readRFButtons
 17541 ;; This function uses a non-reentrant model
 17542 ;;
 17543                           
 17544                           	psect	text60
 17545  004FC6                     __ptext60:
 17546                           	callstack 0
 17547  004FC6                     _keeloqDecryptPacket:
 17548                           	callstack 15
 17549                           
 17550                           ; BSR set to: 0
 17551                           ;keeloqDecrypt_MC50.c: 299: TypeCMD keeloqDecryptPacket (char* data,classic_encoder_t* c
      +                          lassic_data);keeloqDecrypt_MC50.c: 300: {;keeloqDecrypt_MC50.c: 301:     result_code_t h
      +                          op_error;;keeloqDecrypt_MC50.c: 302:     TypeCMD commandType;;keeloqDecrypt_MC50.c: 303:
      +                               memcpy(classic_data, data, 8);
 17552                           
 17553                           ;incstack = 0
 17554  004FC6  C0E2  F010         	movff	keeloqDecryptPacket@classic_data,memcpy@d1
 17555  004FCA  C0E3  F011         	movff	keeloqDecryptPacket@classic_data+1,memcpy@d1+1
 17556  004FCE  C0E0  F012         	movff	keeloqDecryptPacket@data,memcpy@s1
 17557  004FD2  C0E1  F013         	movff	keeloqDecryptPacket@data+1,memcpy@s1+1
 17558  004FD6  0E00               	movlw	0
 17559  004FD8  6E15               	movwf	(memcpy@n+1)^0,c
 17560  004FDA  0E08               	movlw	8
 17561  004FDC  6E14               	movwf	memcpy@n^0,c
 17562  004FDE  EC0C  F044         	call	_memcpy	;wreg free
 17563                           
 17564                           ;keeloqDecrypt_MC50.c: 304:     memcpy(&classic_data->sync, &classic_data->raw_data, 4);
 17565  004FE2  0E08               	movlw	8
 17566  004FE4  0100               	movlb	0	; () banked
 17567  004FE6  25E2               	addwf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17568  004FE8  6E10               	movwf	memcpy@d1^0,c
 17569  004FEA  0E00               	movlw	0
 17570  004FEC  21E3               	addwfc	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17571  004FEE  6E11               	movwf	(memcpy@d1+1)^0,c
 17572  004FF0  C0E2  F012         	movff	keeloqDecryptPacket@classic_data,memcpy@s1
 17573  004FF4  C0E3  F013         	movff	keeloqDecryptPacket@classic_data+1,memcpy@s1+1
 17574  004FF8  0E00               	movlw	0
 17575  004FFA  6E15               	movwf	(memcpy@n+1)^0,c
 17576  004FFC  0E04               	movlw	4
 17577  004FFE  6E14               	movwf	memcpy@n^0,c
 17578  005000  EC0C  F044         	call	_memcpy	;wreg free
 17579                           
 17580                           ;keeloqDecrypt_MC50.c: 305:     classic_data->fcode1 = *((uint8_t *) (&classic_data->ser
      +                          ialnumber) + 3) >> 4;
 17581  005004  0100               	movlb	0	; () banked
 17582  005006  EE20 F00C          	lfsr	2,12
 17583  00500A  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17584  00500C  26D9               	addwf	fsr2l,f,c
 17585  00500E  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17586  005010  22DA               	addwfc	fsr2h,f,c
 17587  005012  EE10 F007          	lfsr	1,7
 17588  005016  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17589  005018  26E1               	addwf	fsr1l,f,c
 17590  00501A  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17591  00501C  22E2               	addwfc	fsr1h,f,c
 17592  00501E  50E7               	movf	indf1,w,c
 17593  005020  6FE4               	movwf	??_keeloqDecryptPacket& (0+255),b
 17594  005022  39E4               	swapf	??_keeloqDecryptPacket& (0+255),w,b
 17595  005024  0B0F               	andlw	15
 17596  005026  6EDF               	movwf	indf2,c
 17597                           
 17598                           ; BSR set to: 0
 17599                           ;keeloqDecrypt_MC50.c: 306:     commandType=verifyProgramingMode(classic_data);
 17600  005028  C0E2  F010         	movff	keeloqDecryptPacket@classic_data,verifyProgramingMode@classic_data
 17601  00502C  C0E3  F011         	movff	keeloqDecryptPacket@classic_data+1,verifyProgramingMode@classic_data+1
 17602  005030  EC26  F045         	call	_verifyProgramingMode	;wreg free
 17603  005034  6FE9               	movwf	keeloqDecryptPacket@commandType& (0+255),b
 17604                           
 17605                           ; BSR set to: 0
 17606                           ;keeloqDecrypt_MC50.c: 308:     if(commandType==NoCMD)
 17607  005036  51E9               	movf	keeloqDecryptPacket@commandType& (0+255),w,b
 17608  005038  A4D8               	btfss	status,2,c
 17609  00503A  D019               	goto	l21229
 17610                           
 17611                           ; BSR set to: 0
 17612                           ;keeloqDecrypt_MC50.c: 309:     {;keeloqDecrypt_MC50.c: 310:         commandType=validat
      +                          eRemoteSerialNumber(classic_data->serialnumber,NO,&classic_data->positionMem);
 17613  00503C  EE20 F004          	lfsr	2,4
 17614  005040  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17615  005042  26D9               	addwf	fsr2l,f,c
 17616  005044  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17617  005046  22DA               	addwfc	fsr2h,f,c
 17618  005048  CFDE F02E          	movff	postinc2,validateRemoteSerialNumber@serial
 17619  00504C  CFDE F02F          	movff	postinc2,validateRemoteSerialNumber@serial+1
 17620  005050  CFDE F030          	movff	postinc2,validateRemoteSerialNumber@serial+2
 17621  005054  CFDE F031          	movff	postinc2,validateRemoteSerialNumber@serial+3
 17622  005058  0E00               	movlw	0
 17623  00505A  6E32               	movwf	validateRemoteSerialNumber@VerifyOnlySerial^0,c
 17624  00505C  0E0F               	movlw	15
 17625  00505E  25E2               	addwf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17626  005060  6E33               	movwf	validateRemoteSerialNumber@position^0,c
 17627  005062  0E00               	movlw	0
 17628  005064  21E3               	addwfc	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17629  005066  6E34               	movwf	(validateRemoteSerialNumber@position+1)^0,c
 17630  005068  EC80  F02A         	call	_validateRemoteSerialNumber	;wreg free
 17631  00506C  D004               	goto	L78
 17632  00506E                     l21229:
 17633                           
 17634                           ; BSR set to: 0
 17635  00506E  51A6               	movf	(_var_sys_NVM+14)& (0+255),w,b	;volatile
 17636  005070  A4D8               	btfss	status,2,c
 17637  005072  D002               	goto	l21233
 17638                           
 17639                           ; BSR set to: 0
 17640                           ;keeloqDecrypt_MC50.c: 313:     {;keeloqDecrypt_MC50.c: 314:         commandType=NoCMD;
 17641  005074  0E00               	movlw	0
 17642  005076                     L78:
 17643  005076  6FE9               	movwf	keeloqDecryptPacket@commandType& (0+255),b
 17644  005078                     l21233:
 17645                           
 17646                           ; BSR set to: 0
 17647                           ;keeloqDecrypt_MC50.c: 316:     classic_data->serialnumber = classic_data->serialnumber 
      +                          & 0x0FFFFFFF;
 17648  005078  EE20 F004          	lfsr	2,4
 17649  00507C  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17650  00507E  26D9               	addwf	fsr2l,f,c
 17651  005080  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17652  005082  22DA               	addwfc	fsr2h,f,c
 17653  005084  0EFF               	movlw	255
 17654  005086  14DE               	andwf	postinc2,w,c
 17655  005088  6FE4               	movwf	??_keeloqDecryptPacket& (0+255),b
 17656  00508A  0EFF               	movlw	255
 17657  00508C  14DE               	andwf	postinc2,w,c
 17658  00508E  6FE5               	movwf	(??_keeloqDecryptPacket+1)& (0+255),b
 17659  005090  0EFF               	movlw	255
 17660  005092  14DE               	andwf	postinc2,w,c
 17661  005094  6FE6               	movwf	(??_keeloqDecryptPacket+2)& (0+255),b
 17662  005096  0E0F               	movlw	15
 17663  005098  14DE               	andwf	postinc2,w,c
 17664  00509A  6FE7               	movwf	(??_keeloqDecryptPacket+3)& (0+255),b
 17665  00509C  EE20 F004          	lfsr	2,4
 17666  0050A0  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17667  0050A2  26D9               	addwf	fsr2l,f,c
 17668  0050A4  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17669  0050A6  22DA               	addwfc	fsr2h,f,c
 17670  0050A8  C0E4  FFDE         	movff	??_keeloqDecryptPacket,postinc2
 17671  0050AC  C0E5  FFDE         	movff	??_keeloqDecryptPacket+1,postinc2
 17672  0050B0  C0E6  FFDE         	movff	??_keeloqDecryptPacket+2,postinc2
 17673  0050B4  C0E7  FFDE         	movff	??_keeloqDecryptPacket+3,postinc2
 17674                           
 17675                           ; BSR set to: 0
 17676                           ;keeloqDecrypt_MC50.c: 318:     keeloq_classic_decrypt_packet(classic_data);
 17677  0050B8  C0E2  F038         	movff	keeloqDecryptPacket@classic_data,keeloq_classic_decrypt_packet@data
 17678  0050BC  C0E3  F039         	movff	keeloqDecryptPacket@classic_data+1,keeloq_classic_decrypt_packet@data+1
 17679  0050C0  ECE0  F041         	call	_keeloq_classic_decrypt_packet	;wreg free
 17680                           
 17681                           ; BSR set to: 0
 17682                           ;keeloqDecrypt_MC50.c: 320:     if(commandType==NoCMD )
 17683  0050C4  51E9               	movf	keeloqDecryptPacket@commandType& (0+255),w,b
 17684  0050C6  A4D8               	btfss	status,2,c
 17685  0050C8  D01B               	goto	l21251
 17686                           
 17687                           ; BSR set to: 0
 17688                           ;keeloqDecrypt_MC50.c: 321:     {;keeloqDecrypt_MC50.c: 323:         if (DecCHK(classic_
      +                          data) == 0) {
 17689  0050CA  C0E2  F010         	movff	keeloqDecryptPacket@classic_data,DecCHK@data
 17690  0050CE  C0E3  F011         	movff	keeloqDecryptPacket@classic_data+1,DecCHK@data+1
 17691  0050D2  EC40  F045         	call	_DecCHK	;wreg free
 17692  0050D6  0900               	iorlw	0
 17693  0050D8  A4D8               	btfss	status,2,c
 17694  0050DA  D008               	goto	l21243
 17695                           
 17696                           ; BSR set to: 0
 17697                           ;keeloqDecrypt_MC50.c: 324:             classic_data->type=Keeloq_NoRollingCode;
 17698  0050DC  EE20 F00E          	lfsr	2,14
 17699  0050E0  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17700  0050E2  26D9               	addwf	fsr2l,f,c
 17701  0050E4  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17702  0050E6  22DA               	addwfc	fsr2h,f,c
 17703  0050E8  0E01               	movlw	1
 17704  0050EA  D007               	goto	L79
 17705  0050EC                     l21243:
 17706                           
 17707                           ; BSR set to: 0
 17708                           ;keeloqDecrypt_MC50.c: 328:         {;keeloqDecrypt_MC50.c: 329:             classic_dat
      +                          a->type=Keeloq_RollingCode;
 17709  0050EC  EE20 F00E          	lfsr	2,14
 17710  0050F0  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17711  0050F2  26D9               	addwf	fsr2l,f,c
 17712  0050F4  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17713  0050F6  22DA               	addwfc	fsr2h,f,c
 17714  0050F8  0E00               	movlw	0
 17715  0050FA                     L79:
 17716  0050FA  6EDF               	movwf	indf2,c
 17717  0050FC                     l21245:
 17718                           
 17719                           ; BSR set to: 0
 17720                           ;keeloqDecrypt_MC50.c: 331:         return NoCMD;
 17721  0050FC  0E00               	movlw	0
 17722  0050FE  0012               	return	
 17723  005100                     l21251:
 17724                           
 17725                           ; BSR set to: 0
 17726  005100  0E06               	movlw	6
 17727  005102  19E9               	xorwf	keeloqDecryptPacket@commandType& (0+255),w,b
 17728  005104  B4D8               	btfsc	status,2,c
 17729  005106  D004               	goto	u24640
 17730                           
 17731                           ; BSR set to: 0
 17732  005108  0E05               	movlw	5
 17733  00510A  19E9               	xorwf	keeloqDecryptPacket@commandType& (0+255),w,b
 17734  00510C  A4D8               	btfss	status,2,c
 17735  00510E  D01B               	goto	l21261
 17736  005110                     u24640:
 17737                           
 17738                           ; BSR set to: 0
 17739                           ;keeloqDecrypt_MC50.c: 334:     {;keeloqDecrypt_MC50.c: 335:         if(validateRemoteSe
      +                          rialNumber(classic_data->serialnumber,YES,&classic_data->positionMem)==NoCMD)
 17740  005110  EE20 F004          	lfsr	2,4
 17741  005114  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17742  005116  26D9               	addwf	fsr2l,f,c
 17743  005118  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17744  00511A  22DA               	addwfc	fsr2h,f,c
 17745  00511C  CFDE F02E          	movff	postinc2,validateRemoteSerialNumber@serial
 17746  005120  CFDE F02F          	movff	postinc2,validateRemoteSerialNumber@serial+1
 17747  005124  CFDE F030          	movff	postinc2,validateRemoteSerialNumber@serial+2
 17748  005128  CFDE F031          	movff	postinc2,validateRemoteSerialNumber@serial+3
 17749  00512C  0E01               	movlw	1
 17750  00512E  6E32               	movwf	validateRemoteSerialNumber@VerifyOnlySerial^0,c
 17751  005130  0E0F               	movlw	15
 17752  005132  25E2               	addwf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17753  005134  6E33               	movwf	validateRemoteSerialNumber@position^0,c
 17754  005136  0E00               	movlw	0
 17755  005138  21E3               	addwfc	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17756  00513A  6E34               	movwf	(validateRemoteSerialNumber@position+1)^0,c
 17757  00513C  EC80  F02A         	call	_validateRemoteSerialNumber	;wreg free
 17758  005140  0900               	iorlw	0
 17759  005142  B4D8               	btfsc	status,2,c
 17760  005144  D7DB               	goto	l21245
 17761  005146                     l21261:
 17762                           
 17763                           ; BSR set to: 0
 17764                           ;keeloqDecrypt_MC50.c: 344:     if (DecCHK(classic_data) == 0)
 17765  005146  C0E2  F010         	movff	keeloqDecryptPacket@classic_data,DecCHK@data
 17766  00514A  C0E3  F011         	movff	keeloqDecryptPacket@classic_data+1,DecCHK@data+1
 17767  00514E  EC40  F045         	call	_DecCHK	;wreg free
 17768  005152  0900               	iorlw	0
 17769  005154  A4D8               	btfss	status,2,c
 17770  005156  D00D               	goto	l21277
 17771                           
 17772                           ; BSR set to: 0
 17773                           ;keeloqDecrypt_MC50.c: 345:     {;keeloqDecrypt_MC50.c: 346:         if(var_sys_NVM.Only
      +                          RollingCode==YES) {
 17774  005158  05BE               	decf	(_var_sys_NVM+38)& (0+255),w,b	;volatile
 17775  00515A  B4D8               	btfsc	status,2,c
 17776  00515C  D7CF               	goto	l21245
 17777                           
 17778                           ; BSR set to: 0
 17779                           ;keeloqDecrypt_MC50.c: 352:         {;keeloqDecrypt_MC50.c: 353:             classic_dat
      +                          a->type=Keeloq_NoRollingCode;
 17780  00515E  EE20 F00E          	lfsr	2,14
 17781  005162  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17782  005164  26D9               	addwf	fsr2l,f,c
 17783  005166  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17784  005168  22DA               	addwfc	fsr2h,f,c
 17785  00516A  0E01               	movlw	1
 17786  00516C  6EDF               	movwf	indf2,c
 17787                           
 17788                           ; BSR set to: 0
 17789                           ;keeloqDecrypt_MC50.c: 354:             return commandType;
 17790  00516E  51E9               	movf	keeloqDecryptPacket@commandType& (0+255),w,b
 17791  005170  0012               	return	
 17792  005172                     l21277:
 17793                           
 17794                           ; BSR set to: 0
 17795                           ;keeloqDecrypt_MC50.c: 359:     hop_error = HopCHK(classic_data);
 17796  005172  C0E2  F024         	movff	keeloqDecryptPacket@classic_data,HopCHK@data
 17797  005176  C0E3  F025         	movff	keeloqDecryptPacket@classic_data+1,HopCHK@data+1
 17798  00517A  EC1A  F03C         	call	_HopCHK	;wreg free
 17799  00517E  0100               	movlb	0	; () banked
 17800  005180  6FE8               	movwf	keeloqDecryptPacket@hop_error& (0+255),b
 17801                           
 17802                           ; BSR set to: 0
 17803                           ;keeloqDecrypt_MC50.c: 360:     if (hop_error != VALID_PACKET) {
 17804  005182  05E8               	decf	keeloqDecryptPacket@hop_error& (0+255),w,b
 17805  005184  A4D8               	btfss	status,2,c
 17806  005186  D7BA               	goto	l21245
 17807                           
 17808                           ; BSR set to: 0
 17809                           ;keeloqDecrypt_MC50.c: 364:     classic_data->type=Keeloq_RollingCode;
 17810  005188  EE20 F00E          	lfsr	2,14
 17811  00518C  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17812  00518E  26D9               	addwf	fsr2l,f,c
 17813  005190  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17814  005192  22DA               	addwfc	fsr2h,f,c
 17815  005194  0E00               	movlw	0
 17816  005196  D7EA               	goto	L80
 17817  005198                     __end_of_keeloqDecryptPacket:
 17818                           	callstack 0
 17819                           
 17820 ;; *************** function _verifyProgramingMode *****************
 17821 ;; Defined at:
 17822 ;;		line 401 in file "keeloqDecrypt_MC50.c"
 17823 ;; Parameters:    Size  Location     Type
 17824 ;;  classic_data    2   15[COMRAM] PTR struct .
 17825 ;;		 -> classic_data(16), 
 17826 ;; Auto vars:     Size  Location     Type
 17827 ;;		None
 17828 ;; Return value:  Size  Location     Type
 17829 ;;                  1    wreg      enum E10539
 17830 ;; Registers used:
 17831 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17832 ;; Tracked objects:
 17833 ;;		On entry : 3F/0
 17834 ;;		On exit  : 3F/0
 17835 ;;		Unchanged: 3F/0
 17836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17837 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17838 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17839 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17840 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17841 ;;Total ram usage:        3 bytes
 17842 ;; Hardware stack levels used: 1
 17843 ;; Hardware stack levels required when called: 4
 17844 ;; This function calls:
 17845 ;;		Nothing
 17846 ;; This function is called by:
 17847 ;;		_keeloqDecryptPacket
 17848 ;; This function uses a non-reentrant model
 17849 ;;
 17850                           
 17851                           	psect	text61
 17852  008A4C                     __ptext61:
 17853                           	callstack 0
 17854  008A4C                     _verifyProgramingMode:
 17855                           	callstack 24
 17856                           
 17857                           ; BSR set to: 0
 17858                           ;keeloqDecrypt_MC50.c: 401: TypeCMD verifyProgramingMode(classic_encoder_t* classic_data
      +                          );keeloqDecrypt_MC50.c: 402: {;keeloqDecrypt_MC50.c: 403:     if (classic_data->fcode1==
      +                          0x0A)
 17859                           
 17860                           ; BSR set to: 0
 17861                           ;incstack = 0
 17862  008A4C  EE20 F00C          	lfsr	2,12
 17863  008A50  5010               	movf	verifyProgramingMode@classic_data^0,w,c
 17864  008A52  26D9               	addwf	fsr2l,f,c
 17865  008A54  5011               	movf	(verifyProgramingMode@classic_data+1)^0,w,c
 17866  008A56  22DA               	addwfc	fsr2h,f,c
 17867  008A58  0E0A               	movlw	10
 17868  008A5A  18DE               	xorwf	postinc2,w,c
 17869  008A5C  A4D8               	btfss	status,2,c
 17870  008A5E  D002               	goto	l20235
 17871                           
 17872                           ; BSR set to: 0
 17873                           ;keeloqDecrypt_MC50.c: 404:     {;keeloqDecrypt_MC50.c: 405:         return TypeProgramm
      +                          ingModeFull;
 17874  008A60  0E06               	movlw	6
 17875  008A62  0012               	return	
 17876  008A64                     l20235:
 17877                           
 17878                           ; BSR set to: 0
 17879  008A64  EE20 F00C          	lfsr	2,12
 17880  008A68  5010               	movf	verifyProgramingMode@classic_data^0,w,c
 17881  008A6A  26D9               	addwf	fsr2l,f,c
 17882  008A6C  5011               	movf	(verifyProgramingMode@classic_data+1)^0,w,c
 17883  008A6E  22DA               	addwfc	fsr2h,f,c
 17884  008A70  0E05               	movlw	5
 17885  008A72  18DE               	xorwf	postinc2,w,c
 17886  008A74  A4D8               	btfss	status,2,c
 17887  008A76  D002               	goto	l20243
 17888                           
 17889                           ; BSR set to: 0
 17890                           ;keeloqDecrypt_MC50.c: 408:     {;keeloqDecrypt_MC50.c: 409:         return TypeProgramm
      +                          ingModeWalk;
 17891  008A78  0E05               	movlw	5
 17892  008A7A  0012               	return	
 17893  008A7C                     l20243:
 17894                           
 17895                           ; BSR set to: 0
 17896                           ;keeloqDecrypt_MC50.c: 412:     {;keeloqDecrypt_MC50.c: 413:         return NoCMD;
 17897  008A7C  0E00               	movlw	0
 17898                           
 17899                           ; BSR set to: 0
 17900  008A7E  0012               	return		;funcret
 17901  008A80                     __end_of_verifyProgramingMode:
 17902                           	callstack 0
 17903                           
 17904 ;; *************** function _keeloq_classic_decrypt_packet *****************
 17905 ;; Defined at:
 17906 ;;		line 390 in file "keeloqDecrypt_MC50.c"
 17907 ;; Parameters:    Size  Location     Type
 17908 ;;  data            2   55[COMRAM] PTR struct .
 17909 ;;		 -> classic_data(16), 
 17910 ;; Auto vars:     Size  Location     Type
 17911 ;;		None
 17912 ;; Return value:  Size  Location     Type
 17913 ;;                  1    wreg      void 
 17914 ;; Registers used:
 17915 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 17916 ;; Tracked objects:
 17917 ;;		On entry : 3F/0
 17918 ;;		On exit  : 3F/0
 17919 ;;		Unchanged: 0/0
 17920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17921 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17923 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17924 ;;      Totals:         2       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17925 ;;Total ram usage:        5 bytes
 17926 ;; Hardware stack levels used: 1
 17927 ;; Hardware stack levels required when called: 7
 17928 ;; This function calls:
 17929 ;;		_Decrypt
 17930 ;;		_NormalKeyGen
 17931 ;; This function is called by:
 17932 ;;		_keeloqDecryptPacket
 17933 ;; This function uses a non-reentrant model
 17934 ;;
 17935                           
 17936                           	psect	text62
 17937  0083C0                     __ptext62:
 17938                           	callstack 0
 17939  0083C0                     _keeloq_classic_decrypt_packet:
 17940                           	callstack 21
 17941                           
 17942                           ; BSR set to: 0
 17943                           ;keeloqDecrypt_MC50.c: 393:     NormalKeyGen(&data->serialnumber);
 17944                           
 17945                           ; BSR set to: 0
 17946                           ;incstack = 0
 17947  0083C0  0E04               	movlw	4
 17948  0083C2  2438               	addwf	keeloq_classic_decrypt_packet@data^0,w,c
 17949  0083C4  6E26               	movwf	NormalKeyGen@serial^0,c
 17950  0083C6  0E00               	movlw	0
 17951  0083C8  2039               	addwfc	(keeloq_classic_decrypt_packet@data+1)^0,w,c
 17952  0083CA  6E27               	movwf	(NormalKeyGen@serial+1)^0,c
 17953  0083CC  EC76  F033         	call	_NormalKeyGen	;wreg free
 17954                           
 17955                           ;keeloqDecrypt_MC50.c: 395:     Decrypt((uint8_t*) & data->sync);
 17956  0083D0  0E08               	movlw	8
 17957  0083D2  2438               	addwf	keeloq_classic_decrypt_packet@data^0,w,c
 17958  0083D4  6E1B               	movwf	Decrypt@packet^0,c
 17959  0083D6  0E00               	movlw	0
 17960  0083D8  2039               	addwfc	(keeloq_classic_decrypt_packet@data+1)^0,w,c
 17961  0083DA  6E1C               	movwf	(Decrypt@packet+1)^0,c
 17962  0083DC  ECDD  F036         	call	_Decrypt	;wreg free
 17963                           
 17964                           ;keeloqDecrypt_MC50.c: 398:     data->fcode2 = (data->disc >> 12) & 0x0F;
 17965  0083E0  EE20 F00D          	lfsr	2,13
 17966  0083E4  5038               	movf	keeloq_classic_decrypt_packet@data^0,w,c
 17967  0083E6  26D9               	addwf	fsr2l,f,c
 17968  0083E8  5039               	movf	(keeloq_classic_decrypt_packet@data+1)^0,w,c
 17969  0083EA  22DA               	addwfc	fsr2h,f,c
 17970  0083EC  EE10 F00A          	lfsr	1,10
 17971  0083F0  5038               	movf	keeloq_classic_decrypt_packet@data^0,w,c
 17972  0083F2  26E1               	addwf	fsr1l,f,c
 17973  0083F4  5039               	movf	(keeloq_classic_decrypt_packet@data+1)^0,w,c
 17974  0083F6  22E2               	addwfc	fsr1h,f,c
 17975  0083F8  CFE6 F0D8          	movff	postinc1,??_keeloq_classic_decrypt_packet
 17976  0083FC  CFE5 F0D9          	movff	postdec1,??_keeloq_classic_decrypt_packet+1
 17977  008400  0E0C               	movlw	12
 17978  008402  0100               	movlb	0	; () banked
 17979  008404  6FDA               	movwf	(??_keeloq_classic_decrypt_packet+2)& (0+255),b
 17980  008406                     u23335:
 17981  008406  90D8               	bcf	status,0,c
 17982  008408  33D9               	rrcf	(??_keeloq_classic_decrypt_packet+1)& (0+255),f,b
 17983  00840A  33D8               	rrcf	??_keeloq_classic_decrypt_packet& (0+255),f,b
 17984  00840C  2FDA               	decfsz	(??_keeloq_classic_decrypt_packet+2)& (0+255),f,b
 17985  00840E  D7FB               	goto	u23335
 17986  008410  51D8               	movf	??_keeloq_classic_decrypt_packet& (0+255),w,b
 17987  008412  0B0F               	andlw	15
 17988  008414  6EDF               	movwf	indf2,c
 17989                           
 17990                           ; BSR set to: 0
 17991  008416  0012               	return		;funcret
 17992  008418                     __end_of_keeloq_classic_decrypt_packet:
 17993                           	callstack 0
 17994                           
 17995 ;; *************** function _NormalKeyGen *****************
 17996 ;; Defined at:
 17997 ;;		line 87 in file "keeloqDecrypt_MC50.c"
 17998 ;; Parameters:    Size  Location     Type
 17999 ;;  serial          2   37[COMRAM] PTR unsigned long 
 18000 ;;		 -> classic_data(16), 
 18001 ;; Auto vars:     Size  Location     Type
 18002 ;;  Buffer          8   47[COMRAM] unsigned char [8]
 18003 ;;  SKEYtemp        4   43[COMRAM] unsigned char [4]
 18004 ;;  HOPtemp         4   39[COMRAM] unsigned char [4]
 18005 ;; Return value:  Size  Location     Type
 18006 ;;                  1    wreg      void 
 18007 ;; Registers used:
 18008 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18009 ;; Tracked objects:
 18010 ;;		On entry : 3F/0
 18011 ;;		On exit  : 0/0
 18012 ;;		Unchanged: 0/0
 18013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18014 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18015 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18017 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18018 ;;Total ram usage:       18 bytes
 18019 ;; Hardware stack levels used: 1
 18020 ;; Hardware stack levels required when called: 6
 18021 ;; This function calls:
 18022 ;;		_Decrypt
 18023 ;;		_LoadManufCode
 18024 ;;		_memcpy
 18025 ;; This function is called by:
 18026 ;;		_keeloq_classic_decrypt_packet
 18027 ;; This function uses a non-reentrant model
 18028 ;;
 18029                           
 18030                           	psect	text63
 18031  0066EC                     __ptext63:
 18032                           	callstack 0
 18033  0066EC                     _NormalKeyGen:
 18034                           	callstack 21
 18035                           
 18036                           ; BSR set to: 0
 18037                           ;keeloqDecrypt_MC50.c: 88:     static uint8_t SEED[4];;keeloqDecrypt_MC50.c: 89:     uin
      +                          t8_t Buffer[8];;keeloqDecrypt_MC50.c: 90:     uint8_t HOPtemp[4];;keeloqDecrypt_MC50.c: 
      +                          91:     uint8_t SKEYtemp[4];;keeloqDecrypt_MC50.c: 93:     memcpy(&Buffer[4], serial, 4)
      +                          ;
 18038                           
 18039                           ; BSR set to: 0
 18040                           ;incstack = 0
 18041  0066EC  0E34               	movlw	low (NormalKeyGen@Buffer+4)
 18042  0066EE  6E10               	movwf	memcpy@d1^0,c
 18043  0066F0  6A11               	clrf	(memcpy@d1+1)^0,c
 18044  0066F2  C026  F012         	movff	NormalKeyGen@serial,memcpy@s1
 18045  0066F6  C027  F013         	movff	NormalKeyGen@serial+1,memcpy@s1+1
 18046  0066FA  0E00               	movlw	0
 18047  0066FC  6E15               	movwf	(memcpy@n+1)^0,c
 18048  0066FE  0E04               	movlw	4
 18049  006700  6E14               	movwf	memcpy@n^0,c
 18050  006702  EC0C  F044         	call	_memcpy	;wreg free
 18051                           
 18052                           ;keeloqDecrypt_MC50.c: 95:     memcpy(HOPtemp, Buffer, 4);
 18053  006706  0E28               	movlw	low NormalKeyGen@HOPtemp
 18054  006708  6E10               	movwf	memcpy@d1^0,c
 18055  00670A  6A11               	clrf	(memcpy@d1+1)^0,c
 18056  00670C  0E30               	movlw	low NormalKeyGen@Buffer
 18057  00670E  6E12               	movwf	memcpy@s1^0,c
 18058  006710  6A13               	clrf	(memcpy@s1+1)^0,c
 18059  006712  0E00               	movlw	0
 18060  006714  6E15               	movwf	(memcpy@n+1)^0,c
 18061  006716  0E04               	movlw	4
 18062  006718  6E14               	movwf	memcpy@n^0,c
 18063  00671A  EC0C  F044         	call	_memcpy	;wreg free
 18064                           
 18065                           ;keeloqDecrypt_MC50.c: 97:     memcpy(SEED, &Buffer[4], 4);
 18066  00671E  0ED9               	movlw	low NormalKeyGen@SEED
 18067  006720  6E10               	movwf	memcpy@d1^0,c
 18068  006722  0E02               	movlw	high NormalKeyGen@SEED
 18069  006724  6E11               	movwf	(memcpy@d1+1)^0,c
 18070  006726  0E34               	movlw	low (NormalKeyGen@Buffer+4)
 18071  006728  6E12               	movwf	memcpy@s1^0,c
 18072  00672A  6A13               	clrf	(memcpy@s1+1)^0,c
 18073  00672C  0E00               	movlw	0
 18074  00672E  6E15               	movwf	(memcpy@n+1)^0,c
 18075  006730  0E04               	movlw	4
 18076  006732  6E14               	movwf	memcpy@n^0,c
 18077  006734  EC0C  F044         	call	_memcpy	;wreg free
 18078                           
 18079                           ;keeloqDecrypt_MC50.c: 98:     SEED[3] &= 0x0f;
 18080  006738  0E0F               	movlw	15
 18081  00673A  0102               	movlb	2	; () banked
 18082  00673C  17DC               	andwf	(NormalKeyGen@SEED+3)& (0+255),f,b
 18083                           
 18084                           ; BSR set to: 2
 18085                           ;keeloqDecrypt_MC50.c: 101:     memcpy(Buffer, SEED, 4);
 18086  00673E  0E30               	movlw	low NormalKeyGen@Buffer
 18087  006740  6E10               	movwf	memcpy@d1^0,c
 18088  006742  6A11               	clrf	(memcpy@d1+1)^0,c
 18089  006744  0ED9               	movlw	low NormalKeyGen@SEED
 18090  006746  6E12               	movwf	memcpy@s1^0,c
 18091  006748  0E02               	movlw	high NormalKeyGen@SEED
 18092  00674A  6E13               	movwf	(memcpy@s1+1)^0,c
 18093  00674C  0E00               	movlw	0
 18094  00674E  6E15               	movwf	(memcpy@n+1)^0,c
 18095  006750  0E04               	movlw	4
 18096  006752  6E14               	movwf	memcpy@n^0,c
 18097  006754  EC0C  F044         	call	_memcpy	;wreg free
 18098                           
 18099                           ;keeloqDecrypt_MC50.c: 102:     Buffer[3] |= 0x20;
 18100  006758  8A33               	bsf	(NormalKeyGen@Buffer+3)^0,5,c
 18101                           
 18102                           ;keeloqDecrypt_MC50.c: 103:     LoadManufCode();
 18103  00675A  EC58  F047         	call	_LoadManufCode	;wreg free
 18104                           
 18105                           ; BSR set to: 2
 18106                           ;keeloqDecrypt_MC50.c: 104:     Decrypt(Buffer);
 18107  00675E  0E30               	movlw	low NormalKeyGen@Buffer
 18108  006760  6E1B               	movwf	Decrypt@packet^0,c
 18109  006762  6A1C               	clrf	(Decrypt@packet+1)^0,c
 18110  006764  ECDD  F036         	call	_Decrypt	;wreg free
 18111                           
 18112                           ;keeloqDecrypt_MC50.c: 105:     memcpy(SKEYtemp, Buffer, 4);
 18113  006768  0E2C               	movlw	low NormalKeyGen@SKEYtemp
 18114  00676A  6E10               	movwf	memcpy@d1^0,c
 18115  00676C  6A11               	clrf	(memcpy@d1+1)^0,c
 18116  00676E  0E30               	movlw	low NormalKeyGen@Buffer
 18117  006770  6E12               	movwf	memcpy@s1^0,c
 18118  006772  6A13               	clrf	(memcpy@s1+1)^0,c
 18119  006774  0E00               	movlw	0
 18120  006776  6E15               	movwf	(memcpy@n+1)^0,c
 18121  006778  0E04               	movlw	4
 18122  00677A  6E14               	movwf	memcpy@n^0,c
 18123  00677C  EC0C  F044         	call	_memcpy	;wreg free
 18124                           
 18125                           ;keeloqDecrypt_MC50.c: 108:     memcpy(Buffer, SEED, 4);
 18126  006780  0E30               	movlw	low NormalKeyGen@Buffer
 18127  006782  6E10               	movwf	memcpy@d1^0,c
 18128  006784  6A11               	clrf	(memcpy@d1+1)^0,c
 18129  006786  0ED9               	movlw	low NormalKeyGen@SEED
 18130  006788  6E12               	movwf	memcpy@s1^0,c
 18131  00678A  0E02               	movlw	high NormalKeyGen@SEED
 18132  00678C  6E13               	movwf	(memcpy@s1+1)^0,c
 18133  00678E  0E00               	movlw	0
 18134  006790  6E15               	movwf	(memcpy@n+1)^0,c
 18135  006792  0E04               	movlw	4
 18136  006794  6E14               	movwf	memcpy@n^0,c
 18137  006796  EC0C  F044         	call	_memcpy	;wreg free
 18138                           
 18139                           ;keeloqDecrypt_MC50.c: 109:     Buffer[3] |= 0x60;
 18140  00679A  0E60               	movlw	96
 18141  00679C  1233               	iorwf	(NormalKeyGen@Buffer+3)^0,f,c
 18142                           
 18143                           ;keeloqDecrypt_MC50.c: 110:     LoadManufCode();
 18144  00679E  EC58  F047         	call	_LoadManufCode	;wreg free
 18145                           
 18146                           ; BSR set to: 2
 18147                           ;keeloqDecrypt_MC50.c: 111:     Decrypt(Buffer);
 18148  0067A2  0E30               	movlw	low NormalKeyGen@Buffer
 18149  0067A4  6E1B               	movwf	Decrypt@packet^0,c
 18150  0067A6  6A1C               	clrf	(Decrypt@packet+1)^0,c
 18151  0067A8  ECDD  F036         	call	_Decrypt	;wreg free
 18152                           
 18153                           ;keeloqDecrypt_MC50.c: 112:     memcpy(&DKEY[4], Buffer, 4);
 18154  0067AC  0ED5               	movlw	low (_DKEY+4)
 18155  0067AE  6E10               	movwf	memcpy@d1^0,c
 18156  0067B0  0E02               	movlw	high (_DKEY+4)
 18157  0067B2  6E11               	movwf	(memcpy@d1+1)^0,c
 18158  0067B4  0E30               	movlw	low NormalKeyGen@Buffer
 18159  0067B6  6E12               	movwf	memcpy@s1^0,c
 18160  0067B8  6A13               	clrf	(memcpy@s1+1)^0,c
 18161  0067BA  0E00               	movlw	0
 18162  0067BC  6E15               	movwf	(memcpy@n+1)^0,c
 18163  0067BE  0E04               	movlw	4
 18164  0067C0  6E14               	movwf	memcpy@n^0,c
 18165  0067C2  EC0C  F044         	call	_memcpy	;wreg free
 18166                           
 18167                           ;keeloqDecrypt_MC50.c: 113:     memcpy(DKEY, SKEYtemp, 4);
 18168  0067C6  0ED1               	movlw	low _DKEY
 18169  0067C8  6E10               	movwf	memcpy@d1^0,c
 18170  0067CA  0E02               	movlw	high _DKEY
 18171  0067CC  6E11               	movwf	(memcpy@d1+1)^0,c
 18172  0067CE  0E2C               	movlw	low NormalKeyGen@SKEYtemp
 18173  0067D0  6E12               	movwf	memcpy@s1^0,c
 18174  0067D2  6A13               	clrf	(memcpy@s1+1)^0,c
 18175  0067D4  0E00               	movlw	0
 18176  0067D6  6E15               	movwf	(memcpy@n+1)^0,c
 18177  0067D8  0E04               	movlw	4
 18178  0067DA  6E14               	movwf	memcpy@n^0,c
 18179  0067DC  EC0C  F044         	call	_memcpy	;wreg free
 18180                           
 18181                           ;keeloqDecrypt_MC50.c: 116:     memcpy(Buffer, HOPtemp, 4);
 18182  0067E0  0E30               	movlw	low NormalKeyGen@Buffer
 18183  0067E2  6E10               	movwf	memcpy@d1^0,c
 18184  0067E4  6A11               	clrf	(memcpy@d1+1)^0,c
 18185  0067E6  0E28               	movlw	low NormalKeyGen@HOPtemp
 18186  0067E8  6E12               	movwf	memcpy@s1^0,c
 18187  0067EA  6A13               	clrf	(memcpy@s1+1)^0,c
 18188  0067EC  0E00               	movlw	0
 18189  0067EE  6E15               	movwf	(memcpy@n+1)^0,c
 18190  0067F0  0E04               	movlw	4
 18191  0067F2  6E14               	movwf	memcpy@n^0,c
 18192  0067F4  EC0C  F044         	call	_memcpy	;wreg free
 18193  0067F8  0012               	return		;funcret
 18194  0067FA                     __end_of_NormalKeyGen:
 18195                           	callstack 0
 18196                           
 18197 ;; *************** function _LoadManufCode *****************
 18198 ;; Defined at:
 18199 ;;		line 63 in file "keeloqDecrypt_MC50.c"
 18200 ;; Parameters:    Size  Location     Type
 18201 ;;		None
 18202 ;; Auto vars:     Size  Location     Type
 18203 ;;		None
 18204 ;; Return value:  Size  Location     Type
 18205 ;;                  1    wreg      void 
 18206 ;; Registers used:
 18207 ;;		wreg, status,2
 18208 ;; Tracked objects:
 18209 ;;		On entry : 0/2
 18210 ;;		On exit  : 3F/2
 18211 ;;		Unchanged: 0/0
 18212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18216 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18217 ;;Total ram usage:        0 bytes
 18218 ;; Hardware stack levels used: 1
 18219 ;; Hardware stack levels required when called: 4
 18220 ;; This function calls:
 18221 ;;		Nothing
 18222 ;; This function is called by:
 18223 ;;		_NormalKeyGen
 18224 ;; This function uses a non-reentrant model
 18225 ;;
 18226                           
 18227                           	psect	text64
 18228  008EB0                     __ptext64:
 18229                           	callstack 0
 18230  008EB0                     _LoadManufCode:
 18231                           	callstack 22
 18232                           
 18233                           ;keeloqDecrypt_MC50.c: 64:     DKEY[0] = 0xFF;
 18234                           
 18235                           ;incstack = 0
 18236  008EB0  0102               	movlb	2	; () banked
 18237  008EB2  69D1               	setf	_DKEY& (0+255),b
 18238                           
 18239                           ; BSR set to: 2
 18240                           ;keeloqDecrypt_MC50.c: 65:     DKEY[1] = 0xCA;
 18241  008EB4  0ECA               	movlw	202
 18242  008EB6  6FD2               	movwf	(_DKEY+1)& (0+255),b
 18243                           
 18244                           ;keeloqDecrypt_MC50.c: 66:     DKEY[2] = 0x76;
 18245  008EB8  0E76               	movlw	118
 18246  008EBA  6FD3               	movwf	(_DKEY+2)& (0+255),b
 18247                           
 18248                           ;keeloqDecrypt_MC50.c: 67:     DKEY[3] = 0x94;
 18249  008EBC  0E94               	movlw	148
 18250  008EBE  6FD4               	movwf	(_DKEY+3)& (0+255),b
 18251                           
 18252                           ;keeloqDecrypt_MC50.c: 68:     DKEY[4] = 0x22;
 18253  008EC0  0E22               	movlw	34
 18254  008EC2  6FD5               	movwf	(_DKEY+4)& (0+255),b
 18255                           
 18256                           ;keeloqDecrypt_MC50.c: 69:     DKEY[5] = 0x68;
 18257  008EC4  0E68               	movlw	104
 18258  008EC6  6FD6               	movwf	(_DKEY+5)& (0+255),b
 18259                           
 18260                           ;keeloqDecrypt_MC50.c: 70:     DKEY[6] = 0x27;
 18261  008EC8  0E27               	movlw	39
 18262  008ECA  6FD7               	movwf	(_DKEY+6)& (0+255),b
 18263                           
 18264                           ;keeloqDecrypt_MC50.c: 71:     DKEY[7] = 0x57;
 18265  008ECC  0E57               	movlw	87
 18266  008ECE  6FD8               	movwf	(_DKEY+7)& (0+255),b
 18267                           
 18268                           ; BSR set to: 2
 18269  008ED0  0012               	return		;funcret
 18270  008ED2                     __end_of_LoadManufCode:
 18271                           	callstack 0
 18272                           
 18273 ;; *************** function _Decrypt *****************
 18274 ;; Defined at:
 18275 ;;		line 142 in file "keeloqDecrypt_MC50.c"
 18276 ;; Parameters:    Size  Location     Type
 18277 ;;  packet          2   26[COMRAM] PTR unsigned char 
 18278 ;;		 -> SecureKeyGen@HOPtemp(4), NormalKeyGen@Buffer(8), classic_data(16), 
 18279 ;; Auto vars:     Size  Location     Type
 18280 ;;  Buffer          4   33[COMRAM] unsigned char [4]
 18281 ;;  aux             1   32[COMRAM] unsigned char 
 18282 ;;  p               1   31[COMRAM] char 
 18283 ;;  j               1   30[COMRAM] unsigned char 
 18284 ;;  i               1   29[COMRAM] unsigned char 
 18285 ;;  key             1   28[COMRAM] unsigned char 
 18286 ;; Return value:  Size  Location     Type
 18287 ;;                  1    wreg      void 
 18288 ;; Registers used:
 18289 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18290 ;; Tracked objects:
 18291 ;;		On entry : 0/0
 18292 ;;		On exit  : 0/0
 18293 ;;		Unchanged: 0/0
 18294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18295 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18296 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18298 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18299 ;;Total ram usage:       11 bytes
 18300 ;; Hardware stack levels used: 1
 18301 ;; Hardware stack levels required when called: 5
 18302 ;; This function calls:
 18303 ;;		_memcpy
 18304 ;; This function is called by:
 18305 ;;		_NormalKeyGen
 18306 ;;		_keeloq_classic_decrypt_packet
 18307 ;; This function uses a non-reentrant model
 18308 ;;
 18309                           
 18310                           	psect	text65
 18311  006DBA                     __ptext65:
 18312                           	callstack 0
 18313  006DBA                     _Decrypt:
 18314                           	callstack 21
 18315                           
 18316                           ;keeloqDecrypt_MC50.c: 143:     uint_fast8_t i, j;;keeloqDecrypt_MC50.c: 144:     uint8_
      +                          t key, aux;;keeloqDecrypt_MC50.c: 146:     int8_t p;;keeloqDecrypt_MC50.c: 147:     uint
      +                          8_t Buffer[4];;keeloqDecrypt_MC50.c: 149:     memcpy(Buffer, packet, 4);
 18317                           
 18318                           ; BSR set to: 2
 18319                           ;incstack = 0
 18320  006DBA  0E22               	movlw	low Decrypt@Buffer
 18321  006DBC  6E10               	movwf	memcpy@d1^0,c
 18322  006DBE  6A11               	clrf	(memcpy@d1+1)^0,c
 18323  006DC0  C01B  F012         	movff	Decrypt@packet,memcpy@s1
 18324  006DC4  C01C  F013         	movff	Decrypt@packet+1,memcpy@s1+1
 18325  006DC8  0E00               	movlw	0
 18326  006DCA  6E15               	movwf	(memcpy@n+1)^0,c
 18327  006DCC  0E04               	movlw	4
 18328  006DCE  6E14               	movwf	memcpy@n^0,c
 18329  006DD0  EC0C  F044         	call	_memcpy	;wreg free
 18330                           
 18331                           ;keeloqDecrypt_MC50.c: 151:     p = 1;
 18332  006DD4  0E01               	movlw	1
 18333  006DD6  6E20               	movwf	Decrypt@p^0,c
 18334                           
 18335                           ;keeloqDecrypt_MC50.c: 153:     for (j = 66; j > 0; j--) {
 18336  006DD8  0E42               	movlw	66
 18337  006DDA  6E1F               	movwf	Decrypt@j^0,c
 18338  006DDC                     l19447:
 18339                           
 18340                           ;keeloqDecrypt_MC50.c: 154:         key = DKEY[p--];
 18341  006DDC  0ED1               	movlw	low _DKEY
 18342  006DDE  2420               	addwf	Decrypt@p^0,w,c
 18343  006DE0  6ED9               	movwf	fsr2l,c
 18344  006DE2  6ADA               	clrf	fsr2h,c
 18345  006DE4  0E02               	movlw	high _DKEY
 18346  006DE6  22DA               	addwfc	fsr2h,f,c
 18347  006DE8  50DF               	movf	indf2,w,c
 18348  006DEA  6E1D               	movwf	Decrypt@key^0,c
 18349  006DEC  0620               	decf	Decrypt@p^0,f,c
 18350                           
 18351                           ;keeloqDecrypt_MC50.c: 155:         if (p < 0)
 18352  006DEE  AE20               	btfss	Decrypt@p^0,7,c
 18353  006DF0  D002               	goto	l19455
 18354                           
 18355                           ;keeloqDecrypt_MC50.c: 156:             p += 8;
 18356  006DF2  0E08               	movlw	8
 18357  006DF4  2620               	addwf	Decrypt@p^0,f,c
 18358  006DF6                     l19455:
 18359                           
 18360                           ;keeloqDecrypt_MC50.c: 157:         for (i = 8; i > 0; i--) {
 18361  006DF6  0E08               	movlw	8
 18362  006DF8  6E1E               	movwf	Decrypt@i^0,c
 18363  006DFA                     l1854:
 18364                           
 18365                           ;keeloqDecrypt_MC50.c: 159:             if ((( (Buffer[3]) & (1<<(6))) != 0)) {
 18366  006DFA  AC25               	btfss	(Decrypt@Buffer+3)^0,6,c
 18367  006DFC  D006               	goto	l1856
 18368                           
 18369                           ;keeloqDecrypt_MC50.c: 160:                 if (!(( (Buffer[3]) & (1<<(1))) != 0))
 18370  006DFE  B225               	btfsc	(Decrypt@Buffer+3)^0,1,c
 18371  006E00  D002               	goto	l19465
 18372                           
 18373                           ;keeloqDecrypt_MC50.c: 161:                     aux = 0b00111010;
 18374  006E02  0E3A               	movlw	58
 18375  006E04  D007               	goto	L81
 18376  006E06                     l19465:
 18377                           
 18378                           ;keeloqDecrypt_MC50.c: 163:                     aux = 0b01011100;
 18379  006E06  0E5C               	movlw	92
 18380  006E08  D005               	goto	L81
 18381  006E0A                     l1856:
 18382                           
 18383                           ;keeloqDecrypt_MC50.c: 165:                 if (!(( (Buffer[3]) & (1<<(1))) != 0))
 18384  006E0A  B225               	btfsc	(Decrypt@Buffer+3)^0,1,c
 18385  006E0C  D002               	goto	l19469
 18386                           
 18387                           ;keeloqDecrypt_MC50.c: 166:                     aux = 0b01110100;
 18388  006E0E  0E74               	movlw	116
 18389  006E10  D001               	goto	L81
 18390  006E12                     l19469:
 18391                           
 18392                           ;keeloqDecrypt_MC50.c: 168:                     aux = 0b00101110;
 18393  006E12  0E2E               	movlw	46
 18394  006E14                     L81:
 18395  006E14  6E21               	movwf	Decrypt@aux^0,c
 18396                           
 18397                           ;keeloqDecrypt_MC50.c: 172:             if ((( (Buffer[2]) & (1<<(3))) != 0))
 18398  006E16  B624               	btfsc	(Decrypt@Buffer+2)^0,3,c
 18399                           
 18400                           ;keeloqDecrypt_MC50.c: 173:                 aux = (aux << 4) | (aux >> 4);
 18401  006E18  3A21               	swapf	Decrypt@aux^0,f,c
 18402                           
 18403                           ;keeloqDecrypt_MC50.c: 174:             if ((( (Buffer[1]) & (1<<(0))) != 0))
 18404  006E1A  A023               	btfss	(Decrypt@Buffer+1)^0,0,c
 18405  006E1C  D004               	goto	l19477
 18406                           
 18407                           ;keeloqDecrypt_MC50.c: 175:                 aux <<= 2;
 18408  006E1E  90D8               	bcf	status,0,c
 18409  006E20  3621               	rlcf	Decrypt@aux^0,f,c
 18410  006E22  90D8               	bcf	status,0,c
 18411  006E24  3621               	rlcf	Decrypt@aux^0,f,c
 18412  006E26                     l19477:
 18413                           
 18414                           ;keeloqDecrypt_MC50.c: 176:             if ((( (Buffer[0]) & (1<<(0))) != 0))
 18415  006E26  A022               	btfss	Decrypt@Buffer^0,0,c
 18416  006E28  D002               	goto	l1864
 18417                           
 18418                           ;keeloqDecrypt_MC50.c: 177:                 aux <<= 1;
 18419  006E2A  90D8               	bcf	status,0,c
 18420  006E2C  3621               	rlcf	Decrypt@aux^0,f,c
 18421  006E2E                     l1864:
 18422                           
 18423                           ;keeloqDecrypt_MC50.c: 180:             aux ^= Buffer[1] ^ Buffer[3] ^ key;
 18424  006E2E  5023               	movf	(Decrypt@Buffer+1)^0,w,c
 18425  006E30  1825               	xorwf	(Decrypt@Buffer+3)^0,w,c
 18426  006E32  181D               	xorwf	Decrypt@key^0,w,c
 18427  006E34  1A21               	xorwf	Decrypt@aux^0,f,c
 18428                           
 18429                           ;keeloqDecrypt_MC50.c: 182:             Buffer[3] = (Buffer[3] << 1) | (Buffer[2] >> 7);
 18430  006E36  90D8               	bcf	status,0,c
 18431  006E38  3424               	rlcf	(Decrypt@Buffer+2)^0,w,c
 18432  006E3A  3425               	rlcf	(Decrypt@Buffer+3)^0,w,c
 18433  006E3C  6E25               	movwf	(Decrypt@Buffer+3)^0,c
 18434                           
 18435                           ;keeloqDecrypt_MC50.c: 183:             Buffer[2] = (Buffer[2] << 1) | (Buffer[1] >> 7);
 18436  006E3E  90D8               	bcf	status,0,c
 18437  006E40  3423               	rlcf	(Decrypt@Buffer+1)^0,w,c
 18438  006E42  3424               	rlcf	(Decrypt@Buffer+2)^0,w,c
 18439  006E44  6E24               	movwf	(Decrypt@Buffer+2)^0,c
 18440                           
 18441                           ;keeloqDecrypt_MC50.c: 184:             Buffer[1] = (Buffer[1] << 1) | (Buffer[0] >> 7);
 18442  006E46  90D8               	bcf	status,0,c
 18443  006E48  3422               	rlcf	Decrypt@Buffer^0,w,c
 18444  006E4A  3423               	rlcf	(Decrypt@Buffer+1)^0,w,c
 18445  006E4C  6E23               	movwf	(Decrypt@Buffer+1)^0,c
 18446                           
 18447                           ;keeloqDecrypt_MC50.c: 185:             Buffer[0] = (Buffer[0] << 1) | (aux >> 7);
 18448  006E4E  90D8               	bcf	status,0,c
 18449  006E50  3421               	rlcf	Decrypt@aux^0,w,c
 18450  006E52  3422               	rlcf	Decrypt@Buffer^0,w,c
 18451  006E54  6E22               	movwf	Decrypt@Buffer^0,c
 18452                           
 18453                           ;keeloqDecrypt_MC50.c: 188:             key <<= 1;
 18454  006E56  90D8               	bcf	status,0,c
 18455  006E58  361D               	rlcf	Decrypt@key^0,f,c
 18456                           
 18457                           ;keeloqDecrypt_MC50.c: 189:         }
 18458  006E5A  061E               	decf	Decrypt@i^0,f,c
 18459  006E5C  501E               	movf	Decrypt@i^0,w,c
 18460  006E5E  A4D8               	btfss	status,2,c
 18461  006E60  D7CC               	goto	l1854
 18462                           
 18463                           ;keeloqDecrypt_MC50.c: 190:     }
 18464  006E62  061F               	decf	Decrypt@j^0,f,c
 18465  006E64  501F               	movf	Decrypt@j^0,w,c
 18466  006E66  A4D8               	btfss	status,2,c
 18467  006E68  D7B9               	goto	l19447
 18468                           
 18469                           ;keeloqDecrypt_MC50.c: 192:     memcpy(packet, Buffer, 4);
 18470  006E6A  C01B  F010         	movff	Decrypt@packet,memcpy@d1
 18471  006E6E  C01C  F011         	movff	Decrypt@packet+1,memcpy@d1+1
 18472  006E72  0E22               	movlw	low Decrypt@Buffer
 18473  006E74  6E12               	movwf	memcpy@s1^0,c
 18474  006E76  6A13               	clrf	(memcpy@s1+1)^0,c
 18475  006E78  0E00               	movlw	0
 18476  006E7A  6E15               	movwf	(memcpy@n+1)^0,c
 18477  006E7C  0E04               	movlw	4
 18478  006E7E  6E14               	movwf	memcpy@n^0,c
 18479  006E80  EC0C  F044         	call	_memcpy	;wreg free
 18480  006E84  0012               	return		;funcret
 18481  006E86                     __end_of_Decrypt:
 18482                           	callstack 0
 18483                           
 18484 ;; *************** function _HopCHK *****************
 18485 ;; Defined at:
 18486 ;;		line 236 in file "keeloqDecrypt_MC50.c"
 18487 ;; Parameters:    Size  Location     Type
 18488 ;;  data            2   35[COMRAM] PTR struct .
 18489 ;;		 -> classic_data(16), 
 18490 ;; Auto vars:     Size  Location     Type
 18491 ;;  hopDiff         2   37[COMRAM] short 
 18492 ;; Return value:  Size  Location     Type
 18493 ;;                  1    wreg      enum E10730
 18494 ;; Registers used:
 18495 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18496 ;; Tracked objects:
 18497 ;;		On entry : 3F/0
 18498 ;;		On exit  : 3C/0
 18499 ;;		Unchanged: 0/0
 18500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18501 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18502 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18504 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18505 ;;Total ram usage:        4 bytes
 18506 ;; Hardware stack levels used: 1
 18507 ;; Hardware stack levels required when called: 6
 18508 ;; This function calls:
 18509 ;;		_ReqResync
 18510 ;;		_getHopCode
 18511 ;; This function is called by:
 18512 ;;		_keeloqDecryptPacket
 18513 ;; This function uses a non-reentrant model
 18514 ;;
 18515                           
 18516                           	psect	text66
 18517  007834                     __ptext66:
 18518                           	callstack 0
 18519  007834                     _HopCHK:
 18520                           	callstack 22
 18521                           
 18522                           ; BSR set to: 0
 18523                           ;keeloqDecrypt_MC50.c: 237:     int16_t hopDiff;;keeloqDecrypt_MC50.c: 238:     Hop = da
      +                          ta->sync;
 18524                           
 18525                           ;incstack = 0
 18526  007834  EE20 F008          	lfsr	2,8
 18527  007838  5024               	movf	HopCHK@data^0,w,c
 18528  00783A  26D9               	addwf	fsr2l,f,c
 18529  00783C  5025               	movf	(HopCHK@data+1)^0,w,c
 18530  00783E  22DA               	addwfc	fsr2h,f,c
 18531  007840  CFDE F07C          	movff	postinc2,_Hop
 18532  007844  CFDD F07D          	movff	postdec2,_Hop+1
 18533                           
 18534                           ; BSR set to: 0
 18535                           ;keeloqDecrypt_MC50.c: 239:     EHop=getHopCode(data);
 18536  007848  C024  F016         	movff	HopCHK@data,getHopCode@data
 18537  00784C  C025  F017         	movff	HopCHK@data+1,getHopCode@data+1
 18538  007850  EC9A  F030         	call	_getHopCode	;wreg free
 18539  007854  C016  F28C         	movff	?_getHopCode,_EHop
 18540  007858  C017  F28D         	movff	?_getHopCode+1,_EHop+1
 18541                           
 18542                           ;keeloqDecrypt_MC50.c: 241:     if (F2Chance)
 18543  00785C  0101               	movlb	1	; () banked
 18544  00785E  5195               	movf	_F2Chance& (0+255),w,b
 18545  007860  B4D8               	btfsc	status,2,c
 18546  007862  D010               	goto	l20207
 18547                           
 18548                           ; BSR set to: 1
 18549                           ;keeloqDecrypt_MC50.c: 242:         if (NextHop == Hop) {
 18550  007864  0100               	movlb	0	; () banked
 18551  007866  517C               	movf	_Hop& (0+255),w,b
 18552  007868  0102               	movlb	2	; () banked
 18553  00786A  198E               	xorwf	_NextHop& (0+255),w,b
 18554  00786C  E10B               	bnz	l20207
 18555  00786E  0100               	movlb	0	; () banked
 18556  007870  517D               	movf	(_Hop+1)& (0+255),w,b
 18557  007872  0102               	movlb	2	; () banked
 18558  007874  198F               	xorwf	(_NextHop+1)& (0+255),w,b
 18559  007876  A4D8               	btfss	status,2,c
 18560  007878  D005               	goto	l20207
 18561                           
 18562                           ; BSR set to: 2
 18563                           ;keeloqDecrypt_MC50.c: 243:             F2Chance = 0;
 18564  00787A  0E00               	movlw	0
 18565  00787C  0101               	movlb	1	; () banked
 18566  00787E  6F95               	movwf	_F2Chance& (0+255),b
 18567  007880                     l20203:
 18568                           
 18569                           ;keeloqDecrypt_MC50.c: 245:             return VALID_PACKET;
 18570  007880  0E01               	movlw	1
 18571  007882  0012               	return	
 18572  007884                     l20207:
 18573                           
 18574                           ;keeloqDecrypt_MC50.c: 249:     hopDiff = Hop - EHop;
 18575  007884  0102               	movlb	2	; () banked
 18576  007886  518C               	movf	_EHop& (0+255),w,b
 18577  007888  0100               	movlb	0	; () banked
 18578  00788A  5D7C               	subwf	_Hop& (0+255),w,b
 18579  00788C  6E26               	movwf	HopCHK@hopDiff^0,c
 18580  00788E  0102               	movlb	2	; () banked
 18581  007890  518D               	movf	(_EHop+1)& (0+255),w,b
 18582  007892  0100               	movlb	0	; () banked
 18583  007894  597D               	subwfb	(_Hop+1)& (0+255),w,b
 18584  007896  6E27               	movwf	(HopCHK@hopDiff+1)^0,c
 18585                           
 18586                           ;keeloqDecrypt_MC50.c: 251:     if (hopDiff < 0) {
 18587  007898  AE27               	btfss	(HopCHK@hopDiff+1)^0,7,c
 18588  00789A  D002               	goto	l20215
 18589                           
 18590                           ; BSR set to: 0
 18591                           ;keeloqDecrypt_MC50.c: 254:         return HOP_CHECK_FAIL;
 18592  00789C  0E0A               	movlw	10
 18593  00789E  0012               	return	
 18594  0078A0                     l20215:
 18595                           
 18596                           ; BSR set to: 0
 18597  0078A0  BE27               	btfsc	(HopCHK@hopDiff+1)^0,7,c
 18598  0078A2  D7EE               	goto	l20203
 18599  0078A4  5027               	movf	(HopCHK@hopDiff+1)^0,w,c
 18600  0078A6  E104               	bnz	u23300
 18601  0078A8  0E11               	movlw	17
 18602  0078AA  5C26               	subwf	HopCHK@hopDiff^0,w,c
 18603  0078AC  A0D8               	btfss	status,0,c
 18604  0078AE  D7E8               	goto	l20203
 18605  0078B0                     u23300:
 18606                           
 18607                           ; BSR set to: 0
 18608                           ;keeloqDecrypt_MC50.c: 257:         return ReqResync(Hop);
 18609  0078B0  C07C  F010         	movff	_Hop,ReqResync@CurrentHop
 18610  0078B4  C07D  F011         	movff	_Hop+1,ReqResync@CurrentHop+1
 18611  0078B8  EC21  F048         	call	_ReqResync	;wreg free
 18612  0078BC  0012               	return		;funcret
 18613  0078BE                     __end_of_HopCHK:
 18614                           	callstack 0
 18615                           
 18616 ;; *************** function _getHopCode *****************
 18617 ;; Defined at:
 18618 ;;		line 266 in file "keeloqDecrypt_MC50.c"
 18619 ;; Parameters:    Size  Location     Type
 18620 ;;  data            2   21[COMRAM] PTR struct .
 18621 ;;		 -> classic_data(16), 
 18622 ;; Auto vars:     Size  Location     Type
 18623 ;;  tempHop         2   31[COMRAM] unsigned short 
 18624 ;;  i               1   34[COMRAM] unsigned char 
 18625 ;;  tempPos         1   33[COMRAM] char 
 18626 ;; Return value:  Size  Location     Type
 18627 ;;                  2   21[COMRAM] unsigned short 
 18628 ;; Registers used:
 18629 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18630 ;; Tracked objects:
 18631 ;;		On entry : 3F/0
 18632 ;;		On exit  : 3D/0
 18633 ;;		Unchanged: 0/0
 18634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18635 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18636 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18637 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18638 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18639 ;;Total ram usage:       14 bytes
 18640 ;; Hardware stack levels used: 1
 18641 ;; Hardware stack levels required when called: 5
 18642 ;; This function calls:
 18643 ;;		_ReqResync
 18644 ;;		___wmul
 18645 ;; This function is called by:
 18646 ;;		_HopCHK
 18647 ;; This function uses a non-reentrant model
 18648 ;;
 18649                           
 18650                           	psect	text67
 18651  006134                     __ptext67:
 18652                           	callstack 0
 18653  006134                     _getHopCode:
 18654                           	callstack 22
 18655                           
 18656                           ; BSR set to: 0
 18657                           ;keeloqDecrypt_MC50.c: 268:     uint16_t tempHop=0;
 18658                           
 18659                           ;incstack = 0
 18660  006134  0E00               	movlw	0
 18661  006136  6E21               	movwf	(getHopCode@tempHop+1)^0,c
 18662  006138  0E00               	movlw	0
 18663  00613A  6E20               	movwf	getHopCode@tempHop^0,c
 18664                           
 18665                           ; BSR set to: 0
 18666                           ;keeloqDecrypt_MC50.c: 269:     int8_t tempPos=-1;
 18667  00613C  6822               	setf	getHopCode@tempPos^0,c
 18668                           
 18669                           ;keeloqDecrypt_MC50.c: 270:     for(i=0;i<25;i++)
 18670  00613E  0E00               	movlw	0
 18671  006140  6E23               	movwf	getHopCode@i^0,c
 18672  006142                     l19695:
 18673                           
 18674                           ; BSR set to: 0
 18675                           ;keeloqDecrypt_MC50.c: 271:     {;keeloqDecrypt_MC50.c: 272:         if(listSyncValues[i
      +                          ].serial==data->serialnumber)
 18676  006142  EE20 F004          	lfsr	2,4
 18677  006146  5016               	movf	getHopCode@data^0,w,c
 18678  006148  26D9               	addwf	fsr2l,f,c
 18679  00614A  5017               	movf	(getHopCode@data+1)^0,w,c
 18680  00614C  22DA               	addwfc	fsr2h,f,c
 18681  00614E  5023               	movf	getHopCode@i^0,w,c
 18682  006150  0D06               	mullw	6
 18683  006152  0E00               	movlw	low _listSyncValues
 18684  006154  24F3               	addwf	243,w,c
 18685  006156  6EE1               	movwf	fsr1l,c
 18686  006158  0E03               	movlw	high _listSyncValues
 18687  00615A  20F4               	addwfc	prodh,w,c
 18688  00615C  6EE2               	movwf	fsr1h,c
 18689  00615E  50DE               	movf	postinc2,w,c
 18690  006160  18E6               	xorwf	postinc1,w,c
 18691  006162  E118               	bnz	l19701
 18692  006164  50DE               	movf	postinc2,w,c
 18693  006166  18E6               	xorwf	postinc1,w,c
 18694  006168  E115               	bnz	l19701
 18695  00616A  50DE               	movf	postinc2,w,c
 18696  00616C  18E6               	xorwf	postinc1,w,c
 18697  00616E  E112               	bnz	l19701
 18698  006170  50DE               	movf	postinc2,w,c
 18699  006172  18E6               	xorwf	postinc1,w,c
 18700  006174  A4D8               	btfss	status,2,c
 18701  006176  D00E               	goto	l19701
 18702                           
 18703                           ; BSR set to: 0
 18704                           ;keeloqDecrypt_MC50.c: 273:         {;keeloqDecrypt_MC50.c: 274:             tempHop=lis
      +                          tSyncValues[i].sync;
 18705  006178  5023               	movf	getHopCode@i^0,w,c
 18706  00617A  0D06               	mullw	6
 18707  00617C  0E04               	movlw	low (_listSyncValues+4)
 18708  00617E  24F3               	addwf	243,w,c
 18709  006180  6ED9               	movwf	fsr2l,c
 18710  006182  0E03               	movlw	high (_listSyncValues+4)
 18711  006184  20F4               	addwfc	prodh,w,c
 18712  006186  6EDA               	movwf	fsr2h,c
 18713  006188  CFDE F020          	movff	postinc2,getHopCode@tempHop
 18714  00618C  CFDD F021          	movff	postdec2,getHopCode@tempHop+1
 18715                           
 18716                           ; BSR set to: 0
 18717                           ;keeloqDecrypt_MC50.c: 275:             tempPos=i;
 18718  006190  C023  F022         	movff	getHopCode@i,getHopCode@tempPos
 18719  006194                     l19701:
 18720                           
 18721                           ; BSR set to: 0
 18722                           ;keeloqDecrypt_MC50.c: 278:     }
 18723  006194  2A23               	incf	getHopCode@i^0,f,c
 18724                           
 18725                           ; BSR set to: 0
 18726  006196  0E18               	movlw	24
 18727  006198  6423               	cpfsgt	getHopCode@i^0,c
 18728  00619A  D7D3               	goto	l19695
 18729                           
 18730                           ; BSR set to: 0
 18731                           ;keeloqDecrypt_MC50.c: 280:     if(tempPos<0)
 18732  00619C  AE22               	btfss	getHopCode@tempPos^0,7,c
 18733  00619E  D050               	goto	l19721
 18734                           
 18735                           ; BSR set to: 0
 18736                           ;keeloqDecrypt_MC50.c: 281:     {;keeloqDecrypt_MC50.c: 282:         listSyncValues[poin
      +                          tSync].serial=data->serialnumber;
 18737  0061A0  EE20 F004          	lfsr	2,4
 18738  0061A4  5016               	movf	getHopCode@data^0,w,c
 18739  0061A6  26D9               	addwf	fsr2l,f,c
 18740  0061A8  5017               	movf	(getHopCode@data+1)^0,w,c
 18741  0061AA  22DA               	addwfc	fsr2h,f,c
 18742  0061AC  C07A  F010         	movff	_pointSync,___wmul@multiplier	;volatile
 18743  0061B0  C07B  F011         	movff	_pointSync+1,___wmul@multiplier+1	;volatile
 18744  0061B4  0E00               	movlw	0
 18745  0061B6  6E13               	movwf	(___wmul@multiplicand+1)^0,c
 18746  0061B8  0E06               	movlw	6
 18747  0061BA  6E12               	movwf	___wmul@multiplicand^0,c
 18748  0061BC  EC0D  F047         	call	___wmul	;wreg free
 18749  0061C0  0E00               	movlw	low _listSyncValues
 18750  0061C2  2410               	addwf	?___wmul^0,w,c
 18751  0061C4  6EE1               	movwf	fsr1l,c
 18752  0061C6  0E03               	movlw	high _listSyncValues
 18753  0061C8  2011               	addwfc	(?___wmul+1)^0,w,c
 18754  0061CA  6EE2               	movwf	fsr1h,c
 18755  0061CC  CFDE FFE6          	movff	postinc2,postinc1
 18756  0061D0  CFDE FFE6          	movff	postinc2,postinc1
 18757  0061D4  CFDE FFE6          	movff	postinc2,postinc1
 18758  0061D8  CFDE FFE6          	movff	postinc2,postinc1
 18759                           
 18760                           ;keeloqDecrypt_MC50.c: 283:         listSyncValues[pointSync].sync=data->sync;
 18761  0061DC  EE20 F008          	lfsr	2,8
 18762  0061E0  5016               	movf	getHopCode@data^0,w,c
 18763  0061E2  26D9               	addwf	fsr2l,f,c
 18764  0061E4  5017               	movf	(getHopCode@data+1)^0,w,c
 18765  0061E6  22DA               	addwfc	fsr2h,f,c
 18766  0061E8  C07A  F010         	movff	_pointSync,___wmul@multiplier	;volatile
 18767  0061EC  C07B  F011         	movff	_pointSync+1,___wmul@multiplier+1	;volatile
 18768  0061F0  0E00               	movlw	0
 18769  0061F2  6E13               	movwf	(___wmul@multiplicand+1)^0,c
 18770  0061F4  0E06               	movlw	6
 18771  0061F6  6E12               	movwf	___wmul@multiplicand^0,c
 18772  0061F8  EC0D  F047         	call	___wmul	;wreg free
 18773  0061FC  0E04               	movlw	low (_listSyncValues+4)
 18774  0061FE  2410               	addwf	?___wmul^0,w,c
 18775  006200  6EE1               	movwf	fsr1l,c
 18776  006202  0E03               	movlw	high (_listSyncValues+4)
 18777  006204  2011               	addwfc	(?___wmul+1)^0,w,c
 18778  006206  6EE2               	movwf	fsr1h,c
 18779  006208  CFDE FFE6          	movff	postinc2,postinc1
 18780  00620C  CFDD FFE5          	movff	postdec2,postdec1
 18781                           
 18782                           ;keeloqDecrypt_MC50.c: 284:         pointSync++;
 18783  006210  0100               	movlb	0	; () banked
 18784  006212  4B7A               	infsnz	_pointSync& (0+255),f,b	;volatile
 18785  006214  2B7B               	incf	(_pointSync+1)& (0+255),f,b	;volatile
 18786                           
 18787                           ; BSR set to: 0
 18788                           ;keeloqDecrypt_MC50.c: 285:         if(pointSync>=25)
 18789  006216  517B               	movf	(_pointSync+1)& (0+255),w,b	;volatile
 18790  006218  E104               	bnz	u22620
 18791  00621A  0E19               	movlw	25
 18792  00621C  5D7A               	subwf	_pointSync& (0+255),w,b	;volatile
 18793  00621E  A0D8               	btfss	status,0,c
 18794  006220  D004               	goto	l19715
 18795  006222                     u22620:
 18796                           
 18797                           ; BSR set to: 0
 18798                           ;keeloqDecrypt_MC50.c: 286:         {;keeloqDecrypt_MC50.c: 287:             pointSync=0
      +                          ;
 18799  006222  0E00               	movlw	0
 18800  006224  6F7B               	movwf	(_pointSync+1)& (0+255),b	;volatile
 18801  006226  0E00               	movlw	0
 18802  006228  6F7A               	movwf	_pointSync& (0+255),b	;volatile
 18803  00622A                     l19715:
 18804                           
 18805                           ; BSR set to: 0
 18806                           ;keeloqDecrypt_MC50.c: 289:         return ReqResync(Hop);
 18807  00622A  C07C  F010         	movff	_Hop,ReqResync@CurrentHop
 18808  00622E  C07D  F011         	movff	_Hop+1,ReqResync@CurrentHop+1
 18809  006232  EC21  F048         	call	_ReqResync	;wreg free
 18810  006236  6E18               	movwf	??_getHopCode^0,c
 18811  006238  5018               	movf	??_getHopCode^0,w,c
 18812  00623A  6E16               	movwf	?_getHopCode^0,c
 18813  00623C  6A17               	clrf	(?_getHopCode+1)^0,c
 18814  00623E  0012               	return	
 18815  006240                     l19721:
 18816                           
 18817                           ; BSR set to: 0
 18818                           ;keeloqDecrypt_MC50.c: 292:     {;keeloqDecrypt_MC50.c: 293:         listSyncValues[temp
      +                          Pos].sync=Hop;
 18819  006240  5022               	movf	getHopCode@tempPos^0,w,c
 18820  006242  0D06               	mullw	6
 18821  006244  0E04               	movlw	low (_listSyncValues+4)
 18822  006246  24F3               	addwf	243,w,c
 18823  006248  6ED9               	movwf	fsr2l,c
 18824  00624A  0E03               	movlw	high (_listSyncValues+4)
 18825  00624C  20F4               	addwfc	prodh,w,c
 18826  00624E  6EDA               	movwf	fsr2h,c
 18827  006250  C07C  FFDE         	movff	_Hop,postinc2
 18828  006254  C07D  FFDD         	movff	_Hop+1,postdec2
 18829                           
 18830                           ; BSR set to: 0
 18831                           ;keeloqDecrypt_MC50.c: 296:     return tempHop;
 18832  006258  C020  F016         	movff	getHopCode@tempHop,?_getHopCode
 18833  00625C  C021  F017         	movff	getHopCode@tempHop+1,?_getHopCode+1
 18834  006260  0012               	return		;funcret
 18835  006262                     __end_of_getHopCode:
 18836                           	callstack 0
 18837                           
 18838 ;; *************** function _ReqResync *****************
 18839 ;; Defined at:
 18840 ;;		line 224 in file "keeloqDecrypt_MC50.c"
 18841 ;; Parameters:    Size  Location     Type
 18842 ;;  CurrentHop      2   15[COMRAM] unsigned short 
 18843 ;; Auto vars:     Size  Location     Type
 18844 ;;		None
 18845 ;; Return value:  Size  Location     Type
 18846 ;;                  1    wreg      enum E10730
 18847 ;; Registers used:
 18848 ;;		wreg, status,2, status,0
 18849 ;; Tracked objects:
 18850 ;;		On entry : 3F/0
 18851 ;;		On exit  : 3F/2
 18852 ;;		Unchanged: 0/0
 18853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18854 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18855 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18857 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18858 ;;Total ram usage:        2 bytes
 18859 ;; Hardware stack levels used: 1
 18860 ;; Hardware stack levels required when called: 4
 18861 ;; This function calls:
 18862 ;;		Nothing
 18863 ;; This function is called by:
 18864 ;;		_HopCHK
 18865 ;;		_getHopCode
 18866 ;; This function uses a non-reentrant model
 18867 ;;
 18868                           
 18869                           	psect	text68
 18870  009042                     __ptext68:
 18871                           	callstack 0
 18872  009042                     _ReqResync:
 18873                           	callstack 22
 18874                           
 18875                           ; BSR set to: 0
 18876                           ;keeloqDecrypt_MC50.c: 225:     F2Chance = 1;
 18877                           
 18878                           ;incstack = 0
 18879  009042  0E01               	movlw	1
 18880  009044  0101               	movlb	1	; () banked
 18881  009046  6F95               	movwf	_F2Chance& (0+255),b
 18882                           
 18883                           ; BSR set to: 1
 18884                           ;keeloqDecrypt_MC50.c: 226:     NextHop = CurrentHop + 1;
 18885  009048  0E01               	movlw	1
 18886  00904A  2410               	addwf	ReqResync@CurrentHop^0,w,c
 18887  00904C  0102               	movlb	2	; () banked
 18888  00904E  6F8E               	movwf	_NextHop& (0+255),b
 18889  009050  0E00               	movlw	0
 18890  009052  2011               	addwfc	(ReqResync@CurrentHop+1)^0,w,c
 18891  009054  6F8F               	movwf	(_NextHop+1)& (0+255),b
 18892                           
 18893                           ; BSR set to: 2
 18894                           ;keeloqDecrypt_MC50.c: 228:     return RESYNC_REQ;
 18895  009056  0E09               	movlw	9
 18896                           
 18897                           ; BSR set to: 2
 18898  009058  0012               	return		;funcret
 18899  00905A                     __end_of_ReqResync:
 18900                           	callstack 0
 18901                           
 18902 ;; *************** function _DecCHK *****************
 18903 ;; Defined at:
 18904 ;;		line 206 in file "keeloqDecrypt_MC50.c"
 18905 ;; Parameters:    Size  Location     Type
 18906 ;;  data            2   15[COMRAM] PTR struct .
 18907 ;;		 -> classic_data(16), 
 18908 ;; Auto vars:     Size  Location     Type
 18909 ;;		None
 18910 ;; Return value:  Size  Location     Type
 18911 ;;                  1    wreg      _Bool 
 18912 ;; Registers used:
 18913 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18914 ;; Tracked objects:
 18915 ;;		On entry : 3F/0
 18916 ;;		On exit  : 3F/0
 18917 ;;		Unchanged: 3F/0
 18918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18919 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18921 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18922 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18923 ;;Total ram usage:        4 bytes
 18924 ;; Hardware stack levels used: 1
 18925 ;; Hardware stack levels required when called: 4
 18926 ;; This function calls:
 18927 ;;		Nothing
 18928 ;; This function is called by:
 18929 ;;		_keeloqDecryptPacket
 18930 ;; This function uses a non-reentrant model
 18931 ;;
 18932                           
 18933                           	psect	text69
 18934  008A80                     __ptext69:
 18935                           	callstack 0
 18936  008A80                     _DecCHK:
 18937                           	callstack 24
 18938                           
 18939                           ; BSR set to: 0
 18940                           ;keeloqDecrypt_MC50.c: 208:     if (((data->fcode1 ^ data->fcode2) & 0x0f) != 0)
 18941                           
 18942                           ; BSR set to: 2
 18943                           ;incstack = 0
 18944  008A80  EE20 F00D          	lfsr	2,13
 18945  008A84  5010               	movf	DecCHK@data^0,w,c
 18946  008A86  26D9               	addwf	fsr2l,f,c
 18947  008A88  5011               	movf	(DecCHK@data+1)^0,w,c
 18948  008A8A  22DA               	addwfc	fsr2h,f,c
 18949  008A8C  50DF               	movf	indf2,w,c
 18950  008A8E  6E12               	movwf	??_DecCHK^0,c
 18951  008A90  EE20 F00C          	lfsr	2,12
 18952  008A94  5010               	movf	DecCHK@data^0,w,c
 18953  008A96  26D9               	addwf	fsr2l,f,c
 18954  008A98  5011               	movf	(DecCHK@data+1)^0,w,c
 18955  008A9A  22DA               	addwfc	fsr2h,f,c
 18956  008A9C  50DF               	movf	indf2,w,c
 18957  008A9E  1812               	xorwf	??_DecCHK^0,w,c
 18958  008AA0  6E13               	movwf	(??_DecCHK+1)^0,c
 18959  008AA2  0E0F               	movlw	15
 18960  008AA4  1613               	andwf	(??_DecCHK+1)^0,f,c
 18961  008AA6  B4D8               	btfsc	status,2,c
 18962  008AA8  D002               	goto	l20189
 18963                           
 18964                           ; BSR set to: 0
 18965                           ;keeloqDecrypt_MC50.c: 209:         return 0;
 18966  008AAA  0E00               	movlw	0
 18967  008AAC  0012               	return	
 18968  008AAE                     l20189:
 18969                           
 18970                           ; BSR set to: 0
 18971                           ;keeloqDecrypt_MC50.c: 211:     return 1;
 18972  008AAE  0E01               	movlw	1
 18973                           
 18974                           ; BSR set to: 0
 18975  008AB0  0012               	return		;funcret
 18976  008AB2                     __end_of_DecCHK:
 18977                           	callstack 0
 18978                           
 18979 ;; *************** function _DecryptPacket_12BIT *****************
 18980 ;; Defined at:
 18981 ;;		line 370 in file "keeloqDecrypt_MC50.c"
 18982 ;; Parameters:    Size  Location     Type
 18983 ;;  data            2    8[BANK0 ] PTR unsigned char 
 18984 ;;		 -> BufferRF(9), 
 18985 ;;  classic_data    2   10[BANK0 ] PTR struct .
 18986 ;;		 -> classic_data(16), 
 18987 ;; Auto vars:     Size  Location     Type
 18988 ;;  commandType     1   12[BANK0 ] enum E10539
 18989 ;; Return value:  Size  Location     Type
 18990 ;;                  1    wreg      enum E10539
 18991 ;; Registers used:
 18992 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18993 ;; Tracked objects:
 18994 ;;		On entry : 3F/0
 18995 ;;		On exit  : 3F/0
 18996 ;;		Unchanged: 0/0
 18997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18998 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18999 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19001 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19002 ;;Total ram usage:        5 bytes
 19003 ;; Hardware stack levels used: 1
 19004 ;; Hardware stack levels required when called: 14
 19005 ;; This function calls:
 19006 ;;		_memcpy
 19007 ;;		_validateRemoteSerialNumber
 19008 ;; This function is called by:
 19009 ;;		_readRFButtons
 19010 ;; This function uses a non-reentrant model
 19011 ;;
 19012                           
 19013                           	psect	text70
 19014  007690                     __ptext70:
 19015                           	callstack 0
 19016  007690                     _DecryptPacket_12BIT:
 19017                           	callstack 15
 19018                           
 19019                           ; BSR set to: 0
 19020                           ;keeloqDecrypt_MC50.c: 370: TypeCMD DecryptPacket_12BIT (char* data,classic_encoder_t* c
      +                          lassic_data);keeloqDecrypt_MC50.c: 371: {;keeloqDecrypt_MC50.c: 372:     TypeCMD command
      +                          Type;;keeloqDecrypt_MC50.c: 373:     memcpy(&classic_data->serialnumber, data, 4);
 19021                           
 19022                           ; BSR set to: 0
 19023                           ;incstack = 0
 19024  007690  0E04               	movlw	4
 19025  007692  25E2               	addwf	DecryptPacket_12BIT@classic_data& (0+255),w,b
 19026  007694  6E10               	movwf	memcpy@d1^0,c
 19027  007696  0E00               	movlw	0
 19028  007698  21E3               	addwfc	(DecryptPacket_12BIT@classic_data+1)& (0+255),w,b
 19029  00769A  6E11               	movwf	(memcpy@d1+1)^0,c
 19030  00769C  C0E0  F012         	movff	DecryptPacket_12BIT@data,memcpy@s1
 19031  0076A0  C0E1  F013         	movff	DecryptPacket_12BIT@data+1,memcpy@s1+1
 19032  0076A4  0E00               	movlw	0
 19033  0076A6  6E15               	movwf	(memcpy@n+1)^0,c
 19034  0076A8  0E04               	movlw	4
 19035  0076AA  6E14               	movwf	memcpy@n^0,c
 19036  0076AC  EC0C  F044         	call	_memcpy	;wreg free
 19037                           
 19038                           ;keeloqDecrypt_MC50.c: 374:     commandType=validateRemoteSerialNumber(classic_data->ser
      +                          ialnumber,NO,&classic_data->positionMem);
 19039  0076B0  0100               	movlb	0	; () banked
 19040  0076B2  EE20 F004          	lfsr	2,4
 19041  0076B6  51E2               	movf	DecryptPacket_12BIT@classic_data& (0+255),w,b
 19042  0076B8  26D9               	addwf	fsr2l,f,c
 19043  0076BA  51E3               	movf	(DecryptPacket_12BIT@classic_data+1)& (0+255),w,b
 19044  0076BC  22DA               	addwfc	fsr2h,f,c
 19045  0076BE  CFDE F02E          	movff	postinc2,validateRemoteSerialNumber@serial
 19046  0076C2  CFDE F02F          	movff	postinc2,validateRemoteSerialNumber@serial+1
 19047  0076C6  CFDE F030          	movff	postinc2,validateRemoteSerialNumber@serial+2
 19048  0076CA  CFDE F031          	movff	postinc2,validateRemoteSerialNumber@serial+3
 19049  0076CE  0E00               	movlw	0
 19050  0076D0  6E32               	movwf	validateRemoteSerialNumber@VerifyOnlySerial^0,c
 19051  0076D2  0E0F               	movlw	15
 19052  0076D4  25E2               	addwf	DecryptPacket_12BIT@classic_data& (0+255),w,b
 19053  0076D6  6E33               	movwf	validateRemoteSerialNumber@position^0,c
 19054  0076D8  0E00               	movlw	0
 19055  0076DA  21E3               	addwfc	(DecryptPacket_12BIT@classic_data+1)& (0+255),w,b
 19056  0076DC  6E34               	movwf	(validateRemoteSerialNumber@position+1)^0,c
 19057  0076DE  EC80  F02A         	call	_validateRemoteSerialNumber	;wreg free
 19058  0076E2  6FE4               	movwf	DecryptPacket_12BIT@commandType& (0+255),b
 19059                           
 19060                           ; BSR set to: 0
 19061                           ;keeloqDecrypt_MC50.c: 375:     classic_data->fcode1 = 0;
 19062  0076E4  EE20 F00C          	lfsr	2,12
 19063  0076E8  51E2               	movf	DecryptPacket_12BIT@classic_data& (0+255),w,b
 19064  0076EA  26D9               	addwf	fsr2l,f,c
 19065  0076EC  51E3               	movf	(DecryptPacket_12BIT@classic_data+1)& (0+255),w,b
 19066  0076EE  22DA               	addwfc	fsr2h,f,c
 19067  0076F0  0E00               	movlw	0
 19068  0076F2  6EDF               	movwf	indf2,c
 19069                           
 19070                           ; BSR set to: 0
 19071                           ;keeloqDecrypt_MC50.c: 376:     classic_data->sync = 0;
 19072  0076F4  EE20 F008          	lfsr	2,8
 19073  0076F8  51E2               	movf	DecryptPacket_12BIT@classic_data& (0+255),w,b
 19074  0076FA  26D9               	addwf	fsr2l,f,c
 19075  0076FC  51E3               	movf	(DecryptPacket_12BIT@classic_data+1)& (0+255),w,b
 19076  0076FE  22DA               	addwfc	fsr2h,f,c
 19077  007700  0E00               	movlw	0
 19078  007702  6EDE               	movwf	postinc2,c
 19079  007704  0E00               	movlw	0
 19080  007706  6EDD               	movwf	postdec2,c
 19081                           
 19082                           ; BSR set to: 0
 19083                           ;keeloqDecrypt_MC50.c: 377:     classic_data->type=DIP_12BIT;
 19084  007708  EE20 F00E          	lfsr	2,14
 19085  00770C  51E2               	movf	DecryptPacket_12BIT@classic_data& (0+255),w,b
 19086  00770E  26D9               	addwf	fsr2l,f,c
 19087  007710  51E3               	movf	(DecryptPacket_12BIT@classic_data+1)& (0+255),w,b
 19088  007712  22DA               	addwfc	fsr2h,f,c
 19089  007714  0E02               	movlw	2
 19090  007716  6EDF               	movwf	indf2,c
 19091                           
 19092                           ; BSR set to: 0
 19093                           ;keeloqDecrypt_MC50.c: 386:     return commandType;
 19094  007718  51E4               	movf	DecryptPacket_12BIT@commandType& (0+255),w,b
 19095                           
 19096                           ; BSR set to: 0
 19097  00771A  0012               	return		;funcret
 19098  00771C                     __end_of_DecryptPacket_12BIT:
 19099                           	callstack 0
 19100                           
 19101 ;; *************** function _validateRemoteSerialNumber *****************
 19102 ;; Defined at:
 19103 ;;		line 27 in file "controlMemory_MC50.c"
 19104 ;; Parameters:    Size  Location     Type
 19105 ;;  serial          4   45[COMRAM] unsigned long 
 19106 ;;  VerifyOnlySe    1   49[COMRAM] enum E10564
 19107 ;;  position        2   50[COMRAM] PTR unsigned char 
 19108 ;;		 -> controlSelectRemote@pos(1), classic_data(16), 
 19109 ;; Auto vars:     Size  Location     Type
 19110 ;;  mask            4   52[COMRAM] unsigned long 
 19111 ;;  i               1   57[COMRAM] unsigned char 
 19112 ;;  j               1   56[COMRAM] unsigned char 
 19113 ;; Return value:  Size  Location     Type
 19114 ;;                  1    wreg      enum E10539
 19115 ;; Registers used:
 19116 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19117 ;; Tracked objects:
 19118 ;;		On entry : 3F/0
 19119 ;;		On exit  : 3F/0
 19120 ;;		Unchanged: 0/0
 19121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19122 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19123 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19124 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19125 ;;      Totals:        13       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19126 ;;Total ram usage:       21 bytes
 19127 ;; Hardware stack levels used: 1
 19128 ;; Hardware stack levels required when called: 13
 19129 ;; This function calls:
 19130 ;;		_i2c_readDataBlock
 19131 ;; This function is called by:
 19132 ;;		_keeloqDecryptPacket
 19133 ;;		_DecryptPacket_12BIT
 19134 ;;		_controlSelectRemote
 19135 ;; This function uses a non-reentrant model
 19136 ;;
 19137                           
 19138                           	psect	text71
 19139  005500                     __ptext71:
 19140                           	callstack 0
 19141  005500                     _validateRemoteSerialNumber:
 19142                           	callstack 14
 19143                           
 19144                           ; BSR set to: 0
 19145                           ;controlMemory_MC50.c: 29:     char j=0;
 19146                           
 19147                           ; BSR set to: 0
 19148                           ;incstack = 0
 19149  005500  0E00               	movlw	0
 19150  005502  6E39               	movwf	validateRemoteSerialNumber@j^0,c
 19151                           
 19152                           ; BSR set to: 0
 19153                           ;controlMemory_MC50.c: 30:     unsigned long mask;;controlMemory_MC50.c: 33:     if(Veri
      +                          fyOnlySerial==YES)
 19154  005504  0432               	decf	validateRemoteSerialNumber@VerifyOnlySerial^0,w,c
 19155  005506  A4D8               	btfss	status,2,c
 19156  005508  D009               	goto	l1436
 19157                           
 19158                           ; BSR set to: 0
 19159                           ;controlMemory_MC50.c: 34:     {;controlMemory_MC50.c: 35:         mask=0x0FFFFFFF;
 19160  00550A  0EFF               	movlw	255
 19161  00550C  6E35               	movwf	validateRemoteSerialNumber@mask^0,c
 19162  00550E  0EFF               	movlw	255
 19163  005510  6E36               	movwf	(validateRemoteSerialNumber@mask+1)^0,c
 19164  005512  0EFF               	movlw	255
 19165  005514  6E37               	movwf	(validateRemoteSerialNumber@mask+2)^0,c
 19166  005516  0E0F               	movlw	15
 19167  005518  6E38               	movwf	(validateRemoteSerialNumber@mask+3)^0,c
 19168                           
 19169                           ;controlMemory_MC50.c: 36:     }
 19170  00551A  D004               	goto	l19549
 19171  00551C                     l1436:
 19172                           
 19173                           ; BSR set to: 0
 19174                           ;controlMemory_MC50.c: 38:     {;controlMemory_MC50.c: 39:         mask=0xFFFFFFFF;
 19175  00551C  6835               	setf	validateRemoteSerialNumber@mask^0,c
 19176  00551E  6836               	setf	(validateRemoteSerialNumber@mask+1)^0,c
 19177  005520  6837               	setf	(validateRemoteSerialNumber@mask+2)^0,c
 19178  005522  6838               	setf	(validateRemoteSerialNumber@mask+3)^0,c
 19179  005524                     l19549:
 19180                           
 19181                           ; BSR set to: 0
 19182                           ;controlMemory_MC50.c: 42:     for (i=0;i<var_sys_NVM.positionRemotesFull;i++)
 19183  005524  0E00               	movlw	0
 19184  005526  6E3A               	movwf	validateRemoteSerialNumber@i^0,c
 19185  005528  D056               	goto	l19567
 19186  00552A                     l19551:
 19187                           
 19188                           ; BSR set to: 0
 19189                           ;controlMemory_MC50.c: 43:     {;controlMemory_MC50.c: 44:         if(i%4==0)
 19190  00552A  C03A  F0D8         	movff	validateRemoteSerialNumber@i,??_validateRemoteSerialNumber
 19191  00552E  0E03               	movlw	3
 19192  005530  17D8               	andwf	??_validateRemoteSerialNumber& (0+255),f,b
 19193  005532  A4D8               	btfss	status,2,c
 19194  005534  D01C               	goto	l19557
 19195                           
 19196                           ; BSR set to: 0
 19197                           ;controlMemory_MC50.c: 45:         {;controlMemory_MC50.c: 46:             j=0;
 19198  005536  0E00               	movlw	0
 19199  005538  6E39               	movwf	validateRemoteSerialNumber@j^0,c
 19200                           
 19201                           ; BSR set to: 0
 19202                           ;controlMemory_MC50.c: 48:             i2c_readDataBlock(0x50, (uint16_t)(0x0200 + (i * 
      +                          4)),(char*)memoryTEMP, 16);
 19203  00553A  503A               	movf	validateRemoteSerialNumber@i^0,w,c
 19204  00553C  6FD8               	movwf	??_validateRemoteSerialNumber& (0+255),b
 19205  00553E  6BD9               	clrf	(??_validateRemoteSerialNumber+1)& (0+255),b
 19206  005540  90D8               	bcf	status,0,c
 19207  005542  37D8               	rlcf	??_validateRemoteSerialNumber& (0+255),f,b
 19208  005544  37D9               	rlcf	(??_validateRemoteSerialNumber+1)& (0+255),f,b
 19209  005546  90D8               	bcf	status,0,c
 19210  005548  37D8               	rlcf	??_validateRemoteSerialNumber& (0+255),f,b
 19211  00554A  37D9               	rlcf	(??_validateRemoteSerialNumber+1)& (0+255),f,b
 19212  00554C  0E00               	movlw	0
 19213  00554E  25D8               	addwf	??_validateRemoteSerialNumber& (0+255),w,b
 19214  005550  6E22               	movwf	i2c_readDataBlock@reg^0,c
 19215  005552  0E02               	movlw	2
 19216  005554  21D9               	addwfc	(??_validateRemoteSerialNumber+1)& (0+255),w,b
 19217  005556  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 19218  005558  0EA2               	movlw	low _memoryTEMP
 19219  00555A  6E24               	movwf	i2c_readDataBlock@data^0,c
 19220  00555C  0E02               	movlw	high _memoryTEMP
 19221  00555E  6E25               	movwf	(i2c_readDataBlock@data+1)^0,c
 19222  005560  0E00               	movlw	0
 19223  005562  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 19224  005564  0E10               	movlw	16
 19225  005566  6E26               	movwf	i2c_readDataBlock@len^0,c
 19226  005568  0E50               	movlw	80
 19227  00556A  ECD9  F03E         	call	_i2c_readDataBlock
 19228  00556E                     l19557:
 19229                           
 19230                           ;controlMemory_MC50.c: 50:         if((unsigned long)serial==((unsigned long)memoryTEMP[
      +                          j]&mask))
 19231  00556E  5039               	movf	validateRemoteSerialNumber@j^0,w,c
 19232  005570  0D04               	mullw	4
 19233  005572  0EA2               	movlw	low _memoryTEMP
 19234  005574  24F3               	addwf	243,w,c
 19235  005576  6ED9               	movwf	fsr2l,c
 19236  005578  0E02               	movlw	high _memoryTEMP
 19237  00557A  20F4               	addwfc	prodh,w,c
 19238  00557C  6EDA               	movwf	fsr2h,c
 19239  00557E  CFDE F0D8          	movff	postinc2,??_validateRemoteSerialNumber
 19240  005582  CFDE F0D9          	movff	postinc2,??_validateRemoteSerialNumber+1
 19241  005586  CFDE F0DA          	movff	postinc2,??_validateRemoteSerialNumber+2
 19242  00558A  CFDE F0DB          	movff	postinc2,??_validateRemoteSerialNumber+3
 19243  00558E  5035               	movf	validateRemoteSerialNumber@mask^0,w,c
 19244  005590  0100               	movlb	0	; () banked
 19245  005592  15D8               	andwf	??_validateRemoteSerialNumber& (0+255),w,b
 19246  005594  6FDC               	movwf	(??_validateRemoteSerialNumber+4)& (0+255),b
 19247  005596  5036               	movf	(validateRemoteSerialNumber@mask+1)^0,w,c
 19248  005598  15D9               	andwf	(??_validateRemoteSerialNumber+1)& (0+255),w,b
 19249  00559A  6FDD               	movwf	(??_validateRemoteSerialNumber+5)& (0+255),b
 19250  00559C  5037               	movf	(validateRemoteSerialNumber@mask+2)^0,w,c
 19251  00559E  15DA               	andwf	(??_validateRemoteSerialNumber+2)& (0+255),w,b
 19252  0055A0  6FDE               	movwf	(??_validateRemoteSerialNumber+6)& (0+255),b
 19253  0055A2  5038               	movf	(validateRemoteSerialNumber@mask+3)^0,w,c
 19254  0055A4  15DB               	andwf	(??_validateRemoteSerialNumber+3)& (0+255),w,b
 19255  0055A6  6FDF               	movwf	(??_validateRemoteSerialNumber+7)& (0+255),b
 19256  0055A8  502E               	movf	validateRemoteSerialNumber@serial^0,w,c
 19257  0055AA  19DC               	xorwf	(??_validateRemoteSerialNumber+4)& (0+255),w,b
 19258  0055AC  E112               	bnz	l19565
 19259  0055AE  502F               	movf	(validateRemoteSerialNumber@serial+1)^0,w,c
 19260  0055B0  19DD               	xorwf	(??_validateRemoteSerialNumber+5)& (0+255),w,b
 19261  0055B2  E10F               	bnz	l19565
 19262  0055B4  5030               	movf	(validateRemoteSerialNumber@serial+2)^0,w,c
 19263  0055B6  19DE               	xorwf	(??_validateRemoteSerialNumber+6)& (0+255),w,b
 19264  0055B8  E10C               	bnz	l19565
 19265  0055BA  5031               	movf	(validateRemoteSerialNumber@serial+3)^0,w,c
 19266  0055BC  19DF               	xorwf	(??_validateRemoteSerialNumber+7)& (0+255),w,b
 19267  0055BE  A4D8               	btfss	status,2,c
 19268  0055C0  D008               	goto	l19565
 19269                           
 19270                           ; BSR set to: 0
 19271                           ;controlMemory_MC50.c: 51:         {;controlMemory_MC50.c: 53:             position[0]=i
      +                          ;
 19272  0055C2  C033  FFD9         	movff	validateRemoteSerialNumber@position,fsr2l
 19273  0055C6  C034  FFDA         	movff	validateRemoteSerialNumber@position+1,fsr2h
 19274  0055CA  C03A  FFDF         	movff	validateRemoteSerialNumber@i,indf2
 19275                           
 19276                           ; BSR set to: 0
 19277                           ;controlMemory_MC50.c: 54:             return TypeFull;
 19278  0055CE  0E01               	movlw	1
 19279  0055D0  0012               	return	
 19280  0055D2                     l19565:
 19281                           
 19282                           ; BSR set to: 0
 19283                           ;controlMemory_MC50.c: 57:         j++;
 19284  0055D2  2A39               	incf	validateRemoteSerialNumber@j^0,f,c
 19285                           
 19286                           ;controlMemory_MC50.c: 59:     }
 19287  0055D4  2A3A               	incf	validateRemoteSerialNumber@i^0,f,c
 19288  0055D6                     l19567:
 19289                           
 19290                           ; BSR set to: 0
 19291  0055D6  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 19292  0055D8  5C3A               	subwf	validateRemoteSerialNumber@i^0,w,c
 19293  0055DA  A0D8               	btfss	status,0,c
 19294  0055DC  D7A6               	goto	l19551
 19295                           
 19296                           ; BSR set to: 0
 19297                           ;controlMemory_MC50.c: 61:     for (i=0;i<var_sys_NVM.positionRemotesWalk;i++)
 19298  0055DE  0E00               	movlw	0
 19299  0055E0  6E3A               	movwf	validateRemoteSerialNumber@i^0,c
 19300  0055E2  D056               	goto	l19587
 19301  0055E4                     l19571:
 19302                           
 19303                           ; BSR set to: 0
 19304                           ;controlMemory_MC50.c: 62:     {;controlMemory_MC50.c: 63:         if(i%4==0)
 19305  0055E4  C03A  F0D8         	movff	validateRemoteSerialNumber@i,??_validateRemoteSerialNumber
 19306  0055E8  0E03               	movlw	3
 19307  0055EA  17D8               	andwf	??_validateRemoteSerialNumber& (0+255),f,b
 19308  0055EC  A4D8               	btfss	status,2,c
 19309  0055EE  D01C               	goto	l19577
 19310                           
 19311                           ; BSR set to: 0
 19312                           ;controlMemory_MC50.c: 64:         {;controlMemory_MC50.c: 65:             j=0;
 19313  0055F0  0E00               	movlw	0
 19314  0055F2  6E39               	movwf	validateRemoteSerialNumber@j^0,c
 19315                           
 19316                           ; BSR set to: 0
 19317                           ;controlMemory_MC50.c: 66:             i2c_readDataBlock(0x50, (uint16_t)(0x0500 + (i * 
      +                          4)),(char*)memoryTEMP, 16);
 19318  0055F4  503A               	movf	validateRemoteSerialNumber@i^0,w,c
 19319  0055F6  6FD8               	movwf	??_validateRemoteSerialNumber& (0+255),b
 19320  0055F8  6BD9               	clrf	(??_validateRemoteSerialNumber+1)& (0+255),b
 19321  0055FA  90D8               	bcf	status,0,c
 19322  0055FC  37D8               	rlcf	??_validateRemoteSerialNumber& (0+255),f,b
 19323  0055FE  37D9               	rlcf	(??_validateRemoteSerialNumber+1)& (0+255),f,b
 19324  005600  90D8               	bcf	status,0,c
 19325  005602  37D8               	rlcf	??_validateRemoteSerialNumber& (0+255),f,b
 19326  005604  37D9               	rlcf	(??_validateRemoteSerialNumber+1)& (0+255),f,b
 19327  005606  0E00               	movlw	0
 19328  005608  25D8               	addwf	??_validateRemoteSerialNumber& (0+255),w,b
 19329  00560A  6E22               	movwf	i2c_readDataBlock@reg^0,c
 19330  00560C  0E05               	movlw	5
 19331  00560E  21D9               	addwfc	(??_validateRemoteSerialNumber+1)& (0+255),w,b
 19332  005610  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 19333  005612  0EA2               	movlw	low _memoryTEMP
 19334  005614  6E24               	movwf	i2c_readDataBlock@data^0,c
 19335  005616  0E02               	movlw	high _memoryTEMP
 19336  005618  6E25               	movwf	(i2c_readDataBlock@data+1)^0,c
 19337  00561A  0E00               	movlw	0
 19338  00561C  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 19339  00561E  0E10               	movlw	16
 19340  005620  6E26               	movwf	i2c_readDataBlock@len^0,c
 19341  005622  0E50               	movlw	80
 19342  005624  ECD9  F03E         	call	_i2c_readDataBlock
 19343  005628                     l19577:
 19344                           
 19345                           ;controlMemory_MC50.c: 69:         if((unsigned long)serial==((unsigned long)memoryTEMP[
      +                          j]&mask))
 19346  005628  5039               	movf	validateRemoteSerialNumber@j^0,w,c
 19347  00562A  0D04               	mullw	4
 19348  00562C  0EA2               	movlw	low _memoryTEMP
 19349  00562E  24F3               	addwf	243,w,c
 19350  005630  6ED9               	movwf	fsr2l,c
 19351  005632  0E02               	movlw	high _memoryTEMP
 19352  005634  20F4               	addwfc	prodh,w,c
 19353  005636  6EDA               	movwf	fsr2h,c
 19354  005638  CFDE F0D8          	movff	postinc2,??_validateRemoteSerialNumber
 19355  00563C  CFDE F0D9          	movff	postinc2,??_validateRemoteSerialNumber+1
 19356  005640  CFDE F0DA          	movff	postinc2,??_validateRemoteSerialNumber+2
 19357  005644  CFDE F0DB          	movff	postinc2,??_validateRemoteSerialNumber+3
 19358  005648  5035               	movf	validateRemoteSerialNumber@mask^0,w,c
 19359  00564A  0100               	movlb	0	; () banked
 19360  00564C  15D8               	andwf	??_validateRemoteSerialNumber& (0+255),w,b
 19361  00564E  6FDC               	movwf	(??_validateRemoteSerialNumber+4)& (0+255),b
 19362  005650  5036               	movf	(validateRemoteSerialNumber@mask+1)^0,w,c
 19363  005652  15D9               	andwf	(??_validateRemoteSerialNumber+1)& (0+255),w,b
 19364  005654  6FDD               	movwf	(??_validateRemoteSerialNumber+5)& (0+255),b
 19365  005656  5037               	movf	(validateRemoteSerialNumber@mask+2)^0,w,c
 19366  005658  15DA               	andwf	(??_validateRemoteSerialNumber+2)& (0+255),w,b
 19367  00565A  6FDE               	movwf	(??_validateRemoteSerialNumber+6)& (0+255),b
 19368  00565C  5038               	movf	(validateRemoteSerialNumber@mask+3)^0,w,c
 19369  00565E  15DB               	andwf	(??_validateRemoteSerialNumber+3)& (0+255),w,b
 19370  005660  6FDF               	movwf	(??_validateRemoteSerialNumber+7)& (0+255),b
 19371  005662  502E               	movf	validateRemoteSerialNumber@serial^0,w,c
 19372  005664  19DC               	xorwf	(??_validateRemoteSerialNumber+4)& (0+255),w,b
 19373  005666  E112               	bnz	l19585
 19374  005668  502F               	movf	(validateRemoteSerialNumber@serial+1)^0,w,c
 19375  00566A  19DD               	xorwf	(??_validateRemoteSerialNumber+5)& (0+255),w,b
 19376  00566C  E10F               	bnz	l19585
 19377  00566E  5030               	movf	(validateRemoteSerialNumber@serial+2)^0,w,c
 19378  005670  19DE               	xorwf	(??_validateRemoteSerialNumber+6)& (0+255),w,b
 19379  005672  E10C               	bnz	l19585
 19380  005674  5031               	movf	(validateRemoteSerialNumber@serial+3)^0,w,c
 19381  005676  19DF               	xorwf	(??_validateRemoteSerialNumber+7)& (0+255),w,b
 19382  005678  A4D8               	btfss	status,2,c
 19383  00567A  D008               	goto	l19585
 19384                           
 19385                           ; BSR set to: 0
 19386                           ;controlMemory_MC50.c: 70:         {;controlMemory_MC50.c: 72:             position[0]=i
      +                          ;
 19387  00567C  C033  FFD9         	movff	validateRemoteSerialNumber@position,fsr2l
 19388  005680  C034  FFDA         	movff	validateRemoteSerialNumber@position+1,fsr2h
 19389  005684  C03A  FFDF         	movff	validateRemoteSerialNumber@i,indf2
 19390                           
 19391                           ; BSR set to: 0
 19392                           ;controlMemory_MC50.c: 73:             return TypeWalk;
 19393  005688  0E02               	movlw	2
 19394  00568A  0012               	return	
 19395  00568C                     l19585:
 19396                           
 19397                           ; BSR set to: 0
 19398                           ;controlMemory_MC50.c: 75:         j++;
 19399  00568C  2A39               	incf	validateRemoteSerialNumber@j^0,f,c
 19400                           
 19401                           ;controlMemory_MC50.c: 76:     }
 19402  00568E  2A3A               	incf	validateRemoteSerialNumber@i^0,f,c
 19403  005690                     l19587:
 19404                           
 19405                           ; BSR set to: 0
 19406  005690  51B9               	movf	(_var_sys_NVM+33)& (0+255),w,b	;volatile
 19407  005692  5C3A               	subwf	validateRemoteSerialNumber@i^0,w,c
 19408  005694  A0D8               	btfss	status,0,c
 19409  005696  D7A6               	goto	l19571
 19410                           
 19411                           ; BSR set to: 0
 19412                           ;controlMemory_MC50.c: 78:     return NoCMD;
 19413  005698  0E00               	movlw	0
 19414                           
 19415                           ; BSR set to: 0
 19416  00569A  0012               	return		;funcret
 19417  00569C                     __end_of_validateRemoteSerialNumber:
 19418                           	callstack 0
 19419                           
 19420 ;; *************** function _readInputs *****************
 19421 ;; Defined at:
 19422 ;;		line 528 in file "inputs_MC50.c"
 19423 ;; Parameters:    Size  Location     Type
 19424 ;;		None
 19425 ;; Auto vars:     Size  Location     Type
 19426 ;;		None
 19427 ;; Return value:  Size  Location     Type
 19428 ;;                  1    wreg      void 
 19429 ;; Registers used:
 19430 ;;		wreg, status,2, status,0
 19431 ;; Tracked objects:
 19432 ;;		On entry : 3F/1
 19433 ;;		On exit  : 3E/0
 19434 ;;		Unchanged: 0/0
 19435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19436 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19437 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19439 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19440 ;;Total ram usage:        0 bytes
 19441 ;; Hardware stack levels used: 1
 19442 ;; Hardware stack levels required when called: 4
 19443 ;; This function calls:
 19444 ;;		Nothing
 19445 ;; This function is called by:
 19446 ;;		_main
 19447 ;; This function uses a non-reentrant model
 19448 ;;
 19449                           
 19450                           	psect	text72
 19451  0067FA                     __ptext72:
 19452                           	callstack 0
 19453  0067FA                     _readInputs:
 19454                           	callstack 26
 19455                           
 19456                           ; BSR set to: 1
 19457                           ;inputs_MC50.c: 533:     if(var_sys_NVM.Direction_motor == 0){fimdecurso.FimdeCursoClose
      +                          AUX=PORTAbits.RA1;}
 19458                           
 19459                           ; BSR set to: 0
 19460                           ;incstack = 0
 19461  0067FA  0100               	movlb	0	; () banked
 19462  0067FC  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 19463  0067FE  A4D8               	btfss	status,2,c
 19464  006800  D006               	goto	l16613
 19465                           
 19466                           ; BSR set to: 0
 19467  006802  0E00               	movlw	0
 19468  006804  B28D               	btfsc	141,1,c	;volatile
 19469  006806  0E01               	movlw	1
 19470  006808  0101               	movlb	1	; () banked
 19471  00680A  6F78               	movwf	(_fimdecurso+3)& (0+255),b	;volatile
 19472  00680C  D005               	goto	l16615
 19473  00680E                     l16613:
 19474                           
 19475                           ; BSR set to: 0
 19476  00680E  0E00               	movlw	0
 19477  006810  B48D               	btfsc	141,2,c	;volatile
 19478  006812  0E01               	movlw	1
 19479  006814  0101               	movlb	1	; () banked
 19480  006816  6F78               	movwf	(_fimdecurso+3)& (0+255),b	;volatile
 19481  006818                     l16615:
 19482                           
 19483                           ; BSR set to: 1
 19484                           ;inputs_MC50.c: 541:     if (fimdecurso.FimdeCursoCloseAUX==fimdecurso.FimdeCursoCloseOL
      +                          D)
 19485  006818  5179               	movf	(_fimdecurso+4)& (0+255),w,b	;volatile
 19486  00681A  1978               	xorwf	(_fimdecurso+3)& (0+255),w,b	;volatile
 19487  00681C  A4D8               	btfss	status,2,c
 19488  00681E  D002               	goto	l1726
 19489                           
 19490                           ; BSR set to: 1
 19491                           ;inputs_MC50.c: 542:     {;inputs_MC50.c: 543:            fimdecurso.FimdeCursoCloseTime
      +                          r++;
 19492  006820  2B7A               	incf	(_fimdecurso+5)& (0+255),f,b	;volatile
 19493                           
 19494                           ;inputs_MC50.c: 544:     }
 19495  006822  D004               	goto	l1727
 19496  006824                     l1726:
 19497                           
 19498                           ; BSR set to: 1
 19499                           ;inputs_MC50.c: 547:     {;inputs_MC50.c: 548:             fimdecurso.FimdeCursoCloseOLD
      +                           = fimdecurso.FimdeCursoCloseAUX;
 19500  006824  C178  F179         	movff	_fimdecurso+3,_fimdecurso+4	;volatile
 19501                           
 19502                           ; BSR set to: 1
 19503                           ;inputs_MC50.c: 549:             fimdecurso.FimdeCursoCloseTimer=0;
 19504  006828  0E00               	movlw	0
 19505  00682A  6F7A               	movwf	(_fimdecurso+5)& (0+255),b	;volatile
 19506  00682C                     l1727:
 19507                           
 19508                           ; BSR set to: 1
 19509                           ;inputs_MC50.c: 553:     if (fimdecurso.FimdeCursoCloseTimer>=( 50/50))
 19510  00682C  517A               	movf	(_fimdecurso+5)& (0+255),w,b	;volatile
 19511  00682E  A4D8               	btfss	status,2,c
 19512                           
 19513                           ; BSR set to: 1
 19514                           ;inputs_MC50.c: 554:     {;inputs_MC50.c: 555:         var_sys.FimCurso_CloseIsEnabled=f
      +                          imdecurso.FimdeCursoCloseAUX;
 19515  006830  C178  F103         	movff	_fimdecurso+3,_var_sys+3	;volatile
 19516                           
 19517                           ; BSR set to: 1
 19518                           ;inputs_MC50.c: 564:     if(var_sys_NVM.Direction_motor == 0){fimdecurso.FimdeCursoOpenA
      +                          UX=PORTAbits.RA2;}
 19519  006834  0100               	movlb	0	; () banked
 19520  006836  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 19521  006838  A4D8               	btfss	status,2,c
 19522  00683A  D006               	goto	l16627
 19523                           
 19524                           ; BSR set to: 0
 19525  00683C  0E00               	movlw	0
 19526  00683E  B48D               	btfsc	141,2,c	;volatile
 19527  006840  0E01               	movlw	1
 19528  006842  0101               	movlb	1	; () banked
 19529  006844  6F75               	movwf	_fimdecurso& (0+255),b	;volatile
 19530  006846  D005               	goto	l16629
 19531  006848                     l16627:
 19532                           
 19533                           ; BSR set to: 0
 19534  006848  0E00               	movlw	0
 19535  00684A  B28D               	btfsc	141,1,c	;volatile
 19536  00684C  0E01               	movlw	1
 19537  00684E  0101               	movlb	1	; () banked
 19538  006850  6F75               	movwf	_fimdecurso& (0+255),b	;volatile
 19539  006852                     l16629:
 19540                           
 19541                           ; BSR set to: 1
 19542                           ;inputs_MC50.c: 570:     if (fimdecurso.FimdeCursoOpenAUX==fimdecurso.FimdeCursoOpenOLD)
 19543  006852  5175               	movf	_fimdecurso& (0+255),w,b	;volatile
 19544  006854  1976               	xorwf	(_fimdecurso+1)& (0+255),w,b	;volatile
 19545  006856  A4D8               	btfss	status,2,c
 19546  006858  D002               	goto	l1731
 19547                           
 19548                           ; BSR set to: 1
 19549                           ;inputs_MC50.c: 571:     {;inputs_MC50.c: 572:            fimdecurso.FimdeCursoOpenTimer
      +                          ++;
 19550  00685A  2B77               	incf	(_fimdecurso+2)& (0+255),f,b	;volatile
 19551                           
 19552                           ;inputs_MC50.c: 573:     }
 19553  00685C  D004               	goto	l1732
 19554  00685E                     l1731:
 19555                           
 19556                           ; BSR set to: 1
 19557                           ;inputs_MC50.c: 576:     {;inputs_MC50.c: 577:             fimdecurso.FimdeCursoOpenOLD 
      +                          = fimdecurso.FimdeCursoOpenAUX;
 19558  00685E  C175  F176         	movff	_fimdecurso,_fimdecurso+1	;volatile
 19559                           
 19560                           ; BSR set to: 1
 19561                           ;inputs_MC50.c: 578:             fimdecurso.FimdeCursoOpenTimer=0;
 19562  006862  0E00               	movlw	0
 19563  006864  6F77               	movwf	(_fimdecurso+2)& (0+255),b	;volatile
 19564  006866                     l1732:
 19565                           
 19566                           ; BSR set to: 1
 19567                           ;inputs_MC50.c: 582:     if (fimdecurso.FimdeCursoOpenTimer>=( 50/50))
 19568  006866  5177               	movf	(_fimdecurso+2)& (0+255),w,b	;volatile
 19569  006868  A4D8               	btfss	status,2,c
 19570                           
 19571                           ; BSR set to: 1
 19572                           ;inputs_MC50.c: 583:     {;inputs_MC50.c: 584:         var_sys.FimCurso_OpenIsEnabled=fi
      +                          mdecurso.FimdeCursoOpenAUX;
 19573  00686A  C175  F104         	movff	_fimdecurso,_var_sys+4	;volatile
 19574                           
 19575                           ; BSR set to: 1
 19576                           ;inputs_MC50.c: 589:     security.PhotoCellAUX=PORTAbits.RA4;
 19577  00686E  0E00               	movlw	0
 19578  006870  B88D               	btfsc	141,4,c	;volatile
 19579  006872  0E01               	movlw	1
 19580  006874  6F6A               	movwf	_security& (0+255),b	;volatile
 19581                           
 19582                           ; BSR set to: 1
 19583                           ;inputs_MC50.c: 594:     if (security.PhotoCellAUX==security.PhotoCellOLD)
 19584  006876  516A               	movf	_security& (0+255),w,b	;volatile
 19585  006878  196B               	xorwf	(_security+1)& (0+255),w,b	;volatile
 19586  00687A  A4D8               	btfss	status,2,c
 19587  00687C  D002               	goto	l1734
 19588                           
 19589                           ; BSR set to: 1
 19590                           ;inputs_MC50.c: 595:     {;inputs_MC50.c: 596:            security.PhotoCellTimer++;
 19591  00687E  2B6C               	incf	(_security+2)& (0+255),f,b	;volatile
 19592                           
 19593                           ;inputs_MC50.c: 597:     }
 19594  006880  D004               	goto	l1735
 19595  006882                     l1734:
 19596                           
 19597                           ; BSR set to: 1
 19598                           ;inputs_MC50.c: 600:     {;inputs_MC50.c: 601:             security.PhotoCellOLD = secur
      +                          ity.PhotoCellAUX;
 19599  006882  C16A  F16B         	movff	_security,_security+1	;volatile
 19600                           
 19601                           ; BSR set to: 1
 19602                           ;inputs_MC50.c: 602:             security.PhotoCellTimer=0;
 19603  006886  0E00               	movlw	0
 19604  006888  6F6C               	movwf	(_security+2)& (0+255),b	;volatile
 19605  00688A                     l1735:
 19606                           
 19607                           ; BSR set to: 1
 19608                           ;inputs_MC50.c: 606:     if (security.PhotoCellTimer>=( 50/50))
 19609  00688A  516C               	movf	(_security+2)& (0+255),w,b	;volatile
 19610  00688C  A4D8               	btfss	status,2,c
 19611                           
 19612                           ; BSR set to: 1
 19613                           ;inputs_MC50.c: 607:     {;inputs_MC50.c: 608:         var_sys.photoCellIsObstructed=sec
      +                          urity.PhotoCellAUX;
 19614  00688E  C16A  F101         	movff	_security,_var_sys+1	;volatile
 19615                           
 19616                           ; BSR set to: 1
 19617                           ;inputs_MC50.c: 612:     security.SecurityBarAUX=PORTAbits.RA5;
 19618  006892  0E00               	movlw	0
 19619  006894  BA8D               	btfsc	141,5,c	;volatile
 19620  006896  0E01               	movlw	1
 19621  006898  6F6D               	movwf	(_security+3)& (0+255),b	;volatile
 19622                           
 19623                           ; BSR set to: 1
 19624                           ;inputs_MC50.c: 616:     if (security.SecurityBarAUX==security.SecurityBarOLD)
 19625  00689A  516E               	movf	(_security+4)& (0+255),w,b	;volatile
 19626  00689C  196D               	xorwf	(_security+3)& (0+255),w,b	;volatile
 19627  00689E  A4D8               	btfss	status,2,c
 19628  0068A0  D002               	goto	l1737
 19629                           
 19630                           ; BSR set to: 1
 19631                           ;inputs_MC50.c: 617:     {;inputs_MC50.c: 618:            security.SecurityBarTimer++;
 19632  0068A2  2B6F               	incf	(_security+5)& (0+255),f,b	;volatile
 19633                           
 19634                           ;inputs_MC50.c: 619:     }
 19635  0068A4  D004               	goto	l1738
 19636  0068A6                     l1737:
 19637                           
 19638                           ; BSR set to: 1
 19639                           ;inputs_MC50.c: 622:     {;inputs_MC50.c: 623:             security.SecurityBarOLD = sec
      +                          urity.SecurityBarAUX;
 19640  0068A6  C16D  F16E         	movff	_security+3,_security+4	;volatile
 19641                           
 19642                           ; BSR set to: 1
 19643                           ;inputs_MC50.c: 624:             security.SecurityBarTimer=0;
 19644  0068AA  0E00               	movlw	0
 19645  0068AC  6F6F               	movwf	(_security+5)& (0+255),b	;volatile
 19646  0068AE                     l1738:
 19647                           
 19648                           ; BSR set to: 1
 19649                           ;inputs_MC50.c: 628:     if (security.SecurityBarTimer>=( 50/50))
 19650  0068AE  516F               	movf	(_security+5)& (0+255),w,b	;volatile
 19651  0068B0  A4D8               	btfss	status,2,c
 19652                           
 19653                           ; BSR set to: 1
 19654                           ;inputs_MC50.c: 629:     {;inputs_MC50.c: 630:         security.SecurityBarSTATE=securit
      +                          y.SecurityBarAUX;
 19655  0068B2  C16D  F170         	movff	_security+3,_security+6	;volatile
 19656                           
 19657                           ; BSR set to: 1
 19658                           ;inputs_MC50.c: 633:     security.SecurityBar8K2AUX=PORTAbits.RA6;
 19659  0068B6  0E00               	movlw	0
 19660  0068B8  BC8D               	btfsc	141,6,c	;volatile
 19661  0068BA  0E01               	movlw	1
 19662  0068BC  6F71               	movwf	(_security+7)& (0+255),b	;volatile
 19663                           
 19664                           ; BSR set to: 1
 19665                           ;inputs_MC50.c: 637:     if (security.SecurityBar8K2AUX==security.SecurityBar8K2OLD)
 19666  0068BE  5172               	movf	(_security+8)& (0+255),w,b	;volatile
 19667  0068C0  1971               	xorwf	(_security+7)& (0+255),w,b	;volatile
 19668  0068C2  A4D8               	btfss	status,2,c
 19669  0068C4  D002               	goto	l1740
 19670                           
 19671                           ; BSR set to: 1
 19672                           ;inputs_MC50.c: 638:     {;inputs_MC50.c: 639:            security.SecurityBar8K2Timer++
      +                          ;
 19673  0068C6  2B73               	incf	(_security+9)& (0+255),f,b	;volatile
 19674                           
 19675                           ;inputs_MC50.c: 640:     }
 19676  0068C8  D004               	goto	l1741
 19677  0068CA                     l1740:
 19678                           
 19679                           ; BSR set to: 1
 19680                           ;inputs_MC50.c: 643:     {;inputs_MC50.c: 644:             security.SecurityBar8K2OLD = 
      +                          security.SecurityBar8K2AUX;
 19681  0068CA  C171  F172         	movff	_security+7,_security+8	;volatile
 19682                           
 19683                           ; BSR set to: 1
 19684                           ;inputs_MC50.c: 645:             security.SecurityBar8K2Timer=0;
 19685  0068CE  0E00               	movlw	0
 19686  0068D0  6F73               	movwf	(_security+9)& (0+255),b	;volatile
 19687  0068D2                     l1741:
 19688                           
 19689                           ; BSR set to: 1
 19690                           ;inputs_MC50.c: 649:     if (security.SecurityBar8K2Timer>=( 50/50))
 19691  0068D2  5173               	movf	(_security+9)& (0+255),w,b	;volatile
 19692  0068D4  A4D8               	btfss	status,2,c
 19693                           
 19694                           ; BSR set to: 1
 19695                           ;inputs_MC50.c: 650:     {;inputs_MC50.c: 651:         security.SecurityBar8K2STATE=secu
      +                          rity.SecurityBar8K2AUX;
 19696  0068D6  C171  F174         	movff	_security+7,_security+10	;volatile
 19697                           
 19698                           ; BSR set to: 1
 19699                           ;inputs_MC50.c: 655:     if (var_sys_NVM.securityBandType == 0)
 19700  0068DA  0100               	movlb	0	; () banked
 19701  0068DC  51A2               	movf	(_var_sys_NVM+10)& (0+255),w,b	;volatile
 19702  0068DE  A4D8               	btfss	status,2,c
 19703  0068E0  D00D               	goto	l1743
 19704                           
 19705                           ; BSR set to: 0
 19706                           ;inputs_MC50.c: 656:     {;inputs_MC50.c: 657:         if(security.SecurityBarSTATE==0 &
      +                          & security.SecurityBar8K2STATE==1)
 19707  0068E2  0101               	movlb	1	; () banked
 19708  0068E4  5170               	movf	(_security+6)& (0+255),w,b	;volatile
 19709  0068E6  A4D8               	btfss	status,2,c
 19710  0068E8  D006               	goto	l16675
 19711                           
 19712                           ; BSR set to: 1
 19713  0068EA  0574               	decf	(_security+10)& (0+255),w,b	;volatile
 19714  0068EC  A4D8               	btfss	status,2,c
 19715  0068EE  D003               	goto	l16675
 19716                           
 19717                           ; BSR set to: 1
 19718                           ;inputs_MC50.c: 658:         {;inputs_MC50.c: 659:             var_sys.SecurityBarIsObst
      +                          ructed = NO;
 19719  0068F0  0E00               	movlw	0
 19720  0068F2  6F02               	movwf	(_var_sys+2)& (0+255),b	;volatile
 19721                           
 19722                           ;inputs_MC50.c: 660:         }
 19723  0068F4  0012               	return	
 19724  0068F6                     l16675:
 19725                           
 19726                           ; BSR set to: 1
 19727                           ;inputs_MC50.c: 662:         {;inputs_MC50.c: 663:             var_sys.SecurityBarIsObst
      +                          ructed = YES;
 19728  0068F6  0E01               	movlw	1
 19729  0068F8  6F02               	movwf	(_var_sys+2)& (0+255),b	;volatile
 19730  0068FA  0012               	return	
 19731  0068FC                     l1743:
 19732                           
 19733                           ; BSR set to: 0
 19734                           ;inputs_MC50.c: 667:     {;inputs_MC50.c: 668:         var_sys.SecurityBarIsObstructed =
      +                           security.SecurityBarSTATE;
 19735  0068FC  C170  F102         	movff	_security+6,_var_sys+2	;volatile
 19736  006900  0012               	return		;funcret
 19737  006902                     __end_of_readInputs:
 19738                           	callstack 0
 19739                           
 19740 ;; *************** function _loadNVM_VarSystem *****************
 19741 ;; Defined at:
 19742 ;;		line 139 in file "controlMemory_MC50.c"
 19743 ;; Parameters:    Size  Location     Type
 19744 ;;		None
 19745 ;; Auto vars:     Size  Location     Type
 19746 ;;		None
 19747 ;; Return value:  Size  Location     Type
 19748 ;;                  1    wreg      void 
 19749 ;; Registers used:
 19750 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19751 ;; Tracked objects:
 19752 ;;		On entry : 3F/0
 19753 ;;		On exit  : 0/0
 19754 ;;		Unchanged: 0/0
 19755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19759 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19760 ;;Total ram usage:        0 bytes
 19761 ;; Hardware stack levels used: 1
 19762 ;; Hardware stack levels required when called: 15
 19763 ;; This function calls:
 19764 ;;		_I2C1_Read1ByteRegister
 19765 ;;		_ResetDefaultMemory
 19766 ;;		_SaveNVM_VarSystem
 19767 ;;		_checkNVM_VarSystem
 19768 ;;		_i2c_readDataBlock
 19769 ;; This function is called by:
 19770 ;;		_main
 19771 ;; This function uses a non-reentrant model
 19772 ;;
 19773                           
 19774                           	psect	text73
 19775  006262                     __ptext73:
 19776                           	callstack 0
 19777  006262                     _loadNVM_VarSystem:
 19778                           	callstack 15
 19779                           
 19780                           ; BSR set to: 0
 19781                           ;controlMemory_MC50.c: 141:     if((I2C1_Read1ByteRegister(0x50, 0) == 0xFF) && (I2C1_Re
      +                          ad1ByteRegister(0x50, 16) == 0xFF))
 19782                           
 19783                           ;incstack = 0
 19784  006262  0E00               	movlw	0
 19785  006264  6E22               	movwf	I2C1_Read1ByteRegister@reg^0,c
 19786  006266  0E50               	movlw	80
 19787  006268  EC85  F041         	call	_I2C1_Read1ByteRegister
 19788  00626C  0AFF               	xorlw	255
 19789  00626E  A4D8               	btfss	status,2,c
 19790  006270  D04C               	goto	l22663
 19791  006272  0E10               	movlw	16
 19792  006274  6E22               	movwf	I2C1_Read1ByteRegister@reg^0,c
 19793  006276  0E50               	movlw	80
 19794  006278  EC85  F041         	call	_I2C1_Read1ByteRegister
 19795  00627C  0AFF               	xorlw	255
 19796  00627E  A4D8               	btfss	status,2,c
 19797  006280  D044               	goto	l22663
 19798                           
 19799                           ;controlMemory_MC50.c: 142:     {;controlMemory_MC50.c: 143:         ResetDefaultMemory(
      +                          SC);
 19800  006282  0E00               	movlw	0
 19801  006284  ECB3  F02D         	call	_ResetDefaultMemory
 19802                           
 19803                           ;controlMemory_MC50.c: 144:         var_sys_NVM.learningTimeToClose = 0;
 19804  006288  0E00               	movlw	0
 19805  00628A  0100               	movlb	0	; () banked
 19806  00628C  6FD0               	movwf	(_var_sys_NVM+56)& (0+255),b	;volatile
 19807  00628E  0E00               	movlw	0
 19808  006290  6FD1               	movwf	(_var_sys_NVM+57)& (0+255),b	;volatile
 19809  006292  0E00               	movlw	0
 19810  006294  6FD2               	movwf	(_var_sys_NVM+58)& (0+255),b	;volatile
 19811  006296  0E00               	movlw	0
 19812  006298  6FD3               	movwf	(_var_sys_NVM+59)& (0+255),b	;volatile
 19813                           
 19814                           ; BSR set to: 0
 19815                           ;controlMemory_MC50.c: 145:         var_sys_NVM.learningTimeToOpen = 0;
 19816  00629A  0E00               	movlw	0
 19817  00629C  6FCC               	movwf	(_var_sys_NVM+52)& (0+255),b	;volatile
 19818  00629E  0E00               	movlw	0
 19819  0062A0  6FCD               	movwf	(_var_sys_NVM+53)& (0+255),b	;volatile
 19820  0062A2  0E00               	movlw	0
 19821  0062A4  6FCE               	movwf	(_var_sys_NVM+54)& (0+255),b	;volatile
 19822  0062A6  0E00               	movlw	0
 19823  0062A8  6FCF               	movwf	(_var_sys_NVM+55)& (0+255),b	;volatile
 19824                           
 19825                           ; BSR set to: 0
 19826                           ;controlMemory_MC50.c: 146:         var_sys_NVM.learningCurrentNormalClose = 0;
 19827  0062AA  0E00               	movlw	0
 19828  0062AC  6FC9               	movwf	(_var_sys_NVM+49)& (0+255),b	;volatile
 19829  0062AE  0E00               	movlw	0
 19830  0062B0  6FC8               	movwf	(_var_sys_NVM+48)& (0+255),b	;volatile
 19831                           
 19832                           ; BSR set to: 0
 19833                           ;controlMemory_MC50.c: 147:         var_sys_NVM.learningCurrentNormalOpen = 0;
 19834  0062B2  0E00               	movlw	0
 19835  0062B4  6FCB               	movwf	(_var_sys_NVM+51)& (0+255),b	;volatile
 19836  0062B6  0E00               	movlw	0
 19837  0062B8  6FCA               	movwf	(_var_sys_NVM+50)& (0+255),b	;volatile
 19838                           
 19839                           ; BSR set to: 0
 19840                           ;controlMemory_MC50.c: 148:         var_sys_NVM.learningCurrentDecelarationClose = 0;
 19841  0062BA  0E00               	movlw	0
 19842  0062BC  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 19843  0062BE  0E00               	movlw	0
 19844  0062C0  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 19845  0062C2  0E00               	movlw	0
 19846  0062C4  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 19847  0062C6  0E00               	movlw	0
 19848  0062C8  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 19849                           
 19850                           ; BSR set to: 0
 19851                           ;controlMemory_MC50.c: 149:         var_sys_NVM.learningCurrentDecelarationOpen = 0;
 19852  0062CA  0E00               	movlw	0
 19853  0062CC  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 19854  0062CE  0E00               	movlw	0
 19855  0062D0  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 19856  0062D2  0E00               	movlw	0
 19857  0062D4  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 19858  0062D6  0E00               	movlw	0
 19859  0062D8  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 19860                           
 19861                           ;controlMemory_MC50.c: 150:         SaveNVM_VarSystem(pageMemoryLearningVars);
 19862  0062DA  0E03               	movlw	3
 19863  0062DC  EC0A  F045         	call	_SaveNVM_VarSystem
 19864                           
 19865                           ;controlMemory_MC50.c: 151:         var_sys_NVM.positionRemotesFull = 0;
 19866  0062E0  0E00               	movlw	0
 19867  0062E2  0100               	movlb	0	; () banked
 19868  0062E4  6FB8               	movwf	(_var_sys_NVM+32)& (0+255),b	;volatile
 19869                           
 19870                           ; BSR set to: 0
 19871                           ;controlMemory_MC50.c: 152:         var_sys_NVM.positionRemotesWalk = 0;
 19872  0062E6  0E00               	movlw	0
 19873  0062E8  6FB9               	movwf	(_var_sys_NVM+33)& (0+255),b	;volatile
 19874                           
 19875                           ; BSR set to: 0
 19876                           ;controlMemory_MC50.c: 153:         var_sys_NVM.OnlyRollingCode = NO;
 19877  0062EA  0E00               	movlw	0
 19878  0062EC  6FBE               	movwf	(_var_sys_NVM+38)& (0+255),b	;volatile
 19879                           
 19880                           ; BSR set to: 0
 19881                           ;controlMemory_MC50.c: 154:         var_sys_NVM.counterMoves = 0;
 19882  0062EE  0E00               	movlw	0
 19883  0062F0  6FBA               	movwf	(_var_sys_NVM+34)& (0+255),b	;volatile
 19884  0062F2  0E00               	movlw	0
 19885  0062F4  6FBB               	movwf	(_var_sys_NVM+35)& (0+255),b	;volatile
 19886  0062F6  0E00               	movlw	0
 19887  0062F8  6FBC               	movwf	(_var_sys_NVM+36)& (0+255),b	;volatile
 19888  0062FA  0E00               	movlw	0
 19889  0062FC  6FBD               	movwf	(_var_sys_NVM+37)& (0+255),b	;volatile
 19890                           
 19891                           ;controlMemory_MC50.c: 155:        SaveNVM_VarSystem(pageMemoryCounters);
 19892  0062FE  0E02               	movlw	2
 19893  006300  EC0A  F045         	call	_SaveNVM_VarSystem
 19894                           
 19895                           ;controlMemory_MC50.c: 157:          var_sys_NVM.TypeofMotor = 0;
 19896  006304  0E00               	movlw	0
 19897  006306  0100               	movlb	0	; () banked
 19898  006308  6FB4               	movwf	(_var_sys_NVM+28)& (0+255),b	;volatile
 19899  00630A                     l22663:
 19900                           
 19901                           ;controlMemory_MC50.c: 160:     i2c_readDataBlock(0x50, (uint16_t)(pageMemoryP * 16),(ch
      +                          ar*)&var_sys_NVM,16);
 19902  00630A  0E00               	movlw	0
 19903  00630C  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 19904  00630E  0E00               	movlw	0
 19905  006310  6E22               	movwf	i2c_readDataBlock@reg^0,c
 19906  006312  0E98               	movlw	low _var_sys_NVM
 19907  006314  6E24               	movwf	i2c_readDataBlock@data^0,c
 19908  006316  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
 19909  006318  0E00               	movlw	0
 19910  00631A  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 19911  00631C  0E10               	movlw	16
 19912  00631E  6E26               	movwf	i2c_readDataBlock@len^0,c
 19913  006320  0E50               	movlw	80
 19914  006322  ECD9  F03E         	call	_i2c_readDataBlock
 19915                           
 19916                           ;controlMemory_MC50.c: 161:     i2c_readDataBlock(0x50, (uint16_t)(pageMemoryE * 16),(ch
      +                          ar*)&var_sys_NVM.homemPresente, 16);
 19917  006326  0E00               	movlw	0
 19918  006328  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 19919  00632A  0E10               	movlw	16
 19920  00632C  6E22               	movwf	i2c_readDataBlock@reg^0,c
 19921  00632E  0EA8               	movlw	low (_var_sys_NVM+16)
 19922  006330  6E24               	movwf	i2c_readDataBlock@data^0,c
 19923  006332  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
 19924  006334  0E00               	movlw	0
 19925  006336  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 19926  006338  0E10               	movlw	16
 19927  00633A  6E26               	movwf	i2c_readDataBlock@len^0,c
 19928  00633C  0E50               	movlw	80
 19929  00633E  ECD9  F03E         	call	_i2c_readDataBlock
 19930                           
 19931                           ;controlMemory_MC50.c: 162:     i2c_readDataBlock(0x50, (uint16_t)(pageMemoryCounters * 
      +                          16),(char*)&var_sys_NVM.positionRemotesFull,16);
 19932  006342  0E00               	movlw	0
 19933  006344  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 19934  006346  0E20               	movlw	32
 19935  006348  6E22               	movwf	i2c_readDataBlock@reg^0,c
 19936  00634A  0EB8               	movlw	low (_var_sys_NVM+32)
 19937  00634C  6E24               	movwf	i2c_readDataBlock@data^0,c
 19938  00634E  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
 19939  006350  0E00               	movlw	0
 19940  006352  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 19941  006354  0E10               	movlw	16
 19942  006356  6E26               	movwf	i2c_readDataBlock@len^0,c
 19943  006358  0E50               	movlw	80
 19944  00635A  ECD9  F03E         	call	_i2c_readDataBlock
 19945                           
 19946                           ;controlMemory_MC50.c: 163:     i2c_readDataBlock(0x50, (uint16_t)(pageMemoryLearningVar
      +                          s * 16),(char*)&var_sys_NVM.learningCurrentNormalClose, 16);
 19947  00635E  0E00               	movlw	0
 19948  006360  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 19949  006362  0E30               	movlw	48
 19950  006364  6E22               	movwf	i2c_readDataBlock@reg^0,c
 19951  006366  0EC8               	movlw	low (_var_sys_NVM+48)
 19952  006368  6E24               	movwf	i2c_readDataBlock@data^0,c
 19953  00636A  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
 19954  00636C  0E00               	movlw	0
 19955  00636E  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 19956  006370  0E10               	movlw	16
 19957  006372  6E26               	movwf	i2c_readDataBlock@len^0,c
 19958  006374  0E50               	movlw	80
 19959  006376  ECD9  F03E         	call	_i2c_readDataBlock
 19960                           
 19961                           ;controlMemory_MC50.c: 166:     checkNVM_VarSystem();
 19962  00637A  ECB0  F029         	call	_checkNVM_VarSystem	;wreg free
 19963                           
 19964                           ;controlMemory_MC50.c: 168:     var_sys.actualCounterMoves=var_sys_NVM.counterMoves;
 19965  00637E  C0BA  F13C         	movff	_var_sys_NVM+34,_var_sys+60	;volatile
 19966  006382  C0BB  F13D         	movff	_var_sys_NVM+35,_var_sys+61	;volatile
 19967  006386  C0BC  F13E         	movff	_var_sys_NVM+36,_var_sys+62	;volatile
 19968  00638A  C0BD  F13F         	movff	_var_sys_NVM+37,_var_sys+63	;volatile
 19969  00638E  0012               	return		;funcret
 19970  006390                     __end_of_loadNVM_VarSystem:
 19971                           	callstack 0
 19972                           
 19973 ;; *************** function _i2c_readDataBlock *****************
 19974 ;; Defined at:
 19975 ;;		line 147 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 19976 ;; Parameters:    Size  Location     Type
 19977 ;;  address         1    wreg     unsigned char 
 19978 ;;  reg             2   33[COMRAM] unsigned short 
 19979 ;;  data            2   35[COMRAM] PTR void 
 19980 ;;		 -> var_sys_NVM.homemPresente(1), cmdMemoryIsEmpty@tempSerial(4), var_sys_NVM.positionRemotesFull(1), memoryTEMP(16)
      +, 
 19981 ;;		 -> var_sys_NVM.learningCurrentNormalClose(2), var_sys_NVM(64), 
 19982 ;;  len             2   37[COMRAM] unsigned int 
 19983 ;; Auto vars:     Size  Location     Type
 19984 ;;  address         1   40[COMRAM] unsigned char 
 19985 ;;  d               4   41[COMRAM] struct .
 19986 ;; Return value:  Size  Location     Type
 19987 ;;                  1    wreg      void 
 19988 ;; Registers used:
 19989 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19990 ;; Tracked objects:
 19991 ;;		On entry : 0/1
 19992 ;;		On exit  : 0/0
 19993 ;;		Unchanged: 0/0
 19994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19995 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19996 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19997 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19998 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19999 ;;Total ram usage:       12 bytes
 20000 ;; Hardware stack levels used: 1
 20001 ;; Hardware stack levels required when called: 12
 20002 ;; This function calls:
 20003 ;;		_I2C1_Close
 20004 ;;		_I2C1_MasterWrite
 20005 ;;		_I2C1_Open
 20006 ;;		_I2C1_SetAddressNackCallback
 20007 ;;		_I2C1_SetBuffer
 20008 ;;		_I2C1_SetDataCompleteCallback
 20009 ;; This function is called by:
 20010 ;;		_validateRemoteSerialNumber
 20011 ;;		_cmdMemoryIsEmpty
 20012 ;;		_loadNVM_VarSystem
 20013 ;; This function uses a non-reentrant model
 20014 ;;
 20015                           
 20016                           	psect	text74
 20017  007DB2                     __ptext74:
 20018                           	callstack 0
 20019  007DB2                     _i2c_readDataBlock:
 20020                           	callstack 14
 20021                           
 20022                           ;incstack = 0
 20023                           ;i2c_readDataBlock@address stored from wreg
 20024  007DB2  6E29               	movwf	i2c_readDataBlock@address^0,c
 20025                           
 20026                           ;mcc_generated_files/drivers/i2c_simple_master.c: 147: void i2c_readDataBlock(i2c1_addre
      +                          ss_t address, uint16_t reg, void *data, size_t len);mcc_generated_files/drivers/i2c_simp
      +                          le_master.c: 148: {;mcc_generated_files/drivers/i2c_simple_master.c: 149:     buf_t d;;m
      +                          cc_generated_files/drivers/i2c_simple_master.c: 150:     d.data = data;
 20027  007DB4  C024  F02C         	movff	i2c_readDataBlock@data,i2c_readDataBlock@d+2
 20028  007DB8  C025  F02D         	movff	i2c_readDataBlock@data+1,i2c_readDataBlock@d+3
 20029                           
 20030                           ;mcc_generated_files/drivers/i2c_simple_master.c: 151:     d.len = len;
 20031  007DBC  C026  F02A         	movff	i2c_readDataBlock@len,i2c_readDataBlock@d
 20032  007DC0  C027  F02B         	movff	i2c_readDataBlock@len+1,i2c_readDataBlock@d+1
 20033  007DC4                     l19417:
 20034  007DC4  5023               	movf	(i2c_readDataBlock@reg+1)^0,w,c
 20035  007DC6  1029               	iorwf	i2c_readDataBlock@address^0,w,c
 20036  007DC8  ECE4  F03C         	call	_I2C1_Open
 20037  007DCC  0900               	iorlw	0
 20038  007DCE  B4D8               	btfsc	status,2,c
 20039  007DD0  D7F9               	goto	l19417
 20040                           
 20041                           ;mcc_generated_files/drivers/i2c_simple_master.c: 154:     I2C1_SetDataCompleteCallback(
      +                          rdBlkRegCompleteHandler,&d);
 20042  007DD2  0E1E               	movlw	low _rdBlkRegCompleteHandler
 20043  007DD4  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 20044  007DD6  0E89               	movlw	high _rdBlkRegCompleteHandler
 20045  007DD8  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 20046  007DDA  0E2A               	movlw	low i2c_readDataBlock@d
 20047  007DDC  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 20048  007DDE  6A18               	clrf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 20049  007DE0  EC51  F048         	call	_I2C1_SetDataCompleteCallback	;wreg free
 20050                           
 20051                           ;mcc_generated_files/drivers/i2c_simple_master.c: 155:     I2C1_SetBuffer(&reg,1);
 20052  007DE4  0E22               	movlw	low i2c_readDataBlock@reg
 20053  007DE6  6E10               	movwf	I2C1_SetBuffer@buffer^0,c
 20054  007DE8  6A11               	clrf	(I2C1_SetBuffer@buffer+1)^0,c
 20055  007DEA  0E00               	movlw	0
 20056  007DEC  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 20057  007DEE  0E01               	movlw	1
 20058  007DF0  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 20059  007DF2  EC08  F048         	call	_I2C1_SetBuffer	;wreg free
 20060                           
 20061                           ; BSR set to: 2
 20062                           ;mcc_generated_files/drivers/i2c_simple_master.c: 156:     I2C1_SetAddressNackCallback((
      +                          (void*)0),((void*)0));
 20063  007DF6  0E00               	movlw	0
 20064  007DF8  6E15               	movwf	I2C1_SetAddressNackCallback@cb^0,c
 20065  007DFA  0E00               	movlw	0
 20066  007DFC  6E16               	movwf	(I2C1_SetAddressNackCallback@cb+1)^0,c
 20067  007DFE  0E00               	movlw	0
 20068  007E00  6E17               	movwf	I2C1_SetAddressNackCallback@ptr^0,c
 20069  007E02  0E00               	movlw	0
 20070  007E04  6E18               	movwf	(I2C1_SetAddressNackCallback@ptr+1)^0,c
 20071  007E06  EC39  F048         	call	_I2C1_SetAddressNackCallback	;wreg free
 20072                           
 20073                           ;mcc_generated_files/drivers/i2c_simple_master.c: 157:     I2C1_MasterWrite();
 20074  007E0A  EC07  F049         	call	_I2C1_MasterWrite	;wreg free
 20075  007E0E                     l19427:
 20076  007E0E  EC7A  F047         	call	_I2C1_Close	;wreg free
 20077  007E12  06E8               	decf	wreg,f,c
 20078  007E14  B4D8               	btfsc	status,2,c
 20079  007E16  D7FB               	goto	l19427
 20080                           
 20081                           ;mcc_generated_files/drivers/i2c_simple_master.c: 159:     _delay((unsigned long)((10)*(
      +                          64000000/4000.0)));
 20082  007E18  0ED0               	movlw	208
 20083  007E1A  6E28               	movwf	??_i2c_readDataBlock^0,c
 20084  007E1C  0ECA               	movlw	202
 20085  007E1E                     u28897:
 20086  007E1E  2EE8               	decfsz	wreg,f,c
 20087  007E20  D7FE               	bra	u28897
 20088  007E22  2E28               	decfsz	??_i2c_readDataBlock^0,f,c
 20089  007E24  D7FC               	bra	u28897
 20090  007E26  0012               	return		;funcret
 20091  007E28                     __end_of_i2c_readDataBlock:
 20092                           	callstack 0
 20093                           
 20094 ;; *************** function _checkNVM_VarSystem *****************
 20095 ;; Defined at:
 20096 ;;		line 314 in file "controlMemory_MC50.c"
 20097 ;; Parameters:    Size  Location     Type
 20098 ;;		None
 20099 ;; Auto vars:     Size  Location     Type
 20100 ;;  saveParam       1   57[COMRAM] unsigned char 
 20101 ;; Return value:  Size  Location     Type
 20102 ;;                  1    wreg      void 
 20103 ;; Registers used:
 20104 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20105 ;; Tracked objects:
 20106 ;;		On entry : 0/2
 20107 ;;		On exit  : 0/0
 20108 ;;		Unchanged: 0/0
 20109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20111 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20113 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20114 ;;Total ram usage:        1 bytes
 20115 ;; Hardware stack levels used: 1
 20116 ;; Hardware stack levels required when called: 14
 20117 ;; This function calls:
 20118 ;;		_SaveNVM_VarSystem
 20119 ;; This function is called by:
 20120 ;;		_loadNVM_VarSystem
 20121 ;; This function uses a non-reentrant model
 20122 ;;
 20123                           
 20124                           	psect	text75
 20125  005360                     __ptext75:
 20126                           	callstack 0
 20127  005360                     _checkNVM_VarSystem:
 20128                           	callstack 15
 20129                           
 20130                           ;controlMemory_MC50.c: 316:     char saveParam;;controlMemory_MC50.c: 319:     saveParam
      +                           = 0;
 20131                           
 20132                           ;incstack = 0
 20133  005360  0E00               	movlw	0
 20134  005362  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20135                           
 20136                           ;controlMemory_MC50.c: 327:     if ( var_sys_NVM.decelarationOpen>45 )
 20137  005364  0E2D               	movlw	45
 20138  005366  0100               	movlb	0	; () banked
 20139  005368  6598               	cpfsgt	_var_sys_NVM& (0+255),b	;volatile
 20140  00536A  D004               	goto	l21113
 20141                           
 20142                           ; BSR set to: 0
 20143                           ;controlMemory_MC50.c: 328:     {;controlMemory_MC50.c: 330:         var_sys_NVM.decelar
      +                          ationOpen = 3;
 20144  00536C  0E03               	movlw	3
 20145  00536E  6F98               	movwf	_var_sys_NVM& (0+255),b	;volatile
 20146                           
 20147                           ;controlMemory_MC50.c: 331:         saveParam=1;
 20148  005370  0E01               	movlw	1
 20149  005372  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20150  005374                     l21113:
 20151                           
 20152                           ; BSR set to: 0
 20153                           ;controlMemory_MC50.c: 334:     if ( var_sys_NVM.decelarationClose>45 )
 20154  005374  0E2D               	movlw	45
 20155  005376  6599               	cpfsgt	(_var_sys_NVM+1)& (0+255),b	;volatile
 20156  005378  D004               	goto	l1490
 20157                           
 20158                           ; BSR set to: 0
 20159                           ;controlMemory_MC50.c: 335:     {;controlMemory_MC50.c: 337:         var_sys_NVM.decelar
      +                          ationClose = 3;
 20160  00537A  0E03               	movlw	3
 20161  00537C  6F99               	movwf	(_var_sys_NVM+1)& (0+255),b	;volatile
 20162                           
 20163                           ;controlMemory_MC50.c: 338:         saveParam=1;
 20164  00537E  0E01               	movlw	1
 20165  005380  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20166  005382                     l1490:
 20167                           
 20168                           ; BSR set to: 0
 20169                           ;controlMemory_MC50.c: 341:     if ( (var_sys_NVM.motorPower<1) || (var_sys_NVM.motorPow
      +                          er>9) )
 20170  005382  519A               	movf	(_var_sys_NVM+2)& (0+255),w,b	;volatile
 20171  005384  B4D8               	btfsc	status,2,c
 20172  005386  D003               	goto	u24320
 20173                           
 20174                           ; BSR set to: 0
 20175  005388  0E09               	movlw	9
 20176  00538A  659A               	cpfsgt	(_var_sys_NVM+2)& (0+255),b	;volatile
 20177  00538C  D004               	goto	l21121
 20178  00538E                     u24320:
 20179                           
 20180                           ; BSR set to: 0
 20181                           ;controlMemory_MC50.c: 342:     {;controlMemory_MC50.c: 344:         var_sys_NVM.motorPo
      +                          wer = 9;
 20182  00538E  0E09               	movlw	9
 20183  005390  6F9A               	movwf	(_var_sys_NVM+2)& (0+255),b	;volatile
 20184                           
 20185                           ;controlMemory_MC50.c: 345:         saveParam=1;
 20186  005392  0E01               	movlw	1
 20187  005394  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20188  005396                     l21121:
 20189                           
 20190                           ; BSR set to: 0
 20191                           ;controlMemory_MC50.c: 348:     if ( var_sys_NVM.motorSensitivity>9 )
 20192  005396  0E09               	movlw	9
 20193  005398  659B               	cpfsgt	(_var_sys_NVM+3)& (0+255),b	;volatile
 20194  00539A  D004               	goto	l21125
 20195                           
 20196                           ; BSR set to: 0
 20197                           ;controlMemory_MC50.c: 349:     {;controlMemory_MC50.c: 351:         var_sys_NVM.motorSe
      +                          nsitivity = 0;
 20198  00539C  0E00               	movlw	0
 20199  00539E  6F9B               	movwf	(_var_sys_NVM+3)& (0+255),b	;volatile
 20200                           
 20201                           ;controlMemory_MC50.c: 352:         saveParam=1;
 20202  0053A0  0E01               	movlw	1
 20203  0053A2  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20204  0053A4                     l21125:
 20205                           
 20206                           ; BSR set to: 0
 20207                           ;controlMemory_MC50.c: 355:     if ( var_sys_NVM.walkTime>99 )
 20208  0053A4  0E63               	movlw	99
 20209  0053A6  659C               	cpfsgt	(_var_sys_NVM+4)& (0+255),b	;volatile
 20210  0053A8  D004               	goto	l21129
 20211                           
 20212                           ; BSR set to: 0
 20213                           ;controlMemory_MC50.c: 356:     {;controlMemory_MC50.c: 358:         var_sys_NVM.walkTim
      +                          e = 10;
 20214  0053AA  0E0A               	movlw	10
 20215  0053AC  6F9C               	movwf	(_var_sys_NVM+4)& (0+255),b	;volatile
 20216                           
 20217                           ;controlMemory_MC50.c: 359:         saveParam=1;
 20218  0053AE  0E01               	movlw	1
 20219  0053B0  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20220  0053B2                     l21129:
 20221                           
 20222                           ; BSR set to: 0
 20223                           ;controlMemory_MC50.c: 362:     if ( var_sys_NVM.autoTimeFullClose>99 )
 20224  0053B2  0E63               	movlw	99
 20225  0053B4  659D               	cpfsgt	(_var_sys_NVM+5)& (0+255),b	;volatile
 20226  0053B6  D004               	goto	l21133
 20227                           
 20228                           ; BSR set to: 0
 20229                           ;controlMemory_MC50.c: 363:     {;controlMemory_MC50.c: 365:         var_sys_NVM.autoTim
      +                          eFullClose = 0;
 20230  0053B8  0E00               	movlw	0
 20231  0053BA  6F9D               	movwf	(_var_sys_NVM+5)& (0+255),b	;volatile
 20232                           
 20233                           ;controlMemory_MC50.c: 366:         saveParam=1;
 20234  0053BC  0E01               	movlw	1
 20235  0053BE  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20236  0053C0                     l21133:
 20237                           
 20238                           ; BSR set to: 0
 20239                           ;controlMemory_MC50.c: 369:     if ( var_sys_NVM.autoTimeWalkClose>99 )
 20240  0053C0  0E63               	movlw	99
 20241  0053C2  659E               	cpfsgt	(_var_sys_NVM+6)& (0+255),b	;volatile
 20242  0053C4  D004               	goto	l21137
 20243                           
 20244                           ; BSR set to: 0
 20245                           ;controlMemory_MC50.c: 370:     {;controlMemory_MC50.c: 372:         var_sys_NVM.autoTim
      +                          eWalkClose = 0;
 20246  0053C6  0E00               	movlw	0
 20247  0053C8  6F9E               	movwf	(_var_sys_NVM+6)& (0+255),b	;volatile
 20248                           
 20249                           ;controlMemory_MC50.c: 373:         saveParam=1;
 20250  0053CA  0E01               	movlw	1
 20251  0053CC  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20252  0053CE                     l21137:
 20253                           
 20254                           ; BSR set to: 0
 20255                           ;controlMemory_MC50.c: 376:     if ( var_sys_NVM.photoCellIsON>1 )
 20256  0053CE  0E01               	movlw	1
 20257  0053D0  659F               	cpfsgt	(_var_sys_NVM+7)& (0+255),b	;volatile
 20258  0053D2  D004               	goto	l21141
 20259                           
 20260                           ; BSR set to: 0
 20261                           ;controlMemory_MC50.c: 377:     {;controlMemory_MC50.c: 379:         var_sys_NVM.photoCe
      +                          llIsON = 0;
 20262  0053D4  0E00               	movlw	0
 20263  0053D6  6F9F               	movwf	(_var_sys_NVM+7)& (0+255),b	;volatile
 20264                           
 20265                           ;controlMemory_MC50.c: 380:         saveParam=1;
 20266  0053D8  0E01               	movlw	1
 20267  0053DA  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20268  0053DC                     l21141:
 20269                           
 20270                           ; BSR set to: 0
 20271                           ;controlMemory_MC50.c: 383:     if ( var_sys_NVM.photoCellInOpen>1 )
 20272  0053DC  0E01               	movlw	1
 20273  0053DE  65A0               	cpfsgt	(_var_sys_NVM+8)& (0+255),b	;volatile
 20274  0053E0  D004               	goto	l21145
 20275                           
 20276                           ; BSR set to: 0
 20277                           ;controlMemory_MC50.c: 384:     {;controlMemory_MC50.c: 386:         var_sys_NVM.photoCe
      +                          llInOpen = 0;
 20278  0053E2  0E00               	movlw	0
 20279  0053E4  6FA0               	movwf	(_var_sys_NVM+8)& (0+255),b	;volatile
 20280                           
 20281                           ;controlMemory_MC50.c: 387:         saveParam=1;
 20282  0053E6  0E01               	movlw	1
 20283  0053E8  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20284  0053EA                     l21145:
 20285                           
 20286                           ; BSR set to: 0
 20287                           ;controlMemory_MC50.c: 390:     if ( var_sys_NVM.securityBandIsON>1 )
 20288  0053EA  0E01               	movlw	1
 20289  0053EC  65A1               	cpfsgt	(_var_sys_NVM+9)& (0+255),b	;volatile
 20290  0053EE  D004               	goto	l21149
 20291                           
 20292                           ; BSR set to: 0
 20293                           ;controlMemory_MC50.c: 391:     {;controlMemory_MC50.c: 393:         var_sys_NVM.securit
      +                          yBandIsON = 0 ;
 20294  0053F0  0E00               	movlw	0
 20295  0053F2  6FA1               	movwf	(_var_sys_NVM+9)& (0+255),b	;volatile
 20296                           
 20297                           ;controlMemory_MC50.c: 394:         saveParam=1;
 20298  0053F4  0E01               	movlw	1
 20299  0053F6  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20300  0053F8                     l21149:
 20301                           
 20302                           ; BSR set to: 0
 20303                           ;controlMemory_MC50.c: 397:     if ( var_sys_NVM.securityBandType>1 )
 20304  0053F8  0E01               	movlw	1
 20305  0053FA  65A2               	cpfsgt	(_var_sys_NVM+10)& (0+255),b	;volatile
 20306  0053FC  D004               	goto	l21153
 20307                           
 20308                           ; BSR set to: 0
 20309                           ;controlMemory_MC50.c: 398:     {;controlMemory_MC50.c: 400:         var_sys_NVM.securit
      +                          yBandType = 1;
 20310  0053FE  0E01               	movlw	1
 20311  005400  6FA2               	movwf	(_var_sys_NVM+10)& (0+255),b	;volatile
 20312                           
 20313                           ;controlMemory_MC50.c: 401:         saveParam=1;
 20314  005402  0E01               	movlw	1
 20315  005404  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20316  005406                     l21153:
 20317                           
 20318                           ; BSR set to: 0
 20319                           ;controlMemory_MC50.c: 404:     if ( var_sys_NVM.securityBandInOpen>1 )
 20320  005406  0E01               	movlw	1
 20321  005408  65A3               	cpfsgt	(_var_sys_NVM+11)& (0+255),b	;volatile
 20322  00540A  D004               	goto	l21157
 20323                           
 20324                           ; BSR set to: 0
 20325                           ;controlMemory_MC50.c: 405:     {;controlMemory_MC50.c: 407:         var_sys_NVM.securit
      +                          yBandInOpen = 0;
 20326  00540C  0E00               	movlw	0
 20327  00540E  6FA3               	movwf	(_var_sys_NVM+11)& (0+255),b	;volatile
 20328                           
 20329                           ;controlMemory_MC50.c: 408:         saveParam=1;
 20330  005410  0E01               	movlw	1
 20331  005412  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20332  005414                     l21157:
 20333                           
 20334                           ; BSR set to: 0
 20335                           ;controlMemory_MC50.c: 411:     if ( var_sys_NVM.operationMode>2 )
 20336  005414  0E02               	movlw	2
 20337  005416  65A4               	cpfsgt	(_var_sys_NVM+12)& (0+255),b	;volatile
 20338  005418  D004               	goto	l21161
 20339                           
 20340                           ; BSR set to: 0
 20341                           ;controlMemory_MC50.c: 412:     {;controlMemory_MC50.c: 414:         var_sys_NVM.operati
      +                          onMode = 0;
 20342  00541A  0E00               	movlw	0
 20343  00541C  6FA4               	movwf	(_var_sys_NVM+12)& (0+255),b	;volatile
 20344                           
 20345                           ;controlMemory_MC50.c: 415:         saveParam=1;
 20346  00541E  0E01               	movlw	1
 20347  005420  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20348  005422                     l21161:
 20349                           
 20350                           ; BSR set to: 0
 20351                           ;controlMemory_MC50.c: 418:     if ( var_sys_NVM.flashLightMode>3 )
 20352  005422  0E03               	movlw	3
 20353  005424  65A5               	cpfsgt	(_var_sys_NVM+13)& (0+255),b	;volatile
 20354  005426  D004               	goto	l21165
 20355                           
 20356                           ; BSR set to: 0
 20357                           ;controlMemory_MC50.c: 419:     {;controlMemory_MC50.c: 421:         var_sys_NVM.flashLi
      +                          ghtMode = 0;
 20358  005428  0E00               	movlw	0
 20359  00542A  6FA5               	movwf	(_var_sys_NVM+13)& (0+255),b	;volatile
 20360                           
 20361                           ;controlMemory_MC50.c: 422:         saveParam=1;
 20362  00542C  0E01               	movlw	1
 20363  00542E  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20364  005430                     l21165:
 20365                           
 20366                           ; BSR set to: 0
 20367                           ;controlMemory_MC50.c: 425:     if ( var_sys_NVM.programmingDistance>1 )
 20368  005430  0E01               	movlw	1
 20369  005432  65A6               	cpfsgt	(_var_sys_NVM+14)& (0+255),b	;volatile
 20370  005434  D004               	goto	l21169
 20371                           
 20372                           ; BSR set to: 0
 20373                           ;controlMemory_MC50.c: 426:     {;controlMemory_MC50.c: 428:         var_sys_NVM.program
      +                          mingDistance = 0;
 20374  005436  0E00               	movlw	0
 20375  005438  6FA6               	movwf	(_var_sys_NVM+14)& (0+255),b	;volatile
 20376                           
 20377                           ;controlMemory_MC50.c: 429:         saveParam=1;
 20378  00543A  0E01               	movlw	1
 20379  00543C  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20380  00543E                     l21169:
 20381                           
 20382                           ; BSR set to: 0
 20383                           ;controlMemory_MC50.c: 432:     if ( var_sys_NVM.decelarationSensivity>9 )
 20384  00543E  0E09               	movlw	9
 20385  005440  65A7               	cpfsgt	(_var_sys_NVM+15)& (0+255),b	;volatile
 20386  005442  D004               	goto	l21173
 20387                           
 20388                           ; BSR set to: 0
 20389                           ;controlMemory_MC50.c: 433:     {;controlMemory_MC50.c: 435:         var_sys_NVM.decelar
      +                          ationSensivity = 0;
 20390  005444  0E00               	movlw	0
 20391  005446  6FA7               	movwf	(_var_sys_NVM+15)& (0+255),b	;volatile
 20392                           
 20393                           ;controlMemory_MC50.c: 436:         saveParam=1;
 20394  005448  0E01               	movlw	1
 20395  00544A  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20396  00544C                     l21173:
 20397                           
 20398                           ; BSR set to: 0
 20399                           ;controlMemory_MC50.c: 441:     if ( var_sys_NVM.homemPresente>2 )
 20400  00544C  0E02               	movlw	2
 20401  00544E  65A8               	cpfsgt	(_var_sys_NVM+16)& (0+255),b	;volatile
 20402  005450  D004               	goto	l21177
 20403                           
 20404                           ; BSR set to: 0
 20405                           ;controlMemory_MC50.c: 442:     {;controlMemory_MC50.c: 444:         var_sys_NVM.homemPr
      +                          esente = 0;
 20406  005452  0E00               	movlw	0
 20407  005454  6FA8               	movwf	(_var_sys_NVM+16)& (0+255),b	;volatile
 20408                           
 20409                           ;controlMemory_MC50.c: 445:         saveParam=1;
 20410  005456  0E01               	movlw	1
 20411  005458  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20412  00545A                     l21177:
 20413                           
 20414                           ; BSR set to: 0
 20415                           ;controlMemory_MC50.c: 448:     if ( var_sys_NVM.logicDigital>1 )
 20416  00545A  0E01               	movlw	1
 20417  00545C  65A9               	cpfsgt	(_var_sys_NVM+17)& (0+255),b	;volatile
 20418  00545E  D004               	goto	l21181
 20419                           
 20420                           ; BSR set to: 0
 20421                           ;controlMemory_MC50.c: 449:     {;controlMemory_MC50.c: 451:         var_sys_NVM.logicDi
      +                          gital = 0;
 20422  005460  0E00               	movlw	0
 20423  005462  6FA9               	movwf	(_var_sys_NVM+17)& (0+255),b	;volatile
 20424                           
 20425                           ;controlMemory_MC50.c: 452:         saveParam=1;
 20426  005464  0E01               	movlw	1
 20427  005466  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20428  005468                     l21181:
 20429                           
 20430                           ; BSR set to: 0
 20431                           ;controlMemory_MC50.c: 455:     if ( var_sys_NVM.softStart>9 )
 20432  005468  0E09               	movlw	9
 20433  00546A  65AA               	cpfsgt	(_var_sys_NVM+18)& (0+255),b	;volatile
 20434  00546C  D004               	goto	l21185
 20435                           
 20436                           ; BSR set to: 0
 20437                           ;controlMemory_MC50.c: 456:     {;controlMemory_MC50.c: 458:         var_sys_NVM.softSta
      +                          rt = 0;
 20438  00546E  0E00               	movlw	0
 20439  005470  6FAA               	movwf	(_var_sys_NVM+18)& (0+255),b	;volatile
 20440                           
 20441                           ;controlMemory_MC50.c: 459:         saveParam=1;
 20442  005472  0E01               	movlw	1
 20443  005474  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20444  005476                     l21185:
 20445                           
 20446                           ; BSR set to: 0
 20447                           ;controlMemory_MC50.c: 463:     if ( var_sys_NVM.ligthTime>99 )
 20448  005476  0E63               	movlw	99
 20449  005478  65AC               	cpfsgt	(_var_sys_NVM+20)& (0+255),b	;volatile
 20450  00547A  D004               	goto	l21189
 20451                           
 20452                           ; BSR set to: 0
 20453                           ;controlMemory_MC50.c: 464:     {;controlMemory_MC50.c: 466:         var_sys_NVM.ligthTi
      +                          me = 3;
 20454  00547C  0E03               	movlw	3
 20455  00547E  6FAC               	movwf	(_var_sys_NVM+20)& (0+255),b	;volatile
 20456                           
 20457                           ;controlMemory_MC50.c: 467:         saveParam=1;
 20458  005480  0E01               	movlw	1
 20459  005482  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20460  005484                     l21189:
 20461                           
 20462                           ; BSR set to: 0
 20463                           ;controlMemory_MC50.c: 470:     if ( var_sys_NVM.folow_me>9 )
 20464  005484  0E09               	movlw	9
 20465  005486  65AD               	cpfsgt	(_var_sys_NVM+21)& (0+255),b	;volatile
 20466  005488  D004               	goto	l21193
 20467                           
 20468                           ; BSR set to: 0
 20469                           ;controlMemory_MC50.c: 471:     {;controlMemory_MC50.c: 473:         var_sys_NVM.folow_m
      +                          e = 0;
 20470  00548A  0E00               	movlw	0
 20471  00548C  6FAD               	movwf	(_var_sys_NVM+21)& (0+255),b	;volatile
 20472                           
 20473                           ;controlMemory_MC50.c: 474:         saveParam=1;
 20474  00548E  0E01               	movlw	1
 20475  005490  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20476  005492                     l21193:
 20477                           
 20478                           ; BSR set to: 0
 20479                           ;controlMemory_MC50.c: 479:     if ( var_sys_NVM.electricBrake>1 )
 20480  005492  0E01               	movlw	1
 20481  005494  65AF               	cpfsgt	(_var_sys_NVM+23)& (0+255),b	;volatile
 20482  005496  D004               	goto	l1512
 20483                           
 20484                           ; BSR set to: 0
 20485                           ;controlMemory_MC50.c: 480:     {;controlMemory_MC50.c: 482:         var_sys_NVM.electri
      +                          cBrake = 0;
 20486  005498  0E00               	movlw	0
 20487  00549A  6FAF               	movwf	(_var_sys_NVM+23)& (0+255),b	;volatile
 20488                           
 20489                           ;controlMemory_MC50.c: 483:         saveParam=1;
 20490  00549C  0E01               	movlw	1
 20491  00549E  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20492  0054A0                     l1512:
 20493                           
 20494                           ; BSR set to: 0
 20495                           ;controlMemory_MC50.c: 486:     if ( (var_sys_NVM.velocityDecelaration<1) || (var_sys_NV
      +                          M.velocityDecelaration>9) )
 20496  0054A0  51B0               	movf	(_var_sys_NVM+24)& (0+255),w,b	;volatile
 20497  0054A2  B4D8               	btfsc	status,2,c
 20498  0054A4  D003               	goto	u24530
 20499                           
 20500                           ; BSR set to: 0
 20501  0054A6  0E09               	movlw	9
 20502  0054A8  65B0               	cpfsgt	(_var_sys_NVM+24)& (0+255),b	;volatile
 20503  0054AA  D004               	goto	l21201
 20504  0054AC                     u24530:
 20505                           
 20506                           ; BSR set to: 0
 20507                           ;controlMemory_MC50.c: 487:     {;controlMemory_MC50.c: 489:         var_sys_NVM.velocit
      +                          yDecelaration = 5;
 20508  0054AC  0E05               	movlw	5
 20509  0054AE  6FB0               	movwf	(_var_sys_NVM+24)& (0+255),b	;volatile
 20510                           
 20511                           ;controlMemory_MC50.c: 490:         saveParam=1;
 20512  0054B0  0E01               	movlw	1
 20513  0054B2  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20514  0054B4                     l21201:
 20515                           
 20516                           ; BSR set to: 0
 20517                           ;controlMemory_MC50.c: 493:     if ( var_sys_NVM.flashRGBMode>3 )
 20518  0054B4  0E03               	movlw	3
 20519  0054B6  65B1               	cpfsgt	(_var_sys_NVM+25)& (0+255),b	;volatile
 20520  0054B8  D004               	goto	l21205
 20521                           
 20522                           ; BSR set to: 0
 20523                           ;controlMemory_MC50.c: 494:     {;controlMemory_MC50.c: 496:         var_sys_NVM.flashRG
      +                          BMode = 3;
 20524  0054BA  0E03               	movlw	3
 20525  0054BC  6FB1               	movwf	(_var_sys_NVM+25)& (0+255),b	;volatile
 20526                           
 20527                           ;controlMemory_MC50.c: 497:         saveParam=1;
 20528  0054BE  0E01               	movlw	1
 20529  0054C0  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20530  0054C2                     l21205:
 20531                           
 20532                           ; BSR set to: 0
 20533                           ;controlMemory_MC50.c: 499:         if ( var_sys_NVM.Stopboton > 1 )
 20534  0054C2  0E01               	movlw	1
 20535  0054C4  65AE               	cpfsgt	(_var_sys_NVM+22)& (0+255),b	;volatile
 20536  0054C6  D004               	goto	l21209
 20537                           
 20538                           ; BSR set to: 0
 20539                           ;controlMemory_MC50.c: 500:     {;controlMemory_MC50.c: 502:         var_sys_NVM.Stopbot
      +                          on = 0 ;
 20540  0054C8  0E00               	movlw	0
 20541  0054CA  6FAE               	movwf	(_var_sys_NVM+22)& (0+255),b	;volatile
 20542                           
 20543                           ;controlMemory_MC50.c: 503:         saveParam=1;
 20544  0054CC  0E01               	movlw	1
 20545  0054CE  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20546  0054D0                     l21209:
 20547                           
 20548                           ; BSR set to: 0
 20549                           ;controlMemory_MC50.c: 505:         if ( var_sys_NVM.Direction_motor>1 )
 20550  0054D0  0E01               	movlw	1
 20551  0054D2  65B3               	cpfsgt	(_var_sys_NVM+27)& (0+255),b	;volatile
 20552  0054D4  D004               	goto	l21213
 20553                           
 20554                           ; BSR set to: 0
 20555                           ;controlMemory_MC50.c: 506:     {;controlMemory_MC50.c: 508:         var_sys_NVM.Directi
      +                          on_motor = 1;
 20556  0054D6  0E01               	movlw	1
 20557  0054D8  6FB3               	movwf	(_var_sys_NVM+27)& (0+255),b	;volatile
 20558                           
 20559                           ;controlMemory_MC50.c: 509:         saveParam=1;
 20560  0054DA  0E01               	movlw	1
 20561  0054DC  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20562  0054DE                     l21213:
 20563                           
 20564                           ; BSR set to: 0
 20565                           ;controlMemory_MC50.c: 511:         if ( var_sys_NVM.softstop>9 )
 20566  0054DE  0E09               	movlw	9
 20567  0054E0  65AB               	cpfsgt	(_var_sys_NVM+19)& (0+255),b	;volatile
 20568  0054E2  D004               	goto	l1519
 20569                           
 20570                           ; BSR set to: 0
 20571                           ;controlMemory_MC50.c: 512:     {;controlMemory_MC50.c: 514:         var_sys_NVM.softsto
      +                          p = 0;
 20572  0054E4  0E00               	movlw	0
 20573  0054E6  6FAB               	movwf	(_var_sys_NVM+19)& (0+255),b	;volatile
 20574                           
 20575                           ;controlMemory_MC50.c: 515:         saveParam=1;
 20576  0054E8  0E01               	movlw	1
 20577  0054EA  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20578  0054EC                     l1519:
 20579                           
 20580                           ; BSR set to: 0
 20581                           ;controlMemory_MC50.c: 540:     if ( saveParam != 0 )
 20582  0054EC  503A               	movf	checkNVM_VarSystem@saveParam^0,w,c
 20583  0054EE  B4D8               	btfsc	status,2,c
 20584  0054F0  0012               	return	
 20585                           
 20586                           ; BSR set to: 0
 20587                           ;controlMemory_MC50.c: 541:     {;controlMemory_MC50.c: 542:         SaveNVM_VarSystem(p
      +                          ageMemoryP);
 20588  0054F2  0E00               	movlw	0
 20589  0054F4  EC0A  F045         	call	_SaveNVM_VarSystem
 20590                           
 20591                           ;controlMemory_MC50.c: 543:         SaveNVM_VarSystem(pageMemoryE);
 20592  0054F8  0E01               	movlw	1
 20593  0054FA  EC0A  F045         	call	_SaveNVM_VarSystem
 20594  0054FE  0012               	return		;funcret
 20595  005500                     __end_of_checkNVM_VarSystem:
 20596                           	callstack 0
 20597                           
 20598 ;; *************** function _ResetDefaultMemory *****************
 20599 ;; Defined at:
 20600 ;;		line 186 in file "controlMemory_MC50.c"
 20601 ;; Parameters:    Size  Location     Type
 20602 ;;  type            1    wreg     unsigned char 
 20603 ;; Auto vars:     Size  Location     Type
 20604 ;;  type            1   57[COMRAM] unsigned char 
 20605 ;; Return value:  Size  Location     Type
 20606 ;;                  1    wreg      void 
 20607 ;; Registers used:
 20608 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20609 ;; Tracked objects:
 20610 ;;		On entry : 31/0
 20611 ;;		On exit  : 0/0
 20612 ;;		Unchanged: 0/0
 20613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20615 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20617 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20618 ;;Total ram usage:        1 bytes
 20619 ;; Hardware stack levels used: 1
 20620 ;; Hardware stack levels required when called: 14
 20621 ;; This function calls:
 20622 ;;		_SaveNVM_VarSystem
 20623 ;; This function is called by:
 20624 ;;		_loadNVM_VarSystem
 20625 ;;		_sm_execute_menuConfiguration
 20626 ;; This function uses a non-reentrant model
 20627 ;;
 20628                           
 20629                           	psect	text76
 20630  005B66                     __ptext76:
 20631                           	callstack 0
 20632  005B66                     _ResetDefaultMemory:
 20633                           	callstack 14
 20634                           
 20635                           ;incstack = 0
 20636                           ;ResetDefaultMemory@type stored from wreg
 20637  005B66  6E3A               	movwf	ResetDefaultMemory@type^0,c
 20638                           
 20639                           ;controlMemory_MC50.c: 186: void ResetDefaultMemory(unsigned char type);controlMemory_MC
      +                          50.c: 187: {;controlMemory_MC50.c: 190:     var_sys_NVM.decelarationOpen = 3;
 20640  005B68  0E03               	movlw	3
 20641  005B6A  0100               	movlb	0	; () banked
 20642  005B6C  6F98               	movwf	_var_sys_NVM& (0+255),b	;volatile
 20643                           
 20644                           ;controlMemory_MC50.c: 191:     var_sys_NVM.motorPower = 9;
 20645  005B6E  0E09               	movlw	9
 20646  005B70  6F9A               	movwf	(_var_sys_NVM+2)& (0+255),b	;volatile
 20647                           
 20648                           ;controlMemory_MC50.c: 192:     var_sys_NVM.decelarationClose = 3;
 20649  005B72  0E03               	movlw	3
 20650  005B74  6F99               	movwf	(_var_sys_NVM+1)& (0+255),b	;volatile
 20651                           
 20652                           ;controlMemory_MC50.c: 193:     var_sys_NVM.photoCellIsON = 0;
 20653  005B76  0E00               	movlw	0
 20654  005B78  6F9F               	movwf	(_var_sys_NVM+7)& (0+255),b	;volatile
 20655                           
 20656                           ;controlMemory_MC50.c: 194:     var_sys_NVM.photoCellInOpen = 0;
 20657  005B7A  0E00               	movlw	0
 20658  005B7C  6FA0               	movwf	(_var_sys_NVM+8)& (0+255),b	;volatile
 20659                           
 20660                           ;controlMemory_MC50.c: 195:     var_sys_NVM.securityBandIsON = 0 ;
 20661  005B7E  0E00               	movlw	0
 20662  005B80  6FA1               	movwf	(_var_sys_NVM+9)& (0+255),b	;volatile
 20663                           
 20664                           ;controlMemory_MC50.c: 196:     var_sys_NVM.securityBandType = 1;
 20665  005B82  0E01               	movlw	1
 20666  005B84  6FA2               	movwf	(_var_sys_NVM+10)& (0+255),b	;volatile
 20667                           
 20668                           ;controlMemory_MC50.c: 197:     var_sys_NVM.securityBandInOpen = 0;
 20669  005B86  0E00               	movlw	0
 20670  005B88  6FA3               	movwf	(_var_sys_NVM+11)& (0+255),b	;volatile
 20671                           
 20672                           ;controlMemory_MC50.c: 198:     var_sys_NVM.flashLightMode = 0;
 20673  005B8A  0E00               	movlw	0
 20674  005B8C  6FA5               	movwf	(_var_sys_NVM+13)& (0+255),b	;volatile
 20675                           
 20676                           ;controlMemory_MC50.c: 199:     var_sys_NVM.programmingDistance = 0;
 20677  005B8E  0E00               	movlw	0
 20678  005B90  6FA6               	movwf	(_var_sys_NVM+14)& (0+255),b	;volatile
 20679                           
 20680                           ;controlMemory_MC50.c: 200:     var_sys_NVM.decelarationSensivity = 0;
 20681  005B92  0E00               	movlw	0
 20682  005B94  6FA7               	movwf	(_var_sys_NVM+15)& (0+255),b	;volatile
 20683                           
 20684                           ;controlMemory_MC50.c: 201:     var_sys_NVM.homemPresente = 0;
 20685  005B96  0E00               	movlw	0
 20686  005B98  6FA8               	movwf	(_var_sys_NVM+16)& (0+255),b	;volatile
 20687                           
 20688                           ;controlMemory_MC50.c: 202:     var_sys_NVM.autoTimeWalkClose = 0;
 20689  005B9A  0E00               	movlw	0
 20690  005B9C  6F9E               	movwf	(_var_sys_NVM+6)& (0+255),b	;volatile
 20691                           
 20692                           ;controlMemory_MC50.c: 203:     var_sys_NVM.ligthTime = 3;
 20693  005B9E  0E03               	movlw	3
 20694  005BA0  6FAC               	movwf	(_var_sys_NVM+20)& (0+255),b	;volatile
 20695                           
 20696                           ;controlMemory_MC50.c: 204:     var_sys_NVM.folow_me = 0;
 20697  005BA2  0E00               	movlw	0
 20698  005BA4  6FAD               	movwf	(_var_sys_NVM+21)& (0+255),b	;volatile
 20699                           
 20700                           ;controlMemory_MC50.c: 205:     var_sys_NVM.electricBrake = 0;
 20701  005BA6  0E00               	movlw	0
 20702  005BA8  6FAF               	movwf	(_var_sys_NVM+23)& (0+255),b	;volatile
 20703                           
 20704                           ;controlMemory_MC50.c: 206:     var_sys_NVM.autoTimeWalkClose = 0;
 20705  005BAA  0E00               	movlw	0
 20706  005BAC  6F9E               	movwf	(_var_sys_NVM+6)& (0+255),b	;volatile
 20707                           
 20708                           ;controlMemory_MC50.c: 207:     var_sys_NVM.Direction_motor = 1 ;
 20709  005BAE  0E01               	movlw	1
 20710  005BB0  6FB3               	movwf	(_var_sys_NVM+27)& (0+255),b	;volatile
 20711                           
 20712                           ; BSR set to: 0
 20713                           ;controlMemory_MC50.c: 210:     if (type == SC){
 20714  005BB2  503A               	movf	ResetDefaultMemory@type^0,w,c
 20715  005BB4  A4D8               	btfss	status,2,c
 20716  005BB6  D014               	goto	l19915
 20717                           
 20718                           ; BSR set to: 0
 20719                           ;controlMemory_MC50.c: 212:         var_sys_NVM.motorSensitivity = 0;
 20720  005BB8  0E00               	movlw	0
 20721  005BBA  6F9B               	movwf	(_var_sys_NVM+3)& (0+255),b	;volatile
 20722                           
 20723                           ;controlMemory_MC50.c: 213:         var_sys_NVM.logicDigital = 0;
 20724  005BBC  0E00               	movlw	0
 20725  005BBE  6FA9               	movwf	(_var_sys_NVM+17)& (0+255),b	;volatile
 20726                           
 20727                           ;controlMemory_MC50.c: 214:         var_sys_NVM.Stopboton = 0;
 20728  005BC0  0E00               	movlw	0
 20729  005BC2  6FAE               	movwf	(_var_sys_NVM+22)& (0+255),b	;volatile
 20730                           
 20731                           ;controlMemory_MC50.c: 215:         var_sys_NVM.autoTimeFullClose = 0;
 20732  005BC4  0E00               	movlw	0
 20733  005BC6  6F9D               	movwf	(_var_sys_NVM+5)& (0+255),b	;volatile
 20734                           
 20735                           ;controlMemory_MC50.c: 216:         var_sys_NVM.operationMode = 0;
 20736  005BC8  0E00               	movlw	0
 20737  005BCA  6FA4               	movwf	(_var_sys_NVM+12)& (0+255),b	;volatile
 20738                           
 20739                           ;controlMemory_MC50.c: 217:         var_sys_NVM.velocityDecelaration = 5;
 20740  005BCC  0E05               	movlw	5
 20741  005BCE  6FB0               	movwf	(_var_sys_NVM+24)& (0+255),b	;volatile
 20742                           
 20743                           ;controlMemory_MC50.c: 218:         var_sys_NVM.flashRGBMode = 3;
 20744  005BD0  0E03               	movlw	3
 20745  005BD2  6FB1               	movwf	(_var_sys_NVM+25)& (0+255),b	;volatile
 20746                           
 20747                           ;controlMemory_MC50.c: 219:         var_sys_NVM.softstop = 0;
 20748  005BD4  0E00               	movlw	0
 20749  005BD6  6FAB               	movwf	(_var_sys_NVM+19)& (0+255),b	;volatile
 20750                           
 20751                           ;controlMemory_MC50.c: 220:         var_sys_NVM.softStart = 0;
 20752  005BD8  0E00               	movlw	0
 20753  005BDA  6FAA               	movwf	(_var_sys_NVM+18)& (0+255),b	;volatile
 20754                           
 20755                           ;controlMemory_MC50.c: 221:         var_sys_NVM.walkTime = 10;
 20756  005BDC  0E0A               	movlw	10
 20757  005BDE  D039               	goto	L82
 20758  005BE0                     l19915:
 20759                           
 20760                           ; BSR set to: 0
 20761  005BE0  043A               	decf	ResetDefaultMemory@type^0,w,c
 20762  005BE2  A4D8               	btfss	status,2,c
 20763  005BE4  D01B               	goto	l19919
 20764                           
 20765                           ; BSR set to: 0
 20766                           ;controlMemory_MC50.c: 225:         var_sys_NVM.decelarationClose = 4;
 20767  005BE6  0E04               	movlw	4
 20768  005BE8  6F99               	movwf	(_var_sys_NVM+1)& (0+255),b	;volatile
 20769                           
 20770                           ;controlMemory_MC50.c: 226:         var_sys_NVM.decelarationOpen = 4;
 20771  005BEA  0E04               	movlw	4
 20772  005BEC  6F98               	movwf	_var_sys_NVM& (0+255),b	;volatile
 20773                           
 20774                           ;controlMemory_MC50.c: 227:         var_sys_NVM.motorSensitivity = 4;
 20775  005BEE  0E04               	movlw	4
 20776  005BF0  6F9B               	movwf	(_var_sys_NVM+3)& (0+255),b	;volatile
 20777                           
 20778                           ;controlMemory_MC50.c: 228:         var_sys_NVM.logicDigital = 1;
 20779  005BF2  0E01               	movlw	1
 20780  005BF4  6FA9               	movwf	(_var_sys_NVM+17)& (0+255),b	;volatile
 20781                           
 20782                           ;controlMemory_MC50.c: 229:         var_sys_NVM.Stopboton = 1;
 20783  005BF6  0E01               	movlw	1
 20784  005BF8  6FAE               	movwf	(_var_sys_NVM+22)& (0+255),b	;volatile
 20785                           
 20786                           ;controlMemory_MC50.c: 230:         var_sys_NVM.autoTimeFullClose = 0;
 20787  005BFA  0E00               	movlw	0
 20788  005BFC  6F9D               	movwf	(_var_sys_NVM+5)& (0+255),b	;volatile
 20789                           
 20790                           ;controlMemory_MC50.c: 231:         var_sys_NVM.operationMode = 0;
 20791  005BFE  0E00               	movlw	0
 20792  005C00  6FA4               	movwf	(_var_sys_NVM+12)& (0+255),b	;volatile
 20793                           
 20794                           ;controlMemory_MC50.c: 232:         var_sys_NVM.velocityDecelaration = 5;
 20795  005C02  0E05               	movlw	5
 20796  005C04  6FB0               	movwf	(_var_sys_NVM+24)& (0+255),b	;volatile
 20797                           
 20798                           ;controlMemory_MC50.c: 233:         var_sys_NVM.flashRGBMode = 3;
 20799  005C06  0E03               	movlw	3
 20800  005C08  6FB1               	movwf	(_var_sys_NVM+25)& (0+255),b	;volatile
 20801                           
 20802                           ;controlMemory_MC50.c: 234:         var_sys_NVM.softstop = 0;
 20803  005C0A  0E00               	movlw	0
 20804  005C0C  6FAB               	movwf	(_var_sys_NVM+19)& (0+255),b	;volatile
 20805                           
 20806                           ;controlMemory_MC50.c: 235:         var_sys_NVM.softStart = 5;
 20807  005C0E  0E05               	movlw	5
 20808  005C10  6FAA               	movwf	(_var_sys_NVM+18)& (0+255),b	;volatile
 20809                           
 20810                           ;controlMemory_MC50.c: 236:         var_sys_NVM.walkTime = 0;
 20811  005C12  0E00               	movlw	0
 20812  005C14  6F9C               	movwf	(_var_sys_NVM+4)& (0+255),b	;volatile
 20813                           
 20814                           ;controlMemory_MC50.c: 237:         var_sys_NVM.Direction_motor = 0 ;
 20815  005C16  0E00               	movlw	0
 20816  005C18  6FB3               	movwf	(_var_sys_NVM+27)& (0+255),b	;volatile
 20817                           
 20818                           ;controlMemory_MC50.c: 239:     }
 20819  005C1A  D01C               	goto	l19923
 20820  005C1C                     l19919:
 20821                           
 20822                           ; BSR set to: 0
 20823  005C1C  0E02               	movlw	2
 20824  005C1E  183A               	xorwf	ResetDefaultMemory@type^0,w,c
 20825  005C20  A4D8               	btfss	status,2,c
 20826  005C22  D018               	goto	l19923
 20827                           
 20828                           ; BSR set to: 0
 20829                           ;controlMemory_MC50.c: 241:         var_sys_NVM.decelarationClose = 6;
 20830  005C24  0E06               	movlw	6
 20831  005C26  6F99               	movwf	(_var_sys_NVM+1)& (0+255),b	;volatile
 20832                           
 20833                           ;controlMemory_MC50.c: 242:         var_sys_NVM.decelarationOpen = 2;
 20834  005C28  0E02               	movlw	2
 20835  005C2A  6F98               	movwf	_var_sys_NVM& (0+255),b	;volatile
 20836                           
 20837                           ;controlMemory_MC50.c: 243:         var_sys_NVM.motorSensitivity = 0;
 20838  005C2C  0E00               	movlw	0
 20839  005C2E  6F9B               	movwf	(_var_sys_NVM+3)& (0+255),b	;volatile
 20840                           
 20841                           ;controlMemory_MC50.c: 244:         var_sys_NVM.logicDigital = 0;
 20842  005C30  0E00               	movlw	0
 20843  005C32  6FA9               	movwf	(_var_sys_NVM+17)& (0+255),b	;volatile
 20844                           
 20845                           ;controlMemory_MC50.c: 245:         var_sys_NVM.Stopboton = 0;
 20846  005C34  0E00               	movlw	0
 20847  005C36  6FAE               	movwf	(_var_sys_NVM+22)& (0+255),b	;volatile
 20848                           
 20849                           ;controlMemory_MC50.c: 246:         var_sys_NVM.autoTimeFullClose = 0;
 20850  005C38  0E00               	movlw	0
 20851  005C3A  6F9D               	movwf	(_var_sys_NVM+5)& (0+255),b	;volatile
 20852                           
 20853                           ;controlMemory_MC50.c: 247:         var_sys_NVM.operationMode = 2;
 20854  005C3C  0E02               	movlw	2
 20855  005C3E  6FA4               	movwf	(_var_sys_NVM+12)& (0+255),b	;volatile
 20856                           
 20857                           ;controlMemory_MC50.c: 248:         var_sys_NVM.velocityDecelaration = 5;
 20858  005C40  0E05               	movlw	5
 20859  005C42  6FB0               	movwf	(_var_sys_NVM+24)& (0+255),b	;volatile
 20860                           
 20861                           ;controlMemory_MC50.c: 249:         var_sys_NVM.flashRGBMode = 1;
 20862  005C44  0E01               	movlw	1
 20863  005C46  6FB1               	movwf	(_var_sys_NVM+25)& (0+255),b	;volatile
 20864                           
 20865                           ;controlMemory_MC50.c: 250:         var_sys_NVM.softstop = 5;
 20866  005C48  0E05               	movlw	5
 20867  005C4A  6FAB               	movwf	(_var_sys_NVM+19)& (0+255),b	;volatile
 20868                           
 20869                           ;controlMemory_MC50.c: 251:         var_sys_NVM.softStart = 0;
 20870  005C4C  0E00               	movlw	0
 20871  005C4E  6FAA               	movwf	(_var_sys_NVM+18)& (0+255),b	;volatile
 20872                           
 20873                           ;controlMemory_MC50.c: 252:         var_sys_NVM.walkTime = 0;
 20874  005C50  0E00               	movlw	0
 20875  005C52                     L82:
 20876  005C52  6F9C               	movwf	(_var_sys_NVM+4)& (0+255),b	;volatile
 20877  005C54                     l19923:
 20878                           
 20879                           ; BSR set to: 0
 20880                           ;controlMemory_MC50.c: 260:     SaveNVM_VarSystem(pageMemoryE);
 20881  005C54  0E01               	movlw	1
 20882  005C56  EC0A  F045         	call	_SaveNVM_VarSystem
 20883                           
 20884                           ;controlMemory_MC50.c: 261:     SaveNVM_VarSystem(pageMemoryP);
 20885  005C5A  0E00               	movlw	0
 20886  005C5C  EC0A  F045         	call	_SaveNVM_VarSystem
 20887                           
 20888                           ;controlMemory_MC50.c: 266:     var_sys_NVM.learningTimeToClose = 0;
 20889  005C60  0E00               	movlw	0
 20890  005C62  0100               	movlb	0	; () banked
 20891  005C64  6FD0               	movwf	(_var_sys_NVM+56)& (0+255),b	;volatile
 20892  005C66  0E00               	movlw	0
 20893  005C68  6FD1               	movwf	(_var_sys_NVM+57)& (0+255),b	;volatile
 20894  005C6A  0E00               	movlw	0
 20895  005C6C  6FD2               	movwf	(_var_sys_NVM+58)& (0+255),b	;volatile
 20896  005C6E  0E00               	movlw	0
 20897  005C70  6FD3               	movwf	(_var_sys_NVM+59)& (0+255),b	;volatile
 20898                           
 20899                           ;controlMemory_MC50.c: 267:     var_sys_NVM.learningTimeToOpen = 0;
 20900  005C72  0E00               	movlw	0
 20901  005C74  6FCC               	movwf	(_var_sys_NVM+52)& (0+255),b	;volatile
 20902  005C76  0E00               	movlw	0
 20903  005C78  6FCD               	movwf	(_var_sys_NVM+53)& (0+255),b	;volatile
 20904  005C7A  0E00               	movlw	0
 20905  005C7C  6FCE               	movwf	(_var_sys_NVM+54)& (0+255),b	;volatile
 20906  005C7E  0E00               	movlw	0
 20907  005C80  6FCF               	movwf	(_var_sys_NVM+55)& (0+255),b	;volatile
 20908                           
 20909                           ;controlMemory_MC50.c: 268:     var_sys_NVM.learningCurrentNormalClose = 0;
 20910  005C82  0E00               	movlw	0
 20911  005C84  6FC9               	movwf	(_var_sys_NVM+49)& (0+255),b	;volatile
 20912  005C86  0E00               	movlw	0
 20913  005C88  6FC8               	movwf	(_var_sys_NVM+48)& (0+255),b	;volatile
 20914                           
 20915                           ;controlMemory_MC50.c: 269:     var_sys_NVM.learningCurrentNormalOpen = 0;
 20916  005C8A  0E00               	movlw	0
 20917  005C8C  6FCB               	movwf	(_var_sys_NVM+51)& (0+255),b	;volatile
 20918  005C8E  0E00               	movlw	0
 20919  005C90  6FCA               	movwf	(_var_sys_NVM+50)& (0+255),b	;volatile
 20920                           
 20921                           ;controlMemory_MC50.c: 270:     var_sys_NVM.learningCurrentDecelarationClose = 0;
 20922  005C92  0E00               	movlw	0
 20923  005C94  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 20924  005C96  0E00               	movlw	0
 20925  005C98  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 20926  005C9A  0E00               	movlw	0
 20927  005C9C  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 20928  005C9E  0E00               	movlw	0
 20929  005CA0  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 20930                           
 20931                           ;controlMemory_MC50.c: 271:     var_sys_NVM.learningCurrentDecelarationOpen = 0;
 20932  005CA2  0E00               	movlw	0
 20933  005CA4  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 20934  005CA6  0E00               	movlw	0
 20935  005CA8  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 20936  005CAA  0E00               	movlw	0
 20937  005CAC  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 20938  005CAE  0E00               	movlw	0
 20939  005CB0  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 20940                           
 20941                           ; BSR set to: 0
 20942                           ;controlMemory_MC50.c: 277:     if ((PORTAbits.RA2 == 0) && (PORTAbits.RA1 == 0) && (POR
      +                          TBbits.RB0 == 0)&&(PORTAbits.RA5==0)){
 20943  005CB2  A48D               	btfss	141,2,c	;volatile
 20944                           
 20945                           ; BSR set to: 0
 20946  005CB4  B28D               	btfsc	141,1,c	;volatile
 20947  005CB6  D015               	goto	l19937
 20948                           
 20949                           ; BSR set to: 0
 20950  005CB8  A08E               	btfss	142,0,c	;volatile
 20951                           
 20952                           ; BSR set to: 0
 20953  005CBA  BA8D               	btfsc	141,5,c	;volatile
 20954  005CBC  D012               	goto	l19937
 20955                           
 20956                           ; BSR set to: 0
 20957                           ;controlMemory_MC50.c: 278:      var_sys.actualCounterMoves = 0;
 20958  005CBE  0E00               	movlw	0
 20959  005CC0  0101               	movlb	1	; () banked
 20960  005CC2  6F3C               	movwf	(_var_sys+60)& (0+255),b	;volatile
 20961  005CC4  0E00               	movlw	0
 20962  005CC6  6F3D               	movwf	(_var_sys+61)& (0+255),b	;volatile
 20963  005CC8  0E00               	movlw	0
 20964  005CCA  6F3E               	movwf	(_var_sys+62)& (0+255),b	;volatile
 20965  005CCC  0E00               	movlw	0
 20966  005CCE  6F3F               	movwf	(_var_sys+63)& (0+255),b	;volatile
 20967                           
 20968                           ;controlMemory_MC50.c: 279:      var_sys_NVM.counterMoves = 0;
 20969  005CD0  0E00               	movlw	0
 20970  005CD2  0100               	movlb	0	; () banked
 20971  005CD4  6FBA               	movwf	(_var_sys_NVM+34)& (0+255),b	;volatile
 20972  005CD6  0E00               	movlw	0
 20973  005CD8  6FBB               	movwf	(_var_sys_NVM+35)& (0+255),b	;volatile
 20974  005CDA  0E00               	movlw	0
 20975  005CDC  6FBC               	movwf	(_var_sys_NVM+36)& (0+255),b	;volatile
 20976  005CDE  0E00               	movlw	0
 20977  005CE0  6FBD               	movwf	(_var_sys_NVM+37)& (0+255),b	;volatile
 20978  005CE2                     l19937:
 20979                           
 20980                           ; BSR set to: 0
 20981                           ;controlMemory_MC50.c: 284:     SaveNVM_VarSystem(pageMemoryCounters);
 20982  005CE2  0E02               	movlw	2
 20983  005CE4  EC0A  F045         	call	_SaveNVM_VarSystem
 20984                           
 20985                           ;controlMemory_MC50.c: 285:     SaveNVM_VarSystem(pageMemoryLearningVars);
 20986  005CE8  0E03               	movlw	3
 20987  005CEA  EC0A  F045         	call	_SaveNVM_VarSystem
 20988  005CEE  0012               	return		;funcret
 20989  005CF0                     __end_of_ResetDefaultMemory:
 20990                           	callstack 0
 20991                           
 20992 ;; *************** function _I2C1_Read1ByteRegister *****************
 20993 ;; Defined at:
 20994 ;;		line 65 in file "mcc_generated_files/examples/i2c1_master_example.c"
 20995 ;; Parameters:    Size  Location     Type
 20996 ;;  address         1    wreg     unsigned char 
 20997 ;;  reg             1   33[COMRAM] unsigned char 
 20998 ;; Auto vars:     Size  Location     Type
 20999 ;;  address         1   34[COMRAM] unsigned char 
 21000 ;;  returnValue     1   35[COMRAM] unsigned char 
 21001 ;; Return value:  Size  Location     Type
 21002 ;;                  1    wreg      unsigned char 
 21003 ;; Registers used:
 21004 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21005 ;; Tracked objects:
 21006 ;;		On entry : 31/0
 21007 ;;		On exit  : 33/2
 21008 ;;		Unchanged: 0/0
 21009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21010 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21011 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21013 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21014 ;;Total ram usage:        3 bytes
 21015 ;; Hardware stack levels used: 1
 21016 ;; Hardware stack levels required when called: 12
 21017 ;; This function calls:
 21018 ;;		_I2C1_Close
 21019 ;;		_I2C1_MasterWrite
 21020 ;;		_I2C1_Open
 21021 ;;		_I2C1_SetAddressNackCallback
 21022 ;;		_I2C1_SetBuffer
 21023 ;;		_I2C1_SetDataCompleteCallback
 21024 ;; This function is called by:
 21025 ;;		_loadNVM_VarSystem
 21026 ;; This function uses a non-reentrant model
 21027 ;;
 21028                           
 21029                           	psect	text77
 21030  00830A                     __ptext77:
 21031                           	callstack 0
 21032  00830A                     _I2C1_Read1ByteRegister:
 21033                           	callstack 17
 21034                           
 21035                           ;incstack = 0
 21036                           ;I2C1_Read1ByteRegister@address stored from wreg
 21037  00830A  6E23               	movwf	I2C1_Read1ByteRegister@address^0,c
 21038                           
 21039                           ;mcc_generated_files/examples/i2c1_master_example.c: 65: uint8_t I2C1_Read1ByteRegister(
      +                          i2c1_address_t address, uint8_t reg);mcc_generated_files/examples/i2c1_master_example.c:
      +                           66: {;mcc_generated_files/examples/i2c1_master_example.c: 67:     uint8_t returnValue =
      +                           0x00;
 21040  00830C  0E00               	movlw	0
 21041  00830E  6E24               	movwf	I2C1_Read1ByteRegister@returnValue^0,c
 21042  008310                     l21091:
 21043  008310  5023               	movf	I2C1_Read1ByteRegister@address^0,w,c
 21044  008312  ECE4  F03C         	call	_I2C1_Open
 21045  008316  0900               	iorlw	0
 21046  008318  B4D8               	btfsc	status,2,c
 21047  00831A  D7FA               	goto	l21091
 21048                           
 21049                           ;mcc_generated_files/examples/i2c1_master_example.c: 70:     I2C1_SetDataCompleteCallbac
      +                          k(rd1RegCompleteHandler,&returnValue);
 21050  00831C  0E4A               	movlw	low _rd1RegCompleteHandler@i2c1_master_example$F500
 21051  00831E  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 21052  008320  0E8C               	movlw	high _rd1RegCompleteHandler@i2c1_master_example$F500
 21053  008322  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 21054  008324  0E24               	movlw	low I2C1_Read1ByteRegister@returnValue
 21055  008326  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 21056  008328  6A18               	clrf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 21057  00832A  EC51  F048         	call	_I2C1_SetDataCompleteCallback	;wreg free
 21058                           
 21059                           ;mcc_generated_files/examples/i2c1_master_example.c: 71:     I2C1_SetBuffer(&reg,1);
 21060  00832E  0E22               	movlw	low I2C1_Read1ByteRegister@reg
 21061  008330  6E10               	movwf	I2C1_SetBuffer@buffer^0,c
 21062  008332  6A11               	clrf	(I2C1_SetBuffer@buffer+1)^0,c
 21063  008334  0E00               	movlw	0
 21064  008336  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 21065  008338  0E01               	movlw	1
 21066  00833A  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 21067  00833C  EC08  F048         	call	_I2C1_SetBuffer	;wreg free
 21068                           
 21069                           ; BSR set to: 2
 21070                           ;mcc_generated_files/examples/i2c1_master_example.c: 72:     I2C1_SetAddressNackCallback
      +                          (((void*)0),((void*)0));
 21071  008340  0E00               	movlw	0
 21072  008342  6E15               	movwf	I2C1_SetAddressNackCallback@cb^0,c
 21073  008344  0E00               	movlw	0
 21074  008346  6E16               	movwf	(I2C1_SetAddressNackCallback@cb+1)^0,c
 21075  008348  0E00               	movlw	0
 21076  00834A  6E17               	movwf	I2C1_SetAddressNackCallback@ptr^0,c
 21077  00834C  0E00               	movlw	0
 21078  00834E  6E18               	movwf	(I2C1_SetAddressNackCallback@ptr+1)^0,c
 21079  008350  EC39  F048         	call	_I2C1_SetAddressNackCallback	;wreg free
 21080                           
 21081                           ;mcc_generated_files/examples/i2c1_master_example.c: 73:     I2C1_MasterWrite();
 21082  008354  EC07  F049         	call	_I2C1_MasterWrite	;wreg free
 21083  008358                     l21101:
 21084  008358  EC7A  F047         	call	_I2C1_Close	;wreg free
 21085  00835C  06E8               	decf	wreg,f,c
 21086  00835E  B4D8               	btfsc	status,2,c
 21087  008360  D7FB               	goto	l21101
 21088                           
 21089                           ;mcc_generated_files/examples/i2c1_master_example.c: 76:     return returnValue;
 21090  008362  5024               	movf	I2C1_Read1ByteRegister@returnValue^0,w,c
 21091  008364  0012               	return		;funcret
 21092  008366                     __end_of_I2C1_Read1ByteRegister:
 21093                           	callstack 0
 21094                           
 21095 ;; *************** function _getKeyPressed *****************
 21096 ;; Defined at:
 21097 ;;		line 217 in file "inputs_MC50.c"
 21098 ;; Parameters:    Size  Location     Type
 21099 ;;		None
 21100 ;; Auto vars:     Size  Location     Type
 21101 ;;  temp            1   15[COMRAM] char 
 21102 ;; Return value:  Size  Location     Type
 21103 ;;                  1    wreg      char 
 21104 ;; Registers used:
 21105 ;;		wreg, status,2, status,0
 21106 ;; Tracked objects:
 21107 ;;		On entry : 3E/1
 21108 ;;		On exit  : 3D/0
 21109 ;;		Unchanged: 0/0
 21110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21112 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21114 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21115 ;;Total ram usage:        1 bytes
 21116 ;; Hardware stack levels used: 1
 21117 ;; Hardware stack levels required when called: 4
 21118 ;; This function calls:
 21119 ;;		Nothing
 21120 ;; This function is called by:
 21121 ;;		_main
 21122 ;; This function uses a non-reentrant model
 21123 ;;
 21124                           
 21125                           	psect	text78
 21126  00905A                     __ptext78:
 21127                           	callstack 0
 21128  00905A                     _getKeyPressed:
 21129                           	callstack 26
 21130                           
 21131                           ;inputs_MC50.c: 218:     signed char temp=-1;
 21132                           
 21133                           ;incstack = 0
 21134  00905A  6810               	setf	getKeyPressed@temp^0,c
 21135                           
 21136                           ;inputs_MC50.c: 219:     if(RFFull)
 21137  00905C  0100               	movlb	0	; () banked
 21138  00905E  518B               	movf	_RFFull& (0+255),w,b	;volatile
 21139  009060  B4D8               	btfsc	status,2,c
 21140  009062  D005               	goto	l16507
 21141                           
 21142                           ; BSR set to: 0
 21143                           ;inputs_MC50.c: 220:     {;inputs_MC50.c: 221:         temp=(BufferRF[7]&0xF0)>>4;
 21144  009064  0102               	movlb	2	; () banked
 21145  009066  39CF               	swapf	(_BufferRF+7)& (0+255),w,b
 21146  009068  0B0F               	andlw	15
 21147  00906A  0B0F               	andlw	15
 21148  00906C  6E10               	movwf	getKeyPressed@temp^0,c
 21149  00906E                     l16507:
 21150                           
 21151                           ;inputs_MC50.c: 223:     return temp;
 21152  00906E  5010               	movf	getKeyPressed@temp^0,w,c
 21153  009070  0012               	return		;funcret
 21154  009072                     __end_of_getKeyPressed:
 21155                           	callstack 0
 21156                           
 21157 ;; *************** function _eusartparser *****************
 21158 ;; Defined at:
 21159 ;;		line 441 in file "eusartparser.c"
 21160 ;; Parameters:    Size  Location     Type
 21161 ;;  package         1   57[COMRAM] PTR struct package_t
 21162 ;;		 -> main@package(7), 
 21163 ;; Auto vars:     Size  Location     Type
 21164 ;;  a               7    0        struct package_t
 21165 ;; Return value:  Size  Location     Type
 21166 ;;                  1    wreg      void 
 21167 ;; Registers used:
 21168 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 21169 ;; Tracked objects:
 21170 ;;		On entry : 3F/E
 21171 ;;		On exit  : 0/0
 21172 ;;		Unchanged: 0/0
 21173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21174 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21176 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21177 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21178 ;;Total ram usage:        3 bytes
 21179 ;; Hardware stack levels used: 1
 21180 ;; Hardware stack levels required when called: 14
 21181 ;; This function calls:
 21182 ;;		_SaveNVM_VarSystem
 21183 ;;		_read_eusartparser
 21184 ;;		_write_eusartparser
 21185 ;;		_write_package
 21186 ;; This function is called by:
 21187 ;;		_main
 21188 ;; This function uses a non-reentrant model
 21189 ;;
 21190                           
 21191                           	psect	text79
 21192  006E86                     __ptext79:
 21193                           	callstack 0
 21194  006E86                     _eusartparser:
 21195                           	callstack 16
 21196                           
 21197                           ; BSR set to: 14
 21198                           ;eusartparser.c: 442:         struct package_t a;;eusartparser.c: 443:         switch(pa
      +                          ckage->functioncode){
 21199                           
 21200                           ;incstack = 0
 21201  006E86  D04E               	goto	l22785
 21202  006E88                     l22757:
 21203                           
 21204                           ; BSR set to: 0
 21205                           ;eusartparser.c: 445:                 if(programmer_enable)
 21206  006E88  5185               	movf	_programmer_enable& (0+255),w,b
 21207  006E8A  B4D8               	btfsc	status,2,c
 21208  006E8C  0012               	return	
 21209                           
 21210                           ; BSR set to: 0
 21211                           ;eusartparser.c: 446:                     read_eusartparser(package);
 21212  006E8E  C03A  F018         	movff	eusartparser@package,read_eusartparser@package
 21213  006E92  ECD4  F014         	call	_read_eusartparser	;wreg free
 21214  006E96  0012               	return	
 21215  006E98                     l22761:
 21216                           
 21217                           ; BSR set to: 0
 21218                           ;eusartparser.c: 450:                 if(programmer_enable)
 21219  006E98  5185               	movf	_programmer_enable& (0+255),w,b
 21220  006E9A  B4D8               	btfsc	status,2,c
 21221  006E9C  0012               	return	
 21222                           
 21223                           ; BSR set to: 0
 21224                           ;eusartparser.c: 451:                     write_eusartparser(*package);
 21225  006E9E  503A               	movf	eusartparser@package^0,w,c
 21226  006EA0  6ED9               	movwf	fsr2l,c
 21227  006EA2  6ADA               	clrf	fsr2h,c
 21228  006EA4  EE00  F010         	lfsr	0,write_eusartparser@package
 21229  006EA8  0E06               	movlw	6
 21230  006EAA                     u27801:
 21231  006EAA  CFDB FFEB          	movff	plusw2,plusw0
 21232  006EAE  06E8               	decf	wreg,f,c
 21233  006EB0  E2FC               	bc	u27801
 21234  006EB2  EC58  F017         	call	_write_eusartparser	;wreg free
 21235  006EB6  0012               	return	
 21236  006EB8                     l22765:
 21237                           
 21238                           ; BSR set to: 0
 21239                           ;eusartparser.c: 455:                 if(programmer_enable){
 21240  006EB8  5185               	movf	_programmer_enable& (0+255),w,b
 21241  006EBA  B4D8               	btfsc	status,2,c
 21242  006EBC  D008               	goto	l22771
 21243                           
 21244                           ; BSR set to: 0
 21245                           ;eusartparser.c: 456:                     SaveNVM_VarSystem(pageMemoryE);
 21246  006EBE  0E01               	movlw	1
 21247  006EC0  EC0A  F045         	call	_SaveNVM_VarSystem
 21248                           
 21249                           ;eusartparser.c: 457:                     SaveNVM_VarSystem(pageMemoryP);
 21250  006EC4  0E00               	movlw	0
 21251  006EC6  EC0A  F045         	call	_SaveNVM_VarSystem
 21252                           
 21253                           ;eusartparser.c: 458:                     programmer_enable=0;
 21254  006ECA  0E00               	movlw	0
 21255  006ECC  D005               	goto	L83
 21256  006ECE                     l22771:
 21257                           
 21258                           ; BSR set to: 0
 21259                           ;eusartparser.c: 461:                     if((sm_state_Main_t)main_stateMachine.current_
      +                          state==st_standBy)
 21260  006ECE  0101               	movlb	1	; () banked
 21261  006ED0  51ED               	movf	_main_stateMachine& (0+255),w,b
 21262  006ED2  A4D8               	btfss	status,2,c
 21263  006ED4  D004               	goto	l22775
 21264                           
 21265                           ; BSR set to: 1
 21266                           ;eusartparser.c: 462:                         programmer_enable=1;
 21267  006ED6  0E01               	movlw	1
 21268  006ED8                     L83:
 21269  006ED8  0100               	movlb	0	; () banked
 21270  006EDA  6F85               	movwf	_programmer_enable& (0+255),b
 21271  006EDC  D016               	goto	l22779
 21272  006EDE                     l22775:
 21273                           
 21274                           ; BSR set to: 1
 21275                           ;eusartparser.c: 464:                         package->data.data16=(uint16_t)2;
 21276  006EDE  503A               	movf	eusartparser@package^0,w,c
 21277  006EE0  6ED9               	movwf	fsr2l,c
 21278  006EE2  6ADA               	clrf	fsr2h,c
 21279  006EE4  0E02               	movlw	2
 21280  006EE6  26D9               	addwf	fsr2l,f,c
 21281  006EE8  0E02               	movlw	2
 21282  006EEA  6EDE               	movwf	postinc2,c
 21283  006EEC  0E00               	movlw	0
 21284  006EEE  6EDD               	movwf	postdec2,c
 21285  006EF0                     l22777:
 21286                           
 21287                           ;eusartparser.c: 465:                         write_package(*package);
 21288  006EF0  503A               	movf	eusartparser@package^0,w,c
 21289  006EF2  6ED9               	movwf	fsr2l,c
 21290  006EF4  6ADA               	clrf	fsr2h,c
 21291  006EF6  EE00  F011         	lfsr	0,write_package@package
 21292  006EFA  0E06               	movlw	6
 21293  006EFC                     u27831:
 21294  006EFC  CFDB FFEB          	movff	plusw2,plusw0
 21295  006F00  06E8               	decf	wreg,f,c
 21296  006F02  E2FC               	bc	u27831
 21297  006F04  ECB7  F045         	call	_write_package	;wreg free
 21298                           
 21299                           ;eusartparser.c: 466:                         break;
 21300  006F08  0012               	return	
 21301  006F0A                     l22779:
 21302                           
 21303                           ; BSR set to: 0
 21304                           ;eusartparser.c: 470:                 package->data.data16=(uint16_t)programmer_enable;
 21305  006F0A  5185               	movf	_programmer_enable& (0+255),w,b
 21306  006F0C  6FDC               	movwf	??_eusartparser& (0+255),b
 21307  006F0E  6BDD               	clrf	(??_eusartparser+1)& (0+255),b
 21308  006F10  503A               	movf	eusartparser@package^0,w,c
 21309  006F12  6ED9               	movwf	fsr2l,c
 21310  006F14  6ADA               	clrf	fsr2h,c
 21311  006F16  0E02               	movlw	2
 21312  006F18  26D9               	addwf	fsr2l,f,c
 21313  006F1A  C0DC  FFDE         	movff	??_eusartparser,postinc2
 21314  006F1E  C0DD  FFDD         	movff	??_eusartparser+1,postdec2
 21315  006F22  D7E6               	goto	l22777
 21316  006F24                     l22785:
 21317                           
 21318                           ; BSR set to: 14
 21319  006F24  503A               	movf	eusartparser@package^0,w,c
 21320  006F26  6ED9               	movwf	fsr2l,c
 21321  006F28  6ADA               	clrf	fsr2h,c
 21322  006F2A  50DF               	movf	indf2,w,c
 21323  006F2C  0100               	movlb	0	; () banked
 21324  006F2E  6FDC               	movwf	??_eusartparser& (0+255),b
 21325  006F30  6BDD               	clrf	(??_eusartparser+1)& (0+255),b
 21326                           
 21327                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21328                           ; Switch size 1, requested type "simple"
 21329                           ; Number of cases is 1, Range of values is 0 to 0
 21330                           ; switch strategies available:
 21331                           ; Name         Instructions Cycles
 21332                           ; simple_byte            4     3 (average)
 21333                           ;	Chosen strategy is simple_byte
 21334  006F32  51DD               	movf	(??_eusartparser+1)& (0+255),w,b
 21335  006F34  0A00               	xorlw	0	; case 0
 21336  006F36  A4D8               	btfss	status,2,c
 21337  006F38  0012               	return	
 21338                           
 21339                           ; BSR set to: 0
 21340                           ; Switch size 1, requested type "simple"
 21341                           ; Number of cases is 3, Range of values is 0 to 2
 21342                           ; switch strategies available:
 21343                           ; Name         Instructions Cycles
 21344                           ; simple_byte           10     6 (average)
 21345                           ;	Chosen strategy is simple_byte
 21346  006F3A  51DC               	movf	??_eusartparser& (0+255),w,b
 21347  006F3C  0A00               	xorlw	0	; case 0
 21348  006F3E  B4D8               	btfsc	status,2,c
 21349  006F40  D7A3               	goto	l22757
 21350  006F42  0A01               	xorlw	1	; case 1
 21351  006F44  B4D8               	btfsc	status,2,c
 21352  006F46  D7A8               	goto	l22761
 21353  006F48  0A03               	xorlw	3	; case 2
 21354  006F4A  A4D8               	btfss	status,2,c
 21355  006F4C  0012               	return	
 21356  006F4E  D7B4               	goto	l22765
 21357  006F50                     __end_of_eusartparser:
 21358                           	callstack 0
 21359                           
 21360 ;; *************** function _write_eusartparser *****************
 21361 ;; Defined at:
 21362 ;;		line 241 in file "eusartparser.c"
 21363 ;; Parameters:    Size  Location     Type
 21364 ;;  package         7   15[COMRAM] struct package_t
 21365 ;; Auto vars:     Size  Location     Type
 21366 ;;  debug2          2   32[COMRAM] volatile int 
 21367 ;;  debug           2   30[COMRAM] volatile int 
 21368 ;; Return value:  Size  Location     Type
 21369 ;;                  1    wreg      void 
 21370 ;; Registers used:
 21371 ;;		wreg, status,2, status,0
 21372 ;; Tracked objects:
 21373 ;;		On entry : 3F/0
 21374 ;;		On exit  : 3F/0
 21375 ;;		Unchanged: 0/0
 21376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21377 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21378 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21379 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21380 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21381 ;;Total ram usage:       19 bytes
 21382 ;; Hardware stack levels used: 1
 21383 ;; Hardware stack levels required when called: 4
 21384 ;; This function calls:
 21385 ;;		Nothing
 21386 ;; This function is called by:
 21387 ;;		_eusartparser
 21388 ;; This function uses a non-reentrant model
 21389 ;;
 21390                           
 21391                           	psect	text80
 21392  002EB0                     __ptext80:
 21393                           	callstack 0
 21394  002EB0                     _write_eusartparser:
 21395                           	callstack 25
 21396                           
 21397                           ; BSR set to: 0
 21398                           ;eusartparser.c: 242:         volatile int debug=(uint8_t)package.address;
 21399                           
 21400                           ;incstack = 0
 21401  002EB0  C011  F01F         	movff	write_eusartparser@package+1,write_eusartparser@debug	;volatile
 21402  002EB4  6A20               	clrf	(write_eusartparser@debug+1)^0,c	;volatile
 21403                           
 21404                           ; BSR set to: 0
 21405                           ;eusartparser.c: 243:         volatile int debug2=0x10;
 21406  002EB6  0E00               	movlw	0
 21407  002EB8  6E22               	movwf	(write_eusartparser@debug2+1)^0,c	;volatile
 21408  002EBA  0E10               	movlw	16
 21409  002EBC  6E21               	movwf	write_eusartparser@debug2^0,c	;volatile
 21410                           
 21411                           ;eusartparser.c: 244:         switch((uint8_t)package.address){
 21412  002EBE  D180               	goto	l16199
 21413  002EC0                     l3587:
 21414                           
 21415                           ; BSR set to: 0
 21416                           ;eusartparser.c: 249:                 var_sys_NVM.decelarationOpen=package.data.data8[0]
      +                          ;
 21417  002EC0  C012  F098         	movff	write_eusartparser@package+2,_var_sys_NVM	;volatile
 21418                           
 21419                           ;eusartparser.c: 250:                 var_sys_NVM.decelarationClose=package.data.data8[1
      +                          ];
 21420  002EC4  C013  F099         	movff	write_eusartparser@package+3,_var_sys_NVM+1	;volatile
 21421                           
 21422                           ;eusartparser.c: 251:                 break;
 21423  002EC8  0012               	return	
 21424  002ECA                     l3589:
 21425                           
 21426                           ; BSR set to: 0
 21427                           ;eusartparser.c: 255:                 var_sys_NVM.motorPower=package.data.data8[0];
 21428  002ECA  C012  F09A         	movff	write_eusartparser@package+2,_var_sys_NVM+2	;volatile
 21429                           
 21430                           ;eusartparser.c: 256:                 var_sys_NVM.motorSensitivity=package.data.data8[1]
      +                          ;
 21431  002ECE  C013  F09B         	movff	write_eusartparser@package+3,_var_sys_NVM+3	;volatile
 21432                           
 21433                           ;eusartparser.c: 257:                 break;
 21434  002ED2  0012               	return	
 21435  002ED4                     l3590:
 21436                           
 21437                           ; BSR set to: 0
 21438                           ;eusartparser.c: 261:                 var_sys_NVM.walkTime=package.data.data8[1];
 21439  002ED4  C013  F09C         	movff	write_eusartparser@package+3,_var_sys_NVM+4	;volatile
 21440                           
 21441                           ;eusartparser.c: 262:                 break;
 21442  002ED8  0012               	return	
 21443  002EDA                     l3592:
 21444                           
 21445                           ; BSR set to: 0
 21446                           ;eusartparser.c: 267:                 var_sys_NVM.autoTimeFullClose=package.data.data8[0
      +                          ];
 21447  002EDA  C012  F09D         	movff	write_eusartparser@package+2,_var_sys_NVM+5	;volatile
 21448                           
 21449                           ;eusartparser.c: 268:                 var_sys_NVM.autoTimeWalkClose=package.data.data8[1
      +                          ];
 21450  002EDE  C013  F09E         	movff	write_eusartparser@package+3,_var_sys_NVM+6	;volatile
 21451                           
 21452                           ;eusartparser.c: 269:                 break;
 21453  002EE2  0012               	return	
 21454  002EE4                     l3594:
 21455                           
 21456                           ; BSR set to: 0
 21457                           ;eusartparser.c: 274:                 var_sys_NVM.photoCellIsON=package.data.data8[0];
 21458  002EE4  C012  F09F         	movff	write_eusartparser@package+2,_var_sys_NVM+7	;volatile
 21459                           
 21460                           ;eusartparser.c: 275:                 var_sys_NVM.photoCellInOpen=package.data.data8[1];
 21461  002EE8  C013  F0A0         	movff	write_eusartparser@package+3,_var_sys_NVM+8	;volatile
 21462                           
 21463                           ;eusartparser.c: 276:                 break;
 21464  002EEC  0012               	return	
 21465  002EEE                     l3595:
 21466                           
 21467                           ; BSR set to: 0
 21468                           ;eusartparser.c: 280:                 var_sys_NVM.securityBandIsON=package.data.data8[0]
      +                          ;
 21469  002EEE  C012  F0A1         	movff	write_eusartparser@package+2,_var_sys_NVM+9	;volatile
 21470                           
 21471                           ;eusartparser.c: 281:                 var_sys_NVM.securityBandType=package.data.data8[1]
      +                          ;
 21472  002EF2  C013  F0A2         	movff	write_eusartparser@package+3,_var_sys_NVM+10	;volatile
 21473                           
 21474                           ;eusartparser.c: 282:                 break;
 21475  002EF6  0012               	return	
 21476  002EF8                     l3596:
 21477                           
 21478                           ; BSR set to: 0
 21479                           ;eusartparser.c: 286:                 var_sys_NVM.securityBandInOpen=package.data.data8[
      +                          1];
 21480  002EF8  C013  F0A3         	movff	write_eusartparser@package+3,_var_sys_NVM+11	;volatile
 21481                           
 21482                           ;eusartparser.c: 287:                 break;
 21483  002EFC  0012               	return	
 21484  002EFE                     l3597:
 21485                           
 21486                           ; BSR set to: 0
 21487                           ;eusartparser.c: 291:                 var_sys_NVM.operationMode=package.data.data8[1];
 21488  002EFE  C013  F0A4         	movff	write_eusartparser@package+3,_var_sys_NVM+12	;volatile
 21489                           
 21490                           ;eusartparser.c: 292:                 break;
 21491  002F02  0012               	return	
 21492  002F04                     l3598:
 21493                           
 21494                           ; BSR set to: 0
 21495                           ;eusartparser.c: 296:                 var_sys_NVM.flashLightMode=package.data.data8[1];
 21496  002F04  C013  F0A5         	movff	write_eusartparser@package+3,_var_sys_NVM+13	;volatile
 21497                           
 21498                           ;eusartparser.c: 297:                 break;
 21499  002F08  0012               	return	
 21500  002F0A                     l3599:
 21501                           
 21502                           ; BSR set to: 0
 21503                           ;eusartparser.c: 301:                 var_sys_NVM.programmingDistance=package.data.data8
      +                          [1];
 21504  002F0A  C013  F0A6         	movff	write_eusartparser@package+3,_var_sys_NVM+14	;volatile
 21505                           
 21506                           ;eusartparser.c: 302:                 break;
 21507  002F0E  0012               	return	
 21508  002F10                     l3600:
 21509                           
 21510                           ; BSR set to: 0
 21511                           ;eusartparser.c: 306:                 var_sys_NVM.decelarationSensivity=package.data.dat
      +                          a8[1];
 21512  002F10  C013  F0A7         	movff	write_eusartparser@package+3,_var_sys_NVM+15	;volatile
 21513                           
 21514                           ;eusartparser.c: 307:                 break;
 21515  002F14  0012               	return	
 21516  002F16                     l3601:
 21517                           
 21518                           ; BSR set to: 0
 21519                           ;eusartparser.c: 312:                 var_sys_NVM.homemPresente=package.data.data8[1];
 21520  002F16  C013  F0A8         	movff	write_eusartparser@package+3,_var_sys_NVM+16	;volatile
 21521                           
 21522                           ;eusartparser.c: 313:                 break;
 21523  002F1A  0012               	return	
 21524  002F1C                     l3603:
 21525                           
 21526                           ; BSR set to: 0
 21527                           ;eusartparser.c: 318:                 var_sys_NVM.logicDigital=package.data.data8[1];
 21528  002F1C  C013  F0A9         	movff	write_eusartparser@package+3,_var_sys_NVM+17	;volatile
 21529                           
 21530                           ;eusartparser.c: 319:                 break;
 21531  002F20  0012               	return	
 21532  002F22                     l3604:
 21533                           
 21534                           ; BSR set to: 0
 21535                           ;eusartparser.c: 323:                 var_sys_NVM.softStart=package.data.data8[0];
 21536  002F22  C012  F0AA         	movff	write_eusartparser@package+2,_var_sys_NVM+18	;volatile
 21537                           
 21538                           ;eusartparser.c: 324:                 var_sys_NVM.softstop=package.data.data8[1];
 21539  002F26  C013  F0AB         	movff	write_eusartparser@package+3,_var_sys_NVM+19	;volatile
 21540                           
 21541                           ;eusartparser.c: 325:                 break;
 21542  002F2A  0012               	return	
 21543  002F2C                     l3606:
 21544                           
 21545                           ; BSR set to: 0
 21546                           ;eusartparser.c: 330:                 var_sys_NVM.ligthTime=package.data.data8[1];
 21547  002F2C  C013  F0AC         	movff	write_eusartparser@package+3,_var_sys_NVM+20	;volatile
 21548                           
 21549                           ;eusartparser.c: 331:                 break;
 21550  002F30  0012               	return	
 21551  002F32                     l3608:
 21552                           
 21553                           ; BSR set to: 0
 21554                           ;eusartparser.c: 336:                 var_sys_NVM.folow_me=package.data.data8[1];
 21555  002F32  C013  F0AD         	movff	write_eusartparser@package+3,_var_sys_NVM+21	;volatile
 21556                           
 21557                           ;eusartparser.c: 337:                 break;
 21558  002F36  0012               	return	
 21559  002F38                     l3609:
 21560                           
 21561                           ; BSR set to: 0
 21562                           ;eusartparser.c: 341:                 var_sys_NVM.Stopboton=package.data.data8[1];
 21563  002F38  C013  F0AE         	movff	write_eusartparser@package+3,_var_sys_NVM+22	;volatile
 21564                           
 21565                           ;eusartparser.c: 342:                 break;
 21566  002F3C  0012               	return	
 21567  002F3E                     l3610:
 21568                           
 21569                           ; BSR set to: 0
 21570                           ;eusartparser.c: 346:                 var_sys_NVM.electricBrake=package.data.data8[1];
 21571  002F3E  C013  F0AF         	movff	write_eusartparser@package+3,_var_sys_NVM+23	;volatile
 21572                           
 21573                           ;eusartparser.c: 347:                 break;
 21574  002F42  0012               	return	
 21575  002F44                     l3611:
 21576                           
 21577                           ; BSR set to: 0
 21578                           ;eusartparser.c: 351:                 var_sys_NVM.velocityDecelaration=package.data.data
      +                          8[1];
 21579  002F44  C013  F0B0         	movff	write_eusartparser@package+3,_var_sys_NVM+24	;volatile
 21580                           
 21581                           ;eusartparser.c: 352:                 break;
 21582  002F48  0012               	return	
 21583  002F4A                     l3613:
 21584                           
 21585                           ; BSR set to: 0
 21586                           ;eusartparser.c: 357:                 var_sys_NVM.flashRGBMode=package.data.data8[1];
 21587  002F4A  C013  F0B1         	movff	write_eusartparser@package+3,_var_sys_NVM+25	;volatile
 21588                           
 21589                           ;eusartparser.c: 358:                 break;
 21590  002F4E  0012               	return	
 21591  002F50                     l3614:
 21592                           
 21593                           ; BSR set to: 0
 21594                           ;eusartparser.c: 362:                 var_sys_NVM.Direction_motor=package.data.data8[1];
 21595  002F50  C013  F0B3         	movff	write_eusartparser@package+3,_var_sys_NVM+27	;volatile
 21596                           
 21597                           ;eusartparser.c: 363:                 break;
 21598  002F54  0012               	return	
 21599  002F56                     l3615:
 21600                           
 21601                           ; BSR set to: 0
 21602                           ;eusartparser.c: 367:                 var_sys_NVM.TypeofMotor=package.data.data8[1];
 21603  002F56  C013  F0B4         	movff	write_eusartparser@package+3,_var_sys_NVM+28	;volatile
 21604                           
 21605                           ;eusartparser.c: 368:                 break;
 21606  002F5A  0012               	return	
 21607  002F5C                     l3616:
 21608                           
 21609                           ; BSR set to: 0
 21610                           ;eusartparser.c: 372:                 var_sys_NVM.positionRemotesFull=package.data.data8
      +                          [0];
 21611  002F5C  C012  F0B8         	movff	write_eusartparser@package+2,_var_sys_NVM+32	;volatile
 21612                           
 21613                           ;eusartparser.c: 373:                 var_sys_NVM.positionRemotesWalk=package.data.data8
      +                          [1];
 21614  002F60  C013  F0B9         	movff	write_eusartparser@package+3,_var_sys_NVM+33	;volatile
 21615                           
 21616                           ;eusartparser.c: 374:                 break;
 21617  002F64  0012               	return	
 21618  002F66                     l16177:
 21619                           
 21620                           ; BSR set to: 0
 21621                           ;eusartparser.c: 377:                 var_sys_NVM.counterMoves=var_sys_NVM.counterMoves|
      +                          ((uint32_t)(package.data.data16&0xFFFF)<<(uint8_t)(1*16));
 21622  002F66  5012               	movf	(write_eusartparser@package+2)^0,w,c
 21623  002F68  6E17               	movwf	??_write_eusartparser^0,c
 21624  002F6A  5013               	movf	(write_eusartparser@package+3)^0,w,c
 21625  002F6C  6E18               	movwf	(??_write_eusartparser+1)^0,c
 21626  002F6E  6A19               	clrf	(??_write_eusartparser+2)^0,c
 21627  002F70  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 21628  002F72  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 21629  002F76  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 21630  002F7A  6A18               	clrf	(??_write_eusartparser+1)^0,c
 21631  002F7C  6A17               	clrf	??_write_eusartparser^0,c
 21632  002F7E  51BA               	movf	(_var_sys_NVM+34)& (0+255),w,b	;volatile
 21633  002F80  1017               	iorwf	??_write_eusartparser^0,w,c
 21634  002F82  6FBA               	movwf	(_var_sys_NVM+34)& (0+255),b	;volatile
 21635  002F84  51BB               	movf	(_var_sys_NVM+35)& (0+255),w,b	;volatile
 21636  002F86  1018               	iorwf	(??_write_eusartparser+1)^0,w,c
 21637  002F88  6FBB               	movwf	(_var_sys_NVM+35)& (0+255),b	;volatile
 21638  002F8A  51BC               	movf	(_var_sys_NVM+36)& (0+255),w,b	;volatile
 21639  002F8C  1019               	iorwf	(??_write_eusartparser+2)^0,w,c
 21640  002F8E  6FBC               	movwf	(_var_sys_NVM+36)& (0+255),b	;volatile
 21641  002F90  51BD               	movf	(_var_sys_NVM+37)& (0+255),w,b	;volatile
 21642  002F92  101A               	iorwf	(??_write_eusartparser+3)^0,w,c
 21643  002F94  6FBD               	movwf	(_var_sys_NVM+37)& (0+255),b	;volatile
 21644                           
 21645                           ;eusartparser.c: 378:                 var_sys_NVM.counterMoves=var_sys_NVM.counterMoves&
      +                          ~((uint32_t)(~package.data.data16&0xFFFF)<<(uint8_t)(1*16));
 21646  002F96  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 21647  002F98  6E17               	movwf	??_write_eusartparser^0,c
 21648  002F9A  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 21649  002F9C  6E18               	movwf	(??_write_eusartparser+1)^0,c
 21650  002F9E  6A19               	clrf	(??_write_eusartparser+2)^0,c
 21651  002FA0  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 21652  002FA2  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 21653  002FA6  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 21654  002FAA  6A18               	clrf	(??_write_eusartparser+1)^0,c
 21655  002FAC  6A17               	clrf	??_write_eusartparser^0,c
 21656  002FAE  1C17               	comf	??_write_eusartparser^0,w,c
 21657  002FB0  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 21658  002FB2  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 21659  002FB4  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 21660  002FB6  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 21661  002FB8  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 21662  002FBA  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 21663  002FBC  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 21664  002FBE  51BA               	movf	(_var_sys_NVM+34)& (0+255),w,b	;volatile
 21665  002FC0  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 21666  002FC2  6FBA               	movwf	(_var_sys_NVM+34)& (0+255),b	;volatile
 21667  002FC4  51BB               	movf	(_var_sys_NVM+35)& (0+255),w,b	;volatile
 21668  002FC6  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 21669  002FC8  6FBB               	movwf	(_var_sys_NVM+35)& (0+255),b	;volatile
 21670  002FCA  51BC               	movf	(_var_sys_NVM+36)& (0+255),w,b	;volatile
 21671  002FCC  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 21672  002FCE  6FBC               	movwf	(_var_sys_NVM+36)& (0+255),b	;volatile
 21673  002FD0  51BD               	movf	(_var_sys_NVM+37)& (0+255),w,b	;volatile
 21674  002FD2  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 21675  002FD4  6FBD               	movwf	(_var_sys_NVM+37)& (0+255),b	;volatile
 21676                           
 21677                           ;eusartparser.c: 379:                 break;
 21678  002FD6  0012               	return	
 21679  002FD8                     l16179:
 21680                           
 21681                           ; BSR set to: 0
 21682                           ;eusartparser.c: 381:                 var_sys_NVM.counterMoves=var_sys_NVM.counterMoves|
      +                          ((uint32_t)(package.data.data16&0xFFFF)<<(uint8_t)(0*16));
 21683  002FD8  5012               	movf	(write_eusartparser@package+2)^0,w,c
 21684  002FDA  11BA               	iorwf	(_var_sys_NVM+34)& (0+255),w,b	;volatile
 21685  002FDC  6FBA               	movwf	(_var_sys_NVM+34)& (0+255),b	;volatile
 21686  002FDE  5013               	movf	(write_eusartparser@package+3)^0,w,c
 21687  002FE0  11BB               	iorwf	(_var_sys_NVM+35)& (0+255),w,b	;volatile
 21688  002FE2  6FBB               	movwf	(_var_sys_NVM+35)& (0+255),b	;volatile
 21689  002FE4  0E00               	movlw	0
 21690  002FE6  11BC               	iorwf	(_var_sys_NVM+36)& (0+255),w,b	;volatile
 21691  002FE8  6FBC               	movwf	(_var_sys_NVM+36)& (0+255),b	;volatile
 21692  002FEA  0E00               	movlw	0
 21693  002FEC  11BD               	iorwf	(_var_sys_NVM+37)& (0+255),w,b	;volatile
 21694  002FEE  6FBD               	movwf	(_var_sys_NVM+37)& (0+255),b	;volatile
 21695                           
 21696                           ;eusartparser.c: 382:                 var_sys_NVM.counterMoves=var_sys_NVM.counterMoves&
      +                          ~((uint32_t)(~package.data.data16&0xFFFF)<<(uint8_t)(0*16));
 21697  002FF0  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 21698  002FF2  6E17               	movwf	??_write_eusartparser^0,c
 21699  002FF4  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 21700  002FF6  6E18               	movwf	(??_write_eusartparser+1)^0,c
 21701  002FF8  6A19               	clrf	(??_write_eusartparser+2)^0,c
 21702  002FFA  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 21703  002FFC  1C17               	comf	??_write_eusartparser^0,w,c
 21704  002FFE  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 21705  003000  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 21706  003002  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 21707  003004  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 21708  003006  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 21709  003008  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 21710  00300A  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 21711  00300C  51BA               	movf	(_var_sys_NVM+34)& (0+255),w,b	;volatile
 21712  00300E  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 21713  003010  6FBA               	movwf	(_var_sys_NVM+34)& (0+255),b	;volatile
 21714  003012  51BB               	movf	(_var_sys_NVM+35)& (0+255),w,b	;volatile
 21715  003014  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 21716  003016  6FBB               	movwf	(_var_sys_NVM+35)& (0+255),b	;volatile
 21717  003018  51BC               	movf	(_var_sys_NVM+36)& (0+255),w,b	;volatile
 21718  00301A  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 21719  00301C  6FBC               	movwf	(_var_sys_NVM+36)& (0+255),b	;volatile
 21720  00301E  51BD               	movf	(_var_sys_NVM+37)& (0+255),w,b	;volatile
 21721  003020  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 21722  003022  6FBD               	movwf	(_var_sys_NVM+37)& (0+255),b	;volatile
 21723                           
 21724                           ;eusartparser.c: 383:                 break;
 21725  003024  0012               	return	
 21726  003026                     l3619:
 21727                           
 21728                           ; BSR set to: 0
 21729                           ;eusartparser.c: 388:                 var_sys_NVM.OnlyRollingCode=package.data.data8[1];
 21730  003026  C013  F0BE         	movff	write_eusartparser@package+3,_var_sys_NVM+38	;volatile
 21731                           
 21732                           ;eusartparser.c: 389:                 break;
 21733  00302A  0012               	return	
 21734  00302C                     l16181:
 21735                           
 21736                           ; BSR set to: 0
 21737                           ;eusartparser.c: 392:                 var_sys_NVM.learningCurrentDecelarationClose=var_s
      +                          ys_NVM.learningCurrentDecelarationClose|((uint32_t)(package.data.data16&0xFFFF)<<(uint8_
      +                          t)(1*16));
 21738  00302C  5012               	movf	(write_eusartparser@package+2)^0,w,c
 21739  00302E  6E17               	movwf	??_write_eusartparser^0,c
 21740  003030  5013               	movf	(write_eusartparser@package+3)^0,w,c
 21741  003032  6E18               	movwf	(??_write_eusartparser+1)^0,c
 21742  003034  6A19               	clrf	(??_write_eusartparser+2)^0,c
 21743  003036  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 21744  003038  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 21745  00303C  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 21746  003040  6A18               	clrf	(??_write_eusartparser+1)^0,c
 21747  003042  6A17               	clrf	??_write_eusartparser^0,c
 21748  003044  51C0               	movf	(_var_sys_NVM+40)& (0+255),w,b	;volatile
 21749  003046  1017               	iorwf	??_write_eusartparser^0,w,c
 21750  003048  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 21751  00304A  51C1               	movf	(_var_sys_NVM+41)& (0+255),w,b	;volatile
 21752  00304C  1018               	iorwf	(??_write_eusartparser+1)^0,w,c
 21753  00304E  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 21754  003050  51C2               	movf	(_var_sys_NVM+42)& (0+255),w,b	;volatile
 21755  003052  1019               	iorwf	(??_write_eusartparser+2)^0,w,c
 21756  003054  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 21757  003056  51C3               	movf	(_var_sys_NVM+43)& (0+255),w,b	;volatile
 21758  003058  101A               	iorwf	(??_write_eusartparser+3)^0,w,c
 21759  00305A  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 21760                           
 21761                           ;eusartparser.c: 393:                 var_sys_NVM.learningCurrentDecelarationClose=var_s
      +                          ys_NVM.learningCurrentDecelarationClose&~((uint32_t)(~package.data.data16&0xFFFF)<<(uint
      +                          8_t)(1*16));
 21762  00305C  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 21763  00305E  6E17               	movwf	??_write_eusartparser^0,c
 21764  003060  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 21765  003062  6E18               	movwf	(??_write_eusartparser+1)^0,c
 21766  003064  6A19               	clrf	(??_write_eusartparser+2)^0,c
 21767  003066  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 21768  003068  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 21769  00306C  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 21770  003070  6A18               	clrf	(??_write_eusartparser+1)^0,c
 21771  003072  6A17               	clrf	??_write_eusartparser^0,c
 21772  003074  1C17               	comf	??_write_eusartparser^0,w,c
 21773  003076  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 21774  003078  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 21775  00307A  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 21776  00307C  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 21777  00307E  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 21778  003080  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 21779  003082  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 21780  003084  51C0               	movf	(_var_sys_NVM+40)& (0+255),w,b	;volatile
 21781  003086  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 21782  003088  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 21783  00308A  51C1               	movf	(_var_sys_NVM+41)& (0+255),w,b	;volatile
 21784  00308C  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 21785  00308E  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 21786  003090  51C2               	movf	(_var_sys_NVM+42)& (0+255),w,b	;volatile
 21787  003092  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 21788  003094  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 21789  003096  51C3               	movf	(_var_sys_NVM+43)& (0+255),w,b	;volatile
 21790  003098  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 21791  00309A  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 21792                           
 21793                           ;eusartparser.c: 394:                 break;
 21794  00309C  0012               	return	
 21795  00309E                     l16183:
 21796                           
 21797                           ; BSR set to: 0
 21798                           ;eusartparser.c: 396:                 var_sys_NVM.learningCurrentDecelarationClose=var_s
      +                          ys_NVM.learningCurrentDecelarationClose|((uint32_t)(package.data.data16&0xFFFF)<<(uint8_
      +                          t)(0*16));
 21799  00309E  5012               	movf	(write_eusartparser@package+2)^0,w,c
 21800  0030A0  11C0               	iorwf	(_var_sys_NVM+40)& (0+255),w,b	;volatile
 21801  0030A2  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 21802  0030A4  5013               	movf	(write_eusartparser@package+3)^0,w,c
 21803  0030A6  11C1               	iorwf	(_var_sys_NVM+41)& (0+255),w,b	;volatile
 21804  0030A8  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 21805  0030AA  0E00               	movlw	0
 21806  0030AC  11C2               	iorwf	(_var_sys_NVM+42)& (0+255),w,b	;volatile
 21807  0030AE  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 21808  0030B0  0E00               	movlw	0
 21809  0030B2  11C3               	iorwf	(_var_sys_NVM+43)& (0+255),w,b	;volatile
 21810  0030B4  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 21811                           
 21812                           ;eusartparser.c: 397:                 var_sys_NVM.learningCurrentDecelarationClose=var_s
      +                          ys_NVM.learningCurrentDecelarationClose&~((uint32_t)(~package.data.data16&0xFFFF)<<(uint
      +                          8_t)(0*16));
 21813  0030B6  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 21814  0030B8  6E17               	movwf	??_write_eusartparser^0,c
 21815  0030BA  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 21816  0030BC  6E18               	movwf	(??_write_eusartparser+1)^0,c
 21817  0030BE  6A19               	clrf	(??_write_eusartparser+2)^0,c
 21818  0030C0  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 21819  0030C2  1C17               	comf	??_write_eusartparser^0,w,c
 21820  0030C4  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 21821  0030C6  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 21822  0030C8  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 21823  0030CA  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 21824  0030CC  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 21825  0030CE  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 21826  0030D0  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 21827  0030D2  51C0               	movf	(_var_sys_NVM+40)& (0+255),w,b	;volatile
 21828  0030D4  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 21829  0030D6  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 21830  0030D8  51C1               	movf	(_var_sys_NVM+41)& (0+255),w,b	;volatile
 21831  0030DA  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 21832  0030DC  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 21833  0030DE  51C2               	movf	(_var_sys_NVM+42)& (0+255),w,b	;volatile
 21834  0030E0  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 21835  0030E2  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 21836  0030E4  51C3               	movf	(_var_sys_NVM+43)& (0+255),w,b	;volatile
 21837  0030E6  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 21838  0030E8  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 21839                           
 21840                           ;eusartparser.c: 398:                 break;
 21841  0030EA  0012               	return	
 21842  0030EC                     l16185:
 21843                           
 21844                           ; BSR set to: 0
 21845                           ;eusartparser.c: 401:                 var_sys_NVM.learningCurrentDecelarationOpen=var_sy
      +                          s_NVM.learningCurrentDecelarationOpen|((uint32_t)(package.data.data16&0xFFFF)<<(uint8_t)
      +                          (1*16));
 21846  0030EC  5012               	movf	(write_eusartparser@package+2)^0,w,c
 21847  0030EE  6E17               	movwf	??_write_eusartparser^0,c
 21848  0030F0  5013               	movf	(write_eusartparser@package+3)^0,w,c
 21849  0030F2  6E18               	movwf	(??_write_eusartparser+1)^0,c
 21850  0030F4  6A19               	clrf	(??_write_eusartparser+2)^0,c
 21851  0030F6  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 21852  0030F8  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 21853  0030FC  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 21854  003100  6A18               	clrf	(??_write_eusartparser+1)^0,c
 21855  003102  6A17               	clrf	??_write_eusartparser^0,c
 21856  003104  51C4               	movf	(_var_sys_NVM+44)& (0+255),w,b	;volatile
 21857  003106  1017               	iorwf	??_write_eusartparser^0,w,c
 21858  003108  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 21859  00310A  51C5               	movf	(_var_sys_NVM+45)& (0+255),w,b	;volatile
 21860  00310C  1018               	iorwf	(??_write_eusartparser+1)^0,w,c
 21861  00310E  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 21862  003110  51C6               	movf	(_var_sys_NVM+46)& (0+255),w,b	;volatile
 21863  003112  1019               	iorwf	(??_write_eusartparser+2)^0,w,c
 21864  003114  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 21865  003116  51C7               	movf	(_var_sys_NVM+47)& (0+255),w,b	;volatile
 21866  003118  101A               	iorwf	(??_write_eusartparser+3)^0,w,c
 21867  00311A  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 21868                           
 21869                           ;eusartparser.c: 402:                 var_sys_NVM.learningCurrentDecelarationOpen=var_sy
      +                          s_NVM.learningCurrentDecelarationOpen&~((uint32_t)(~package.data.data16&0xFFFF)<<(uint8_
      +                          t)(1*16));
 21870  00311C  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 21871  00311E  6E17               	movwf	??_write_eusartparser^0,c
 21872  003120  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 21873  003122  6E18               	movwf	(??_write_eusartparser+1)^0,c
 21874  003124  6A19               	clrf	(??_write_eusartparser+2)^0,c
 21875  003126  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 21876  003128  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 21877  00312C  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 21878  003130  6A18               	clrf	(??_write_eusartparser+1)^0,c
 21879  003132  6A17               	clrf	??_write_eusartparser^0,c
 21880  003134  1C17               	comf	??_write_eusartparser^0,w,c
 21881  003136  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 21882  003138  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 21883  00313A  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 21884  00313C  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 21885  00313E  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 21886  003140  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 21887  003142  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 21888  003144  51C4               	movf	(_var_sys_NVM+44)& (0+255),w,b	;volatile
 21889  003146  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 21890  003148  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 21891  00314A  51C5               	movf	(_var_sys_NVM+45)& (0+255),w,b	;volatile
 21892  00314C  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 21893  00314E  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 21894  003150  51C6               	movf	(_var_sys_NVM+46)& (0+255),w,b	;volatile
 21895  003152  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 21896  003154  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 21897  003156  51C7               	movf	(_var_sys_NVM+47)& (0+255),w,b	;volatile
 21898  003158  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 21899  00315A  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 21900                           
 21901                           ;eusartparser.c: 403:                 break;
 21902  00315C  0012               	return	
 21903  00315E                     l16187:
 21904                           
 21905                           ; BSR set to: 0
 21906                           ;eusartparser.c: 405:                 var_sys_NVM.learningCurrentDecelarationOpen=var_sy
      +                          s_NVM.learningCurrentDecelarationOpen|((uint32_t)(package.data.data16&0xFFFF)<<(uint8_t)
      +                          (0*16));
 21907  00315E  5012               	movf	(write_eusartparser@package+2)^0,w,c
 21908  003160  11C4               	iorwf	(_var_sys_NVM+44)& (0+255),w,b	;volatile
 21909  003162  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 21910  003164  5013               	movf	(write_eusartparser@package+3)^0,w,c
 21911  003166  11C5               	iorwf	(_var_sys_NVM+45)& (0+255),w,b	;volatile
 21912  003168  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 21913  00316A  0E00               	movlw	0
 21914  00316C  11C6               	iorwf	(_var_sys_NVM+46)& (0+255),w,b	;volatile
 21915  00316E  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 21916  003170  0E00               	movlw	0
 21917  003172  11C7               	iorwf	(_var_sys_NVM+47)& (0+255),w,b	;volatile
 21918  003174  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 21919                           
 21920                           ;eusartparser.c: 406:                 var_sys_NVM.learningCurrentDecelarationOpen=var_sy
      +                          s_NVM.learningCurrentDecelarationOpen&~((uint32_t)(~package.data.data16&0xFFFF)<<(uint8_
      +                          t)(0*16));
 21921  003176  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 21922  003178  6E17               	movwf	??_write_eusartparser^0,c
 21923  00317A  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 21924  00317C  6E18               	movwf	(??_write_eusartparser+1)^0,c
 21925  00317E  6A19               	clrf	(??_write_eusartparser+2)^0,c
 21926  003180  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 21927  003182  1C17               	comf	??_write_eusartparser^0,w,c
 21928  003184  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 21929  003186  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 21930  003188  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 21931  00318A  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 21932  00318C  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 21933  00318E  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 21934  003190  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 21935  003192  51C4               	movf	(_var_sys_NVM+44)& (0+255),w,b	;volatile
 21936  003194  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 21937  003196  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 21938  003198  51C5               	movf	(_var_sys_NVM+45)& (0+255),w,b	;volatile
 21939  00319A  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 21940  00319C  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 21941  00319E  51C6               	movf	(_var_sys_NVM+46)& (0+255),w,b	;volatile
 21942  0031A0  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 21943  0031A2  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 21944  0031A4  51C7               	movf	(_var_sys_NVM+47)& (0+255),w,b	;volatile
 21945  0031A6  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 21946  0031A8  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 21947                           
 21948                           ;eusartparser.c: 407:                 break;
 21949  0031AA  0012               	return	
 21950  0031AC                     l3624:
 21951                           
 21952                           ; BSR set to: 0
 21953                           ;eusartparser.c: 410:                 var_sys_NVM.learningCurrentNormalClose=package.dat
      +                          a.data16;
 21954  0031AC  C012  F0C8         	movff	write_eusartparser@package+2,_var_sys_NVM+48	;volatile
 21955  0031B0  C013  F0C9         	movff	write_eusartparser@package+3,_var_sys_NVM+49	;volatile
 21956                           
 21957                           ;eusartparser.c: 411:                 break;
 21958  0031B4  0012               	return	
 21959  0031B6                     l3625:
 21960                           
 21961                           ; BSR set to: 0
 21962                           ;eusartparser.c: 414:                 var_sys_NVM.learningCurrentNormalOpen=package.data
      +                          .data16;
 21963  0031B6  C012  F0CA         	movff	write_eusartparser@package+2,_var_sys_NVM+50	;volatile
 21964  0031BA  C013  F0CB         	movff	write_eusartparser@package+3,_var_sys_NVM+51	;volatile
 21965                           
 21966                           ;eusartparser.c: 415:                 break;
 21967  0031BE  0012               	return	
 21968  0031C0                     l16199:
 21969                           
 21970                           ; BSR set to: 0
 21971  0031C0  5011               	movf	(write_eusartparser@package+1)^0,w,c
 21972  0031C2  6E17               	movwf	??_write_eusartparser^0,c
 21973  0031C4  6A18               	clrf	(??_write_eusartparser+1)^0,c
 21974                           
 21975                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21976                           ; Switch size 1, requested type "simple"
 21977                           ; Number of cases is 1, Range of values is 0 to 0
 21978                           ; switch strategies available:
 21979                           ; Name         Instructions Cycles
 21980                           ; simple_byte            4     3 (average)
 21981                           ;	Chosen strategy is simple_byte
 21982  0031C6  5018               	movf	(??_write_eusartparser+1)^0,w,c
 21983  0031C8  0A00               	xorlw	0	; case 0
 21984  0031CA  A4D8               	btfss	status,2,c
 21985  0031CC  0012               	return	
 21986                           
 21987                           ; BSR set to: 0
 21988                           ; Switch size 1, requested type "simple"
 21989                           ; Number of cases is 43, Range of values is 0 to 51
 21990                           ; switch strategies available:
 21991                           ; Name         Instructions Cycles
 21992                           ; simple_byte          130    66 (average)
 21993                           ;	Chosen strategy is simple_byte
 21994  0031CE  5017               	movf	??_write_eusartparser^0,w,c
 21995  0031D0  0A00               	xorlw	0	; case 0
 21996  0031D2  B4D8               	btfsc	status,2,c
 21997  0031D4  D675               	goto	l3587
 21998  0031D6  0A02               	xorlw	2	; case 2
 21999  0031D8  B4D8               	btfsc	status,2,c
 22000  0031DA  D67F               	goto	l3592
 22001  0031DC  0A01               	xorlw	1	; case 3
 22002  0031DE  B4D8               	btfsc	status,2,c
 22003  0031E0  D6A5               	goto	l3606
 22004  0031E2  0A06               	xorlw	6	; case 5
 22005  0031E4  B4D8               	btfsc	status,2,c
 22006  0031E6  D67E               	goto	l3594
 22007  0031E8  0A02               	xorlw	2	; case 7
 22008  0031EA  B4D8               	btfsc	status,2,c
 22009  0031EC  D697               	goto	l3603
 22010  0031EE  0A0F               	xorlw	15	; case 8
 22011  0031F0  B4D8               	btfsc	status,2,c
 22012  0031F2  D6AB               	goto	l3613
 22013  0031F4  0A02               	xorlw	2	; case 10
 22014  0031F6  B4D8               	btfsc	status,2,c
 22015  0031F8  D69C               	goto	l3608
 22016  0031FA  0A1A               	xorlw	26	; case 16
 22017  0031FC  B4D8               	btfsc	status,2,c
 22018  0031FE  D660               	goto	l3587
 22019  003200  0A01               	xorlw	1	; case 17
 22020  003202  B4D8               	btfsc	status,2,c
 22021  003204  D662               	goto	l3589
 22022  003206  0A03               	xorlw	3	; case 18
 22023  003208  B4D8               	btfsc	status,2,c
 22024  00320A  D664               	goto	l3590
 22025  00320C  0A01               	xorlw	1	; case 19
 22026  00320E  B4D8               	btfsc	status,2,c
 22027  003210  D664               	goto	l3592
 22028  003212  0A07               	xorlw	7	; case 20
 22029  003214  B4D8               	btfsc	status,2,c
 22030  003216  D666               	goto	l3594
 22031  003218  0A01               	xorlw	1	; case 21
 22032  00321A  B4D8               	btfsc	status,2,c
 22033  00321C  D668               	goto	l3595
 22034  00321E  0A03               	xorlw	3	; case 22
 22035  003220  B4D8               	btfsc	status,2,c
 22036  003222  D66A               	goto	l3596
 22037  003224  0A01               	xorlw	1	; case 23
 22038  003226  B4D8               	btfsc	status,2,c
 22039  003228  D66A               	goto	l3597
 22040  00322A  0A0F               	xorlw	15	; case 24
 22041  00322C  B4D8               	btfsc	status,2,c
 22042  00322E  D66A               	goto	l3598
 22043  003230  0A01               	xorlw	1	; case 25
 22044  003232  B4D8               	btfsc	status,2,c
 22045  003234  D66A               	goto	l3599
 22046  003236  0A03               	xorlw	3	; case 26
 22047  003238  B4D8               	btfsc	status,2,c
 22048  00323A  D66A               	goto	l3600
 22049  00323C  0A01               	xorlw	1	; case 27
 22050  00323E  B4D8               	btfsc	status,2,c
 22051  003240  D66A               	goto	l3601
 22052  003242  0A07               	xorlw	7	; case 28
 22053  003244  B4D8               	btfsc	status,2,c
 22054  003246  D66A               	goto	l3603
 22055  003248  0A01               	xorlw	1	; case 29
 22056  00324A  B4D8               	btfsc	status,2,c
 22057  00324C  D66A               	goto	l3604
 22058  00324E  0A03               	xorlw	3	; case 30
 22059  003250  B4D8               	btfsc	status,2,c
 22060  003252  D66C               	goto	l3606
 22061  003254  0A01               	xorlw	1	; case 31
 22062  003256  B4D8               	btfsc	status,2,c
 22063  003258  D66C               	goto	l3608
 22064  00325A  0A3F               	xorlw	63	; case 32
 22065  00325C  B4D8               	btfsc	status,2,c
 22066  00325E  D66C               	goto	l3609
 22067  003260  0A01               	xorlw	1	; case 33
 22068  003262  B4D8               	btfsc	status,2,c
 22069  003264  D66C               	goto	l3610
 22070  003266  0A03               	xorlw	3	; case 34
 22071  003268  B4D8               	btfsc	status,2,c
 22072  00326A  D66C               	goto	l3611
 22073  00326C  0A01               	xorlw	1	; case 35
 22074  00326E  B4D8               	btfsc	status,2,c
 22075  003270  D66C               	goto	l3613
 22076  003272  0A07               	xorlw	7	; case 36
 22077  003274  B4D8               	btfsc	status,2,c
 22078  003276  D66C               	goto	l3614
 22079  003278  0A01               	xorlw	1	; case 37
 22080  00327A  B4D8               	btfsc	status,2,c
 22081  00327C  D66C               	goto	l3615
 22082  00327E  0A03               	xorlw	3	; case 38
 22083  003280  B4D8               	btfsc	status,2,c
 22084  003282  D66C               	goto	l3616
 22085  003284  0A01               	xorlw	1	; case 39
 22086  003286  B4D8               	btfsc	status,2,c
 22087  003288  D66E               	goto	l16177
 22088  00328A  0A0F               	xorlw	15	; case 40
 22089  00328C  B4D8               	btfsc	status,2,c
 22090  00328E  D6A4               	goto	l16179
 22091  003290  0A01               	xorlw	1	; case 41
 22092  003292  B4D8               	btfsc	status,2,c
 22093  003294  D6C8               	goto	l3619
 22094  003296  0A03               	xorlw	3	; case 42
 22095  003298  B4D8               	btfsc	status,2,c
 22096  00329A  D6C8               	goto	l16181
 22097  00329C  0A01               	xorlw	1	; case 43
 22098  00329E  B4D8               	btfsc	status,2,c
 22099  0032A0  D6FE               	goto	l16183
 22100  0032A2  0A07               	xorlw	7	; case 44
 22101  0032A4  B4D8               	btfsc	status,2,c
 22102  0032A6  D722               	goto	l16185
 22103  0032A8  0A01               	xorlw	1	; case 45
 22104  0032AA  B4D8               	btfsc	status,2,c
 22105  0032AC  D758               	goto	l16187
 22106  0032AE  0A03               	xorlw	3	; case 46
 22107  0032B0  B4D8               	btfsc	status,2,c
 22108  0032B2  D77C               	goto	l3624
 22109  0032B4  0A01               	xorlw	1	; case 47
 22110  0032B6  B4D8               	btfsc	status,2,c
 22111  0032B8  D77E               	goto	l3625
 22112  0032BA  0A1F               	xorlw	31	; case 48
 22113  0032BC  B4D8               	btfsc	status,2,c
 22114  0032BE  D716               	goto	l16185
 22115  0032C0  0A01               	xorlw	1	; case 49
 22116  0032C2  B4D8               	btfsc	status,2,c
 22117  0032C4  D74C               	goto	l16187
 22118  0032C6  0A03               	xorlw	3	; case 50
 22119  0032C8  B4D8               	btfsc	status,2,c
 22120  0032CA  D710               	goto	l16185
 22121  0032CC  0A01               	xorlw	1	; case 51
 22122  0032CE  A4D8               	btfss	status,2,c
 22123  0032D0  0012               	return	
 22124  0032D2  D745               	goto	l16187
 22125  0032D4                     __end_of_write_eusartparser:
 22126                           	callstack 0
 22127                           
 22128 ;; *************** function _read_eusartparser *****************
 22129 ;; Defined at:
 22130 ;;		line 5 in file "eusartparser.c"
 22131 ;; Parameters:    Size  Location     Type
 22132 ;;  package         1   23[COMRAM] PTR struct package_t
 22133 ;;		 -> main@package(7), 
 22134 ;; Auto vars:     Size  Location     Type
 22135 ;;		None
 22136 ;; Return value:  Size  Location     Type
 22137 ;;                  1    wreg      void 
 22138 ;; Registers used:
 22139 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 22140 ;; Tracked objects:
 22141 ;;		On entry : 3F/0
 22142 ;;		On exit  : 0/0
 22143 ;;		Unchanged: 0/0
 22144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22145 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22147 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22148 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22149 ;;Total ram usage:        3 bytes
 22150 ;; Hardware stack levels used: 1
 22151 ;; Hardware stack levels required when called: 6
 22152 ;; This function calls:
 22153 ;;		_write_package
 22154 ;; This function is called by:
 22155 ;;		_eusartparser
 22156 ;; This function uses a non-reentrant model
 22157 ;;
 22158                           
 22159                           	psect	text81
 22160  0029A8                     __ptext81:
 22161                           	callstack 0
 22162  0029A8                     _read_eusartparser:
 22163                           	callstack 23
 22164                           
 22165                           ; BSR set to: 0
 22166                           ;eusartparser.c: 6:         switch(package->address){
 22167                           
 22168                           ; BSR set to: 0
 22169                           ;incstack = 0
 22170  0029A8  D203               	goto	l16167
 22171  0029AA                     l16031:
 22172                           
 22173                           ; BSR set to: 0
 22174                           ;eusartparser.c: 11:                 package->data.data8[1]=var_sys_NVM.decelarationClos
      +                          e;
 22175  0029AA  5018               	movf	read_eusartparser@package^0,w,c
 22176  0029AC  6ED9               	movwf	fsr2l,c
 22177  0029AE  6ADA               	clrf	fsr2h,c
 22178  0029B0  0E03               	movlw	3
 22179  0029B2  26D9               	addwf	fsr2l,f,c
 22180  0029B4  C099  FFDF         	movff	_var_sys_NVM+1,indf2	;volatile
 22181                           
 22182                           ;eusartparser.c: 12:                 package->data.data8[0]=var_sys_NVM.decelarationOpen
      +                          ;
 22183  0029B8  5018               	movf	read_eusartparser@package^0,w,c
 22184  0029BA  6ED9               	movwf	fsr2l,c
 22185  0029BC  6ADA               	clrf	fsr2h,c
 22186  0029BE  0E02               	movlw	2
 22187  0029C0  26D9               	addwf	fsr2l,f,c
 22188  0029C2  C098  FFDF         	movff	_var_sys_NVM,indf2	;volatile
 22189  0029C6                     l16033:
 22190                           
 22191                           ; BSR set to: 0
 22192                           ;eusartparser.c: 13:                 write_package(*package);
 22193  0029C6  5018               	movf	read_eusartparser@package^0,w,c
 22194  0029C8  6ED9               	movwf	fsr2l,c
 22195  0029CA  6ADA               	clrf	fsr2h,c
 22196  0029CC  EE00  F011         	lfsr	0,write_package@package
 22197  0029D0  0E06               	movlw	6
 22198  0029D2                     u18101:
 22199  0029D2  CFDB FFEB          	movff	plusw2,plusw0
 22200  0029D6  06E8               	decf	wreg,f,c
 22201  0029D8  E2FC               	bc	u18101
 22202  0029DA  ECB7  F045         	call	_write_package	;wreg free
 22203                           
 22204                           ;eusartparser.c: 14:                 break;
 22205  0029DE  0012               	return	
 22206  0029E0                     l16035:
 22207                           
 22208                           ; BSR set to: 0
 22209                           ;eusartparser.c: 18:                 package->data.data8[1]=var_sys_NVM.motorSensitivity
      +                          ;
 22210  0029E0  5018               	movf	read_eusartparser@package^0,w,c
 22211  0029E2  6ED9               	movwf	fsr2l,c
 22212  0029E4  6ADA               	clrf	fsr2h,c
 22213  0029E6  0E03               	movlw	3
 22214  0029E8  26D9               	addwf	fsr2l,f,c
 22215  0029EA  C09B  FFDF         	movff	_var_sys_NVM+3,indf2	;volatile
 22216                           
 22217                           ;eusartparser.c: 19:                 package->data.data8[0]=var_sys_NVM.motorPower;
 22218  0029EE  5018               	movf	read_eusartparser@package^0,w,c
 22219  0029F0  6ED9               	movwf	fsr2l,c
 22220  0029F2  6ADA               	clrf	fsr2h,c
 22221  0029F4  0E02               	movlw	2
 22222  0029F6  26D9               	addwf	fsr2l,f,c
 22223  0029F8  C09A  FFDF         	movff	_var_sys_NVM+2,indf2	;volatile
 22224  0029FC  D7E4               	goto	l16033
 22225  0029FE                     l16039:
 22226                           
 22227                           ; BSR set to: 0
 22228                           ;eusartparser.c: 25:                 package->data.data8[1]=var_sys_NVM.walkTime;
 22229  0029FE  5018               	movf	read_eusartparser@package^0,w,c
 22230  002A00  6ED9               	movwf	fsr2l,c
 22231  002A02  6ADA               	clrf	fsr2h,c
 22232  002A04  0E03               	movlw	3
 22233  002A06  26D9               	addwf	fsr2l,f,c
 22234  002A08  C09C  FFDF         	movff	_var_sys_NVM+4,indf2	;volatile
 22235  002A0C  D0F9               	goto	L99
 22236  002A0E                     l16043:
 22237                           
 22238                           ; BSR set to: 0
 22239                           ;eusartparser.c: 33:                 package->data.data8[1]=var_sys_NVM.autoTimeWalkClos
      +                          e;
 22240  002A0E  5018               	movf	read_eusartparser@package^0,w,c
 22241  002A10  6ED9               	movwf	fsr2l,c
 22242  002A12  6ADA               	clrf	fsr2h,c
 22243  002A14  0E03               	movlw	3
 22244  002A16  26D9               	addwf	fsr2l,f,c
 22245  002A18  C09E  FFDF         	movff	_var_sys_NVM+6,indf2	;volatile
 22246                           
 22247                           ;eusartparser.c: 34:                 package->data.data8[0]=var_sys_NVM.autoTimeFullClos
      +                          e;
 22248  002A1C  5018               	movf	read_eusartparser@package^0,w,c
 22249  002A1E  6ED9               	movwf	fsr2l,c
 22250  002A20  6ADA               	clrf	fsr2h,c
 22251  002A22  0E02               	movlw	2
 22252  002A24  26D9               	addwf	fsr2l,f,c
 22253  002A26  C09D  FFDF         	movff	_var_sys_NVM+5,indf2	;volatile
 22254  002A2A  D7CD               	goto	l16033
 22255  002A2C                     l16047:
 22256                           
 22257                           ; BSR set to: 0
 22258                           ;eusartparser.c: 41:                 package->data.data8[1]=var_sys_NVM.photoCellInOpen;
 22259  002A2C  5018               	movf	read_eusartparser@package^0,w,c
 22260  002A2E  6ED9               	movwf	fsr2l,c
 22261  002A30  6ADA               	clrf	fsr2h,c
 22262  002A32  0E03               	movlw	3
 22263  002A34  26D9               	addwf	fsr2l,f,c
 22264  002A36  C0A0  FFDF         	movff	_var_sys_NVM+8,indf2	;volatile
 22265                           
 22266                           ;eusartparser.c: 42:                 package->data.data8[0]=var_sys_NVM.photoCellIsON;
 22267  002A3A  5018               	movf	read_eusartparser@package^0,w,c
 22268  002A3C  6ED9               	movwf	fsr2l,c
 22269  002A3E  6ADA               	clrf	fsr2h,c
 22270  002A40  0E02               	movlw	2
 22271  002A42  26D9               	addwf	fsr2l,f,c
 22272  002A44  C09F  FFDF         	movff	_var_sys_NVM+7,indf2	;volatile
 22273  002A48  D7BE               	goto	l16033
 22274  002A4A                     l16051:
 22275                           
 22276                           ; BSR set to: 0
 22277                           ;eusartparser.c: 48:                 package->data.data8[1]=var_sys_NVM.securityBandType
      +                          ;
 22278  002A4A  5018               	movf	read_eusartparser@package^0,w,c
 22279  002A4C  6ED9               	movwf	fsr2l,c
 22280  002A4E  6ADA               	clrf	fsr2h,c
 22281  002A50  0E03               	movlw	3
 22282  002A52  26D9               	addwf	fsr2l,f,c
 22283  002A54  C0A2  FFDF         	movff	_var_sys_NVM+10,indf2	;volatile
 22284                           
 22285                           ;eusartparser.c: 49:                 package->data.data8[0]=var_sys_NVM.securityBandIsON
      +                          ;
 22286  002A58  5018               	movf	read_eusartparser@package^0,w,c
 22287  002A5A  6ED9               	movwf	fsr2l,c
 22288  002A5C  6ADA               	clrf	fsr2h,c
 22289  002A5E  0E02               	movlw	2
 22290  002A60  26D9               	addwf	fsr2l,f,c
 22291  002A62  C0A1  FFDF         	movff	_var_sys_NVM+9,indf2	;volatile
 22292  002A66  D7AF               	goto	l16033
 22293  002A68                     l16055:
 22294                           
 22295                           ; BSR set to: 0
 22296                           ;eusartparser.c: 55:                 package->data.data8[1]=var_sys_NVM.securityBandInOp
      +                          en;
 22297  002A68  5018               	movf	read_eusartparser@package^0,w,c
 22298  002A6A  6ED9               	movwf	fsr2l,c
 22299  002A6C  6ADA               	clrf	fsr2h,c
 22300  002A6E  0E03               	movlw	3
 22301  002A70  26D9               	addwf	fsr2l,f,c
 22302  002A72  C0A3  FFDF         	movff	_var_sys_NVM+11,indf2	;volatile
 22303  002A76  D0C4               	goto	L99
 22304  002A78                     l16059:
 22305                           
 22306                           ; BSR set to: 0
 22307                           ;eusartparser.c: 62:                 package->data.data8[1]=var_sys_NVM.operationMode;
 22308  002A78  5018               	movf	read_eusartparser@package^0,w,c
 22309  002A7A  6ED9               	movwf	fsr2l,c
 22310  002A7C  6ADA               	clrf	fsr2h,c
 22311  002A7E  0E03               	movlw	3
 22312  002A80  26D9               	addwf	fsr2l,f,c
 22313  002A82  C0A4  FFDF         	movff	_var_sys_NVM+12,indf2	;volatile
 22314  002A86  D0BC               	goto	L99
 22315  002A88                     l16063:
 22316                           
 22317                           ; BSR set to: 0
 22318                           ;eusartparser.c: 69:                 package->data.data8[1]=var_sys_NVM.flashLightMode;
 22319  002A88  5018               	movf	read_eusartparser@package^0,w,c
 22320  002A8A  6ED9               	movwf	fsr2l,c
 22321  002A8C  6ADA               	clrf	fsr2h,c
 22322  002A8E  0E03               	movlw	3
 22323  002A90  26D9               	addwf	fsr2l,f,c
 22324  002A92  C0A5  FFDF         	movff	_var_sys_NVM+13,indf2	;volatile
 22325  002A96  D0B4               	goto	L99
 22326  002A98                     l16067:
 22327                           
 22328                           ; BSR set to: 0
 22329                           ;eusartparser.c: 76:                 package->data.data8[1]=var_sys_NVM.programmingDista
      +                          nce;
 22330  002A98  5018               	movf	read_eusartparser@package^0,w,c
 22331  002A9A  6ED9               	movwf	fsr2l,c
 22332  002A9C  6ADA               	clrf	fsr2h,c
 22333  002A9E  0E03               	movlw	3
 22334  002AA0  26D9               	addwf	fsr2l,f,c
 22335  002AA2  C0A6  FFDF         	movff	_var_sys_NVM+14,indf2	;volatile
 22336  002AA6  D0AC               	goto	L99
 22337  002AA8                     l16071:
 22338                           
 22339                           ; BSR set to: 0
 22340                           ;eusartparser.c: 83:                 package->data.data8[1]=var_sys_NVM.decelarationSens
      +                          ivity;
 22341  002AA8  5018               	movf	read_eusartparser@package^0,w,c
 22342  002AAA  6ED9               	movwf	fsr2l,c
 22343  002AAC  6ADA               	clrf	fsr2h,c
 22344  002AAE  0E03               	movlw	3
 22345  002AB0  26D9               	addwf	fsr2l,f,c
 22346  002AB2  C0A7  FFDF         	movff	_var_sys_NVM+15,indf2	;volatile
 22347  002AB6  D0A4               	goto	L99
 22348  002AB8                     l16075:
 22349                           
 22350                           ; BSR set to: 0
 22351                           ;eusartparser.c: 91:                 package->data.data8[1]=var_sys_NVM.homemPresente;
 22352  002AB8  5018               	movf	read_eusartparser@package^0,w,c
 22353  002ABA  6ED9               	movwf	fsr2l,c
 22354  002ABC  6ADA               	clrf	fsr2h,c
 22355  002ABE  0E03               	movlw	3
 22356  002AC0  26D9               	addwf	fsr2l,f,c
 22357  002AC2  C0A8  FFDF         	movff	_var_sys_NVM+16,indf2	;volatile
 22358  002AC6  D09C               	goto	L99
 22359  002AC8                     l16079:
 22360                           
 22361                           ; BSR set to: 0
 22362                           ;eusartparser.c: 99:                 package->data.data8[1]=var_sys_NVM.logicDigital;
 22363  002AC8  5018               	movf	read_eusartparser@package^0,w,c
 22364  002ACA  6ED9               	movwf	fsr2l,c
 22365  002ACC  6ADA               	clrf	fsr2h,c
 22366  002ACE  0E03               	movlw	3
 22367  002AD0  26D9               	addwf	fsr2l,f,c
 22368  002AD2  C0A9  FFDF         	movff	_var_sys_NVM+17,indf2	;volatile
 22369  002AD6  D094               	goto	L99
 22370  002AD8                     l16083:
 22371                           
 22372                           ; BSR set to: 0
 22373                           ;eusartparser.c: 106:                 package->data.data8[1]=var_sys_NVM.softstop;
 22374  002AD8  5018               	movf	read_eusartparser@package^0,w,c
 22375  002ADA  6ED9               	movwf	fsr2l,c
 22376  002ADC  6ADA               	clrf	fsr2h,c
 22377  002ADE  0E03               	movlw	3
 22378  002AE0  26D9               	addwf	fsr2l,f,c
 22379  002AE2  C0AB  FFDF         	movff	_var_sys_NVM+19,indf2	;volatile
 22380                           
 22381                           ;eusartparser.c: 107:                 package->data.data8[0]=var_sys_NVM.softStart;
 22382  002AE6  5018               	movf	read_eusartparser@package^0,w,c
 22383  002AE8  6ED9               	movwf	fsr2l,c
 22384  002AEA  6ADA               	clrf	fsr2h,c
 22385  002AEC  0E02               	movlw	2
 22386  002AEE  26D9               	addwf	fsr2l,f,c
 22387  002AF0  C0AA  FFDF         	movff	_var_sys_NVM+18,indf2	;volatile
 22388  002AF4  D768               	goto	l16033
 22389  002AF6                     l16087:
 22390                           
 22391                           ; BSR set to: 0
 22392                           ;eusartparser.c: 114:                 package->data.data8[1]=var_sys_NVM.ligthTime;
 22393  002AF6  5018               	movf	read_eusartparser@package^0,w,c
 22394  002AF8  6ED9               	movwf	fsr2l,c
 22395  002AFA  6ADA               	clrf	fsr2h,c
 22396  002AFC  0E03               	movlw	3
 22397  002AFE  26D9               	addwf	fsr2l,f,c
 22398  002B00  C0AC  FFDF         	movff	_var_sys_NVM+20,indf2	;volatile
 22399  002B04  D07D               	goto	L99
 22400  002B06                     l16091:
 22401                           
 22402                           ; BSR set to: 0
 22403                           ;eusartparser.c: 122:                 package->data.data8[1]=var_sys_NVM.folow_me;
 22404  002B06  5018               	movf	read_eusartparser@package^0,w,c
 22405  002B08  6ED9               	movwf	fsr2l,c
 22406  002B0A  6ADA               	clrf	fsr2h,c
 22407  002B0C  0E03               	movlw	3
 22408  002B0E  26D9               	addwf	fsr2l,f,c
 22409  002B10  C0AD  FFDF         	movff	_var_sys_NVM+21,indf2	;volatile
 22410  002B14  D075               	goto	L99
 22411  002B16                     l16095:
 22412                           
 22413                           ; BSR set to: 0
 22414                           ;eusartparser.c: 129:                 package->data.data8[1]=var_sys_NVM.Stopboton;
 22415  002B16  5018               	movf	read_eusartparser@package^0,w,c
 22416  002B18  6ED9               	movwf	fsr2l,c
 22417  002B1A  6ADA               	clrf	fsr2h,c
 22418  002B1C  0E03               	movlw	3
 22419  002B1E  26D9               	addwf	fsr2l,f,c
 22420  002B20  C0AE  FFDF         	movff	_var_sys_NVM+22,indf2	;volatile
 22421  002B24  D06D               	goto	L99
 22422  002B26                     l16099:
 22423                           
 22424                           ; BSR set to: 0
 22425                           ;eusartparser.c: 136:                 package->data.data8[1]=var_sys_NVM.electricBrake;
 22426  002B26  5018               	movf	read_eusartparser@package^0,w,c
 22427  002B28  6ED9               	movwf	fsr2l,c
 22428  002B2A  6ADA               	clrf	fsr2h,c
 22429  002B2C  0E03               	movlw	3
 22430  002B2E  26D9               	addwf	fsr2l,f,c
 22431  002B30  C0AF  FFDF         	movff	_var_sys_NVM+23,indf2	;volatile
 22432  002B34  D065               	goto	L99
 22433  002B36                     l16103:
 22434                           
 22435                           ; BSR set to: 0
 22436                           ;eusartparser.c: 143:                 package->data.data8[1]=var_sys_NVM.velocityDecelar
      +                          ation;
 22437  002B36  5018               	movf	read_eusartparser@package^0,w,c
 22438  002B38  6ED9               	movwf	fsr2l,c
 22439  002B3A  6ADA               	clrf	fsr2h,c
 22440  002B3C  0E03               	movlw	3
 22441  002B3E  26D9               	addwf	fsr2l,f,c
 22442  002B40  C0B0  FFDF         	movff	_var_sys_NVM+24,indf2	;volatile
 22443  002B44  D05D               	goto	L99
 22444  002B46                     l16107:
 22445                           
 22446                           ; BSR set to: 0
 22447                           ;eusartparser.c: 151:                 package->data.data8[1]=var_sys_NVM.flashRGBMode;
 22448  002B46  5018               	movf	read_eusartparser@package^0,w,c
 22449  002B48  6ED9               	movwf	fsr2l,c
 22450  002B4A  6ADA               	clrf	fsr2h,c
 22451  002B4C  0E03               	movlw	3
 22452  002B4E  26D9               	addwf	fsr2l,f,c
 22453  002B50  C0B1  FFDF         	movff	_var_sys_NVM+25,indf2	;volatile
 22454  002B54  D055               	goto	L99
 22455  002B56                     l16111:
 22456                           
 22457                           ; BSR set to: 0
 22458                           ;eusartparser.c: 158:                 package->data.data8[1]=var_sys_NVM.Direction_motor
      +                          ;
 22459  002B56  5018               	movf	read_eusartparser@package^0,w,c
 22460  002B58  6ED9               	movwf	fsr2l,c
 22461  002B5A  6ADA               	clrf	fsr2h,c
 22462  002B5C  0E03               	movlw	3
 22463  002B5E  26D9               	addwf	fsr2l,f,c
 22464  002B60  C0B3  FFDF         	movff	_var_sys_NVM+27,indf2	;volatile
 22465  002B64  D04D               	goto	L99
 22466  002B66                     l16115:
 22467                           
 22468                           ; BSR set to: 0
 22469                           ;eusartparser.c: 165:                 package->data.data8[1]=var_sys_NVM.TypeofMotor;
 22470  002B66  5018               	movf	read_eusartparser@package^0,w,c
 22471  002B68  6ED9               	movwf	fsr2l,c
 22472  002B6A  6ADA               	clrf	fsr2h,c
 22473  002B6C  0E03               	movlw	3
 22474  002B6E  26D9               	addwf	fsr2l,f,c
 22475  002B70  C0B4  FFDF         	movff	_var_sys_NVM+28,indf2	;volatile
 22476  002B74  D045               	goto	L99
 22477  002B76                     l16119:
 22478                           
 22479                           ; BSR set to: 0
 22480                           ;eusartparser.c: 172:                 package->data.data8[1]=var_sys_NVM.positionRemotes
      +                          Walk;
 22481  002B76  5018               	movf	read_eusartparser@package^0,w,c
 22482  002B78  6ED9               	movwf	fsr2l,c
 22483  002B7A  6ADA               	clrf	fsr2h,c
 22484  002B7C  0E03               	movlw	3
 22485  002B7E  26D9               	addwf	fsr2l,f,c
 22486  002B80  C0B9  FFDF         	movff	_var_sys_NVM+33,indf2	;volatile
 22487                           
 22488                           ;eusartparser.c: 173:                 package->data.data8[0]=var_sys_NVM.positionRemotes
      +                          Full;
 22489  002B84  5018               	movf	read_eusartparser@package^0,w,c
 22490  002B86  6ED9               	movwf	fsr2l,c
 22491  002B88  6ADA               	clrf	fsr2h,c
 22492  002B8A  0E02               	movlw	2
 22493  002B8C  26D9               	addwf	fsr2l,f,c
 22494  002B8E  C0B8  FFDF         	movff	_var_sys_NVM+32,indf2	;volatile
 22495  002B92  D719               	goto	l16033
 22496  002B94                     l16123:
 22497                           
 22498                           ; BSR set to: 0
 22499                           ;eusartparser.c: 179:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.c
      +                          ounterMoves))+1);
 22500  002B94  EE20  F0BC         	lfsr	2,_var_sys_NVM+36
 22501  002B98  5018               	movf	read_eusartparser@package^0,w,c
 22502  002B9A  6EE1               	movwf	fsr1l,c
 22503  002B9C  6AE2               	clrf	fsr1h,c
 22504  002B9E  0E02               	movlw	2
 22505  002BA0  26E1               	addwf	fsr1l,f,c
 22506  002BA2  CFDE FFE6          	movff	postinc2,postinc1
 22507  002BA6  CFDD FFE5          	movff	postdec2,postdec1
 22508                           
 22509                           ; BSR set to: 0
 22510                           ;eusartparser.c: 180:                 write_package(*package);
 22511  002BAA  5018               	movf	read_eusartparser@package^0,w,c
 22512  002BAC  6ED9               	movwf	fsr2l,c
 22513  002BAE  6ADA               	clrf	fsr2h,c
 22514  002BB0  EE00  F011         	lfsr	0,write_package@package
 22515  002BB4  0E06               	movlw	6
 22516  002BB6                     u18111:
 22517  002BB6  CFDB FFEB          	movff	plusw2,plusw0
 22518  002BBA  06E8               	decf	wreg,f,c
 22519  002BBC  E2FC               	bc	u18111
 22520  002BBE  ECB7  F045         	call	_write_package	;wreg free
 22521                           
 22522                           ;eusartparser.c: 181:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.c
      +                          ounterMoves))+0);
 22523  002BC2  EE20  F0BA         	lfsr	2,_var_sys_NVM+34
 22524  002BC6  5018               	movf	read_eusartparser@package^0,w,c
 22525  002BC8  6EE1               	movwf	fsr1l,c
 22526  002BCA  6AE2               	clrf	fsr1h,c
 22527  002BCC  0E02               	movlw	2
 22528  002BCE  26E1               	addwf	fsr1l,f,c
 22529  002BD0  CFDE FFE6          	movff	postinc2,postinc1
 22530  002BD4  CFDD FFE5          	movff	postdec2,postdec1
 22531                           
 22532                           ;eusartparser.c: 182:                 write_package(*package);
 22533  002BD8  5018               	movf	read_eusartparser@package^0,w,c
 22534  002BDA  6ED9               	movwf	fsr2l,c
 22535  002BDC  6ADA               	clrf	fsr2h,c
 22536  002BDE  EE00  F011         	lfsr	0,write_package@package
 22537  002BE2  0E06               	movlw	6
 22538  002BE4                     u18121:
 22539  002BE4  CFDB FFEB          	movff	plusw2,plusw0
 22540  002BE8  06E8               	decf	wreg,f,c
 22541  002BEA  E2FC               	bc	u18121
 22542  002BEC  ECB7  F045         	call	_write_package	;wreg free
 22543                           
 22544                           ;eusartparser.c: 183:                 break;
 22545  002BF0  0012               	return	
 22546  002BF2                     l16129:
 22547                           
 22548                           ; BSR set to: 0
 22549                           ;eusartparser.c: 187:                 package->data.data8[1]=var_sys_NVM.OnlyRollingCode
      +                          ;
 22550  002BF2  5018               	movf	read_eusartparser@package^0,w,c
 22551  002BF4  6ED9               	movwf	fsr2l,c
 22552  002BF6  6ADA               	clrf	fsr2h,c
 22553  002BF8  0E03               	movlw	3
 22554  002BFA  26D9               	addwf	fsr2l,f,c
 22555  002BFC  C0BE  FFDF         	movff	_var_sys_NVM+38,indf2	;volatile
 22556  002C00                     L99:
 22557                           
 22558                           ;eusartparser.c: 188:                 package->data.data8[0]=0x00;
 22559  002C00  5018               	movf	read_eusartparser@package^0,w,c
 22560  002C02  6ED9               	movwf	fsr2l,c
 22561  002C04  6ADA               	clrf	fsr2h,c
 22562  002C06  0E02               	movlw	2
 22563  002C08  26D9               	addwf	fsr2l,f,c
 22564  002C0A  0E00               	movlw	0
 22565  002C0C  6EDF               	movwf	indf2,c
 22566  002C0E  D6DB               	goto	l16033
 22567  002C10                     l16133:
 22568                           
 22569                           ; BSR set to: 0
 22570                           ;eusartparser.c: 194:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.l
      +                          earningCurrentDecelarationClose))+1);
 22571  002C10  EE20  F0C2         	lfsr	2,_var_sys_NVM+42
 22572  002C14  5018               	movf	read_eusartparser@package^0,w,c
 22573  002C16  6EE1               	movwf	fsr1l,c
 22574  002C18  6AE2               	clrf	fsr1h,c
 22575  002C1A  0E02               	movlw	2
 22576  002C1C  26E1               	addwf	fsr1l,f,c
 22577  002C1E  CFDE FFE6          	movff	postinc2,postinc1
 22578  002C22  CFDD FFE5          	movff	postdec2,postdec1
 22579                           
 22580                           ; BSR set to: 0
 22581                           ;eusartparser.c: 195:                 write_package(*package);
 22582  002C26  5018               	movf	read_eusartparser@package^0,w,c
 22583  002C28  6ED9               	movwf	fsr2l,c
 22584  002C2A  6ADA               	clrf	fsr2h,c
 22585  002C2C  EE00  F011         	lfsr	0,write_package@package
 22586  002C30  0E06               	movlw	6
 22587  002C32                     u18131:
 22588  002C32  CFDB FFEB          	movff	plusw2,plusw0
 22589  002C36  06E8               	decf	wreg,f,c
 22590  002C38  E2FC               	bc	u18131
 22591  002C3A  ECB7  F045         	call	_write_package	;wreg free
 22592                           
 22593                           ;eusartparser.c: 196:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.l
      +                          earningCurrentDecelarationClose))+0);
 22594  002C3E  EE20  F0C0         	lfsr	2,_var_sys_NVM+40
 22595  002C42  5018               	movf	read_eusartparser@package^0,w,c
 22596  002C44  6EE1               	movwf	fsr1l,c
 22597  002C46  6AE2               	clrf	fsr1h,c
 22598  002C48  0E02               	movlw	2
 22599  002C4A  26E1               	addwf	fsr1l,f,c
 22600  002C4C  CFDE FFE6          	movff	postinc2,postinc1
 22601  002C50  CFDD FFE5          	movff	postdec2,postdec1
 22602                           
 22603                           ;eusartparser.c: 197:                 write_package(*package);
 22604  002C54  5018               	movf	read_eusartparser@package^0,w,c
 22605  002C56  6ED9               	movwf	fsr2l,c
 22606  002C58  6ADA               	clrf	fsr2h,c
 22607  002C5A  EE00  F011         	lfsr	0,write_package@package
 22608  002C5E  0E06               	movlw	6
 22609  002C60                     u18141:
 22610  002C60  CFDB FFEB          	movff	plusw2,plusw0
 22611  002C64  06E8               	decf	wreg,f,c
 22612  002C66  E2FC               	bc	u18141
 22613  002C68  ECB7  F045         	call	_write_package	;wreg free
 22614                           
 22615                           ;eusartparser.c: 198:                 break;
 22616  002C6C  0012               	return	
 22617  002C6E                     l16139:
 22618                           
 22619                           ; BSR set to: 0
 22620                           ;eusartparser.c: 202:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.l
      +                          earningCurrentDecelarationOpen))+1);
 22621  002C6E  EE20  F0C6         	lfsr	2,_var_sys_NVM+46
 22622  002C72  5018               	movf	read_eusartparser@package^0,w,c
 22623  002C74  6EE1               	movwf	fsr1l,c
 22624  002C76  6AE2               	clrf	fsr1h,c
 22625  002C78  0E02               	movlw	2
 22626  002C7A  26E1               	addwf	fsr1l,f,c
 22627  002C7C  CFDE FFE6          	movff	postinc2,postinc1
 22628  002C80  CFDD FFE5          	movff	postdec2,postdec1
 22629                           
 22630                           ; BSR set to: 0
 22631                           ;eusartparser.c: 203:                 write_package(*package);
 22632  002C84  5018               	movf	read_eusartparser@package^0,w,c
 22633  002C86  6ED9               	movwf	fsr2l,c
 22634  002C88  6ADA               	clrf	fsr2h,c
 22635  002C8A  EE00  F011         	lfsr	0,write_package@package
 22636  002C8E  0E06               	movlw	6
 22637  002C90                     u18151:
 22638  002C90  CFDB FFEB          	movff	plusw2,plusw0
 22639  002C94  06E8               	decf	wreg,f,c
 22640  002C96  E2FC               	bc	u18151
 22641  002C98  ECB7  F045         	call	_write_package	;wreg free
 22642                           
 22643                           ;eusartparser.c: 204:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.l
      +                          earningCurrentDecelarationOpen))+0);
 22644  002C9C  EE20  F0C4         	lfsr	2,_var_sys_NVM+44
 22645  002CA0  5018               	movf	read_eusartparser@package^0,w,c
 22646  002CA2  6EE1               	movwf	fsr1l,c
 22647  002CA4  6AE2               	clrf	fsr1h,c
 22648  002CA6  0E02               	movlw	2
 22649  002CA8  26E1               	addwf	fsr1l,f,c
 22650  002CAA  CFDE FFE6          	movff	postinc2,postinc1
 22651  002CAE  CFDD FFE5          	movff	postdec2,postdec1
 22652                           
 22653                           ;eusartparser.c: 205:                 write_package(*package);
 22654  002CB2  5018               	movf	read_eusartparser@package^0,w,c
 22655  002CB4  6ED9               	movwf	fsr2l,c
 22656  002CB6  6ADA               	clrf	fsr2h,c
 22657  002CB8  EE00  F011         	lfsr	0,write_package@package
 22658  002CBC  0E06               	movlw	6
 22659  002CBE                     u18161:
 22660  002CBE  CFDB FFEB          	movff	plusw2,plusw0
 22661  002CC2  06E8               	decf	wreg,f,c
 22662  002CC4  E2FC               	bc	u18161
 22663  002CC6  ECB7  F045         	call	_write_package	;wreg free
 22664                           
 22665                           ;eusartparser.c: 206:                 break;
 22666  002CCA  0012               	return	
 22667  002CCC                     l16145:
 22668                           
 22669                           ; BSR set to: 0
 22670                           ;eusartparser.c: 210:                 package->data.data16=var_sys_NVM.learningCurrentNo
      +                          rmalClose;
 22671  002CCC  5018               	movf	read_eusartparser@package^0,w,c
 22672  002CCE  6ED9               	movwf	fsr2l,c
 22673  002CD0  6ADA               	clrf	fsr2h,c
 22674  002CD2  0E02               	movlw	2
 22675  002CD4  26D9               	addwf	fsr2l,f,c
 22676  002CD6  C0C8  FFDE         	movff	_var_sys_NVM+48,postinc2	;volatile
 22677  002CDA  C0C9  FFDD         	movff	_var_sys_NVM+49,postdec2	;volatile
 22678  002CDE  D673               	goto	l16033
 22679  002CE0                     l16149:
 22680                           
 22681                           ; BSR set to: 0
 22682                           ;eusartparser.c: 216:                 package->data.data16=var_sys_NVM.learningCurrentNo
      +                          rmalOpen;
 22683  002CE0  5018               	movf	read_eusartparser@package^0,w,c
 22684  002CE2  6ED9               	movwf	fsr2l,c
 22685  002CE4  6ADA               	clrf	fsr2h,c
 22686  002CE6  0E02               	movlw	2
 22687  002CE8  26D9               	addwf	fsr2l,f,c
 22688  002CEA  C0CA  FFDE         	movff	_var_sys_NVM+50,postinc2	;volatile
 22689  002CEE  C0CB  FFDD         	movff	_var_sys_NVM+51,postdec2	;volatile
 22690  002CF2  D669               	goto	l16033
 22691  002CF4                     l16153:
 22692                           
 22693                           ; BSR set to: 0
 22694                           ;eusartparser.c: 222:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.l
      +                          earningTimeToOpen))+1);
 22695  002CF4  EE20  F0CE         	lfsr	2,_var_sys_NVM+54
 22696  002CF8  5018               	movf	read_eusartparser@package^0,w,c
 22697  002CFA  6EE1               	movwf	fsr1l,c
 22698  002CFC  6AE2               	clrf	fsr1h,c
 22699  002CFE  0E02               	movlw	2
 22700  002D00  26E1               	addwf	fsr1l,f,c
 22701  002D02  CFDE FFE6          	movff	postinc2,postinc1
 22702  002D06  CFDD FFE5          	movff	postdec2,postdec1
 22703                           
 22704                           ; BSR set to: 0
 22705                           ;eusartparser.c: 223:                 write_package(*package);
 22706  002D0A  5018               	movf	read_eusartparser@package^0,w,c
 22707  002D0C  6ED9               	movwf	fsr2l,c
 22708  002D0E  6ADA               	clrf	fsr2h,c
 22709  002D10  EE00  F011         	lfsr	0,write_package@package
 22710  002D14  0E06               	movlw	6
 22711  002D16                     u18171:
 22712  002D16  CFDB FFEB          	movff	plusw2,plusw0
 22713  002D1A  06E8               	decf	wreg,f,c
 22714  002D1C  E2FC               	bc	u18171
 22715  002D1E  ECB7  F045         	call	_write_package	;wreg free
 22716                           
 22717                           ;eusartparser.c: 224:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.l
      +                          earningTimeToOpen))+0);
 22718  002D22  EE20  F0CC         	lfsr	2,_var_sys_NVM+52
 22719  002D26  5018               	movf	read_eusartparser@package^0,w,c
 22720  002D28  6EE1               	movwf	fsr1l,c
 22721  002D2A  6AE2               	clrf	fsr1h,c
 22722  002D2C  0E02               	movlw	2
 22723  002D2E  26E1               	addwf	fsr1l,f,c
 22724  002D30  CFDE FFE6          	movff	postinc2,postinc1
 22725  002D34  CFDD FFE5          	movff	postdec2,postdec1
 22726                           
 22727                           ;eusartparser.c: 225:                 write_package(*package);
 22728  002D38  5018               	movf	read_eusartparser@package^0,w,c
 22729  002D3A  6ED9               	movwf	fsr2l,c
 22730  002D3C  6ADA               	clrf	fsr2h,c
 22731  002D3E  EE00  F011         	lfsr	0,write_package@package
 22732  002D42  0E06               	movlw	6
 22733  002D44                     u18181:
 22734  002D44  CFDB FFEB          	movff	plusw2,plusw0
 22735  002D48  06E8               	decf	wreg,f,c
 22736  002D4A  E2FC               	bc	u18181
 22737  002D4C  ECB7  F045         	call	_write_package	;wreg free
 22738                           
 22739                           ;eusartparser.c: 226:                 break;
 22740  002D50  0012               	return	
 22741  002D52                     l16159:
 22742                           
 22743                           ; BSR set to: 0
 22744                           ;eusartparser.c: 230:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.l
      +                          earningTimeToClose))+1);
 22745  002D52  EE20  F0D2         	lfsr	2,_var_sys_NVM+58
 22746  002D56  5018               	movf	read_eusartparser@package^0,w,c
 22747  002D58  6EE1               	movwf	fsr1l,c
 22748  002D5A  6AE2               	clrf	fsr1h,c
 22749  002D5C  0E02               	movlw	2
 22750  002D5E  26E1               	addwf	fsr1l,f,c
 22751  002D60  CFDE FFE6          	movff	postinc2,postinc1
 22752  002D64  CFDD FFE5          	movff	postdec2,postdec1
 22753                           
 22754                           ; BSR set to: 0
 22755                           ;eusartparser.c: 231:                 write_package(*package);
 22756  002D68  5018               	movf	read_eusartparser@package^0,w,c
 22757  002D6A  6ED9               	movwf	fsr2l,c
 22758  002D6C  6ADA               	clrf	fsr2h,c
 22759  002D6E  EE00  F011         	lfsr	0,write_package@package
 22760  002D72  0E06               	movlw	6
 22761  002D74                     u18191:
 22762  002D74  CFDB FFEB          	movff	plusw2,plusw0
 22763  002D78  06E8               	decf	wreg,f,c
 22764  002D7A  E2FC               	bc	u18191
 22765  002D7C  ECB7  F045         	call	_write_package	;wreg free
 22766                           
 22767                           ;eusartparser.c: 232:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.l
      +                          earningTimeToClose))+0);
 22768  002D80  EE20  F0D0         	lfsr	2,_var_sys_NVM+56
 22769  002D84  5018               	movf	read_eusartparser@package^0,w,c
 22770  002D86  6EE1               	movwf	fsr1l,c
 22771  002D88  6AE2               	clrf	fsr1h,c
 22772  002D8A  0E02               	movlw	2
 22773  002D8C  26E1               	addwf	fsr1l,f,c
 22774  002D8E  CFDE FFE6          	movff	postinc2,postinc1
 22775  002D92  CFDD FFE5          	movff	postdec2,postdec1
 22776                           
 22777                           ;eusartparser.c: 233:                 write_package(*package);
 22778  002D96  5018               	movf	read_eusartparser@package^0,w,c
 22779  002D98  6ED9               	movwf	fsr2l,c
 22780  002D9A  6ADA               	clrf	fsr2h,c
 22781  002D9C  EE00  F011         	lfsr	0,write_package@package
 22782  002DA0  0E06               	movlw	6
 22783  002DA2                     u18201:
 22784  002DA2  CFDB FFEB          	movff	plusw2,plusw0
 22785  002DA6  06E8               	decf	wreg,f,c
 22786  002DA8  E2FC               	bc	u18201
 22787  002DAA  ECB7  F045         	call	_write_package	;wreg free
 22788                           
 22789                           ;eusartparser.c: 234:                 break;
 22790  002DAE  0012               	return	
 22791  002DB0                     l16167:
 22792                           
 22793                           ; BSR set to: 0
 22794  002DB0  5018               	movf	read_eusartparser@package^0,w,c
 22795  002DB2  6ED9               	movwf	fsr2l,c
 22796  002DB4  6ADA               	clrf	fsr2h,c
 22797  002DB6  0E01               	movlw	1
 22798  002DB8  26D9               	addwf	fsr2l,f,c
 22799  002DBA  50DF               	movf	indf2,w,c
 22800  002DBC  6E19               	movwf	??_read_eusartparser^0,c
 22801  002DBE  6A1A               	clrf	(??_read_eusartparser+1)^0,c
 22802                           
 22803                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 22804                           ; Switch size 1, requested type "simple"
 22805                           ; Number of cases is 1, Range of values is 0 to 0
 22806                           ; switch strategies available:
 22807                           ; Name         Instructions Cycles
 22808                           ; simple_byte            4     3 (average)
 22809                           ;	Chosen strategy is simple_byte
 22810  002DC0  501A               	movf	(??_read_eusartparser+1)^0,w,c
 22811  002DC2  0A00               	xorlw	0	; case 0
 22812  002DC4  A4D8               	btfss	status,2,c
 22813  002DC6  0012               	return	
 22814                           
 22815                           ; BSR set to: 0
 22816                           ; Switch size 1, requested type "simple"
 22817                           ; Number of cases is 38, Range of values is 0 to 50
 22818                           ; switch strategies available:
 22819                           ; Name         Instructions Cycles
 22820                           ; simple_byte          115    58 (average)
 22821                           ;	Chosen strategy is simple_byte
 22822  002DC8  5019               	movf	??_read_eusartparser^0,w,c
 22823  002DCA  0A00               	xorlw	0	; case 0
 22824  002DCC  B4D8               	btfsc	status,2,c
 22825  002DCE  D5ED               	goto	l16031
 22826  002DD0  0A02               	xorlw	2	; case 2
 22827  002DD2  B4D8               	btfsc	status,2,c
 22828  002DD4  D61C               	goto	l16043
 22829  002DD6  0A01               	xorlw	1	; case 3
 22830  002DD8  B4D8               	btfsc	status,2,c
 22831  002DDA  D68D               	goto	l16087
 22832  002DDC  0A06               	xorlw	6	; case 5
 22833  002DDE  B4D8               	btfsc	status,2,c
 22834  002DE0  D625               	goto	l16047
 22835  002DE2  0A02               	xorlw	2	; case 7
 22836  002DE4  B4D8               	btfsc	status,2,c
 22837  002DE6  D670               	goto	l16079
 22838  002DE8  0A0F               	xorlw	15	; case 8
 22839  002DEA  B4D8               	btfsc	status,2,c
 22840  002DEC  D6AC               	goto	l16107
 22841  002DEE  0A02               	xorlw	2	; case 10
 22842  002DF0  B4D8               	btfsc	status,2,c
 22843  002DF2  D689               	goto	l16091
 22844  002DF4  0A1A               	xorlw	26	; case 16
 22845  002DF6  B4D8               	btfsc	status,2,c
 22846  002DF8  D5D8               	goto	l16031
 22847  002DFA  0A01               	xorlw	1	; case 17
 22848  002DFC  B4D8               	btfsc	status,2,c
 22849  002DFE  D5F0               	goto	l16035
 22850  002E00  0A03               	xorlw	3	; case 18
 22851  002E02  B4D8               	btfsc	status,2,c
 22852  002E04  D5FC               	goto	l16039
 22853  002E06  0A01               	xorlw	1	; case 19
 22854  002E08  B4D8               	btfsc	status,2,c
 22855  002E0A  D601               	goto	l16043
 22856  002E0C  0A07               	xorlw	7	; case 20
 22857  002E0E  B4D8               	btfsc	status,2,c
 22858  002E10  D60D               	goto	l16047
 22859  002E12  0A01               	xorlw	1	; case 21
 22860  002E14  B4D8               	btfsc	status,2,c
 22861  002E16  D619               	goto	l16051
 22862  002E18  0A03               	xorlw	3	; case 22
 22863  002E1A  B4D8               	btfsc	status,2,c
 22864  002E1C  D625               	goto	l16055
 22865  002E1E  0A01               	xorlw	1	; case 23
 22866  002E20  B4D8               	btfsc	status,2,c
 22867  002E22  D62A               	goto	l16059
 22868  002E24  0A0F               	xorlw	15	; case 24
 22869  002E26  B4D8               	btfsc	status,2,c
 22870  002E28  D62F               	goto	l16063
 22871  002E2A  0A01               	xorlw	1	; case 25
 22872  002E2C  B4D8               	btfsc	status,2,c
 22873  002E2E  D634               	goto	l16067
 22874  002E30  0A03               	xorlw	3	; case 26
 22875  002E32  B4D8               	btfsc	status,2,c
 22876  002E34  D639               	goto	l16071
 22877  002E36  0A01               	xorlw	1	; case 27
 22878  002E38  B4D8               	btfsc	status,2,c
 22879  002E3A  D63E               	goto	l16075
 22880  002E3C  0A07               	xorlw	7	; case 28
 22881  002E3E  B4D8               	btfsc	status,2,c
 22882  002E40  D643               	goto	l16079
 22883  002E42  0A01               	xorlw	1	; case 29
 22884  002E44  B4D8               	btfsc	status,2,c
 22885  002E46  D648               	goto	l16083
 22886  002E48  0A03               	xorlw	3	; case 30
 22887  002E4A  B4D8               	btfsc	status,2,c
 22888  002E4C  D654               	goto	l16087
 22889  002E4E  0A01               	xorlw	1	; case 31
 22890  002E50  B4D8               	btfsc	status,2,c
 22891  002E52  D659               	goto	l16091
 22892  002E54  0A3F               	xorlw	63	; case 32
 22893  002E56  B4D8               	btfsc	status,2,c
 22894  002E58  D65E               	goto	l16095
 22895  002E5A  0A01               	xorlw	1	; case 33
 22896  002E5C  B4D8               	btfsc	status,2,c
 22897  002E5E  D663               	goto	l16099
 22898  002E60  0A03               	xorlw	3	; case 34
 22899  002E62  B4D8               	btfsc	status,2,c
 22900  002E64  D668               	goto	l16103
 22901  002E66  0A01               	xorlw	1	; case 35
 22902  002E68  B4D8               	btfsc	status,2,c
 22903  002E6A  D66D               	goto	l16107
 22904  002E6C  0A07               	xorlw	7	; case 36
 22905  002E6E  B4D8               	btfsc	status,2,c
 22906  002E70  D672               	goto	l16111
 22907  002E72  0A01               	xorlw	1	; case 37
 22908  002E74  B4D8               	btfsc	status,2,c
 22909  002E76  D677               	goto	l16115
 22910  002E78  0A03               	xorlw	3	; case 38
 22911  002E7A  B4D8               	btfsc	status,2,c
 22912  002E7C  D67C               	goto	l16119
 22913  002E7E  0A01               	xorlw	1	; case 39
 22914  002E80  B4D8               	btfsc	status,2,c
 22915  002E82  D688               	goto	l16123
 22916  002E84  0A0E               	xorlw	14	; case 41
 22917  002E86  B4D8               	btfsc	status,2,c
 22918  002E88  D6B4               	goto	l16129
 22919  002E8A  0A03               	xorlw	3	; case 42
 22920  002E8C  B4D8               	btfsc	status,2,c
 22921  002E8E  D6C0               	goto	l16133
 22922  002E90  0A06               	xorlw	6	; case 44
 22923  002E92  B4D8               	btfsc	status,2,c
 22924  002E94  D6EC               	goto	l16139
 22925  002E96  0A02               	xorlw	2	; case 46
 22926  002E98  B4D8               	btfsc	status,2,c
 22927  002E9A  D718               	goto	l16145
 22928  002E9C  0A01               	xorlw	1	; case 47
 22929  002E9E  B4D8               	btfsc	status,2,c
 22930  002EA0  D71F               	goto	l16149
 22931  002EA2  0A1F               	xorlw	31	; case 48
 22932  002EA4  B4D8               	btfsc	status,2,c
 22933  002EA6  D726               	goto	l16153
 22934  002EA8  0A02               	xorlw	2	; case 50
 22935  002EAA  A4D8               	btfss	status,2,c
 22936  002EAC  0012               	return	
 22937  002EAE  D751               	goto	l16159
 22938  002EB0                     __end_of_read_eusartparser:
 22939                           	callstack 0
 22940                           
 22941 ;; *************** function _write_package *****************
 22942 ;; Defined at:
 22943 ;;		line 50 in file "eusartpackage.c"
 22944 ;; Parameters:    Size  Location     Type
 22945 ;;  package         7   16[COMRAM] const struct package_t
 22946 ;; Auto vars:     Size  Location     Type
 22947 ;;		None
 22948 ;; Return value:  Size  Location     Type
 22949 ;;                  1    wreg      void 
 22950 ;; Registers used:
 22951 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22952 ;; Tracked objects:
 22953 ;;		On entry : 0/1
 22954 ;;		On exit  : 0/0
 22955 ;;		Unchanged: 0/0
 22956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22957 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22960 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22961 ;;Total ram usage:        7 bytes
 22962 ;; Hardware stack levels used: 1
 22963 ;; Hardware stack levels required when called: 5
 22964 ;; This function calls:
 22965 ;;		_EUSART1_Write
 22966 ;; This function is called by:
 22967 ;;		_read_eusartparser
 22968 ;;		_eusartparser
 22969 ;; This function uses a non-reentrant model
 22970 ;;
 22971                           
 22972                           	psect	text82
 22973  008B6E                     __ptext82:
 22974                           	callstack 0
 22975  008B6E                     _write_package:
 22976                           	callstack 24
 22977                           
 22978                           ;eusartpackage.c: 52:         if(package.valid==0)
 22979                           
 22980                           ;incstack = 0
 22981  008B6E  5017               	movf	(write_package@package+6)^0,w,c
 22982  008B70  B4D8               	btfsc	status,2,c
 22983  008B72  0012               	return	
 22984                           
 22985                           ;eusartpackage.c: 56:         EUSART1_Write(package.startbyte);
 22986  008B74  5015               	movf	(write_package@package+4)^0,w,c
 22987  008B76  EC4F  F044         	call	_EUSART1_Write
 22988                           
 22989                           ;eusartpackage.c: 57:         EUSART1_Write(package.functioncode);
 22990  008B7A  5011               	movf	write_package@package^0,w,c
 22991  008B7C  EC4F  F044         	call	_EUSART1_Write
 22992                           
 22993                           ;eusartpackage.c: 58:         EUSART1_Write(package.address);
 22994  008B80  5012               	movf	(write_package@package+1)^0,w,c
 22995  008B82  EC4F  F044         	call	_EUSART1_Write
 22996                           
 22997                           ;eusartpackage.c: 59:         EUSART1_Write(package.data.data8[0]);
 22998  008B86  5013               	movf	(write_package@package+2)^0,w,c
 22999  008B88  EC4F  F044         	call	_EUSART1_Write
 23000                           
 23001                           ;eusartpackage.c: 60:         EUSART1_Write(package.data.data8[1]);
 23002  008B8C  5014               	movf	(write_package@package+3)^0,w,c
 23003  008B8E  EC4F  F044         	call	_EUSART1_Write
 23004                           
 23005                           ;eusartpackage.c: 61:         EUSART1_Write(package.endbyte);
 23006  008B92  5016               	movf	(write_package@package+5)^0,w,c
 23007  008B94  EC4F  F044         	call	_EUSART1_Write
 23008  008B98  0012               	return		;funcret
 23009  008B9A                     __end_of_write_package:
 23010                           	callstack 0
 23011                           
 23012 ;; *************** function _EUSART1_Write *****************
 23013 ;; Defined at:
 23014 ;;		line 173 in file "mcc_generated_files/eusart1.c"
 23015 ;; Parameters:    Size  Location     Type
 23016 ;;  txData          1    wreg     unsigned char 
 23017 ;; Auto vars:     Size  Location     Type
 23018 ;;  txData          1   15[COMRAM] unsigned char 
 23019 ;; Return value:  Size  Location     Type
 23020 ;;                  1    wreg      void 
 23021 ;; Registers used:
 23022 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 23023 ;; Tracked objects:
 23024 ;;		On entry : 0/1
 23025 ;;		On exit  : 3F/E
 23026 ;;		Unchanged: 0/0
 23027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23029 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23031 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23032 ;;Total ram usage:        1 bytes
 23033 ;; Hardware stack levels used: 1
 23034 ;; Hardware stack levels required when called: 4
 23035 ;; This function calls:
 23036 ;;		Nothing
 23037 ;; This function is called by:
 23038 ;;		_write_package
 23039 ;; This function uses a non-reentrant model
 23040 ;;
 23041                           
 23042                           	psect	text83
 23043  00889E                     __ptext83:
 23044                           	callstack 0
 23045  00889E                     _EUSART1_Write:
 23046                           	callstack 24
 23047                           
 23048                           ;incstack = 0
 23049                           ;EUSART1_Write@txData stored from wreg
 23050  00889E  6E10               	movwf	EUSART1_Write@txData^0,c
 23051  0088A0                     
 23052                           ;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBufferRemaining)
 23053                           
 23054                           ;mcc_generated_files/eusart1.c: 173: void EUSART1_Write(uint8_t txData);mcc_generated_fi
      +                          les/eusart1.c: 174: {;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBuffer
      +                          Remaining)
 23055  0088A0  0101               	movlb	1	; () banked
 23056  0088A2  51FE               	movf	_eusart1TxBufferRemaining& (0+255),w,b	;volatile
 23057  0088A4  B4D8               	btfsc	status,2,c
 23058  0088A6  D7FC               	goto	l12011
 23059                           
 23060                           ; BSR set to: 1
 23061                           ;mcc_generated_files/eusart1.c: 179:     if(0 == PIE3bits.TX1IE)
 23062  0088A8  010E               	movlb	14	; () banked
 23063  0088AA  B9C5               	btfsc	197,4,b	;volatile
 23064  0088AC  D003               	goto	l100
 23065                           
 23066                           ; BSR set to: 14
 23067                           ;mcc_generated_files/eusart1.c: 180:     {;mcc_generated_files/eusart1.c: 181:         T
      +                          X1REG = txData;
 23068  0088AE  C010  FF9A         	movff	EUSART1_Write@txData,3994	;volatile
 23069                           
 23070                           ;mcc_generated_files/eusart1.c: 182:     }
 23071  0088B2  D012               	goto	l12027
 23072  0088B4                     l100:
 23073                           
 23074                           ; BSR set to: 14
 23075                           ;mcc_generated_files/eusart1.c: 184:     {;mcc_generated_files/eusart1.c: 185:         P
      +                          IE3bits.TX1IE = 0;
 23076  0088B4  99C5               	bcf	197,4,b	;volatile
 23077                           
 23078                           ; BSR set to: 14
 23079                           ;mcc_generated_files/eusart1.c: 186:         eusart1TxBuffer[eusart1TxHead++] = txData;
 23080  0088B6  0E84               	movlw	low _eusart1TxBuffer
 23081  0088B8  0100               	movlb	0	; () banked
 23082  0088BA  2597               	addwf	_eusart1TxHead& (0+255),w,b	;volatile
 23083  0088BC  6ED9               	movwf	fsr2l,c
 23084  0088BE  6ADA               	clrf	fsr2h,c
 23085  0088C0  0E02               	movlw	high _eusart1TxBuffer
 23086  0088C2  22DA               	addwfc	fsr2h,f,c
 23087  0088C4  C010  FFDF         	movff	EUSART1_Write@txData,indf2
 23088                           
 23089                           ; BSR set to: 0
 23090  0088C8  2B97               	incf	_eusart1TxHead& (0+255),f,b	;volatile
 23091                           
 23092                           ; BSR set to: 0
 23093                           ;mcc_generated_files/eusart1.c: 187:         if(sizeof(eusart1TxBuffer) <= eusart1TxHead
      +                          )
 23094  0088CA  0E07               	movlw	7
 23095  0088CC  6597               	cpfsgt	_eusart1TxHead& (0+255),b
 23096  0088CE  D002               	goto	l12025
 23097                           
 23098                           ; BSR set to: 0
 23099                           ;mcc_generated_files/eusart1.c: 188:         {;mcc_generated_files/eusart1.c: 189:      
      +                                 eusart1TxHead = 0;
 23100  0088D0  0E00               	movlw	0
 23101  0088D2  6F97               	movwf	_eusart1TxHead& (0+255),b	;volatile
 23102  0088D4                     l12025:
 23103                           
 23104                           ; BSR set to: 0
 23105                           ;mcc_generated_files/eusart1.c: 191:         eusart1TxBufferRemaining--;
 23106  0088D4  0101               	movlb	1	; () banked
 23107  0088D6  07FE               	decf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
 23108  0088D8                     l12027:
 23109                           
 23110                           ;mcc_generated_files/eusart1.c: 193:     PIE3bits.TX1IE = 1;
 23111  0088D8  010E               	movlb	14	; () banked
 23112  0088DA  89C5               	bsf	197,4,b	;volatile
 23113                           
 23114                           ; BSR set to: 14
 23115  0088DC  0012               	return		;funcret
 23116  0088DE                     __end_of_EUSART1_Write:
 23117                           	callstack 0
 23118                           
 23119 ;; *************** function _WWDT_TimerClear *****************
 23120 ;; Defined at:
 23121 ;;		line 128 in file "mcc_generated_files/mcc.c"
 23122 ;; Parameters:    Size  Location     Type
 23123 ;;		None
 23124 ;; Auto vars:     Size  Location     Type
 23125 ;;  state           1   15[COMRAM] _Bool 
 23126 ;;  readBack        1    0        unsigned char 
 23127 ;; Return value:  Size  Location     Type
 23128 ;;                  1    wreg      void 
 23129 ;; Registers used:
 23130 ;;		wreg, status,2
 23131 ;; Tracked objects:
 23132 ;;		On entry : 0/0
 23133 ;;		On exit  : 0/0
 23134 ;;		Unchanged: 0/0
 23135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23137 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23139 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23140 ;;Total ram usage:        1 bytes
 23141 ;; Hardware stack levels used: 1
 23142 ;; Hardware stack levels required when called: 4
 23143 ;; This function calls:
 23144 ;;		Nothing
 23145 ;; This function is called by:
 23146 ;;		_main
 23147 ;; This function uses a non-reentrant model
 23148 ;;
 23149                           
 23150                           	psect	text84
 23151  008F54                     __ptext84:
 23152                           	callstack 0
 23153  008F54                     _WWDT_TimerClear:
 23154                           	callstack 26
 23155                           
 23156                           ;mcc_generated_files/mcc.c: 134:     _Bool state = GIE;
 23157                           
 23158                           ; BSR set to: 14
 23159                           ;incstack = 0
 23160  008F54  0E00               	movlw	0
 23161  008F56  BEF2               	btfsc	4082,7,c	;volatile
 23162  008F58  0E01               	movlw	1
 23163  008F5A  6E10               	movwf	WWDT_TimerClear@state^0,c
 23164                           
 23165                           ;mcc_generated_files/mcc.c: 135:     GIE = 0;
 23166  008F5C  9EF2               	bcf	4082,7,c	;volatile
 23167  008F5E  010E               	movlb	14	; () banked
 23168  008F60  51D2               	movf	210,w,b	;volatile
 23169  008F62  0004               	clrwdt		;# 
 23170                           
 23171                           ;mcc_generated_files/mcc.c: 138:     GIE = state;
 23172  008F64  B010               	btfsc	WWDT_TimerClear@state^0,0,c
 23173  008F66  D002               	bra	u18615
 23174  008F68  9EF2               	bcf	4082,7,c	;volatile
 23175  008F6A  D001               	bra	u18616
 23176  008F6C                     u18615:
 23177  008F6C  8EF2               	bsf	4082,7,c	;volatile
 23178  008F6E                     u18616:
 23179  008F6E  0012               	return		;funcret
 23180  008F70                     __end_of_WWDT_TimerClear:
 23181                           	callstack 0
 23182                           
 23183 ;; *************** function _WWDT_SoftEnable *****************
 23184 ;; Defined at:
 23185 ;;		line 104 in file "mcc_generated_files/mcc.c"
 23186 ;; Parameters:    Size  Location     Type
 23187 ;;		None
 23188 ;; Auto vars:     Size  Location     Type
 23189 ;;		None
 23190 ;; Return value:  Size  Location     Type
 23191 ;;                  1    wreg      void 
 23192 ;; Registers used:
 23193 ;;		None
 23194 ;; Tracked objects:
 23195 ;;		On entry : 3F/E
 23196 ;;		On exit  : 3F/E
 23197 ;;		Unchanged: 0/0
 23198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23202 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23203 ;;Total ram usage:        0 bytes
 23204 ;; Hardware stack levels used: 1
 23205 ;; Hardware stack levels required when called: 4
 23206 ;; This function calls:
 23207 ;;		Nothing
 23208 ;; This function is called by:
 23209 ;;		_main
 23210 ;; This function uses a non-reentrant model
 23211 ;;
 23212                           
 23213                           	psect	text85
 23214  009294                     __ptext85:
 23215                           	callstack 0
 23216  009294                     _WWDT_SoftEnable:
 23217                           	callstack 26
 23218                           
 23219                           ; BSR set to: 14
 23220                           ;mcc_generated_files/mcc.c: 107:     WDTCON0bits.SEN=1;
 23221                           
 23222                           ;incstack = 0
 23223  009294  81D2               	bsf	210,0,b	;volatile
 23224                           
 23225                           ; BSR set to: 14
 23226  009296  0012               	return		;funcret
 23227  009298                     __end_of_WWDT_SoftEnable:
 23228                           	callstack 0
 23229                           
 23230 ;; *************** function _ShowVersion *****************
 23231 ;; Defined at:
 23232 ;;		line 254 in file "main_MC50.c"
 23233 ;; Parameters:    Size  Location     Type
 23234 ;;		None
 23235 ;; Auto vars:     Size  Location     Type
 23236 ;;		None
 23237 ;; Return value:  Size  Location     Type
 23238 ;;                  1    wreg      void 
 23239 ;; Registers used:
 23240 ;;		wreg, status,2, status,0, cstack
 23241 ;; Tracked objects:
 23242 ;;		On entry : 3F/1
 23243 ;;		On exit  : 3F/1
 23244 ;;		Unchanged: 0/0
 23245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23249 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23250 ;;Total ram usage:        0 bytes
 23251 ;; Hardware stack levels used: 1
 23252 ;; Hardware stack levels required when called: 5
 23253 ;; This function calls:
 23254 ;;		_SetSegmentValue
 23255 ;; This function is called by:
 23256 ;;		_main
 23257 ;; This function uses a non-reentrant model
 23258 ;;
 23259                           
 23260                           	psect	text86
 23261  00812C                     __ptext86:
 23262                           	callstack 0
 23263  00812C                     _ShowVersion:
 23264                           	callstack 25
 23265                           
 23266                           ; BSR set to: 1
 23267                           ;main_MC50.c: 256:     if(ts_system.TimeShowVersion<=0)
 23268                           
 23269                           ; BSR set to: 14
 23270                           ;incstack = 0
 23271  00812C  BFD7               	btfsc	(_ts_system+61)& (0+255),7,b	;volatile
 23272  00812E  D005               	goto	u19700
 23273  008130  51D7               	movf	(_ts_system+61)& (0+255),w,b	;volatile
 23274  008132  E12E               	bnz	l2039
 23275  008134  05D6               	decf	(_ts_system+60)& (0+255),w,b	;volatile
 23276  008136  B0D8               	btfsc	status,0,c
 23277  008138  0012               	return	
 23278  00813A                     u19700:
 23279                           
 23280                           ; BSR set to: 1
 23281                           ;main_MC50.c: 257:     {;main_MC50.c: 259:             if(var_sys.StateVersion==0)
 23282  00813A  5149               	movf	(_var_sys+73)& (0+255),w,b	;volatile
 23283  00813C  A4D8               	btfss	status,2,c
 23284  00813E  D006               	goto	l16831
 23285                           
 23286                           ; BSR set to: 1
 23287                           ;main_MC50.c: 260:             {;main_MC50.c: 261:                 SetSegmentValue((1/10
      +                          )%10,(1/1)%10);
 23288  008140  0E01               	movlw	1
 23289  008142  6E1C               	movwf	SetSegmentValue@d2^0,c
 23290  008144  0E00               	movlw	0
 23291  008146  ECFB  F047         	call	_SetSegmentValue
 23292                           
 23293                           ;main_MC50.c: 262:             }
 23294  00814A  D01C               	goto	l2034
 23295  00814C                     l16831:
 23296                           
 23297                           ; BSR set to: 1
 23298  00814C  0549               	decf	(_var_sys+73)& (0+255),w,b	;volatile
 23299  00814E  A4D8               	btfss	status,2,c
 23300  008150  D006               	goto	l16835
 23301                           
 23302                           ; BSR set to: 1
 23303                           ;main_MC50.c: 264:             {;main_MC50.c: 265:                 SetSegmentValue(dr, (
      +                          180/100)%10);
 23304  008152  0E01               	movlw	1
 23305  008154  6E1C               	movwf	SetSegmentValue@d2^0,c
 23306  008156  0E14               	movlw	20
 23307  008158  ECFB  F047         	call	_SetSegmentValue
 23308                           
 23309                           ;main_MC50.c: 266:             }
 23310  00815C  D013               	goto	l2034
 23311  00815E                     l16835:
 23312                           
 23313                           ; BSR set to: 1
 23314  00815E  0E02               	movlw	2
 23315  008160  1949               	xorwf	(_var_sys+73)& (0+255),w,b	;volatile
 23316  008162  A4D8               	btfss	status,2,c
 23317  008164  D006               	goto	l16839
 23318                           
 23319                           ; BSR set to: 1
 23320                           ;main_MC50.c: 268:             {;main_MC50.c: 269:                 SetSegmentValue((180/
      +                          10)%10,(180/1)%10);
 23321  008166  0E00               	movlw	0
 23322  008168  6E1C               	movwf	SetSegmentValue@d2^0,c
 23323  00816A  0E08               	movlw	8
 23324  00816C  ECFB  F047         	call	_SetSegmentValue
 23325                           
 23326                           ;main_MC50.c: 270:             }
 23327  008170  D009               	goto	l2034
 23328  008172                     l16839:
 23329                           
 23330                           ; BSR set to: 1
 23331  008172  0E03               	movlw	3
 23332  008174  1949               	xorwf	(_var_sys+73)& (0+255),w,b	;volatile
 23333  008176  A4D8               	btfss	status,2,c
 23334  008178  D005               	goto	l2034
 23335                           
 23336                           ; BSR set to: 1
 23337                           ;main_MC50.c: 272:             {;main_MC50.c: 273:                SetSegmentValue(dr, d2
      +                          );
 23338  00817A  0E02               	movlw	2
 23339  00817C  6E1C               	movwf	SetSegmentValue@d2^0,c
 23340  00817E  0E14               	movlw	20
 23341  008180  ECFB  F047         	call	_SetSegmentValue
 23342  008184                     l2034:
 23343                           
 23344                           ;main_MC50.c: 282:         var_sys.StateVersion++;
 23345                           
 23346                           ; BSR set to: 1
 23347  008184  0101               	movlb	1	; () banked
 23348  008186  2B49               	incf	(_var_sys+73)& (0+255),f,b	;volatile
 23349                           
 23350                           ; BSR set to: 1
 23351                           ;main_MC50.c: 283:         ts_system.TimeShowVersion=(1000/50);
 23352  008188  0E00               	movlw	0
 23353  00818A  6FD7               	movwf	(_ts_system+61)& (0+255),b	;volatile
 23354  00818C  0E14               	movlw	20
 23355  00818E  6FD6               	movwf	(_ts_system+60)& (0+255),b	;volatile
 23356  008190                     l2039:
 23357                           
 23358                           ; BSR set to: 1
 23359  008190  0012               	return		;funcret
 23360  008192                     __end_of_ShowVersion:
 23361                           	callstack 0
 23362                           
 23363 ;; *************** function _SetSegmentValue *****************
 23364 ;; Defined at:
 23365 ;;		line 112 in file "outputs_MC50.c"
 23366 ;; Parameters:    Size  Location     Type
 23367 ;;  d1              1    wreg     unsigned char 
 23368 ;;  d2              1   27[COMRAM] unsigned char 
 23369 ;; Auto vars:     Size  Location     Type
 23370 ;;  d1              1   28[COMRAM] unsigned char 
 23371 ;; Return value:  Size  Location     Type
 23372 ;;                  1    wreg      void 
 23373 ;; Registers used:
 23374 ;;		wreg, status,2
 23375 ;; Tracked objects:
 23376 ;;		On entry : 0/0
 23377 ;;		On exit  : 3F/0
 23378 ;;		Unchanged: 0/0
 23379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23380 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23381 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23383 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23384 ;;Total ram usage:        2 bytes
 23385 ;; Hardware stack levels used: 1
 23386 ;; Hardware stack levels required when called: 4
 23387 ;; This function calls:
 23388 ;;		Nothing
 23389 ;; This function is called by:
 23390 ;;		_main
 23391 ;;		_ShowVersion
 23392 ;;		_controlSelectRemote
 23393 ;; This function uses a non-reentrant model
 23394 ;;
 23395                           
 23396                           	psect	text87
 23397  008FF6                     __ptext87:
 23398                           	callstack 0
 23399  008FF6                     _SetSegmentValue:
 23400                           	callstack 23
 23401                           
 23402                           ; BSR set to: 1
 23403                           ;incstack = 0
 23404                           ;SetSegmentValue@d1 stored from wreg
 23405  008FF6  6E1D               	movwf	SetSegmentValue@d1^0,c
 23406                           
 23407                           ;outputs_MC50.c: 112: void SetSegmentValue(char d1, char d2);outputs_MC50.c: 113: {;outp
      +                          uts_MC50.c: 117:         dispStruct.display_grp.value_display1=d1;
 23408  008FF8  C01D  F072         	movff	SetSegmentValue@d1,_dispStruct	;volatile
 23409                           
 23410                           ;outputs_MC50.c: 118:         dispStruct.display_grp.value_display2=d2;
 23411  008FFC  C01C  F073         	movff	SetSegmentValue@d2,_dispStruct+1	;volatile
 23412                           
 23413                           ;outputs_MC50.c: 119:         dispStruct.intermitentFreq=0;
 23414  009000  0E00               	movlw	0
 23415  009002  0100               	movlb	0	; () banked
 23416  009004  6F76               	movwf	(_dispStruct+4)& (0+255),b	;volatile
 23417  009006  0E00               	movlw	0
 23418  009008  6F75               	movwf	(_dispStruct+3)& (0+255),b	;volatile
 23419                           
 23420                           ; BSR set to: 0
 23421                           ;outputs_MC50.c: 120:         dispStruct.upFase=0;
 23422  00900A  0E00               	movlw	0
 23423  00900C  6F77               	movwf	(_dispStruct+5)& (0+255),b	;volatile
 23424                           
 23425                           ; BSR set to: 0
 23426  00900E  0012               	return		;funcret
 23427  009010                     __end_of_SetSegmentValue:
 23428                           	callstack 0
 23429                           
 23430 ;; *************** function _SYSTEM_Initialize *****************
 23431 ;; Defined at:
 23432 ;;		line 50 in file "mcc_generated_files/mcc.c"
 23433 ;; Parameters:    Size  Location     Type
 23434 ;;		None
 23435 ;; Auto vars:     Size  Location     Type
 23436 ;;		None
 23437 ;; Return value:  Size  Location     Type
 23438 ;;                  1    wreg      void 
 23439 ;; Registers used:
 23440 ;;		wreg, status,2, status,0, cstack
 23441 ;; Tracked objects:
 23442 ;;		On entry : 3F/0
 23443 ;;		On exit  : 3F/E
 23444 ;;		Unchanged: 0/0
 23445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23446 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23449 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23450 ;;Total ram usage:        0 bytes
 23451 ;; Hardware stack levels used: 1
 23452 ;; Hardware stack levels required when called: 6
 23453 ;; This function calls:
 23454 ;;		_ADCC_Initialize
 23455 ;;		_EUSART1_Initialize
 23456 ;;		_I2C1_Initialize
 23457 ;;		_INTERRUPT_Initialize
 23458 ;;		_OSCILLATOR_Initialize
 23459 ;;		_PIN_MANAGER_Initialize
 23460 ;;		_PMD_Initialize
 23461 ;;		_TMR0_Initialize
 23462 ;;		_TMR1_Initialize
 23463 ;;		_TMR2_Initialize
 23464 ;;		_WWDT_Initialize
 23465 ;; This function is called by:
 23466 ;;		_main
 23467 ;; This function uses a non-reentrant model
 23468 ;;
 23469                           
 23470                           	psect	text88
 23471  008B14                     __ptext88:
 23472                           	callstack 0
 23473  008B14                     _SYSTEM_Initialize:
 23474                           	callstack 24
 23475                           
 23476                           ; BSR set to: 0
 23477                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 23478                           
 23479                           ; BSR set to: 0
 23480                           ;incstack = 0
 23481  008B14  EC4C  F049         	call	_INTERRUPT_Initialize	;wreg free
 23482                           
 23483                           ; BSR set to: 0
 23484                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 23485  008B18  ECB8  F047         	call	_PMD_Initialize	;wreg free
 23486                           
 23487                           ; BSR set to: 14
 23488                           ;mcc_generated_files/mcc.c: 54:     I2C1_Initialize();
 23489  008B1C  EC87  F048         	call	_I2C1_Initialize	;wreg free
 23490                           
 23491                           ; BSR set to: 14
 23492                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
 23493  008B20  EC6B  F03A         	call	_PIN_MANAGER_Initialize	;wreg free
 23494                           
 23495                           ; BSR set to: 14
 23496                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
 23497  008B24  EC5D  F048         	call	_OSCILLATOR_Initialize	;wreg free
 23498                           
 23499                           ; BSR set to: 14
 23500                           ;mcc_generated_files/mcc.c: 57:     WWDT_Initialize();
 23501  008B28  ECCB  F048         	call	_WWDT_Initialize	;wreg free
 23502                           
 23503                           ; BSR set to: 14
 23504                           ;mcc_generated_files/mcc.c: 58:     ADCC_Initialize();
 23505  008B2C  EC08  F043         	call	_ADCC_Initialize	;wreg free
 23506                           
 23507                           ; BSR set to: 15
 23508                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
 23509  008B30  ECCD  F045         	call	_TMR2_Initialize	;wreg free
 23510                           
 23511                           ; BSR set to: 14
 23512                           ;mcc_generated_files/mcc.c: 60:     TMR1_Initialize();
 23513  008B34  EC2E  F044         	call	_TMR1_Initialize	;wreg free
 23514                           
 23515                           ; BSR set to: 14
 23516                           ;mcc_generated_files/mcc.c: 61:     TMR0_Initialize();
 23517  008B38  EC69  F047         	call	_TMR0_Initialize	;wreg free
 23518                           
 23519                           ; BSR set to: 14
 23520                           ;mcc_generated_files/mcc.c: 62:     EUSART1_Initialize();
 23521  008B3C  ECA7  F03D         	call	_EUSART1_Initialize	;wreg free
 23522                           
 23523                           ; BSR set to: 14
 23524  008B40  0012               	return		;funcret
 23525  008B42                     __end_of_SYSTEM_Initialize:
 23526                           	callstack 0
 23527                           
 23528 ;; *************** function _WWDT_Initialize *****************
 23529 ;; Defined at:
 23530 ;;		line 96 in file "mcc_generated_files/mcc.c"
 23531 ;; Parameters:    Size  Location     Type
 23532 ;;		None
 23533 ;; Auto vars:     Size  Location     Type
 23534 ;;		None
 23535 ;; Return value:  Size  Location     Type
 23536 ;;                  1    wreg      void 
 23537 ;; Registers used:
 23538 ;;		wreg, status,2
 23539 ;; Tracked objects:
 23540 ;;		On entry : 3F/E
 23541 ;;		On exit  : 3F/E
 23542 ;;		Unchanged: 0/0
 23543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23547 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23548 ;;Total ram usage:        0 bytes
 23549 ;; Hardware stack levels used: 1
 23550 ;; Hardware stack levels required when called: 4
 23551 ;; This function calls:
 23552 ;;		Nothing
 23553 ;; This function is called by:
 23554 ;;		_SYSTEM_Initialize
 23555 ;; This function uses a non-reentrant model
 23556 ;;
 23557                           
 23558                           	psect	text89
 23559  009196                     __ptext89:
 23560                           	callstack 0
 23561  009196                     _WWDT_Initialize:
 23562                           	callstack 25
 23563                           
 23564                           ; BSR set to: 14
 23565                           ;mcc_generated_files/mcc.c: 99:     WDTCON0 = 22;
 23566                           
 23567                           ; BSR set to: 14
 23568                           ;incstack = 0
 23569  009196  0E16               	movlw	22
 23570  009198  6FD2               	movwf	210,b	;volatile
 23571                           
 23572                           ;mcc_generated_files/mcc.c: 100:     WDTCON1 = 7|32;
 23573  00919A  0E27               	movlw	39
 23574  00919C  6FD3               	movwf	211,b	;volatile
 23575                           
 23576                           ; BSR set to: 14
 23577  00919E  0012               	return		;funcret
 23578  0091A0                     __end_of_WWDT_Initialize:
 23579                           	callstack 0
 23580                           
 23581 ;; *************** function _TMR2_Initialize *****************
 23582 ;; Defined at:
 23583 ;;		line 79 in file "mcc_generated_files/tmr2.c"
 23584 ;; Parameters:    Size  Location     Type
 23585 ;;		None
 23586 ;; Auto vars:     Size  Location     Type
 23587 ;;		None
 23588 ;; Return value:  Size  Location     Type
 23589 ;;                  1    wreg      void 
 23590 ;; Registers used:
 23591 ;;		wreg, status,2, status,0, cstack
 23592 ;; Tracked objects:
 23593 ;;		On entry : 3F/F
 23594 ;;		On exit  : 3F/E
 23595 ;;		Unchanged: 0/0
 23596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23600 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23601 ;;Total ram usage:        0 bytes
 23602 ;; Hardware stack levels used: 1
 23603 ;; Hardware stack levels required when called: 5
 23604 ;; This function calls:
 23605 ;;		_TMR2_SetInterruptHandler
 23606 ;; This function is called by:
 23607 ;;		_SYSTEM_Initialize
 23608 ;; This function uses a non-reentrant model
 23609 ;;
 23610                           
 23611                           	psect	text90
 23612  008B9A                     __ptext90:
 23613                           	callstack 0
 23614  008B9A                     _TMR2_Initialize:
 23615                           	callstack 24
 23616                           
 23617                           ; BSR set to: 15
 23618                           ;mcc_generated_files/tmr2.c: 84:     T2CLKCON = 0x02;
 23619                           
 23620                           ; BSR set to: 14
 23621                           ;incstack = 0
 23622  008B9A  0E02               	movlw	2
 23623  008B9C  6EBF               	movwf	191,c	;volatile
 23624                           
 23625                           ;mcc_generated_files/tmr2.c: 87:     T2HLT = 0x40;
 23626  008B9E  0E40               	movlw	64
 23627  008BA0  6EBE               	movwf	190,c	;volatile
 23628                           
 23629                           ;mcc_generated_files/tmr2.c: 90:     T2RST = 0x00;
 23630  008BA2  0E00               	movlw	0
 23631  008BA4  6EC0               	movwf	192,c	;volatile
 23632                           
 23633                           ;mcc_generated_files/tmr2.c: 93:     T2PR = 0xC7;
 23634  008BA6  0EC7               	movlw	199
 23635  008BA8  6EBC               	movwf	188,c	;volatile
 23636                           
 23637                           ;mcc_generated_files/tmr2.c: 96:     T2TMR = 0x00;
 23638  008BAA  0E00               	movlw	0
 23639  008BAC  6EBB               	movwf	187,c	;volatile
 23640                           
 23641                           ; BSR set to: 15
 23642                           ;mcc_generated_files/tmr2.c: 99:     PIR4bits.TMR2IF = 0;
 23643  008BAE  010E               	movlb	14	; () banked
 23644  008BB0  93CE               	bcf	206,1,b	;volatile
 23645                           
 23646                           ; BSR set to: 14
 23647                           ;mcc_generated_files/tmr2.c: 102:     PIE4bits.TMR2IE = 1;
 23648  008BB2  83C6               	bsf	198,1,b	;volatile
 23649                           
 23650                           ; BSR set to: 14
 23651                           ;mcc_generated_files/tmr2.c: 105:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHand
      +                          ler);
 23652  008BB4  0EC4               	movlw	low _TMR2_DefaultInterruptHandler
 23653  008BB6  6E10               	movwf	TMR2_SetInterruptHandler@InterruptHandler^0,c
 23654  008BB8  0E92               	movlw	high _TMR2_DefaultInterruptHandler
 23655  008BBA  6E11               	movwf	(TMR2_SetInterruptHandler@InterruptHandler+1)^0,c
 23656  008BBC  ECD0  F048         	call	_TMR2_SetInterruptHandler	;wreg free
 23657                           
 23658                           ; BSR set to: 14
 23659                           ;mcc_generated_files/tmr2.c: 108:     T2CON = 0xD9;
 23660  008BC0  0ED9               	movlw	217
 23661  008BC2  6EBD               	movwf	189,c	;volatile
 23662                           
 23663                           ; BSR set to: 14
 23664  008BC4  0012               	return		;funcret
 23665  008BC6                     __end_of_TMR2_Initialize:
 23666                           	callstack 0
 23667                           
 23668 ;; *************** function _TMR2_SetInterruptHandler *****************
 23669 ;; Defined at:
 23670 ;;		line 342 in file "mcc_generated_files/tmr2.c"
 23671 ;; Parameters:    Size  Location     Type
 23672 ;;  InterruptHan    2   15[COMRAM] PTR FTN()void 
 23673 ;;		 -> TMR2_DefaultInterruptHandler(1), 
 23674 ;; Auto vars:     Size  Location     Type
 23675 ;;		None
 23676 ;; Return value:  Size  Location     Type
 23677 ;;                  1    wreg      void 
 23678 ;; Registers used:
 23679 ;;		wreg, status,2, status,0
 23680 ;; Tracked objects:
 23681 ;;		On entry : 3F/E
 23682 ;;		On exit  : 3F/E
 23683 ;;		Unchanged: 3F/0
 23684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23685 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23688 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23689 ;;Total ram usage:        2 bytes
 23690 ;; Hardware stack levels used: 1
 23691 ;; Hardware stack levels required when called: 4
 23692 ;; This function calls:
 23693 ;;		Nothing
 23694 ;; This function is called by:
 23695 ;;		_TMR2_Initialize
 23696 ;; This function uses a non-reentrant model
 23697 ;;
 23698                           
 23699                           	psect	text91
 23700  0091A0                     __ptext91:
 23701                           	callstack 0
 23702  0091A0                     _TMR2_SetInterruptHandler:
 23703                           	callstack 24
 23704                           
 23705                           ; BSR set to: 14
 23706                           ;mcc_generated_files/tmr2.c: 343:     TMR2_InterruptHandler = InterruptHandler;
 23707                           
 23708                           ; BSR set to: 14
 23709                           ;incstack = 0
 23710  0091A0  C010  F2DD         	movff	TMR2_SetInterruptHandler@InterruptHandler,_TMR2_InterruptHandler
 23711  0091A4  C011  F2DE         	movff	TMR2_SetInterruptHandler@InterruptHandler+1,_TMR2_InterruptHandler+1
 23712                           
 23713                           ; BSR set to: 14
 23714  0091A8  0012               	return		;funcret
 23715  0091AA                     __end_of_TMR2_SetInterruptHandler:
 23716                           	callstack 0
 23717                           
 23718 ;; *************** function _TMR1_Initialize *****************
 23719 ;; Defined at:
 23720 ;;		line 66 in file "mcc_generated_files/tmr1.c"
 23721 ;; Parameters:    Size  Location     Type
 23722 ;;		None
 23723 ;; Auto vars:     Size  Location     Type
 23724 ;;		None
 23725 ;; Return value:  Size  Location     Type
 23726 ;;                  1    wreg      void 
 23727 ;; Registers used:
 23728 ;;		wreg, status,2, status,0, cstack
 23729 ;; Tracked objects:
 23730 ;;		On entry : 3F/E
 23731 ;;		On exit  : 3F/E
 23732 ;;		Unchanged: 0/0
 23733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23736 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23737 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23738 ;;Total ram usage:        2 bytes
 23739 ;; Hardware stack levels used: 1
 23740 ;; Hardware stack levels required when called: 5
 23741 ;; This function calls:
 23742 ;;		_TMR1_SetInterruptHandler
 23743 ;; This function is called by:
 23744 ;;		_SYSTEM_Initialize
 23745 ;; This function uses a non-reentrant model
 23746 ;;
 23747                           
 23748                           	psect	text92
 23749  00885C                     __ptext92:
 23750                           	callstack 0
 23751  00885C                     _TMR1_Initialize:
 23752                           	callstack 24
 23753                           
 23754                           ; BSR set to: 14
 23755                           ;mcc_generated_files/tmr1.c: 71:     T1GCON = 0x00;
 23756                           
 23757                           ; BSR set to: 14
 23758                           ;incstack = 0
 23759  00885C  0E00               	movlw	0
 23760  00885E  6ED0               	movwf	208,c	;volatile
 23761                           
 23762                           ;mcc_generated_files/tmr1.c: 74:     T1GATE = 0x00;
 23763  008860  0E00               	movlw	0
 23764  008862  6ED1               	movwf	209,c	;volatile
 23765                           
 23766                           ;mcc_generated_files/tmr1.c: 77:     T1CLK = 0x01;
 23767  008864  0E01               	movlw	1
 23768  008866  6ED2               	movwf	210,c	;volatile
 23769                           
 23770                           ; BSR set to: 14
 23771                           ;mcc_generated_files/tmr1.c: 80:     TMR1H = 0xFF;
 23772  008868  68CE               	setf	206,c	;volatile
 23773                           
 23774                           ;mcc_generated_files/tmr1.c: 83:     TMR1L = 0x38;
 23775  00886A  0E38               	movlw	56
 23776  00886C  6ECD               	movwf	205,c	;volatile
 23777                           
 23778                           ; BSR set to: 14
 23779                           ;mcc_generated_files/tmr1.c: 86:     PIR4bits.TMR1IF = 0;
 23780  00886E  91CE               	bcf	206,0,b	;volatile
 23781                           
 23782                           ; BSR set to: 14
 23783                           ;mcc_generated_files/tmr1.c: 89:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
 23784  008870  50CD               	movf	205,w,c	;volatile
 23785  008872  CFCE F012          	movff	4046,??_TMR1_Initialize	;volatile
 23786  008876  6A13               	clrf	(??_TMR1_Initialize+1)^0,c
 23787  008878  C012  F013         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
 23788  00887C  6A12               	clrf	??_TMR1_Initialize^0,c
 23789  00887E  1012               	iorwf	??_TMR1_Initialize^0,w,c
 23790  008880  0102               	movlb	2	; () banked
 23791  008882  6FE1               	movwf	_timer1ReloadVal& (0+255),b	;volatile
 23792  008884  5013               	movf	(??_TMR1_Initialize+1)^0,w,c
 23793  008886  6FE2               	movwf	(_timer1ReloadVal+1)& (0+255),b	;volatile
 23794                           
 23795                           ; BSR set to: 2
 23796                           ;mcc_generated_files/tmr1.c: 92:     PIE4bits.TMR1IE = 1;
 23797  008888  010E               	movlb	14	; () banked
 23798  00888A  81C6               	bsf	198,0,b	;volatile
 23799                           
 23800                           ; BSR set to: 14
 23801                           ;mcc_generated_files/tmr1.c: 95:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
 23802  00888C  0EC6               	movlw	low _TMR1_DefaultInterruptHandler
 23803  00888E  6E10               	movwf	TMR1_SetInterruptHandler@InterruptHandler^0,c
 23804  008890  0E92               	movlw	high _TMR1_DefaultInterruptHandler
 23805  008892  6E11               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)^0,c
 23806  008894  ECD5  F048         	call	_TMR1_SetInterruptHandler	;wreg free
 23807                           
 23808                           ; BSR set to: 14
 23809                           ;mcc_generated_files/tmr1.c: 98:     T1CON = 0x31;
 23810  008898  0E31               	movlw	49
 23811  00889A  6ECF               	movwf	207,c	;volatile
 23812                           
 23813                           ; BSR set to: 14
 23814  00889C  0012               	return		;funcret
 23815  00889E                     __end_of_TMR1_Initialize:
 23816                           	callstack 0
 23817                           
 23818 ;; *************** function _TMR1_SetInterruptHandler *****************
 23819 ;; Defined at:
 23820 ;;		line 192 in file "mcc_generated_files/tmr1.c"
 23821 ;; Parameters:    Size  Location     Type
 23822 ;;  InterruptHan    2   15[COMRAM] PTR FTN()void 
 23823 ;;		 -> TMR1_DefaultInterruptHandler(1), 
 23824 ;; Auto vars:     Size  Location     Type
 23825 ;;		None
 23826 ;; Return value:  Size  Location     Type
 23827 ;;                  1    wreg      void 
 23828 ;; Registers used:
 23829 ;;		wreg, status,2, status,0
 23830 ;; Tracked objects:
 23831 ;;		On entry : 3F/E
 23832 ;;		On exit  : 3F/E
 23833 ;;		Unchanged: 3F/0
 23834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23835 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23838 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23839 ;;Total ram usage:        2 bytes
 23840 ;; Hardware stack levels used: 1
 23841 ;; Hardware stack levels required when called: 4
 23842 ;; This function calls:
 23843 ;;		Nothing
 23844 ;; This function is called by:
 23845 ;;		_TMR1_Initialize
 23846 ;; This function uses a non-reentrant model
 23847 ;;
 23848                           
 23849                           	psect	text93
 23850  0091AA                     __ptext93:
 23851                           	callstack 0
 23852  0091AA                     _TMR1_SetInterruptHandler:
 23853                           	callstack 24
 23854                           
 23855                           ; BSR set to: 14
 23856                           ;mcc_generated_files/tmr1.c: 193:     TMR1_InterruptHandler = InterruptHandler;
 23857                           
 23858                           ; BSR set to: 14
 23859                           ;incstack = 0
 23860  0091AA  C010  F2DF         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
 23861  0091AE  C011  F2E0         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
 23862                           
 23863                           ; BSR set to: 14
 23864  0091B2  0012               	return		;funcret
 23865  0091B4                     __end_of_TMR1_SetInterruptHandler:
 23866                           	callstack 0
 23867                           
 23868 ;; *************** function _TMR0_Initialize *****************
 23869 ;; Defined at:
 23870 ;;		line 67 in file "mcc_generated_files/tmr0.c"
 23871 ;; Parameters:    Size  Location     Type
 23872 ;;		None
 23873 ;; Auto vars:     Size  Location     Type
 23874 ;;		None
 23875 ;; Return value:  Size  Location     Type
 23876 ;;                  1    wreg      void 
 23877 ;; Registers used:
 23878 ;;		wreg, status,2, status,0, cstack
 23879 ;; Tracked objects:
 23880 ;;		On entry : 3F/E
 23881 ;;		On exit  : 3F/E
 23882 ;;		Unchanged: 0/0
 23883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23887 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23888 ;;Total ram usage:        0 bytes
 23889 ;; Hardware stack levels used: 1
 23890 ;; Hardware stack levels required when called: 5
 23891 ;; This function calls:
 23892 ;;		_TMR0_SetInterruptHandler
 23893 ;; This function is called by:
 23894 ;;		_SYSTEM_Initialize
 23895 ;; This function uses a non-reentrant model
 23896 ;;
 23897                           
 23898                           	psect	text94
 23899  008ED2                     __ptext94:
 23900                           	callstack 0
 23901  008ED2                     _TMR0_Initialize:
 23902                           	callstack 24
 23903                           
 23904                           ; BSR set to: 14
 23905                           ;mcc_generated_files/tmr0.c: 72:     T0CON1 = 0x41;
 23906                           
 23907                           ; BSR set to: 14
 23908                           ;incstack = 0
 23909  008ED2  0E41               	movlw	65
 23910  008ED4  6ED6               	movwf	214,c	;volatile
 23911                           
 23912                           ;mcc_generated_files/tmr0.c: 75:     TMR0H = 0x84;
 23913  008ED6  0E84               	movlw	132
 23914  008ED8  6ED4               	movwf	212,c	;volatile
 23915                           
 23916                           ;mcc_generated_files/tmr0.c: 78:     TMR0L = 0x00;
 23917  008EDA  0E00               	movlw	0
 23918  008EDC  6ED3               	movwf	211,c	;volatile
 23919                           
 23920                           ; BSR set to: 14
 23921                           ;mcc_generated_files/tmr0.c: 81:     PIR0bits.TMR0IF = 0;
 23922  008EDE  9BCA               	bcf	202,5,b	;volatile
 23923                           
 23924                           ; BSR set to: 14
 23925                           ;mcc_generated_files/tmr0.c: 84:     PIE0bits.TMR0IE = 1;
 23926  008EE0  8BC2               	bsf	194,5,b	;volatile
 23927                           
 23928                           ; BSR set to: 14
 23929                           ;mcc_generated_files/tmr0.c: 87:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
 23930  008EE2  0EC8               	movlw	low _TMR0_DefaultInterruptHandler
 23931  008EE4  6E10               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
 23932  008EE6  0E92               	movlw	high _TMR0_DefaultInterruptHandler
 23933  008EE8  6E11               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
 23934  008EEA  ECDA  F048         	call	_TMR0_SetInterruptHandler	;wreg free
 23935                           
 23936                           ; BSR set to: 14
 23937                           ;mcc_generated_files/tmr0.c: 90:     T0CON0 = 0x87;
 23938  008EEE  0E87               	movlw	135
 23939  008EF0  6ED5               	movwf	213,c	;volatile
 23940                           
 23941                           ; BSR set to: 14
 23942  008EF2  0012               	return		;funcret
 23943  008EF4                     __end_of_TMR0_Initialize:
 23944                           	callstack 0
 23945                           
 23946 ;; *************** function _TMR0_SetInterruptHandler *****************
 23947 ;; Defined at:
 23948 ;;		line 143 in file "mcc_generated_files/tmr0.c"
 23949 ;; Parameters:    Size  Location     Type
 23950 ;;  InterruptHan    2   15[COMRAM] PTR FTN()void 
 23951 ;;		 -> TMR0_DefaultInterruptHandler(1), 
 23952 ;; Auto vars:     Size  Location     Type
 23953 ;;		None
 23954 ;; Return value:  Size  Location     Type
 23955 ;;                  1    wreg      void 
 23956 ;; Registers used:
 23957 ;;		wreg, status,2, status,0
 23958 ;; Tracked objects:
 23959 ;;		On entry : 3F/E
 23960 ;;		On exit  : 3F/E
 23961 ;;		Unchanged: 3F/0
 23962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23963 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23966 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23967 ;;Total ram usage:        2 bytes
 23968 ;; Hardware stack levels used: 1
 23969 ;; Hardware stack levels required when called: 4
 23970 ;; This function calls:
 23971 ;;		Nothing
 23972 ;; This function is called by:
 23973 ;;		_TMR0_Initialize
 23974 ;; This function uses a non-reentrant model
 23975 ;;
 23976                           
 23977                           	psect	text95
 23978  0091B4                     __ptext95:
 23979                           	callstack 0
 23980  0091B4                     _TMR0_SetInterruptHandler:
 23981                           	callstack 24
 23982                           
 23983                           ; BSR set to: 14
 23984                           ;mcc_generated_files/tmr0.c: 144:     TMR0_InterruptHandler = InterruptHandler;
 23985                           
 23986                           ; BSR set to: 14
 23987                           ;incstack = 0
 23988  0091B4  C010  F2E3         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
 23989  0091B8  C011  F2E4         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
 23990                           
 23991                           ; BSR set to: 14
 23992  0091BC  0012               	return		;funcret
 23993  0091BE                     __end_of_TMR0_SetInterruptHandler:
 23994                           	callstack 0
 23995                           
 23996 ;; *************** function _PMD_Initialize *****************
 23997 ;; Defined at:
 23998 ;;		line 79 in file "mcc_generated_files/mcc.c"
 23999 ;; Parameters:    Size  Location     Type
 24000 ;;		None
 24001 ;; Auto vars:     Size  Location     Type
 24002 ;;		None
 24003 ;; Return value:  Size  Location     Type
 24004 ;;                  1    wreg      void 
 24005 ;; Registers used:
 24006 ;;		wreg, status,2
 24007 ;; Tracked objects:
 24008 ;;		On entry : 3F/0
 24009 ;;		On exit  : 3F/E
 24010 ;;		Unchanged: 0/0
 24011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24013 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24015 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24016 ;;Total ram usage:        0 bytes
 24017 ;; Hardware stack levels used: 1
 24018 ;; Hardware stack levels required when called: 4
 24019 ;; This function calls:
 24020 ;;		Nothing
 24021 ;; This function is called by:
 24022 ;;		_SYSTEM_Initialize
 24023 ;; This function uses a non-reentrant model
 24024 ;;
 24025                           
 24026                           	psect	text96
 24027  008F70                     __ptext96:
 24028                           	callstack 0
 24029  008F70                     _PMD_Initialize:
 24030                           	callstack 25
 24031                           
 24032                           ; BSR set to: 0
 24033                           ;mcc_generated_files/mcc.c: 82:     PMD0 = 0x00;
 24034                           
 24035                           ; BSR set to: 14
 24036                           ;incstack = 0
 24037  008F70  0E00               	movlw	0
 24038  008F72  010E               	movlb	14	; () banked
 24039  008F74  6FE1               	movwf	225,b	;volatile
 24040                           
 24041                           ;mcc_generated_files/mcc.c: 84:     PMD1 = 0x00;
 24042  008F76  0E00               	movlw	0
 24043  008F78  6FE2               	movwf	226,b	;volatile
 24044                           
 24045                           ;mcc_generated_files/mcc.c: 86:     PMD2 = 0x00;
 24046  008F7A  0E00               	movlw	0
 24047  008F7C  6FE3               	movwf	227,b	;volatile
 24048                           
 24049                           ;mcc_generated_files/mcc.c: 88:     PMD3 = 0x00;
 24050  008F7E  0E00               	movlw	0
 24051  008F80  6FE4               	movwf	228,b	;volatile
 24052                           
 24053                           ;mcc_generated_files/mcc.c: 90:     PMD4 = 0x00;
 24054  008F82  0E00               	movlw	0
 24055  008F84  6FE5               	movwf	229,b	;volatile
 24056                           
 24057                           ;mcc_generated_files/mcc.c: 92:     PMD5 = 0x00;
 24058  008F86  0E00               	movlw	0
 24059  008F88  6FE6               	movwf	230,b	;volatile
 24060                           
 24061                           ; BSR set to: 14
 24062  008F8A  0012               	return		;funcret
 24063  008F8C                     __end_of_PMD_Initialize:
 24064                           	callstack 0
 24065                           
 24066 ;; *************** function _PIN_MANAGER_Initialize *****************
 24067 ;; Defined at:
 24068 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 24069 ;; Parameters:    Size  Location     Type
 24070 ;;		None
 24071 ;; Auto vars:     Size  Location     Type
 24072 ;;		None
 24073 ;; Return value:  Size  Location     Type
 24074 ;;                  1    wreg      void 
 24075 ;; Registers used:
 24076 ;;		wreg, status,2
 24077 ;; Tracked objects:
 24078 ;;		On entry : 3F/E
 24079 ;;		On exit  : 3F/E
 24080 ;;		Unchanged: 0/0
 24081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24085 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24086 ;;Total ram usage:        0 bytes
 24087 ;; Hardware stack levels used: 1
 24088 ;; Hardware stack levels required when called: 4
 24089 ;; This function calls:
 24090 ;;		Nothing
 24091 ;; This function is called by:
 24092 ;;		_SYSTEM_Initialize
 24093 ;; This function uses a non-reentrant model
 24094 ;;
 24095                           
 24096                           	psect	text97
 24097  0074D6                     __ptext97:
 24098                           	callstack 0
 24099  0074D6                     _PIN_MANAGER_Initialize:
 24100                           	callstack 25
 24101                           
 24102                           ; BSR set to: 14
 24103                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
 24104                           
 24105                           ; BSR set to: 14
 24106                           ;incstack = 0
 24107  0074D6  0E00               	movlw	0
 24108  0074D8  6E87               	movwf	135,c	;volatile
 24109                           
 24110                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
 24111  0074DA  0E00               	movlw	0
 24112  0074DC  6E86               	movwf	134,c	;volatile
 24113                           
 24114                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
 24115  0074DE  0E00               	movlw	0
 24116  0074E0  6E83               	movwf	131,c	;volatile
 24117                           
 24118                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
 24119  0074E2  0E00               	movlw	0
 24120  0074E4  6E84               	movwf	132,c	;volatile
 24121                           
 24122                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
 24123  0074E6  0E00               	movlw	0
 24124  0074E8  6E85               	movwf	133,c	;volatile
 24125                           
 24126                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x00;
 24127  0074EA  0E00               	movlw	0
 24128  0074EC  6E8C               	movwf	140,c	;volatile
 24129                           
 24130                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0x7F;
 24131  0074EE  0E7F               	movlw	127
 24132  0074F0  6E88               	movwf	136,c	;volatile
 24133                           
 24134                           ; BSR set to: 14
 24135                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
 24136  0074F2  6889               	setf	137,c	;volatile
 24137                           
 24138                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0x58;
 24139  0074F4  0E58               	movlw	88
 24140  0074F6  6E8A               	movwf	138,c	;volatile
 24141                           
 24142                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0x00;
 24143  0074F8  0E00               	movlw	0
 24144  0074FA  6E8B               	movwf	139,c	;volatile
 24145                           
 24146                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0x00;
 24147  0074FC  0E00               	movlw	0
 24148  0074FE  010F               	movlb	15	; () banked
 24149  007500  6F26               	movwf	38,b	;volatile
 24150                           
 24151                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0x00;
 24152  007502  0E00               	movlw	0
 24153  007504  6F21               	movwf	33,b	;volatile
 24154                           
 24155                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0x00;
 24156  007506  0E00               	movlw	0
 24157  007508  6F19               	movwf	25,b	;volatile
 24158                           
 24159                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x00;
 24160  00750A  0E00               	movlw	0
 24161  00750C  6F2E               	movwf	46,b	;volatile
 24162                           
 24163                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0x01;
 24164  00750E  0E01               	movlw	1
 24165  007510  6F11               	movwf	17,b	;volatile
 24166                           
 24167                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
 24168  007512  0E00               	movlw	0
 24169  007514  6F25               	movwf	37,b	;volatile
 24170                           
 24171                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
 24172  007516  0E00               	movlw	0
 24173  007518  6F2D               	movwf	45,b	;volatile
 24174                           
 24175                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0xF7;
 24176  00751A  0EF7               	movlw	247
 24177  00751C  6F18               	movwf	24,b	;volatile
 24178                           
 24179                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
 24180  00751E  0E00               	movlw	0
 24181  007520  6F10               	movwf	16,b	;volatile
 24182                           
 24183                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
 24184  007522  0E00               	movlw	0
 24185  007524  6F20               	movwf	32,b	;volatile
 24186                           
 24187                           ;mcc_generated_files/pin_manager.c: 96:     ODCONE = 0x00;
 24188  007526  0E00               	movlw	0
 24189  007528  6F2C               	movwf	44,b	;volatile
 24190                           
 24191                           ;mcc_generated_files/pin_manager.c: 97:     ODCONA = 0x00;
 24192  00752A  0E00               	movlw	0
 24193  00752C  6F0F               	movwf	15,b	;volatile
 24194                           
 24195                           ;mcc_generated_files/pin_manager.c: 98:     ODCONB = 0x00;
 24196  00752E  0E00               	movlw	0
 24197  007530  6F17               	movwf	23,b	;volatile
 24198                           
 24199                           ;mcc_generated_files/pin_manager.c: 99:     ODCONC = 0x00;
 24200  007532  0E00               	movlw	0
 24201  007534  6F1F               	movwf	31,b	;volatile
 24202                           
 24203                           ;mcc_generated_files/pin_manager.c: 100:     ODCOND = 0x00;
 24204  007536  0E00               	movlw	0
 24205  007538  6F24               	movwf	36,b	;volatile
 24206                           
 24207                           ; BSR set to: 15
 24208                           ;mcc_generated_files/pin_manager.c: 105:     SLRCONA = 0xFF;
 24209  00753A  690E               	setf	14,b	;volatile
 24210                           
 24211                           ; BSR set to: 15
 24212                           ;mcc_generated_files/pin_manager.c: 106:     SLRCONB = 0xFF;
 24213  00753C  6916               	setf	22,b	;volatile
 24214                           
 24215                           ; BSR set to: 15
 24216                           ;mcc_generated_files/pin_manager.c: 107:     SLRCONC = 0xFF;
 24217  00753E  691E               	setf	30,b	;volatile
 24218                           
 24219                           ; BSR set to: 15
 24220                           ;mcc_generated_files/pin_manager.c: 108:     SLRCOND = 0xFF;
 24221  007540  6923               	setf	35,b	;volatile
 24222                           
 24223                           ;mcc_generated_files/pin_manager.c: 109:     SLRCONE = 0x07;
 24224  007542  0E07               	movlw	7
 24225  007544  6F2B               	movwf	43,b	;volatile
 24226                           
 24227                           ; BSR set to: 15
 24228                           ;mcc_generated_files/pin_manager.c: 114:     INLVLA = 0xFF;
 24229  007546  690D               	setf	13,b	;volatile
 24230                           
 24231                           ; BSR set to: 15
 24232                           ;mcc_generated_files/pin_manager.c: 115:     INLVLB = 0xFF;
 24233  007548  6915               	setf	21,b	;volatile
 24234                           
 24235                           ; BSR set to: 15
 24236                           ;mcc_generated_files/pin_manager.c: 116:     INLVLC = 0xFF;
 24237  00754A  691D               	setf	29,b	;volatile
 24238                           
 24239                           ; BSR set to: 15
 24240                           ;mcc_generated_files/pin_manager.c: 117:     INLVLD = 0xFF;
 24241  00754C  6922               	setf	34,b	;volatile
 24242                           
 24243                           ;mcc_generated_files/pin_manager.c: 118:     INLVLE = 0x0F;
 24244  00754E  0E0F               	movlw	15
 24245  007550  6F2A               	movwf	42,b	;volatile
 24246                           
 24247                           ;mcc_generated_files/pin_manager.c: 127:     SSP1CLKPPS = 0x13;
 24248  007552  0E13               	movlw	19
 24249  007554  010E               	movlb	14	; () banked
 24250  007556  6FB7               	movwf	183,b	;volatile
 24251                           
 24252                           ;mcc_generated_files/pin_manager.c: 128:     RX1PPS = 0x16;
 24253  007558  0E16               	movlw	22
 24254  00755A  6FB5               	movwf	181,b	;volatile
 24255                           
 24256                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x0F;
 24257  00755C  0E0F               	movlw	15
 24258  00755E  6FFA               	movwf	250,b	;volatile
 24259                           
 24260                           ;mcc_generated_files/pin_manager.c: 130:     RC4PPS = 0x10;
 24261  007560  0E10               	movlw	16
 24262  007562  6FFB               	movwf	251,b	;volatile
 24263                           
 24264                           ;mcc_generated_files/pin_manager.c: 131:     RC7PPS = 0x09;
 24265  007564  0E09               	movlw	9
 24266  007566  6FFE               	movwf	254,b	;volatile
 24267                           
 24268                           ;mcc_generated_files/pin_manager.c: 132:     SSP1DATPPS = 0x14;
 24269  007568  0E14               	movlw	20
 24270  00756A  6FB8               	movwf	184,b	;volatile
 24271                           
 24272                           ; BSR set to: 14
 24273  00756C  0012               	return		;funcret
 24274  00756E                     __end_of_PIN_MANAGER_Initialize:
 24275                           	callstack 0
 24276                           
 24277 ;; *************** function _OSCILLATOR_Initialize *****************
 24278 ;; Defined at:
 24279 ;;		line 65 in file "mcc_generated_files/mcc.c"
 24280 ;; Parameters:    Size  Location     Type
 24281 ;;		None
 24282 ;; Auto vars:     Size  Location     Type
 24283 ;;		None
 24284 ;; Return value:  Size  Location     Type
 24285 ;;                  1    wreg      void 
 24286 ;; Registers used:
 24287 ;;		wreg, status,2
 24288 ;; Tracked objects:
 24289 ;;		On entry : 3F/E
 24290 ;;		On exit  : 3F/E
 24291 ;;		Unchanged: 0/0
 24292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24296 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24297 ;;Total ram usage:        0 bytes
 24298 ;; Hardware stack levels used: 1
 24299 ;; Hardware stack levels required when called: 4
 24300 ;; This function calls:
 24301 ;;		Nothing
 24302 ;; This function is called by:
 24303 ;;		_SYSTEM_Initialize
 24304 ;; This function uses a non-reentrant model
 24305 ;;
 24306                           
 24307                           	psect	text98
 24308  0090BA                     __ptext98:
 24309                           	callstack 0
 24310  0090BA                     _OSCILLATOR_Initialize:
 24311                           	callstack 25
 24312                           
 24313                           ; BSR set to: 14
 24314                           ;mcc_generated_files/mcc.c: 68:     OSCCON1 = 0x60;
 24315                           
 24316                           ; BSR set to: 14
 24317                           ;incstack = 0
 24318  0090BA  0E60               	movlw	96
 24319  0090BC  6FD8               	movwf	216,b	;volatile
 24320                           
 24321                           ;mcc_generated_files/mcc.c: 70:     OSCCON3 = 0x00;
 24322  0090BE  0E00               	movlw	0
 24323  0090C0  6FDA               	movwf	218,b	;volatile
 24324                           
 24325                           ;mcc_generated_files/mcc.c: 72:     OSCEN = 0x00;
 24326  0090C2  0E00               	movlw	0
 24327  0090C4  6FDC               	movwf	220,b	;volatile
 24328                           
 24329                           ;mcc_generated_files/mcc.c: 74:     OSCFRQ = 0x08;
 24330  0090C6  0E08               	movlw	8
 24331  0090C8  6FDE               	movwf	222,b	;volatile
 24332                           
 24333                           ;mcc_generated_files/mcc.c: 76:     OSCTUNE = 0x00;
 24334  0090CA  0E00               	movlw	0
 24335  0090CC  6FDD               	movwf	221,b	;volatile
 24336                           
 24337                           ; BSR set to: 14
 24338  0090CE  0012               	return		;funcret
 24339  0090D0                     __end_of_OSCILLATOR_Initialize:
 24340                           	callstack 0
 24341                           
 24342 ;; *************** function _INTERRUPT_Initialize *****************
 24343 ;; Defined at:
 24344 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 24345 ;; Parameters:    Size  Location     Type
 24346 ;;		None
 24347 ;; Auto vars:     Size  Location     Type
 24348 ;;		None
 24349 ;; Return value:  Size  Location     Type
 24350 ;;                  1    wreg      void 
 24351 ;; Registers used:
 24352 ;;		None
 24353 ;; Tracked objects:
 24354 ;;		On entry : 3F/0
 24355 ;;		On exit  : 3F/0
 24356 ;;		Unchanged: 3F/0
 24357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24361 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24362 ;;Total ram usage:        0 bytes
 24363 ;; Hardware stack levels used: 1
 24364 ;; Hardware stack levels required when called: 4
 24365 ;; This function calls:
 24366 ;;		Nothing
 24367 ;; This function is called by:
 24368 ;;		_SYSTEM_Initialize
 24369 ;; This function uses a non-reentrant model
 24370 ;;
 24371                           
 24372                           	psect	text99
 24373  009298                     __ptext99:
 24374                           	callstack 0
 24375  009298                     _INTERRUPT_Initialize:
 24376                           	callstack 25
 24377                           
 24378                           ; BSR set to: 0
 24379                           ;mcc_generated_files/interrupt_manager.c: 55:     INTCONbits.IPEN = 0;
 24380                           
 24381                           ; BSR set to: 14
 24382                           ;incstack = 0
 24383  009298  9AF2               	bcf	242,5,c	;volatile
 24384                           
 24385                           ; BSR set to: 0
 24386  00929A  0012               	return		;funcret
 24387  00929C                     __end_of_INTERRUPT_Initialize:
 24388                           	callstack 0
 24389                           
 24390 ;; *************** function _I2C1_Initialize *****************
 24391 ;; Defined at:
 24392 ;;		line 167 in file "mcc_generated_files/i2c1_master.c"
 24393 ;; Parameters:    Size  Location     Type
 24394 ;;		None
 24395 ;; Auto vars:     Size  Location     Type
 24396 ;;		None
 24397 ;; Return value:  Size  Location     Type
 24398 ;;                  1    wreg      void 
 24399 ;; Registers used:
 24400 ;;		wreg, status,2
 24401 ;; Tracked objects:
 24402 ;;		On entry : 3F/E
 24403 ;;		On exit  : 3F/E
 24404 ;;		Unchanged: 3F/0
 24405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24406 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24409 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24410 ;;Total ram usage:        0 bytes
 24411 ;; Hardware stack levels used: 1
 24412 ;; Hardware stack levels required when called: 4
 24413 ;; This function calls:
 24414 ;;		Nothing
 24415 ;; This function is called by:
 24416 ;;		_SYSTEM_Initialize
 24417 ;; This function uses a non-reentrant model
 24418 ;;
 24419                           
 24420                           	psect	text100
 24421  00910E                     __ptext100:
 24422                           	callstack 0
 24423  00910E                     _I2C1_Initialize:
 24424                           	callstack 25
 24425                           
 24426                           ; BSR set to: 14
 24427                           ;mcc_generated_files/i2c1_master.c: 169:     SSP1STAT = 0x80;
 24428                           
 24429                           ; BSR set to: 0
 24430                           ;incstack = 0
 24431  00910E  0E80               	movlw	128
 24432  009110  6E95               	movwf	149,c	;volatile
 24433                           
 24434                           ;mcc_generated_files/i2c1_master.c: 170:     SSP1CON1 = 0x08;
 24435  009112  0E08               	movlw	8
 24436  009114  6E96               	movwf	150,c	;volatile
 24437                           
 24438                           ;mcc_generated_files/i2c1_master.c: 171:     SSP1CON2 = 0x00;
 24439  009116  0E00               	movlw	0
 24440  009118  6E97               	movwf	151,c	;volatile
 24441                           
 24442                           ;mcc_generated_files/i2c1_master.c: 172:     SSP1ADD = 0x9F;
 24443  00911A  0E9F               	movlw	159
 24444  00911C  6E93               	movwf	147,c	;volatile
 24445                           
 24446                           ; BSR set to: 14
 24447                           ;mcc_generated_files/i2c1_master.c: 173:     SSP1CON1bits.SSPEN = 0;
 24448  00911E  9A96               	bcf	150,5,c	;volatile
 24449                           
 24450                           ; BSR set to: 14
 24451  009120  0012               	return		;funcret
 24452  009122                     __end_of_I2C1_Initialize:
 24453                           	callstack 0
 24454                           
 24455 ;; *************** function _EUSART1_Initialize *****************
 24456 ;; Defined at:
 24457 ;;		line 88 in file "mcc_generated_files/eusart1.c"
 24458 ;; Parameters:    Size  Location     Type
 24459 ;;		None
 24460 ;; Auto vars:     Size  Location     Type
 24461 ;;		None
 24462 ;; Return value:  Size  Location     Type
 24463 ;;                  1    wreg      void 
 24464 ;; Registers used:
 24465 ;;		wreg, status,2, status,0, cstack
 24466 ;; Tracked objects:
 24467 ;;		On entry : 3F/E
 24468 ;;		On exit  : 3F/E
 24469 ;;		Unchanged: 0/0
 24470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24474 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24475 ;;Total ram usage:        0 bytes
 24476 ;; Hardware stack levels used: 1
 24477 ;; Hardware stack levels required when called: 5
 24478 ;; This function calls:
 24479 ;;		_EUSART1_SetErrorHandler
 24480 ;;		_EUSART1_SetFramingErrorHandler
 24481 ;;		_EUSART1_SetOverrunErrorHandler
 24482 ;;		_EUSART1_SetRxInterruptHandler
 24483 ;;		_EUSART1_SetTxInterruptHandler
 24484 ;; This function is called by:
 24485 ;;		_SYSTEM_Initialize
 24486 ;; This function uses a non-reentrant model
 24487 ;;
 24488                           
 24489                           	psect	text101
 24490  007B4E                     __ptext101:
 24491                           	callstack 0
 24492  007B4E                     _EUSART1_Initialize:
 24493                           	callstack 24
 24494                           
 24495                           ; BSR set to: 14
 24496                           ;mcc_generated_files/eusart1.c: 91:     PIE3bits.RC1IE = 0;
 24497                           
 24498                           ; BSR set to: 14
 24499                           ;incstack = 0
 24500  007B4E  9BC5               	bcf	197,5,b	;volatile
 24501                           
 24502                           ; BSR set to: 14
 24503                           ;mcc_generated_files/eusart1.c: 92:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
 24504  007B50  0E3C               	movlw	low _EUSART1_Receive_ISR
 24505  007B52  6E10               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler^0,c
 24506  007B54  0E74               	movlw	high _EUSART1_Receive_ISR
 24507  007B56  6E11               	movwf	(EUSART1_SetRxInterruptHandler@interruptHandler+1)^0,c
 24508  007B58  ECE4  F048         	call	_EUSART1_SetRxInterruptHandler	;wreg free
 24509                           
 24510                           ; BSR set to: 14
 24511                           ;mcc_generated_files/eusart1.c: 93:     PIE3bits.TX1IE = 0;
 24512  007B5C  99C5               	bcf	197,4,b	;volatile
 24513                           
 24514                           ;mcc_generated_files/eusart1.c: 94:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
 24515  007B5E  0EB2               	movlw	low _EUSART1_Transmit_ISR
 24516  007B60  6E10               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler^0,c
 24517  007B62  0E8A               	movlw	high _EUSART1_Transmit_ISR
 24518  007B64  6E11               	movwf	(EUSART1_SetTxInterruptHandler@interruptHandler+1)^0,c
 24519  007B66  ECDF  F048         	call	_EUSART1_SetTxInterruptHandler	;wreg free
 24520                           
 24521                           ; BSR set to: 14
 24522                           ;mcc_generated_files/eusart1.c: 98:     BAUD1CON = 0x08;
 24523  007B6A  0E08               	movlw	8
 24524  007B6C  6E9F               	movwf	159,c	;volatile
 24525                           
 24526                           ; BSR set to: 14
 24527                           ;mcc_generated_files/eusart1.c: 101:     RC1STA = 0x90;
 24528  007B6E  0E90               	movlw	144
 24529  007B70  6E9D               	movwf	157,c	;volatile
 24530                           
 24531                           ; BSR set to: 14
 24532                           ;mcc_generated_files/eusart1.c: 104:     TX1STA = 0x24;
 24533  007B72  0E24               	movlw	36
 24534  007B74  6E9E               	movwf	158,c	;volatile
 24535                           
 24536                           ; BSR set to: 14
 24537                           ;mcc_generated_files/eusart1.c: 107:     SP1BRGL = 0x82;
 24538  007B76  0E82               	movlw	130
 24539  007B78  6E9B               	movwf	155,c	;volatile
 24540                           
 24541                           ; BSR set to: 14
 24542                           ;mcc_generated_files/eusart1.c: 110:     SP1BRGH = 0x06;
 24543  007B7A  0E06               	movlw	6
 24544  007B7C  6E9C               	movwf	156,c	;volatile
 24545                           
 24546                           ; BSR set to: 14
 24547                           ;mcc_generated_files/eusart1.c: 113:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
 24548  007B7E  0ECA               	movlw	low _EUSART1_DefaultFramingErrorHandler
 24549  007B80  6E10               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
 24550  007B82  0E92               	movlw	high _EUSART1_DefaultFramingErrorHandler
 24551  007B84  6E11               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
 24552  007B86  ECEE  F048         	call	_EUSART1_SetFramingErrorHandler	;wreg free
 24553                           
 24554                           ; BSR set to: 14
 24555                           ;mcc_generated_files/eusart1.c: 114:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
 24556  007B8A  0E82               	movlw	low _EUSART1_DefaultOverrunErrorHandler
 24557  007B8C  6E10               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
 24558  007B8E  0E92               	movlw	high _EUSART1_DefaultOverrunErrorHandler
 24559  007B90  6E11               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
 24560  007B92  ECE9  F048         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
 24561                           
 24562                           ; BSR set to: 14
 24563                           ;mcc_generated_files/eusart1.c: 115:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
 24564  007B96  0E88               	movlw	low _EUSART1_DefaultErrorHandler
 24565  007B98  6E10               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
 24566  007B9A  0E92               	movlw	high _EUSART1_DefaultErrorHandler
 24567  007B9C  6E11               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
 24568  007B9E  ECF3  F048         	call	_EUSART1_SetErrorHandler	;wreg free
 24569                           
 24570                           ;mcc_generated_files/eusart1.c: 117:     eusart1RxLastError.status = 0;
 24571  007BA2  0E00               	movlw	0
 24572  007BA4  0101               	movlb	1	; () banked
 24573  007BA6  6F99               	movwf	_eusart1RxLastError& (0+255),b	;volatile
 24574                           
 24575                           ;mcc_generated_files/eusart1.c: 120:     eusart1TxHead = 0;
 24576  007BA8  0E00               	movlw	0
 24577  007BAA  0100               	movlb	0	; () banked
 24578  007BAC  6F97               	movwf	_eusart1TxHead& (0+255),b	;volatile
 24579                           
 24580                           ;mcc_generated_files/eusart1.c: 121:     eusart1TxTail = 0;
 24581  007BAE  0E00               	movlw	0
 24582  007BB0  6F96               	movwf	_eusart1TxTail& (0+255),b	;volatile
 24583                           
 24584                           ;mcc_generated_files/eusart1.c: 122:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
 24585  007BB2  0E08               	movlw	8
 24586  007BB4  0101               	movlb	1	; () banked
 24587  007BB6  6FFE               	movwf	_eusart1TxBufferRemaining& (0+255),b	;volatile
 24588                           
 24589                           ;mcc_generated_files/eusart1.c: 124:     eusart1RxHead = 0;
 24590  007BB8  0E00               	movlw	0
 24591  007BBA  0100               	movlb	0	; () banked
 24592  007BBC  6F95               	movwf	_eusart1RxHead& (0+255),b	;volatile
 24593                           
 24594                           ;mcc_generated_files/eusart1.c: 125:     eusart1RxTail = 0;
 24595  007BBE  0E00               	movlw	0
 24596  007BC0  6F94               	movwf	_eusart1RxTail& (0+255),b	;volatile
 24597                           
 24598                           ;mcc_generated_files/eusart1.c: 126:     eusart1RxCount = 0;
 24599  007BC2  0E00               	movlw	0
 24600  007BC4  6F93               	movwf	_eusart1RxCount& (0+255),b	;volatile
 24601                           
 24602                           ; BSR set to: 0
 24603                           ;mcc_generated_files/eusart1.c: 129:     PIE3bits.RC1IE = 1;
 24604  007BC6  010E               	movlb	14	; () banked
 24605  007BC8  8BC5               	bsf	197,5,b	;volatile
 24606                           
 24607                           ; BSR set to: 14
 24608  007BCA  0012               	return		;funcret
 24609  007BCC                     __end_of_EUSART1_Initialize:
 24610                           	callstack 0
 24611                           
 24612 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
 24613 ;; Defined at:
 24614 ;;		line 276 in file "mcc_generated_files/eusart1.c"
 24615 ;; Parameters:    Size  Location     Type
 24616 ;;  interruptHan    2   15[COMRAM] PTR FTN()void 
 24617 ;;		 -> EUSART1_Transmit_ISR(1), 
 24618 ;; Auto vars:     Size  Location     Type
 24619 ;;		None
 24620 ;; Return value:  Size  Location     Type
 24621 ;;                  1    wreg      void 
 24622 ;; Registers used:
 24623 ;;		wreg, status,2, status,0
 24624 ;; Tracked objects:
 24625 ;;		On entry : 3F/E
 24626 ;;		On exit  : 3F/E
 24627 ;;		Unchanged: 3F/0
 24628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24629 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24632 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24633 ;;Total ram usage:        2 bytes
 24634 ;; Hardware stack levels used: 1
 24635 ;; Hardware stack levels required when called: 4
 24636 ;; This function calls:
 24637 ;;		Nothing
 24638 ;; This function is called by:
 24639 ;;		_EUSART1_Initialize
 24640 ;; This function uses a non-reentrant model
 24641 ;;
 24642                           
 24643                           	psect	text102
 24644  0091BE                     __ptext102:
 24645                           	callstack 0
 24646  0091BE                     _EUSART1_SetTxInterruptHandler:
 24647                           	callstack 24
 24648                           
 24649                           ; BSR set to: 14
 24650                           ;mcc_generated_files/eusart1.c: 277:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
 24651                           
 24652                           ; BSR set to: 14
 24653                           ;incstack = 0
 24654  0091BE  C010  F2ED         	movff	EUSART1_SetTxInterruptHandler@interruptHandler,_EUSART1_TxDefaultInterruptHandler
 24655  0091C2  C011  F2EE         	movff	EUSART1_SetTxInterruptHandler@interruptHandler+1,_EUSART1_TxDefaultInterruptHandl
      +                          er+1
 24656                           
 24657                           ; BSR set to: 14
 24658  0091C6  0012               	return		;funcret
 24659  0091C8                     __end_of_EUSART1_SetTxInterruptHandler:
 24660                           	callstack 0
 24661                           
 24662 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
 24663 ;; Defined at:
 24664 ;;		line 280 in file "mcc_generated_files/eusart1.c"
 24665 ;; Parameters:    Size  Location     Type
 24666 ;;  interruptHan    2   15[COMRAM] PTR FTN()void 
 24667 ;;		 -> EUSART1_Receive_ISR(1), 
 24668 ;; Auto vars:     Size  Location     Type
 24669 ;;		None
 24670 ;; Return value:  Size  Location     Type
 24671 ;;                  1    wreg      void 
 24672 ;; Registers used:
 24673 ;;		wreg, status,2, status,0
 24674 ;; Tracked objects:
 24675 ;;		On entry : 3F/E
 24676 ;;		On exit  : 3F/E
 24677 ;;		Unchanged: 3F/0
 24678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24679 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24682 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24683 ;;Total ram usage:        2 bytes
 24684 ;; Hardware stack levels used: 1
 24685 ;; Hardware stack levels required when called: 4
 24686 ;; This function calls:
 24687 ;;		Nothing
 24688 ;; This function is called by:
 24689 ;;		_EUSART1_Initialize
 24690 ;; This function uses a non-reentrant model
 24691 ;;
 24692                           
 24693                           	psect	text103
 24694  0091C8                     __ptext103:
 24695                           	callstack 0
 24696  0091C8                     _EUSART1_SetRxInterruptHandler:
 24697                           	callstack 24
 24698                           
 24699                           ; BSR set to: 14
 24700                           ;mcc_generated_files/eusart1.c: 281:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
 24701                           
 24702                           ; BSR set to: 14
 24703                           ;incstack = 0
 24704  0091C8  C010  F2EB         	movff	EUSART1_SetRxInterruptHandler@interruptHandler,_EUSART1_RxDefaultInterruptHandler
 24705  0091CC  C011  F2EC         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+1,_EUSART1_RxDefaultInterruptHandl
      +                          er+1
 24706                           
 24707                           ; BSR set to: 14
 24708  0091D0  0012               	return		;funcret
 24709  0091D2                     __end_of_EUSART1_SetRxInterruptHandler:
 24710                           	callstack 0
 24711                           
 24712 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
 24713 ;; Defined at:
 24714 ;;		line 268 in file "mcc_generated_files/eusart1.c"
 24715 ;; Parameters:    Size  Location     Type
 24716 ;;  interruptHan    2   15[COMRAM] PTR FTN()void 
 24717 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
 24718 ;; Auto vars:     Size  Location     Type
 24719 ;;		None
 24720 ;; Return value:  Size  Location     Type
 24721 ;;                  1    wreg      void 
 24722 ;; Registers used:
 24723 ;;		wreg, status,2, status,0
 24724 ;; Tracked objects:
 24725 ;;		On entry : 3F/E
 24726 ;;		On exit  : 3F/E
 24727 ;;		Unchanged: 3F/0
 24728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24729 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24730 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24732 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24733 ;;Total ram usage:        2 bytes
 24734 ;; Hardware stack levels used: 1
 24735 ;; Hardware stack levels required when called: 4
 24736 ;; This function calls:
 24737 ;;		Nothing
 24738 ;; This function is called by:
 24739 ;;		_EUSART1_Initialize
 24740 ;; This function uses a non-reentrant model
 24741 ;;
 24742                           
 24743                           	psect	text104
 24744  0091D2                     __ptext104:
 24745                           	callstack 0
 24746  0091D2                     _EUSART1_SetOverrunErrorHandler:
 24747                           	callstack 24
 24748                           
 24749                           ; BSR set to: 14
 24750                           ;mcc_generated_files/eusart1.c: 269:     EUSART1_OverrunErrorHandler = interruptHandler;
 24751                           
 24752                           ; BSR set to: 14
 24753                           ;incstack = 0
 24754  0091D2  C010  F2E7         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
 24755  0091D6  C011  F2E8         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
 24756                           
 24757                           ; BSR set to: 14
 24758  0091DA  0012               	return		;funcret
 24759  0091DC                     __end_of_EUSART1_SetOverrunErrorHandler:
 24760                           	callstack 0
 24761                           
 24762 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
 24763 ;; Defined at:
 24764 ;;		line 264 in file "mcc_generated_files/eusart1.c"
 24765 ;; Parameters:    Size  Location     Type
 24766 ;;  interruptHan    2   15[COMRAM] PTR FTN()void 
 24767 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
 24768 ;; Auto vars:     Size  Location     Type
 24769 ;;		None
 24770 ;; Return value:  Size  Location     Type
 24771 ;;                  1    wreg      void 
 24772 ;; Registers used:
 24773 ;;		wreg, status,2, status,0
 24774 ;; Tracked objects:
 24775 ;;		On entry : 3F/E
 24776 ;;		On exit  : 3F/E
 24777 ;;		Unchanged: 3F/0
 24778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24779 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24782 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24783 ;;Total ram usage:        2 bytes
 24784 ;; Hardware stack levels used: 1
 24785 ;; Hardware stack levels required when called: 4
 24786 ;; This function calls:
 24787 ;;		Nothing
 24788 ;; This function is called by:
 24789 ;;		_EUSART1_Initialize
 24790 ;; This function uses a non-reentrant model
 24791 ;;
 24792                           
 24793                           	psect	text105
 24794  0091DC                     __ptext105:
 24795                           	callstack 0
 24796  0091DC                     _EUSART1_SetFramingErrorHandler:
 24797                           	callstack 24
 24798                           
 24799                           ; BSR set to: 14
 24800                           ;mcc_generated_files/eusart1.c: 265:     EUSART1_FramingErrorHandler = interruptHandler;
 24801                           
 24802                           ; BSR set to: 14
 24803                           ;incstack = 0
 24804  0091DC  C010  F2E9         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
 24805  0091E0  C011  F2EA         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
 24806                           
 24807                           ; BSR set to: 14
 24808  0091E4  0012               	return		;funcret
 24809  0091E6                     __end_of_EUSART1_SetFramingErrorHandler:
 24810                           	callstack 0
 24811                           
 24812 ;; *************** function _EUSART1_SetErrorHandler *****************
 24813 ;; Defined at:
 24814 ;;		line 272 in file "mcc_generated_files/eusart1.c"
 24815 ;; Parameters:    Size  Location     Type
 24816 ;;  interruptHan    2   15[COMRAM] PTR FTN()void 
 24817 ;;		 -> EUSART1_DefaultErrorHandler(1), 
 24818 ;; Auto vars:     Size  Location     Type
 24819 ;;		None
 24820 ;; Return value:  Size  Location     Type
 24821 ;;                  1    wreg      void 
 24822 ;; Registers used:
 24823 ;;		wreg, status,2, status,0
 24824 ;; Tracked objects:
 24825 ;;		On entry : 3F/E
 24826 ;;		On exit  : 3F/E
 24827 ;;		Unchanged: 3F/0
 24828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24829 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24832 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24833 ;;Total ram usage:        2 bytes
 24834 ;; Hardware stack levels used: 1
 24835 ;; Hardware stack levels required when called: 4
 24836 ;; This function calls:
 24837 ;;		Nothing
 24838 ;; This function is called by:
 24839 ;;		_EUSART1_Initialize
 24840 ;; This function uses a non-reentrant model
 24841 ;;
 24842                           
 24843                           	psect	text106
 24844  0091E6                     __ptext106:
 24845                           	callstack 0
 24846  0091E6                     _EUSART1_SetErrorHandler:
 24847                           	callstack 24
 24848                           
 24849                           ; BSR set to: 14
 24850                           ;mcc_generated_files/eusart1.c: 273:     EUSART1_ErrorHandler = interruptHandler;
 24851                           
 24852                           ; BSR set to: 14
 24853                           ;incstack = 0
 24854  0091E6  C010  F2E5         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
 24855  0091EA  C011  F2E6         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
 24856                           
 24857                           ; BSR set to: 14
 24858  0091EE  0012               	return		;funcret
 24859  0091F0                     __end_of_EUSART1_SetErrorHandler:
 24860                           	callstack 0
 24861                           
 24862 ;; *************** function _ADCC_Initialize *****************
 24863 ;; Defined at:
 24864 ;;		line 62 in file "mcc_generated_files/adcc.c"
 24865 ;; Parameters:    Size  Location     Type
 24866 ;;		None
 24867 ;; Auto vars:     Size  Location     Type
 24868 ;;		None
 24869 ;; Return value:  Size  Location     Type
 24870 ;;                  1    wreg      void 
 24871 ;; Registers used:
 24872 ;;		wreg, status,2
 24873 ;; Tracked objects:
 24874 ;;		On entry : 3F/E
 24875 ;;		On exit  : 3F/F
 24876 ;;		Unchanged: 0/0
 24877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24881 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24882 ;;Total ram usage:        0 bytes
 24883 ;; Hardware stack levels used: 1
 24884 ;; Hardware stack levels required when called: 4
 24885 ;; This function calls:
 24886 ;;		Nothing
 24887 ;; This function is called by:
 24888 ;;		_SYSTEM_Initialize
 24889 ;; This function uses a non-reentrant model
 24890 ;;
 24891                           
 24892                           	psect	text107
 24893  008610                     __ptext107:
 24894                           	callstack 0
 24895  008610                     _ADCC_Initialize:
 24896                           	callstack 25
 24897                           
 24898                           ; BSR set to: 14
 24899                           ;mcc_generated_files/adcc.c: 66:     ADLTHL = 0x00;
 24900                           
 24901                           ; BSR set to: 14
 24902                           ;incstack = 0
 24903  008610  0E00               	movlw	0
 24904  008612  6E6A               	movwf	106,c	;volatile
 24905                           
 24906                           ;mcc_generated_files/adcc.c: 68:     ADLTHH = 0x00;
 24907  008614  0E00               	movlw	0
 24908  008616  6E6B               	movwf	107,c	;volatile
 24909                           
 24910                           ;mcc_generated_files/adcc.c: 70:     ADUTHL = 0x00;
 24911  008618  0E00               	movlw	0
 24912  00861A  6E6C               	movwf	108,c	;volatile
 24913                           
 24914                           ;mcc_generated_files/adcc.c: 72:     ADUTHH = 0x00;
 24915  00861C  0E00               	movlw	0
 24916  00861E  6E6D               	movwf	109,c	;volatile
 24917                           
 24918                           ;mcc_generated_files/adcc.c: 74:     ADSTPTL = 0x00;
 24919  008620  0E00               	movlw	0
 24920  008622  6E68               	movwf	104,c	;volatile
 24921                           
 24922                           ;mcc_generated_files/adcc.c: 76:     ADSTPTH = 0x00;
 24923  008624  0E00               	movlw	0
 24924  008626  6E69               	movwf	105,c	;volatile
 24925                           
 24926                           ;mcc_generated_files/adcc.c: 78:     ADRPT = 0x00;
 24927  008628  0E00               	movlw	0
 24928  00862A  6E66               	movwf	102,c	;volatile
 24929                           
 24930                           ;mcc_generated_files/adcc.c: 80:     ADPCH = 0x00;
 24931  00862C  0E00               	movlw	0
 24932  00862E  010F               	movlb	15	; () banked
 24933  008630  6F5F               	movwf	95,b	;volatile
 24934                           
 24935                           ;mcc_generated_files/adcc.c: 82:     ADCAP = 0x00;
 24936  008632  0E00               	movlw	0
 24937  008634  6F5D               	movwf	93,b	;volatile
 24938                           
 24939                           ;mcc_generated_files/adcc.c: 84:     ADPRE = 0x00;
 24940  008636  0E00               	movlw	0
 24941  008638  6F5E               	movwf	94,b	;volatile
 24942                           
 24943                           ;mcc_generated_files/adcc.c: 86:     ADCON1 = 0x00;
 24944  00863A  0E00               	movlw	0
 24945  00863C  6F59               	movwf	89,b	;volatile
 24946                           
 24947                           ;mcc_generated_files/adcc.c: 88:     ADCON2 = 0x00;
 24948  00863E  0E00               	movlw	0
 24949  008640  6F5A               	movwf	90,b	;volatile
 24950                           
 24951                           ;mcc_generated_files/adcc.c: 90:     ADCON3 = 0x00;
 24952  008642  0E00               	movlw	0
 24953  008644  6F5B               	movwf	91,b	;volatile
 24954                           
 24955                           ;mcc_generated_files/adcc.c: 92:     ADSTAT = 0x00;
 24956  008646  0E00               	movlw	0
 24957  008648  6E65               	movwf	101,c	;volatile
 24958                           
 24959                           ;mcc_generated_files/adcc.c: 94:     ADREF = 0x00;
 24960  00864A  0E00               	movlw	0
 24961  00864C  6F58               	movwf	88,b	;volatile
 24962                           
 24963                           ;mcc_generated_files/adcc.c: 96:     ADACT = 0x00;
 24964  00864E  0E00               	movlw	0
 24965  008650  6F56               	movwf	86,b	;volatile
 24966                           
 24967                           ;mcc_generated_files/adcc.c: 98:     ADCLK = 0x3F;
 24968  008652  0E3F               	movlw	63
 24969  008654  6F57               	movwf	87,b	;volatile
 24970                           
 24971                           ;mcc_generated_files/adcc.c: 100:     ADCON0 = 0x80;
 24972  008656  0E80               	movlw	128
 24973  008658  6E60               	movwf	96,c	;volatile
 24974                           
 24975                           ;mcc_generated_files/adcc.c: 102:     ADACQ = 0x00;
 24976  00865A  0E00               	movlw	0
 24977  00865C  6F5C               	movwf	92,b	;volatile
 24978                           
 24979                           ; BSR set to: 15
 24980  00865E  0012               	return		;funcret
 24981  008660                     __end_of_ADCC_Initialize:
 24982                           	callstack 0
 24983                           
 24984 ;; *************** function _EUSART1_is_rx_ready *****************
 24985 ;; Defined at:
 24986 ;;		line 137 in file "mcc_generated_files/eusart1.c"
 24987 ;; Parameters:    Size  Location     Type
 24988 ;;		None
 24989 ;; Auto vars:     Size  Location     Type
 24990 ;;		None
 24991 ;; Return value:  Size  Location     Type
 24992 ;;                  1    wreg      _Bool 
 24993 ;; Registers used:
 24994 ;;		wreg, status,2
 24995 ;; Tracked objects:
 24996 ;;		On entry : 0/1
 24997 ;;		On exit  : 3F/0
 24998 ;;		Unchanged: 0/0
 24999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25003 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25004 ;;Total ram usage:        0 bytes
 25005 ;; Hardware stack levels used: 1
 25006 ;; Hardware stack levels required when called: 4
 25007 ;; This function calls:
 25008 ;;		Nothing
 25009 ;; This function is called by:
 25010 ;;		_main
 25011 ;; This function uses a non-reentrant model
 25012 ;;
 25013                           
 25014                           	psect	text108
 25015  009134                     __ptext108:
 25016                           	callstack 0
 25017  009134                     _EUSART1_is_rx_ready:
 25018                           	callstack 26
 25019                           
 25020                           ;mcc_generated_files/eusart1.c: 139:     return (eusart1RxCount ? 1 : 0);
 25021                           
 25022                           ; BSR set to: 15
 25023                           ;incstack = 0
 25024  009134  0100               	movlb	0	; () banked
 25025  009136  5193               	movf	_eusart1RxCount& (0+255),w,b	;volatile
 25026  009138  B4D8               	btfsc	status,2,c
 25027  00913A  D002               	goto	u18210
 25028  00913C  0E01               	movlw	1
 25029  00913E  0012               	return	
 25030  009140                     u18210:
 25031  009140  0E00               	movlw	0
 25032                           
 25033                           ; BSR set to: 0
 25034  009142  0012               	return		;funcret
 25035  009144                     __end_of_EUSART1_is_rx_ready:
 25036                           	callstack 0
 25037                           
 25038 ;; *************** function _ControlMotor *****************
 25039 ;; Defined at:
 25040 ;;		line 703 in file "outputs_MC50.c"
 25041 ;; Parameters:    Size  Location     Type
 25042 ;;		None
 25043 ;; Auto vars:     Size  Location     Type
 25044 ;;  stateMotor      1   23[COMRAM] enum E10381
 25045 ;; Return value:  Size  Location     Type
 25046 ;;                  1    wreg      void 
 25047 ;; Registers used:
 25048 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 25049 ;; Tracked objects:
 25050 ;;		On entry : 3E/1
 25051 ;;		On exit  : 3E/0
 25052 ;;		Unchanged: 0/0
 25053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25054 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25055 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25056 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25057 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25058 ;;Total ram usage:        7 bytes
 25059 ;; Hardware stack levels used: 1
 25060 ;; Hardware stack levels required when called: 5
 25061 ;; This function calls:
 25062 ;;		_VerifyElectricalBrake
 25063 ;; This function is called by:
 25064 ;;		_main
 25065 ;; This function uses a non-reentrant model
 25066 ;;
 25067                           
 25068                           	psect	text109
 25069  00474E                     __ptext109:
 25070                           	callstack 0
 25071  00474E                     _ControlMotor:
 25072                           	callstack 25
 25073                           
 25074                           ;outputs_MC50.c: 707:     if((var_sys.TimeMaxMotorIsON<=0) && (var_sys.WorkTimeMaxAlarmS
      +                          tate!=Clear) && (var_sys.LearningIsEnabled==NO) && (var_sys.PositionIsLost==NO)){
 25075                           
 25076                           ; BSR set to: 0
 25077                           ;incstack = 0
 25078  00474E  0101               	movlb	1	; () banked
 25079  004750  5118               	movf	(_var_sys+24)& (0+255),w,b	;volatile
 25080  004752  1119               	iorwf	(_var_sys+25)& (0+255),w,b	;volatile
 25081  004754  111A               	iorwf	(_var_sys+26)& (0+255),w,b	;volatile
 25082  004756  111B               	iorwf	(_var_sys+27)& (0+255),w,b	;volatile
 25083  004758  A4D8               	btfss	status,2,c
 25084  00475A  D00D               	goto	l16857
 25085                           
 25086                           ; BSR set to: 1
 25087  00475C  5142               	movf	(_var_sys+66)& (0+255),w,b	;volatile
 25088  00475E  B4D8               	btfsc	status,2,c
 25089  004760  D00A               	goto	l16857
 25090                           
 25091                           ; BSR set to: 1
 25092  004762  5126               	movf	(_var_sys+38)& (0+255),w,b	;volatile
 25093  004764  A4D8               	btfss	status,2,c
 25094  004766  D007               	goto	l16857
 25095                           
 25096                           ; BSR set to: 1
 25097  004768  5148               	movf	(_var_sys+72)& (0+255),w,b	;volatile
 25098  00476A  A4D8               	btfss	status,2,c
 25099  00476C  D004               	goto	l16857
 25100                           
 25101                           ; BSR set to: 1
 25102                           ;outputs_MC50.c: 708:         var_sys.StateMotor = Stopped;
 25103  00476E  0E00               	movlw	0
 25104  004770  6F00               	movwf	_var_sys& (0+255),b	;volatile
 25105                           
 25106                           ;outputs_MC50.c: 709:         var_sys.WorkTimeMaxAlarmState=EmAlarme;
 25107  004772  0E02               	movlw	2
 25108  004774  D007               	goto	L100
 25109  004776                     l16857:
 25110                           
 25111                           ; BSR set to: 1
 25112  004776  0542               	decf	(_var_sys+66)& (0+255),w,b	;volatile
 25113  004778  A4D8               	btfss	status,2,c
 25114  00477A  D005               	goto	l16863
 25115                           
 25116                           ; BSR set to: 1
 25117  00477C  5100               	movf	_var_sys& (0+255),w,b	;volatile
 25118  00477E  A4D8               	btfss	status,2,c
 25119  004780  D002               	goto	l16863
 25120                           
 25121                           ; BSR set to: 1
 25122                           ;outputs_MC50.c: 716:     {;outputs_MC50.c: 717:          var_sys.WorkTimeMaxAlarmState=
      +                          Clear;
 25123  004782  0E00               	movlw	0
 25124  004784                     L100:
 25125  004784  6F42               	movwf	(_var_sys+66)& (0+255),b	;volatile
 25126  004786                     l16863:
 25127                           
 25128                           ; BSR set to: 1
 25129                           ;outputs_MC50.c: 721:     stateMotor_enum stateMotor=VerifyElectricalBrake(var_sys.State
      +                          Motor);
 25130  004786  5100               	movf	_var_sys& (0+255),w,b	;volatile
 25131  004788  EC61  F03E         	call	_VerifyElectricalBrake
 25132  00478C  6E18               	movwf	ControlMotor@stateMotor^0,c
 25133                           
 25134                           ;outputs_MC50.c: 722:     if(stateMotor == Stopped )
 25135  00478E  5018               	movf	ControlMotor@stateMotor^0,w,c
 25136  004790  A4D8               	btfss	status,2,c
 25137  004792  D00A               	goto	l16873
 25138                           
 25139                           ;outputs_MC50.c: 723:     {;outputs_MC50.c: 724:         var_sys.InStoping = YES;
 25140  004794  0E01               	movlw	1
 25141  004796  0101               	movlb	1	; () banked
 25142  004798  6F0D               	movwf	(_var_sys+13)& (0+255),b	;volatile
 25143                           
 25144                           ; BSR set to: 1
 25145                           ;outputs_MC50.c: 725:         if(ts_system.ts_TRIACWait>=0)
 25146  00479A  BFA1               	btfsc	(_ts_system+7)& (0+255),7,b	;volatile
 25147  00479C  0012               	return	
 25148                           
 25149                           ; BSR set to: 1
 25150                           
 25151                           ;outputs_MC50.c: 726:         {;outputs_MC50.c: 727:             do { LATEbits.LATE1 = 0
      +                          ; } while(0);
 25152  00479E  9287               	bcf	135,1,c	;volatile
 25153                           
 25154                           ; BSR set to: 1
 25155                           
 25156                           ;outputs_MC50.c: 728:             do { LATEbits.LATE0 = 0; } while(0);
 25157  0047A0  9087               	bcf	135,0,c	;volatile
 25158  0047A2                     l16871:
 25159                           
 25160                           ; BSR set to: 1
 25161                           ;outputs_MC50.c: 729:             var_sys.Activatecounter = stoped ;
 25162  0047A2  0E00               	movlw	0
 25163  0047A4  6F16               	movwf	(_var_sys+22)& (0+255),b	;volatile
 25164  0047A6  0012               	return	
 25165  0047A8                     l16873:
 25166  0047A8  0100               	movlb	0	; () banked
 25167  0047AA  05AF               	decf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 25168  0047AC  A4D8               	btfss	status,2,c
 25169  0047AE  D022               	goto	l16889
 25170                           
 25171                           ; BSR set to: 0
 25172  0047B0  0579               	decf	(_brakeElectric_st+1)& (0+255),w,b
 25173  0047B2  A4D8               	btfss	status,2,c
 25174  0047B4  D01F               	goto	l16889
 25175                           
 25176                           ; BSR set to: 0
 25177  0047B6  0101               	movlb	1	; () banked
 25178  0047B8  5100               	movf	_var_sys& (0+255),w,b	;volatile
 25179  0047BA  A4D8               	btfss	status,2,c
 25180  0047BC  D01B               	goto	l16889
 25181                           
 25182                           ; BSR set to: 1
 25183  0047BE  5018               	movf	ControlMotor@stateMotor^0,w,c
 25184  0047C0  A4D8               	btfss	status,2,c
 25185                           
 25186                           ; BSR set to: 1
 25187  0047C2  BFC3               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 25188  0047C4  D017               	goto	l16889
 25189  0047C6  51C3               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 25190  0047C8  E103               	bnz	u19870
 25191  0047CA  05C2               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 25192  0047CC  A0D8               	btfss	status,0,c
 25193  0047CE  D012               	goto	l16889
 25194  0047D0                     u19870:
 25195                           
 25196                           ; BSR set to: 1
 25197  0047D0  BFDB               	btfsc	(_ts_system+65)& (0+255),7,b	;volatile
 25198  0047D2  D005               	goto	u19880
 25199  0047D4  51DB               	movf	(_ts_system+65)& (0+255),w,b	;volatile
 25200  0047D6  E10E               	bnz	l16889
 25201  0047D8  05DA               	decf	(_ts_system+64)& (0+255),w,b	;volatile
 25202  0047DA  B0D8               	btfsc	status,0,c
 25203  0047DC  D00B               	goto	l16889
 25204  0047DE                     u19880:
 25205                           
 25206                           ; BSR set to: 1
 25207                           ;outputs_MC50.c: 739:     {;outputs_MC50.c: 742:         if ( ts_system.TimeElectricBrak
      +                          e<(((5+6)*( 100/50))-(2*( 100/50))) )
 25208  0047DE  BFC3               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 25209  0047E0  D006               	goto	u19890
 25210  0047E2  51C3               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 25211  0047E4  E103               	bnz	u19891
 25212  0047E6  0E12               	movlw	18
 25213  0047E8  5DC2               	subwf	(_ts_system+40)& (0+255),w,b	;volatile
 25214  0047EA  B0D8               	btfsc	status,0,c
 25215  0047EC                     u19891:
 25216  0047EC  0012               	return	
 25217  0047EE                     u19890:
 25218                           
 25219                           ; BSR set to: 1
 25220                           
 25221                           ;outputs_MC50.c: 743:         {;outputs_MC50.c: 748:             do { LATEbits.LATE1 = 1
      +                          ; } while(0);
 25222  0047EE  8287               	bsf	135,1,c	;volatile
 25223                           
 25224                           ; BSR set to: 1
 25225                           
 25226                           ;outputs_MC50.c: 749:             do { LATEbits.LATE0 = 1; } while(0);
 25227  0047F0  8087               	bsf	135,0,c	;volatile
 25228  0047F2  D7D7               	goto	l16871
 25229  0047F4                     l16889:
 25230  0047F4  0418               	decf	ControlMotor@stateMotor^0,w,c
 25231  0047F6  B4D8               	btfsc	status,2,c
 25232  0047F8  D004               	goto	u19910
 25233  0047FA  0E02               	movlw	2
 25234  0047FC  1818               	xorwf	ControlMotor@stateMotor^0,w,c
 25235  0047FE  A4D8               	btfss	status,2,c
 25236  004800  D063               	goto	l16919
 25237  004802                     u19910:
 25238  004802  0101               	movlb	1	; () banked
 25239  004804  5104               	movf	(_var_sys+4)& (0+255),w,b	;volatile
 25240  004806  A4D8               	btfss	status,2,c
 25241  004808  D05F               	goto	l16919
 25242                           
 25243                           ; BSR set to: 1
 25244                           ;outputs_MC50.c: 761:     {;outputs_MC50.c: 762:         if((PORTEbits.RE1==0 && var_sys
      +                          _NVM.Direction_motor == 0)||(PORTEbits.RE0==0 && var_sys_NVM.Direction_motor == 1))
 25245  00480A  B291               	btfsc	145,1,c	;volatile
 25246  00480C  D004               	goto	u19940
 25247                           
 25248                           ; BSR set to: 1
 25249  00480E  0100               	movlb	0	; () banked
 25250  004810  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 25251  004812  B4D8               	btfsc	status,2,c
 25252  004814  D006               	goto	u19960
 25253  004816                     u19940:
 25254  004816  B091               	btfsc	145,0,c	;volatile
 25255  004818  D04F               	goto	l2348
 25256  00481A  0100               	movlb	0	; () banked
 25257  00481C  05B3               	decf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 25258  00481E  A4D8               	btfss	status,2,c
 25259  004820  D04B               	goto	l2348
 25260  004822                     u19960:
 25261                           
 25262                           ; BSR set to: 0
 25263                           ;outputs_MC50.c: 763:         {;outputs_MC50.c: 764:             if((PORTEbits.RE0==0 &&
      +                           var_sys_NVM.Direction_motor == 0)||(PORTEbits.RE1==0 && var_sys_NVM.Direction_motor == 
      +                          1))
 25264  004822  B091               	btfsc	145,0,c	;volatile
 25265  004824  D003               	goto	u19980
 25266                           
 25267                           ; BSR set to: 0
 25268  004826  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 25269  004828  B4D8               	btfsc	status,2,c
 25270  00482A  D005               	goto	u20000
 25271  00482C                     u19980:
 25272                           
 25273                           ; BSR set to: 0
 25274  00482C  B291               	btfsc	145,1,c	;volatile
 25275  00482E  D03A               	goto	l16915
 25276                           
 25277                           ; BSR set to: 0
 25278  004830  05B3               	decf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 25279  004832  A4D8               	btfss	status,2,c
 25280  004834  D037               	goto	l16915
 25281  004836                     u20000:
 25282                           
 25283                           ; BSR set to: 0
 25284                           ;outputs_MC50.c: 765:             {;outputs_MC50.c: 766:                 var_sys.InStopi
      +                          ng = NO;
 25285  004836  0E00               	movlw	0
 25286  004838  0101               	movlb	1	; () banked
 25287  00483A  6F0D               	movwf	(_var_sys+13)& (0+255),b	;volatile
 25288                           
 25289                           ;outputs_MC50.c: 767:                 ts_system.ts_TRIACWait=200;
 25290  00483C  0E00               	movlw	0
 25291  00483E  6FA1               	movwf	(_ts_system+7)& (0+255),b	;volatile
 25292  004840  0EC8               	movlw	200
 25293  004842  6FA0               	movwf	(_ts_system+6)& (0+255),b	;volatile
 25294                           
 25295                           ;outputs_MC50.c: 768:                 ts_system.TimeChargeCondesador=(1000/50);
 25296  004844  0E00               	movlw	0
 25297  004846  6FB5               	movwf	(_ts_system+27)& (0+255),b	;volatile
 25298  004848  0E14               	movlw	20
 25299  00484A  6FB4               	movwf	(_ts_system+26)& (0+255),b	;volatile
 25300                           
 25301                           ; BSR set to: 1
 25302                           ;outputs_MC50.c: 769:                 if (var_sys.FimCurso_CloseIsEnabled == YES|| var_s
      +                          ys.Statedoorcontrol == st_Closed ){
 25303  00484C  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
 25304  00484E  B4D8               	btfsc	status,2,c
 25305  004850  D003               	goto	u20020
 25306                           
 25307                           ; BSR set to: 1
 25308  004852  051C               	decf	(_var_sys+28)& (0+255),w,b	;volatile
 25309  004854  A4D8               	btfss	status,2,c
 25310  004856  D024               	goto	l16913
 25311  004858                     u20020:
 25312                           
 25313                           ; BSR set to: 1
 25314                           ;outputs_MC50.c: 770:                 var_sys.TimeMaxMotorIsON=((unsigned int)var_sys_NV
      +                          M.velocityDecelaration+((unsigned int)var_sys_NVM.decelarationOpen)*( 500/50))+var_sys_N
      +                          VM.learningTimeToOpen + (1000/50)*4;
 25315  004858  0100               	movlb	0	; () banked
 25316  00485A  5198               	movf	_var_sys_NVM& (0+255),w,b	;volatile
 25317  00485C  0D0A               	mullw	10
 25318  00485E  CFF3 F012          	movff	prodl,??_ControlMotor
 25319  004862  CFF4 F013          	movff	prodh,??_ControlMotor+1
 25320  004866  51B0               	movf	(_var_sys_NVM+24)& (0+255),w,b	;volatile
 25321  004868  2612               	addwf	??_ControlMotor^0,f,c
 25322  00486A  0E00               	movlw	0
 25323  00486C  2213               	addwfc	(??_ControlMotor+1)^0,f,c
 25324  00486E  5012               	movf	??_ControlMotor^0,w,c
 25325  004870  25CC               	addwf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 25326  004872  6E14               	movwf	(??_ControlMotor+2)^0,c
 25327  004874  5013               	movf	(??_ControlMotor+1)^0,w,c
 25328  004876  21CD               	addwfc	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 25329  004878  6E15               	movwf	(??_ControlMotor+3)^0,c
 25330  00487A  0E00               	movlw	0
 25331  00487C  21CE               	addwfc	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 25332  00487E  6E16               	movwf	(??_ControlMotor+4)^0,c
 25333  004880  0E00               	movlw	0
 25334  004882  21CF               	addwfc	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 25335  004884  6E17               	movwf	(??_ControlMotor+5)^0,c
 25336  004886  0E50               	movlw	80
 25337  004888  2414               	addwf	(??_ControlMotor+2)^0,w,c
 25338  00488A  0101               	movlb	1	; () banked
 25339  00488C  6F18               	movwf	(_var_sys+24)& (0+255),b	;volatile
 25340  00488E  0E00               	movlw	0
 25341  004890  2015               	addwfc	(??_ControlMotor+3)^0,w,c
 25342  004892  6F19               	movwf	(_var_sys+25)& (0+255),b	;volatile
 25343  004894  0E00               	movlw	0
 25344  004896  2016               	addwfc	(??_ControlMotor+4)^0,w,c
 25345  004898  6F1A               	movwf	(_var_sys+26)& (0+255),b	;volatile
 25346  00489A  0E00               	movlw	0
 25347  00489C  2017               	addwfc	(??_ControlMotor+5)^0,w,c
 25348  00489E  6F1B               	movwf	(_var_sys+27)& (0+255),b	;volatile
 25349  0048A0                     l16913:
 25350                           
 25351                           ; BSR set to: 1
 25352                           ;outputs_MC50.c: 775:                 var_sys.Statedoorcontrol = st_Opening;
 25353  0048A0  0E02               	movlw	2
 25354  0048A2  6F1C               	movwf	(_var_sys+28)& (0+255),b	;volatile
 25355  0048A4                     l16915:
 25356                           
 25357                           ;outputs_MC50.c: 779:             if (var_sys_NVM.Direction_motor == 0){do { LATEbits.LA
      +                          TE0 = 1; } while(0);}
 25358  0048A4  0100               	movlb	0	; () banked
 25359  0048A6  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 25360  0048A8  A4D8               	btfss	status,2,c
 25361  0048AA  D002               	goto	l2365
 25362                           
 25363                           ; BSR set to: 0
 25364  0048AC  8087               	bsf	135,0,c	;volatile
 25365  0048AE  D001               	goto	l16917
 25366  0048B0                     l2365:
 25367                           
 25368                           ; BSR set to: 0
 25369  0048B0  8287               	bsf	135,1,c	;volatile
 25370  0048B2                     l16917:
 25371                           
 25372                           ; BSR set to: 0
 25373                           ;outputs_MC50.c: 781:             var_sys.Activatecounter = open ;
 25374  0048B2  0E01               	movlw	1
 25375  0048B4  0101               	movlb	1	; () banked
 25376  0048B6  6F16               	movwf	(_var_sys+22)& (0+255),b	;volatile
 25377  0048B8                     l2348:
 25378                           
 25379                           ;outputs_MC50.c: 785:            if (var_sys_NVM.Direction_motor == 0){do { LATEbits.LAT
      +                          E1 = 0; } while(0);}
 25380  0048B8  0100               	movlb	0	; () banked
 25381  0048BA  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 25382  0048BC  A4D8               	btfss	status,2,c
 25383  0048BE  D002               	goto	l2371
 25384                           
 25385                           ; BSR set to: 0
 25386  0048C0  9287               	bcf	135,1,c	;volatile
 25387  0048C2  0012               	return	
 25388  0048C4                     l2371:
 25389                           
 25390                           ; BSR set to: 0
 25391  0048C4  9087               	bcf	135,0,c	;volatile
 25392  0048C6  0012               	return	
 25393  0048C8                     l16919:
 25394  0048C8  0E03               	movlw	3
 25395  0048CA  1818               	xorwf	ControlMotor@stateMotor^0,w,c
 25396  0048CC  A4D8               	btfss	status,2,c
 25397  0048CE  0012               	return	
 25398  0048D0  0101               	movlb	1	; () banked
 25399  0048D2  5103               	movf	(_var_sys+3)& (0+255),w,b	;volatile
 25400  0048D4  A4D8               	btfss	status,2,c
 25401  0048D6  0012               	return	
 25402                           
 25403                           ; BSR set to: 1
 25404                           ;outputs_MC50.c: 791:     {;outputs_MC50.c: 792:         if((PORTEbits.RE0==0 && var_sys
      +                          _NVM.Direction_motor == 0)||(PORTEbits.RE1==0 && var_sys_NVM.Direction_motor == 1))
 25405  0048D8  B091               	btfsc	145,0,c	;volatile
 25406  0048DA  D004               	goto	u20080
 25407                           
 25408                           ; BSR set to: 1
 25409  0048DC  0100               	movlb	0	; () banked
 25410  0048DE  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 25411  0048E0  B4D8               	btfsc	status,2,c
 25412  0048E2  D006               	goto	u20100
 25413  0048E4                     u20080:
 25414  0048E4  B291               	btfsc	145,1,c	;volatile
 25415  0048E6  D050               	goto	l2375
 25416  0048E8  0100               	movlb	0	; () banked
 25417  0048EA  05B3               	decf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 25418  0048EC  A4D8               	btfss	status,2,c
 25419  0048EE  D04C               	goto	l2375
 25420  0048F0                     u20100:
 25421                           
 25422                           ; BSR set to: 0
 25423                           ;outputs_MC50.c: 793:         {;outputs_MC50.c: 794:             if((PORTEbits.RE1==0 &&
      +                           var_sys_NVM.Direction_motor == 0)||(PORTEbits.RE0==0 && var_sys_NVM.Direction_motor == 
      +                          1))
 25424  0048F0  B291               	btfsc	145,1,c	;volatile
 25425  0048F2  D003               	goto	u20120
 25426                           
 25427                           ; BSR set to: 0
 25428  0048F4  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 25429  0048F6  B4D8               	btfsc	status,2,c
 25430  0048F8  D005               	goto	u20140
 25431  0048FA                     u20120:
 25432                           
 25433                           ; BSR set to: 0
 25434  0048FA  B091               	btfsc	145,0,c	;volatile
 25435  0048FC  D03B               	goto	l16943
 25436                           
 25437                           ; BSR set to: 0
 25438  0048FE  05B3               	decf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 25439  004900  A4D8               	btfss	status,2,c
 25440  004902  D038               	goto	l16943
 25441  004904                     u20140:
 25442                           
 25443                           ; BSR set to: 0
 25444                           ;outputs_MC50.c: 795:             {;outputs_MC50.c: 796:                 var_sys.InStopi
      +                          ng = NO;
 25445  004904  0E00               	movlw	0
 25446  004906  0101               	movlb	1	; () banked
 25447  004908  6F0D               	movwf	(_var_sys+13)& (0+255),b	;volatile
 25448                           
 25449                           ;outputs_MC50.c: 797:                 ts_system.ts_TRIACWait=200;
 25450  00490A  0E00               	movlw	0
 25451  00490C  6FA1               	movwf	(_ts_system+7)& (0+255),b	;volatile
 25452  00490E  0EC8               	movlw	200
 25453  004910  6FA0               	movwf	(_ts_system+6)& (0+255),b	;volatile
 25454                           
 25455                           ;outputs_MC50.c: 798:                 ts_system.TimeChargeCondesador=(1000/50);
 25456  004912  0E00               	movlw	0
 25457  004914  6FB5               	movwf	(_ts_system+27)& (0+255),b	;volatile
 25458  004916  0E14               	movlw	20
 25459  004918  6FB4               	movwf	(_ts_system+26)& (0+255),b	;volatile
 25460                           
 25461                           ; BSR set to: 1
 25462                           ;outputs_MC50.c: 799:                 if (var_sys.FimCurso_OpenIsEnabled == YES|| var_sy
      +                          s.Statedoorcontrol == st_Opened){
 25463  00491A  0504               	decf	(_var_sys+4)& (0+255),w,b	;volatile
 25464  00491C  B4D8               	btfsc	status,2,c
 25465  00491E  D004               	goto	u20160
 25466                           
 25467                           ; BSR set to: 1
 25468  004920  0E04               	movlw	4
 25469  004922  191C               	xorwf	(_var_sys+28)& (0+255),w,b	;volatile
 25470  004924  A4D8               	btfss	status,2,c
 25471  004926  D024               	goto	l16941
 25472  004928                     u20160:
 25473                           
 25474                           ; BSR set to: 1
 25475                           ;outputs_MC50.c: 800:                 var_sys.TimeMaxMotorIsON=((unsigned int)var_sys_NV
      +                          M.velocityDecelaration+(unsigned int)var_sys_NVM.decelarationClose*( 500/50))+var_sys_NV
      +                          M.learningTimeToClose + (1000/50)*4;
 25476  004928  0100               	movlb	0	; () banked
 25477  00492A  5199               	movf	(_var_sys_NVM+1)& (0+255),w,b	;volatile
 25478  00492C  0D0A               	mullw	10
 25479  00492E  CFF3 F012          	movff	prodl,??_ControlMotor
 25480  004932  CFF4 F013          	movff	prodh,??_ControlMotor+1
 25481  004936  51B0               	movf	(_var_sys_NVM+24)& (0+255),w,b	;volatile
 25482  004938  2612               	addwf	??_ControlMotor^0,f,c
 25483  00493A  0E00               	movlw	0
 25484  00493C  2213               	addwfc	(??_ControlMotor+1)^0,f,c
 25485  00493E  5012               	movf	??_ControlMotor^0,w,c
 25486  004940  25D0               	addwf	(_var_sys_NVM+56)& (0+255),w,b	;volatile
 25487  004942  6E14               	movwf	(??_ControlMotor+2)^0,c
 25488  004944  5013               	movf	(??_ControlMotor+1)^0,w,c
 25489  004946  21D1               	addwfc	(_var_sys_NVM+57)& (0+255),w,b	;volatile
 25490  004948  6E15               	movwf	(??_ControlMotor+3)^0,c
 25491  00494A  0E00               	movlw	0
 25492  00494C  21D2               	addwfc	(_var_sys_NVM+58)& (0+255),w,b	;volatile
 25493  00494E  6E16               	movwf	(??_ControlMotor+4)^0,c
 25494  004950  0E00               	movlw	0
 25495  004952  21D3               	addwfc	(_var_sys_NVM+59)& (0+255),w,b	;volatile
 25496  004954  6E17               	movwf	(??_ControlMotor+5)^0,c
 25497  004956  0E50               	movlw	80
 25498  004958  2414               	addwf	(??_ControlMotor+2)^0,w,c
 25499  00495A  0101               	movlb	1	; () banked
 25500  00495C  6F18               	movwf	(_var_sys+24)& (0+255),b	;volatile
 25501  00495E  0E00               	movlw	0
 25502  004960  2015               	addwfc	(??_ControlMotor+3)^0,w,c
 25503  004962  6F19               	movwf	(_var_sys+25)& (0+255),b	;volatile
 25504  004964  0E00               	movlw	0
 25505  004966  2016               	addwfc	(??_ControlMotor+4)^0,w,c
 25506  004968  6F1A               	movwf	(_var_sys+26)& (0+255),b	;volatile
 25507  00496A  0E00               	movlw	0
 25508  00496C  2017               	addwfc	(??_ControlMotor+5)^0,w,c
 25509  00496E  6F1B               	movwf	(_var_sys+27)& (0+255),b	;volatile
 25510  004970                     l16941:
 25511                           
 25512                           ; BSR set to: 1
 25513                           ;outputs_MC50.c: 803:                 var_sys.Statedoorcontrol = st_Closing;
 25514  004970  0E03               	movlw	3
 25515  004972  6F1C               	movwf	(_var_sys+28)& (0+255),b	;volatile
 25516  004974                     l16943:
 25517                           
 25518                           ;outputs_MC50.c: 806:             if (var_sys_NVM.Direction_motor == 0){do { LATEbits.LA
      +                          TE1 = 1; } while(0);}
 25519  004974  0100               	movlb	0	; () banked
 25520  004976  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 25521  004978  A4D8               	btfss	status,2,c
 25522  00497A  D002               	goto	l2392
 25523                           
 25524                           ; BSR set to: 0
 25525  00497C  8287               	bsf	135,1,c	;volatile
 25526  00497E  D001               	goto	l16945
 25527  004980                     l2392:
 25528                           
 25529                           ; BSR set to: 0
 25530  004980  8087               	bsf	135,0,c	;volatile
 25531  004982                     l16945:
 25532                           
 25533                           ; BSR set to: 0
 25534                           ;outputs_MC50.c: 808:             var_sys.Activatecounter = close ;
 25535  004982  0E02               	movlw	2
 25536  004984  0101               	movlb	1	; () banked
 25537  004986  6F16               	movwf	(_var_sys+22)& (0+255),b	;volatile
 25538  004988                     l2375:
 25539                           
 25540                           ;outputs_MC50.c: 811:            if (var_sys_NVM.Direction_motor == 0){do { LATEbits.LAT
      +                          E0 = 0; } while(0);}
 25541  004988  0100               	movlb	0	; () banked
 25542  00498A  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 25543  00498C  A4D8               	btfss	status,2,c
 25544  00498E  D002               	goto	l2398
 25545                           
 25546                           ; BSR set to: 0
 25547  004990  9087               	bcf	135,0,c	;volatile
 25548  004992  0012               	return	
 25549  004994                     l2398:
 25550                           
 25551                           ; BSR set to: 0
 25552  004994  9287               	bcf	135,1,c	;volatile
 25553  004996  0012               	return		;funcret
 25554  004998                     __end_of_ControlMotor:
 25555                           	callstack 0
 25556                           
 25557 ;; *************** function _VerifyElectricalBrake *****************
 25558 ;; Defined at:
 25559 ;;		line 658 in file "outputs_MC50.c"
 25560 ;; Parameters:    Size  Location     Type
 25561 ;;  actualState     1    wreg     enum E10381
 25562 ;; Auto vars:     Size  Location     Type
 25563 ;;  actualState     1   16[COMRAM] enum E10381
 25564 ;;  tempState       1   15[COMRAM] enum E10381
 25565 ;; Return value:  Size  Location     Type
 25566 ;;                  1    wreg      enum E10381
 25567 ;; Registers used:
 25568 ;;		wreg, status,2, status,0
 25569 ;; Tracked objects:
 25570 ;;		On entry : 3F/1
 25571 ;;		On exit  : 3E/0
 25572 ;;		Unchanged: 0/0
 25573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25575 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25577 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25578 ;;Total ram usage:        2 bytes
 25579 ;; Hardware stack levels used: 1
 25580 ;; Hardware stack levels required when called: 4
 25581 ;; This function calls:
 25582 ;;		Nothing
 25583 ;; This function is called by:
 25584 ;;		_ControlMotor
 25585 ;; This function uses a non-reentrant model
 25586 ;;
 25587                           
 25588                           	psect	text110
 25589  007CC2                     __ptext110:
 25590                           	callstack 0
 25591  007CC2                     _VerifyElectricalBrake:
 25592                           	callstack 25
 25593                           
 25594                           ;incstack = 0
 25595                           ;VerifyElectricalBrake@actualState stored from wreg
 25596  007CC2  6E11               	movwf	VerifyElectricalBrake@actualState^0,c
 25597                           
 25598                           ;outputs_MC50.c: 658: stateMotor_enum VerifyElectricalBrake(stateMotor_enum actualState)
      +                          ;outputs_MC50.c: 659: {;outputs_MC50.c: 660:     stateMotor_enum tempState;;outputs_MC50
      +                          .c: 661:     tempState=actualState;
 25599  007CC4  C011  F010         	movff	VerifyElectricalBrake@actualState,VerifyElectricalBrake@tempState
 25600                           
 25601                           ;outputs_MC50.c: 662:     if(var_sys_NVM.electricBrake==1 && actualState==Stopped && ts_
      +                          system.TimeStopElectricBrake<=0)
 25602  007CC8  0100               	movlb	0	; () banked
 25603  007CCA  05AF               	decf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 25604  007CCC  A4D8               	btfss	status,2,c
 25605  007CCE  D02E               	goto	l2318
 25606                           
 25607                           ; BSR set to: 0
 25608  007CD0  5011               	movf	VerifyElectricalBrake@actualState^0,w,c
 25609  007CD2  A4D8               	btfss	status,2,c
 25610  007CD4  D02B               	goto	l2318
 25611                           
 25612                           ; BSR set to: 0
 25613  007CD6  0101               	movlb	1	; () banked
 25614  007CD8  BFDB               	btfsc	(_ts_system+65)& (0+255),7,b	;volatile
 25615  007CDA  D005               	goto	u15290
 25616  007CDC  51DB               	movf	(_ts_system+65)& (0+255),w,b	;volatile
 25617  007CDE  E126               	bnz	l2318
 25618  007CE0  05DA               	decf	(_ts_system+64)& (0+255),w,b	;volatile
 25619  007CE2  B0D8               	btfsc	status,0,c
 25620  007CE4  D023               	goto	l2318
 25621  007CE6                     u15290:
 25622                           
 25623                           ; BSR set to: 1
 25624                           ;outputs_MC50.c: 663:     {;outputs_MC50.c: 664:         if(actualState!=brakeElectric_s
      +                          t.lastState && brakeElectric_st.ElectricBrakeIsActive==NO )
 25625  007CE6  5011               	movf	VerifyElectricalBrake@actualState^0,w,c
 25626  007CE8  0100               	movlb	0	; () banked
 25627  007CEA  1978               	xorwf	_brakeElectric_st& (0+255),w,b
 25628  007CEC  B4D8               	btfsc	status,2,c
 25629  007CEE  D00B               	goto	l14705
 25630                           
 25631                           ; BSR set to: 0
 25632  007CF0  5179               	movf	(_brakeElectric_st+1)& (0+255),w,b
 25633  007CF2  A4D8               	btfss	status,2,c
 25634  007CF4  D008               	goto	l14705
 25635                           
 25636                           ; BSR set to: 0
 25637                           ;outputs_MC50.c: 665:         {;outputs_MC50.c: 666:             brakeElectric_st.Electr
      +                          icBrakeIsActive=YES;
 25638  007CF6  0E01               	movlw	1
 25639  007CF8  6F79               	movwf	(_brakeElectric_st+1)& (0+255),b
 25640                           
 25641                           ;outputs_MC50.c: 668:             ts_system.TimeElectricBrake=((5+6)*( 100/50));
 25642  007CFA  0E00               	movlw	0
 25643  007CFC  0101               	movlb	1	; () banked
 25644  007CFE  6FC3               	movwf	(_ts_system+41)& (0+255),b	;volatile
 25645  007D00  0E16               	movlw	22
 25646  007D02  6FC2               	movwf	(_ts_system+40)& (0+255),b	;volatile
 25647                           
 25648                           ;outputs_MC50.c: 670:         }
 25649  007D04  D018               	goto	l2323
 25650  007D06                     l14705:
 25651                           
 25652                           ; BSR set to: 0
 25653  007D06  0579               	decf	(_brakeElectric_st+1)& (0+255),w,b
 25654  007D08  A4D8               	btfss	status,2,c
 25655  007D0A  D00B               	goto	l14711
 25656                           
 25657                           ; BSR set to: 0
 25658  007D0C  0101               	movlb	1	; () banked
 25659  007D0E  BFC3               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 25660  007D10  D008               	goto	l14711
 25661  007D12  51C3               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 25662  007D14  E103               	bnz	u15330
 25663  007D16  05C2               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 25664  007D18  A0D8               	btfss	status,0,c
 25665  007D1A  D003               	goto	l14711
 25666  007D1C                     u15330:
 25667                           
 25668                           ; BSR set to: 1
 25669                           ;outputs_MC50.c: 672:         {;outputs_MC50.c: 673:             tempState=InOpenFull;
 25670  007D1C  0E01               	movlw	1
 25671  007D1E  6E10               	movwf	VerifyElectricalBrake@tempState^0,c
 25672                           
 25673                           ;outputs_MC50.c: 686:         }
 25674  007D20  D00A               	goto	l2323
 25675  007D22                     l14711:
 25676                           
 25677                           ;outputs_MC50.c: 688:         {;outputs_MC50.c: 689:             brakeElectric_st.lastSt
      +                          ate=Stopped;
 25678  007D22  0E00               	movlw	0
 25679  007D24  0100               	movlb	0	; () banked
 25680  007D26  6F78               	movwf	_brakeElectric_st& (0+255),b
 25681                           
 25682                           ;outputs_MC50.c: 690:             brakeElectric_st.ElectricBrakeIsActive=NO;
 25683  007D28  0E00               	movlw	0
 25684  007D2A  D004               	goto	L101
 25685  007D2C                     l2318:
 25686                           
 25687                           ;outputs_MC50.c: 695:     {;outputs_MC50.c: 696:         brakeElectric_st.lastState=actu
      +                          alState;
 25688  007D2C  C011  F078         	movff	VerifyElectricalBrake@actualState,_brakeElectric_st
 25689                           
 25690                           ;outputs_MC50.c: 697:         brakeElectric_st.ElectricBrakeIsActive=NO;
 25691  007D30  0E00               	movlw	0
 25692  007D32  0100               	movlb	0	; () banked
 25693  007D34                     L101:
 25694  007D34  6F79               	movwf	(_brakeElectric_st+1)& (0+255),b
 25695  007D36                     l2323:
 25696                           
 25697                           ;outputs_MC50.c: 700:     return tempState;
 25698  007D36  5010               	movf	VerifyElectricalBrake@tempState^0,w,c
 25699  007D38  0012               	return		;funcret
 25700  007D3A                     __end_of_VerifyElectricalBrake:
 25701                           	callstack 0
 25702                           
 25703 ;; *************** function _ControlLights *****************
 25704 ;; Defined at:
 25705 ;;		line 816 in file "outputs_MC50.c"
 25706 ;; Parameters:    Size  Location     Type
 25707 ;;		None
 25708 ;; Auto vars:     Size  Location     Type
 25709 ;;		None
 25710 ;; Return value:  Size  Location     Type
 25711 ;;                  1    wreg      void 
 25712 ;; Registers used:
 25713 ;;		wreg, status,2, status,0, cstack
 25714 ;; Tracked objects:
 25715 ;;		On entry : 3E/1
 25716 ;;		On exit  : 3E/0
 25717 ;;		Unchanged: 0/0
 25718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25722 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25723 ;;Total ram usage:        0 bytes
 25724 ;; Hardware stack levels used: 1
 25725 ;; Hardware stack levels required when called: 6
 25726 ;; This function calls:
 25727 ;;		_setFlashLigth_ON
 25728 ;;		_setRGB_ON
 25729 ;; This function is called by:
 25730 ;;		_main
 25731 ;; This function uses a non-reentrant model
 25732 ;;
 25733                           
 25734                           	psect	text111
 25735  0039DE                     __ptext111:
 25736                           	callstack 0
 25737  0039DE                     _ControlLights:
 25738                           	callstack 24
 25739                           
 25740                           ;outputs_MC50.c: 818:     if(var_sys.DistanceProgrammingActive==YES)
 25741                           
 25742                           ;incstack = 0
 25743  0039DE  0101               	movlb	1	; () banked
 25744  0039E0  0540               	decf	(_var_sys+64)& (0+255),w,b	;volatile
 25745  0039E2  A4D8               	btfss	status,2,c
 25746  0039E4  D007               	goto	l16951
 25747                           
 25748                           ; BSR set to: 1
 25749                           ;outputs_MC50.c: 819:     {;outputs_MC50.c: 820:         setFlashLigth_ON((1000/50));
 25750  0039E6  0E00               	movlw	0
 25751  0039E8  6E11               	movwf	(setFlashLigth_ON@Freq+1)^0,c
 25752  0039EA  0E14               	movlw	20
 25753  0039EC  6E10               	movwf	setFlashLigth_ON@Freq^0,c
 25754  0039EE  ECCF  F044         	call	_setFlashLigth_ON	;wreg free
 25755                           
 25756                           ;outputs_MC50.c: 821:     }
 25757  0039F2  D010               	goto	l16957
 25758  0039F4                     l16951:
 25759                           
 25760                           ; BSR set to: 1
 25761  0039F4  51E2               	movf	_controlGate_stateMachine& (0+255),w,b
 25762  0039F6  11E3               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
 25763  0039F8  A4D8               	btfss	status,2,c
 25764  0039FA  D00C               	goto	l16957
 25765                           
 25766                           ; BSR set to: 1
 25767                           ;outputs_MC50.c: 823:     {;outputs_MC50.c: 824:         var_sys.ControlReleCapacitorOpe
      +                          n = 0;
 25768  0039FC  0E00               	movlw	0
 25769  0039FE  6F28               	movwf	(_var_sys+40)& (0+255),b	;volatile
 25770                           
 25771                           ;outputs_MC50.c: 825:         var_sys.ControlReleCapacitorClose = 0;
 25772  003A00  0E00               	movlw	0
 25773  003A02  6F29               	movwf	(_var_sys+41)& (0+255),b	;volatile
 25774                           
 25775                           ; BSR set to: 1
 25776                           ;outputs_MC50.c: 826:         if (var_sys_NVM.flashLightMode !=3){
 25777  003A04  0E03               	movlw	3
 25778  003A06  0100               	movlb	0	; () banked
 25779  003A08  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 25780  003A0A  B4D8               	btfsc	status,2,c
 25781  003A0C  D002               	goto	l2410
 25782                           
 25783                           ; BSR set to: 0
 25784                           
 25785                           ;outputs_MC50.c: 827:            do { LATEbits.LATE2 = 0; } while(0);
 25786  003A0E  9487               	bcf	135,2,c	;volatile
 25787  003A10  D001               	goto	l16957
 25788  003A12                     l2410:
 25789                           
 25790                           ; BSR set to: 0
 25791  003A12  8487               	bsf	135,2,c	;volatile
 25792  003A14                     l16957:
 25793                           
 25794                           ;outputs_MC50.c: 835:     if (((var_sys.preflashingcontrol == YES || controlGate_stateMa
      +                          chine.current_state==st_Opened) && (ts_system.timeWaitToClose >0) && (ts_system.timeWait
      +                          ToClose <= 3 * (1000/50))) && var_sys_NVM.flashRGBMode == rgb_pre){
 25795  003A14  0101               	movlb	1	; () banked
 25796  003A16  051D               	decf	(_var_sys+29)& (0+255),w,b	;volatile
 25797  003A18  B4D8               	btfsc	status,2,c
 25798  003A1A  D005               	goto	u20230
 25799                           
 25800                           ; BSR set to: 1
 25801  003A1C  0E04               	movlw	4
 25802  003A1E  19E2               	xorwf	_controlGate_stateMachine& (0+255),w,b
 25803  003A20  11E3               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
 25804  003A22  A4D8               	btfss	status,2,c
 25805  003A24  D01C               	goto	l16969
 25806  003A26                     u20230:
 25807                           
 25808                           ; BSR set to: 1
 25809  003A26  BFAD               	btfsc	(_ts_system+19)& (0+255),7,b	;volatile
 25810  003A28  D01A               	goto	l16969
 25811  003A2A  51AD               	movf	(_ts_system+19)& (0+255),w,b	;volatile
 25812  003A2C  E103               	bnz	u20240
 25813  003A2E  05AC               	decf	(_ts_system+18)& (0+255),w,b	;volatile
 25814  003A30  A0D8               	btfss	status,0,c
 25815  003A32  D015               	goto	l16969
 25816  003A34                     u20240:
 25817                           
 25818                           ; BSR set to: 1
 25819  003A34  BFAD               	btfsc	(_ts_system+19)& (0+255),7,b	;volatile
 25820  003A36  D006               	goto	u20250
 25821  003A38  51AD               	movf	(_ts_system+19)& (0+255),w,b	;volatile
 25822  003A3A  E111               	bnz	l16969
 25823  003A3C  0E3D               	movlw	61
 25824  003A3E  5DAC               	subwf	(_ts_system+18)& (0+255),w,b	;volatile
 25825  003A40  B0D8               	btfsc	status,0,c
 25826  003A42  D00D               	goto	l16969
 25827  003A44                     u20250:
 25828                           
 25829                           ; BSR set to: 1
 25830  003A44  0E02               	movlw	2
 25831  003A46  0100               	movlb	0	; () banked
 25832  003A48  19B1               	xorwf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 25833  003A4A  A4D8               	btfss	status,2,c
 25834  003A4C  D008               	goto	l16969
 25835                           
 25836                           ; BSR set to: 0
 25837                           ;outputs_MC50.c: 836:         setRGB_ON(BLUE,( 200/50));
 25838  003A4E  0E00               	movlw	0
 25839  003A50  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 25840  003A52  0E04               	movlw	4
 25841  003A54  6E11               	movwf	setRGB_ON@Freq^0,c
 25842  003A56  0E01               	movlw	1
 25843  003A58  EC00  F03B         	call	_setRGB_ON
 25844                           
 25845                           ;outputs_MC50.c: 838:     }
 25846  003A5C  0012               	return	
 25847  003A5E                     l16969:
 25848  003A5E  0E03               	movlw	3
 25849  003A60  0101               	movlb	1	; () banked
 25850  003A62  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 25851  003A64  A4D8               	btfss	status,2,c
 25852  003A66  D04F               	goto	l16999
 25853                           
 25854                           ; BSR set to: 1
 25855                           ;outputs_MC50.c: 842:     {;outputs_MC50.c: 843:         var_sys.ControlReleCapacitorOpe
      +                          n = 0;
 25856  003A68  0E00               	movlw	0
 25857  003A6A  6F28               	movwf	(_var_sys+40)& (0+255),b	;volatile
 25858                           
 25859                           ;outputs_MC50.c: 846:         if (var_sys.ControlReleCapacitorClose==0 && var_sys_NVM.fl
      +                          ashRGBMode==rgb_capacitor)
 25860  003A6C  5129               	movf	(_var_sys+41)& (0+255),w,b	;volatile
 25861  003A6E  A4D8               	btfss	status,2,c
 25862  003A70  D013               	goto	l16981
 25863                           
 25864                           ; BSR set to: 1
 25865  003A72  0E03               	movlw	3
 25866  003A74  0100               	movlb	0	; () banked
 25867  003A76  19B1               	xorwf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 25868  003A78  A4D8               	btfss	status,2,c
 25869  003A7A  D00E               	goto	l16981
 25870                           
 25871                           ; BSR set to: 0
 25872                           ;outputs_MC50.c: 847:         {;outputs_MC50.c: 848:          ts_system.TimeReleCapacito
      +                          r = (1000/50)*2;
 25873  003A7C  0E00               	movlw	0
 25874  003A7E  0101               	movlb	1	; () banked
 25875  003A80  6FDD               	movwf	(_ts_system+67)& (0+255),b	;volatile
 25876  003A82  0E28               	movlw	40
 25877  003A84  6FDC               	movwf	(_ts_system+66)& (0+255),b	;volatile
 25878                           
 25879                           ; BSR set to: 1
 25880                           ;outputs_MC50.c: 849:             setRGB_ON(YELLOW,0);
 25881  003A86  0E00               	movlw	0
 25882  003A88  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 25883  003A8A  0E00               	movlw	0
 25884  003A8C  6E11               	movwf	setRGB_ON@Freq^0,c
 25885  003A8E  0E04               	movlw	4
 25886  003A90  EC00  F03B         	call	_setRGB_ON
 25887                           
 25888                           ; BSR set to: 1
 25889                           ;outputs_MC50.c: 850:          var_sys.ControlReleCapacitorClose = 1;
 25890  003A94  0E01               	movlw	1
 25891  003A96  6F29               	movwf	(_var_sys+41)& (0+255),b	;volatile
 25892  003A98                     l16981:
 25893                           
 25894                           ;outputs_MC50.c: 852:         if(ts_system.TimeReleCapacitor<=0 && var_sys_NVM.flashRGBM
      +                          ode==rgb_capacitor)
 25895  003A98  0101               	movlb	1	; () banked
 25896  003A9A  BFDD               	btfsc	(_ts_system+67)& (0+255),7,b	;volatile
 25897  003A9C  D005               	goto	u20300
 25898  003A9E  51DD               	movf	(_ts_system+67)& (0+255),w,b	;volatile
 25899  003AA0  E105               	bnz	l16985
 25900  003AA2  05DC               	decf	(_ts_system+66)& (0+255),w,b	;volatile
 25901  003AA4  B0D8               	btfsc	status,0,c
 25902  003AA6  D002               	goto	l16985
 25903  003AA8                     u20300:
 25904                           
 25905                           ; BSR set to: 1
 25906  003AA8  0100               	movlb	0	; () banked
 25907  003AAA  51B1               	movf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 25908  003AAC                     l16985:
 25909                           
 25910                           ;outputs_MC50.c: 858:         if(var_sys_NVM.flashRGBMode==rgb_pisca && ts_system.TimeRe
      +                          leCapacitor<=0)
 25911  003AAC  0100               	movlb	0	; () banked
 25912  003AAE  05B1               	decf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 25913  003AB0  A4D8               	btfss	status,2,c
 25914  003AB2  D010               	goto	l16991
 25915                           
 25916                           ; BSR set to: 0
 25917  003AB4  0101               	movlb	1	; () banked
 25918  003AB6  BFDD               	btfsc	(_ts_system+67)& (0+255),7,b	;volatile
 25919  003AB8  D005               	goto	u20320
 25920  003ABA  51DD               	movf	(_ts_system+67)& (0+255),w,b	;volatile
 25921  003ABC  E10B               	bnz	l16991
 25922  003ABE  05DC               	decf	(_ts_system+66)& (0+255),w,b	;volatile
 25923  003AC0  B0D8               	btfsc	status,0,c
 25924  003AC2  D008               	goto	l16991
 25925  003AC4                     u20320:
 25926                           
 25927                           ; BSR set to: 1
 25928                           ;outputs_MC50.c: 860:         {;outputs_MC50.c: 861:             setRGB_ON(RED,( 200/50)
      +                           +( 50/50));
 25929  003AC4  0E00               	movlw	0
 25930  003AC6  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 25931  003AC8  0E05               	movlw	5
 25932  003ACA  6E11               	movwf	setRGB_ON@Freq^0,c
 25933  003ACC  0E03               	movlw	3
 25934  003ACE  EC00  F03B         	call	_setRGB_ON
 25935                           
 25936                           ;outputs_MC50.c: 862:         }
 25937  003AD2  D007               	goto	l16993
 25938  003AD4                     l16991:
 25939                           
 25940                           ;outputs_MC50.c: 864:         {;outputs_MC50.c: 865:             setRGB_ON(RED,0);
 25941  003AD4  0E00               	movlw	0
 25942  003AD6  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 25943  003AD8  0E00               	movlw	0
 25944  003ADA  6E11               	movwf	setRGB_ON@Freq^0,c
 25945  003ADC  0E03               	movlw	3
 25946  003ADE  EC00  F03B         	call	_setRGB_ON
 25947  003AE2                     l16993:
 25948                           
 25949                           ; BSR set to: 1
 25950                           ;outputs_MC50.c: 868:         if(var_sys_NVM.flashLightMode==fixo)
 25951  003AE2  0100               	movlb	0	; () banked
 25952  003AE4  51A5               	movf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 25953  003AE6  A4D8               	btfss	status,2,c
 25954  003AE8  D007               	goto	l16997
 25955                           
 25956                           ; BSR set to: 0
 25957                           ;outputs_MC50.c: 869:         {;outputs_MC50.c: 871:             setFlashLigth_ON(( 500/
      +                          50));
 25958  003AEA  0E00               	movlw	0
 25959  003AEC  6E11               	movwf	(setFlashLigth_ON@Freq+1)^0,c
 25960  003AEE  0E0A               	movlw	10
 25961  003AF0  6E10               	movwf	setFlashLigth_ON@Freq^0,c
 25962  003AF2  ECCF  F044         	call	_setFlashLigth_ON	;wreg free
 25963                           
 25964                           ;outputs_MC50.c: 873:         }
 25965  003AF6  0012               	return	
 25966  003AF8                     l16997:
 25967                           
 25968                           ;outputs_MC50.c: 875:             setFlashLigth_ON(0);
 25969  003AF8  0E00               	movlw	0
 25970  003AFA  6E11               	movwf	(setFlashLigth_ON@Freq+1)^0,c
 25971  003AFC  0E00               	movlw	0
 25972  003AFE  6E10               	movwf	setFlashLigth_ON@Freq^0,c
 25973  003B00  ECCF  F044         	call	_setFlashLigth_ON	;wreg free
 25974  003B04  0012               	return	
 25975  003B06                     l16999:
 25976                           
 25977                           ; BSR set to: 1
 25978  003B06  5100               	movf	_var_sys& (0+255),w,b	;volatile
 25979  003B08  A4D8               	btfss	status,2,c
 25980  003B0A  D042               	goto	l17027
 25981                           
 25982                           ; BSR set to: 1
 25983  003B0C  05E2               	decf	_controlGate_stateMachine& (0+255),w,b
 25984  003B0E  11E3               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
 25985  003B10  A4D8               	btfss	status,2,c
 25986  003B12  D03E               	goto	l17027
 25987                           
 25988                           ; BSR set to: 1
 25989                           ;outputs_MC50.c: 881:     {;outputs_MC50.c: 882:         if(var_sys.preflashingcontrol !
      +                          = YES){
 25990  003B14  051D               	decf	(_var_sys+29)& (0+255),w,b	;volatile
 25991  003B16  A4D8               	btfss	status,2,c
 25992                           
 25993                           ; BSR set to: 1
 25994                           
 25995                           ;outputs_MC50.c: 883:             do { LATAbits.LATA7 = 1; } while(0);
 25996  003B18  8E83               	bsf	131,7,c	;volatile
 25997                           
 25998                           ; BSR set to: 1
 25999                           ;outputs_MC50.c: 888:         if(var_sys_NVM.flashRGBMode==rgb_pisca)
 26000  003B1A  0100               	movlb	0	; () banked
 26001  003B1C  05B1               	decf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 26002  003B1E  A4D8               	btfss	status,2,c
 26003  003B20  D017               	goto	l17015
 26004                           
 26005                           ; BSR set to: 0
 26006                           ;outputs_MC50.c: 889:         {;outputs_MC50.c: 890:             if (var_sys_NVM.TypeofM
      +                          otor == br || var_sys_NVM.TypeofMotor == SE)setRGB_ON(YELLOW,0);
 26007  003B22  0E02               	movlw	2
 26008  003B24  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 26009  003B26  B4D8               	btfsc	status,2,c
 26010  003B28  D003               	goto	u20390
 26011                           
 26012                           ; BSR set to: 0
 26013  003B2A  05B4               	decf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 26014  003B2C  A4D8               	btfss	status,2,c
 26015  003B2E  D008               	goto	l17013
 26016  003B30                     u20390:
 26017                           
 26018                           ; BSR set to: 0
 26019  003B30  0E00               	movlw	0
 26020  003B32  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 26021  003B34  0E00               	movlw	0
 26022  003B36  6E11               	movwf	setRGB_ON@Freq^0,c
 26023  003B38  0E04               	movlw	4
 26024  003B3A  EC00  F03B         	call	_setRGB_ON
 26025  003B3E  D013               	goto	l17019
 26026  003B40                     l17013:
 26027                           
 26028                           ; BSR set to: 0
 26029  003B40  0E00               	movlw	0
 26030  003B42  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 26031  003B44  0E28               	movlw	40
 26032  003B46  6E11               	movwf	setRGB_ON@Freq^0,c
 26033  003B48  0E04               	movlw	4
 26034  003B4A  EC00  F03B         	call	_setRGB_ON
 26035  003B4E  D00B               	goto	l17019
 26036  003B50                     l17015:
 26037                           
 26038                           ; BSR set to: 0
 26039  003B50  0E03               	movlw	3
 26040  003B52  19B1               	xorwf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 26041  003B54  B4D8               	btfsc	status,2,c
 26042  003B56  D007               	goto	l17019
 26043                           
 26044                           ; BSR set to: 0
 26045  003B58  0E00               	movlw	0
 26046  003B5A  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 26047  003B5C  0E00               	movlw	0
 26048  003B5E  6E11               	movwf	setRGB_ON@Freq^0,c
 26049  003B60  0E04               	movlw	4
 26050  003B62  EC00  F03B         	call	_setRGB_ON
 26051  003B66                     l17019:
 26052                           
 26053                           ;outputs_MC50.c: 895:         if (var_sys_NVM.flashLightMode != electroiman)
 26054  003B66  0E03               	movlw	3
 26055  003B68  0100               	movlb	0	; () banked
 26056  003B6A  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 26057  003B6C  B4D8               	btfsc	status,2,c
 26058  003B6E  0012               	return	
 26059                           
 26060                           ; BSR set to: 0
 26061                           ;outputs_MC50.c: 896:         {;outputs_MC50.c: 897:         if (ts_system.TimeOnFlashLi
      +                          gth>0)
 26062  003B70  0101               	movlb	1	; () banked
 26063  003B72  BFBD               	btfsc	(_ts_system+35)& (0+255),7,b	;volatile
 26064  003B74  D007               	goto	l2438
 26065  003B76  51BD               	movf	(_ts_system+35)& (0+255),w,b	;volatile
 26066  003B78  11BC               	iorwf	(_ts_system+34)& (0+255),w,b	;volatile
 26067  003B7A  11BB               	iorwf	(_ts_system+33)& (0+255),w,b	;volatile
 26068  003B7C  E1BD               	bnz	l16997
 26069  003B7E  05BA               	decf	(_ts_system+32)& (0+255),w,b	;volatile
 26070  003B80  B0D8               	btfsc	status,0,c
 26071  003B82  D7BA               	goto	l16997
 26072  003B84                     l2438:
 26073                           
 26074                           ; BSR set to: 1
 26075  003B84  9487               	bcf	135,2,c	;volatile
 26076                           
 26077                           ; BSR set to: 1
 26078                           ;outputs_MC50.c: 904:             ts_system.timeFreqFlashligth=0;
 26079  003B86  0E00               	movlw	0
 26080  003B88  6FB9               	movwf	(_ts_system+31)& (0+255),b	;volatile
 26081  003B8A  0E00               	movlw	0
 26082  003B8C  6FB8               	movwf	(_ts_system+30)& (0+255),b	;volatile
 26083                           
 26084                           ; BSR set to: 0
 26085                           ;outputs_MC50.c: 907:     }
 26086                           
 26087                           ;outputs_MC50.c: 906:         }
 26088  003B8E  0012               	return	
 26089  003B90                     l17027:
 26090                           
 26091                           ; BSR set to: 1
 26092  003B90  5100               	movf	_var_sys& (0+255),w,b	;volatile
 26093  003B92  A4D8               	btfss	status,2,c
 26094  003B94  D048               	goto	l17061
 26095                           
 26096                           ; BSR set to: 1
 26097                           ;outputs_MC50.c: 911:     {;outputs_MC50.c: 912:         if (( var_sys_NVM.autoTimeFullC
      +                          lose==0 && var_sys.StateMotor == InOpenFull)||((var_sys_NVM.autoTimeWalkClose==0) && var
      +                          _sys_NVM.walkTime >0 && var_sys.StateMotor == InOpenWalk))
 26098  003B96  0100               	movlb	0	; () banked
 26099  003B98  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 26100  003B9A  A4D8               	btfss	status,2,c
 26101  003B9C  D004               	goto	u20450
 26102                           
 26103                           ; BSR set to: 0
 26104  003B9E  0101               	movlb	1	; () banked
 26105  003BA0  0500               	decf	_var_sys& (0+255),w,b	;volatile
 26106  003BA2  B4D8               	btfsc	status,2,c
 26107  003BA4  D00C               	goto	u20480
 26108  003BA6                     u20450:
 26109  003BA6  0100               	movlb	0	; () banked
 26110  003BA8  519E               	movf	(_var_sys_NVM+6)& (0+255),w,b	;volatile
 26111  003BAA  A4D8               	btfss	status,2,c
 26112  003BAC  D017               	goto	l17045
 26113                           
 26114                           ; BSR set to: 0
 26115  003BAE  519C               	movf	(_var_sys_NVM+4)& (0+255),w,b	;volatile
 26116  003BB0  B4D8               	btfsc	status,2,c
 26117  003BB2  D014               	goto	l17045
 26118                           
 26119                           ; BSR set to: 0
 26120  003BB4  0E02               	movlw	2
 26121  003BB6  0101               	movlb	1	; () banked
 26122  003BB8  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 26123  003BBA  A4D8               	btfss	status,2,c
 26124  003BBC  D00F               	goto	l17045
 26125  003BBE                     u20480:
 26126                           
 26127                           ; BSR set to: 1
 26128                           ;outputs_MC50.c: 913:         {;outputs_MC50.c: 916:             var_sys.ControlReleCapa
      +                          citorOpen = 0;
 26129  003BBE  0E00               	movlw	0
 26130  003BC0  6F28               	movwf	(_var_sys+40)& (0+255),b	;volatile
 26131                           
 26132                           ;outputs_MC50.c: 917:             var_sys.ControlReleCapacitorClose = 0;
 26133  003BC2  0E00               	movlw	0
 26134  003BC4  6F29               	movwf	(_var_sys+41)& (0+255),b	;volatile
 26135                           
 26136                           ; BSR set to: 1
 26137                           ;outputs_MC50.c: 921:             if (var_sys_NVM.flashLightMode != electroiman && var_s
      +                          ys_NVM.flashLightMode != condominio ){
 26138  003BC6  0E03               	movlw	3
 26139  003BC8  0100               	movlb	0	; () banked
 26140  003BCA  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 26141  003BCC  B4D8               	btfsc	status,2,c
 26142  003BCE  0012               	return	
 26143                           
 26144                           ; BSR set to: 0
 26145  003BD0  0E02               	movlw	2
 26146  003BD2  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 26147  003BD4  B4D8               	btfsc	status,2,c
 26148  003BD6  0012               	return	
 26149                           
 26150                           ; BSR set to: 0
 26151                           
 26152                           ;outputs_MC50.c: 922:               do { LATEbits.LATE2 = 0; } while(0);
 26153  003BD8  9487               	bcf	135,2,c	;volatile
 26154  003BDA  0012               	return	
 26155  003BDC                     l17045:
 26156                           
 26157                           ;outputs_MC50.c: 927:         {;outputs_MC50.c: 928:             if(var_sys_NVM.flashRGB
      +                          Mode==rgb_pisca)
 26158  003BDC  0100               	movlb	0	; () banked
 26159  003BDE  05B1               	decf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 26160  003BE0  A4D8               	btfss	status,2,c
 26161  003BE2  D008               	goto	l17049
 26162                           
 26163                           ; BSR set to: 0
 26164                           ;outputs_MC50.c: 929:             {;outputs_MC50.c: 930:                 setRGB_ON(BLUE,
      +                          (1000/50));
 26165  003BE4  0E00               	movlw	0
 26166  003BE6  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 26167  003BE8  0E14               	movlw	20
 26168  003BEA  6E11               	movwf	setRGB_ON@Freq^0,c
 26169  003BEC  0E01               	movlw	1
 26170  003BEE  EC00  F03B         	call	_setRGB_ON
 26171                           
 26172                           ;outputs_MC50.c: 932:             }
 26173  003BF2  D007               	goto	l17051
 26174  003BF4                     l17049:
 26175                           
 26176                           ; BSR set to: 0
 26177                           ;outputs_MC50.c: 934:             {;outputs_MC50.c: 935:                 setRGB_ON(BLUE,
      +                          0);
 26178  003BF4  0E00               	movlw	0
 26179  003BF6  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 26180  003BF8  0E00               	movlw	0
 26181  003BFA  6E11               	movwf	setRGB_ON@Freq^0,c
 26182  003BFC  0E01               	movlw	1
 26183  003BFE  EC00  F03B         	call	_setRGB_ON
 26184  003C02                     l17051:
 26185                           
 26186                           ; BSR set to: 1
 26187                           ;outputs_MC50.c: 939:             if(var_sys_NVM.flashLightMode==pisca ||var_sys_NVM.fla
      +                          shLightMode==electroiman)
 26188  003C02  0100               	movlb	0	; () banked
 26189  003C04  05A5               	decf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 26190  003C06  B4D8               	btfsc	status,2,c
 26191  003C08  D004               	goto	u20530
 26192                           
 26193                           ; BSR set to: 0
 26194  003C0A  0E03               	movlw	3
 26195  003C0C  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 26196  003C0E  A4D8               	btfss	status,2,c
 26197  003C10  D002               	goto	l17055
 26198  003C12                     u20530:
 26199                           
 26200                           ; BSR set to: 0
 26201                           
 26202                           ;outputs_MC50.c: 940:             {;outputs_MC50.c: 941:                  do { LATEbits.
      +                          LATE2 = 0; } while(0);
 26203  003C12  9487               	bcf	135,2,c	;volatile
 26204  003C14  0012               	return	
 26205  003C16                     l17055:
 26206                           
 26207                           ; BSR set to: 0
 26208  003C16  51A5               	movf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 26209  003C18  B4D8               	btfsc	status,2,c
 26210  003C1A  D76E               	goto	l16997
 26211                           
 26212                           ; BSR set to: 0
 26213  003C1C  0E02               	movlw	2
 26214  003C1E  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 26215  003C20  A4D8               	btfss	status,2,c
 26216  003C22  0012               	return	
 26217  003C24  D769               	goto	l16997
 26218  003C26                     l17061:
 26219                           
 26220                           ; BSR set to: 1
 26221                           ;outputs_MC50.c: 955:     {;outputs_MC50.c: 957:         var_sys.ControlReleCapacitorClo
      +                          se=0;
 26222  003C26  0E00               	movlw	0
 26223  003C28  6F29               	movwf	(_var_sys+41)& (0+255),b	;volatile
 26224                           
 26225                           ;outputs_MC50.c: 958:         if (var_sys.ControlReleCapacitorOpen==0 && var_sys_NVM.fla
      +                          shRGBMode==rgb_capacitor)
 26226  003C2A  5128               	movf	(_var_sys+40)& (0+255),w,b	;volatile
 26227  003C2C  A4D8               	btfss	status,2,c
 26228  003C2E  D00C               	goto	l17067
 26229                           
 26230                           ; BSR set to: 1
 26231  003C30  0E03               	movlw	3
 26232  003C32  0100               	movlb	0	; () banked
 26233  003C34  19B1               	xorwf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 26234  003C36  A4D8               	btfss	status,2,c
 26235  003C38  D007               	goto	l17067
 26236                           
 26237                           ; BSR set to: 0
 26238                           ;outputs_MC50.c: 959:         {;outputs_MC50.c: 960:          ts_system.TimeReleCapacito
      +                          r = (1000/50)*2;
 26239  003C3A  0E00               	movlw	0
 26240  003C3C  0101               	movlb	1	; () banked
 26241  003C3E  6FDD               	movwf	(_ts_system+67)& (0+255),b	;volatile
 26242  003C40  0E28               	movlw	40
 26243  003C42  6FDC               	movwf	(_ts_system+66)& (0+255),b	;volatile
 26244                           
 26245                           ;outputs_MC50.c: 962:          var_sys.ControlReleCapacitorOpen = 1;
 26246  003C44  0E01               	movlw	1
 26247  003C46  6F28               	movwf	(_var_sys+40)& (0+255),b	;volatile
 26248  003C48                     l17067:
 26249                           
 26250                           ;outputs_MC50.c: 964:         if(ts_system.TimeReleCapacitor <=0 && var_sys_NVM.flashRGB
      +                          Mode==rgb_capacitor)
 26251  003C48  0101               	movlb	1	; () banked
 26252  003C4A  BFDD               	btfsc	(_ts_system+67)& (0+255),7,b	;volatile
 26253  003C4C  D005               	goto	u20580
 26254  003C4E  51DD               	movf	(_ts_system+67)& (0+255),w,b	;volatile
 26255  003C50  E105               	bnz	l17071
 26256  003C52  05DC               	decf	(_ts_system+66)& (0+255),w,b	;volatile
 26257  003C54  B0D8               	btfsc	status,0,c
 26258  003C56  D002               	goto	l17071
 26259  003C58                     u20580:
 26260                           
 26261                           ; BSR set to: 1
 26262  003C58  0100               	movlb	0	; () banked
 26263  003C5A  51B1               	movf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 26264  003C5C                     l17071:
 26265                           
 26266                           ;outputs_MC50.c: 969:         if (controlGate_stateMachine.current_state==st_Opened)
 26267  003C5C  0E04               	movlw	4
 26268  003C5E  0101               	movlb	1	; () banked
 26269  003C60  19E2               	xorwf	_controlGate_stateMachine& (0+255),w,b
 26270  003C62  11E3               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
 26271  003C64  A4D8               	btfss	status,2,c
 26272  003C66  D01B               	goto	l17083
 26273                           
 26274                           ; BSR set to: 1
 26275                           ;outputs_MC50.c: 970:         {;outputs_MC50.c: 973:             var_sys.ControlReleCapa
      +                          citorOpen = 0;
 26276  003C68  0E00               	movlw	0
 26277  003C6A  6F28               	movwf	(_var_sys+40)& (0+255),b	;volatile
 26278                           
 26279                           ;outputs_MC50.c: 974:             var_sys.ControlReleCapacitorClose = 0;
 26280  003C6C  0E00               	movlw	0
 26281  003C6E  6F29               	movwf	(_var_sys+41)& (0+255),b	;volatile
 26282                           
 26283                           ;outputs_MC50.c: 977:             if (var_sys_NVM.autoTimeFullClose != 0 || ((var_sys_NV
      +                          M.autoTimeWalkClose!=0) && var_sys_NVM.walkTime >0)|| var_sys_NVM.operationMode==2)
 26284  003C70  0100               	movlb	0	; () banked
 26285  003C72  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 26286  003C74  A4D8               	btfss	status,2,c
 26287  003C76  D00A               	goto	u20630
 26288                           
 26289                           ; BSR set to: 0
 26290  003C78  519E               	movf	(_var_sys_NVM+6)& (0+255),w,b	;volatile
 26291  003C7A  B4D8               	btfsc	status,2,c
 26292  003C7C  D003               	goto	u20620
 26293                           
 26294                           ; BSR set to: 0
 26295  003C7E  519C               	movf	(_var_sys_NVM+4)& (0+255),w,b	;volatile
 26296  003C80  A4D8               	btfss	status,2,c
 26297  003C82  D004               	goto	u20630
 26298  003C84                     u20620:
 26299                           
 26300                           ; BSR set to: 0
 26301  003C84  0E02               	movlw	2
 26302  003C86  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 26303  003C88  A4D8               	btfss	status,2,c
 26304  003C8A  D007               	goto	l2472
 26305  003C8C                     u20630:
 26306                           
 26307                           ; BSR set to: 0
 26308                           ;outputs_MC50.c: 978:             {;outputs_MC50.c: 979:                    setRGB_ON(BL
      +                          UE,0);
 26309  003C8C  0E00               	movlw	0
 26310  003C8E  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 26311  003C90  0E00               	movlw	0
 26312  003C92  6E11               	movwf	setRGB_ON@Freq^0,c
 26313  003C94  0E01               	movlw	1
 26314  003C96  EC00  F03B         	call	_setRGB_ON
 26315  003C9A                     l2472:
 26316  003C9A  9487               	bcf	135,2,c	;volatile
 26317  003C9C  0012               	return	
 26318  003C9E                     l17083:
 26319                           
 26320                           ; BSR set to: 1
 26321                           ;outputs_MC50.c: 993:         {;outputs_MC50.c: 996:             if(var_sys_NVM.flashRGB
      +                          Mode==rgb_pisca)
 26322  003C9E  0100               	movlb	0	; () banked
 26323  003CA0  05B1               	decf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 26324  003CA2  A4D8               	btfss	status,2,c
 26325  003CA4  D008               	goto	l17087
 26326                           
 26327                           ; BSR set to: 0
 26328                           ;outputs_MC50.c: 997:             {;outputs_MC50.c: 998:                 setRGB_ON(GREEN
      +                          ,( 500/50));
 26329  003CA6  0E00               	movlw	0
 26330  003CA8  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 26331  003CAA  0E0A               	movlw	10
 26332  003CAC  6E11               	movwf	setRGB_ON@Freq^0,c
 26333  003CAE  0E02               	movlw	2
 26334  003CB0  EC00  F03B         	call	_setRGB_ON
 26335                           
 26336                           ;outputs_MC50.c: 999:             }
 26337  003CB4  D007               	goto	l17089
 26338  003CB6                     l17087:
 26339                           
 26340                           ; BSR set to: 0
 26341                           ;outputs_MC50.c: 1001:             {;outputs_MC50.c: 1002:                 setRGB_ON(GRE
      +                          EN,0);
 26342  003CB6  0E00               	movlw	0
 26343  003CB8  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 26344  003CBA  0E00               	movlw	0
 26345  003CBC  6E11               	movwf	setRGB_ON@Freq^0,c
 26346  003CBE  0E02               	movlw	2
 26347  003CC0  EC00  F03B         	call	_setRGB_ON
 26348  003CC4                     l17089:
 26349                           
 26350                           ; BSR set to: 1
 26351                           ;outputs_MC50.c: 1006:             if(var_sys_NVM.flashLightMode==fixo)
 26352  003CC4  0100               	movlb	0	; () banked
 26353  003CC6  51A5               	movf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 26354  003CC8  A4D8               	btfss	status,2,c
 26355  003CCA  D007               	goto	l17093
 26356                           
 26357                           ; BSR set to: 0
 26358                           ;outputs_MC50.c: 1007:             {;outputs_MC50.c: 1010:                 setFlashLigth
      +                          _ON((1000/50));
 26359  003CCC  0E00               	movlw	0
 26360  003CCE  6E11               	movwf	(setFlashLigth_ON@Freq+1)^0,c
 26361  003CD0  0E14               	movlw	20
 26362  003CD2  6E10               	movwf	setFlashLigth_ON@Freq^0,c
 26363  003CD4  ECCF  F044         	call	_setFlashLigth_ON	;wreg free
 26364                           
 26365                           ;outputs_MC50.c: 1011:             }
 26366  003CD8  D00D               	goto	l17099
 26367  003CDA                     l17093:
 26368                           
 26369                           ; BSR set to: 0
 26370  003CDA  05A5               	decf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 26371  003CDC  B4D8               	btfsc	status,2,c
 26372  003CDE  D004               	goto	u20670
 26373                           
 26374                           ; BSR set to: 0
 26375  003CE0  0E02               	movlw	2
 26376  003CE2  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 26377  003CE4  A4D8               	btfss	status,2,c
 26378  003CE6  D006               	goto	l17099
 26379  003CE8                     u20670:
 26380                           
 26381                           ; BSR set to: 0
 26382                           ;outputs_MC50.c: 1013:             {;outputs_MC50.c: 1014:                 setFlashLigth
      +                          _ON(0);
 26383  003CE8  0E00               	movlw	0
 26384  003CEA  6E11               	movwf	(setFlashLigth_ON@Freq+1)^0,c
 26385  003CEC  0E00               	movlw	0
 26386  003CEE  6E10               	movwf	setFlashLigth_ON@Freq^0,c
 26387  003CF0  ECCF  F044         	call	_setFlashLigth_ON	;wreg free
 26388  003CF4                     l17099:
 26389                           
 26390                           ;outputs_MC50.c: 1017:             if (var_sys_NVM.flashLightMode == electroiman)
 26391  003CF4  0E03               	movlw	3
 26392  003CF6  0100               	movlb	0	; () banked
 26393  003CF8  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 26394  003CFA  A4D8               	btfss	status,2,c
 26395  003CFC  0012               	return	
 26396                           
 26397                           ; BSR set to: 0
 26398                           
 26399                           ;outputs_MC50.c: 1018:             {;outputs_MC50.c: 1019:             do { LATEbits.LAT
      +                          E2 = 0; } while(0);
 26400  003CFE  9487               	bcf	135,2,c	;volatile
 26401  003D00  0012               	return		;funcret
 26402  003D02                     __end_of_ControlLights:
 26403                           	callstack 0
 26404                           
 26405 ;; *************** function _setRGB_ON *****************
 26406 ;; Defined at:
 26407 ;;		line 1028 in file "outputs_MC50.c"
 26408 ;; Parameters:    Size  Location     Type
 26409 ;;  RGBLigth        1    wreg     enum E10611
 26410 ;;  Freq            2   16[COMRAM] int 
 26411 ;; Auto vars:     Size  Location     Type
 26412 ;;  RGBLigth        1   20[COMRAM] enum E10611
 26413 ;; Return value:  Size  Location     Type
 26414 ;;                  1    wreg      void 
 26415 ;; Registers used:
 26416 ;;		wreg, status,2, status,0, cstack
 26417 ;; Tracked objects:
 26418 ;;		On entry : 3E/0
 26419 ;;		On exit  : 3F/1
 26420 ;;		Unchanged: 0/0
 26421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26422 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26423 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26424 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26425 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26426 ;;Total ram usage:        5 bytes
 26427 ;; Hardware stack levels used: 1
 26428 ;; Hardware stack levels required when called: 5
 26429 ;; This function calls:
 26430 ;;		_RGB_Set
 26431 ;; This function is called by:
 26432 ;;		_ControlLights
 26433 ;; This function uses a non-reentrant model
 26434 ;;
 26435                           
 26436                           	psect	text112
 26437  007600                     __ptext112:
 26438                           	callstack 0
 26439  007600                     _setRGB_ON:
 26440                           	callstack 24
 26441                           
 26442                           ;incstack = 0
 26443                           ;setRGB_ON@RGBLigth stored from wreg
 26444  007600  6E15               	movwf	setRGB_ON@RGBLigth^0,c
 26445                           
 26446                           ;outputs_MC50.c: 1028: void setRGB_ON(RGBY_enum RGBLigth,int Freq);outputs_MC50.c: 1029:
      +                           {;outputs_MC50.c: 1031:     do { LATAbits.LATA7 = 1; } while(0);
 26447  007602  8E83               	bsf	131,7,c	;volatile
 26448                           
 26449                           ;outputs_MC50.c: 1037:     if(Freq==0 || var_sys.upFaseRGB==1)
 26450  007604  5011               	movf	setRGB_ON@Freq^0,w,c
 26451  007606  1012               	iorwf	(setRGB_ON@Freq+1)^0,w,c
 26452  007608  B4D8               	btfsc	status,2,c
 26453  00760A  D015               	goto	l14743
 26454  00760C  0101               	movlb	1	; () banked
 26455  00760E  0524               	decf	(_var_sys+36)& (0+255),w,b	;volatile
 26456  007610  B4D8               	btfsc	status,2,c
 26457  007612  D011               	goto	l14743
 26458  007614  D024               	goto	l14745
 26459  007616                     l14733:
 26460                           
 26461                           ;outputs_MC50.c: 1043:                 RGB_Set(0x20);
 26462  007616  0E20               	movlw	32
 26463  007618  ECAA  F048         	call	_RGB_Set
 26464                           
 26465                           ;outputs_MC50.c: 1044:             break;
 26466  00761C  D020               	goto	l14745
 26467  00761E                     l14735:
 26468                           
 26469                           ;outputs_MC50.c: 1047:                 RGB_Set(0x04);
 26470  00761E  0E04               	movlw	4
 26471  007620  ECAA  F048         	call	_RGB_Set
 26472                           
 26473                           ;outputs_MC50.c: 1048:             break;
 26474  007624  D01C               	goto	l14745
 26475  007626                     l14737:
 26476                           
 26477                           ;outputs_MC50.c: 1051:                 RGB_Set(0x00);
 26478  007626  0E00               	movlw	0
 26479  007628  ECAA  F048         	call	_RGB_Set
 26480                           
 26481                           ;outputs_MC50.c: 1052:             break;
 26482  00762C  D018               	goto	l14745
 26483  00762E                     l14739:
 26484                           
 26485                           ;outputs_MC50.c: 1055:                 RGB_Set(0x24);
 26486  00762E  0E24               	movlw	36
 26487  007630  ECAA  F048         	call	_RGB_Set
 26488                           
 26489                           ;outputs_MC50.c: 1056:             break;
 26490  007634  D014               	goto	l14745
 26491  007636                     l14743:
 26492  007636  5015               	movf	setRGB_ON@RGBLigth^0,w,c
 26493  007638  6E13               	movwf	??_setRGB_ON^0,c
 26494  00763A  6A14               	clrf	(??_setRGB_ON+1)^0,c
 26495                           
 26496                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26497                           ; Switch size 1, requested type "simple"
 26498                           ; Number of cases is 1, Range of values is 0 to 0
 26499                           ; switch strategies available:
 26500                           ; Name         Instructions Cycles
 26501                           ; simple_byte            4     3 (average)
 26502                           ;	Chosen strategy is simple_byte
 26503  00763C  5014               	movf	(??_setRGB_ON+1)^0,w,c
 26504  00763E  0A00               	xorlw	0	; case 0
 26505  007640  A4D8               	btfss	status,2,c
 26506  007642  D00D               	goto	l14745
 26507                           
 26508                           ; Switch size 1, requested type "simple"
 26509                           ; Number of cases is 4, Range of values is 1 to 4
 26510                           ; switch strategies available:
 26511                           ; Name         Instructions Cycles
 26512                           ; simple_byte           13     7 (average)
 26513                           ;	Chosen strategy is simple_byte
 26514  007644  5013               	movf	??_setRGB_ON^0,w,c
 26515  007646  0A01               	xorlw	1	; case 1
 26516  007648  B4D8               	btfsc	status,2,c
 26517  00764A  D7ED               	goto	l14737
 26518  00764C  0A03               	xorlw	3	; case 2
 26519  00764E  B4D8               	btfsc	status,2,c
 26520  007650  D7E6               	goto	l14735
 26521  007652  0A01               	xorlw	1	; case 3
 26522  007654  B4D8               	btfsc	status,2,c
 26523  007656  D7DF               	goto	l14733
 26524  007658  0A07               	xorlw	7	; case 4
 26525  00765A  B4D8               	btfsc	status,2,c
 26526  00765C  D7E8               	goto	l14739
 26527  00765E                     l14745:
 26528                           
 26529                           ;outputs_MC50.c: 1061:     if(ts_system.timeFreqRGB<=0 && Freq!=0)
 26530  00765E  0101               	movlb	1	; () banked
 26531  007660  BFB7               	btfsc	(_ts_system+29)& (0+255),7,b	;volatile
 26532  007662  D005               	goto	u15400
 26533  007664  51B7               	movf	(_ts_system+29)& (0+255),w,b	;volatile
 26534  007666  E113               	bnz	l2502
 26535  007668  05B6               	decf	(_ts_system+28)& (0+255),w,b	;volatile
 26536  00766A  B0D8               	btfsc	status,0,c
 26537  00766C  0012               	return	
 26538  00766E                     u15400:
 26539                           
 26540                           ; BSR set to: 1
 26541  00766E  5011               	movf	setRGB_ON@Freq^0,w,c
 26542  007670  1012               	iorwf	(setRGB_ON@Freq+1)^0,w,c
 26543  007672  B4D8               	btfsc	status,2,c
 26544  007674  0012               	return	
 26545                           
 26546                           ; BSR set to: 1
 26547                           ;outputs_MC50.c: 1062:     {;outputs_MC50.c: 1063:         ts_system.timeFreqRGB=Freq;
 26548  007676  C011  F1B6         	movff	setRGB_ON@Freq,_ts_system+28	;volatile
 26549  00767A  C012  F1B7         	movff	setRGB_ON@Freq+1,_ts_system+29	;volatile
 26550                           
 26551                           ; BSR set to: 1
 26552                           ;outputs_MC50.c: 1064:         if(var_sys.upFaseRGB==1)
 26553  00767E  0524               	decf	(_var_sys+36)& (0+255),w,b	;volatile
 26554  007680  A4D8               	btfss	status,2,c
 26555  007682  D003               	goto	l14755
 26556                           
 26557                           ; BSR set to: 1
 26558                           ;outputs_MC50.c: 1065:         {;outputs_MC50.c: 1066:             var_sys.upFaseRGB=0;
 26559  007684  0E00               	movlw	0
 26560  007686  6F24               	movwf	(_var_sys+36)& (0+255),b	;volatile
 26561                           
 26562                           ;outputs_MC50.c: 1067:         }
 26563  007688  0012               	return	
 26564  00768A                     l14755:
 26565                           
 26566                           ; BSR set to: 1
 26567                           ;outputs_MC50.c: 1069:         {;outputs_MC50.c: 1070:             var_sys.upFaseRGB=1;
 26568  00768A  0E01               	movlw	1
 26569  00768C  6F24               	movwf	(_var_sys+36)& (0+255),b	;volatile
 26570  00768E                     l2502:
 26571                           
 26572                           ; BSR set to: 1
 26573  00768E  0012               	return		;funcret
 26574  007690                     __end_of_setRGB_ON:
 26575                           	callstack 0
 26576                           
 26577 ;; *************** function _RGB_Set *****************
 26578 ;; Defined at:
 26579 ;;		line 98 in file "outputs_MC50.c"
 26580 ;; Parameters:    Size  Location     Type
 26581 ;;  value           1    wreg     unsigned char 
 26582 ;; Auto vars:     Size  Location     Type
 26583 ;;  value           1   15[COMRAM] unsigned char 
 26584 ;; Return value:  Size  Location     Type
 26585 ;;                  1    wreg      void 
 26586 ;; Registers used:
 26587 ;;		wreg, status,2, status,0
 26588 ;; Tracked objects:
 26589 ;;		On entry : 0/0
 26590 ;;		On exit  : 0/0
 26591 ;;		Unchanged: 0/0
 26592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26594 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26596 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26597 ;;Total ram usage:        1 bytes
 26598 ;; Hardware stack levels used: 1
 26599 ;; Hardware stack levels required when called: 4
 26600 ;; This function calls:
 26601 ;;		Nothing
 26602 ;; This function is called by:
 26603 ;;		_setRGB_ON
 26604 ;; This function uses a non-reentrant model
 26605 ;;
 26606                           
 26607                           	psect	text113
 26608  009154                     __ptext113:
 26609                           	callstack 0
 26610  009154                     _RGB_Set:
 26611                           	callstack 24
 26612                           
 26613                           ; BSR set to: 1
 26614                           ;incstack = 0
 26615                           ;RGB_Set@value stored from wreg
 26616  009154  6E10               	movwf	RGB_Set@value^0,c
 26617                           
 26618                           ;outputs_MC50.c: 98: void RGB_Set(char value);outputs_MC50.c: 99: {;outputs_MC50.c: 100:
      +                              LATC &= 0xdb ;
 26619  009156  0EDB               	movlw	219
 26620  009158  1685               	andwf	133,f,c	;volatile
 26621                           
 26622                           ;outputs_MC50.c: 101:    LATC |= value;
 26623  00915A  5010               	movf	RGB_Set@value^0,w,c	;volatile
 26624  00915C  1285               	iorwf	133,f,c	;volatile
 26625  00915E  9E83               	bcf	131,7,c	;volatile
 26626  009160  0012               	return		;funcret
 26627  009162                     __end_of_RGB_Set:
 26628                           	callstack 0
 26629                           
 26630 ;; *************** function _setFlashLigth_ON *****************
 26631 ;; Defined at:
 26632 ;;		line 1077 in file "outputs_MC50.c"
 26633 ;; Parameters:    Size  Location     Type
 26634 ;;  Freq            2   15[COMRAM] int 
 26635 ;; Auto vars:     Size  Location     Type
 26636 ;;		None
 26637 ;; Return value:  Size  Location     Type
 26638 ;;                  1    wreg      void 
 26639 ;; Registers used:
 26640 ;;		wreg, status,2, status,0
 26641 ;; Tracked objects:
 26642 ;;		On entry : 3E/1
 26643 ;;		On exit  : 3F/1
 26644 ;;		Unchanged: 0/0
 26645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26646 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26649 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26650 ;;Total ram usage:        2 bytes
 26651 ;; Hardware stack levels used: 1
 26652 ;; Hardware stack levels required when called: 4
 26653 ;; This function calls:
 26654 ;;		Nothing
 26655 ;; This function is called by:
 26656 ;;		_ControlLights
 26657 ;; This function uses a non-reentrant model
 26658 ;;
 26659                           
 26660                           	psect	text114
 26661  00899E                     __ptext114:
 26662                           	callstack 0
 26663  00899E                     _setFlashLigth_ON:
 26664                           	callstack 25
 26665                           
 26666                           ;outputs_MC50.c: 1077: void setFlashLigth_ON(int Freq);outputs_MC50.c: 1078: {;outputs_M
      +                          C50.c: 1079:     if(Freq==0 || var_sys.upFaseFlashligth==1)
 26667                           
 26668                           ;incstack = 0
 26669  00899E  5010               	movf	setFlashLigth_ON@Freq^0,w,c
 26670  0089A0  1011               	iorwf	(setFlashLigth_ON@Freq+1)^0,w,c
 26671  0089A2  B4D8               	btfsc	status,2,c
 26672  0089A4  D004               	goto	u15350
 26673  0089A6  0101               	movlb	1	; () banked
 26674  0089A8  0525               	decf	(_var_sys+37)& (0+255),w,b	;volatile
 26675  0089AA  A4D8               	btfss	status,2,c
 26676  0089AC  D002               	goto	l2511
 26677  0089AE                     u15350:
 26678                           
 26679                           ;outputs_MC50.c: 1080:     {;outputs_MC50.c: 1081:         do { LATEbits.LATE2 = 1; } wh
      +                          ile(0);
 26680  0089AE  8487               	bsf	135,2,c	;volatile
 26681  0089B0  D001               	goto	l14721
 26682  0089B2                     l2511:
 26683                           
 26684                           ; BSR set to: 1
 26685  0089B2  9487               	bcf	135,2,c	;volatile
 26686  0089B4                     l14721:
 26687                           
 26688                           ;outputs_MC50.c: 1088:     if(ts_system.timeFreqFlashligth<=0 && Freq!=0)
 26689  0089B4  0101               	movlb	1	; () banked
 26690  0089B6  BFB9               	btfsc	(_ts_system+31)& (0+255),7,b	;volatile
 26691  0089B8  D005               	goto	u15360
 26692  0089BA  51B9               	movf	(_ts_system+31)& (0+255),w,b	;volatile
 26693  0089BC  E10D               	bnz	l2514
 26694  0089BE  05B8               	decf	(_ts_system+30)& (0+255),w,b	;volatile
 26695  0089C0  B0D8               	btfsc	status,0,c
 26696  0089C2  0012               	return	
 26697  0089C4                     u15360:
 26698                           
 26699                           ; BSR set to: 1
 26700  0089C4  5010               	movf	setFlashLigth_ON@Freq^0,w,c
 26701  0089C6  1011               	iorwf	(setFlashLigth_ON@Freq+1)^0,w,c
 26702  0089C8  B4D8               	btfsc	status,2,c
 26703  0089CA  0012               	return	
 26704                           
 26705                           ; BSR set to: 1
 26706                           ;outputs_MC50.c: 1089:     {;outputs_MC50.c: 1090:         ts_system.timeFreqFlashligth=
      +                          Freq;
 26707  0089CC  C010  F1B8         	movff	setFlashLigth_ON@Freq,_ts_system+30	;volatile
 26708  0089D0  C011  F1B9         	movff	setFlashLigth_ON@Freq+1,_ts_system+31	;volatile
 26709                           
 26710                           ; BSR set to: 1
 26711                           ;outputs_MC50.c: 1091:         var_sys.upFaseFlashligth ^= (1 << 0);
 26712  0089D4  0E01               	movlw	1
 26713  0089D6  1B25               	xorwf	(_var_sys+37)& (0+255),f,b	;volatile
 26714  0089D8                     l2514:
 26715                           
 26716                           ; BSR set to: 1
 26717  0089D8  0012               	return		;funcret
 26718  0089DA                     __end_of_setFlashLigth_ON:
 26719                           	callstack 0
 26720                           
 26721 ;; *************** function _ControlInputs *****************
 26722 ;; Defined at:
 26723 ;;		line 674 in file "inputs_MC50.c"
 26724 ;; Parameters:    Size  Location     Type
 26725 ;;		None
 26726 ;; Auto vars:     Size  Location     Type
 26727 ;;		None
 26728 ;; Return value:  Size  Location     Type
 26729 ;;                  1    wreg      void 
 26730 ;; Registers used:
 26731 ;;		wreg, status,2, status,0
 26732 ;; Tracked objects:
 26733 ;;		On entry : 3E/1
 26734 ;;		On exit  : 3E/0
 26735 ;;		Unchanged: 0/0
 26736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26740 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26741 ;;Total ram usage:        0 bytes
 26742 ;; Hardware stack levels used: 1
 26743 ;; Hardware stack levels required when called: 4
 26744 ;; This function calls:
 26745 ;;		Nothing
 26746 ;; This function is called by:
 26747 ;;		_main
 26748 ;; This function uses a non-reentrant model
 26749 ;;
 26750                           
 26751                           	psect	text115
 26752  0064B8                     __ptext115:
 26753                           	callstack 0
 26754  0064B8                     _ControlInputs:
 26755                           	callstack 26
 26756                           
 26757                           ;inputs_MC50.c: 678:     if (( var_sys.StateMotor==InClose || (((PORTEbits.RE1 == 1)&& v
      +                          ar_sys_NVM.Direction_motor == 0)||((PORTEbits.RE0 == 1)&&var_sys_NVM.Direction_motor == 
      +                          1))) && (var_sys.FimCurso_CloseIsEnabled == YES))
 26758                           
 26759                           ; BSR set to: 1
 26760                           ;incstack = 0
 26761  0064B8  0E03               	movlw	3
 26762  0064BA  0101               	movlb	1	; () banked
 26763  0064BC  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 26764  0064BE  B4D8               	btfsc	status,2,c
 26765  0064C0  D00C               	goto	u19310
 26766                           
 26767                           ; BSR set to: 1
 26768  0064C2  A291               	btfss	145,1,c	;volatile
 26769  0064C4  D004               	goto	u19290
 26770                           
 26771                           ; BSR set to: 1
 26772  0064C6  0100               	movlb	0	; () banked
 26773  0064C8  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 26774  0064CA  B4D8               	btfsc	status,2,c
 26775  0064CC  D006               	goto	u19310
 26776  0064CE                     u19290:
 26777  0064CE  A091               	btfss	145,0,c	;volatile
 26778  0064D0  D00A               	goto	l16689
 26779  0064D2  0100               	movlb	0	; () banked
 26780  0064D4  05B3               	decf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 26781  0064D6  A4D8               	btfss	status,2,c
 26782  0064D8  D006               	goto	l16689
 26783  0064DA                     u19310:
 26784  0064DA  0101               	movlb	1	; () banked
 26785  0064DC  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
 26786  0064DE  A4D8               	btfss	status,2,c
 26787  0064E0  D002               	goto	l16689
 26788                           
 26789                           ; BSR set to: 1
 26790                           ;inputs_MC50.c: 679:     {;inputs_MC50.c: 680:         var_sys.StateMotor = Stopped;
 26791  0064E2  0E00               	movlw	0
 26792  0064E4  6F00               	movwf	_var_sys& (0+255),b	;volatile
 26793  0064E6                     l16689:
 26794                           
 26795                           ;inputs_MC50.c: 683:     if((var_sys.StateMotor==InOpenFull || var_sys.StateMotor==InOpe
      +                          nWalk || (((PORTEbits.RE0 == 1) &&var_sys_NVM.Direction_motor == 0)||((PORTEbits.RE1 == 
      +                          1) && var_sys_NVM.Direction_motor == 1))) && (var_sys.FimCurso_OpenIsEnabled == YES))
 26796  0064E6  0101               	movlb	1	; () banked
 26797  0064E8  0500               	decf	_var_sys& (0+255),w,b	;volatile
 26798  0064EA  B4D8               	btfsc	status,2,c
 26799  0064EC  D010               	goto	u19380
 26800                           
 26801                           ; BSR set to: 1
 26802  0064EE  0E02               	movlw	2
 26803  0064F0  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 26804  0064F2  B4D8               	btfsc	status,2,c
 26805  0064F4  D00C               	goto	u19380
 26806                           
 26807                           ; BSR set to: 1
 26808  0064F6  A091               	btfss	145,0,c	;volatile
 26809  0064F8  D004               	goto	u19360
 26810                           
 26811                           ; BSR set to: 1
 26812  0064FA  0100               	movlb	0	; () banked
 26813  0064FC  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 26814  0064FE  B4D8               	btfsc	status,2,c
 26815  006500  D006               	goto	u19380
 26816  006502                     u19360:
 26817  006502  A291               	btfss	145,1,c	;volatile
 26818  006504  D00A               	goto	l16703
 26819  006506  0100               	movlb	0	; () banked
 26820  006508  05B3               	decf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 26821  00650A  A4D8               	btfss	status,2,c
 26822  00650C  D006               	goto	l16703
 26823  00650E                     u19380:
 26824  00650E  0101               	movlb	1	; () banked
 26825  006510  0504               	decf	(_var_sys+4)& (0+255),w,b	;volatile
 26826  006512  A4D8               	btfss	status,2,c
 26827  006514  D002               	goto	l16703
 26828                           
 26829                           ; BSR set to: 1
 26830                           ;inputs_MC50.c: 684:     {;inputs_MC50.c: 685:         var_sys.StateMotor = Stopped;
 26831  006516  0E00               	movlw	0
 26832  006518  6F00               	movwf	_var_sys& (0+255),b	;volatile
 26833  00651A                     l16703:
 26834                           
 26835                           ;inputs_MC50.c: 688:     if (var_sys.LearningIsEnabled != YES){
 26836  00651A  0101               	movlb	1	; () banked
 26837  00651C  0526               	decf	(_var_sys+38)& (0+255),w,b	;volatile
 26838  00651E  B4D8               	btfsc	status,2,c
 26839  006520  0012               	return	
 26840                           
 26841                           ; BSR set to: 1
 26842                           ;inputs_MC50.c: 690:         if((var_sys_NVM.photoCellIsON == 1) && (var_sys.photoCellIs
      +                          Obstructed == YES) && var_sys.AutoInversionActive==NO)
 26843  006522  0100               	movlb	0	; () banked
 26844  006524  059F               	decf	(_var_sys_NVM+7)& (0+255),w,b	;volatile
 26845  006526  A4D8               	btfss	status,2,c
 26846  006528  D02B               	goto	l16729
 26847                           
 26848                           ; BSR set to: 0
 26849  00652A  0101               	movlb	1	; () banked
 26850  00652C  0501               	decf	(_var_sys+1)& (0+255),w,b	;volatile
 26851  00652E  A4D8               	btfss	status,2,c
 26852  006530  D027               	goto	l16729
 26853                           
 26854                           ; BSR set to: 1
 26855  006532  5127               	movf	(_var_sys+39)& (0+255),w,b	;volatile
 26856  006534  A4D8               	btfss	status,2,c
 26857  006536  D024               	goto	l16729
 26858                           
 26859                           ; BSR set to: 1
 26860                           ;inputs_MC50.c: 691:         {;inputs_MC50.c: 699:             if((var_sys.StateMotor==I
      +                          nOpenFull || var_sys.StateMotor==InOpenWalk) && (var_sys_NVM.photoCellInOpen==1))
 26861  006538  0500               	decf	_var_sys& (0+255),w,b	;volatile
 26862  00653A  B4D8               	btfsc	status,2,c
 26863  00653C  D004               	goto	u19450
 26864                           
 26865                           ; BSR set to: 1
 26866  00653E  0E02               	movlw	2
 26867  006540  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 26868  006542  A4D8               	btfss	status,2,c
 26869  006544  D007               	goto	l16719
 26870  006546                     u19450:
 26871                           
 26872                           ; BSR set to: 1
 26873  006546  0100               	movlb	0	; () banked
 26874  006548  05A0               	decf	(_var_sys_NVM+8)& (0+255),w,b	;volatile
 26875  00654A  A4D8               	btfss	status,2,c
 26876  00654C  D003               	goto	l16719
 26877                           
 26878                           ; BSR set to: 0
 26879                           ;inputs_MC50.c: 700:             {;inputs_MC50.c: 701:                 var_sys.StateMoto
      +                          r = Stopped;
 26880  00654E  0E00               	movlw	0
 26881  006550  0101               	movlb	1	; () banked
 26882  006552  D015               	goto	L102
 26883  006554                     l16719:
 26884  006554  0E03               	movlw	3
 26885  006556  0101               	movlb	1	; () banked
 26886  006558  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 26887  00655A  A4D8               	btfss	status,2,c
 26888  00655C  D011               	goto	l16729
 26889                           
 26890                           ; BSR set to: 1
 26891  00655E  0100               	movlb	0	; () banked
 26892  006560  51A0               	movf	(_var_sys_NVM+8)& (0+255),w,b	;volatile
 26893  006562  A4D8               	btfss	status,2,c
 26894  006564  D00D               	goto	l16729
 26895                           
 26896                           ; BSR set to: 0
 26897  006566  0101               	movlb	1	; () banked
 26898  006568  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 26899  00656A  D005               	goto	u19490
 26900  00656C  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 26901  00656E  E108               	bnz	l16729
 26902  006570  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 26903  006572  B0D8               	btfsc	status,0,c
 26904  006574  D005               	goto	l16729
 26905  006576                     u19490:
 26906                           
 26907                           ; BSR set to: 1
 26908  006576  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 26909  006578  A4D8               	btfss	status,2,c
 26910  00657A  D002               	goto	l16729
 26911                           
 26912                           ; BSR set to: 1
 26913                           ;inputs_MC50.c: 706:             {;inputs_MC50.c: 707:                 var_sys.StateMoto
      +                          r = Stopped;
 26914  00657C  0E00               	movlw	0
 26915  00657E                     L102:
 26916  00657E  6F00               	movwf	_var_sys& (0+255),b	;volatile
 26917  006580                     l16729:
 26918                           
 26919                           ;inputs_MC50.c: 713:         if((var_sys_NVM.securityBandIsON == 1 || var_sys_NVM.Stopbo
      +                          ton == 1) && (var_sys.SecurityBarIsObstructed == YES && var_sys.AutoInversionActive == N
      +                          O))
 26920  006580  0100               	movlb	0	; () banked
 26921  006582  05A1               	decf	(_var_sys_NVM+9)& (0+255),w,b	;volatile
 26922  006584  B4D8               	btfsc	status,2,c
 26923  006586  D003               	goto	u19520
 26924                           
 26925                           ; BSR set to: 0
 26926  006588  05AE               	decf	(_var_sys_NVM+22)& (0+255),w,b	;volatile
 26927  00658A  A4D8               	btfss	status,2,c
 26928  00658C  0012               	return	
 26929  00658E                     u19520:
 26930                           
 26931                           ; BSR set to: 0
 26932  00658E  0101               	movlb	1	; () banked
 26933  006590  0502               	decf	(_var_sys+2)& (0+255),w,b	;volatile
 26934  006592  A4D8               	btfss	status,2,c
 26935  006594  0012               	return	
 26936                           
 26937                           ; BSR set to: 1
 26938  006596  5127               	movf	(_var_sys+39)& (0+255),w,b	;volatile
 26939  006598  A4D8               	btfss	status,2,c
 26940  00659A  0012               	return	
 26941                           
 26942                           ; BSR set to: 1
 26943                           ;inputs_MC50.c: 714:         {;inputs_MC50.c: 723:             if(var_sys.StateMotor == 
      +                          InClose && (var_sys_NVM.securityBandInOpen == 0))
 26944  00659C  0E03               	movlw	3
 26945  00659E  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 26946  0065A0  A4D8               	btfss	status,2,c
 26947  0065A2  D008               	goto	l16743
 26948                           
 26949                           ; BSR set to: 1
 26950  0065A4  0100               	movlb	0	; () banked
 26951  0065A6  51A3               	movf	(_var_sys_NVM+11)& (0+255),w,b	;volatile
 26952  0065A8  A4D8               	btfss	status,2,c
 26953  0065AA  D004               	goto	l16743
 26954                           
 26955                           ; BSR set to: 0
 26956                           ;inputs_MC50.c: 724:             {;inputs_MC50.c: 725:                 var_sys.StateMoto
      +                          r = Stopped;
 26957  0065AC  0E00               	movlw	0
 26958  0065AE  0101               	movlb	1	; () banked
 26959  0065B0  6F00               	movwf	_var_sys& (0+255),b	;volatile
 26960                           
 26961                           ;inputs_MC50.c: 727:             }
 26962  0065B2  0012               	return	
 26963  0065B4                     l16743:
 26964  0065B4  0101               	movlb	1	; () banked
 26965  0065B6  0500               	decf	_var_sys& (0+255),w,b	;volatile
 26966  0065B8  B4D8               	btfsc	status,2,c
 26967  0065BA  D004               	goto	u19580
 26968                           
 26969                           ; BSR set to: 1
 26970  0065BC  0E02               	movlw	2
 26971  0065BE  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 26972  0065C0  A4D8               	btfss	status,2,c
 26973  0065C2  D004               	goto	u19590
 26974  0065C4                     u19580:
 26975                           
 26976                           ; BSR set to: 1
 26977  0065C4  0100               	movlb	0	; () banked
 26978  0065C6  05A3               	decf	(_var_sys_NVM+11)& (0+255),w,b	;volatile
 26979  0065C8  B4D8               	btfsc	status,2,c
 26980  0065CA  D004               	goto	u19600
 26981  0065CC                     u19590:
 26982  0065CC  0100               	movlb	0	; () banked
 26983  0065CE  05AE               	decf	(_var_sys_NVM+22)& (0+255),w,b	;volatile
 26984  0065D0  A4D8               	btfss	status,2,c
 26985  0065D2  0012               	return	
 26986  0065D4                     u19600:
 26987                           
 26988                           ; BSR set to: 0
 26989                           ;inputs_MC50.c: 730:             {;inputs_MC50.c: 731:                 var_sys.StateMoto
      +                          r = Stopped;
 26990  0065D4  0E00               	movlw	0
 26991  0065D6  0101               	movlb	1	; () banked
 26992  0065D8  6F00               	movwf	_var_sys& (0+255),b	;volatile
 26993  0065DA  0012               	return	
 26994  0065DC                     __end_of_ControlInputs:
 26995                           	callstack 0
 26996                           
 26997 ;; *************** function _ControlCurrent *****************
 26998 ;; Defined at:
 26999 ;;		line 342 in file "controlCurrent_MC50.c"
 27000 ;; Parameters:    Size  Location     Type
 27001 ;;		None
 27002 ;; Auto vars:     Size  Location     Type
 27003 ;;		None
 27004 ;; Return value:  Size  Location     Type
 27005 ;;                  1    wreg      void 
 27006 ;; Registers used:
 27007 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27008 ;; Tracked objects:
 27009 ;;		On entry : 3E/1
 27010 ;;		On exit  : 3E/0
 27011 ;;		Unchanged: 0/0
 27012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27015 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27016 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27017 ;;Total ram usage:        4 bytes
 27018 ;; Hardware stack levels used: 1
 27019 ;; Hardware stack levels required when called: 6
 27020 ;; This function calls:
 27021 ;;		_GetMotorPower
 27022 ;;		_getCurrentComparator
 27023 ;;		_refreshADCZeroOffset
 27024 ;;		_refreshCurrent
 27025 ;; This function is called by:
 27026 ;;		_main
 27027 ;; This function uses a non-reentrant model
 27028 ;;
 27029                           
 27030                           	psect	text116
 27031  005E72                     __ptext116:
 27032                           	callstack 0
 27033  005E72                     _ControlCurrent:
 27034                           	callstack 24
 27035                           
 27036                           ;controlCurrent_MC50.c: 345:     refreshCurrent();
 27037                           
 27038                           ;incstack = 0
 27039  005E72  ECC7  F043         	call	_refreshCurrent	;wreg free
 27040                           
 27041                           ;controlCurrent_MC50.c: 351:     refreshADCZeroOffset();
 27042  005E76  EC81  F034         	call	_refreshADCZeroOffset	;wreg free
 27043                           
 27044                           ;controlCurrent_MC50.c: 354:     var_sys.velocityActual = GetMotorPower();
 27045  005E7A  ECA8  F037         	call	_GetMotorPower	;wreg free
 27046  005E7E  6E23               	movwf	??_ControlCurrent^0,c
 27047  005E80  5023               	movf	??_ControlCurrent^0,w,c
 27048  005E82  6F38               	movwf	(_var_sys+56)& (0+255),b	;volatile
 27049  005E84  6B39               	clrf	(_var_sys+57)& (0+255),b	;volatile
 27050                           
 27051                           ; BSR set to: 1
 27052                           ;controlCurrent_MC50.c: 355:     var_sys.ActualComparatorCurrent = getCurrentComparator(
      +                          );
 27053  005E86  EC4E  F02B         	call	_getCurrentComparator	;wreg free
 27054  005E8A  C016  F134         	movff	?_getCurrentComparator,_var_sys+52	;volatile
 27055  005E8E  C017  F135         	movff	?_getCurrentComparator+1,_var_sys+53	;volatile
 27056  005E92  C018  F136         	movff	?_getCurrentComparator+2,_var_sys+54	;volatile
 27057  005E96  C019  F137         	movff	?_getCurrentComparator+3,_var_sys+55	;volatile
 27058                           
 27059                           ; BSR set to: 1
 27060                           ;controlCurrent_MC50.c: 357:     if(var_sys.StateMotor == Stopped)
 27061  005E9A  5100               	movf	_var_sys& (0+255),w,b	;volatile
 27062  005E9C  A4D8               	btfss	status,2,c
 27063  005E9E  D00F               	goto	l22583
 27064                           
 27065                           ; BSR set to: 1
 27066                           ;controlCurrent_MC50.c: 358:     {;controlCurrent_MC50.c: 360:         numberOfErrorCurr
      +                          ent=0;
 27067  005EA0  0E00               	movlw	0
 27068  005EA2  0100               	movlb	0	; () banked
 27069  005EA4  6F8E               	movwf	_numberOfErrorCurrent& (0+255),b	;volatile
 27070                           
 27071                           ;controlCurrent_MC50.c: 361:         var_sys.CurrentAlarmIsOn=NO;
 27072  005EA6  0E00               	movlw	0
 27073  005EA8  0101               	movlb	1	; () banked
 27074  005EAA  6F41               	movwf	(_var_sys+65)& (0+255),b	;volatile
 27075                           
 27076                           ;controlCurrent_MC50.c: 362:         var_sys.InvertionCurrentOpening=NO;
 27077  005EAC  0E00               	movlw	0
 27078  005EAE  6F45               	movwf	(_var_sys+69)& (0+255),b	;volatile
 27079                           
 27080                           ;controlCurrent_MC50.c: 363:         var_sys.InvertionCurrentClosing=NO;
 27081  005EB0  0E00               	movlw	0
 27082  005EB2  6F44               	movwf	(_var_sys+68)& (0+255),b	;volatile
 27083                           
 27084                           ;controlCurrent_MC50.c: 364:         ts_system.TimeTransitionDecelaration=(1000/50);
 27085  005EB4  0E00               	movlw	0
 27086  005EB6  6FD3               	movwf	(_ts_system+57)& (0+255),b	;volatile
 27087  005EB8  0E14               	movlw	20
 27088  005EBA  6FD2               	movwf	(_ts_system+56)& (0+255),b	;volatile
 27089                           
 27090                           ;controlCurrent_MC50.c: 365:     }
 27091  005EBC  0012               	return	
 27092  005EBE                     l22583:
 27093                           
 27094                           ; BSR set to: 1
 27095  005EBE  517B               	movf	_powerControl_st& (0+255),w,b
 27096  005EC0  A4D8               	btfss	status,2,c
 27097  005EC2  D05D               	goto	l22617
 27098                           
 27099                           ; BSR set to: 1
 27100                           ;controlCurrent_MC50.c: 368:     {;controlCurrent_MC50.c: 376:         ts_system.TimeTra
      +                          nsitionDecelaration=(1000/50);
 27101  005EC4  0E00               	movlw	0
 27102  005EC6  6FD3               	movwf	(_ts_system+57)& (0+255),b	;volatile
 27103  005EC8  0E14               	movlw	20
 27104  005ECA  6FD2               	movwf	(_ts_system+56)& (0+255),b	;volatile
 27105                           
 27106                           ; BSR set to: 1
 27107                           ;controlCurrent_MC50.c: 377:         if (( var_sys.ActualCurrent>var_sys.ActualComparato
      +                          rCurrent ) && (ts_system.TimeChargeCondesador<=0)&&var_sys_NVM.motorSensitivity!=0 && ts
      +                          _system.TimeReleCapacitor<=0)
 27108  005ECC  512E               	movf	(_var_sys+46)& (0+255),w,b	;volatile
 27109  005ECE  6E23               	movwf	??_ControlCurrent^0,c
 27110  005ED0  512F               	movf	(_var_sys+47)& (0+255),w,b	;volatile
 27111  005ED2  6E24               	movwf	(??_ControlCurrent+1)^0,c
 27112  005ED4  6A25               	clrf	(??_ControlCurrent+2)^0,c
 27113  005ED6  6A26               	clrf	(??_ControlCurrent+3)^0,c
 27114  005ED8  5023               	movf	??_ControlCurrent^0,w,c
 27115  005EDA  5D34               	subwf	(_var_sys+52)& (0+255),w,b	;volatile
 27116  005EDC  5024               	movf	(??_ControlCurrent+1)^0,w,c
 27117  005EDE  5935               	subwfb	(_var_sys+53)& (0+255),w,b	;volatile
 27118  005EE0  5025               	movf	(??_ControlCurrent+2)^0,w,c
 27119  005EE2  5936               	subwfb	(_var_sys+54)& (0+255),w,b	;volatile
 27120  005EE4  5026               	movf	(??_ControlCurrent+3)^0,w,c
 27121  005EE6  5937               	subwfb	(_var_sys+55)& (0+255),w,b	;volatile
 27122  005EE8  B0D8               	btfsc	status,0,c
 27123  005EEA  D03E               	goto	l22615
 27124                           
 27125                           ; BSR set to: 1
 27126  005EEC  BFB5               	btfsc	(_ts_system+27)& (0+255),7,b	;volatile
 27127  005EEE  D005               	goto	u27390
 27128  005EF0  51B5               	movf	(_ts_system+27)& (0+255),w,b	;volatile
 27129  005EF2  E13A               	bnz	l22615
 27130  005EF4  05B4               	decf	(_ts_system+26)& (0+255),w,b	;volatile
 27131  005EF6  B0D8               	btfsc	status,0,c
 27132  005EF8  D037               	goto	l22615
 27133  005EFA                     u27390:
 27134                           
 27135                           ; BSR set to: 1
 27136  005EFA  0100               	movlb	0	; () banked
 27137  005EFC  519B               	movf	(_var_sys_NVM+3)& (0+255),w,b	;volatile
 27138  005EFE  B4D8               	btfsc	status,2,c
 27139  005F00  D033               	goto	l22615
 27140                           
 27141                           ; BSR set to: 0
 27142  005F02  0101               	movlb	1	; () banked
 27143  005F04  BFDD               	btfsc	(_ts_system+67)& (0+255),7,b	;volatile
 27144  005F06  D005               	goto	u27410
 27145  005F08  51DD               	movf	(_ts_system+67)& (0+255),w,b	;volatile
 27146  005F0A  E12E               	bnz	l22615
 27147  005F0C  05DC               	decf	(_ts_system+66)& (0+255),w,b	;volatile
 27148  005F0E  B0D8               	btfsc	status,0,c
 27149  005F10  D02B               	goto	l22615
 27150  005F12                     u27410:
 27151                           
 27152                           ; BSR set to: 1
 27153                           ;controlCurrent_MC50.c: 378:         {;controlCurrent_MC50.c: 379:              if (numb
      +                          erOfErrorCurrent >=1)
 27154  005F12  0100               	movlb	0	; () banked
 27155  005F14  518E               	movf	_numberOfErrorCurrent& (0+255),w,b	;volatile
 27156  005F16  B4D8               	btfsc	status,2,c
 27157  005F18  D00B               	goto	l22601
 27158                           
 27159                           ; BSR set to: 0
 27160                           ;controlCurrent_MC50.c: 380:              {;controlCurrent_MC50.c: 381:                 
      +                           if(erroranterior > var_sys.ActualCurrent )
 27161  005F1A  0101               	movlb	1	; () banked
 27162  005F1C  5189               	movf	_erroranterior& (0+255),w,b	;volatile
 27163  005F1E  5D2E               	subwf	(_var_sys+46)& (0+255),w,b	;volatile
 27164  005F20  518A               	movf	(_erroranterior+1)& (0+255),w,b	;volatile
 27165  005F22  592F               	subwfb	(_var_sys+47)& (0+255),w,b	;volatile
 27166  005F24  B0D8               	btfsc	status,0,c
 27167  005F26  D004               	goto	l22601
 27168                           
 27169                           ; BSR set to: 1
 27170                           ;controlCurrent_MC50.c: 382:                  {;controlCurrent_MC50.c: 383:             
      +                                 numberOfErrorCurrent = 0;
 27171  005F28  0E00               	movlw	0
 27172  005F2A  0100               	movlb	0	; () banked
 27173  005F2C  6F8E               	movwf	_numberOfErrorCurrent& (0+255),b	;volatile
 27174                           
 27175                           ;controlCurrent_MC50.c: 384:                  }
 27176  005F2E  D002               	goto	l22603
 27177  005F30                     l22601:
 27178                           
 27179                           ;controlCurrent_MC50.c: 386:                  {;controlCurrent_MC50.c: 387:             
      +                                 numberOfErrorCurrent++;
 27180  005F30  0100               	movlb	0	; () banked
 27181  005F32  2B8E               	incf	_numberOfErrorCurrent& (0+255),f,b	;volatile
 27182  005F34                     l22603:
 27183                           
 27184                           ; BSR set to: 0
 27185                           ;controlCurrent_MC50.c: 389:                  erroranterior = var_sys.ActualCurrent;
 27186  005F34  C12E  F189         	movff	_var_sys+46,_erroranterior	;volatile
 27187  005F38  C12F  F18A         	movff	_var_sys+47,_erroranterior+1	;volatile
 27188                           
 27189                           ; BSR set to: 0
 27190                           ;controlCurrent_MC50.c: 398:             if(ts_system.TimeCurrentWaitForAlarm<=0&&number
      +                          OfErrorCurrent>1)
 27191                           
 27192                           ;controlCurrent_MC50.c: 390:              }
 27193  005F3C  0101               	movlb	1	; () banked
 27194  005F3E  BFC9               	btfsc	(_ts_system+47)& (0+255),7,b	;volatile
 27195  005F40  D005               	goto	u27440
 27196  005F42  51C9               	movf	(_ts_system+47)& (0+255),w,b	;volatile
 27197  005F44  E14F               	bnz	l1405
 27198  005F46  05C8               	decf	(_ts_system+46)& (0+255),w,b	;volatile
 27199  005F48  B0D8               	btfsc	status,0,c
 27200  005F4A  0012               	return	
 27201  005F4C                     u27440:
 27202                           
 27203                           ; BSR set to: 1
 27204  005F4C  0E01               	movlw	1
 27205  005F4E  0100               	movlb	0	; () banked
 27206  005F50  658E               	cpfsgt	_numberOfErrorCurrent& (0+255),b	;volatile
 27207  005F52  0012               	return	
 27208                           
 27209                           ; BSR set to: 0
 27210                           ;controlCurrent_MC50.c: 399:             {;controlCurrent_MC50.c: 400:                 v
      +                          ar_sys.StateMotor = Stopped;
 27211  005F54  0E00               	movlw	0
 27212  005F56  0101               	movlb	1	; () banked
 27213  005F58  6F00               	movwf	_var_sys& (0+255),b	;volatile
 27214                           
 27215                           ;controlCurrent_MC50.c: 401:                 ts_system.TimeCurrentAlarm= (1000/50)*10;
 27216  005F5A  0E00               	movlw	0
 27217  005F5C  6FC5               	movwf	(_ts_system+43)& (0+255),b	;volatile
 27218  005F5E  0EC8               	movlw	200
 27219  005F60  6FC4               	movwf	(_ts_system+42)& (0+255),b	;volatile
 27220                           
 27221                           ;controlCurrent_MC50.c: 402:                 var_sys.CurrentAlarmIsOn=YES;
 27222  005F62  0E01               	movlw	1
 27223  005F64  6F41               	movwf	(_var_sys+65)& (0+255),b	;volatile
 27224  005F66  0012               	return	
 27225  005F68                     l22615:
 27226                           
 27227                           ;controlCurrent_MC50.c: 409:         {;controlCurrent_MC50.c: 410:             numberOfE
      +                          rrorCurrent=0;
 27228  005F68  0E00               	movlw	0
 27229  005F6A  0100               	movlb	0	; () banked
 27230  005F6C  6F8E               	movwf	_numberOfErrorCurrent& (0+255),b	;volatile
 27231                           
 27232                           ;controlCurrent_MC50.c: 411:             var_sys.CurrentAlarmIsOn=NO;
 27233  005F6E  0E00               	movlw	0
 27234  005F70  0101               	movlb	1	; () banked
 27235  005F72  6F41               	movwf	(_var_sys+65)& (0+255),b	;volatile
 27236                           
 27237                           ;controlCurrent_MC50.c: 412:             var_sys.InvertionCurrentOpening=NO;
 27238  005F74  0E00               	movlw	0
 27239  005F76  6F45               	movwf	(_var_sys+69)& (0+255),b	;volatile
 27240                           
 27241                           ;controlCurrent_MC50.c: 413:             var_sys.InvertionCurrentClosing=NO;
 27242  005F78  0E00               	movlw	0
 27243  005F7A  6F44               	movwf	(_var_sys+68)& (0+255),b	;volatile
 27244  005F7C  0012               	return	
 27245  005F7E                     l22617:
 27246                           
 27247                           ; BSR set to: 1
 27248                           ;controlCurrent_MC50.c: 419:     {;controlCurrent_MC50.c: 420:         if( ( var_sys.Act
      +                          ualHistCurrent<var_sys.ActualComparatorCurrent ) && (ts_system.TimeChargeCondesador<=0)&
      +                          &ts_system.TimeTransitionDecelaration<=0&&var_sys_NVM.decelarationSensivity!=0)
 27249  005F7E  5134               	movf	(_var_sys+52)& (0+255),w,b	;volatile
 27250  005F80  5D30               	subwf	(_var_sys+48)& (0+255),w,b	;volatile
 27251  005F82  5135               	movf	(_var_sys+53)& (0+255),w,b	;volatile
 27252  005F84  5931               	subwfb	(_var_sys+49)& (0+255),w,b	;volatile
 27253  005F86  5136               	movf	(_var_sys+54)& (0+255),w,b	;volatile
 27254  005F88  5932               	subwfb	(_var_sys+50)& (0+255),w,b	;volatile
 27255  005F8A  5137               	movf	(_var_sys+55)& (0+255),w,b	;volatile
 27256  005F8C  5933               	subwfb	(_var_sys+51)& (0+255),w,b	;volatile
 27257  005F8E  B0D8               	btfsc	status,0,c
 27258  005F90  D7EB               	goto	l22615
 27259                           
 27260                           ; BSR set to: 1
 27261  005F92  BFB5               	btfsc	(_ts_system+27)& (0+255),7,b	;volatile
 27262  005F94  D005               	goto	u27470
 27263  005F96  51B5               	movf	(_ts_system+27)& (0+255),w,b	;volatile
 27264  005F98  E1E7               	bnz	l22615
 27265  005F9A  05B4               	decf	(_ts_system+26)& (0+255),w,b	;volatile
 27266  005F9C  B0D8               	btfsc	status,0,c
 27267  005F9E  D7E4               	goto	l22615
 27268  005FA0                     u27470:
 27269                           
 27270                           ; BSR set to: 1
 27271  005FA0  BFD3               	btfsc	(_ts_system+57)& (0+255),7,b	;volatile
 27272  005FA2  D005               	goto	u27480
 27273  005FA4  51D3               	movf	(_ts_system+57)& (0+255),w,b	;volatile
 27274  005FA6  E1E0               	bnz	l22615
 27275  005FA8  05D2               	decf	(_ts_system+56)& (0+255),w,b	;volatile
 27276  005FAA  B0D8               	btfsc	status,0,c
 27277  005FAC  D7DD               	goto	l22615
 27278  005FAE                     u27480:
 27279                           
 27280                           ; BSR set to: 1
 27281  005FAE  0100               	movlb	0	; () banked
 27282  005FB0  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
 27283  005FB2  B4D8               	btfsc	status,2,c
 27284  005FB4  D7D9               	goto	l22615
 27285                           
 27286                           ; BSR set to: 0
 27287                           ;controlCurrent_MC50.c: 421:         {;controlCurrent_MC50.c: 423:             numberOfE
      +                          rrorCurrent++;
 27288  005FB6  2B8E               	incf	_numberOfErrorCurrent& (0+255),f,b	;volatile
 27289                           
 27290                           ; BSR set to: 0
 27291                           ;controlCurrent_MC50.c: 424:             if(ts_system.TimeCurrentWaitForAlarm<=0&&number
      +                          OfErrorCurrent>2)
 27292  005FB8  0101               	movlb	1	; () banked
 27293  005FBA  BFC9               	btfsc	(_ts_system+47)& (0+255),7,b	;volatile
 27294  005FBC  D005               	goto	u27500
 27295  005FBE  51C9               	movf	(_ts_system+47)& (0+255),w,b	;volatile
 27296  005FC0  E111               	bnz	l1405
 27297  005FC2  05C8               	decf	(_ts_system+46)& (0+255),w,b	;volatile
 27298  005FC4  B0D8               	btfsc	status,0,c
 27299  005FC6  0012               	return	
 27300  005FC8                     u27500:
 27301                           
 27302                           ; BSR set to: 1
 27303  005FC8  0E02               	movlw	2
 27304  005FCA  0100               	movlb	0	; () banked
 27305  005FCC  658E               	cpfsgt	_numberOfErrorCurrent& (0+255),b	;volatile
 27306  005FCE  0012               	return	
 27307                           
 27308                           ; BSR set to: 0
 27309                           ;controlCurrent_MC50.c: 425:             {;controlCurrent_MC50.c: 426:                 v
      +                          ar_sys.StateMotor = Stopped;
 27310  005FD0  0E00               	movlw	0
 27311  005FD2  0101               	movlb	1	; () banked
 27312  005FD4  6F00               	movwf	_var_sys& (0+255),b	;volatile
 27313                           
 27314                           ;controlCurrent_MC50.c: 427:                 ts_system.TimeCurrentAlarm= (1000/50)*10;
 27315  005FD6  0E00               	movlw	0
 27316  005FD8  6FC5               	movwf	(_ts_system+43)& (0+255),b	;volatile
 27317  005FDA  0EC8               	movlw	200
 27318  005FDC  6FC4               	movwf	(_ts_system+42)& (0+255),b	;volatile
 27319                           
 27320                           ;controlCurrent_MC50.c: 428:                 var_sys.CurrentAlarmIsOn=YES;
 27321  005FDE  0E01               	movlw	1
 27322  005FE0  6F41               	movwf	(_var_sys+65)& (0+255),b	;volatile
 27323  005FE2  0012               	return	
 27324  005FE4                     l1405:
 27325  005FE4  0012               	return		;funcret
 27326  005FE6                     __end_of_ControlCurrent:
 27327                           	callstack 0
 27328                           
 27329 ;; *************** function _refreshCurrent *****************
 27330 ;; Defined at:
 27331 ;;		line 233 in file "controlCurrent_MC50.c"
 27332 ;; Parameters:    Size  Location     Type
 27333 ;;		None
 27334 ;; Auto vars:     Size  Location     Type
 27335 ;;		None
 27336 ;; Return value:  Size  Location     Type
 27337 ;;                  1    wreg      void 
 27338 ;; Registers used:
 27339 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27340 ;; Tracked objects:
 27341 ;;		On entry : 3E/1
 27342 ;;		On exit  : 3F/0
 27343 ;;		Unchanged: 0/0
 27344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27348 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27349 ;;Total ram usage:        0 bytes
 27350 ;; Hardware stack levels used: 1
 27351 ;; Hardware stack levels required when called: 5
 27352 ;; This function calls:
 27353 ;;		_saveEnergyADCHist
 27354 ;;		_sumEnergyADC
 27355 ;;		_sumHIST
 27356 ;; This function is called by:
 27357 ;;		_ControlCurrent
 27358 ;; This function uses a non-reentrant model
 27359 ;;
 27360                           
 27361                           	psect	text117
 27362  00878E                     __ptext117:
 27363                           	callstack 0
 27364  00878E                     _refreshCurrent:
 27365                           	callstack 24
 27366                           
 27367                           ;controlCurrent_MC50.c: 238:     if ( (var_sys_NVM.electricBrake==1) && (ts_system.TimeE
      +                          lectricBrake>0) )
 27368                           
 27369                           ;incstack = 0
 27370  00878E  0100               	movlb	0	; () banked
 27371  008790  05AF               	decf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 27372  008792  A4D8               	btfss	status,2,c
 27373  008794  D008               	goto	l14451
 27374                           
 27375                           ; BSR set to: 0
 27376  008796  0101               	movlb	1	; () banked
 27377  008798  BFC3               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 27378  00879A  D005               	goto	l14451
 27379  00879C  51C3               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 27380  00879E  E109               	bnz	l1372
 27381  0087A0  05C2               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 27382  0087A2  B0D8               	btfsc	status,0,c
 27383  0087A4  D006               	goto	l1372
 27384  0087A6                     l14451:
 27385                           
 27386                           ;controlCurrent_MC50.c: 243:     {;controlCurrent_MC50.c: 245:         var_sys.ActualCur
      +                          rent=sumEnergyADC();
 27387  0087A6  EC8E  F03B         	call	_sumEnergyADC	;wreg free
 27388  0087AA  C010  F12E         	movff	?_sumEnergyADC,_var_sys+46	;volatile
 27389  0087AE  C011  F12F         	movff	?_sumEnergyADC+1,_var_sys+47	;volatile
 27390  0087B2                     l1372:
 27391                           
 27392                           ; BSR set to: 1
 27393                           ;controlCurrent_MC50.c: 248:     saveEnergyADCHist(var_sys.ActualCurrent);
 27394  0087B2  C12E  F010         	movff	_var_sys+46,saveEnergyADCHist@valueToSave	;volatile
 27395  0087B6  C12F  F011         	movff	_var_sys+47,saveEnergyADCHist@valueToSave+1	;volatile
 27396  0087BA  ECD3  F046         	call	_saveEnergyADCHist	;wreg free
 27397                           
 27398                           ;controlCurrent_MC50.c: 250:     var_sys.ActualHistCurrent=sumHIST();
 27399  0087BE  EC7E  F035         	call	_sumHIST	;wreg free
 27400  0087C2  C010  F130         	movff	?_sumHIST,_var_sys+48	;volatile
 27401  0087C6  C011  F131         	movff	?_sumHIST+1,_var_sys+49	;volatile
 27402  0087CA  C012  F132         	movff	?_sumHIST+2,_var_sys+50	;volatile
 27403  0087CE  C013  F133         	movff	?_sumHIST+3,_var_sys+51	;volatile
 27404                           
 27405                           ; BSR set to: 0
 27406  0087D2  0012               	return		;funcret
 27407  0087D4                     __end_of_refreshCurrent:
 27408                           	callstack 0
 27409                           
 27410 ;; *************** function _sumHIST *****************
 27411 ;; Defined at:
 27412 ;;		line 199 in file "controlCurrent_MC50.c"
 27413 ;; Parameters:    Size  Location     Type
 27414 ;;		None
 27415 ;; Auto vars:     Size  Location     Type
 27416 ;;  sumH            4   27[COMRAM] unsigned long 
 27417 ;;  min             2   25[COMRAM] unsigned int 
 27418 ;;  max             2   23[COMRAM] unsigned int 
 27419 ;;  i               1   31[COMRAM] unsigned char 
 27420 ;; Return value:  Size  Location     Type
 27421 ;;                  4   15[COMRAM] unsigned long 
 27422 ;; Registers used:
 27423 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 27424 ;; Tracked objects:
 27425 ;;		On entry : 3F/0
 27426 ;;		On exit  : 3F/0
 27427 ;;		Unchanged: 3F/0
 27428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27429 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27430 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27431 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27432 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27433 ;;Total ram usage:       17 bytes
 27434 ;; Hardware stack levels used: 1
 27435 ;; Hardware stack levels required when called: 4
 27436 ;; This function calls:
 27437 ;;		Nothing
 27438 ;; This function is called by:
 27439 ;;		_refreshCurrent
 27440 ;; This function uses a non-reentrant model
 27441 ;;
 27442                           
 27443                           	psect	text118
 27444  006AFC                     __ptext118:
 27445                           	callstack 0
 27446  006AFC                     _sumHIST:
 27447                           	callstack 24
 27448                           
 27449                           ; BSR set to: 0
 27450                           ;controlCurrent_MC50.c: 201:     unsigned char i;;controlCurrent_MC50.c: 202:     unsign
      +                          ed long sumH = 0;
 27451                           
 27452                           ; BSR set to: 0
 27453                           ;incstack = 0
 27454  006AFC  0E00               	movlw	0
 27455  006AFE  6E1C               	movwf	sumHIST@sumH^0,c
 27456  006B00  0E00               	movlw	0
 27457  006B02  6E1D               	movwf	(sumHIST@sumH+1)^0,c
 27458  006B04  0E00               	movlw	0
 27459  006B06  6E1E               	movwf	(sumHIST@sumH+2)^0,c
 27460  006B08  0E00               	movlw	0
 27461  006B0A  6E1F               	movwf	(sumHIST@sumH+3)^0,c
 27462                           
 27463                           ;controlCurrent_MC50.c: 203:     unsigned int max=0;
 27464  006B0C  0E00               	movlw	0
 27465  006B0E  6E19               	movwf	(sumHIST@max+1)^0,c
 27466  006B10  0E00               	movlw	0
 27467  006B12  6E18               	movwf	sumHIST@max^0,c
 27468                           
 27469                           ; BSR set to: 0
 27470                           ;controlCurrent_MC50.c: 204:     unsigned int min=0xFFFF;
 27471  006B14  681A               	setf	sumHIST@min^0,c
 27472  006B16  681B               	setf	(sumHIST@min+1)^0,c
 27473                           
 27474                           ;controlCurrent_MC50.c: 207:     for( i = 0; i<(10); i++)
 27475  006B18  0E00               	movlw	0
 27476  006B1A  6E20               	movwf	sumHIST@i^0,c
 27477  006B1C                     l12605:
 27478                           
 27479                           ; BSR set to: 0
 27480                           ;controlCurrent_MC50.c: 208:     {;controlCurrent_MC50.c: 209:         sumH=sumH+SumEner
      +                          gyADCHist_array[i];
 27481  006B1C  5020               	movf	sumHIST@i^0,w,c
 27482  006B1E  0D02               	mullw	2
 27483  006B20  0E60               	movlw	low _SumEnergyADCHist_array
 27484  006B22  24F3               	addwf	243,w,c
 27485  006B24  6ED9               	movwf	fsr2l,c
 27486  006B26  0E02               	movlw	high _SumEnergyADCHist_array
 27487  006B28  20F4               	addwfc	prodh,w,c
 27488  006B2A  6EDA               	movwf	fsr2h,c
 27489  006B2C  CFDE F014          	movff	postinc2,??_sumHIST
 27490  006B30  CFDD F015          	movff	postdec2,??_sumHIST+1
 27491  006B34  5014               	movf	??_sumHIST^0,w,c
 27492  006B36  241C               	addwf	sumHIST@sumH^0,w,c
 27493  006B38  6E1C               	movwf	sumHIST@sumH^0,c
 27494  006B3A  5015               	movf	(??_sumHIST+1)^0,w,c
 27495  006B3C  201D               	addwfc	(sumHIST@sumH+1)^0,w,c
 27496  006B3E  6E1D               	movwf	(sumHIST@sumH+1)^0,c
 27497  006B40  0E00               	movlw	0
 27498  006B42  201E               	addwfc	(sumHIST@sumH+2)^0,w,c
 27499  006B44  6E1E               	movwf	(sumHIST@sumH+2)^0,c
 27500  006B46  0E00               	movlw	0
 27501  006B48  201F               	addwfc	(sumHIST@sumH+3)^0,w,c
 27502  006B4A  6E1F               	movwf	(sumHIST@sumH+3)^0,c
 27503                           
 27504                           ;controlCurrent_MC50.c: 212:         if(SumEnergyADCHist_array[i]>max)
 27505  006B4C  5020               	movf	sumHIST@i^0,w,c
 27506  006B4E  0D02               	mullw	2
 27507  006B50  0E60               	movlw	low _SumEnergyADCHist_array
 27508  006B52  24F3               	addwf	243,w,c
 27509  006B54  6ED9               	movwf	fsr2l,c
 27510  006B56  0E02               	movlw	high _SumEnergyADCHist_array
 27511  006B58  20F4               	addwfc	prodh,w,c
 27512  006B5A  6EDA               	movwf	fsr2h,c
 27513  006B5C  50DE               	movf	postinc2,w,c
 27514  006B5E  5C18               	subwf	sumHIST@max^0,w,c
 27515  006B60  50DE               	movf	postinc2,w,c
 27516  006B62  5819               	subwfb	(sumHIST@max+1)^0,w,c
 27517  006B64  B0D8               	btfsc	status,0,c
 27518  006B66  D00C               	goto	l1366
 27519                           
 27520                           ; BSR set to: 0
 27521                           ;controlCurrent_MC50.c: 213:         {;controlCurrent_MC50.c: 214:             max=SumEn
      +                          ergyADCHist_array[i];
 27522  006B68  5020               	movf	sumHIST@i^0,w,c
 27523  006B6A  0D02               	mullw	2
 27524  006B6C  0E60               	movlw	low _SumEnergyADCHist_array
 27525  006B6E  24F3               	addwf	243,w,c
 27526  006B70  6ED9               	movwf	fsr2l,c
 27527  006B72  0E02               	movlw	high _SumEnergyADCHist_array
 27528  006B74  20F4               	addwfc	prodh,w,c
 27529  006B76  6EDA               	movwf	fsr2h,c
 27530  006B78  CFDE F018          	movff	postinc2,sumHIST@max
 27531  006B7C  CFDD F019          	movff	postdec2,sumHIST@max+1
 27532  006B80                     l1366:
 27533                           
 27534                           ; BSR set to: 0
 27535                           ;controlCurrent_MC50.c: 218:         if(SumEnergyADCHist_array[i]<min)
 27536  006B80  5020               	movf	sumHIST@i^0,w,c
 27537  006B82  0D02               	mullw	2
 27538  006B84  0E60               	movlw	low _SumEnergyADCHist_array
 27539  006B86  24F3               	addwf	243,w,c
 27540  006B88  6ED9               	movwf	fsr2l,c
 27541  006B8A  0E02               	movlw	high _SumEnergyADCHist_array
 27542  006B8C  20F4               	addwfc	prodh,w,c
 27543  006B8E  6EDA               	movwf	fsr2h,c
 27544  006B90  501A               	movf	sumHIST@min^0,w,c
 27545  006B92  5CDE               	subwf	postinc2,w,c
 27546  006B94  501B               	movf	(sumHIST@min+1)^0,w,c
 27547  006B96  58DE               	subwfb	postinc2,w,c
 27548  006B98  B0D8               	btfsc	status,0,c
 27549  006B9A  D00C               	goto	l12611
 27550                           
 27551                           ; BSR set to: 0
 27552                           ;controlCurrent_MC50.c: 219:         {;controlCurrent_MC50.c: 220:             min=SumEn
      +                          ergyADCHist_array[i];
 27553  006B9C  5020               	movf	sumHIST@i^0,w,c
 27554  006B9E  0D02               	mullw	2
 27555  006BA0  0E60               	movlw	low _SumEnergyADCHist_array
 27556  006BA2  24F3               	addwf	243,w,c
 27557  006BA4  6ED9               	movwf	fsr2l,c
 27558  006BA6  0E02               	movlw	high _SumEnergyADCHist_array
 27559  006BA8  20F4               	addwfc	prodh,w,c
 27560  006BAA  6EDA               	movwf	fsr2h,c
 27561  006BAC  CFDE F01A          	movff	postinc2,sumHIST@min
 27562  006BB0  CFDD F01B          	movff	postdec2,sumHIST@min+1
 27563  006BB4                     l12611:
 27564                           
 27565                           ; BSR set to: 0
 27566                           ;controlCurrent_MC50.c: 222:     }
 27567  006BB4  2A20               	incf	sumHIST@i^0,f,c
 27568                           
 27569                           ; BSR set to: 0
 27570  006BB6  0E09               	movlw	9
 27571  006BB8  6420               	cpfsgt	sumHIST@i^0,c
 27572  006BBA  D7B0               	goto	l12605
 27573                           
 27574                           ; BSR set to: 0
 27575                           ;controlCurrent_MC50.c: 224:     sumH = sumH - ( max+min );
 27576  006BBC  501A               	movf	sumHIST@min^0,w,c
 27577  006BBE  2418               	addwf	sumHIST@max^0,w,c
 27578  006BC0  6E14               	movwf	??_sumHIST^0,c
 27579  006BC2  501B               	movf	(sumHIST@min+1)^0,w,c
 27580  006BC4  2019               	addwfc	(sumHIST@max+1)^0,w,c
 27581  006BC6  6E15               	movwf	(??_sumHIST+1)^0,c
 27582  006BC8  6A16               	clrf	(??_sumHIST+2)^0,c
 27583  006BCA  6A17               	clrf	(??_sumHIST+3)^0,c
 27584  006BCC  5014               	movf	??_sumHIST^0,w,c
 27585  006BCE  5C1C               	subwf	sumHIST@sumH^0,w,c
 27586  006BD0  6E1C               	movwf	sumHIST@sumH^0,c
 27587  006BD2  5015               	movf	(??_sumHIST+1)^0,w,c
 27588  006BD4  581D               	subwfb	(sumHIST@sumH+1)^0,w,c
 27589  006BD6  6E1D               	movwf	(sumHIST@sumH+1)^0,c
 27590  006BD8  5016               	movf	(??_sumHIST+2)^0,w,c
 27591  006BDA  581E               	subwfb	(sumHIST@sumH+2)^0,w,c
 27592  006BDC  6E1E               	movwf	(sumHIST@sumH+2)^0,c
 27593  006BDE  5017               	movf	(??_sumHIST+3)^0,w,c
 27594  006BE0  581F               	subwfb	(sumHIST@sumH+3)^0,w,c
 27595  006BE2  6E1F               	movwf	(sumHIST@sumH+3)^0,c
 27596                           
 27597                           ; BSR set to: 0
 27598                           ;controlCurrent_MC50.c: 226:     return sumH;
 27599  006BE4  C01C  F010         	movff	sumHIST@sumH,?_sumHIST
 27600  006BE8  C01D  F011         	movff	sumHIST@sumH+1,?_sumHIST+1
 27601  006BEC  C01E  F012         	movff	sumHIST@sumH+2,?_sumHIST+2
 27602  006BF0  C01F  F013         	movff	sumHIST@sumH+3,?_sumHIST+3
 27603                           
 27604                           ; BSR set to: 0
 27605  006BF4  0012               	return		;funcret
 27606  006BF6                     __end_of_sumHIST:
 27607                           	callstack 0
 27608                           
 27609 ;; *************** function _sumEnergyADC *****************
 27610 ;; Defined at:
 27611 ;;		line 59 in file "controlCurrent_MC50.c"
 27612 ;; Parameters:    Size  Location     Type
 27613 ;;		None
 27614 ;; Auto vars:     Size  Location     Type
 27615 ;;  auxValue        2   21[COMRAM] unsigned int 
 27616 ;;  sumE            2   19[COMRAM] unsigned int 
 27617 ;;  i               1   23[COMRAM] unsigned char 
 27618 ;; Return value:  Size  Location     Type
 27619 ;;                  2   15[COMRAM] unsigned int 
 27620 ;; Registers used:
 27621 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 27622 ;; Tracked objects:
 27623 ;;		On entry : 3E/0
 27624 ;;		On exit  : 3F/1
 27625 ;;		Unchanged: 0/0
 27626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27627 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27628 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27629 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27630 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27631 ;;Total ram usage:        9 bytes
 27632 ;; Hardware stack levels used: 1
 27633 ;; Hardware stack levels required when called: 4
 27634 ;; This function calls:
 27635 ;;		Nothing
 27636 ;; This function is called by:
 27637 ;;		_refreshCurrent
 27638 ;; This function uses a non-reentrant model
 27639 ;;
 27640                           
 27641                           	psect	text119
 27642  00771C                     __ptext119:
 27643                           	callstack 0
 27644  00771C                     _sumEnergyADC:
 27645                           	callstack 24
 27646                           
 27647                           ;controlCurrent_MC50.c: 61:     unsigned char i;;controlCurrent_MC50.c: 63:     unsigned
      +                           int sumE = 0;
 27648                           
 27649                           ; BSR set to: 0
 27650                           ;incstack = 0
 27651  00771C  0E00               	movlw	0
 27652  00771E  6E15               	movwf	(sumEnergyADC@sumE+1)^0,c
 27653  007720  0E00               	movlw	0
 27654  007722  6E14               	movwf	sumEnergyADC@sumE^0,c
 27655                           
 27656                           ;controlCurrent_MC50.c: 72:     for ( i=0 ; i<(30) ; i++ )
 27657  007724  0E00               	movlw	0
 27658  007726  6E18               	movwf	sumEnergyADC@i^0,c
 27659  007728                     l12577:
 27660                           
 27661                           ;controlCurrent_MC50.c: 73:     {;controlCurrent_MC50.c: 83:         if ( ADC_array[i] >
      +                           var_sys.ADCZeroOffset )
 27662  007728  5018               	movf	sumEnergyADC@i^0,w,c
 27663  00772A  0D02               	mullw	2
 27664  00772C  0E00               	movlw	low _ADC_array
 27665  00772E  24F3               	addwf	243,w,c
 27666  007730  6ED9               	movwf	fsr2l,c
 27667  007732  0E02               	movlw	high _ADC_array
 27668  007734  20F4               	addwfc	prodh,w,c
 27669  007736  6EDA               	movwf	fsr2h,c
 27670  007738  50DE               	movf	postinc2,w,c
 27671  00773A  0101               	movlb	1	; () banked
 27672  00773C  5D4B               	subwf	(_var_sys+75)& (0+255),w,b	;volatile
 27673  00773E  50DE               	movf	postinc2,w,c
 27674  007740  594C               	subwfb	(_var_sys+76)& (0+255),w,b	;volatile
 27675  007742  B0D8               	btfsc	status,0,c
 27676  007744  D012               	goto	l12581
 27677                           
 27678                           ; BSR set to: 1
 27679                           ;controlCurrent_MC50.c: 84:         {;controlCurrent_MC50.c: 85:             auxValue = 
      +                          ( ADC_array[i] - var_sys.ADCZeroOffset );
 27680  007746  5018               	movf	sumEnergyADC@i^0,w,c
 27681  007748  0D02               	mullw	2
 27682  00774A  0E00               	movlw	low _ADC_array
 27683  00774C  24F3               	addwf	243,w,c
 27684  00774E  6ED9               	movwf	fsr2l,c
 27685  007750  0E02               	movlw	high _ADC_array
 27686  007752  20F4               	addwfc	prodh,w,c
 27687  007754  6EDA               	movwf	fsr2h,c
 27688  007756  CFDE F012          	movff	postinc2,??_sumEnergyADC
 27689  00775A  CFDD F013          	movff	postdec2,??_sumEnergyADC+1
 27690  00775E  514B               	movf	(_var_sys+75)& (0+255),w,b	;volatile
 27691  007760  5C12               	subwf	??_sumEnergyADC^0,w,c
 27692  007762  6E16               	movwf	sumEnergyADC@auxValue^0,c
 27693  007764  514C               	movf	(_var_sys+76)& (0+255),w,b	;volatile
 27694  007766  5813               	subwfb	(??_sumEnergyADC+1)^0,w,c
 27695  007768  D011               	goto	L103
 27696  00776A                     l12581:
 27697                           
 27698                           ; BSR set to: 1
 27699                           ;controlCurrent_MC50.c: 88:         {;controlCurrent_MC50.c: 89:            auxValue = (
      +                           var_sys.ADCZeroOffset - ADC_array[i] );
 27700  00776A  5018               	movf	sumEnergyADC@i^0,w,c
 27701  00776C  0D02               	mullw	2
 27702  00776E  0E00               	movlw	low _ADC_array
 27703  007770  24F3               	addwf	243,w,c
 27704  007772  6ED9               	movwf	fsr2l,c
 27705  007774  0E02               	movlw	high _ADC_array
 27706  007776  20F4               	addwfc	prodh,w,c
 27707  007778  6EDA               	movwf	fsr2h,c
 27708  00777A  CFDE F012          	movff	postinc2,??_sumEnergyADC
 27709  00777E  CFDD F013          	movff	postdec2,??_sumEnergyADC+1
 27710  007782  5012               	movf	??_sumEnergyADC^0,w,c
 27711  007784  5D4B               	subwf	(_var_sys+75)& (0+255),w,b	;volatile
 27712  007786  6E16               	movwf	sumEnergyADC@auxValue^0,c
 27713  007788  5013               	movf	(??_sumEnergyADC+1)^0,w,c
 27714  00778A  594C               	subwfb	(_var_sys+76)& (0+255),w,b	;volatile
 27715  00778C                     L103:
 27716  00778C  6E17               	movwf	(sumEnergyADC@auxValue+1)^0,c
 27717                           
 27718                           ; BSR set to: 1
 27719                           ;controlCurrent_MC50.c: 91:         sumE += auxValue;
 27720  00778E  5016               	movf	sumEnergyADC@auxValue^0,w,c
 27721  007790  2614               	addwf	sumEnergyADC@sumE^0,f,c
 27722  007792  5017               	movf	(sumEnergyADC@auxValue+1)^0,w,c
 27723  007794  2215               	addwfc	(sumEnergyADC@sumE+1)^0,f,c
 27724                           
 27725                           ; BSR set to: 1
 27726                           ;controlCurrent_MC50.c: 94:     }
 27727  007796  2A18               	incf	sumEnergyADC@i^0,f,c
 27728                           
 27729                           ; BSR set to: 1
 27730  007798  0E1D               	movlw	29
 27731  00779A  6418               	cpfsgt	sumEnergyADC@i^0,c
 27732  00779C  D7C5               	goto	l12577
 27733                           
 27734                           ; BSR set to: 1
 27735                           ;controlCurrent_MC50.c: 96:     return sumE;
 27736  00779E  C014  F010         	movff	sumEnergyADC@sumE,?_sumEnergyADC
 27737  0077A2  C015  F011         	movff	sumEnergyADC@sumE+1,?_sumEnergyADC+1
 27738                           
 27739                           ; BSR set to: 1
 27740  0077A6  0012               	return		;funcret
 27741  0077A8                     __end_of_sumEnergyADC:
 27742                           	callstack 0
 27743                           
 27744 ;; *************** function _saveEnergyADCHist *****************
 27745 ;; Defined at:
 27746 ;;		line 182 in file "controlCurrent_MC50.c"
 27747 ;; Parameters:    Size  Location     Type
 27748 ;;  valueToSave     2   15[COMRAM] unsigned int 
 27749 ;; Auto vars:     Size  Location     Type
 27750 ;;		None
 27751 ;; Return value:  Size  Location     Type
 27752 ;;                  1    wreg      void 
 27753 ;; Registers used:
 27754 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 27755 ;; Tracked objects:
 27756 ;;		On entry : 3F/1
 27757 ;;		On exit  : 3F/0
 27758 ;;		Unchanged: 0/0
 27759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27760 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27763 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27764 ;;Total ram usage:        2 bytes
 27765 ;; Hardware stack levels used: 1
 27766 ;; Hardware stack levels required when called: 4
 27767 ;; This function calls:
 27768 ;;		Nothing
 27769 ;; This function is called by:
 27770 ;;		_refreshCurrent
 27771 ;; This function uses a non-reentrant model
 27772 ;;
 27773                           
 27774                           	psect	text120
 27775  008DA6                     __ptext120:
 27776                           	callstack 0
 27777  008DA6                     _saveEnergyADCHist:
 27778                           	callstack 24
 27779                           
 27780                           ; BSR set to: 1
 27781                           ;controlCurrent_MC50.c: 182: void saveEnergyADCHist(unsigned int valueToSave);controlCur
      +                          rent_MC50.c: 183: {;controlCurrent_MC50.c: 184:     if(idxSaveEnergyADCHist>=10)
 27782                           
 27783                           ; BSR set to: 1
 27784                           ;incstack = 0
 27785  008DA6  0E09               	movlw	9
 27786  008DA8  0100               	movlb	0	; () banked
 27787  008DAA  6590               	cpfsgt	_idxSaveEnergyADCHist& (0+255),b	;volatile
 27788  008DAC  D002               	goto	l12593
 27789                           
 27790                           ; BSR set to: 0
 27791                           ;controlCurrent_MC50.c: 185:     {;controlCurrent_MC50.c: 186:         idxSaveEnergyADCH
      +                          ist=0;
 27792  008DAE  0E00               	movlw	0
 27793  008DB0  6F90               	movwf	_idxSaveEnergyADCHist& (0+255),b	;volatile
 27794  008DB2                     l12593:
 27795                           
 27796                           ; BSR set to: 0
 27797                           ;controlCurrent_MC50.c: 189:     SumEnergyADCHist_array[idxSaveEnergyADCHist]=valueToSav
      +                          e;
 27798  008DB2  5190               	movf	_idxSaveEnergyADCHist& (0+255),w,b	;volatile
 27799  008DB4  0D02               	mullw	2
 27800  008DB6  0E60               	movlw	low _SumEnergyADCHist_array
 27801  008DB8  24F3               	addwf	243,w,c
 27802  008DBA  6ED9               	movwf	fsr2l,c
 27803  008DBC  0E02               	movlw	high _SumEnergyADCHist_array
 27804  008DBE  20F4               	addwfc	prodh,w,c
 27805  008DC0  6EDA               	movwf	fsr2h,c
 27806  008DC2  C010  FFDE         	movff	saveEnergyADCHist@valueToSave,postinc2
 27807  008DC6  C011  FFDD         	movff	saveEnergyADCHist@valueToSave+1,postdec2
 27808                           
 27809                           ; BSR set to: 0
 27810                           ;controlCurrent_MC50.c: 190:     idxSaveEnergyADCHist++;
 27811  008DCA  2B90               	incf	_idxSaveEnergyADCHist& (0+255),f,b	;volatile
 27812                           
 27813                           ; BSR set to: 0
 27814  008DCC  0012               	return		;funcret
 27815  008DCE                     __end_of_saveEnergyADCHist:
 27816                           	callstack 0
 27817                           
 27818 ;; *************** function _refreshADCZeroOffset *****************
 27819 ;; Defined at:
 27820 ;;		line 103 in file "controlCurrent_MC50.c"
 27821 ;; Parameters:    Size  Location     Type
 27822 ;;		None
 27823 ;; Auto vars:     Size  Location     Type
 27824 ;;  media           2   23[COMRAM] unsigned int 
 27825 ;;  i               1   22[COMRAM] unsigned char 
 27826 ;; Return value:  Size  Location     Type
 27827 ;;                  1    wreg      void 
 27828 ;; Registers used:
 27829 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27830 ;; Tracked objects:
 27831 ;;		On entry : 3F/0
 27832 ;;		On exit  : 3E/0
 27833 ;;		Unchanged: 0/0
 27834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27836 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27838 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27839 ;;Total ram usage:        3 bytes
 27840 ;; Hardware stack levels used: 1
 27841 ;; Hardware stack levels required when called: 5
 27842 ;; This function calls:
 27843 ;;		___lwdiv
 27844 ;; This function is called by:
 27845 ;;		_ControlCurrent
 27846 ;; This function uses a non-reentrant model
 27847 ;;
 27848                           
 27849                           	psect	text121
 27850  006902                     __ptext121:
 27851                           	callstack 0
 27852  006902                     _refreshADCZeroOffset:
 27853                           	callstack 24
 27854                           
 27855                           ; BSR set to: 0
 27856                           ;controlCurrent_MC50.c: 105:     unsigned char i;;controlCurrent_MC50.c: 106:     unsign
      +                          ed int media = 0;
 27857                           
 27858                           ; BSR set to: 0
 27859                           ;incstack = 0
 27860  006902  0E00               	movlw	0
 27861  006904  6E19               	movwf	(refreshADCZeroOffset@media+1)^0,c
 27862  006906  0E00               	movlw	0
 27863  006908  6E18               	movwf	refreshADCZeroOffset@media^0,c
 27864                           
 27865                           ;controlCurrent_MC50.c: 109:     if ( var_sys.StateMotor == Stopped )
 27866  00690A  0101               	movlb	1	; () banked
 27867  00690C  5100               	movf	_var_sys& (0+255),w,b	;volatile
 27868  00690E  A4D8               	btfss	status,2,c
 27869  006910  0012               	return	
 27870                           
 27871                           ; BSR set to: 1
 27872                           ;controlCurrent_MC50.c: 110:     {;controlCurrent_MC50.c: 111:         if ( ts_system.Ti
      +                          meStopADCZeroOffsetCalc <= 0 )
 27873  006912  BFD9               	btfsc	(_ts_system+63)& (0+255),7,b	;volatile
 27874  006914  D005               	goto	u14710
 27875  006916  51D9               	movf	(_ts_system+63)& (0+255),w,b	;volatile
 27876  006918  E172               	bnz	l1357
 27877  00691A  05D8               	decf	(_ts_system+62)& (0+255),w,b	;volatile
 27878  00691C  B0D8               	btfsc	status,0,c
 27879  00691E  0012               	return	
 27880  006920                     u14710:
 27881                           
 27882                           ; BSR set to: 1
 27883                           ;controlCurrent_MC50.c: 112:         {;controlCurrent_MC50.c: 113:             ts_system
      +                          .TimeStopADCZeroOffsetCalc = (1000/50);
 27884  006920  0E00               	movlw	0
 27885  006922  6FD9               	movwf	(_ts_system+63)& (0+255),b	;volatile
 27886  006924  0E14               	movlw	20
 27887  006926  6FD8               	movwf	(_ts_system+62)& (0+255),b	;volatile
 27888                           
 27889                           ;controlCurrent_MC50.c: 121:             for ( i=0 ; i<(30) ; i++ )
 27890  006928  0E00               	movlw	0
 27891  00692A  6E17               	movwf	refreshADCZeroOffset@i^0,c
 27892  00692C                     l14403:
 27893                           
 27894                           ;controlCurrent_MC50.c: 122:             {;controlCurrent_MC50.c: 126:                 m
      +                          edia += ADC_array[i];
 27895  00692C  5017               	movf	refreshADCZeroOffset@i^0,w,c
 27896  00692E  0D02               	mullw	2
 27897  006930  0E00               	movlw	low _ADC_array
 27898  006932  24F3               	addwf	243,w,c
 27899  006934  6ED9               	movwf	fsr2l,c
 27900  006936  0E02               	movlw	high _ADC_array
 27901  006938  20F4               	addwfc	prodh,w,c
 27902  00693A  6EDA               	movwf	fsr2h,c
 27903  00693C  50DE               	movf	postinc2,w,c
 27904  00693E  2618               	addwf	refreshADCZeroOffset@media^0,f,c
 27905  006940  50DD               	movf	postdec2,w,c
 27906  006942  2219               	addwfc	(refreshADCZeroOffset@media+1)^0,f,c
 27907                           
 27908                           ;controlCurrent_MC50.c: 128:             }
 27909  006944  2A17               	incf	refreshADCZeroOffset@i^0,f,c
 27910  006946  0E1D               	movlw	29
 27911  006948  6417               	cpfsgt	refreshADCZeroOffset@i^0,c
 27912  00694A  D7F0               	goto	l14403
 27913                           
 27914                           ;controlCurrent_MC50.c: 130:             media = media/30;
 27915  00694C  C018  F010         	movff	refreshADCZeroOffset@media,___lwdiv@dividend
 27916  006950  C019  F011         	movff	refreshADCZeroOffset@media+1,___lwdiv@dividend+1
 27917  006954  0E00               	movlw	0
 27918  006956  6E13               	movwf	(___lwdiv@divisor+1)^0,c
 27919  006958  0E1E               	movlw	30
 27920  00695A  6E12               	movwf	___lwdiv@divisor^0,c
 27921  00695C  ECB7  F042         	call	___lwdiv	;wreg free
 27922  006960  C010  F018         	movff	?___lwdiv,refreshADCZeroOffset@media
 27923  006964  C011  F019         	movff	?___lwdiv+1,refreshADCZeroOffset@media+1
 27924                           
 27925                           ;controlCurrent_MC50.c: 131:             if ( (media>(510 -20)) && (media<(510 +20)) )
 27926  006968  0EEB               	movlw	235
 27927  00696A  5C18               	subwf	refreshADCZeroOffset@media^0,w,c
 27928  00696C  0E01               	movlw	1
 27929  00696E  5819               	subwfb	(refreshADCZeroOffset@media+1)^0,w,c
 27930  006970  A0D8               	btfss	status,0,c
 27931  006972  D006               	goto	l14417
 27932  006974  0E12               	movlw	18
 27933  006976  5C18               	subwf	refreshADCZeroOffset@media^0,w,c
 27934  006978  0E02               	movlw	2
 27935  00697A  5819               	subwfb	(refreshADCZeroOffset@media+1)^0,w,c
 27936  00697C  A0D8               	btfss	status,0,c
 27937  00697E  D004               	goto	l14419
 27938  006980                     l14417:
 27939                           
 27940                           ;controlCurrent_MC50.c: 136:             {;controlCurrent_MC50.c: 138:                 m
      +                          edia = 510;
 27941  006980  0E01               	movlw	1
 27942  006982  6E19               	movwf	(refreshADCZeroOffset@media+1)^0,c
 27943  006984  0EFE               	movlw	254
 27944  006986  6E18               	movwf	refreshADCZeroOffset@media^0,c
 27945  006988                     l14419:
 27946                           
 27947                           ;controlCurrent_MC50.c: 142:             if ( idxAdcZeroAquisition >= 30 )
 27948  006988  0E1D               	movlw	29
 27949  00698A  0100               	movlb	0	; () banked
 27950  00698C  658F               	cpfsgt	_idxAdcZeroAquisition& (0+255),b	;volatile
 27951  00698E  D002               	goto	l14423
 27952                           
 27953                           ; BSR set to: 0
 27954                           ;controlCurrent_MC50.c: 143:             {;controlCurrent_MC50.c: 144:                 i
      +                          dxAdcZeroAquisition = 0;
 27955  006990  0E00               	movlw	0
 27956  006992  6F8F               	movwf	_idxAdcZeroAquisition& (0+255),b	;volatile
 27957  006994                     l14423:
 27958                           
 27959                           ; BSR set to: 0
 27960                           ;controlCurrent_MC50.c: 146:             ADC_zero_array[idxAdcZeroAquisition] = media;
 27961  006994  518F               	movf	_idxAdcZeroAquisition& (0+255),w,b	;volatile
 27962  006996  0D02               	mullw	2
 27963  006998  0E96               	movlw	low _ADC_zero_array
 27964  00699A  24F3               	addwf	243,w,c
 27965  00699C  6ED9               	movwf	fsr2l,c
 27966  00699E  0E03               	movlw	high _ADC_zero_array
 27967  0069A0  20F4               	addwfc	prodh,w,c
 27968  0069A2  6EDA               	movwf	fsr2h,c
 27969  0069A4  C018  FFDE         	movff	refreshADCZeroOffset@media,postinc2
 27970  0069A8  C019  FFDD         	movff	refreshADCZeroOffset@media+1,postdec2
 27971                           
 27972                           ; BSR set to: 0
 27973                           ;controlCurrent_MC50.c: 147:             idxAdcZeroAquisition++;
 27974  0069AC  2B8F               	incf	_idxAdcZeroAquisition& (0+255),f,b	;volatile
 27975                           
 27976                           ; BSR set to: 0
 27977                           ;controlCurrent_MC50.c: 150:             media = 0;
 27978  0069AE  0E00               	movlw	0
 27979  0069B0  6E19               	movwf	(refreshADCZeroOffset@media+1)^0,c
 27980  0069B2  0E00               	movlw	0
 27981  0069B4  6E18               	movwf	refreshADCZeroOffset@media^0,c
 27982                           
 27983                           ; BSR set to: 0
 27984                           ;controlCurrent_MC50.c: 151:             for ( i=0 ; i<(30) ; i++ )
 27985  0069B6  0E00               	movlw	0
 27986  0069B8  6E17               	movwf	refreshADCZeroOffset@i^0,c
 27987  0069BA                     l14435:
 27988                           
 27989                           ; BSR set to: 0
 27990                           ;controlCurrent_MC50.c: 152:             {;controlCurrent_MC50.c: 158:                 m
      +                          edia += ADC_zero_array[i];
 27991  0069BA  5017               	movf	refreshADCZeroOffset@i^0,w,c
 27992  0069BC  0D02               	mullw	2
 27993  0069BE  0E96               	movlw	low _ADC_zero_array
 27994  0069C0  24F3               	addwf	243,w,c
 27995  0069C2  6ED9               	movwf	fsr2l,c
 27996  0069C4  0E03               	movlw	high _ADC_zero_array
 27997  0069C6  20F4               	addwfc	prodh,w,c
 27998  0069C8  6EDA               	movwf	fsr2h,c
 27999  0069CA  50DE               	movf	postinc2,w,c
 28000  0069CC  2618               	addwf	refreshADCZeroOffset@media^0,f,c
 28001  0069CE  50DD               	movf	postdec2,w,c
 28002  0069D0  2219               	addwfc	(refreshADCZeroOffset@media+1)^0,f,c
 28003                           
 28004                           ; BSR set to: 0
 28005                           ;controlCurrent_MC50.c: 159:             }
 28006  0069D2  2A17               	incf	refreshADCZeroOffset@i^0,f,c
 28007                           
 28008                           ; BSR set to: 0
 28009  0069D4  0E1D               	movlw	29
 28010  0069D6  6417               	cpfsgt	refreshADCZeroOffset@i^0,c
 28011  0069D8  D7F0               	goto	l14435
 28012                           
 28013                           ; BSR set to: 0
 28014                           ;controlCurrent_MC50.c: 160:             media = media/30;
 28015  0069DA  C018  F010         	movff	refreshADCZeroOffset@media,___lwdiv@dividend
 28016  0069DE  C019  F011         	movff	refreshADCZeroOffset@media+1,___lwdiv@dividend+1
 28017  0069E2  0E00               	movlw	0
 28018  0069E4  6E13               	movwf	(___lwdiv@divisor+1)^0,c
 28019  0069E6  0E1E               	movlw	30
 28020  0069E8  6E12               	movwf	___lwdiv@divisor^0,c
 28021  0069EA  ECB7  F042         	call	___lwdiv	;wreg free
 28022  0069EE  C010  F018         	movff	?___lwdiv,refreshADCZeroOffset@media
 28023  0069F2  C011  F019         	movff	?___lwdiv+1,refreshADCZeroOffset@media+1
 28024                           
 28025                           ;controlCurrent_MC50.c: 162:             var_sys.ADCZeroOffset = media;
 28026  0069F6  C018  F14B         	movff	refreshADCZeroOffset@media,_var_sys+75	;volatile
 28027  0069FA  C019  F14C         	movff	refreshADCZeroOffset@media+1,_var_sys+76	;volatile
 28028  0069FE                     l1357:
 28029  0069FE  0012               	return		;funcret
 28030  006A00                     __end_of_refreshADCZeroOffset:
 28031                           	callstack 0
 28032                           
 28033 ;; *************** function ___lwdiv *****************
 28034 ;; Defined at:
 28035 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\lwdiv.c"
 28036 ;; Parameters:    Size  Location     Type
 28037 ;;  dividend        2   15[COMRAM] unsigned int 
 28038 ;;  divisor         2   17[COMRAM] unsigned int 
 28039 ;; Auto vars:     Size  Location     Type
 28040 ;;  quotient        2   19[COMRAM] unsigned int 
 28041 ;;  counter         1   21[COMRAM] unsigned char 
 28042 ;; Return value:  Size  Location     Type
 28043 ;;                  2   15[COMRAM] unsigned int 
 28044 ;; Registers used:
 28045 ;;		wreg, status,2, status,0
 28046 ;; Tracked objects:
 28047 ;;		On entry : 3E/1
 28048 ;;		On exit  : 3E/0
 28049 ;;		Unchanged: 3E/0
 28050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28051 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28052 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28053 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28054 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28055 ;;Total ram usage:        7 bytes
 28056 ;; Hardware stack levels used: 1
 28057 ;; Hardware stack levels required when called: 4
 28058 ;; This function calls:
 28059 ;;		Nothing
 28060 ;; This function is called by:
 28061 ;;		_refreshADCZeroOffset
 28062 ;;		_sm_execute_menuConfiguration
 28063 ;; This function uses a non-reentrant model
 28064 ;;
 28065                           
 28066                           	psect	text122
 28067  00856E                     __ptext122:
 28068                           	callstack 0
 28069  00856E                     ___lwdiv:
 28070                           	callstack 24
 28071                           
 28072                           ;incstack = 0
 28073  00856E  0E00               	movlw	0
 28074  008570  6E15               	movwf	(___lwdiv@quotient+1)^0,c
 28075  008572  0E00               	movlw	0
 28076  008574  6E14               	movwf	___lwdiv@quotient^0,c
 28077  008576  5012               	movf	___lwdiv@divisor^0,w,c
 28078  008578  1013               	iorwf	(___lwdiv@divisor+1)^0,w,c
 28079  00857A  B4D8               	btfsc	status,2,c
 28080  00857C  D01C               	goto	l4139
 28081  00857E  0E01               	movlw	1
 28082  008580  6E16               	movwf	___lwdiv@counter^0,c
 28083  008582  D004               	goto	l13883
 28084  008584                     l13881:
 28085  008584  90D8               	bcf	status,0,c
 28086  008586  3612               	rlcf	___lwdiv@divisor^0,f,c
 28087  008588  3613               	rlcf	(___lwdiv@divisor+1)^0,f,c
 28088  00858A  2A16               	incf	___lwdiv@counter^0,f,c
 28089  00858C                     l13883:
 28090  00858C  AE13               	btfss	(___lwdiv@divisor+1)^0,7,c
 28091  00858E  D7FA               	goto	l13881
 28092  008590                     u13730:
 28093  008590  90D8               	bcf	status,0,c
 28094  008592  3614               	rlcf	___lwdiv@quotient^0,f,c
 28095  008594  3615               	rlcf	(___lwdiv@quotient+1)^0,f,c
 28096  008596  5012               	movf	___lwdiv@divisor^0,w,c
 28097  008598  5C10               	subwf	___lwdiv@dividend^0,w,c
 28098  00859A  5013               	movf	(___lwdiv@divisor+1)^0,w,c
 28099  00859C  5811               	subwfb	(___lwdiv@dividend+1)^0,w,c
 28100  00859E  A0D8               	btfss	status,0,c
 28101  0085A0  D005               	goto	l13893
 28102  0085A2  5012               	movf	___lwdiv@divisor^0,w,c
 28103  0085A4  5E10               	subwf	___lwdiv@dividend^0,f,c
 28104  0085A6  5013               	movf	(___lwdiv@divisor+1)^0,w,c
 28105  0085A8  5A11               	subwfb	(___lwdiv@dividend+1)^0,f,c
 28106  0085AA  8014               	bsf	___lwdiv@quotient^0,0,c
 28107  0085AC                     l13893:
 28108  0085AC  90D8               	bcf	status,0,c
 28109  0085AE  3213               	rrcf	(___lwdiv@divisor+1)^0,f,c
 28110  0085B0  3212               	rrcf	___lwdiv@divisor^0,f,c
 28111  0085B2  2E16               	decfsz	___lwdiv@counter^0,f,c
 28112  0085B4  D7ED               	goto	u13730
 28113  0085B6                     l4139:
 28114  0085B6  C014  F010         	movff	___lwdiv@quotient,?___lwdiv
 28115  0085BA  C015  F011         	movff	___lwdiv@quotient+1,?___lwdiv+1
 28116  0085BE  0012               	return		;funcret
 28117  0085C0                     __end_of___lwdiv:
 28118                           	callstack 0
 28119                           
 28120 ;; *************** function _getCurrentComparator *****************
 28121 ;; Defined at:
 28122 ;;		line 264 in file "controlCurrent_MC50.c"
 28123 ;; Parameters:    Size  Location     Type
 28124 ;;		None
 28125 ;; Auto vars:     Size  Location     Type
 28126 ;;  x               1   33[COMRAM] unsigned char 
 28127 ;;  tempOffset      2   31[COMRAM] unsigned int 
 28128 ;; Return value:  Size  Location     Type
 28129 ;;                  4   21[COMRAM] unsigned long 
 28130 ;; Registers used:
 28131 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 28132 ;; Tracked objects:
 28133 ;;		On entry : 3F/1
 28134 ;;		On exit  : 3F/1
 28135 ;;		Unchanged: 0/0
 28136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28137 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28138 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28139 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28140 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28141 ;;Total ram usage:       13 bytes
 28142 ;; Hardware stack levels used: 1
 28143 ;; Hardware stack levels required when called: 5
 28144 ;; This function calls:
 28145 ;;		___wmul
 28146 ;; This function is called by:
 28147 ;;		_ControlCurrent
 28148 ;; This function uses a non-reentrant model
 28149 ;;
 28150                           
 28151                           	psect	text123
 28152  00569C                     __ptext123:
 28153                           	callstack 0
 28154  00569C                     _getCurrentComparator:
 28155                           	callstack 24
 28156                           
 28157                           ; BSR set to: 1
 28158                           ;controlCurrent_MC50.c: 269:     if(ts_system.timeSoftStart>0)
 28159                           
 28160                           ; BSR set to: 1
 28161                           
 28162                           ;incstack = 0
 28163  00569C  BFB1               	btfsc	(_ts_system+23)& (0+255),7,b	;volatile
 28164  00569E  D00A               	goto	l14459
 28165  0056A0  51B1               	movf	(_ts_system+23)& (0+255),w,b	;volatile
 28166  0056A2  E103               	bnz	u14790
 28167  0056A4  05B0               	decf	(_ts_system+22)& (0+255),w,b	;volatile
 28168  0056A6  A0D8               	btfss	status,0,c
 28169  0056A8  D005               	goto	l14459
 28170  0056AA                     u14790:
 28171                           
 28172                           ; BSR set to: 1
 28173                           ;controlCurrent_MC50.c: 270:     {;controlCurrent_MC50.c: 271:         ts_system.timewai
      +                          tBeforeSoftStart=(1000/50);
 28174  0056AA  0E00               	movlw	0
 28175  0056AC  6FD5               	movwf	(_ts_system+59)& (0+255),b	;volatile
 28176  0056AE  0E14               	movlw	20
 28177  0056B0  6FD4               	movwf	(_ts_system+58)& (0+255),b	;volatile
 28178  0056B2  D007               	goto	u14800
 28179  0056B4                     l14459:
 28180                           
 28181                           ; BSR set to: 1
 28182  0056B4  BFD5               	btfsc	(_ts_system+59)& (0+255),7,b	;volatile
 28183  0056B6  D009               	goto	l14463
 28184  0056B8  51D5               	movf	(_ts_system+59)& (0+255),w,b	;volatile
 28185  0056BA  E103               	bnz	u14800
 28186  0056BC  05D4               	decf	(_ts_system+58)& (0+255),w,b	;volatile
 28187  0056BE  A0D8               	btfss	status,0,c
 28188  0056C0  D004               	goto	l14463
 28189  0056C2                     u14800:
 28190                           
 28191                           ; BSR set to: 1
 28192                           ;controlCurrent_MC50.c: 276:     {;controlCurrent_MC50.c: 277:         tempOffset=1200;
 28193  0056C2  0E04               	movlw	4
 28194  0056C4  6E21               	movwf	(getCurrentComparator@tempOffset+1)^0,c
 28195  0056C6  0EB0               	movlw	176
 28196  0056C8  D003               	goto	L104
 28197  0056CA                     l14463:
 28198                           
 28199                           ; BSR set to: 1
 28200                           ;controlCurrent_MC50.c: 280:     {;controlCurrent_MC50.c: 281:         tempOffset=0;
 28201  0056CA  0E00               	movlw	0
 28202  0056CC  6E21               	movwf	(getCurrentComparator@tempOffset+1)^0,c
 28203  0056CE  0E00               	movlw	0
 28204  0056D0                     L104:
 28205  0056D0  6E20               	movwf	getCurrentComparator@tempOffset^0,c
 28206                           
 28207                           ; BSR set to: 1
 28208                           ;controlCurrent_MC50.c: 284:     if(powerControl_st.decelarationActive==NO)
 28209  0056D2  517B               	movf	_powerControl_st& (0+255),w,b
 28210  0056D4  A4D8               	btfss	status,2,c
 28211  0056D6  D05B               	goto	l14479
 28212                           
 28213                           ; BSR set to: 1
 28214                           ;controlCurrent_MC50.c: 285:     {;controlCurrent_MC50.c: 286:         if(var_sys.StateM
      +                          otor==InClose)
 28215  0056D8  0E03               	movlw	3
 28216  0056DA  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 28217  0056DC  A4D8               	btfss	status,2,c
 28218  0056DE  D005               	goto	l14469
 28219                           
 28220                           ; BSR set to: 1
 28221                           ;controlCurrent_MC50.c: 287:         {;controlCurrent_MC50.c: 288:             var_sys.A
      +                          ctualComparatorCurrent=var_sys_NVM.learningCurrentNormalClose;
 28222  0056E0  C0C8  F134         	movff	_var_sys_NVM+48,_var_sys+52	;volatile
 28223  0056E4  C0C9  F135         	movff	_var_sys_NVM+49,_var_sys+53	;volatile
 28224  0056E8  D004               	goto	L105
 28225  0056EA                     l14469:
 28226                           
 28227                           ; BSR set to: 1
 28228                           ;controlCurrent_MC50.c: 291:         {;controlCurrent_MC50.c: 292:             var_sys.A
      +                          ctualComparatorCurrent=var_sys_NVM.learningCurrentNormalOpen;
 28229  0056EA  C0CA  F134         	movff	_var_sys_NVM+50,_var_sys+52	;volatile
 28230  0056EE  C0CB  F135         	movff	_var_sys_NVM+51,_var_sys+53	;volatile
 28231  0056F2                     L105:
 28232  0056F2  6B36               	clrf	(_var_sys+54)& (0+255),b	;volatile
 28233  0056F4  6B37               	clrf	(_var_sys+55)& (0+255),b	;volatile
 28234                           
 28235                           ; BSR set to: 1
 28236                           ;controlCurrent_MC50.c: 295:         if(var_sys.ActualComparatorCurrent<=100||(var_sys.A
      +                          ctualComparatorCurrent>(510*30)))
 28237  0056F6  5137               	movf	(_var_sys+55)& (0+255),w,b	;volatile
 28238  0056F8  1136               	iorwf	(_var_sys+54)& (0+255),w,b	;volatile
 28239  0056FA  1135               	iorwf	(_var_sys+53)& (0+255),w,b	;volatile
 28240  0056FC  E104               	bnz	u14830
 28241  0056FE  0E65               	movlw	101
 28242  005700  5D34               	subwf	(_var_sys+52)& (0+255),w,b	;volatile
 28243  005702  A0D8               	btfss	status,0,c
 28244  005704  D009               	goto	u14840
 28245  005706                     u14830:
 28246                           
 28247                           ; BSR set to: 1
 28248  005706  5137               	movf	(_var_sys+55)& (0+255),w,b	;volatile
 28249  005708  1136               	iorwf	(_var_sys+54)& (0+255),w,b	;volatile
 28250  00570A  E106               	bnz	u14840
 28251  00570C  0EC5               	movlw	197
 28252  00570E  5D34               	subwf	(_var_sys+52)& (0+255),w,b	;volatile
 28253  005710  0E3B               	movlw	59
 28254  005712  5935               	subwfb	(_var_sys+53)& (0+255),w,b	;volatile
 28255  005714  A0D8               	btfss	status,0,c
 28256  005716  D004               	goto	l1383
 28257  005718                     u14840:
 28258                           
 28259                           ; BSR set to: 1
 28260                           ;controlCurrent_MC50.c: 296:         {;controlCurrent_MC50.c: 297:              var_sys.
      +                          ActualComparatorCurrent=(510*30);
 28261  005718  0EC4               	movlw	196
 28262  00571A  6F34               	movwf	(_var_sys+52)& (0+255),b	;volatile
 28263  00571C  0E3B               	movlw	59
 28264  00571E  D058               	goto	L107
 28265  005720                     l1383:
 28266                           
 28267                           ; BSR set to: 1
 28268                           ;controlCurrent_MC50.c: 300:         {;controlCurrent_MC50.c: 301:             unsigned 
      +                          char x=var_sys_NVM.motorSensitivity;
 28269  005720  C09B  F022         	movff	_var_sys_NVM+3,getCurrentComparator@x	;volatile
 28270                           
 28271                           ; BSR set to: 1
 28272                           ;controlCurrent_MC50.c: 307:            var_sys.ActualComparatorCurrent=var_sys.ActualCo
      +                          mparatorCurrent+((10*(x*x))+(-200*x)+1300);
 28273  005724  5022               	movf	getCurrentComparator@x^0,w,c
 28274  005726  0222               	mulwf	getCurrentComparator@x^0,c
 28275  005728  CFF3 F010          	movff	prodl,___wmul@multiplier
 28276  00572C  CFF4 F011          	movff	prodh,___wmul@multiplier+1
 28277  005730  0E00               	movlw	0
 28278  005732  6E13               	movwf	(___wmul@multiplicand+1)^0,c
 28279  005734  0E0A               	movlw	10
 28280  005736  6E12               	movwf	___wmul@multiplicand^0,c
 28281  005738  EC0D  F047         	call	___wmul	;wreg free
 28282  00573C  C010  F01A         	movff	?___wmul,??_getCurrentComparator
 28283  005740  C011  F01B         	movff	?___wmul+1,??_getCurrentComparator+1
 28284  005744  C022  F010         	movff	getCurrentComparator@x,___wmul@multiplier
 28285  005748  6A11               	clrf	(___wmul@multiplier+1)^0,c
 28286  00574A  0EFF               	movlw	255
 28287  00574C  6E13               	movwf	(___wmul@multiplicand+1)^0,c
 28288  00574E  0E38               	movlw	56
 28289  005750  6E12               	movwf	___wmul@multiplicand^0,c
 28290  005752  EC0D  F047         	call	___wmul	;wreg free
 28291  005756  5010               	movf	?___wmul^0,w,c
 28292  005758  261A               	addwf	??_getCurrentComparator^0,f,c
 28293  00575A  5011               	movf	(?___wmul+1)^0,w,c
 28294  00575C  221B               	addwfc	(??_getCurrentComparator+1)^0,f,c
 28295  00575E  0E14               	movlw	20
 28296  005760  241A               	addwf	??_getCurrentComparator^0,w,c
 28297  005762  6E1C               	movwf	(??_getCurrentComparator+2)^0,c
 28298  005764  0E05               	movlw	5
 28299  005766  201B               	addwfc	(??_getCurrentComparator+1)^0,w,c
 28300  005768  6E1D               	movwf	(??_getCurrentComparator+3)^0,c
 28301  00576A  6A1E               	clrf	(??_getCurrentComparator+4)^0,c
 28302  00576C  BE1D               	btfsc	(??_getCurrentComparator+3)^0,7,c
 28303  00576E  061E               	decf	(??_getCurrentComparator+4)^0,f,c
 28304  005770  501E               	movf	(??_getCurrentComparator+4)^0,w,c
 28305  005772  6E1F               	movwf	(??_getCurrentComparator+5)^0,c
 28306  005774  0101               	movlb	1	; () banked
 28307  005776  5134               	movf	(_var_sys+52)& (0+255),w,b	;volatile
 28308  005778  241C               	addwf	(??_getCurrentComparator+2)^0,w,c
 28309  00577A  6F34               	movwf	(_var_sys+52)& (0+255),b	;volatile
 28310  00577C  5135               	movf	(_var_sys+53)& (0+255),w,b	;volatile
 28311  00577E  201D               	addwfc	(??_getCurrentComparator+3)^0,w,c
 28312  005780  6F35               	movwf	(_var_sys+53)& (0+255),b	;volatile
 28313  005782  5136               	movf	(_var_sys+54)& (0+255),w,b	;volatile
 28314  005784  201E               	addwfc	(??_getCurrentComparator+4)^0,w,c
 28315  005786  6F36               	movwf	(_var_sys+54)& (0+255),b	;volatile
 28316  005788  5137               	movf	(_var_sys+55)& (0+255),w,b	;volatile
 28317  00578A  201F               	addwfc	(??_getCurrentComparator+5)^0,w,c
 28318  00578C  D046               	goto	L106
 28319  00578E                     l14479:
 28320                           
 28321                           ; BSR set to: 1
 28322                           ;controlCurrent_MC50.c: 311:     {;controlCurrent_MC50.c: 312:         if(var_sys.StateM
      +                          otor==InClose)
 28323  00578E  0E03               	movlw	3
 28324  005790  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 28325  005792  A4D8               	btfss	status,2,c
 28326  005794  D009               	goto	l1388
 28327                           
 28328                           ; BSR set to: 1
 28329                           ;controlCurrent_MC50.c: 313:         {;controlCurrent_MC50.c: 314:             var_sys.A
      +                          ctualComparatorCurrent=var_sys_NVM.learningCurrentDecelarationClose;
 28330  005796  C0C0  F134         	movff	_var_sys_NVM+40,_var_sys+52	;volatile
 28331  00579A  C0C1  F135         	movff	_var_sys_NVM+41,_var_sys+53	;volatile
 28332  00579E  C0C2  F136         	movff	_var_sys_NVM+42,_var_sys+54	;volatile
 28333  0057A2  C0C3  F137         	movff	_var_sys_NVM+43,_var_sys+55	;volatile
 28334                           
 28335                           ;controlCurrent_MC50.c: 315:         }
 28336  0057A6  D008               	goto	l14483
 28337  0057A8                     l1388:
 28338                           
 28339                           ; BSR set to: 1
 28340                           ;controlCurrent_MC50.c: 317:         {;controlCurrent_MC50.c: 318:             var_sys.A
      +                          ctualComparatorCurrent=var_sys_NVM.learningCurrentDecelarationOpen ;
 28341  0057A8  C0C4  F134         	movff	_var_sys_NVM+44,_var_sys+52	;volatile
 28342  0057AC  C0C5  F135         	movff	_var_sys_NVM+45,_var_sys+53	;volatile
 28343  0057B0  C0C6  F136         	movff	_var_sys_NVM+46,_var_sys+54	;volatile
 28344  0057B4  C0C7  F137         	movff	_var_sys_NVM+47,_var_sys+55	;volatile
 28345  0057B8                     l14483:
 28346                           
 28347                           ; BSR set to: 1
 28348                           ;controlCurrent_MC50.c: 321:         if(var_sys.ActualComparatorCurrent<=5000)
 28349  0057B8  5137               	movf	(_var_sys+55)& (0+255),w,b	;volatile
 28350  0057BA  1136               	iorwf	(_var_sys+54)& (0+255),w,b	;volatile
 28351  0057BC  E10E               	bnz	l14487
 28352  0057BE  0E89               	movlw	137
 28353  0057C0  5D34               	subwf	(_var_sys+52)& (0+255),w,b	;volatile
 28354  0057C2  0E13               	movlw	19
 28355  0057C4  5935               	subwfb	(_var_sys+53)& (0+255),w,b	;volatile
 28356  0057C6  B0D8               	btfsc	status,0,c
 28357  0057C8  D008               	goto	l14487
 28358                           
 28359                           ; BSR set to: 1
 28360                           ;controlCurrent_MC50.c: 322:         {;controlCurrent_MC50.c: 323:             var_sys.A
      +                          ctualComparatorCurrent=5000;
 28361  0057CA  0E88               	movlw	136
 28362  0057CC  6F34               	movwf	(_var_sys+52)& (0+255),b	;volatile
 28363  0057CE  0E13               	movlw	19
 28364  0057D0                     L107:
 28365  0057D0  6F35               	movwf	(_var_sys+53)& (0+255),b	;volatile
 28366  0057D2  0E00               	movlw	0
 28367  0057D4  6F36               	movwf	(_var_sys+54)& (0+255),b	;volatile
 28368  0057D6  0E00               	movlw	0
 28369  0057D8  D020               	goto	L106
 28370  0057DA                     l14487:
 28371                           
 28372                           ; BSR set to: 1
 28373                           ;controlCurrent_MC50.c: 326:         {;controlCurrent_MC50.c: 327:             var_sys.A
      +                          ctualComparatorCurrent=var_sys.ActualComparatorCurrent-(1200 +(500*(10-var_sys_NVM.decel
      +                          arationSensivity)));
 28374  0057DA  C0A7  F010         	movff	_var_sys_NVM+15,___wmul@multiplier	;volatile
 28375  0057DE  6A11               	clrf	(___wmul@multiplier+1)^0,c
 28376  0057E0  0EFE               	movlw	254
 28377  0057E2  6E13               	movwf	(___wmul@multiplicand+1)^0,c
 28378  0057E4  0E0C               	movlw	12
 28379  0057E6  6E12               	movwf	___wmul@multiplicand^0,c
 28380  0057E8  EC0D  F047         	call	___wmul	;wreg free
 28381  0057EC  0E38               	movlw	56
 28382  0057EE  2410               	addwf	?___wmul^0,w,c
 28383  0057F0  6E1A               	movwf	??_getCurrentComparator^0,c
 28384  0057F2  0E18               	movlw	24
 28385  0057F4  2011               	addwfc	(?___wmul+1)^0,w,c
 28386  0057F6  6E1B               	movwf	(??_getCurrentComparator+1)^0,c
 28387  0057F8  6A1C               	clrf	(??_getCurrentComparator+2)^0,c
 28388  0057FA  BE1B               	btfsc	(??_getCurrentComparator+1)^0,7,c
 28389  0057FC  061C               	decf	(??_getCurrentComparator+2)^0,f,c
 28390  0057FE  501C               	movf	(??_getCurrentComparator+2)^0,w,c
 28391  005800  6E1D               	movwf	(??_getCurrentComparator+3)^0,c
 28392  005802  501A               	movf	??_getCurrentComparator^0,w,c
 28393  005804  0101               	movlb	1	; () banked
 28394  005806  5D34               	subwf	(_var_sys+52)& (0+255),w,b	;volatile
 28395  005808  6F34               	movwf	(_var_sys+52)& (0+255),b	;volatile
 28396  00580A  501B               	movf	(??_getCurrentComparator+1)^0,w,c
 28397  00580C  5935               	subwfb	(_var_sys+53)& (0+255),w,b	;volatile
 28398  00580E  6F35               	movwf	(_var_sys+53)& (0+255),b	;volatile
 28399  005810  501C               	movf	(??_getCurrentComparator+2)^0,w,c
 28400  005812  5936               	subwfb	(_var_sys+54)& (0+255),w,b	;volatile
 28401  005814  6F36               	movwf	(_var_sys+54)& (0+255),b	;volatile
 28402  005816  501D               	movf	(??_getCurrentComparator+3)^0,w,c
 28403  005818  5937               	subwfb	(_var_sys+55)& (0+255),w,b	;volatile
 28404  00581A                     L106:
 28405  00581A  6F37               	movwf	(_var_sys+55)& (0+255),b	;volatile
 28406                           
 28407                           ; BSR set to: 1
 28408                           ;controlCurrent_MC50.c: 332:     return var_sys.ActualComparatorCurrent+tempOffset;
 28409  00581C  5020               	movf	getCurrentComparator@tempOffset^0,w,c
 28410  00581E  2534               	addwf	(_var_sys+52)& (0+255),w,b	;volatile
 28411  005820  6E16               	movwf	?_getCurrentComparator^0,c
 28412  005822  5021               	movf	(getCurrentComparator@tempOffset+1)^0,w,c
 28413  005824  2135               	addwfc	(_var_sys+53)& (0+255),w,b	;volatile
 28414  005826  6E17               	movwf	(?_getCurrentComparator+1)^0,c
 28415  005828  0E00               	movlw	0
 28416  00582A  2136               	addwfc	(_var_sys+54)& (0+255),w,b	;volatile
 28417  00582C  6E18               	movwf	(?_getCurrentComparator+2)^0,c
 28418  00582E  0E00               	movlw	0
 28419  005830  2137               	addwfc	(_var_sys+55)& (0+255),w,b	;volatile
 28420  005832  6E19               	movwf	(?_getCurrentComparator+3)^0,c
 28421                           
 28422                           ; BSR set to: 1
 28423  005834  0012               	return		;funcret
 28424  005836                     __end_of_getCurrentComparator:
 28425                           	callstack 0
 28426                           
 28427 ;; *************** function ___wmul *****************
 28428 ;; Defined at:
 28429 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul16.c"
 28430 ;; Parameters:    Size  Location     Type
 28431 ;;  multiplier      2   15[COMRAM] unsigned int 
 28432 ;;  multiplicand    2   17[COMRAM] unsigned int 
 28433 ;; Auto vars:     Size  Location     Type
 28434 ;;  product         2   19[COMRAM] unsigned int 
 28435 ;; Return value:  Size  Location     Type
 28436 ;;                  2   15[COMRAM] unsigned int 
 28437 ;; Registers used:
 28438 ;;		wreg, status,2, status,0, prodl, prodh
 28439 ;; Tracked objects:
 28440 ;;		On entry : 0/0
 28441 ;;		On exit  : 0/0
 28442 ;;		Unchanged: 0/0
 28443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28444 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28445 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28447 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28448 ;;Total ram usage:        6 bytes
 28449 ;; Hardware stack levels used: 1
 28450 ;; Hardware stack levels required when called: 4
 28451 ;; This function calls:
 28452 ;;		Nothing
 28453 ;; This function is called by:
 28454 ;;		_getCurrentComparator
 28455 ;;		_getHopCode
 28456 ;; This function uses a non-reentrant model
 28457 ;;
 28458                           
 28459                           	psect	text124
 28460  008E1A                     __ptext124:
 28461                           	callstack 0
 28462  008E1A                     ___wmul:
 28463                           	callstack 22
 28464                           
 28465                           ; BSR set to: 1
 28466                           ;incstack = 0
 28467  008E1A  5010               	movf	___wmul@multiplier^0,w,c
 28468  008E1C  0212               	mulwf	___wmul@multiplicand^0,c
 28469  008E1E  CFF3 F014          	movff	prodl,___wmul@product
 28470  008E22  CFF4 F015          	movff	prodh,___wmul@product+1
 28471  008E26  5010               	movf	___wmul@multiplier^0,w,c
 28472  008E28  0213               	mulwf	(___wmul@multiplicand+1)^0,c
 28473  008E2A  50F3               	movf	243,w,c
 28474  008E2C  2615               	addwf	(___wmul@product+1)^0,f,c
 28475  008E2E  5011               	movf	(___wmul@multiplier+1)^0,w,c
 28476  008E30  0212               	mulwf	___wmul@multiplicand^0,c
 28477  008E32  50F3               	movf	243,w,c
 28478  008E34  2615               	addwf	(___wmul@product+1)^0,f,c
 28479  008E36  C014  F010         	movff	___wmul@product,?___wmul
 28480  008E3A  C015  F011         	movff	___wmul@product+1,?___wmul+1
 28481  008E3E  0012               	return		;funcret
 28482  008E40                     __end_of___wmul:
 28483                           	callstack 0
 28484                           
 28485 ;; *************** function _GetMotorPower *****************
 28486 ;; Defined at:
 28487 ;;		line 405 in file "outputs_MC50.c"
 28488 ;; Parameters:    Size  Location     Type
 28489 ;;		None
 28490 ;; Auto vars:     Size  Location     Type
 28491 ;;  defineatraso    1   18[COMRAM] unsigned char 
 28492 ;; Return value:  Size  Location     Type
 28493 ;;                  1    wreg      unsigned char 
 28494 ;; Registers used:
 28495 ;;		wreg, status,2, status,0, prodl, prodh
 28496 ;; Tracked objects:
 28497 ;;		On entry : 3E/1
 28498 ;;		On exit  : 3F/1
 28499 ;;		Unchanged: 0/0
 28500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28502 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28503 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28504 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28505 ;;Total ram usage:        4 bytes
 28506 ;; Hardware stack levels used: 1
 28507 ;; Hardware stack levels required when called: 4
 28508 ;; This function calls:
 28509 ;;		Nothing
 28510 ;; This function is called by:
 28511 ;;		_ControlCurrent
 28512 ;;		_InitSoftStart
 28513 ;;		_InitSoftStop
 28514 ;; This function uses a non-reentrant model
 28515 ;;
 28516                           
 28517                           	psect	text125
 28518  006F50                     __ptext125:
 28519                           	callstack 0
 28520  006F50                     _GetMotorPower:
 28521                           	callstack 22
 28522                           
 28523                           ;outputs_MC50.c: 408:     unsigned char defineatraso;;outputs_MC50.c: 413:     if(powerC
      +                          ontrol_st.decelarationActive==YES)
 28524                           
 28525                           ;incstack = 0
 28526  006F50  0101               	movlb	1	; () banked
 28527  006F52  057B               	decf	_powerControl_st& (0+255),w,b
 28528  006F54  A4D8               	btfss	status,2,c
 28529  006F56  D006               	goto	l19349
 28530                           
 28531                           ; BSR set to: 1
 28532                           ;outputs_MC50.c: 414:     {;outputs_MC50.c: 415:        temppower=(var_sys_NVM.motorPowe
      +                          r*6);
 28533  006F58  0100               	movlb	0	; () banked
 28534  006F5A  519A               	movf	(_var_sys_NVM+2)& (0+255),w,b	;volatile
 28535  006F5C  0D06               	mullw	6
 28536  006F5E  CFF3 F18E          	movff	prodl,_temppower
 28537                           
 28538                           ;outputs_MC50.c: 416:     }
 28539  006F62  D043               	goto	l2235
 28540  006F64                     l19349:
 28541                           
 28542                           ; BSR set to: 1
 28543                           ;outputs_MC50.c: 418:     {;outputs_MC50.c: 419:         fullmotorPower=(var_sys_NVM.mot
      +                          orPower*6);
 28544  006F64  0100               	movlb	0	; () banked
 28545  006F66  519A               	movf	(_var_sys_NVM+2)& (0+255),w,b	;volatile
 28546  006F68  0D06               	mullw	6
 28547  006F6A  CFF3 F082          	movff	prodl,_fullmotorPower
 28548                           
 28549                           ; BSR set to: 0
 28550                           ;outputs_MC50.c: 421:         if(var_sys.velocityFactor>0)
 28551  006F6E  0101               	movlb	1	; () banked
 28552  006F70  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 28553  006F72  D01C               	goto	l19359
 28554  006F74  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 28555  006F76  E103               	bnz	u22090
 28556  006F78  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 28557  006F7A  A0D8               	btfss	status,0,c
 28558  006F7C  D017               	goto	l19359
 28559  006F7E                     u22090:
 28560                           
 28561                           ; BSR set to: 1
 28562                           ;outputs_MC50.c: 422:         {;outputs_MC50.c: 423:             if(var_sys.velocityFact
      +                          or>fullmotorPower)
 28563  006F7E  0100               	movlb	0	; () banked
 28564  006F80  5182               	movf	_fullmotorPower& (0+255),w,b
 28565  006F82  6E10               	movwf	??_GetMotorPower^0,c
 28566  006F84  6A11               	clrf	(??_GetMotorPower+1)^0,c
 28567  006F86  0101               	movlb	1	; () banked
 28568  006F88  510E               	movf	(_var_sys+14)& (0+255),w,b	;volatile
 28569  006F8A  5C10               	subwf	??_GetMotorPower^0,w,c
 28570  006F8C  5011               	movf	(??_GetMotorPower+1)^0,w,c
 28571  006F8E  0A80               	xorlw	128
 28572  006F90  6E12               	movwf	(??_GetMotorPower+2)^0,c
 28573  006F92  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 28574  006F94  0A80               	xorlw	128
 28575  006F96  5812               	subwfb	(??_GetMotorPower+2)^0,w,c
 28576  006F98  B0D8               	btfsc	status,0,c
 28577  006F9A  D002               	goto	l19357
 28578                           
 28579                           ; BSR set to: 1
 28580                           ;outputs_MC50.c: 424:             {;outputs_MC50.c: 425:                 temppower=1;
 28581  006F9C  0E01               	movlw	1
 28582  006F9E  D004               	goto	L109
 28583  006FA0                     l19357:
 28584                           
 28585                           ; BSR set to: 1
 28586                           ;outputs_MC50.c: 428:             {;outputs_MC50.c: 430:                 temppower =full
      +                          motorPower-var_sys.velocityFactor;
 28587  006FA0  510E               	movf	(_var_sys+14)& (0+255),w,b	;volatile
 28588  006FA2  0100               	movlb	0	; () banked
 28589  006FA4  5D82               	subwf	_fullmotorPower& (0+255),w,b
 28590  006FA6  D017               	goto	L110
 28591  006FA8                     L109:
 28592  006FA8  6F8E               	movwf	_temppower& (0+255),b
 28593  006FAA  D01F               	goto	l2235
 28594  006FAC                     l19359:
 28595                           
 28596                           ; BSR set to: 1
 28597  006FAC  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 28598  006FAE  D005               	goto	u22110
 28599  006FB0  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 28600  006FB2  E113               	bnz	l19369
 28601  006FB4  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 28602  006FB6  B0D8               	btfsc	status,0,c
 28603  006FB8  D010               	goto	l19369
 28604  006FBA                     u22110:
 28605                           
 28606                           ; BSR set to: 1
 28607  006FBA  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 28608  006FBC  D005               	goto	u22120
 28609  006FBE  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 28610  006FC0  E10C               	bnz	l19369
 28611  006FC2  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 28612  006FC4  B0D8               	btfsc	status,0,c
 28613  006FC6  D009               	goto	l19369
 28614  006FC8                     u22120:
 28615                           
 28616                           ; BSR set to: 1
 28617                           ;outputs_MC50.c: 434:         {;outputs_MC50.c: 435:             temppower =fullmotorPow
      +                          er;
 28618  006FC8  C082  F18E         	movff	_fullmotorPower,_temppower
 28619                           
 28620                           ; BSR set to: 1
 28621                           ;outputs_MC50.c: 438:             if ( var_sys_NVM.motorPower>8 )
 28622  006FCC  0E08               	movlw	8
 28623  006FCE  0100               	movlb	0	; () banked
 28624  006FD0  659A               	cpfsgt	(_var_sys_NVM+2)& (0+255),b	;volatile
 28625  006FD2  D00B               	goto	l2235
 28626                           
 28627                           ; BSR set to: 0
 28628                           ;outputs_MC50.c: 439:             {;outputs_MC50.c: 440:                 temppower = 80 
      +                          -23 +1;
 28629  006FD4  0E3A               	movlw	58
 28630  006FD6                     L110:
 28631  006FD6  0101               	movlb	1	; () banked
 28632  006FD8  D7E7               	goto	L109
 28633  006FDA                     l19369:
 28634                           
 28635                           ; BSR set to: 1
 28636  006FDA  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 28637  006FDC  D006               	goto	l2235
 28638  006FDE  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 28639  006FE0  E102               	bnz	u22140
 28640  006FE2  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 28641  006FE4  B0D8               	btfsc	status,0,c
 28642  006FE6                     u22140:
 28643                           
 28644                           ; BSR set to: 1
 28645                           ;outputs_MC50.c: 447:                 temppower = var_sys.velocityFactorstop;
 28646  006FE6  C110  F18E         	movff	_var_sys+16,_temppower	;volatile
 28647  006FEA                     l2235:
 28648                           
 28649                           ;outputs_MC50.c: 451:     if ((var_sys.velocityFactorstop > 0)&&(var_sys.velocityFactor 
      +                          <= 0 )){
 28650  006FEA  0101               	movlb	1	; () banked
 28651  006FEC  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 28652  006FEE  D00E               	goto	l19379
 28653  006FF0  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 28654  006FF2  E103               	bnz	u22150
 28655  006FF4  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 28656  006FF6  A0D8               	btfss	status,0,c
 28657  006FF8  D009               	goto	l19379
 28658  006FFA                     u22150:
 28659                           
 28660                           ; BSR set to: 1
 28661  006FFA  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 28662  006FFC  D005               	goto	u22160
 28663  006FFE  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 28664  007000  E105               	bnz	l19379
 28665  007002  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 28666  007004  B0D8               	btfsc	status,0,c
 28667  007006  D002               	goto	l19379
 28668  007008                     u22160:
 28669                           
 28670                           ; BSR set to: 1
 28671                           ;outputs_MC50.c: 452:     defineatraso = 5;
 28672  007008  0E05               	movlw	5
 28673  00700A  D001               	goto	L108
 28674  00700C                     l19379:
 28675                           
 28676                           ; BSR set to: 1
 28677                           ;outputs_MC50.c: 455:     {;outputs_MC50.c: 456:     defineatraso = 23;
 28678  00700C  0E17               	movlw	23
 28679  00700E                     L108:
 28680  00700E  6E13               	movwf	GetMotorPower@defineatraso^0,c
 28681                           
 28682                           ; BSR set to: 1
 28683                           ;outputs_MC50.c: 459:     return temppower+defineatraso;
 28684  007010  518E               	movf	_temppower& (0+255),w,b
 28685  007012  2413               	addwf	GetMotorPower@defineatraso^0,w,c
 28686                           
 28687                           ; BSR set to: 1
 28688  007014  0012               	return		;funcret
 28689  007016                     __end_of_GetMotorPower:
 28690                           	callstack 0
 28691                           
 28692 ;; *************** function _ControlCounterMoves *****************
 28693 ;; Defined at:
 28694 ;;		line 293 in file "controlMemory_MC50.c"
 28695 ;; Parameters:    Size  Location     Type
 28696 ;;		None
 28697 ;; Auto vars:     Size  Location     Type
 28698 ;;		None
 28699 ;; Return value:  Size  Location     Type
 28700 ;;                  1    wreg      void 
 28701 ;; Registers used:
 28702 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28703 ;; Tracked objects:
 28704 ;;		On entry : 3E/1
 28705 ;;		On exit  : 0/0
 28706 ;;		Unchanged: 0/0
 28707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28711 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28712 ;;Total ram usage:        0 bytes
 28713 ;; Hardware stack levels used: 1
 28714 ;; Hardware stack levels required when called: 14
 28715 ;; This function calls:
 28716 ;;		_SaveNVM_VarSystem
 28717 ;; This function is called by:
 28718 ;;		_main
 28719 ;; This function uses a non-reentrant model
 28720 ;;
 28721                           
 28722                           	psect	text126
 28723  008366                     __ptext126:
 28724                           	callstack 0
 28725  008366                     _ControlCounterMoves:
 28726                           	callstack 16
 28727                           
 28728                           ;controlMemory_MC50.c: 296:     if(ts_system.timeBetweenSaveCounters<=0)
 28729                           
 28730                           ; BSR set to: 1
 28731                           ;incstack = 0
 28732  008366  0101               	movlb	1	; () banked
 28733  008368  BFC1               	btfsc	(_ts_system+39)& (0+255),7,b	;volatile
 28734  00836A  D005               	goto	u27540
 28735  00836C  51C1               	movf	(_ts_system+39)& (0+255),w,b	;volatile
 28736  00836E  E127               	bnz	l1486
 28737  008370  05C0               	decf	(_ts_system+38)& (0+255),w,b	;volatile
 28738  008372  B0D8               	btfsc	status,0,c
 28739  008374  0012               	return	
 28740  008376                     u27540:
 28741                           
 28742                           ; BSR set to: 1
 28743                           ;controlMemory_MC50.c: 297:     {;controlMemory_MC50.c: 298:        ts_system.timeBetwee
      +                          nSaveCounters=((1000/50)*60)*5;
 28744  008376  0E17               	movlw	23
 28745  008378  6FC1               	movwf	(_ts_system+39)& (0+255),b	;volatile
 28746  00837A  0E70               	movlw	112
 28747  00837C  6FC0               	movwf	(_ts_system+38)& (0+255),b	;volatile
 28748                           
 28749                           ; BSR set to: 1
 28750                           ;controlMemory_MC50.c: 300:        if(var_sys.actualCounterMoves!=var_sys_NVM.counterMov
      +                          es)
 28751  00837E  0100               	movlb	0	; () banked
 28752  008380  51BA               	movf	(_var_sys_NVM+34)& (0+255),w,b	;volatile
 28753  008382  0101               	movlb	1	; () banked
 28754  008384  193C               	xorwf	(_var_sys+60)& (0+255),w,b	;volatile
 28755  008386  E110               	bnz	u27550
 28756  008388  0100               	movlb	0	; () banked
 28757  00838A  51BB               	movf	(_var_sys_NVM+35)& (0+255),w,b	;volatile
 28758  00838C  0101               	movlb	1	; () banked
 28759  00838E  193D               	xorwf	(_var_sys+61)& (0+255),w,b	;volatile
 28760  008390  E10B               	bnz	u27550
 28761  008392  0100               	movlb	0	; () banked
 28762  008394  51BC               	movf	(_var_sys_NVM+36)& (0+255),w,b	;volatile
 28763  008396  0101               	movlb	1	; () banked
 28764  008398  193E               	xorwf	(_var_sys+62)& (0+255),w,b	;volatile
 28765  00839A  E106               	bnz	u27550
 28766  00839C  0100               	movlb	0	; () banked
 28767  00839E  51BD               	movf	(_var_sys_NVM+37)& (0+255),w,b	;volatile
 28768  0083A0  0101               	movlb	1	; () banked
 28769  0083A2  193F               	xorwf	(_var_sys+63)& (0+255),w,b	;volatile
 28770  0083A4  B4D8               	btfsc	status,2,c
 28771  0083A6  0012               	return	
 28772  0083A8                     u27550:
 28773                           
 28774                           ; BSR set to: 1
 28775                           ;controlMemory_MC50.c: 301:        {;controlMemory_MC50.c: 302:            var_sys_NVM.c
      +                          ounterMoves=var_sys.actualCounterMoves;
 28776  0083A8  C13C  F0BA         	movff	_var_sys+60,_var_sys_NVM+34	;volatile
 28777  0083AC  C13D  F0BB         	movff	_var_sys+61,_var_sys_NVM+35	;volatile
 28778  0083B0  C13E  F0BC         	movff	_var_sys+62,_var_sys_NVM+36	;volatile
 28779  0083B4  C13F  F0BD         	movff	_var_sys+63,_var_sys_NVM+37	;volatile
 28780                           
 28781                           ; BSR set to: 1
 28782                           ;controlMemory_MC50.c: 303:            SaveNVM_VarSystem(pageMemoryCounters);
 28783  0083B8  0E02               	movlw	2
 28784  0083BA  EC0A  F045         	call	_SaveNVM_VarSystem
 28785  0083BE                     l1486:
 28786  0083BE  0012               	return		;funcret
 28787  0083C0                     __end_of_ControlCounterMoves:
 28788                           	callstack 0
 28789                           
 28790 ;; *************** function _SaveNVM_VarSystem *****************
 28791 ;; Defined at:
 28792 ;;		line 175 in file "controlMemory_MC50.c"
 28793 ;; Parameters:    Size  Location     Type
 28794 ;;  page            1    wreg     unsigned char 
 28795 ;; Auto vars:     Size  Location     Type
 28796 ;;  page            1    0[BANK0 ] unsigned char 
 28797 ;;  tempAdd         2    1[BANK0 ] unsigned int 
 28798 ;;  point           1    3[BANK0 ] PTR unsigned char 
 28799 ;;		 -> var_sys_NVM(64), 
 28800 ;; Return value:  Size  Location     Type
 28801 ;;                  1    wreg      void 
 28802 ;; Registers used:
 28803 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28804 ;; Tracked objects:
 28805 ;;		On entry : 0/0
 28806 ;;		On exit  : 0/0
 28807 ;;		Unchanged: 0/0
 28808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28809 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28810 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28812 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28813 ;;Total ram usage:        4 bytes
 28814 ;; Hardware stack levels used: 1
 28815 ;; Hardware stack levels required when called: 13
 28816 ;; This function calls:
 28817 ;;		_i2c_writeNBytes
 28818 ;; This function is called by:
 28819 ;;		_loadNVM_VarSystem
 28820 ;;		_ResetDefaultMemory
 28821 ;;		_ControlCounterMoves
 28822 ;;		_checkNVM_VarSystem
 28823 ;;		_sm_execute_ControlLearning
 28824 ;;		_sm_execute_menuConfiguration
 28825 ;;		_setValueToEdit
 28826 ;;		_controlSelectRemote
 28827 ;;		_eusartparser
 28828 ;; This function uses a non-reentrant model
 28829 ;;
 28830                           
 28831                           	psect	text127
 28832  008A14                     __ptext127:
 28833                           	callstack 0
 28834  008A14                     _SaveNVM_VarSystem:
 28835                           	callstack 14
 28836                           
 28837                           ;incstack = 0
 28838                           ;SaveNVM_VarSystem@page stored from wreg
 28839  008A14  0100               	movlb	0	; () banked
 28840  008A16  6FD8               	movwf	SaveNVM_VarSystem@page& (0+255),b
 28841                           
 28842                           ;controlMemory_MC50.c: 175: void SaveNVM_VarSystem(unsigned char page);controlMemory_MC5
      +                          0.c: 176: {;controlMemory_MC50.c: 177:     unsigned int tempAdd=page*16;
 28843  008A18  0100               	movlb	0	; () banked
 28844  008A1A  51D8               	movf	SaveNVM_VarSystem@page& (0+255),w,b
 28845  008A1C  0D10               	mullw	16
 28846  008A1E  CFF3 F0D9          	movff	prodl,SaveNVM_VarSystem@tempAdd
 28847  008A22  CFF4 F0DA          	movff	prodh,SaveNVM_VarSystem@tempAdd+1
 28848                           
 28849                           ; BSR set to: 0
 28850                           ;controlMemory_MC50.c: 178:     char* point=(char*)&var_sys_NVM;
 28851  008A26  0E98               	movlw	low _var_sys_NVM
 28852  008A28  6FDB               	movwf	SaveNVM_VarSystem@point& (0+255),b
 28853                           
 28854                           ; BSR set to: 0
 28855                           ;controlMemory_MC50.c: 179:     point=point+tempAdd;
 28856  008A2A  51DB               	movf	SaveNVM_VarSystem@point& (0+255),w,b
 28857  008A2C  25D9               	addwf	SaveNVM_VarSystem@tempAdd& (0+255),w,b
 28858  008A2E  6FDB               	movwf	SaveNVM_VarSystem@point& (0+255),b
 28859                           
 28860                           ; BSR set to: 0
 28861                           ;controlMemory_MC50.c: 180:    i2c_writeNBytes(0x50, tempAdd, point, 16);
 28862  008A30  C0D9  F022         	movff	SaveNVM_VarSystem@tempAdd,i2c_writeNBytes@reg
 28863  008A34  C0DA  F023         	movff	SaveNVM_VarSystem@tempAdd+1,i2c_writeNBytes@reg+1
 28864  008A38  C0DB  F024         	movff	SaveNVM_VarSystem@point,i2c_writeNBytes@data
 28865  008A3C  0E00               	movlw	0
 28866  008A3E  6E26               	movwf	(i2c_writeNBytes@len+1)^0,c
 28867  008A40  0E10               	movlw	16
 28868  008A42  6E25               	movwf	i2c_writeNBytes@len^0,c
 28869  008A44  0E50               	movlw	80
 28870  008A46  EC14  F03F         	call	_i2c_writeNBytes
 28871  008A4A  0012               	return		;funcret
 28872  008A4C                     __end_of_SaveNVM_VarSystem:
 28873                           	callstack 0
 28874                           
 28875 ;; *************** function _i2c_writeNBytes *****************
 28876 ;; Defined at:
 28877 ;;		line 50 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 28878 ;; Parameters:    Size  Location     Type
 28879 ;;  address         1    wreg     unsigned char 
 28880 ;;  reg             2   33[COMRAM] unsigned short 
 28881 ;;  data            1   35[COMRAM] PTR void 
 28882 ;;		 -> RemoveSerial@tempSerial(4), saveNewSerial@tempSerial(4), var_sys_NVM(64), 
 28883 ;;  len             2   36[COMRAM] unsigned int 
 28884 ;; Auto vars:     Size  Location     Type
 28885 ;;  address         1   56[COMRAM] unsigned char 
 28886 ;;  dat            17   39[COMRAM] unsigned char [17]
 28887 ;; Return value:  Size  Location     Type
 28888 ;;                  1    wreg      void 
 28889 ;; Registers used:
 28890 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28891 ;; Tracked objects:
 28892 ;;		On entry : 3F/0
 28893 ;;		On exit  : 0/0
 28894 ;;		Unchanged: 0/0
 28895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28896 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28897 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28898 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28899 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28900 ;;Total ram usage:       24 bytes
 28901 ;; Hardware stack levels used: 1
 28902 ;; Hardware stack levels required when called: 12
 28903 ;; This function calls:
 28904 ;;		_I2C1_Close
 28905 ;;		_I2C1_MasterWrite
 28906 ;;		_I2C1_Open
 28907 ;;		_I2C1_SetAddressNackCallback
 28908 ;;		_I2C1_SetBuffer
 28909 ;;		_memcpy
 28910 ;; This function is called by:
 28911 ;;		_saveNewSerial
 28912 ;;		_RemoveSerial
 28913 ;;		_SaveNVM_VarSystem
 28914 ;; This function uses a non-reentrant model
 28915 ;;
 28916                           
 28917                           	psect	text128
 28918  007E28                     __ptext128:
 28919                           	callstack 0
 28920  007E28                     _i2c_writeNBytes:
 28921                           	callstack 14
 28922                           
 28923                           ;incstack = 0
 28924                           ;i2c_writeNBytes@address stored from wreg
 28925  007E28  6E39               	movwf	i2c_writeNBytes@address^0,c
 28926                           
 28927                           ;mcc_generated_files/drivers/i2c_simple_master.c: 50: void i2c_writeNBytes(i2c1_address_
      +                          t address, uint16_t reg, void* data, size_t len);mcc_generated_files/drivers/i2c_simple_
      +                          master.c: 51: {;mcc_generated_files/drivers/i2c_simple_master.c: 52:     uint8_t dat[17]
      +                          ;;mcc_generated_files/drivers/i2c_simple_master.c: 53:     dat[0] = reg;
 28928  007E2A  C022  F028         	movff	i2c_writeNBytes@reg,i2c_writeNBytes@dat
 28929                           
 28930                           ;mcc_generated_files/drivers/i2c_simple_master.c: 54:     memcpy(dat + 1, data, len);
 28931  007E2E  0E29               	movlw	low (i2c_writeNBytes@dat+1)
 28932  007E30  6E10               	movwf	memcpy@d1^0,c
 28933  007E32  6A11               	clrf	(memcpy@d1+1)^0,c
 28934  007E34  C024  F012         	movff	i2c_writeNBytes@data,memcpy@s1
 28935  007E38  6A13               	clrf	(memcpy@s1+1)^0,c
 28936  007E3A  C025  F014         	movff	i2c_writeNBytes@len,memcpy@n
 28937  007E3E  C026  F015         	movff	i2c_writeNBytes@len+1,memcpy@n+1
 28938  007E42  EC0C  F044         	call	_memcpy	;wreg free
 28939  007E46                     l19403:
 28940  007E46  5023               	movf	(i2c_writeNBytes@reg+1)^0,w,c
 28941  007E48  1039               	iorwf	i2c_writeNBytes@address^0,w,c
 28942  007E4A  ECE4  F03C         	call	_I2C1_Open
 28943  007E4E  0900               	iorlw	0
 28944  007E50  B4D8               	btfsc	status,2,c
 28945  007E52  D7F9               	goto	l19403
 28946                           
 28947                           ;mcc_generated_files/drivers/i2c_simple_master.c: 56:     I2C1_SetBuffer(dat,len + 1);
 28948  007E54  0E28               	movlw	low i2c_writeNBytes@dat
 28949  007E56  6E10               	movwf	I2C1_SetBuffer@buffer^0,c
 28950  007E58  6A11               	clrf	(I2C1_SetBuffer@buffer+1)^0,c
 28951  007E5A  0E01               	movlw	1
 28952  007E5C  2425               	addwf	i2c_writeNBytes@len^0,w,c
 28953  007E5E  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 28954  007E60  0E00               	movlw	0
 28955  007E62  2026               	addwfc	(i2c_writeNBytes@len+1)^0,w,c
 28956  007E64  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 28957  007E66  EC08  F048         	call	_I2C1_SetBuffer	;wreg free
 28958                           
 28959                           ; BSR set to: 2
 28960                           ;mcc_generated_files/drivers/i2c_simple_master.c: 57:     I2C1_SetAddressNackCallback(((
      +                          void*)0),((void*)0));
 28961  007E6A  0E00               	movlw	0
 28962  007E6C  6E15               	movwf	I2C1_SetAddressNackCallback@cb^0,c
 28963  007E6E  0E00               	movlw	0
 28964  007E70  6E16               	movwf	(I2C1_SetAddressNackCallback@cb+1)^0,c
 28965  007E72  0E00               	movlw	0
 28966  007E74  6E17               	movwf	I2C1_SetAddressNackCallback@ptr^0,c
 28967  007E76  0E00               	movlw	0
 28968  007E78  6E18               	movwf	(I2C1_SetAddressNackCallback@ptr+1)^0,c
 28969  007E7A  EC39  F048         	call	_I2C1_SetAddressNackCallback	;wreg free
 28970                           
 28971                           ;mcc_generated_files/drivers/i2c_simple_master.c: 58:     I2C1_MasterWrite();
 28972  007E7E  EC07  F049         	call	_I2C1_MasterWrite	;wreg free
 28973  007E82                     l19411:
 28974  007E82  EC7A  F047         	call	_I2C1_Close	;wreg free
 28975  007E86  06E8               	decf	wreg,f,c
 28976  007E88  B4D8               	btfsc	status,2,c
 28977  007E8A  D7FB               	goto	l19411
 28978                           
 28979                           ;mcc_generated_files/drivers/i2c_simple_master.c: 60:     _delay((unsigned long)((10)*(6
      +                          4000000/4000.0)));
 28980  007E8C  0ED0               	movlw	208
 28981  007E8E  6E27               	movwf	??_i2c_writeNBytes^0,c
 28982  007E90  0ECA               	movlw	202
 28983  007E92                     u28907:
 28984  007E92  2EE8               	decfsz	wreg,f,c
 28985  007E94  D7FE               	bra	u28907
 28986  007E96  2E27               	decfsz	??_i2c_writeNBytes^0,f,c
 28987  007E98  D7FC               	bra	u28907
 28988  007E9A  0012               	return		;funcret
 28989  007E9C                     __end_of_i2c_writeNBytes:
 28990                           	callstack 0
 28991                           
 28992 ;; *************** function _memcpy *****************
 28993 ;; Defined at:
 28994 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\memcpy.c"
 28995 ;; Parameters:    Size  Location     Type
 28996 ;;  d1              2   15[COMRAM] PTR void 
 28997 ;;		 -> controlSelectRemote@tempSerial(4), Decrypt@Buffer(4), SecureKeyGen@SKEYtemp(8), SecureKeyGen@HOPtemp(4), 
 28998 ;;		 -> SecureKeyGen@Buffer(8), NormalKeyGen@SKEYtemp(4), NormalKeyGen@SEED(4), NormalKeyGen@HOPtemp(4), 
 28999 ;;		 -> NormalKeyGen@Buffer(8), DKEY(8), classic_data(16), I2C1_WriteNBytes@dat(17), 
 29000 ;;		 -> i2c_writeNBytes@dat(17), 
 29001 ;;  s1              2   17[COMRAM] PTR const void 
 29002 ;;		 -> classic_data.raw_data(4), Decrypt@Buffer(4), SecureKeyGen@SKEYtemp(8), SecureKeyGen@HOPtemp(4), 
 29003 ;;		 -> SecureKeyGen@Buffer(8), NormalKeyGen@SKEYtemp(4), NormalKeyGen@SEED(4), NormalKeyGen@HOPtemp(4), 
 29004 ;;		 -> NormalKeyGen@Buffer(8), classic_data.serialnumber(4), classic_data(16), BufferRF(9), 
 29005 ;;		 -> RemoveSerial@tempSerial(4), saveNewSerial@tempSerial(4), var_sys_NVM(64), 
 29006 ;;  n               2   19[COMRAM] unsigned int 
 29007 ;; Auto vars:     Size  Location     Type
 29008 ;;  s               2   24[COMRAM] PTR const unsigned char 
 29009 ;;		 -> classic_data.raw_data(4), Decrypt@Buffer(4), SecureKeyGen@SKEYtemp(8), SecureKeyGen@HOPtemp(4), 
 29010 ;;		 -> SecureKeyGen@Buffer(8), NormalKeyGen@SKEYtemp(4), NormalKeyGen@SEED(4), NormalKeyGen@HOPtemp(4), 
 29011 ;;		 -> NormalKeyGen@Buffer(8), classic_data.serialnumber(4), classic_data(16), BufferRF(9), 
 29012 ;;		 -> RemoveSerial@tempSerial(4), saveNewSerial@tempSerial(4), var_sys_NVM(64), 
 29013 ;;  d               2   22[COMRAM] PTR unsigned char 
 29014 ;;		 -> controlSelectRemote@tempSerial(4), Decrypt@Buffer(4), SecureKeyGen@SKEYtemp(8), SecureKeyGen@HOPtemp(4), 
 29015 ;;		 -> SecureKeyGen@Buffer(8), NormalKeyGen@SKEYtemp(4), NormalKeyGen@SEED(4), NormalKeyGen@HOPtemp(4), 
 29016 ;;		 -> NormalKeyGen@Buffer(8), DKEY(8), classic_data(16), I2C1_WriteNBytes@dat(17), 
 29017 ;;		 -> i2c_writeNBytes@dat(17), 
 29018 ;;  tmp             1   21[COMRAM] unsigned char 
 29019 ;; Return value:  Size  Location     Type
 29020 ;;                  2   15[COMRAM] PTR void 
 29021 ;; Registers used:
 29022 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 29023 ;; Tracked objects:
 29024 ;;		On entry : 0/0
 29025 ;;		On exit  : 0/0
 29026 ;;		Unchanged: 0/0
 29027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29028 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29029 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29031 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29032 ;;Total ram usage:       11 bytes
 29033 ;; Hardware stack levels used: 1
 29034 ;; Hardware stack levels required when called: 4
 29035 ;; This function calls:
 29036 ;;		Nothing
 29037 ;; This function is called by:
 29038 ;;		_i2c_writeNBytes
 29039 ;;		_getSerialCmd
 29040 ;;		_NormalKeyGen
 29041 ;;		_Decrypt
 29042 ;;		_keeloqDecryptPacket
 29043 ;;		_DecryptPacket_12BIT
 29044 ;; This function uses a non-reentrant model
 29045 ;;
 29046                           
 29047                           	psect	text129
 29048  008818                     __ptext129:
 29049                           	callstack 0
 29050  008818                     _memcpy:
 29051                           	callstack 21
 29052                           
 29053                           ;incstack = 0
 29054  008818  C012  F019         	movff	memcpy@s1,memcpy@s
 29055  00881C  C013  F01A         	movff	memcpy@s1+1,memcpy@s+1
 29056  008820  C010  F017         	movff	memcpy@d1,memcpy@d
 29057  008824  C011  F018         	movff	memcpy@d1+1,memcpy@d+1
 29058  008828  D010               	goto	l19343
 29059  00882A                     l19335:
 29060  00882A  C019  FFD9         	movff	memcpy@s,fsr2l
 29061  00882E  C01A  FFDA         	movff	memcpy@s+1,fsr2h
 29062  008832  50DF               	movf	indf2,w,c
 29063  008834  6E16               	movwf	memcpy@tmp^0,c
 29064  008836  4A19               	infsnz	memcpy@s^0,f,c
 29065  008838  2A1A               	incf	(memcpy@s+1)^0,f,c
 29066  00883A  C017  FFD9         	movff	memcpy@d,fsr2l
 29067  00883E  C018  FFDA         	movff	memcpy@d+1,fsr2h
 29068  008842  C016  FFDF         	movff	memcpy@tmp,indf2
 29069  008846  4A17               	infsnz	memcpy@d^0,f,c
 29070  008848  2A18               	incf	(memcpy@d+1)^0,f,c
 29071  00884A                     l19343:
 29072  00884A  0614               	decf	memcpy@n^0,f,c
 29073  00884C  A0D8               	btfss	status,0,c
 29074  00884E  0615               	decf	(memcpy@n+1)^0,f,c
 29075  008850  2814               	incf	memcpy@n^0,w,c
 29076  008852  E1EB               	bnz	l19335
 29077  008854  2815               	incf	(memcpy@n+1)^0,w,c
 29078  008856  B4D8               	btfsc	status,2,c
 29079  008858  0012               	return	
 29080  00885A  D7E7               	goto	l19335
 29081  00885C                     __end_of_memcpy:
 29082                           	callstack 0
 29083                           
 29084 ;; *************** function _I2C1_SetAddressNackCallback *****************
 29085 ;; Defined at:
 29086 ;;		line 283 in file "mcc_generated_files/i2c1_master.c"
 29087 ;; Parameters:    Size  Location     Type
 29088 ;;  cb              2   20[COMRAM] PTR FTN(PTR void ,)enum 
 29089 ;;		 -> Absolute function(1), 
 29090 ;;  ptr             2   22[COMRAM] PTR void 
 29091 ;;		 -> NULL(0), 
 29092 ;; Auto vars:     Size  Location     Type
 29093 ;;		None
 29094 ;; Return value:  Size  Location     Type
 29095 ;;                  1    wreg      void 
 29096 ;; Registers used:
 29097 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29098 ;; Tracked objects:
 29099 ;;		On entry : 3F/2
 29100 ;;		On exit  : 0/0
 29101 ;;		Unchanged: 0/0
 29102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29103 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29106 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29107 ;;Total ram usage:        4 bytes
 29108 ;; Hardware stack levels used: 1
 29109 ;; Hardware stack levels required when called: 5
 29110 ;; This function calls:
 29111 ;;		_I2C1_SetCallback
 29112 ;; This function is called by:
 29113 ;;		_i2c_writeNBytes
 29114 ;;		_i2c_readDataBlock
 29115 ;;		_I2C1_Read1ByteRegister
 29116 ;; This function uses a non-reentrant model
 29117 ;;
 29118                           
 29119                           	psect	text130
 29120  009072                     __ptext130:
 29121                           	callstack 0
 29122  009072                     _I2C1_SetAddressNackCallback:
 29123                           	callstack 20
 29124                           
 29125                           ; BSR set to: 2
 29126                           ;mcc_generated_files/i2c1_master.c: 283: void I2C1_SetAddressNackCallback(i2c1_callback_
      +                          t cb, void *ptr);mcc_generated_files/i2c1_master.c: 284: {;mcc_generated_files/i2c1_mast
      +                          er.c: 285:     I2C1_SetCallback(I2C1_ADDR_NACK, cb, ptr);
 29127                           
 29128                           ;incstack = 0
 29129  009072  C015  F010         	movff	I2C1_SetAddressNackCallback@cb,I2C1_SetCallback@cb
 29130  009076  C016  F011         	movff	I2C1_SetAddressNackCallback@cb+1,I2C1_SetCallback@cb+1
 29131  00907A  C017  F012         	movff	I2C1_SetAddressNackCallback@ptr,I2C1_SetCallback@ptr
 29132  00907E  C018  F013         	movff	I2C1_SetAddressNackCallback@ptr+1,I2C1_SetCallback@ptr+1
 29133  009082  0E02               	movlw	2
 29134  009084  ECF5  F03F         	call	_I2C1_SetCallback
 29135  009088  0012               	return		;funcret
 29136  00908A                     __end_of_I2C1_SetAddressNackCallback:
 29137                           	callstack 0
 29138                           
 29139 ;; *************** function _I2C1_Open *****************
 29140 ;; Defined at:
 29141 ;;		line 176 in file "mcc_generated_files/i2c1_master.c"
 29142 ;; Parameters:    Size  Location     Type
 29143 ;;  address         1    wreg     unsigned char 
 29144 ;; Auto vars:     Size  Location     Type
 29145 ;;  address         1   15[COMRAM] unsigned char 
 29146 ;;  returnValue     1   16[COMRAM] enum E355
 29147 ;; Return value:  Size  Location     Type
 29148 ;;                  1    wreg      enum E355
 29149 ;; Registers used:
 29150 ;;		wreg, status,2, status,0, cstack
 29151 ;; Tracked objects:
 29152 ;;		On entry : 0/1
 29153 ;;		On exit  : 33/2
 29154 ;;		Unchanged: 0/0
 29155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29156 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29157 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29159 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29160 ;;Total ram usage:        2 bytes
 29161 ;; Hardware stack levels used: 1
 29162 ;; Hardware stack levels required when called: 5
 29163 ;; This function calls:
 29164 ;;		_I2C1_MasterClearIrq
 29165 ;;		_I2C1_MasterOpen
 29166 ;; This function is called by:
 29167 ;;		_i2c_writeNBytes
 29168 ;;		_i2c_readDataBlock
 29169 ;;		_I2C1_Read1ByteRegister
 29170 ;; This function uses a non-reentrant model
 29171 ;;
 29172                           
 29173                           	psect	text131
 29174  0079C8                     __ptext131:
 29175                           	callstack 0
 29176  0079C8                     _I2C1_Open:
 29177                           	callstack 20
 29178                           
 29179                           ;incstack = 0
 29180                           ;I2C1_Open@address stored from wreg
 29181  0079C8  6E10               	movwf	I2C1_Open@address^0,c
 29182                           
 29183                           ;mcc_generated_files/i2c1_master.c: 176: i2c1_error_t I2C1_Open(i2c1_address_t address);
      +                          mcc_generated_files/i2c1_master.c: 177: {;mcc_generated_files/i2c1_master.c: 178:     i2
      +                          c1_error_t returnValue = I2C1_BUSY;
 29184  0079CA  0E01               	movlw	1
 29185  0079CC  6E11               	movwf	I2C1_Open@returnValue^0,c
 29186                           
 29187                           ;mcc_generated_files/i2c1_master.c: 180:     if(!I2C1_Status.inUse)
 29188  0079CE  0102               	movlb	2	; () banked
 29189  0079D0  B55F               	btfsc	(_I2C1_Status+35)& (0+255),2,b
 29190  0079D2  D03A               	goto	l19309
 29191                           
 29192                           ; BSR set to: 2
 29193                           ;mcc_generated_files/i2c1_master.c: 181:     {;mcc_generated_files/i2c1_master.c: 182:  
      +                                 I2C1_Status.address = address;
 29194  0079D4  C010  F258         	movff	I2C1_Open@address,_I2C1_Status+28
 29195                           
 29196                           ; BSR set to: 2
 29197                           ;mcc_generated_files/i2c1_master.c: 183:         I2C1_Status.busy = 0;
 29198  0079D8  935F               	bcf	(_I2C1_Status+35)& (0+255),1,b
 29199                           
 29200                           ; BSR set to: 2
 29201                           ;mcc_generated_files/i2c1_master.c: 184:         I2C1_Status.inUse = 1;
 29202  0079DA  855F               	bsf	(_I2C1_Status+35)& (0+255),2,b
 29203                           
 29204                           ; BSR set to: 2
 29205                           ;mcc_generated_files/i2c1_master.c: 185:         I2C1_Status.addressNackCheck = 0;
 29206  0079DC  915F               	bcf	(_I2C1_Status+35)& (0+255),0,b
 29207                           
 29208                           ; BSR set to: 2
 29209                           ;mcc_generated_files/i2c1_master.c: 186:         I2C1_Status.state = I2C1_RESET;
 29210  0079DE  0E0E               	movlw	14
 29211  0079E0  6F5D               	movwf	(_I2C1_Status+33)& (0+255),b
 29212                           
 29213                           ; BSR set to: 2
 29214                           ;mcc_generated_files/i2c1_master.c: 187:         I2C1_Status.time_out_value = 500;
 29215  0079E2  0E01               	movlw	1
 29216  0079E4  6F57               	movwf	(_I2C1_Status+27)& (0+255),b
 29217  0079E6  0EF4               	movlw	244
 29218  0079E8  6F56               	movwf	(_I2C1_Status+26)& (0+255),b
 29219                           
 29220                           ; BSR set to: 2
 29221                           ;mcc_generated_files/i2c1_master.c: 188:         I2C1_Status.bufferFree = 1;
 29222  0079EA  875F               	bsf	(_I2C1_Status+35)& (0+255),3,b
 29223                           
 29224                           ; BSR set to: 2
 29225                           ;mcc_generated_files/i2c1_master.c: 191:         I2C1_Status.callbackTable[I2C1_DATA_COM
      +                          PLETE]=I2C1_CallbackReturnStop;
 29226  0079EC  0EA8               	movlw	low _I2C1_CallbackReturnStop
 29227  0079EE  6F3C               	movwf	_I2C1_Status& (0+255),b
 29228  0079F0  0E92               	movlw	high _I2C1_CallbackReturnStop
 29229  0079F2  6F3D               	movwf	(_I2C1_Status+1)& (0+255),b
 29230                           
 29231                           ; BSR set to: 2
 29232                           ;mcc_generated_files/i2c1_master.c: 192:         I2C1_Status.callbackPayload[I2C1_DATA_C
      +                          OMPLETE] = ((void*)0);
 29233  0079F4  0E00               	movlw	0
 29234  0079F6  6F48               	movwf	(_I2C1_Status+12)& (0+255),b
 29235  0079F8  0E00               	movlw	0
 29236  0079FA  6F49               	movwf	(_I2C1_Status+13)& (0+255),b
 29237                           
 29238                           ; BSR set to: 2
 29239                           ;mcc_generated_files/i2c1_master.c: 193:         I2C1_Status.callbackTable[I2C1_WRITE_CO
      +                          LLISION]=I2C1_CallbackReturnStop;
 29240  0079FC  0EA8               	movlw	low _I2C1_CallbackReturnStop
 29241  0079FE  6F3E               	movwf	(_I2C1_Status+2)& (0+255),b
 29242  007A00  0E92               	movlw	high _I2C1_CallbackReturnStop
 29243  007A02  6F3F               	movwf	(_I2C1_Status+3)& (0+255),b
 29244                           
 29245                           ; BSR set to: 2
 29246                           ;mcc_generated_files/i2c1_master.c: 194:         I2C1_Status.callbackPayload[I2C1_WRITE_
      +                          COLLISION] = ((void*)0);
 29247  007A04  0E00               	movlw	0
 29248  007A06  6F4A               	movwf	(_I2C1_Status+14)& (0+255),b
 29249  007A08  0E00               	movlw	0
 29250  007A0A  6F4B               	movwf	(_I2C1_Status+15)& (0+255),b
 29251                           
 29252                           ; BSR set to: 2
 29253                           ;mcc_generated_files/i2c1_master.c: 195:         I2C1_Status.callbackTable[I2C1_ADDR_NAC
      +                          K]=I2C1_CallbackReturnStop;
 29254  007A0C  0EA8               	movlw	low _I2C1_CallbackReturnStop
 29255  007A0E  6F40               	movwf	(_I2C1_Status+4)& (0+255),b
 29256  007A10  0E92               	movlw	high _I2C1_CallbackReturnStop
 29257  007A12  6F41               	movwf	(_I2C1_Status+5)& (0+255),b
 29258                           
 29259                           ; BSR set to: 2
 29260                           ;mcc_generated_files/i2c1_master.c: 196:         I2C1_Status.callbackPayload[I2C1_ADDR_N
      +                          ACK] = ((void*)0);
 29261  007A14  0E00               	movlw	0
 29262  007A16  6F4C               	movwf	(_I2C1_Status+16)& (0+255),b
 29263  007A18  0E00               	movlw	0
 29264  007A1A  6F4D               	movwf	(_I2C1_Status+17)& (0+255),b
 29265                           
 29266                           ; BSR set to: 2
 29267                           ;mcc_generated_files/i2c1_master.c: 197:         I2C1_Status.callbackTable[I2C1_DATA_NAC
      +                          K]=I2C1_CallbackReturnStop;
 29268  007A1C  0EA8               	movlw	low _I2C1_CallbackReturnStop
 29269  007A1E  6F42               	movwf	(_I2C1_Status+6)& (0+255),b
 29270  007A20  0E92               	movlw	high _I2C1_CallbackReturnStop
 29271  007A22  6F43               	movwf	(_I2C1_Status+7)& (0+255),b
 29272                           
 29273                           ; BSR set to: 2
 29274                           ;mcc_generated_files/i2c1_master.c: 198:         I2C1_Status.callbackPayload[I2C1_DATA_N
      +                          ACK] = ((void*)0);
 29275  007A24  0E00               	movlw	0
 29276  007A26  6F4E               	movwf	(_I2C1_Status+18)& (0+255),b
 29277  007A28  0E00               	movlw	0
 29278  007A2A  6F4F               	movwf	(_I2C1_Status+19)& (0+255),b
 29279                           
 29280                           ; BSR set to: 2
 29281                           ;mcc_generated_files/i2c1_master.c: 199:         I2C1_Status.callbackTable[I2C1_TIMEOUT]
      +                          =I2C1_CallbackReturnReset;
 29282  007A2C  0EA4               	movlw	low _I2C1_CallbackReturnReset
 29283  007A2E  6F44               	movwf	(_I2C1_Status+8)& (0+255),b
 29284  007A30  0E92               	movlw	high _I2C1_CallbackReturnReset
 29285  007A32  6F45               	movwf	(_I2C1_Status+9)& (0+255),b
 29286                           
 29287                           ; BSR set to: 2
 29288                           ;mcc_generated_files/i2c1_master.c: 200:         I2C1_Status.callbackPayload[I2C1_TIMEOU
      +                          T] = ((void*)0);
 29289  007A34  0E00               	movlw	0
 29290  007A36  6F50               	movwf	(_I2C1_Status+20)& (0+255),b
 29291  007A38  0E00               	movlw	0
 29292  007A3A  6F51               	movwf	(_I2C1_Status+21)& (0+255),b
 29293                           
 29294                           ; BSR set to: 2
 29295                           ;mcc_generated_files/i2c1_master.c: 202:         I2C1_MasterClearIrq();
 29296  007A3C  EC3E  F049         	call	_I2C1_MasterClearIrq	;wreg free
 29297                           
 29298                           ; BSR set to: 14
 29299                           ;mcc_generated_files/i2c1_master.c: 203:         I2C1_MasterOpen();
 29300  007A40  EC45  F048         	call	_I2C1_MasterOpen	;wreg free
 29301                           
 29302                           ; BSR set to: 14
 29303                           ;mcc_generated_files/i2c1_master.c: 204:         returnValue = I2C1_NOERR;
 29304  007A44  0E00               	movlw	0
 29305  007A46  6E11               	movwf	I2C1_Open@returnValue^0,c
 29306  007A48                     l19309:
 29307                           
 29308                           ;mcc_generated_files/i2c1_master.c: 206:     return returnValue;
 29309  007A48  5011               	movf	I2C1_Open@returnValue^0,w,c
 29310  007A4A  0012               	return		;funcret
 29311  007A4C                     __end_of_I2C1_Open:
 29312                           	callstack 0
 29313                           
 29314 ;; *************** function _I2C1_MasterOpen *****************
 29315 ;; Defined at:
 29316 ;;		line 543 in file "mcc_generated_files/i2c1_master.c"
 29317 ;; Parameters:    Size  Location     Type
 29318 ;;		None
 29319 ;; Auto vars:     Size  Location     Type
 29320 ;;		None
 29321 ;; Return value:  Size  Location     Type
 29322 ;;                  1    wreg      _Bool 
 29323 ;; Registers used:
 29324 ;;		wreg, status,2
 29325 ;; Tracked objects:
 29326 ;;		On entry : 3F/E
 29327 ;;		On exit  : 3F/E
 29328 ;;		Unchanged: 3F/0
 29329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29333 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29334 ;;Total ram usage:        0 bytes
 29335 ;; Hardware stack levels used: 1
 29336 ;; Hardware stack levels required when called: 4
 29337 ;; This function calls:
 29338 ;;		Nothing
 29339 ;; This function is called by:
 29340 ;;		_I2C1_Open
 29341 ;; This function uses a non-reentrant model
 29342 ;;
 29343                           
 29344                           	psect	text132
 29345  00908A                     __ptext132:
 29346                           	callstack 0
 29347  00908A                     _I2C1_MasterOpen:
 29348                           	callstack 20
 29349                           
 29350                           ; BSR set to: 14
 29351                           ;mcc_generated_files/i2c1_master.c: 545:     if(!SSP1CON1bits.SSPEN)
 29352                           
 29353                           ;incstack = 0
 29354  00908A  BA96               	btfsc	150,5,c	;volatile
 29355  00908C  0012               	return	
 29356                           
 29357                           ; BSR set to: 14
 29358                           ;mcc_generated_files/i2c1_master.c: 546:     {;mcc_generated_files/i2c1_master.c: 547:  
      +                                 SSP1STAT = 0x80;
 29359  00908E  0E80               	movlw	128
 29360  009090  6E95               	movwf	149,c	;volatile
 29361                           
 29362                           ;mcc_generated_files/i2c1_master.c: 548:         SSP1CON1 = 0x08;
 29363  009092  0E08               	movlw	8
 29364  009094  6E96               	movwf	150,c	;volatile
 29365                           
 29366                           ;mcc_generated_files/i2c1_master.c: 549:         SSP1CON2 = 0x00;
 29367  009096  0E00               	movlw	0
 29368  009098  6E97               	movwf	151,c	;volatile
 29369                           
 29370                           ;mcc_generated_files/i2c1_master.c: 550:         SSP1ADD = 0x9F;
 29371  00909A  0E9F               	movlw	159
 29372  00909C  6E93               	movwf	147,c	;volatile
 29373                           
 29374                           ; BSR set to: 14
 29375                           ;mcc_generated_files/i2c1_master.c: 551:         SSP1CON1bits.SSPEN = 1;
 29376  00909E  8A96               	bsf	150,5,c	;volatile
 29377                           
 29378                           ; BSR set to: 14
 29379  0090A0  0012               	return		;funcret
 29380  0090A2                     __end_of_I2C1_MasterOpen:
 29381                           	callstack 0
 29382                           
 29383 ;; *************** function _I2C1_MasterWrite *****************
 29384 ;; Defined at:
 29385 ;;		line 251 in file "mcc_generated_files/i2c1_master.c"
 29386 ;; Parameters:    Size  Location     Type
 29387 ;;		None
 29388 ;; Auto vars:     Size  Location     Type
 29389 ;;		None
 29390 ;; Return value:  Size  Location     Type
 29391 ;;                  1    wreg      enum E355
 29392 ;; Registers used:
 29393 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29394 ;; Tracked objects:
 29395 ;;		On entry : 0/2
 29396 ;;		On exit  : 3F/2
 29397 ;;		Unchanged: 0/0
 29398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29402 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29403 ;;Total ram usage:        0 bytes
 29404 ;; Hardware stack levels used: 1
 29405 ;; Hardware stack levels required when called: 11
 29406 ;; This function calls:
 29407 ;;		_I2C1_MasterOperation
 29408 ;; This function is called by:
 29409 ;;		_i2c_writeNBytes
 29410 ;;		_i2c_readDataBlock
 29411 ;;		_I2C1_Read1ByteRegister
 29412 ;; This function uses a non-reentrant model
 29413 ;;
 29414                           
 29415                           	psect	text133
 29416  00920E                     __ptext133:
 29417                           	callstack 0
 29418  00920E                     _I2C1_MasterWrite:
 29419                           	callstack 14
 29420                           
 29421                           ;mcc_generated_files/i2c1_master.c: 253:     return I2C1_MasterOperation(0);;	Return val
      +                          ue of _I2C1_MasterWrite is never used
 29422                           
 29423                           ; BSR set to: 14
 29424                           ;incstack = 0
 29425  00920E  0E00               	movlw	0
 29426  009210  ECE3  F045         	call	_I2C1_MasterOperation
 29427                           
 29428                           ; BSR set to: 2
 29429  009214  0012               	return		;funcret
 29430  009216                     __end_of_I2C1_MasterWrite:
 29431                           	callstack 0
 29432                           
 29433 ;; *************** function _I2C1_MasterOperation *****************
 29434 ;; Defined at:
 29435 ;;		line 224 in file "mcc_generated_files/i2c1_master.c"
 29436 ;; Parameters:    Size  Location     Type
 29437 ;;  read            1    wreg     _Bool 
 29438 ;; Auto vars:     Size  Location     Type
 29439 ;;  read            1   31[COMRAM] _Bool 
 29440 ;;  returnValue     1   32[COMRAM] enum E355
 29441 ;; Return value:  Size  Location     Type
 29442 ;;                  1    wreg      enum E355
 29443 ;; Registers used:
 29444 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29445 ;; Tracked objects:
 29446 ;;		On entry : 0/2
 29447 ;;		On exit  : 3F/2
 29448 ;;		Unchanged: 0/0
 29449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29451 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29453 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29454 ;;Total ram usage:        2 bytes
 29455 ;; Hardware stack levels used: 1
 29456 ;; Hardware stack levels required when called: 10
 29457 ;; This function calls:
 29458 ;;		_I2C1_MasterStart
 29459 ;;		_I2C1_Poller
 29460 ;; This function is called by:
 29461 ;;		_I2C1_MasterWrite
 29462 ;; This function uses a non-reentrant model
 29463 ;;
 29464                           
 29465                           	psect	text134
 29466  008BC6                     __ptext134:
 29467                           	callstack 0
 29468  008BC6                     _I2C1_MasterOperation:
 29469                           	callstack 14
 29470                           
 29471                           ; BSR set to: 2
 29472                           ;incstack = 0
 29473                           ;I2C1_MasterOperation@read stored from wreg
 29474  008BC6  6E20               	movwf	I2C1_MasterOperation@read^0,c
 29475                           
 29476                           ;mcc_generated_files/i2c1_master.c: 224: i2c1_error_t I2C1_MasterOperation(_Bool read);m
      +                          cc_generated_files/i2c1_master.c: 225: {;mcc_generated_files/i2c1_master.c: 226:     i2c
      +                          1_error_t returnValue = I2C1_BUSY;
 29477  008BC8  0E01               	movlw	1
 29478  008BCA  6E21               	movwf	I2C1_MasterOperation@returnValue^0,c
 29479                           
 29480                           ;mcc_generated_files/i2c1_master.c: 227:     if(!I2C1_Status.busy)
 29481  008BCC  0102               	movlb	2	; () banked
 29482  008BCE  B35F               	btfsc	(_I2C1_Status+35)& (0+255),1,b
 29483  008BD0  D00E               	goto	l19261
 29484                           
 29485                           ; BSR set to: 2
 29486                           ;mcc_generated_files/i2c1_master.c: 228:     {;mcc_generated_files/i2c1_master.c: 229:  
      +                                 I2C1_Status.busy = 1;
 29487  008BD2  835F               	bsf	(_I2C1_Status+35)& (0+255),1,b
 29488                           
 29489                           ; BSR set to: 2
 29490                           ;mcc_generated_files/i2c1_master.c: 230:         returnValue = I2C1_NOERR;
 29491  008BD4  0E00               	movlw	0
 29492  008BD6  6E21               	movwf	I2C1_MasterOperation@returnValue^0,c
 29493                           
 29494                           ; BSR set to: 2
 29495                           ;mcc_generated_files/i2c1_master.c: 232:         if(read)
 29496  008BD8  5020               	movf	I2C1_MasterOperation@read^0,w,c
 29497  008BDA  B4D8               	btfsc	status,2,c
 29498  008BDC  D002               	goto	l19255
 29499                           
 29500                           ; BSR set to: 2
 29501                           ;mcc_generated_files/i2c1_master.c: 233:         {;mcc_generated_files/i2c1_master.c: 23
      +                          4:             I2C1_Status.state = I2C1_SEND_ADR_READ;
 29502  008BDE  0E01               	movlw	1
 29503  008BE0  D001               	goto	L111
 29504  008BE2                     l19255:
 29505                           
 29506                           ; BSR set to: 2
 29507                           ;mcc_generated_files/i2c1_master.c: 237:         {;mcc_generated_files/i2c1_master.c: 23
      +                          8:             I2C1_Status.state = I2C1_SEND_ADR_WRITE;
 29508  008BE2  0E02               	movlw	2
 29509  008BE4                     L111:
 29510  008BE4  6F5D               	movwf	(_I2C1_Status+33)& (0+255),b
 29511                           
 29512                           ; BSR set to: 2
 29513                           ;mcc_generated_files/i2c1_master.c: 240:         I2C1_MasterStart();
 29514  008BE6  EC5A  F049         	call	_I2C1_MasterStart	;wreg free
 29515                           
 29516                           ; BSR set to: 2
 29517                           ;mcc_generated_files/i2c1_master.c: 241:         I2C1_Poller();
 29518  008BEA  ECA2  F048         	call	_I2C1_Poller	;wreg free
 29519  008BEE                     l19261:
 29520                           
 29521                           ; BSR set to: 2
 29522                           ;mcc_generated_files/i2c1_master.c: 243:     return returnValue;
 29523  008BEE  5021               	movf	I2C1_MasterOperation@returnValue^0,w,c
 29524                           
 29525                           ; BSR set to: 2
 29526  008BF0  0012               	return		;funcret
 29527  008BF2                     __end_of_I2C1_MasterOperation:
 29528                           	callstack 0
 29529                           
 29530 ;; *************** function _I2C1_Poller *****************
 29531 ;; Defined at:
 29532 ;;		line 312 in file "mcc_generated_files/i2c1_master.c"
 29533 ;; Parameters:    Size  Location     Type
 29534 ;;		None
 29535 ;; Auto vars:     Size  Location     Type
 29536 ;;		None
 29537 ;; Return value:  Size  Location     Type
 29538 ;;                  1    wreg      void 
 29539 ;; Registers used:
 29540 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29541 ;; Tracked objects:
 29542 ;;		On entry : 3F/2
 29543 ;;		On exit  : 3F/2
 29544 ;;		Unchanged: 0/0
 29545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29549 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29550 ;;Total ram usage:        0 bytes
 29551 ;; Hardware stack levels used: 1
 29552 ;; Hardware stack levels required when called: 9
 29553 ;; This function calls:
 29554 ;;		_I2C1_MasterFsm
 29555 ;;		_I2C1_MasterWaitForEvent
 29556 ;; This function is called by:
 29557 ;;		_I2C1_MasterOperation
 29558 ;; This function uses a non-reentrant model
 29559 ;;
 29560                           
 29561                           	psect	text135
 29562  009144                     __ptext135:
 29563                           	callstack 0
 29564  009144                     _I2C1_Poller:
 29565                           	callstack 14
 29566                           
 29567                           ; BSR set to: 2
 29568                           ;mcc_generated_files/i2c1_master.c: 314:     while(I2C1_Status.busy)
 29569                           
 29570                           ; BSR set to: 2
 29571                           ;incstack = 0
 29572  009144  D004               	goto	l19229
 29573  009146                     l19225:
 29574                           
 29575                           ; BSR set to: 2
 29576                           ;mcc_generated_files/i2c1_master.c: 315:     {;mcc_generated_files/i2c1_master.c: 316:  
      +                                 I2C1_MasterWaitForEvent();
 29577  009146  EC0B  F049         	call	_I2C1_MasterWaitForEvent	;wreg free
 29578                           
 29579                           ; BSR set to: 14
 29580                           ;mcc_generated_files/i2c1_master.c: 317:     I2C1_MasterFsm();
 29581  00914A  EC8D  F042         	call	_I2C1_MasterFsm	;wreg free
 29582  00914E                     l19229:
 29583                           
 29584                           ; BSR set to: 2
 29585                           ;mcc_generated_files/i2c1_master.c: 314:     while(I2C1_Status.busy)
 29586  00914E  A35F               	btfss	(_I2C1_Status+35)& (0+255),1,b
 29587  009150  0012               	return	
 29588  009152  D7F9               	goto	l19225
 29589  009154                     __end_of_I2C1_Poller:
 29590                           	callstack 0
 29591                           
 29592 ;; *************** function _I2C1_MasterWaitForEvent *****************
 29593 ;; Defined at:
 29594 ;;		line 650 in file "mcc_generated_files/i2c1_master.c"
 29595 ;; Parameters:    Size  Location     Type
 29596 ;;		None
 29597 ;; Auto vars:     Size  Location     Type
 29598 ;;		None
 29599 ;; Return value:  Size  Location     Type
 29600 ;;                  1    wreg      void 
 29601 ;; Registers used:
 29602 ;;		None
 29603 ;; Tracked objects:
 29604 ;;		On entry : 3F/2
 29605 ;;		On exit  : 3F/E
 29606 ;;		Unchanged: 0/0
 29607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29611 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29612 ;;Total ram usage:        0 bytes
 29613 ;; Hardware stack levels used: 1
 29614 ;; Hardware stack levels required when called: 4
 29615 ;; This function calls:
 29616 ;;		Nothing
 29617 ;; This function is called by:
 29618 ;;		_I2C1_Poller
 29619 ;; This function uses a non-reentrant model
 29620 ;;
 29621                           
 29622                           	psect	text136
 29623  009216                     __ptext136:
 29624                           	callstack 0
 29625  009216                     _I2C1_MasterWaitForEvent:
 29626                           	callstack 18
 29627                           
 29628                           ; BSR set to: 2
 29629                           ;mcc_generated_files/i2c1_master.c: 653:     {;mcc_generated_files/i2c1_master.c: 654:  
      +                                 if(PIR3bits.SSP1IF)
 29630                           
 29631                           ; BSR set to: 2
 29632                           ;incstack = 0
 29633                           ;mcc_generated_files/i2c1_master.c: 652:     while(1)
 29634  009216  010E               	movlb	14	; () banked
 29635  009218  B1CD               	btfsc	205,0,b	;volatile
 29636  00921A  0012               	return	
 29637  00921C  D7FC               	goto	__ptext136
 29638  00921E                     __end_of_I2C1_MasterWaitForEvent:
 29639                           	callstack 0
 29640                           
 29641 ;; *************** function _I2C1_MasterFsm *****************
 29642 ;; Defined at:
 29643 ;;		line 321 in file "mcc_generated_files/i2c1_master.c"
 29644 ;; Parameters:    Size  Location     Type
 29645 ;;		None
 29646 ;; Auto vars:     Size  Location     Type
 29647 ;;		None
 29648 ;; Return value:  Size  Location     Type
 29649 ;;                  1    wreg      void 
 29650 ;; Registers used:
 29651 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29652 ;; Tracked objects:
 29653 ;;		On entry : 3F/E
 29654 ;;		On exit  : 3F/2
 29655 ;;		Unchanged: 0/0
 29656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29659 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29660 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29661 ;;Total ram usage:        3 bytes
 29662 ;; Hardware stack levels used: 1
 29663 ;; Hardware stack levels required when called: 8
 29664 ;; This function calls:
 29665 ;;		_I2C1_DO_ADDRESS_NACK
 29666 ;;		_I2C1_DO_IDLE
 29667 ;;		_I2C1_DO_RCEN
 29668 ;;		_I2C1_DO_RESET
 29669 ;;		_I2C1_DO_RX
 29670 ;;		_I2C1_DO_RX_ACK
 29671 ;;		_I2C1_DO_RX_NACK_RESTART
 29672 ;;		_I2C1_DO_RX_NACK_STOP
 29673 ;;		_I2C1_DO_SEND_ADR_READ
 29674 ;;		_I2C1_DO_SEND_ADR_WRITE
 29675 ;;		_I2C1_DO_SEND_RESTART
 29676 ;;		_I2C1_DO_SEND_RESTART_READ
 29677 ;;		_I2C1_DO_SEND_RESTART_WRITE
 29678 ;;		_I2C1_DO_SEND_STOP
 29679 ;;		_I2C1_DO_TX
 29680 ;;		_I2C1_DO_TX_EMPTY
 29681 ;;		_I2C1_MasterClearIrq
 29682 ;;		_I2C1_MasterIsNack
 29683 ;; This function is called by:
 29684 ;;		_I2C1_Poller
 29685 ;; This function uses a non-reentrant model
 29686 ;;
 29687                           
 29688                           	psect	text137
 29689  00851A                     __ptext137:
 29690                           	callstack 0
 29691  00851A                     _I2C1_MasterFsm:
 29692                           	callstack 14
 29693                           
 29694                           ; BSR set to: 14
 29695                           ;mcc_generated_files/i2c1_master.c: 323:     I2C1_MasterClearIrq();
 29696                           
 29697                           ; BSR set to: 14
 29698                           ;incstack = 0
 29699  00851A  EC3E  F049         	call	_I2C1_MasterClearIrq	;wreg free
 29700                           
 29701                           ; BSR set to: 14
 29702                           ;mcc_generated_files/i2c1_master.c: 325:     if(I2C1_Status.addressNackCheck && I2C1_Mas
      +                          terIsNack())
 29703  00851E  0102               	movlb	2	; () banked
 29704  008520  A15F               	btfss	(_I2C1_Status+35)& (0+255),0,b
 29705  008522  D007               	goto	l19219
 29706                           
 29707                           ; BSR set to: 2
 29708  008524  ECBF  F048         	call	_I2C1_MasterIsNack	;wreg free
 29709  008528  0900               	iorlw	0
 29710  00852A  B4D8               	btfsc	status,2,c
 29711  00852C  D002               	goto	l19219
 29712                           
 29713                           ; BSR set to: 2
 29714                           ;mcc_generated_files/i2c1_master.c: 326:     {;mcc_generated_files/i2c1_master.c: 327:  
      +                                 I2C1_Status.state = I2C1_ADDRESS_NACK;
 29715  00852E  0E0F               	movlw	15
 29716  008530  6F5D               	movwf	(_I2C1_Status+33)& (0+255),b
 29717  008532                     l19219:
 29718                           
 29719                           ; BSR set to: 2
 29720                           ;mcc_generated_files/i2c1_master.c: 329:     I2C1_Status.state = i2c1_fsmStateTable[I2C1
      +                          _Status.state]();
 29721  008532  515D               	movf	(_I2C1_Status+33)& (0+255),w,b
 29722  008534  0D02               	mullw	2
 29723  008536  50F3               	movf	243,w,c
 29724  008538  0F01               	addlw	low _i2c1_fsmStateTable
 29725  00853A  6E1D               	movwf	??_I2C1_MasterFsm^0,c
 29726  00853C  C01D  FFF6         	movff	??_I2C1_MasterFsm,tblptrl
 29727  008540                     	if	1	;There is more than 1 active tblptr byte
 29728  008540  0E0F               	movlw	high __smallconst
 29729  008542  6EF7               	movwf	tblptrh,c
 29730  008544                     	endif
 29731  008544                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 29732  008544  6AF8               	clrf	tblptru,c
 29733  008546                     	endif
 29734  008546                     	if	0	;tblptru may be non-zero
 29735  008546                     	endif
 29736  008546  0009               	tblrd		*+
 29737  008548  CFF5 F01E          	movff	tablat,??_I2C1_MasterFsm+1
 29738  00854C  0009               	tblrd		*+
 29739  00854E  CFF5 F01F          	movff	tablat,??_I2C1_MasterFsm+2
 29740  008552  D801               	call	u22008
 29741  008554  D009               	goto	u22009
 29742  008556                     u22008:
 29743  008556  0005               	push	
 29744  008558  6EFA               	movwf	pclath,c
 29745  00855A  501E               	movf	(??_I2C1_MasterFsm+1)^0,w,c
 29746  00855C  6EFD               	movwf	tosl,c
 29747  00855E  501F               	movf	(??_I2C1_MasterFsm+2)^0,w,c
 29748  008560  6EFE               	movwf	tosh,c
 29749  008562  6AFF               	clrf	tosu,c
 29750  008564  50FA               	movf	pclath,w,c
 29751  008566  0012               	return		;indir
 29752  008568                     u22009:
 29753  008568  0102               	movlb	2	; () banked
 29754  00856A  6F5D               	movwf	(_I2C1_Status+33)& (0+255),b
 29755                           
 29756                           ; BSR set to: 2
 29757  00856C  0012               	return		;funcret
 29758  00856E                     __end_of_I2C1_MasterFsm:
 29759                           	callstack 0
 29760                           
 29761 ;; *************** function _I2C1_DO_ADDRESS_NACK *****************
 29762 ;; Defined at:
 29763 ;;		line 500 in file "mcc_generated_files/i2c1_master.c"
 29764 ;; Parameters:    Size  Location     Type
 29765 ;;		None
 29766 ;; Auto vars:     Size  Location     Type
 29767 ;;		None
 29768 ;; Return value:  Size  Location     Type
 29769 ;;                  1    wreg      enum E10442
 29770 ;; Registers used:
 29771 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 29772 ;; Tracked objects:
 29773 ;;		On entry : 3F/2
 29774 ;;		On exit  : 0/0
 29775 ;;		Unchanged: 0/0
 29776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29779 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29780 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29781 ;;Total ram usage:        2 bytes
 29782 ;; Hardware stack levels used: 1
 29783 ;; Hardware stack levels required when called: 7
 29784 ;; This function calls:
 29785 ;;		Absolute function
 29786 ;;		_I2C1_CallbackReturnReset
 29787 ;;		_I2C1_CallbackReturnStop
 29788 ;;		_I2C1_DO_SEND_RESTART
 29789 ;;		_I2C1_DO_SEND_STOP
 29790 ;;		_rd1RegCompleteHandler
 29791 ;;		_rd1RegCompleteHandler@i2c1_master_example$F500
 29792 ;;		_rd2RegCompleteHandler
 29793 ;;		_rd2RegCompleteHandler@i2c1_master_example$F511
 29794 ;;		_rdBlkRegCompleteHandler
 29795 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F535
 29796 ;;		_wr1RegCompleteHandler
 29797 ;;		_wr1RegCompleteHandler@i2c1_master_example$F517
 29798 ;;		_wr2RegCompleteHandler
 29799 ;;		_wr2RegCompleteHandler@i2c1_master_example$F523
 29800 ;; This function is called by:
 29801 ;;		_I2C1_MasterFsm
 29802 ;; This function uses a non-reentrant model
 29803 ;;
 29804                           
 29805                           	psect	text138
 29806  0086AE                     __ptext138:
 29807                           	callstack 0
 29808  0086AE                     _I2C1_DO_ADDRESS_NACK:
 29809                           	callstack 14
 29810                           
 29811                           ; BSR set to: 2
 29812                           ;mcc_generated_files/i2c1_master.c: 502:     I2C1_Status.addressNackCheck = 0;
 29813                           
 29814                           ; BSR set to: 2
 29815                           ;incstack = 0
 29816  0086AE  915F               	bcf	(_I2C1_Status+35)& (0+255),0,b
 29817                           
 29818                           ; BSR set to: 2
 29819                           ;mcc_generated_files/i2c1_master.c: 503:     I2C1_Status.error = I2C1_FAIL;
 29820  0086B0  0E02               	movlw	2
 29821  0086B2  6F5E               	movwf	(_I2C1_Status+34)& (0+255),b
 29822                           
 29823                           ;mcc_generated_files/i2c1_master.c: 504:     switch(I2C1_Status.callbackTable[I2C1_ADDR_
      +                          NACK](I2C1_Status.callbackPayload[I2C1_ADDR_NACK]))
 29824  0086B4  D006               	goto	l19203
 29825  0086B6                     l19193:
 29826                           
 29827                           ;mcc_generated_files/i2c1_master.c: 508:             return I2C1_DO_SEND_RESTART();
 29828  0086B6  EC1F  F049         	call	_I2C1_DO_SEND_RESTART	;wreg free
 29829  0086BA  0012               	return	
 29830  0086BC                     l19197:
 29831                           
 29832                           ;mcc_generated_files/i2c1_master.c: 510:             return I2C1_DO_SEND_STOP();
 29833  0086BC  EC1B  F049         	call	_I2C1_DO_SEND_STOP	;wreg free
 29834  0086C0  0012               	return	
 29835  0086C2                     l19203:
 29836                           
 29837                           ; BSR set to: 2
 29838  0086C2  C24C  F019         	movff	_I2C1_Status+16,I2C1_CallbackReturnReset@funPtr
 29839  0086C6  C24D  F01A         	movff	_I2C1_Status+17,I2C1_CallbackReturnReset@funPtr+1
 29840  0086CA  D801               	call	u21968
 29841  0086CC  D009               	goto	u21969
 29842  0086CE                     u21968:
 29843  0086CE  0005               	push	
 29844  0086D0  6EFA               	movwf	pclath,c
 29845  0086D2  5140               	movf	(_I2C1_Status+4)& (0+255),w,b
 29846  0086D4  6EFD               	movwf	tosl,c
 29847  0086D6  5141               	movf	(_I2C1_Status+5)& (0+255),w,b
 29848  0086D8  6EFE               	movwf	tosh,c
 29849  0086DA  6AFF               	clrf	tosu,c
 29850  0086DC  50FA               	movf	pclath,w,c
 29851  0086DE  0012               	return		;indir
 29852  0086E0                     u21969:
 29853  0086E0  6E1B               	movwf	??_I2C1_DO_ADDRESS_NACK^0,c
 29854  0086E2  6A1C               	clrf	(??_I2C1_DO_ADDRESS_NACK+1)^0,c
 29855                           
 29856                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 29857                           ; Switch size 1, requested type "simple"
 29858                           ; Number of cases is 1, Range of values is 0 to 0
 29859                           ; switch strategies available:
 29860                           ; Name         Instructions Cycles
 29861                           ; simple_byte            4     3 (average)
 29862                           ;	Chosen strategy is simple_byte
 29863  0086E4  501C               	movf	(??_I2C1_DO_ADDRESS_NACK+1)^0,w,c
 29864  0086E6  0A00               	xorlw	0	; case 0
 29865  0086E8  A4D8               	btfss	status,2,c
 29866  0086EA  D7E8               	goto	l19197
 29867                           
 29868                           ; Switch size 1, requested type "simple"
 29869                           ; Number of cases is 2, Range of values is 2 to 3
 29870                           ; switch strategies available:
 29871                           ; Name         Instructions Cycles
 29872                           ; simple_byte            7     4 (average)
 29873                           ;	Chosen strategy is simple_byte
 29874  0086EC  501B               	movf	??_I2C1_DO_ADDRESS_NACK^0,w,c
 29875  0086EE  0A02               	xorlw	2	; case 2
 29876  0086F0  B4D8               	btfsc	status,2,c
 29877  0086F2  D7E1               	goto	l19193
 29878  0086F4  0A01               	xorlw	1	; case 3
 29879  0086F6  B4D8               	btfsc	status,2,c
 29880  0086F8  D7DE               	goto	l19193
 29881  0086FA  D7E0               	goto	l19197
 29882  0086FC                     __end_of_I2C1_DO_ADDRESS_NACK:
 29883                           	callstack 0
 29884                           
 29885 ;; *************** function _I2C1_DO_RESET *****************
 29886 ;; Defined at:
 29887 ;;		line 494 in file "mcc_generated_files/i2c1_master.c"
 29888 ;; Parameters:    Size  Location     Type
 29889 ;;		None
 29890 ;; Auto vars:     Size  Location     Type
 29891 ;;		None
 29892 ;; Return value:  Size  Location     Type
 29893 ;;                  1    wreg      enum E10442
 29894 ;; Registers used:
 29895 ;;		wreg, status,2
 29896 ;; Tracked objects:
 29897 ;;		On entry : 3F/2
 29898 ;;		On exit  : 3F/2
 29899 ;;		Unchanged: 0/0
 29900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29904 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29905 ;;Total ram usage:        0 bytes
 29906 ;; Hardware stack levels used: 1
 29907 ;; Hardware stack levels required when called: 4
 29908 ;; This function calls:
 29909 ;;		Nothing
 29910 ;; This function is called by:
 29911 ;;		_I2C1_MasterFsm
 29912 ;; This function uses a non-reentrant model
 29913 ;;
 29914                           
 29915                           	psect	text139
 29916  0091F0                     __ptext139:
 29917                           	callstack 0
 29918  0091F0                     _I2C1_DO_RESET:
 29919                           	callstack 17
 29920                           
 29921                           ; BSR set to: 2
 29922                           ;mcc_generated_files/i2c1_master.c: 496:     I2C1_Status.busy = 0;
 29923                           
 29924                           ;incstack = 0
 29925  0091F0  935F               	bcf	(_I2C1_Status+35)& (0+255),1,b
 29926                           
 29927                           ; BSR set to: 2
 29928                           ;mcc_generated_files/i2c1_master.c: 497:     I2C1_Status.error = I2C1_NOERR;
 29929  0091F2  0E00               	movlw	0
 29930  0091F4  6F5E               	movwf	(_I2C1_Status+34)& (0+255),b
 29931                           
 29932                           ; BSR set to: 2
 29933                           ;mcc_generated_files/i2c1_master.c: 498:     return I2C1_RESET;
 29934  0091F6  0E0E               	movlw	14
 29935                           
 29936                           ; BSR set to: 2
 29937  0091F8  0012               	return		;funcret
 29938  0091FA                     __end_of_I2C1_DO_RESET:
 29939                           	callstack 0
 29940                           
 29941 ;; *************** function _I2C1_DO_RX_NACK_RESTART *****************
 29942 ;; Defined at:
 29943 ;;		line 488 in file "mcc_generated_files/i2c1_master.c"
 29944 ;; Parameters:    Size  Location     Type
 29945 ;;		None
 29946 ;; Auto vars:     Size  Location     Type
 29947 ;;		None
 29948 ;; Return value:  Size  Location     Type
 29949 ;;                  1    wreg      enum E10442
 29950 ;; Registers used:
 29951 ;;		wreg, cstack
 29952 ;; Tracked objects:
 29953 ;;		On entry : 0/2
 29954 ;;		On exit  : 0/0
 29955 ;;		Unchanged: 0/0
 29956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29960 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29961 ;;Total ram usage:        0 bytes
 29962 ;; Hardware stack levels used: 1
 29963 ;; Hardware stack levels required when called: 5
 29964 ;; This function calls:
 29965 ;;		_I2C1_MasterSendNack
 29966 ;; This function is called by:
 29967 ;;		_I2C1_DO_RX
 29968 ;;		_I2C1_MasterFsm
 29969 ;; This function uses a non-reentrant model
 29970 ;;
 29971                           
 29972                           	psect	text140
 29973  00921E                     __ptext140:
 29974                           	callstack 0
 29975  00921E                     _I2C1_DO_RX_NACK_RESTART:
 29976                           	callstack 16
 29977                           
 29978                           ;mcc_generated_files/i2c1_master.c: 490:     I2C1_MasterSendNack();
 29979                           
 29980                           ; BSR set to: 2
 29981                           ;incstack = 0
 29982  00921E  EC3B  F049         	call	_I2C1_MasterSendNack	;wreg free
 29983                           
 29984                           ;mcc_generated_files/i2c1_master.c: 491:     return I2C1_SEND_RESTART;
 29985  009222  0E09               	movlw	9
 29986  009224  0012               	return		;funcret
 29987  009226                     __end_of_I2C1_DO_RX_NACK_RESTART:
 29988                           	callstack 0
 29989                           
 29990 ;; *************** function _I2C1_DO_RX_NACK_STOP *****************
 29991 ;; Defined at:
 29992 ;;		line 482 in file "mcc_generated_files/i2c1_master.c"
 29993 ;; Parameters:    Size  Location     Type
 29994 ;;		None
 29995 ;; Auto vars:     Size  Location     Type
 29996 ;;		None
 29997 ;; Return value:  Size  Location     Type
 29998 ;;                  1    wreg      enum E10442
 29999 ;; Registers used:
 30000 ;;		wreg, cstack
 30001 ;; Tracked objects:
 30002 ;;		On entry : 0/2
 30003 ;;		On exit  : 0/0
 30004 ;;		Unchanged: 0/0
 30005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30007 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30009 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30010 ;;Total ram usage:        0 bytes
 30011 ;; Hardware stack levels used: 1
 30012 ;; Hardware stack levels required when called: 5
 30013 ;; This function calls:
 30014 ;;		_I2C1_MasterSendNack
 30015 ;; This function is called by:
 30016 ;;		_I2C1_DO_RX
 30017 ;;		_I2C1_MasterFsm
 30018 ;; This function uses a non-reentrant model
 30019 ;;
 30020                           
 30021                           	psect	text141
 30022  009226                     __ptext141:
 30023                           	callstack 0
 30024  009226                     _I2C1_DO_RX_NACK_STOP:
 30025                           	callstack 16
 30026                           
 30027                           ;mcc_generated_files/i2c1_master.c: 484:     I2C1_MasterSendNack();
 30028                           
 30029                           ;incstack = 0
 30030  009226  EC3B  F049         	call	_I2C1_MasterSendNack	;wreg free
 30031                           
 30032                           ;mcc_generated_files/i2c1_master.c: 485:     return I2C1_SEND_STOP;
 30033  00922A  0E0A               	movlw	10
 30034  00922C  0012               	return		;funcret
 30035  00922E                     __end_of_I2C1_DO_RX_NACK_STOP:
 30036                           	callstack 0
 30037                           
 30038 ;; *************** function _I2C1_DO_RX_ACK *****************
 30039 ;; Defined at:
 30040 ;;		line 475 in file "mcc_generated_files/i2c1_master.c"
 30041 ;; Parameters:    Size  Location     Type
 30042 ;;		None
 30043 ;; Auto vars:     Size  Location     Type
 30044 ;;		None
 30045 ;; Return value:  Size  Location     Type
 30046 ;;                  1    wreg      enum E10442
 30047 ;; Registers used:
 30048 ;;		wreg, cstack
 30049 ;; Tracked objects:
 30050 ;;		On entry : 3F/2
 30051 ;;		On exit  : 3F/2
 30052 ;;		Unchanged: 3F/0
 30053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30054 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30055 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30057 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30058 ;;Total ram usage:        0 bytes
 30059 ;; Hardware stack levels used: 1
 30060 ;; Hardware stack levels required when called: 5
 30061 ;; This function calls:
 30062 ;;		_I2C1_MasterSendAck
 30063 ;; This function is called by:
 30064 ;;		_I2C1_MasterFsm
 30065 ;; This function uses a non-reentrant model
 30066 ;;
 30067                           
 30068                           	psect	text142
 30069  00922E                     __ptext142:
 30070                           	callstack 0
 30071  00922E                     _I2C1_DO_RX_ACK:
 30072                           	callstack 16
 30073                           
 30074                           ; BSR set to: 2
 30075                           ;mcc_generated_files/i2c1_master.c: 477:     I2C1_MasterSendAck();
 30076                           
 30077                           ;incstack = 0
 30078  00922E  EC38  F049         	call	_I2C1_MasterSendAck	;wreg free
 30079                           
 30080                           ; BSR set to: 2
 30081                           ;mcc_generated_files/i2c1_master.c: 478:     return I2C1_RCEN;
 30082  009232  0E05               	movlw	5
 30083                           
 30084                           ; BSR set to: 2
 30085  009234  0012               	return		;funcret
 30086  009236                     __end_of_I2C1_DO_RX_ACK:
 30087                           	callstack 0
 30088                           
 30089 ;; *************** function _I2C1_DO_SEND_STOP *****************
 30090 ;; Defined at:
 30091 ;;		line 469 in file "mcc_generated_files/i2c1_master.c"
 30092 ;; Parameters:    Size  Location     Type
 30093 ;;		None
 30094 ;; Auto vars:     Size  Location     Type
 30095 ;;		None
 30096 ;; Return value:  Size  Location     Type
 30097 ;;                  1    wreg      enum E10442
 30098 ;; Registers used:
 30099 ;;		wreg, cstack
 30100 ;; Tracked objects:
 30101 ;;		On entry : 0/2
 30102 ;;		On exit  : 0/0
 30103 ;;		Unchanged: 0/0
 30104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30108 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30109 ;;Total ram usage:        0 bytes
 30110 ;; Hardware stack levels used: 1
 30111 ;; Hardware stack levels required when called: 5
 30112 ;; This function calls:
 30113 ;;		_I2C1_MasterStop
 30114 ;; This function is called by:
 30115 ;;		_I2C1_DO_TX
 30116 ;;		_I2C1_DO_TX_EMPTY
 30117 ;;		_I2C1_DO_ADDRESS_NACK
 30118 ;;		_I2C1_MasterFsm
 30119 ;; This function uses a non-reentrant model
 30120 ;;
 30121                           
 30122                           	psect	text143
 30123  009236                     __ptext143:
 30124                           	callstack 0
 30125  009236                     _I2C1_DO_SEND_STOP:
 30126                           	callstack 15
 30127                           
 30128                           ;mcc_generated_files/i2c1_master.c: 471:     I2C1_MasterStop();
 30129                           
 30130                           ; BSR set to: 2
 30131                           ;incstack = 0
 30132  009236  EC56  F049         	call	_I2C1_MasterStop	;wreg free
 30133                           
 30134                           ;mcc_generated_files/i2c1_master.c: 472:     return I2C1_IDLE;
 30135  00923A  0E00               	movlw	0
 30136  00923C  0012               	return		;funcret
 30137  00923E                     __end_of_I2C1_DO_SEND_STOP:
 30138                           	callstack 0
 30139                           
 30140 ;; *************** function _I2C1_DO_SEND_RESTART *****************
 30141 ;; Defined at:
 30142 ;;		line 463 in file "mcc_generated_files/i2c1_master.c"
 30143 ;; Parameters:    Size  Location     Type
 30144 ;;		None
 30145 ;; Auto vars:     Size  Location     Type
 30146 ;;		None
 30147 ;; Return value:  Size  Location     Type
 30148 ;;                  1    wreg      enum E10442
 30149 ;; Registers used:
 30150 ;;		wreg, cstack
 30151 ;; Tracked objects:
 30152 ;;		On entry : 0/2
 30153 ;;		On exit  : 0/0
 30154 ;;		Unchanged: 0/0
 30155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30156 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30157 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30159 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30160 ;;Total ram usage:        0 bytes
 30161 ;; Hardware stack levels used: 1
 30162 ;; Hardware stack levels required when called: 5
 30163 ;; This function calls:
 30164 ;;		_I2C1_MasterEnableRestart
 30165 ;; This function is called by:
 30166 ;;		_I2C1_DO_TX_EMPTY
 30167 ;;		_I2C1_DO_ADDRESS_NACK
 30168 ;;		_I2C1_MasterFsm
 30169 ;; This function uses a non-reentrant model
 30170 ;;
 30171                           
 30172                           	psect	text144
 30173  00923E                     __ptext144:
 30174                           	callstack 0
 30175  00923E                     _I2C1_DO_SEND_RESTART:
 30176                           	callstack 15
 30177                           
 30178                           ;mcc_generated_files/i2c1_master.c: 465:     I2C1_MasterEnableRestart();
 30179                           
 30180                           ;incstack = 0
 30181  00923E  EC58  F049         	call	_I2C1_MasterEnableRestart	;wreg free
 30182                           
 30183                           ;mcc_generated_files/i2c1_master.c: 466:     return I2C1_SEND_ADR_READ;
 30184  009242  0E01               	movlw	1
 30185  009244  0012               	return		;funcret
 30186  009246                     __end_of_I2C1_DO_SEND_RESTART:
 30187                           	callstack 0
 30188                           
 30189 ;; *************** function _I2C1_DO_SEND_RESTART_WRITE *****************
 30190 ;; Defined at:
 30191 ;;		line 456 in file "mcc_generated_files/i2c1_master.c"
 30192 ;; Parameters:    Size  Location     Type
 30193 ;;		None
 30194 ;; Auto vars:     Size  Location     Type
 30195 ;;		None
 30196 ;; Return value:  Size  Location     Type
 30197 ;;                  1    wreg      enum E10442
 30198 ;; Registers used:
 30199 ;;		wreg, cstack
 30200 ;; Tracked objects:
 30201 ;;		On entry : 0/2
 30202 ;;		On exit  : 0/0
 30203 ;;		Unchanged: 0/0
 30204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30205 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30208 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30209 ;;Total ram usage:        0 bytes
 30210 ;; Hardware stack levels used: 1
 30211 ;; Hardware stack levels required when called: 5
 30212 ;; This function calls:
 30213 ;;		_I2C1_MasterEnableRestart
 30214 ;; This function is called by:
 30215 ;;		_I2C1_DO_TX
 30216 ;;		_I2C1_MasterFsm
 30217 ;; This function uses a non-reentrant model
 30218 ;;
 30219                           
 30220                           	psect	text145
 30221  009246                     __ptext145:
 30222                           	callstack 0
 30223  009246                     _I2C1_DO_SEND_RESTART_WRITE:
 30224                           	callstack 15
 30225                           
 30226                           ;mcc_generated_files/i2c1_master.c: 458:     I2C1_MasterEnableRestart();
 30227                           
 30228                           ;incstack = 0
 30229  009246  EC58  F049         	call	_I2C1_MasterEnableRestart	;wreg free
 30230                           
 30231                           ;mcc_generated_files/i2c1_master.c: 459:     return I2C1_SEND_ADR_WRITE;
 30232  00924A  0E02               	movlw	2
 30233  00924C  0012               	return		;funcret
 30234  00924E                     __end_of_I2C1_DO_SEND_RESTART_WRITE:
 30235                           	callstack 0
 30236                           
 30237 ;; *************** function _I2C1_DO_SEND_RESTART_READ *****************
 30238 ;; Defined at:
 30239 ;;		line 450 in file "mcc_generated_files/i2c1_master.c"
 30240 ;; Parameters:    Size  Location     Type
 30241 ;;		None
 30242 ;; Auto vars:     Size  Location     Type
 30243 ;;		None
 30244 ;; Return value:  Size  Location     Type
 30245 ;;                  1    wreg      enum E10442
 30246 ;; Registers used:
 30247 ;;		wreg, cstack
 30248 ;; Tracked objects:
 30249 ;;		On entry : 0/2
 30250 ;;		On exit  : 0/0
 30251 ;;		Unchanged: 0/0
 30252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30256 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30257 ;;Total ram usage:        0 bytes
 30258 ;; Hardware stack levels used: 1
 30259 ;; Hardware stack levels required when called: 5
 30260 ;; This function calls:
 30261 ;;		_I2C1_MasterEnableRestart
 30262 ;; This function is called by:
 30263 ;;		_I2C1_DO_TX
 30264 ;;		_I2C1_MasterFsm
 30265 ;; This function uses a non-reentrant model
 30266 ;;
 30267                           
 30268                           	psect	text146
 30269  00924E                     __ptext146:
 30270                           	callstack 0
 30271  00924E                     _I2C1_DO_SEND_RESTART_READ:
 30272                           	callstack 15
 30273                           
 30274                           ;mcc_generated_files/i2c1_master.c: 452:     I2C1_MasterEnableRestart();
 30275                           
 30276                           ;incstack = 0
 30277  00924E  EC58  F049         	call	_I2C1_MasterEnableRestart	;wreg free
 30278                           
 30279                           ;mcc_generated_files/i2c1_master.c: 453:     return I2C1_SEND_ADR_READ;
 30280  009252  0E01               	movlw	1
 30281  009254  0012               	return		;funcret
 30282  009256                     __end_of_I2C1_DO_SEND_RESTART_READ:
 30283                           	callstack 0
 30284                           
 30285 ;; *************** function _I2C1_DO_RCEN *****************
 30286 ;; Defined at:
 30287 ;;		line 402 in file "mcc_generated_files/i2c1_master.c"
 30288 ;; Parameters:    Size  Location     Type
 30289 ;;		None
 30290 ;; Auto vars:     Size  Location     Type
 30291 ;;		None
 30292 ;; Return value:  Size  Location     Type
 30293 ;;                  1    wreg      enum E10442
 30294 ;; Registers used:
 30295 ;;		wreg, cstack
 30296 ;; Tracked objects:
 30297 ;;		On entry : 3F/2
 30298 ;;		On exit  : 3F/2
 30299 ;;		Unchanged: 0/0
 30300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30304 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30305 ;;Total ram usage:        0 bytes
 30306 ;; Hardware stack levels used: 1
 30307 ;; Hardware stack levels required when called: 5
 30308 ;; This function calls:
 30309 ;;		_I2C1_MasterStartRx
 30310 ;; This function is called by:
 30311 ;;		_I2C1_MasterFsm
 30312 ;; This function uses a non-reentrant model
 30313 ;;
 30314                           
 30315                           	psect	text147
 30316  0091FA                     __ptext147:
 30317                           	callstack 0
 30318  0091FA                     _I2C1_DO_RCEN:
 30319                           	callstack 16
 30320                           
 30321                           ; BSR set to: 2
 30322                           ;mcc_generated_files/i2c1_master.c: 404:     I2C1_Status.addressNackCheck = 0;
 30323                           
 30324                           ;incstack = 0
 30325  0091FA  915F               	bcf	(_I2C1_Status+35)& (0+255),0,b
 30326                           
 30327                           ; BSR set to: 2
 30328                           ;mcc_generated_files/i2c1_master.c: 405:     I2C1_MasterStartRx();
 30329  0091FC  EC50  F049         	call	_I2C1_MasterStartRx	;wreg free
 30330                           
 30331                           ; BSR set to: 2
 30332                           ;mcc_generated_files/i2c1_master.c: 406:     return I2C1_RX;
 30333  009200  0E04               	movlw	4
 30334                           
 30335                           ; BSR set to: 2
 30336  009202  0012               	return		;funcret
 30337  009204                     __end_of_I2C1_DO_RCEN:
 30338                           	callstack 0
 30339                           
 30340 ;; *************** function _I2C1_DO_RX *****************
 30341 ;; Defined at:
 30342 ;;		line 378 in file "mcc_generated_files/i2c1_master.c"
 30343 ;; Parameters:    Size  Location     Type
 30344 ;;		None
 30345 ;; Auto vars:     Size  Location     Type
 30346 ;;		None
 30347 ;; Return value:  Size  Location     Type
 30348 ;;                  1    wreg      enum E10442
 30349 ;; Registers used:
 30350 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 30351 ;; Tracked objects:
 30352 ;;		On entry : 3F/2
 30353 ;;		On exit  : 0/0
 30354 ;;		Unchanged: 0/0
 30355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30358 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30359 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30360 ;;Total ram usage:        2 bytes
 30361 ;; Hardware stack levels used: 1
 30362 ;; Hardware stack levels required when called: 7
 30363 ;; This function calls:
 30364 ;;		Absolute function
 30365 ;;		_I2C1_CallbackReturnReset
 30366 ;;		_I2C1_CallbackReturnStop
 30367 ;;		_I2C1_DO_RX_NACK_RESTART
 30368 ;;		_I2C1_DO_RX_NACK_STOP
 30369 ;;		_I2C1_MasterGetRxData
 30370 ;;		_I2C1_MasterSendAck
 30371 ;;		_rd1RegCompleteHandler
 30372 ;;		_rd1RegCompleteHandler@i2c1_master_example$F500
 30373 ;;		_rd2RegCompleteHandler
 30374 ;;		_rd2RegCompleteHandler@i2c1_master_example$F511
 30375 ;;		_rdBlkRegCompleteHandler
 30376 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F535
 30377 ;;		_wr1RegCompleteHandler
 30378 ;;		_wr1RegCompleteHandler@i2c1_master_example$F517
 30379 ;;		_wr2RegCompleteHandler
 30380 ;;		_wr2RegCompleteHandler@i2c1_master_example$F523
 30381 ;; This function is called by:
 30382 ;;		_I2C1_MasterFsm
 30383 ;; This function uses a non-reentrant model
 30384 ;;
 30385                           
 30386                           	psect	text148
 30387  007C48                     __ptext148:
 30388                           	callstack 0
 30389  007C48                     _I2C1_DO_RX:
 30390                           	callstack 14
 30391                           
 30392                           ; BSR set to: 2
 30393                           ;mcc_generated_files/i2c1_master.c: 380:     *I2C1_Status.data_ptr++ = I2C1_MasterGetRxD
      +                          ata();
 30394                           
 30395                           ; BSR set to: 2
 30396                           ;incstack = 0
 30397  007C48  EC4E  F049         	call	_I2C1_MasterGetRxData	;wreg free
 30398  007C4C  C259  FFD9         	movff	_I2C1_Status+29,fsr2l
 30399  007C50  C25A  FFDA         	movff	_I2C1_Status+30,fsr2h
 30400  007C54  6EDF               	movwf	indf2,c
 30401                           
 30402                           ; BSR set to: 2
 30403  007C56  4B59               	infsnz	(_I2C1_Status+29)& (0+255),f,b
 30404  007C58  2B5A               	incf	(_I2C1_Status+30)& (0+255),f,b
 30405                           
 30406                           ; BSR set to: 2
 30407                           ;mcc_generated_files/i2c1_master.c: 381:     if(--I2C1_Status.data_length)
 30408  007C5A  075B               	decf	(_I2C1_Status+31)& (0+255),f,b
 30409  007C5C  A0D8               	btfss	status,0,c
 30410  007C5E  075C               	decf	(_I2C1_Status+32)& (0+255),f,b
 30411  007C60  515B               	movf	(_I2C1_Status+31)& (0+255),w,b
 30412  007C62  115C               	iorwf	(_I2C1_Status+32)& (0+255),w,b
 30413  007C64  B4D8               	btfsc	status,2,c
 30414  007C66  D004               	goto	l690
 30415                           
 30416                           ; BSR set to: 2
 30417                           ;mcc_generated_files/i2c1_master.c: 382:     {;mcc_generated_files/i2c1_master.c: 383:  
      +                                 I2C1_MasterSendAck();
 30418  007C68  EC38  F049         	call	_I2C1_MasterSendAck	;wreg free
 30419                           
 30420                           ; BSR set to: 2
 30421                           ;mcc_generated_files/i2c1_master.c: 384:         return I2C1_RCEN;
 30422  007C6C  0E05               	movlw	5
 30423  007C6E  0012               	return	
 30424  007C70                     l690:
 30425                           
 30426                           ; BSR set to: 2
 30427                           ;mcc_generated_files/i2c1_master.c: 387:     {;mcc_generated_files/i2c1_master.c: 388:  
      +                                 I2C1_Status.bufferFree = 1;
 30428  007C70  875F               	bsf	(_I2C1_Status+35)& (0+255),3,b
 30429                           
 30430                           ;mcc_generated_files/i2c1_master.c: 389:         switch(I2C1_Status.callbackTable[I2C1_D
      +                          ATA_COMPLETE](I2C1_Status.callbackPayload[I2C1_DATA_COMPLETE]))
 30431  007C72  D006               	goto	l19137
 30432  007C74                     l19127:
 30433                           
 30434                           ;mcc_generated_files/i2c1_master.c: 393:                 return I2C1_DO_RX_NACK_RESTART(
      +                          );
 30435  007C74  EC0F  F049         	call	_I2C1_DO_RX_NACK_RESTART	;wreg free
 30436  007C78  0012               	return	
 30437  007C7A                     l19131:
 30438                           
 30439                           ;mcc_generated_files/i2c1_master.c: 397:                 return I2C1_DO_RX_NACK_STOP();
 30440  007C7A  EC13  F049         	call	_I2C1_DO_RX_NACK_STOP	;wreg free
 30441  007C7E  0012               	return	
 30442  007C80                     l19137:
 30443                           
 30444                           ; BSR set to: 2
 30445  007C80  C248  F019         	movff	_I2C1_Status+12,I2C1_CallbackReturnReset@funPtr
 30446  007C84  C249  F01A         	movff	_I2C1_Status+13,I2C1_CallbackReturnReset@funPtr+1
 30447  007C88  D801               	call	u21948
 30448  007C8A  D009               	goto	u21949
 30449  007C8C                     u21948:
 30450  007C8C  0005               	push	
 30451  007C8E  6EFA               	movwf	pclath,c
 30452  007C90  513C               	movf	_I2C1_Status& (0+255),w,b
 30453  007C92  6EFD               	movwf	tosl,c
 30454  007C94  513D               	movf	(_I2C1_Status+1)& (0+255),w,b
 30455  007C96  6EFE               	movwf	tosh,c
 30456  007C98  6AFF               	clrf	tosu,c
 30457  007C9A  50FA               	movf	pclath,w,c
 30458  007C9C  0012               	return		;indir
 30459  007C9E                     u21949:
 30460  007C9E  6E1B               	movwf	??_I2C1_DO_RX^0,c
 30461  007CA0  6A1C               	clrf	(??_I2C1_DO_RX+1)^0,c
 30462                           
 30463                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 30464                           ; Switch size 1, requested type "simple"
 30465                           ; Number of cases is 1, Range of values is 0 to 0
 30466                           ; switch strategies available:
 30467                           ; Name         Instructions Cycles
 30468                           ; simple_byte            4     3 (average)
 30469                           ;	Chosen strategy is simple_byte
 30470  007CA2  501C               	movf	(??_I2C1_DO_RX+1)^0,w,c
 30471  007CA4  0A00               	xorlw	0	; case 0
 30472  007CA6  A4D8               	btfss	status,2,c
 30473  007CA8  D7E8               	goto	l19131
 30474                           
 30475                           ; Switch size 1, requested type "simple"
 30476                           ; Number of cases is 4, Range of values is 1 to 4
 30477                           ; switch strategies available:
 30478                           ; Name         Instructions Cycles
 30479                           ; simple_byte           13     7 (average)
 30480                           ;	Chosen strategy is simple_byte
 30481  007CAA  501B               	movf	??_I2C1_DO_RX^0,w,c
 30482  007CAC  0A01               	xorlw	1	; case 1
 30483  007CAE  B4D8               	btfsc	status,2,c
 30484  007CB0  D7E4               	goto	l19131
 30485  007CB2  0A03               	xorlw	3	; case 2
 30486  007CB4  B4D8               	btfsc	status,2,c
 30487  007CB6  D7DE               	goto	l19127
 30488  007CB8  0A01               	xorlw	1	; case 3
 30489  007CBA  B4D8               	btfsc	status,2,c
 30490  007CBC  D7DB               	goto	l19127
 30491  007CBE  0A07               	xorlw	7	; case 4
 30492  007CC0  D7DC               	goto	l19131
 30493  007CC2                     __end_of_I2C1_DO_RX:
 30494                           	callstack 0
 30495                           
 30496 ;; *************** function _I2C1_DO_TX *****************
 30497 ;; Defined at:
 30498 ;;		line 354 in file "mcc_generated_files/i2c1_master.c"
 30499 ;; Parameters:    Size  Location     Type
 30500 ;;		None
 30501 ;; Auto vars:     Size  Location     Type
 30502 ;;		None
 30503 ;; Return value:  Size  Location     Type
 30504 ;;                  1    wreg      enum E10442
 30505 ;; Registers used:
 30506 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 30507 ;; Tracked objects:
 30508 ;;		On entry : 3F/2
 30509 ;;		On exit  : 0/0
 30510 ;;		Unchanged: 0/0
 30511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30514 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30515 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30516 ;;Total ram usage:        2 bytes
 30517 ;; Hardware stack levels used: 1
 30518 ;; Hardware stack levels required when called: 7
 30519 ;; This function calls:
 30520 ;;		Absolute function
 30521 ;;		_I2C1_CallbackReturnReset
 30522 ;;		_I2C1_CallbackReturnStop
 30523 ;;		_I2C1_DO_SEND_RESTART_READ
 30524 ;;		_I2C1_DO_SEND_RESTART_WRITE
 30525 ;;		_I2C1_DO_SEND_STOP
 30526 ;;		_I2C1_MasterIsNack
 30527 ;;		_I2C1_MasterSendTxData
 30528 ;;		_rd1RegCompleteHandler
 30529 ;;		_rd1RegCompleteHandler@i2c1_master_example$F500
 30530 ;;		_rd2RegCompleteHandler
 30531 ;;		_rd2RegCompleteHandler@i2c1_master_example$F511
 30532 ;;		_rdBlkRegCompleteHandler
 30533 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F535
 30534 ;;		_wr1RegCompleteHandler
 30535 ;;		_wr1RegCompleteHandler@i2c1_master_example$F517
 30536 ;;		_wr2RegCompleteHandler
 30537 ;;		_wr2RegCompleteHandler@i2c1_master_example$F523
 30538 ;; This function is called by:
 30539 ;;		_I2C1_MasterFsm
 30540 ;; This function uses a non-reentrant model
 30541 ;;
 30542                           
 30543                           	psect	text149
 30544  0077A8                     __ptext149:
 30545                           	callstack 0
 30546  0077A8                     _I2C1_DO_TX:
 30547                           	callstack 14
 30548                           
 30549                           ; BSR set to: 2
 30550                           ;mcc_generated_files/i2c1_master.c: 356:     if(I2C1_MasterIsNack())
 30551                           
 30552                           ;incstack = 0
 30553  0077A8  ECBF  F048         	call	_I2C1_MasterIsNack	;wreg free
 30554  0077AC  0900               	iorlw	0
 30555  0077AE  A4D8               	btfss	status,2,c
 30556  0077B0  D00A               	goto	l19097
 30557  0077B2  D02A               	goto	l674
 30558  0077B4                     l19083:
 30559                           
 30560                           ;mcc_generated_files/i2c1_master.c: 361:                 return I2C1_DO_SEND_RESTART_REA
      +                          D();
 30561  0077B4  EC27  F049         	call	_I2C1_DO_SEND_RESTART_READ	;wreg free
 30562  0077B8  0012               	return	
 30563  0077BA                     l19087:
 30564                           
 30565                           ;mcc_generated_files/i2c1_master.c: 363:                   return I2C1_DO_SEND_RESTART_W
      +                          RITE();
 30566  0077BA  EC23  F049         	call	_I2C1_DO_SEND_RESTART_WRITE	;wreg free
 30567  0077BE  0012               	return	
 30568  0077C0                     l19091:
 30569                           
 30570                           ;mcc_generated_files/i2c1_master.c: 367:                 return I2C1_DO_SEND_STOP();
 30571  0077C0  EC1B  F049         	call	_I2C1_DO_SEND_STOP	;wreg free
 30572  0077C4  0012               	return	
 30573  0077C6                     l19097:
 30574                           
 30575                           ; BSR set to: 2
 30576  0077C6  C24E  F019         	movff	_I2C1_Status+18,I2C1_CallbackReturnReset@funPtr
 30577  0077CA  C24F  F01A         	movff	_I2C1_Status+19,I2C1_CallbackReturnReset@funPtr+1
 30578  0077CE  D801               	call	u21918
 30579  0077D0  D009               	goto	u21919
 30580  0077D2                     u21918:
 30581  0077D2  0005               	push	
 30582  0077D4  6EFA               	movwf	pclath,c
 30583  0077D6  5142               	movf	(_I2C1_Status+6)& (0+255),w,b
 30584  0077D8  6EFD               	movwf	tosl,c
 30585  0077DA  5143               	movf	(_I2C1_Status+7)& (0+255),w,b
 30586  0077DC  6EFE               	movwf	tosh,c
 30587  0077DE  6AFF               	clrf	tosu,c
 30588  0077E0  50FA               	movf	pclath,w,c
 30589  0077E2  0012               	return		;indir
 30590  0077E4                     u21919:
 30591  0077E4  6E1B               	movwf	??_I2C1_DO_TX^0,c
 30592  0077E6  6A1C               	clrf	(??_I2C1_DO_TX+1)^0,c
 30593                           
 30594                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 30595                           ; Switch size 1, requested type "simple"
 30596                           ; Number of cases is 1, Range of values is 0 to 0
 30597                           ; switch strategies available:
 30598                           ; Name         Instructions Cycles
 30599                           ; simple_byte            4     3 (average)
 30600                           ;	Chosen strategy is simple_byte
 30601  0077E8  501C               	movf	(??_I2C1_DO_TX+1)^0,w,c
 30602  0077EA  0A00               	xorlw	0	; case 0
 30603  0077EC  A4D8               	btfss	status,2,c
 30604  0077EE  D7E8               	goto	l19091
 30605                           
 30606                           ; Switch size 1, requested type "simple"
 30607                           ; Number of cases is 4, Range of values is 1 to 4
 30608                           ; switch strategies available:
 30609                           ; Name         Instructions Cycles
 30610                           ; simple_byte           13     7 (average)
 30611                           ;	Chosen strategy is simple_byte
 30612  0077F0  501B               	movf	??_I2C1_DO_TX^0,w,c
 30613  0077F2  0A01               	xorlw	1	; case 1
 30614  0077F4  B4D8               	btfsc	status,2,c
 30615  0077F6  D7E4               	goto	l19091
 30616  0077F8  0A03               	xorlw	3	; case 2
 30617  0077FA  B4D8               	btfsc	status,2,c
 30618  0077FC  D7DB               	goto	l19083
 30619  0077FE  0A01               	xorlw	1	; case 3
 30620  007800  B4D8               	btfsc	status,2,c
 30621  007802  D7DB               	goto	l19087
 30622  007804  0A07               	xorlw	7	; case 4
 30623  007806  D7DC               	goto	l19091
 30624  007808                     l674:
 30625                           
 30626                           ; BSR set to: 2
 30627                           ;mcc_generated_files/i2c1_master.c: 371:     {;mcc_generated_files/i2c1_master.c: 372:  
      +                                 I2C1_Status.addressNackCheck = 0;
 30628  007808  915F               	bcf	(_I2C1_Status+35)& (0+255),0,b
 30629                           
 30630                           ; BSR set to: 2
 30631                           ;mcc_generated_files/i2c1_master.c: 373:         I2C1_MasterSendTxData(*I2C1_Status.data
      +                          _ptr++);
 30632  00780A  C259  FFD9         	movff	_I2C1_Status+29,fsr2l
 30633  00780E  C25A  FFDA         	movff	_I2C1_Status+30,fsr2h
 30634  007812  4B59               	infsnz	(_I2C1_Status+29)& (0+255),f,b
 30635  007814  2B5A               	incf	(_I2C1_Status+30)& (0+255),f,b
 30636  007816  50DF               	movf	indf2,w,c
 30637  007818  EC2B  F049         	call	_I2C1_MasterSendTxData
 30638                           
 30639                           ;mcc_generated_files/i2c1_master.c: 374:         return (--I2C1_Status.data_length)?I2C1
      +                          _TX:I2C1_TX_EMPTY;
 30640  00781C  0102               	movlb	2	; () banked
 30641  00781E  075B               	decf	(_I2C1_Status+31)& (0+255),f,b
 30642  007820  A0D8               	btfss	status,0,c
 30643  007822  075C               	decf	(_I2C1_Status+32)& (0+255),f,b
 30644  007824  515B               	movf	(_I2C1_Status+31)& (0+255),w,b
 30645  007826  115C               	iorwf	(_I2C1_Status+32)& (0+255),w,b
 30646  007828  A4D8               	btfss	status,2,c
 30647  00782A  D002               	goto	l19105
 30648                           
 30649                           ; BSR set to: 2
 30650  00782C  0E06               	movlw	6
 30651  00782E  0012               	return	
 30652  007830                     l19105:
 30653                           
 30654                           ; BSR set to: 2
 30655  007830  0E03               	movlw	3
 30656  007832  0012               	return		;funcret
 30657  007834                     __end_of_I2C1_DO_TX:
 30658                           	callstack 0
 30659                           
 30660 ;; *************** function _I2C1_DO_SEND_ADR_WRITE *****************
 30661 ;; Defined at:
 30662 ;;		line 347 in file "mcc_generated_files/i2c1_master.c"
 30663 ;; Parameters:    Size  Location     Type
 30664 ;;		None
 30665 ;; Auto vars:     Size  Location     Type
 30666 ;;		None
 30667 ;; Return value:  Size  Location     Type
 30668 ;;                  1    wreg      enum E10442
 30669 ;; Registers used:
 30670 ;;		wreg, status,2, status,0, cstack
 30671 ;; Tracked objects:
 30672 ;;		On entry : 3F/2
 30673 ;;		On exit  : 0/0
 30674 ;;		Unchanged: 0/0
 30675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30676 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30679 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30680 ;;Total ram usage:        0 bytes
 30681 ;; Hardware stack levels used: 1
 30682 ;; Hardware stack levels required when called: 5
 30683 ;; This function calls:
 30684 ;;		_I2C1_MasterSendTxData
 30685 ;; This function is called by:
 30686 ;;		_I2C1_MasterFsm
 30687 ;; This function uses a non-reentrant model
 30688 ;;
 30689                           
 30690                           	psect	text150
 30691  009162                     __ptext150:
 30692                           	callstack 0
 30693  009162                     _I2C1_DO_SEND_ADR_WRITE:
 30694                           	callstack 16
 30695                           
 30696                           ; BSR set to: 2
 30697                           ;mcc_generated_files/i2c1_master.c: 349:     I2C1_Status.addressNackCheck = 1;
 30698                           
 30699                           ;incstack = 0
 30700  009162  815F               	bsf	(_I2C1_Status+35)& (0+255),0,b
 30701                           
 30702                           ; BSR set to: 2
 30703                           ;mcc_generated_files/i2c1_master.c: 350:     I2C1_MasterSendTxData((uint8_t) (I2C1_Statu
      +                          s.address << 1));
 30704  009164  5158               	movf	(_I2C1_Status+28)& (0+255),w,b
 30705  009166  2558               	addwf	(_I2C1_Status+28)& (0+255),w,b
 30706  009168  EC2B  F049         	call	_I2C1_MasterSendTxData
 30707                           
 30708                           ;mcc_generated_files/i2c1_master.c: 351:     return I2C1_TX;
 30709  00916C  0E03               	movlw	3
 30710  00916E  0012               	return		;funcret
 30711  009170                     __end_of_I2C1_DO_SEND_ADR_WRITE:
 30712                           	callstack 0
 30713                           
 30714 ;; *************** function _I2C1_DO_SEND_ADR_READ *****************
 30715 ;; Defined at:
 30716 ;;		line 340 in file "mcc_generated_files/i2c1_master.c"
 30717 ;; Parameters:    Size  Location     Type
 30718 ;;		None
 30719 ;; Auto vars:     Size  Location     Type
 30720 ;;		None
 30721 ;; Return value:  Size  Location     Type
 30722 ;;                  1    wreg      enum E10442
 30723 ;; Registers used:
 30724 ;;		wreg, status,0, cstack
 30725 ;; Tracked objects:
 30726 ;;		On entry : 3F/2
 30727 ;;		On exit  : 0/0
 30728 ;;		Unchanged: 0/0
 30729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30733 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30734 ;;Total ram usage:        0 bytes
 30735 ;; Hardware stack levels used: 1
 30736 ;; Hardware stack levels required when called: 5
 30737 ;; This function calls:
 30738 ;;		_I2C1_MasterSendTxData
 30739 ;; This function is called by:
 30740 ;;		_I2C1_MasterFsm
 30741 ;; This function uses a non-reentrant model
 30742 ;;
 30743                           
 30744                           	psect	text151
 30745  009170                     __ptext151:
 30746                           	callstack 0
 30747  009170                     _I2C1_DO_SEND_ADR_READ:
 30748                           	callstack 16
 30749                           
 30750                           ; BSR set to: 2
 30751                           ;mcc_generated_files/i2c1_master.c: 342:     I2C1_Status.addressNackCheck = 1;
 30752                           
 30753                           ;incstack = 0
 30754  009170  815F               	bsf	(_I2C1_Status+35)& (0+255),0,b
 30755                           
 30756                           ; BSR set to: 2
 30757                           ;mcc_generated_files/i2c1_master.c: 343:     I2C1_MasterSendTxData((uint8_t) (I2C1_Statu
      +                          s.address << 1 | 1));
 30758  009172  80D8               	bsf	status,0,c
 30759  009174  3558               	rlcf	(_I2C1_Status+28)& (0+255),w,b
 30760  009176  EC2B  F049         	call	_I2C1_MasterSendTxData
 30761                           
 30762                           ;mcc_generated_files/i2c1_master.c: 344:     return I2C1_RCEN;
 30763  00917A  0E05               	movlw	5
 30764  00917C  0012               	return		;funcret
 30765  00917E                     __end_of_I2C1_DO_SEND_ADR_READ:
 30766                           	callstack 0
 30767                           
 30768 ;; *************** function _I2C1_DO_IDLE *****************
 30769 ;; Defined at:
 30770 ;;		line 333 in file "mcc_generated_files/i2c1_master.c"
 30771 ;; Parameters:    Size  Location     Type
 30772 ;;		None
 30773 ;; Auto vars:     Size  Location     Type
 30774 ;;		None
 30775 ;; Return value:  Size  Location     Type
 30776 ;;                  1    wreg      enum E10442
 30777 ;; Registers used:
 30778 ;;		wreg, status,2
 30779 ;; Tracked objects:
 30780 ;;		On entry : 3F/2
 30781 ;;		On exit  : 3F/2
 30782 ;;		Unchanged: 0/0
 30783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30787 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30788 ;;Total ram usage:        0 bytes
 30789 ;; Hardware stack levels used: 1
 30790 ;; Hardware stack levels required when called: 4
 30791 ;; This function calls:
 30792 ;;		Nothing
 30793 ;; This function is called by:
 30794 ;;		_I2C1_MasterFsm
 30795 ;; This function uses a non-reentrant model
 30796 ;;
 30797                           
 30798                           	psect	text152
 30799  009204                     __ptext152:
 30800                           	callstack 0
 30801  009204                     _I2C1_DO_IDLE:
 30802                           	callstack 17
 30803                           
 30804                           ; BSR set to: 2
 30805                           ;mcc_generated_files/i2c1_master.c: 335:     I2C1_Status.busy = 0;
 30806                           
 30807                           ;incstack = 0
 30808  009204  935F               	bcf	(_I2C1_Status+35)& (0+255),1,b
 30809                           
 30810                           ; BSR set to: 2
 30811                           ;mcc_generated_files/i2c1_master.c: 336:     I2C1_Status.error = I2C1_NOERR;
 30812  009206  0E00               	movlw	0
 30813  009208  6F5E               	movwf	(_I2C1_Status+34)& (0+255),b
 30814                           
 30815                           ; BSR set to: 2
 30816                           ;mcc_generated_files/i2c1_master.c: 337:     return I2C1_RESET;
 30817  00920A  0E0E               	movlw	14
 30818                           
 30819                           ; BSR set to: 2
 30820  00920C  0012               	return		;funcret
 30821  00920E                     __end_of_I2C1_DO_IDLE:
 30822                           	callstack 0
 30823                           
 30824 ;; *************** function _I2C1_DO_TX_EMPTY *****************
 30825 ;; Defined at:
 30826 ;;		line 409 in file "mcc_generated_files/i2c1_master.c"
 30827 ;; Parameters:    Size  Location     Type
 30828 ;;		None
 30829 ;; Auto vars:     Size  Location     Type
 30830 ;;		None
 30831 ;; Return value:  Size  Location     Type
 30832 ;;                  1    wreg      enum E10442
 30833 ;; Registers used:
 30834 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 30835 ;; Tracked objects:
 30836 ;;		On entry : 3F/2
 30837 ;;		On exit  : 0/0
 30838 ;;		Unchanged: 0/0
 30839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30841 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30842 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30843 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30844 ;;Total ram usage:        2 bytes
 30845 ;; Hardware stack levels used: 1
 30846 ;; Hardware stack levels required when called: 7
 30847 ;; This function calls:
 30848 ;;		Absolute function
 30849 ;;		_I2C1_CallbackReturnReset
 30850 ;;		_I2C1_CallbackReturnStop
 30851 ;;		_I2C1_DO_SEND_RESTART
 30852 ;;		_I2C1_DO_SEND_STOP
 30853 ;;		_I2C1_MasterSetIrq
 30854 ;;		_rd1RegCompleteHandler
 30855 ;;		_rd1RegCompleteHandler@i2c1_master_example$F500
 30856 ;;		_rd2RegCompleteHandler
 30857 ;;		_rd2RegCompleteHandler@i2c1_master_example$F511
 30858 ;;		_rdBlkRegCompleteHandler
 30859 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F535
 30860 ;;		_wr1RegCompleteHandler
 30861 ;;		_wr1RegCompleteHandler@i2c1_master_example$F517
 30862 ;;		_wr2RegCompleteHandler
 30863 ;;		_wr2RegCompleteHandler@i2c1_master_example$F523
 30864 ;; This function is called by:
 30865 ;;		_I2C1_MasterFsm
 30866 ;; This function uses a non-reentrant model
 30867 ;;
 30868                           
 30869                           	psect	text153
 30870  0081F4                     __ptext153:
 30871                           	callstack 0
 30872  0081F4                     _I2C1_DO_TX_EMPTY:
 30873                           	callstack 14
 30874                           
 30875                           ; BSR set to: 2
 30876                           ;mcc_generated_files/i2c1_master.c: 411:     I2C1_Status.bufferFree = 1;
 30877                           
 30878                           ; BSR set to: 2
 30879                           ;incstack = 0
 30880  0081F4  875F               	bsf	(_I2C1_Status+35)& (0+255),3,b
 30881                           
 30882                           ;mcc_generated_files/i2c1_master.c: 412:     switch(I2C1_Status.callbackTable[I2C1_DATA_
      +                          COMPLETE](I2C1_Status.callbackPayload[I2C1_DATA_COMPLETE]))
 30883  0081F6  D00A               	goto	l19169
 30884  0081F8                     l19153:
 30885                           
 30886                           ;mcc_generated_files/i2c1_master.c: 416:             return I2C1_DO_SEND_RESTART();
 30887  0081F8  EC1F  F049         	call	_I2C1_DO_SEND_RESTART	;wreg free
 30888  0081FC  0012               	return	
 30889  0081FE                     l19157:
 30890                           
 30891                           ;mcc_generated_files/i2c1_master.c: 418:             I2C1_MasterSetIrq();
 30892  0081FE  EC35  F049         	call	_I2C1_MasterSetIrq	;wreg free
 30893                           
 30894                           ; BSR set to: 14
 30895                           ;mcc_generated_files/i2c1_master.c: 419:             return I2C1_TX;
 30896  008202  0E03               	movlw	3
 30897  008204  0012               	return	
 30898  008206                     l19163:
 30899                           
 30900                           ;mcc_generated_files/i2c1_master.c: 422:             return I2C1_DO_SEND_STOP();
 30901  008206  EC1B  F049         	call	_I2C1_DO_SEND_STOP	;wreg free
 30902  00820A  0012               	return	
 30903  00820C                     l19169:
 30904                           
 30905                           ; BSR set to: 2
 30906  00820C  C248  F019         	movff	_I2C1_Status+12,I2C1_CallbackReturnReset@funPtr
 30907  008210  C249  F01A         	movff	_I2C1_Status+13,I2C1_CallbackReturnReset@funPtr+1
 30908  008214  D801               	call	u21958
 30909  008216  D009               	goto	u21959
 30910  008218                     u21958:
 30911  008218  0005               	push	
 30912  00821A  6EFA               	movwf	pclath,c
 30913  00821C  513C               	movf	_I2C1_Status& (0+255),w,b
 30914  00821E  6EFD               	movwf	tosl,c
 30915  008220  513D               	movf	(_I2C1_Status+1)& (0+255),w,b
 30916  008222  6EFE               	movwf	tosh,c
 30917  008224  6AFF               	clrf	tosu,c
 30918  008226  50FA               	movf	pclath,w,c
 30919  008228  0012               	return		;indir
 30920  00822A                     u21959:
 30921  00822A  6E1B               	movwf	??_I2C1_DO_TX_EMPTY^0,c
 30922  00822C  6A1C               	clrf	(??_I2C1_DO_TX_EMPTY+1)^0,c
 30923                           
 30924                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 30925                           ; Switch size 1, requested type "simple"
 30926                           ; Number of cases is 1, Range of values is 0 to 0
 30927                           ; switch strategies available:
 30928                           ; Name         Instructions Cycles
 30929                           ; simple_byte            4     3 (average)
 30930                           ;	Chosen strategy is simple_byte
 30931  00822E  501C               	movf	(??_I2C1_DO_TX_EMPTY+1)^0,w,c
 30932  008230  0A00               	xorlw	0	; case 0
 30933  008232  A4D8               	btfss	status,2,c
 30934  008234  D7E8               	goto	l19163
 30935                           
 30936                           ; Switch size 1, requested type "simple"
 30937                           ; Number of cases is 4, Range of values is 1 to 4
 30938                           ; switch strategies available:
 30939                           ; Name         Instructions Cycles
 30940                           ; simple_byte           13     7 (average)
 30941                           ;	Chosen strategy is simple_byte
 30942  008236  501B               	movf	??_I2C1_DO_TX_EMPTY^0,w,c
 30943  008238  0A01               	xorlw	1	; case 1
 30944  00823A  B4D8               	btfsc	status,2,c
 30945  00823C  D7E4               	goto	l19163
 30946  00823E  0A03               	xorlw	3	; case 2
 30947  008240  B4D8               	btfsc	status,2,c
 30948  008242  D7DA               	goto	l19153
 30949  008244  0A01               	xorlw	1	; case 3
 30950  008246  B4D8               	btfsc	status,2,c
 30951  008248  D7D7               	goto	l19153
 30952  00824A  0A07               	xorlw	7	; case 4
 30953  00824C  B4D8               	btfsc	status,2,c
 30954  00824E  D7D7               	goto	l19157
 30955  008250  D7DA               	goto	l19163
 30956  008252                     __end_of_I2C1_DO_TX_EMPTY:
 30957                           	callstack 0
 30958                           
 30959 ;; *************** function _I2C1_MasterSetIrq *****************
 30960 ;; Defined at:
 30961 ;;		line 645 in file "mcc_generated_files/i2c1_master.c"
 30962 ;; Parameters:    Size  Location     Type
 30963 ;;		None
 30964 ;; Auto vars:     Size  Location     Type
 30965 ;;		None
 30966 ;; Return value:  Size  Location     Type
 30967 ;;                  1    wreg      void 
 30968 ;; Registers used:
 30969 ;;		None
 30970 ;; Tracked objects:
 30971 ;;		On entry : 0/2
 30972 ;;		On exit  : 3F/E
 30973 ;;		Unchanged: 0/0
 30974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30978 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30979 ;;Total ram usage:        0 bytes
 30980 ;; Hardware stack levels used: 1
 30981 ;; Hardware stack levels required when called: 4
 30982 ;; This function calls:
 30983 ;;		Nothing
 30984 ;; This function is called by:
 30985 ;;		_I2C1_DO_TX_EMPTY
 30986 ;; This function uses a non-reentrant model
 30987 ;;
 30988                           
 30989                           	psect	text154
 30990  00926A                     __ptext154:
 30991                           	callstack 0
 30992  00926A                     _I2C1_MasterSetIrq:
 30993                           	callstack 16
 30994                           
 30995                           ;mcc_generated_files/i2c1_master.c: 647:     PIR3bits.SSP1IF = 1;
 30996                           
 30997                           ;incstack = 0
 30998  00926A  010E               	movlb	14	; () banked
 30999  00926C  81CD               	bsf	205,0,b	;volatile
 31000                           
 31001                           ; BSR set to: 14
 31002  00926E  0012               	return		;funcret
 31003  009270                     __end_of_I2C1_MasterSetIrq:
 31004                           	callstack 0
 31005                           
 31006 ;; *************** function _I2C1_MasterIsNack *****************
 31007 ;; Defined at:
 31008 ;;		line 598 in file "mcc_generated_files/i2c1_master.c"
 31009 ;; Parameters:    Size  Location     Type
 31010 ;;		None
 31011 ;; Auto vars:     Size  Location     Type
 31012 ;;		None
 31013 ;; Return value:  Size  Location     Type
 31014 ;;                  1    wreg      _Bool 
 31015 ;; Registers used:
 31016 ;;		wreg
 31017 ;; Tracked objects:
 31018 ;;		On entry : 3F/2
 31019 ;;		On exit  : 3F/2
 31020 ;;		Unchanged: 3F/0
 31021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31025 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31026 ;;Total ram usage:        0 bytes
 31027 ;; Hardware stack levels used: 1
 31028 ;; Hardware stack levels required when called: 4
 31029 ;; This function calls:
 31030 ;;		Nothing
 31031 ;; This function is called by:
 31032 ;;		_I2C1_MasterFsm
 31033 ;;		_I2C1_DO_TX
 31034 ;; This function uses a non-reentrant model
 31035 ;;
 31036                           
 31037                           	psect	text155
 31038  00917E                     __ptext155:
 31039                           	callstack 0
 31040  00917E                     _I2C1_MasterIsNack:
 31041                           	callstack 17
 31042                           
 31043                           ; BSR set to: 2
 31044                           ;mcc_generated_files/i2c1_master.c: 600:     return SSP1CON2bits.ACKSTAT;
 31045                           
 31046                           ; BSR set to: 14
 31047                           ;incstack = 0
 31048  00917E  AC97               	btfss	151,6,c	;volatile
 31049  009180  D002               	goto	u21890
 31050  009182  0E01               	movlw	1
 31051  009184  0012               	return	
 31052  009186                     u21890:
 31053  009186  0E00               	movlw	0
 31054                           
 31055                           ; BSR set to: 2
 31056  009188  0012               	return		;funcret
 31057  00918A                     __end_of_I2C1_MasterIsNack:
 31058                           	callstack 0
 31059                           
 31060 ;; *************** function _I2C1_MasterSendTxData *****************
 31061 ;; Defined at:
 31062 ;;		line 568 in file "mcc_generated_files/i2c1_master.c"
 31063 ;; Parameters:    Size  Location     Type
 31064 ;;  data            1    wreg     unsigned char 
 31065 ;; Auto vars:     Size  Location     Type
 31066 ;;  data            1   15[COMRAM] unsigned char 
 31067 ;; Return value:  Size  Location     Type
 31068 ;;                  1    wreg      void 
 31069 ;; Registers used:
 31070 ;;		wreg
 31071 ;; Tracked objects:
 31072 ;;		On entry : 3F/2
 31073 ;;		On exit  : 0/0
 31074 ;;		Unchanged: 0/0
 31075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31077 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31079 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31080 ;;Total ram usage:        1 bytes
 31081 ;; Hardware stack levels used: 1
 31082 ;; Hardware stack levels required when called: 4
 31083 ;; This function calls:
 31084 ;;		Nothing
 31085 ;; This function is called by:
 31086 ;;		_I2C1_DO_SEND_ADR_READ
 31087 ;;		_I2C1_DO_SEND_ADR_WRITE
 31088 ;;		_I2C1_DO_TX
 31089 ;; This function uses a non-reentrant model
 31090 ;;
 31091                           
 31092                           	psect	text156
 31093  009256                     __ptext156:
 31094                           	callstack 0
 31095  009256                     _I2C1_MasterSendTxData:
 31096                           	callstack 16
 31097                           
 31098                           ; BSR set to: 2
 31099                           ;incstack = 0
 31100                           ;I2C1_MasterSendTxData@data stored from wreg
 31101  009256  6E10               	movwf	I2C1_MasterSendTxData@data^0,c
 31102                           
 31103                           ;mcc_generated_files/i2c1_master.c: 568: static __attribute__((inline)) void I2C1_Master
      +                          SendTxData(uint8_t data);mcc_generated_files/i2c1_master.c: 569: {;mcc_generated_files/i
      +                          2c1_master.c: 570:     SSP1BUF = data;
 31104  009258  C010  FF92         	movff	I2C1_MasterSendTxData@data,3986	;volatile
 31105  00925C  0012               	return		;funcret
 31106  00925E                     __end_of_I2C1_MasterSendTxData:
 31107                           	callstack 0
 31108                           
 31109 ;; *************** function _I2C1_MasterSendAck *****************
 31110 ;; Defined at:
 31111 ;;		line 603 in file "mcc_generated_files/i2c1_master.c"
 31112 ;; Parameters:    Size  Location     Type
 31113 ;;		None
 31114 ;; Auto vars:     Size  Location     Type
 31115 ;;		None
 31116 ;; Return value:  Size  Location     Type
 31117 ;;                  1    wreg      void 
 31118 ;; Registers used:
 31119 ;;		None
 31120 ;; Tracked objects:
 31121 ;;		On entry : 3F/2
 31122 ;;		On exit  : 3F/2
 31123 ;;		Unchanged: 3F/0
 31124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31125 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31126 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31128 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31129 ;;Total ram usage:        0 bytes
 31130 ;; Hardware stack levels used: 1
 31131 ;; Hardware stack levels required when called: 4
 31132 ;; This function calls:
 31133 ;;		Nothing
 31134 ;; This function is called by:
 31135 ;;		_I2C1_DO_RX
 31136 ;;		_I2C1_DO_RX_ACK
 31137 ;; This function uses a non-reentrant model
 31138 ;;
 31139                           
 31140                           	psect	text157
 31141  009270                     __ptext157:
 31142                           	callstack 0
 31143  009270                     _I2C1_MasterSendAck:
 31144                           	callstack 16
 31145                           
 31146                           ; BSR set to: 2
 31147                           ;mcc_generated_files/i2c1_master.c: 605:     SSP1CON2bits.ACKDT = 0;
 31148                           
 31149                           ;incstack = 0
 31150  009270  9A97               	bcf	151,5,c	;volatile
 31151                           
 31152                           ;mcc_generated_files/i2c1_master.c: 606:     SSP1CON2bits.ACKEN = 1;
 31153  009272  8897               	bsf	151,4,c	;volatile
 31154                           
 31155                           ; BSR set to: 2
 31156  009274  0012               	return		;funcret
 31157  009276                     __end_of_I2C1_MasterSendAck:
 31158                           	callstack 0
 31159                           
 31160 ;; *************** function _I2C1_MasterGetRxData *****************
 31161 ;; Defined at:
 31162 ;;		line 563 in file "mcc_generated_files/i2c1_master.c"
 31163 ;; Parameters:    Size  Location     Type
 31164 ;;		None
 31165 ;; Auto vars:     Size  Location     Type
 31166 ;;		None
 31167 ;; Return value:  Size  Location     Type
 31168 ;;                  1    wreg      unsigned char 
 31169 ;; Registers used:
 31170 ;;		wreg, status,2
 31171 ;; Tracked objects:
 31172 ;;		On entry : 3F/2
 31173 ;;		On exit  : 3F/2
 31174 ;;		Unchanged: 3F/0
 31175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31179 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31180 ;;Total ram usage:        0 bytes
 31181 ;; Hardware stack levels used: 1
 31182 ;; Hardware stack levels required when called: 4
 31183 ;; This function calls:
 31184 ;;		Nothing
 31185 ;; This function is called by:
 31186 ;;		_I2C1_DO_RX
 31187 ;; This function uses a non-reentrant model
 31188 ;;
 31189                           
 31190                           	psect	text158
 31191  00929C                     __ptext158:
 31192                           	callstack 0
 31193  00929C                     _I2C1_MasterGetRxData:
 31194                           	callstack 16
 31195                           
 31196                           ; BSR set to: 2
 31197                           ;mcc_generated_files/i2c1_master.c: 565:     return SSP1BUF;
 31198                           
 31199                           ; BSR set to: 2
 31200                           ;incstack = 0
 31201  00929C  5092               	movf	146,w,c	;volatile
 31202                           
 31203                           ; BSR set to: 2
 31204  00929E  0012               	return		;funcret
 31205  0092A0                     __end_of_I2C1_MasterGetRxData:
 31206                           	callstack 0
 31207                           
 31208 ;; *************** function _I2C1_MasterSendNack *****************
 31209 ;; Defined at:
 31210 ;;		line 609 in file "mcc_generated_files/i2c1_master.c"
 31211 ;; Parameters:    Size  Location     Type
 31212 ;;		None
 31213 ;; Auto vars:     Size  Location     Type
 31214 ;;		None
 31215 ;; Return value:  Size  Location     Type
 31216 ;;                  1    wreg      void 
 31217 ;; Registers used:
 31218 ;;		None
 31219 ;; Tracked objects:
 31220 ;;		On entry : 0/2
 31221 ;;		On exit  : 0/0
 31222 ;;		Unchanged: 0/0
 31223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31227 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31228 ;;Total ram usage:        0 bytes
 31229 ;; Hardware stack levels used: 1
 31230 ;; Hardware stack levels required when called: 4
 31231 ;; This function calls:
 31232 ;;		Nothing
 31233 ;; This function is called by:
 31234 ;;		_I2C1_DO_RX_NACK_STOP
 31235 ;;		_I2C1_DO_RX_NACK_RESTART
 31236 ;; This function uses a non-reentrant model
 31237 ;;
 31238                           
 31239                           	psect	text159
 31240  009276                     __ptext159:
 31241                           	callstack 0
 31242  009276                     _I2C1_MasterSendNack:
 31243                           	callstack 16
 31244                           
 31245                           ;mcc_generated_files/i2c1_master.c: 611:     SSP1CON2bits.ACKDT = 1;
 31246                           
 31247                           ; BSR set to: 2
 31248                           ;incstack = 0
 31249  009276  8A97               	bsf	151,5,c	;volatile
 31250                           
 31251                           ;mcc_generated_files/i2c1_master.c: 612:     SSP1CON2bits.ACKEN = 1;
 31252  009278  8897               	bsf	151,4,c	;volatile
 31253  00927A  0012               	return		;funcret
 31254  00927C                     __end_of_I2C1_MasterSendNack:
 31255                           	callstack 0
 31256                           
 31257 ;; *************** function _I2C1_MasterStartRx *****************
 31258 ;; Defined at:
 31259 ;;		line 583 in file "mcc_generated_files/i2c1_master.c"
 31260 ;; Parameters:    Size  Location     Type
 31261 ;;		None
 31262 ;; Auto vars:     Size  Location     Type
 31263 ;;		None
 31264 ;; Return value:  Size  Location     Type
 31265 ;;                  1    wreg      void 
 31266 ;; Registers used:
 31267 ;;		None
 31268 ;; Tracked objects:
 31269 ;;		On entry : 3F/2
 31270 ;;		On exit  : 3F/2
 31271 ;;		Unchanged: 3F/0
 31272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31276 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31277 ;;Total ram usage:        0 bytes
 31278 ;; Hardware stack levels used: 1
 31279 ;; Hardware stack levels required when called: 4
 31280 ;; This function calls:
 31281 ;;		Nothing
 31282 ;; This function is called by:
 31283 ;;		_I2C1_DO_RCEN
 31284 ;; This function uses a non-reentrant model
 31285 ;;
 31286                           
 31287                           	psect	text160
 31288  0092A0                     __ptext160:
 31289                           	callstack 0
 31290  0092A0                     _I2C1_MasterStartRx:
 31291                           	callstack 16
 31292                           
 31293                           ; BSR set to: 2
 31294                           ;mcc_generated_files/i2c1_master.c: 585:     SSP1CON2bits.RCEN = 1;
 31295                           
 31296                           ;incstack = 0
 31297  0092A0  8697               	bsf	151,3,c	;volatile
 31298                           
 31299                           ; BSR set to: 2
 31300  0092A2  0012               	return		;funcret
 31301  0092A4                     __end_of_I2C1_MasterStartRx:
 31302                           	callstack 0
 31303                           
 31304 ;; *************** function _I2C1_CallbackReturnReset *****************
 31305 ;; Defined at:
 31306 ;;		line 525 in file "mcc_generated_files/i2c1_master.c"
 31307 ;; Parameters:    Size  Location     Type
 31308 ;;  funPtr          2   24[COMRAM] PTR void 
 31309 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 31310 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 31311 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 31312 ;; Auto vars:     Size  Location     Type
 31313 ;;		None
 31314 ;; Return value:  Size  Location     Type
 31315 ;;                  1    wreg      enum E360
 31316 ;; Registers used:
 31317 ;;		wreg
 31318 ;; Tracked objects:
 31319 ;;		On entry : 3F/2
 31320 ;;		On exit  : 3F/2
 31321 ;;		Unchanged: 3F/0
 31322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31323 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31326 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31327 ;;Total ram usage:        2 bytes
 31328 ;; Hardware stack levels used: 1
 31329 ;; Hardware stack levels required when called: 4
 31330 ;; This function calls:
 31331 ;;		Nothing
 31332 ;; This function is called by:
 31333 ;;		_I2C1_Open
 31334 ;;		_I2C1_DO_TX
 31335 ;;		_I2C1_DO_RX
 31336 ;;		_I2C1_DO_TX_EMPTY
 31337 ;;		_I2C1_DO_ADDRESS_NACK
 31338 ;; This function uses a non-reentrant model
 31339 ;;
 31340                           
 31341                           	psect	text161
 31342  0092A4                     __ptext161:
 31343                           	callstack 0
 31344  0092A4                     _I2C1_CallbackReturnReset:
 31345                           	callstack 16
 31346                           
 31347                           ; BSR set to: 2
 31348                           ;mcc_generated_files/i2c1_master.c: 525: i2c1_operations_t I2C1_CallbackReturnReset(void
      +                           *funPtr);mcc_generated_files/i2c1_master.c: 526: {;mcc_generated_files/i2c1_master.c: 5
      +                          27:     return I2C1_RESET_LINK;
 31349                           
 31350                           ; BSR set to: 2
 31351                           ;incstack = 0
 31352  0092A4  0E05               	movlw	5
 31353                           
 31354                           ; BSR set to: 2
 31355  0092A6  0012               	return		;funcret
 31356  0092A8                     __end_of_I2C1_CallbackReturnReset:
 31357                           	callstack 0
 31358                           
 31359 ;; *************** function _I2C1_CallbackReturnStop *****************
 31360 ;; Defined at:
 31361 ;;		line 520 in file "mcc_generated_files/i2c1_master.c"
 31362 ;; Parameters:    Size  Location     Type
 31363 ;;  funPtr          2   24[COMRAM] PTR void 
 31364 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 31365 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 31366 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 31367 ;; Auto vars:     Size  Location     Type
 31368 ;;		None
 31369 ;; Return value:  Size  Location     Type
 31370 ;;                  1    wreg      enum E360
 31371 ;; Registers used:
 31372 ;;		wreg
 31373 ;; Tracked objects:
 31374 ;;		On entry : 3F/2
 31375 ;;		On exit  : 3F/2
 31376 ;;		Unchanged: 3F/0
 31377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31378 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31379 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31381 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31382 ;;Total ram usage:        2 bytes
 31383 ;; Hardware stack levels used: 1
 31384 ;; Hardware stack levels required when called: 4
 31385 ;; This function calls:
 31386 ;;		Nothing
 31387 ;; This function is called by:
 31388 ;;		_I2C1_Open
 31389 ;;		_I2C1_SetCallback
 31390 ;;		_I2C1_DO_TX
 31391 ;;		_I2C1_DO_RX
 31392 ;;		_I2C1_DO_TX_EMPTY
 31393 ;;		_I2C1_DO_ADDRESS_NACK
 31394 ;; This function uses a non-reentrant model
 31395 ;;
 31396                           
 31397                           	psect	text162
 31398  0092A8                     __ptext162:
 31399                           	callstack 0
 31400  0092A8                     _I2C1_CallbackReturnStop:
 31401                           	callstack 16
 31402                           
 31403                           ; BSR set to: 2
 31404                           ;mcc_generated_files/i2c1_master.c: 520: i2c1_operations_t I2C1_CallbackReturnStop(void 
      +                          *funPtr);mcc_generated_files/i2c1_master.c: 521: {;mcc_generated_files/i2c1_master.c: 52
      +                          2:     return I2C1_STOP;
 31405                           
 31406                           ; BSR set to: 2
 31407                           ;incstack = 0
 31408  0092A8  0E01               	movlw	1
 31409                           
 31410                           ; BSR set to: 2
 31411  0092AA  0012               	return		;funcret
 31412  0092AC                     __end_of_I2C1_CallbackReturnStop:
 31413                           	callstack 0
 31414                           
 31415 ;; *************** function _rdBlkRegCompleteHandler@i2c1_master_example$F535 *****************
 31416 ;; Defined at:
 31417 ;;		line 176 in file "mcc_generated_files/examples/i2c1_master_example.c"
 31418 ;; Parameters:    Size  Location     Type
 31419 ;;  ptr             2   24[COMRAM] PTR void 
 31420 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 31421 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 31422 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 31423 ;; Auto vars:     Size  Location     Type
 31424 ;;		None
 31425 ;; Return value:  Size  Location     Type
 31426 ;;                  1    wreg      enum E527
 31427 ;; Registers used:
 31428 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31429 ;; Tracked objects:
 31430 ;;		On entry : 3F/2
 31431 ;;		On exit  : 0/0
 31432 ;;		Unchanged: 0/0
 31433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31434 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31435 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31437 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31438 ;;Total ram usage:        2 bytes
 31439 ;; Hardware stack levels used: 1
 31440 ;; Hardware stack levels required when called: 6
 31441 ;; This function calls:
 31442 ;;		_I2C1_SetBuffer
 31443 ;;		_I2C1_SetDataCompleteCallback
 31444 ;; This function is called by:
 31445 ;;		_I2C1_DO_TX
 31446 ;;		_I2C1_DO_RX
 31447 ;;		_I2C1_DO_TX_EMPTY
 31448 ;;		_I2C1_DO_ADDRESS_NACK
 31449 ;; This function uses a non-reentrant model
 31450 ;;
 31451                           
 31452                           	psect	text163
 31453  0088DE                     __ptext163:
 31454                           	callstack 0
 31455  0088DE                     _rdBlkRegCompleteHandler@i2c1_master_example$F535:
 31456                           	callstack 14
 31457                           
 31458                           ; BSR set to: 2
 31459                           ;mcc_generated_files/examples/i2c1_master_example.c: 176: static i2c1_operations_t rdBlk
      +                          RegCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 177: {
      +                          ;mcc_generated_files/examples/i2c1_master_example.c: 178:     I2C1_SetBuffer(((i2c1_buff
      +                          er_t *)ptr)->data,((i2c1_buffer_t*)ptr)->len);
 31460                           
 31461                           ; BSR set to: 2
 31462                           ;incstack = 0
 31463  0088DE  EE20 F002          	lfsr	2,2
 31464  0088E2  5019               	movf	rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr^0,w,c
 31465  0088E4  26D9               	addwf	fsr2l,f,c
 31466  0088E6  501A               	movf	(rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr+1)^0,w,c
 31467  0088E8  22DA               	addwfc	fsr2h,f,c
 31468  0088EA  CFDE F010          	movff	postinc2,I2C1_SetBuffer@buffer
 31469  0088EE  CFDD F011          	movff	postdec2,I2C1_SetBuffer@buffer+1
 31470  0088F2  C019  FFD9         	movff	rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr,fsr2l
 31471  0088F6  C01A  FFDA         	movff	rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr+1,fsr2h
 31472  0088FA  CFDE F012          	movff	postinc2,I2C1_SetBuffer@bufferSize
 31473  0088FE  CFDD F013          	movff	postdec2,I2C1_SetBuffer@bufferSize+1
 31474  008902  EC08  F048         	call	_I2C1_SetBuffer	;wreg free
 31475                           
 31476                           ; BSR set to: 2
 31477                           ;mcc_generated_files/examples/i2c1_master_example.c: 179:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 31478  008906  0E00               	movlw	0
 31479  008908  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 31480  00890A  0E00               	movlw	0
 31481  00890C  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 31482  00890E  0E00               	movlw	0
 31483  008910  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 31484  008912  0E00               	movlw	0
 31485  008914  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 31486  008916  EC51  F048         	call	_I2C1_SetDataCompleteCallback	;wreg free
 31487                           
 31488                           ;mcc_generated_files/examples/i2c1_master_example.c: 180:     return I2C1_RESTART_READ;
 31489  00891A  0E02               	movlw	2
 31490  00891C  0012               	return		;funcret
 31491  00891E                     __end_of_rdBlkRegCompleteHandler@i2c1_master_example$F535:
 31492                           	callstack 0
 31493                           
 31494 ;; *************** function _wr1RegCompleteHandler@i2c1_master_example$F517 *****************
 31495 ;; Defined at:
 31496 ;;		line 162 in file "mcc_generated_files/examples/i2c1_master_example.c"
 31497 ;; Parameters:    Size  Location     Type
 31498 ;;  ptr             2   24[COMRAM] PTR void 
 31499 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 31500 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 31501 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 31502 ;; Auto vars:     Size  Location     Type
 31503 ;;		None
 31504 ;; Return value:  Size  Location     Type
 31505 ;;                  1    wreg      enum E527
 31506 ;; Registers used:
 31507 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31508 ;; Tracked objects:
 31509 ;;		On entry : 3F/2
 31510 ;;		On exit  : 0/0
 31511 ;;		Unchanged: 0/0
 31512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31513 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31516 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31517 ;;Total ram usage:        2 bytes
 31518 ;; Hardware stack levels used: 1
 31519 ;; Hardware stack levels required when called: 6
 31520 ;; This function calls:
 31521 ;;		_I2C1_SetBuffer
 31522 ;;		_I2C1_SetDataCompleteCallback
 31523 ;; This function is called by:
 31524 ;;		_I2C1_DO_TX
 31525 ;;		_I2C1_DO_RX
 31526 ;;		_I2C1_DO_TX_EMPTY
 31527 ;;		_I2C1_DO_ADDRESS_NACK
 31528 ;; This function uses a non-reentrant model
 31529 ;;
 31530                           
 31531                           	psect	text164
 31532  008BF2                     __ptext164:
 31533                           	callstack 0
 31534  008BF2                     _wr1RegCompleteHandler@i2c1_master_example$F517:
 31535                           	callstack 14
 31536                           
 31537                           ; BSR set to: 2
 31538                           ;mcc_generated_files/examples/i2c1_master_example.c: 162: static i2c1_operations_t wr1Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 163: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 164:     I2C1_SetBuffer(ptr,1);
 31539                           
 31540                           ;incstack = 0
 31541  008BF2  C019  F010         	movff	wr1RegCompleteHandler@i2c1_master_example$F517@ptr,I2C1_SetBuffer@buffer
 31542  008BF6  C01A  F011         	movff	wr1RegCompleteHandler@i2c1_master_example$F517@ptr+1,I2C1_SetBuffer@buffer+1
 31543  008BFA  0E00               	movlw	0
 31544  008BFC  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 31545  008BFE  0E01               	movlw	1
 31546  008C00  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 31547  008C02  EC08  F048         	call	_I2C1_SetBuffer	;wreg free
 31548                           
 31549                           ; BSR set to: 2
 31550                           ;mcc_generated_files/examples/i2c1_master_example.c: 165:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 31551  008C06  0E00               	movlw	0
 31552  008C08  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 31553  008C0A  0E00               	movlw	0
 31554  008C0C  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 31555  008C0E  0E00               	movlw	0
 31556  008C10  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 31557  008C12  0E00               	movlw	0
 31558  008C14  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 31559  008C16  EC51  F048         	call	_I2C1_SetDataCompleteCallback	;wreg free
 31560                           
 31561                           ;mcc_generated_files/examples/i2c1_master_example.c: 166:     return I2C1_CONTINUE;
 31562  008C1A  0E04               	movlw	4
 31563  008C1C  0012               	return		;funcret
 31564  008C1E                     __end_of_wr1RegCompleteHandler@i2c1_master_example$F517:
 31565                           	callstack 0
 31566                           
 31567 ;; *************** function _rd2RegCompleteHandler@i2c1_master_example$F511 *****************
 31568 ;; Defined at:
 31569 ;;		line 155 in file "mcc_generated_files/examples/i2c1_master_example.c"
 31570 ;; Parameters:    Size  Location     Type
 31571 ;;  ptr             2   24[COMRAM] PTR void 
 31572 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 31573 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 31574 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 31575 ;; Auto vars:     Size  Location     Type
 31576 ;;		None
 31577 ;; Return value:  Size  Location     Type
 31578 ;;                  1    wreg      enum E527
 31579 ;; Registers used:
 31580 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31581 ;; Tracked objects:
 31582 ;;		On entry : 3F/2
 31583 ;;		On exit  : 0/0
 31584 ;;		Unchanged: 0/0
 31585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31586 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31587 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31589 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31590 ;;Total ram usage:        2 bytes
 31591 ;; Hardware stack levels used: 1
 31592 ;; Hardware stack levels required when called: 6
 31593 ;; This function calls:
 31594 ;;		_I2C1_SetBuffer
 31595 ;;		_I2C1_SetDataCompleteCallback
 31596 ;; This function is called by:
 31597 ;;		_I2C1_DO_TX
 31598 ;;		_I2C1_DO_RX
 31599 ;;		_I2C1_DO_TX_EMPTY
 31600 ;;		_I2C1_DO_ADDRESS_NACK
 31601 ;; This function uses a non-reentrant model
 31602 ;;
 31603                           
 31604                           	psect	text165
 31605  008C1E                     __ptext165:
 31606                           	callstack 0
 31607  008C1E                     _rd2RegCompleteHandler@i2c1_master_example$F511:
 31608                           	callstack 14
 31609                           
 31610                           ; BSR set to: 2
 31611                           ;mcc_generated_files/examples/i2c1_master_example.c: 155: static i2c1_operations_t rd2Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 156: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 157:     I2C1_SetBuffer(ptr,2);
 31612                           
 31613                           ;incstack = 0
 31614  008C1E  C019  F010         	movff	rd2RegCompleteHandler@i2c1_master_example$F511@ptr,I2C1_SetBuffer@buffer
 31615  008C22  C01A  F011         	movff	rd2RegCompleteHandler@i2c1_master_example$F511@ptr+1,I2C1_SetBuffer@buffer+1
 31616  008C26  0E00               	movlw	0
 31617  008C28  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 31618  008C2A  0E02               	movlw	2
 31619  008C2C  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 31620  008C2E  EC08  F048         	call	_I2C1_SetBuffer	;wreg free
 31621                           
 31622                           ; BSR set to: 2
 31623                           ;mcc_generated_files/examples/i2c1_master_example.c: 158:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 31624  008C32  0E00               	movlw	0
 31625  008C34  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 31626  008C36  0E00               	movlw	0
 31627  008C38  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 31628  008C3A  0E00               	movlw	0
 31629  008C3C  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 31630  008C3E  0E00               	movlw	0
 31631  008C40  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 31632  008C42  EC51  F048         	call	_I2C1_SetDataCompleteCallback	;wreg free
 31633                           
 31634                           ;mcc_generated_files/examples/i2c1_master_example.c: 159:     return I2C1_RESTART_READ;
 31635  008C46  0E02               	movlw	2
 31636  008C48  0012               	return		;funcret
 31637  008C4A                     __end_of_rd2RegCompleteHandler@i2c1_master_example$F511:
 31638                           	callstack 0
 31639                           
 31640 ;; *************** function _rd1RegCompleteHandler@i2c1_master_example$F500 *****************
 31641 ;; Defined at:
 31642 ;;		line 148 in file "mcc_generated_files/examples/i2c1_master_example.c"
 31643 ;; Parameters:    Size  Location     Type
 31644 ;;  ptr             2   24[COMRAM] PTR void 
 31645 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 31646 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 31647 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 31648 ;; Auto vars:     Size  Location     Type
 31649 ;;		None
 31650 ;; Return value:  Size  Location     Type
 31651 ;;                  1    wreg      enum E527
 31652 ;; Registers used:
 31653 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31654 ;; Tracked objects:
 31655 ;;		On entry : 3F/2
 31656 ;;		On exit  : 0/0
 31657 ;;		Unchanged: 0/0
 31658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31659 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31662 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31663 ;;Total ram usage:        2 bytes
 31664 ;; Hardware stack levels used: 1
 31665 ;; Hardware stack levels required when called: 6
 31666 ;; This function calls:
 31667 ;;		_I2C1_SetBuffer
 31668 ;;		_I2C1_SetDataCompleteCallback
 31669 ;; This function is called by:
 31670 ;;		_I2C1_Read1ByteRegister
 31671 ;;		_I2C1_DO_TX
 31672 ;;		_I2C1_DO_RX
 31673 ;;		_I2C1_DO_TX_EMPTY
 31674 ;;		_I2C1_DO_ADDRESS_NACK
 31675 ;; This function uses a non-reentrant model
 31676 ;;
 31677                           
 31678                           	psect	text166
 31679  008C4A                     __ptext166:
 31680                           	callstack 0
 31681  008C4A                     _rd1RegCompleteHandler@i2c1_master_example$F500:
 31682                           	callstack 14
 31683                           
 31684                           ; BSR set to: 2
 31685                           ;mcc_generated_files/examples/i2c1_master_example.c: 148: static i2c1_operations_t rd1Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 149: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 150:     I2C1_SetBuffer(ptr,1);
 31686                           
 31687                           ;incstack = 0
 31688  008C4A  C019  F010         	movff	rd1RegCompleteHandler@i2c1_master_example$F500@ptr,I2C1_SetBuffer@buffer
 31689  008C4E  C01A  F011         	movff	rd1RegCompleteHandler@i2c1_master_example$F500@ptr+1,I2C1_SetBuffer@buffer+1
 31690  008C52  0E00               	movlw	0
 31691  008C54  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 31692  008C56  0E01               	movlw	1
 31693  008C58  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 31694  008C5A  EC08  F048         	call	_I2C1_SetBuffer	;wreg free
 31695                           
 31696                           ; BSR set to: 2
 31697                           ;mcc_generated_files/examples/i2c1_master_example.c: 151:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 31698  008C5E  0E00               	movlw	0
 31699  008C60  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 31700  008C62  0E00               	movlw	0
 31701  008C64  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 31702  008C66  0E00               	movlw	0
 31703  008C68  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 31704  008C6A  0E00               	movlw	0
 31705  008C6C  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 31706  008C6E  EC51  F048         	call	_I2C1_SetDataCompleteCallback	;wreg free
 31707                           
 31708                           ;mcc_generated_files/examples/i2c1_master_example.c: 152:     return I2C1_RESTART_READ;
 31709  008C72  0E02               	movlw	2
 31710  008C74  0012               	return		;funcret
 31711  008C76                     __end_of_rd1RegCompleteHandler@i2c1_master_example$F500:
 31712                           	callstack 0
 31713                           
 31714 ;; *************** function _rdBlkRegCompleteHandler *****************
 31715 ;; Defined at:
 31716 ;;		line 140 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 31717 ;; Parameters:    Size  Location     Type
 31718 ;;  p               2   24[COMRAM] PTR void 
 31719 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 31720 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 31721 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 31722 ;; Auto vars:     Size  Location     Type
 31723 ;;		None
 31724 ;; Return value:  Size  Location     Type
 31725 ;;                  1    wreg      enum E360
 31726 ;; Registers used:
 31727 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31728 ;; Tracked objects:
 31729 ;;		On entry : 3F/2
 31730 ;;		On exit  : 0/0
 31731 ;;		Unchanged: 0/0
 31732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31733 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31736 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31737 ;;Total ram usage:        2 bytes
 31738 ;; Hardware stack levels used: 1
 31739 ;; Hardware stack levels required when called: 6
 31740 ;; This function calls:
 31741 ;;		_I2C1_SetBuffer
 31742 ;;		_I2C1_SetDataCompleteCallback
 31743 ;; This function is called by:
 31744 ;;		_i2c_readDataBlock
 31745 ;;		_I2C1_DO_TX
 31746 ;;		_I2C1_DO_RX
 31747 ;;		_I2C1_DO_TX_EMPTY
 31748 ;;		_I2C1_DO_ADDRESS_NACK
 31749 ;; This function uses a non-reentrant model
 31750 ;;
 31751                           
 31752                           	psect	text167
 31753  00891E                     __ptext167:
 31754                           	callstack 0
 31755  00891E                     _rdBlkRegCompleteHandler:
 31756                           	callstack 14
 31757                           
 31758                           ; BSR set to: 2
 31759                           ;mcc_generated_files/drivers/i2c_simple_master.c: 140: static i2c1_operations_t rdBlkReg
      +                          CompleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 141: {;mcc_gen
      +                          erated_files/drivers/i2c_simple_master.c: 142:     I2C1_SetBuffer(((buf_t *)p)->data,((b
      +                          uf_t*)p)->len);
 31760                           
 31761                           ;incstack = 0
 31762  00891E  EE20 F002          	lfsr	2,2
 31763  008922  5019               	movf	rdBlkRegCompleteHandler@p^0,w,c
 31764  008924  26D9               	addwf	fsr2l,f,c
 31765  008926  501A               	movf	(rdBlkRegCompleteHandler@p+1)^0,w,c
 31766  008928  22DA               	addwfc	fsr2h,f,c
 31767  00892A  CFDE F010          	movff	postinc2,I2C1_SetBuffer@buffer
 31768  00892E  CFDD F011          	movff	postdec2,I2C1_SetBuffer@buffer+1
 31769  008932  C019  FFD9         	movff	rdBlkRegCompleteHandler@p,fsr2l
 31770  008936  C01A  FFDA         	movff	rdBlkRegCompleteHandler@p+1,fsr2h
 31771  00893A  CFDE F012          	movff	postinc2,I2C1_SetBuffer@bufferSize
 31772  00893E  CFDD F013          	movff	postdec2,I2C1_SetBuffer@bufferSize+1
 31773  008942  EC08  F048         	call	_I2C1_SetBuffer	;wreg free
 31774                           
 31775                           ; BSR set to: 2
 31776                           ;mcc_generated_files/drivers/i2c_simple_master.c: 143:     I2C1_SetDataCompleteCallback(
      +                          ((void*)0),((void*)0));
 31777  008946  0E00               	movlw	0
 31778  008948  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 31779  00894A  0E00               	movlw	0
 31780  00894C  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 31781  00894E  0E00               	movlw	0
 31782  008950  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 31783  008952  0E00               	movlw	0
 31784  008954  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 31785  008956  EC51  F048         	call	_I2C1_SetDataCompleteCallback	;wreg free
 31786                           
 31787                           ;mcc_generated_files/drivers/i2c_simple_master.c: 144:     return I2C1_RESTART_READ;
 31788  00895A  0E02               	movlw	2
 31789  00895C  0012               	return		;funcret
 31790  00895E                     __end_of_rdBlkRegCompleteHandler:
 31791                           	callstack 0
 31792                           
 31793 ;; *************** function _wr2RegCompleteHandler *****************
 31794 ;; Defined at:
 31795 ;;		line 116 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 31796 ;; Parameters:    Size  Location     Type
 31797 ;;  p               2   24[COMRAM] PTR void 
 31798 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 31799 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 31800 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 31801 ;; Auto vars:     Size  Location     Type
 31802 ;;		None
 31803 ;; Return value:  Size  Location     Type
 31804 ;;                  1    wreg      enum E360
 31805 ;; Registers used:
 31806 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31807 ;; Tracked objects:
 31808 ;;		On entry : 3F/2
 31809 ;;		On exit  : 0/0
 31810 ;;		Unchanged: 0/0
 31811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31812 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31815 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31816 ;;Total ram usage:        2 bytes
 31817 ;; Hardware stack levels used: 1
 31818 ;; Hardware stack levels required when called: 6
 31819 ;; This function calls:
 31820 ;;		_I2C1_SetBuffer
 31821 ;;		_I2C1_SetDataCompleteCallback
 31822 ;; This function is called by:
 31823 ;;		_I2C1_DO_TX
 31824 ;;		_I2C1_DO_RX
 31825 ;;		_I2C1_DO_TX_EMPTY
 31826 ;;		_I2C1_DO_ADDRESS_NACK
 31827 ;; This function uses a non-reentrant model
 31828 ;;
 31829                           
 31830                           	psect	text168
 31831  008C76                     __ptext168:
 31832                           	callstack 0
 31833  008C76                     _wr2RegCompleteHandler:
 31834                           	callstack 14
 31835                           
 31836                           ; BSR set to: 2
 31837                           ;mcc_generated_files/drivers/i2c_simple_master.c: 116: static i2c1_operations_t wr2RegCo
      +                          mpleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 117: {;mcc_gener
      +                          ated_files/drivers/i2c_simple_master.c: 118:     I2C1_SetBuffer(p,2);
 31838                           
 31839                           ;incstack = 0
 31840  008C76  C019  F010         	movff	wr2RegCompleteHandler@p,I2C1_SetBuffer@buffer
 31841  008C7A  C01A  F011         	movff	wr2RegCompleteHandler@p+1,I2C1_SetBuffer@buffer+1
 31842  008C7E  0E00               	movlw	0
 31843  008C80  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 31844  008C82  0E02               	movlw	2
 31845  008C84  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 31846  008C86  EC08  F048         	call	_I2C1_SetBuffer	;wreg free
 31847                           
 31848                           ; BSR set to: 2
 31849                           ;mcc_generated_files/drivers/i2c_simple_master.c: 119:     I2C1_SetDataCompleteCallback(
      +                          ((void*)0),((void*)0));
 31850  008C8A  0E00               	movlw	0
 31851  008C8C  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 31852  008C8E  0E00               	movlw	0
 31853  008C90  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 31854  008C92  0E00               	movlw	0
 31855  008C94  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 31856  008C96  0E00               	movlw	0
 31857  008C98  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 31858  008C9A  EC51  F048         	call	_I2C1_SetDataCompleteCallback	;wreg free
 31859                           
 31860                           ;mcc_generated_files/drivers/i2c_simple_master.c: 120:     return I2C1_CONTINUE;
 31861  008C9E  0E04               	movlw	4
 31862  008CA0  0012               	return		;funcret
 31863  008CA2                     __end_of_wr2RegCompleteHandler:
 31864                           	callstack 0
 31865                           
 31866 ;; *************** function _rd2RegCompleteHandler *****************
 31867 ;; Defined at:
 31868 ;;		line 93 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 31869 ;; Parameters:    Size  Location     Type
 31870 ;;  p               2   24[COMRAM] PTR void 
 31871 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 31872 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 31873 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 31874 ;; Auto vars:     Size  Location     Type
 31875 ;;		None
 31876 ;; Return value:  Size  Location     Type
 31877 ;;                  1    wreg      enum E360
 31878 ;; Registers used:
 31879 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31880 ;; Tracked objects:
 31881 ;;		On entry : 3F/2
 31882 ;;		On exit  : 0/0
 31883 ;;		Unchanged: 0/0
 31884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31885 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31888 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31889 ;;Total ram usage:        2 bytes
 31890 ;; Hardware stack levels used: 1
 31891 ;; Hardware stack levels required when called: 6
 31892 ;; This function calls:
 31893 ;;		_I2C1_SetBuffer
 31894 ;;		_I2C1_SetDataCompleteCallback
 31895 ;; This function is called by:
 31896 ;;		_I2C1_DO_TX
 31897 ;;		_I2C1_DO_RX
 31898 ;;		_I2C1_DO_TX_EMPTY
 31899 ;;		_I2C1_DO_ADDRESS_NACK
 31900 ;; This function uses a non-reentrant model
 31901 ;;
 31902                           
 31903                           	psect	text169
 31904  008CA2                     __ptext169:
 31905                           	callstack 0
 31906  008CA2                     _rd2RegCompleteHandler:
 31907                           	callstack 14
 31908                           
 31909                           ; BSR set to: 2
 31910                           ;mcc_generated_files/drivers/i2c_simple_master.c: 93: static i2c1_operations_t rd2RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 94: {;mcc_generat
      +                          ed_files/drivers/i2c_simple_master.c: 95:     I2C1_SetBuffer(p,2);
 31911                           
 31912                           ;incstack = 0
 31913  008CA2  C019  F010         	movff	rd2RegCompleteHandler@p,I2C1_SetBuffer@buffer
 31914  008CA6  C01A  F011         	movff	rd2RegCompleteHandler@p+1,I2C1_SetBuffer@buffer+1
 31915  008CAA  0E00               	movlw	0
 31916  008CAC  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 31917  008CAE  0E02               	movlw	2
 31918  008CB0  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 31919  008CB2  EC08  F048         	call	_I2C1_SetBuffer	;wreg free
 31920                           
 31921                           ; BSR set to: 2
 31922                           ;mcc_generated_files/drivers/i2c_simple_master.c: 96:     I2C1_SetDataCompleteCallback((
      +                          (void*)0),((void*)0));
 31923  008CB6  0E00               	movlw	0
 31924  008CB8  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 31925  008CBA  0E00               	movlw	0
 31926  008CBC  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 31927  008CBE  0E00               	movlw	0
 31928  008CC0  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 31929  008CC2  0E00               	movlw	0
 31930  008CC4  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 31931  008CC6  EC51  F048         	call	_I2C1_SetDataCompleteCallback	;wreg free
 31932                           
 31933                           ;mcc_generated_files/drivers/i2c_simple_master.c: 97:     return I2C1_RESTART_READ;
 31934  008CCA  0E02               	movlw	2
 31935  008CCC  0012               	return		;funcret
 31936  008CCE                     __end_of_rd2RegCompleteHandler:
 31937                           	callstack 0
 31938                           
 31939 ;; *************** function _rd1RegCompleteHandler *****************
 31940 ;; Defined at:
 31941 ;;		line 64 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 31942 ;; Parameters:    Size  Location     Type
 31943 ;;  p               2   24[COMRAM] PTR void 
 31944 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 31945 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 31946 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 31947 ;; Auto vars:     Size  Location     Type
 31948 ;;		None
 31949 ;; Return value:  Size  Location     Type
 31950 ;;                  1    wreg      enum E360
 31951 ;; Registers used:
 31952 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31953 ;; Tracked objects:
 31954 ;;		On entry : 3F/2
 31955 ;;		On exit  : 0/0
 31956 ;;		Unchanged: 0/0
 31957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31958 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31961 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31962 ;;Total ram usage:        2 bytes
 31963 ;; Hardware stack levels used: 1
 31964 ;; Hardware stack levels required when called: 6
 31965 ;; This function calls:
 31966 ;;		_I2C1_SetBuffer
 31967 ;;		_I2C1_SetDataCompleteCallback
 31968 ;; This function is called by:
 31969 ;;		_I2C1_DO_TX
 31970 ;;		_I2C1_DO_RX
 31971 ;;		_I2C1_DO_TX_EMPTY
 31972 ;;		_I2C1_DO_ADDRESS_NACK
 31973 ;; This function uses a non-reentrant model
 31974 ;;
 31975                           
 31976                           	psect	text170
 31977  008CCE                     __ptext170:
 31978                           	callstack 0
 31979  008CCE                     _rd1RegCompleteHandler:
 31980                           	callstack 14
 31981                           
 31982                           ; BSR set to: 2
 31983                           ;mcc_generated_files/drivers/i2c_simple_master.c: 64: static i2c1_operations_t rd1RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 65: {;mcc_generat
      +                          ed_files/drivers/i2c_simple_master.c: 66:     I2C1_SetBuffer(p,1);
 31984                           
 31985                           ;incstack = 0
 31986  008CCE  C019  F010         	movff	rd1RegCompleteHandler@p,I2C1_SetBuffer@buffer
 31987  008CD2  C01A  F011         	movff	rd1RegCompleteHandler@p+1,I2C1_SetBuffer@buffer+1
 31988  008CD6  0E00               	movlw	0
 31989  008CD8  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 31990  008CDA  0E01               	movlw	1
 31991  008CDC  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 31992  008CDE  EC08  F048         	call	_I2C1_SetBuffer	;wreg free
 31993                           
 31994                           ; BSR set to: 2
 31995                           ;mcc_generated_files/drivers/i2c_simple_master.c: 67:     I2C1_SetDataCompleteCallback((
      +                          (void*)0),((void*)0));
 31996  008CE2  0E00               	movlw	0
 31997  008CE4  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 31998  008CE6  0E00               	movlw	0
 31999  008CE8  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 32000  008CEA  0E00               	movlw	0
 32001  008CEC  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 32002  008CEE  0E00               	movlw	0
 32003  008CF0  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 32004  008CF2  EC51  F048         	call	_I2C1_SetDataCompleteCallback	;wreg free
 32005                           
 32006                           ;mcc_generated_files/drivers/i2c_simple_master.c: 68:     return I2C1_RESTART_READ;
 32007  008CF6  0E02               	movlw	2
 32008  008CF8  0012               	return		;funcret
 32009  008CFA                     __end_of_rd1RegCompleteHandler:
 32010                           	callstack 0
 32011                           
 32012 ;; *************** function _wr1RegCompleteHandler *****************
 32013 ;; Defined at:
 32014 ;;		line 33 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 32015 ;; Parameters:    Size  Location     Type
 32016 ;;  p               2   24[COMRAM] PTR void 
 32017 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 32018 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 32019 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 32020 ;; Auto vars:     Size  Location     Type
 32021 ;;		None
 32022 ;; Return value:  Size  Location     Type
 32023 ;;                  1    wreg      enum E360
 32024 ;; Registers used:
 32025 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32026 ;; Tracked objects:
 32027 ;;		On entry : 3F/2
 32028 ;;		On exit  : 0/0
 32029 ;;		Unchanged: 0/0
 32030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32031 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32034 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32035 ;;Total ram usage:        2 bytes
 32036 ;; Hardware stack levels used: 1
 32037 ;; Hardware stack levels required when called: 6
 32038 ;; This function calls:
 32039 ;;		_I2C1_SetBuffer
 32040 ;;		_I2C1_SetDataCompleteCallback
 32041 ;; This function is called by:
 32042 ;;		_I2C1_DO_TX
 32043 ;;		_I2C1_DO_RX
 32044 ;;		_I2C1_DO_TX_EMPTY
 32045 ;;		_I2C1_DO_ADDRESS_NACK
 32046 ;; This function uses a non-reentrant model
 32047 ;;
 32048                           
 32049                           	psect	text171
 32050  008CFA                     __ptext171:
 32051                           	callstack 0
 32052  008CFA                     _wr1RegCompleteHandler:
 32053                           	callstack 14
 32054                           
 32055                           ; BSR set to: 2
 32056                           ;mcc_generated_files/drivers/i2c_simple_master.c: 33: static i2c1_operations_t wr1RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 34: {;mcc_generat
      +                          ed_files/drivers/i2c_simple_master.c: 35:     I2C1_SetBuffer(p,1);
 32057                           
 32058                           ;incstack = 0
 32059  008CFA  C019  F010         	movff	wr1RegCompleteHandler@p,I2C1_SetBuffer@buffer
 32060  008CFE  C01A  F011         	movff	wr1RegCompleteHandler@p+1,I2C1_SetBuffer@buffer+1
 32061  008D02  0E00               	movlw	0
 32062  008D04  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 32063  008D06  0E01               	movlw	1
 32064  008D08  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 32065  008D0A  EC08  F048         	call	_I2C1_SetBuffer	;wreg free
 32066                           
 32067                           ; BSR set to: 2
 32068                           ;mcc_generated_files/drivers/i2c_simple_master.c: 36:     I2C1_SetDataCompleteCallback((
      +                          (void*)0),((void*)0));
 32069  008D0E  0E00               	movlw	0
 32070  008D10  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 32071  008D12  0E00               	movlw	0
 32072  008D14  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 32073  008D16  0E00               	movlw	0
 32074  008D18  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 32075  008D1A  0E00               	movlw	0
 32076  008D1C  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 32077  008D1E  EC51  F048         	call	_I2C1_SetDataCompleteCallback	;wreg free
 32078                           
 32079                           ;mcc_generated_files/drivers/i2c_simple_master.c: 37:     return I2C1_CONTINUE;
 32080  008D22  0E04               	movlw	4
 32081  008D24  0012               	return		;funcret
 32082  008D26                     __end_of_wr1RegCompleteHandler:
 32083                           	callstack 0
 32084                           
 32085 ;; *************** function _wr2RegCompleteHandler@i2c1_master_example$F523 *****************
 32086 ;; Defined at:
 32087 ;;		line 169 in file "mcc_generated_files/examples/i2c1_master_example.c"
 32088 ;; Parameters:    Size  Location     Type
 32089 ;;  ptr             2   24[COMRAM] PTR void 
 32090 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 32091 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 32092 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 32093 ;; Auto vars:     Size  Location     Type
 32094 ;;		None
 32095 ;; Return value:  Size  Location     Type
 32096 ;;                  1    wreg      enum E527
 32097 ;; Registers used:
 32098 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32099 ;; Tracked objects:
 32100 ;;		On entry : 3F/2
 32101 ;;		On exit  : 0/0
 32102 ;;		Unchanged: 0/0
 32103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32104 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32107 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32108 ;;Total ram usage:        2 bytes
 32109 ;; Hardware stack levels used: 1
 32110 ;; Hardware stack levels required when called: 6
 32111 ;; This function calls:
 32112 ;;		_I2C1_SetBuffer
 32113 ;;		_I2C1_SetDataCompleteCallback
 32114 ;; This function is called by:
 32115 ;;		_I2C1_DO_TX
 32116 ;;		_I2C1_DO_RX
 32117 ;;		_I2C1_DO_TX_EMPTY
 32118 ;;		_I2C1_DO_ADDRESS_NACK
 32119 ;; This function uses a non-reentrant model
 32120 ;;
 32121                           
 32122                           	psect	text172
 32123  008D26                     __ptext172:
 32124                           	callstack 0
 32125  008D26                     _wr2RegCompleteHandler@i2c1_master_example$F523:
 32126                           	callstack 14
 32127                           
 32128                           ; BSR set to: 2
 32129                           ;mcc_generated_files/examples/i2c1_master_example.c: 169: static i2c1_operations_t wr2Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 170: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 171:     I2C1_SetBuffer(ptr,2);
 32130                           
 32131                           ;incstack = 0
 32132  008D26  C019  F010         	movff	wr2RegCompleteHandler@i2c1_master_example$F523@ptr,I2C1_SetBuffer@buffer
 32133  008D2A  C01A  F011         	movff	wr2RegCompleteHandler@i2c1_master_example$F523@ptr+1,I2C1_SetBuffer@buffer+1
 32134  008D2E  0E00               	movlw	0
 32135  008D30  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 32136  008D32  0E02               	movlw	2
 32137  008D34  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 32138  008D36  EC08  F048         	call	_I2C1_SetBuffer	;wreg free
 32139                           
 32140                           ; BSR set to: 2
 32141                           ;mcc_generated_files/examples/i2c1_master_example.c: 172:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 32142  008D3A  0E00               	movlw	0
 32143  008D3C  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 32144  008D3E  0E00               	movlw	0
 32145  008D40  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 32146  008D42  0E00               	movlw	0
 32147  008D44  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 32148  008D46  0E00               	movlw	0
 32149  008D48  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 32150  008D4A  EC51  F048         	call	_I2C1_SetDataCompleteCallback	;wreg free
 32151                           
 32152                           ;mcc_generated_files/examples/i2c1_master_example.c: 173:     return I2C1_CONTINUE;
 32153  008D4E  0E04               	movlw	4
 32154  008D50  0012               	return		;funcret
 32155  008D52                     __end_of_wr2RegCompleteHandler@i2c1_master_example$F523:
 32156                           	callstack 0
 32157                           
 32158 ;; *************** function _I2C1_SetDataCompleteCallback *****************
 32159 ;; Defined at:
 32160 ;;		line 273 in file "mcc_generated_files/i2c1_master.c"
 32161 ;; Parameters:    Size  Location     Type
 32162 ;;  cb              2   20[COMRAM] PTR FTN(PTR void ,)enum 
 32163 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler@i2c1_master_example$F535(1), wr2RegCompleteHandler@i2c1_master_exa
      +mple$F523(1), wr1RegCompleteHandler@i2c1_master_example$F517(1), 
 32164 ;;		 -> rd2RegCompleteHandler@i2c1_master_example$F511(1), rd1RegCompleteHandler@i2c1_master_example$F500(1), rdBlkRegCo
      +mpleteHandler(1), wr2RegCompleteHandler(1), 
 32165 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 32166 ;;  ptr             2   22[COMRAM] PTR void 
 32167 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 32168 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 32169 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 32170 ;; Auto vars:     Size  Location     Type
 32171 ;;		None
 32172 ;; Return value:  Size  Location     Type
 32173 ;;                  1    wreg      void 
 32174 ;; Registers used:
 32175 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32176 ;; Tracked objects:
 32177 ;;		On entry : 33/2
 32178 ;;		On exit  : 0/0
 32179 ;;		Unchanged: 0/0
 32180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32181 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32184 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32185 ;;Total ram usage:        4 bytes
 32186 ;; Hardware stack levels used: 1
 32187 ;; Hardware stack levels required when called: 5
 32188 ;; This function calls:
 32189 ;;		_I2C1_SetCallback
 32190 ;; This function is called by:
 32191 ;;		_wr1RegCompleteHandler
 32192 ;;		_rd1RegCompleteHandler
 32193 ;;		_rd2RegCompleteHandler
 32194 ;;		_wr2RegCompleteHandler
 32195 ;;		_rdBlkRegCompleteHandler
 32196 ;;		_i2c_readDataBlock
 32197 ;;		_I2C1_Read1ByteRegister
 32198 ;;		_rd1RegCompleteHandler@i2c1_master_example$F500
 32199 ;;		_rd2RegCompleteHandler@i2c1_master_example$F511
 32200 ;;		_wr1RegCompleteHandler@i2c1_master_example$F517
 32201 ;;		_wr2RegCompleteHandler@i2c1_master_example$F523
 32202 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F535
 32203 ;; This function uses a non-reentrant model
 32204 ;;
 32205                           
 32206                           	psect	text173
 32207  0090A2                     __ptext173:
 32208                           	callstack 0
 32209  0090A2                     _I2C1_SetDataCompleteCallback:
 32210                           	callstack 20
 32211                           
 32212                           ;mcc_generated_files/i2c1_master.c: 273: void I2C1_SetDataCompleteCallback(i2c1_callback
      +                          _t cb, void *ptr);mcc_generated_files/i2c1_master.c: 274: {;mcc_generated_files/i2c1_mas
      +                          ter.c: 275:     I2C1_SetCallback(I2C1_DATA_COMPLETE, cb, ptr);
 32213                           
 32214                           ;incstack = 0
 32215  0090A2  C015  F010         	movff	I2C1_SetDataCompleteCallback@cb,I2C1_SetCallback@cb
 32216  0090A6  C016  F011         	movff	I2C1_SetDataCompleteCallback@cb+1,I2C1_SetCallback@cb+1
 32217  0090AA  C017  F012         	movff	I2C1_SetDataCompleteCallback@ptr,I2C1_SetCallback@ptr
 32218  0090AE  C018  F013         	movff	I2C1_SetDataCompleteCallback@ptr+1,I2C1_SetCallback@ptr+1
 32219  0090B2  0E00               	movlw	0
 32220  0090B4  ECF5  F03F         	call	_I2C1_SetCallback
 32221  0090B8  0012               	return		;funcret
 32222  0090BA                     __end_of_I2C1_SetDataCompleteCallback:
 32223                           	callstack 0
 32224                           
 32225 ;; *************** function _I2C1_SetCallback *****************
 32226 ;; Defined at:
 32227 ;;		line 298 in file "mcc_generated_files/i2c1_master.c"
 32228 ;; Parameters:    Size  Location     Type
 32229 ;;  idx             1    wreg     enum E10460
 32230 ;;  cb              2   15[COMRAM] PTR FTN(PTR void ,)enum 
 32231 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler@i2c1_master_example$F535(1), wr2RegCompleteHandler@i2c1_master_exa
      +mple$F523(1), wr1RegCompleteHandler@i2c1_master_example$F517(1), 
 32232 ;;		 -> rd2RegCompleteHandler@i2c1_master_example$F511(1), rd1RegCompleteHandler@i2c1_master_example$F500(1), rdBlkRegCo
      +mpleteHandler(1), wr2RegCompleteHandler(1), 
 32233 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 32234 ;;  ptr             2   17[COMRAM] PTR void 
 32235 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 32236 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 32237 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 32238 ;; Auto vars:     Size  Location     Type
 32239 ;;  idx             1   19[COMRAM] enum E10460
 32240 ;; Return value:  Size  Location     Type
 32241 ;;                  1    wreg      void 
 32242 ;; Registers used:
 32243 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 32244 ;; Tracked objects:
 32245 ;;		On entry : 33/2
 32246 ;;		On exit  : 0/0
 32247 ;;		Unchanged: 0/0
 32248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32249 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32250 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32252 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32253 ;;Total ram usage:        5 bytes
 32254 ;; Hardware stack levels used: 1
 32255 ;; Hardware stack levels required when called: 4
 32256 ;; This function calls:
 32257 ;;		Nothing
 32258 ;; This function is called by:
 32259 ;;		_I2C1_SetDataCompleteCallback
 32260 ;;		_I2C1_SetAddressNackCallback
 32261 ;; This function uses a non-reentrant model
 32262 ;;
 32263                           
 32264                           	psect	text174
 32265  007FEA                     __ptext174:
 32266                           	callstack 0
 32267  007FEA                     _I2C1_SetCallback:
 32268                           	callstack 20
 32269                           
 32270                           ;incstack = 0
 32271                           ;I2C1_SetCallback@idx stored from wreg
 32272  007FEA  6E14               	movwf	I2C1_SetCallback@idx^0,c
 32273                           
 32274                           ;mcc_generated_files/i2c1_master.c: 298: static void I2C1_SetCallback(i2c1_callbackIndex
      +                          _t idx, i2c1_callback_t cb, void *ptr);mcc_generated_files/i2c1_master.c: 299: {;mcc_gen
      +                          erated_files/i2c1_master.c: 300:     if(cb)
 32275  007FEC  5010               	movf	I2C1_SetCallback@cb^0,w,c
 32276  007FEE  1011               	iorwf	(I2C1_SetCallback@cb+1)^0,w,c
 32277  007FF0  B4D8               	btfsc	status,2,c
 32278  007FF2  D019               	goto	l18895
 32279                           
 32280                           ;mcc_generated_files/i2c1_master.c: 301:     {;mcc_generated_files/i2c1_master.c: 302:  
      +                                 I2C1_Status.callbackTable[idx] = cb;
 32281  007FF4  5014               	movf	I2C1_SetCallback@idx^0,w,c
 32282  007FF6  0D02               	mullw	2
 32283  007FF8  0E3C               	movlw	low _I2C1_Status
 32284  007FFA  24F3               	addwf	243,w,c
 32285  007FFC  6ED9               	movwf	fsr2l,c
 32286  007FFE  0E02               	movlw	high _I2C1_Status
 32287  008000  20F4               	addwfc	prodh,w,c
 32288  008002  6EDA               	movwf	fsr2h,c
 32289  008004  C010  FFDE         	movff	I2C1_SetCallback@cb,postinc2
 32290  008008  C011  FFDD         	movff	I2C1_SetCallback@cb+1,postdec2
 32291                           
 32292                           ;mcc_generated_files/i2c1_master.c: 303:         I2C1_Status.callbackPayload[idx] = ptr;
 32293  00800C  5014               	movf	I2C1_SetCallback@idx^0,w,c
 32294  00800E  0D02               	mullw	2
 32295  008010  0E48               	movlw	low (_I2C1_Status+12)
 32296  008012  24F3               	addwf	243,w,c
 32297  008014  6ED9               	movwf	fsr2l,c
 32298  008016  0E02               	movlw	high (_I2C1_Status+12)
 32299  008018  20F4               	addwfc	prodh,w,c
 32300  00801A  6EDA               	movwf	fsr2h,c
 32301  00801C  C012  FFDE         	movff	I2C1_SetCallback@ptr,postinc2
 32302  008020  C013  FFDD         	movff	I2C1_SetCallback@ptr+1,postdec2
 32303                           
 32304                           ;mcc_generated_files/i2c1_master.c: 304:     }
 32305  008024  0012               	return	
 32306  008026                     l18895:
 32307                           
 32308                           ;mcc_generated_files/i2c1_master.c: 306:     {;mcc_generated_files/i2c1_master.c: 307:  
      +                                 I2C1_Status.callbackTable[idx] = I2C1_CallbackReturnStop;
 32309  008026  5014               	movf	I2C1_SetCallback@idx^0,w,c
 32310  008028  0D02               	mullw	2
 32311  00802A  0E3C               	movlw	low _I2C1_Status
 32312  00802C  24F3               	addwf	243,w,c
 32313  00802E  6ED9               	movwf	fsr2l,c
 32314  008030  0E02               	movlw	high _I2C1_Status
 32315  008032  20F4               	addwfc	prodh,w,c
 32316  008034  6EDA               	movwf	fsr2h,c
 32317  008036  0EA8               	movlw	low _I2C1_CallbackReturnStop
 32318  008038  6EDE               	movwf	postinc2,c
 32319  00803A  0E92               	movlw	high _I2C1_CallbackReturnStop
 32320  00803C  6EDD               	movwf	postdec2,c
 32321                           
 32322                           ;mcc_generated_files/i2c1_master.c: 308:         I2C1_Status.callbackPayload[idx] = ((vo
      +                          id*)0);
 32323  00803E  5014               	movf	I2C1_SetCallback@idx^0,w,c
 32324  008040  0D02               	mullw	2
 32325  008042  0E48               	movlw	low (_I2C1_Status+12)
 32326  008044  24F3               	addwf	243,w,c
 32327  008046  6ED9               	movwf	fsr2l,c
 32328  008048  0E02               	movlw	high (_I2C1_Status+12)
 32329  00804A  20F4               	addwfc	prodh,w,c
 32330  00804C  6EDA               	movwf	fsr2h,c
 32331  00804E  0E00               	movlw	0
 32332  008050  6EDE               	movwf	postinc2,c
 32333  008052  0E00               	movlw	0
 32334  008054  6EDD               	movwf	postdec2,c
 32335  008056  0012               	return		;funcret
 32336  008058                     __end_of_I2C1_SetCallback:
 32337                           	callstack 0
 32338                           
 32339 ;; *************** function _I2C1_SetBuffer *****************
 32340 ;; Defined at:
 32341 ;;		line 263 in file "mcc_generated_files/i2c1_master.c"
 32342 ;; Parameters:    Size  Location     Type
 32343 ;;  buffer          2   15[COMRAM] PTR void 
 32344 ;;		 -> cmdMemoryIsEmpty@tempSerial(4), memoryTEMP(16), var_sys_NVM(64), I2C1_ReadDataBlock@reg(1), 
 32345 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_WriteNBytes@dat(17), I2C1_Write2ByteRegister@reg(1), I2C1_Write2ByteRegi
      +ster@data(2), 
 32346 ;;		 -> I2C1_Write1ByteRegister@reg(1), I2C1_Write1ByteRegister@data(1), I2C1_Read2ByteRegister@reg(1), I2C1_Read2ByteRe
      +gister@returnValue(2), 
 32347 ;;		 -> I2C1_Read1ByteRegister@reg(1), I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@reg(2), i2c_readDataBloc
      +k@d(4), 
 32348 ;;		 -> i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@reg(1), i2c_read2ByteRegist
      +er@result(2), 
 32349 ;;		 -> i2c_read1ByteRegister@reg(1), i2c_read1ByteRegister@d2(1), i2c_writeNBytes@dat(17), i2c_write1ByteRegister@reg(1
      +), 
 32350 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 32351 ;;  bufferSize      2   17[COMRAM] unsigned int 
 32352 ;; Auto vars:     Size  Location     Type
 32353 ;;		None
 32354 ;; Return value:  Size  Location     Type
 32355 ;;                  1    wreg      void 
 32356 ;; Registers used:
 32357 ;;		wreg, status,2, status,0
 32358 ;; Tracked objects:
 32359 ;;		On entry : 0/2
 32360 ;;		On exit  : 3F/2
 32361 ;;		Unchanged: 0/0
 32362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32363 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32366 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32367 ;;Total ram usage:        4 bytes
 32368 ;; Hardware stack levels used: 1
 32369 ;; Hardware stack levels required when called: 4
 32370 ;; This function calls:
 32371 ;;		Nothing
 32372 ;; This function is called by:
 32373 ;;		_wr1RegCompleteHandler
 32374 ;;		_i2c_writeNBytes
 32375 ;;		_rd1RegCompleteHandler
 32376 ;;		_rd2RegCompleteHandler
 32377 ;;		_wr2RegCompleteHandler
 32378 ;;		_rdBlkRegCompleteHandler
 32379 ;;		_i2c_readDataBlock
 32380 ;;		_I2C1_Read1ByteRegister
 32381 ;;		_rd1RegCompleteHandler@i2c1_master_example$F500
 32382 ;;		_rd2RegCompleteHandler@i2c1_master_example$F511
 32383 ;;		_wr1RegCompleteHandler@i2c1_master_example$F517
 32384 ;;		_wr2RegCompleteHandler@i2c1_master_example$F523
 32385 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F535
 32386 ;; This function uses a non-reentrant model
 32387 ;;
 32388                           
 32389                           	psect	text175
 32390  009010                     __ptext175:
 32391                           	callstack 0
 32392  009010                     _I2C1_SetBuffer:
 32393                           	callstack 21
 32394                           
 32395                           ;mcc_generated_files/i2c1_master.c: 263: void I2C1_SetBuffer(void *buffer, size_t buffer
      +                          Size);mcc_generated_files/i2c1_master.c: 264: {;mcc_generated_files/i2c1_master.c: 265: 
      +                              if(I2C1_Status.bufferFree)
 32396                           
 32397                           ;incstack = 0
 32398  009010  0102               	movlb	2	; () banked
 32399  009012  A75F               	btfss	(_I2C1_Status+35)& (0+255),3,b
 32400  009014  0012               	return	
 32401                           
 32402                           ; BSR set to: 2
 32403                           ;mcc_generated_files/i2c1_master.c: 266:     {;mcc_generated_files/i2c1_master.c: 267:  
      +                                 I2C1_Status.data_ptr = buffer;
 32404  009016  C010  F259         	movff	I2C1_SetBuffer@buffer,_I2C1_Status+29
 32405  00901A  C011  F25A         	movff	I2C1_SetBuffer@buffer+1,_I2C1_Status+30
 32406                           
 32407                           ; BSR set to: 2
 32408                           ;mcc_generated_files/i2c1_master.c: 268:         I2C1_Status.data_length = bufferSize;
 32409  00901E  C012  F25B         	movff	I2C1_SetBuffer@bufferSize,_I2C1_Status+31
 32410  009022  C013  F25C         	movff	I2C1_SetBuffer@bufferSize+1,_I2C1_Status+32
 32411                           
 32412                           ; BSR set to: 2
 32413                           ;mcc_generated_files/i2c1_master.c: 269:         I2C1_Status.bufferFree = 0;
 32414  009026  975F               	bcf	(_I2C1_Status+35)& (0+255),3,b
 32415                           
 32416                           ; BSR set to: 2
 32417  009028  0012               	return		;funcret
 32418  00902A                     __end_of_I2C1_SetBuffer:
 32419                           	callstack 0
 32420                           
 32421 ;; *************** function _I2C1_MasterStop *****************
 32422 ;; Defined at:
 32423 ;;		line 593 in file "mcc_generated_files/i2c1_master.c"
 32424 ;; Parameters:    Size  Location     Type
 32425 ;;		None
 32426 ;; Auto vars:     Size  Location     Type
 32427 ;;		None
 32428 ;; Return value:  Size  Location     Type
 32429 ;;                  1    wreg      void 
 32430 ;; Registers used:
 32431 ;;		None
 32432 ;; Tracked objects:
 32433 ;;		On entry : 0/2
 32434 ;;		On exit  : 0/0
 32435 ;;		Unchanged: 0/0
 32436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32440 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32441 ;;Total ram usage:        0 bytes
 32442 ;; Hardware stack levels used: 1
 32443 ;; Hardware stack levels required when called: 4
 32444 ;; This function calls:
 32445 ;;		Nothing
 32446 ;; This function is called by:
 32447 ;;		_I2C1_DO_SEND_STOP
 32448 ;; This function uses a non-reentrant model
 32449 ;;
 32450                           
 32451                           	psect	text176
 32452  0092AC                     __ptext176:
 32453                           	callstack 0
 32454  0092AC                     _I2C1_MasterStop:
 32455                           	callstack 15
 32456                           
 32457                           ;mcc_generated_files/i2c1_master.c: 595:     SSP1CON2bits.PEN = 1;
 32458                           
 32459                           ; BSR set to: 2
 32460                           ;incstack = 0
 32461  0092AC  8497               	bsf	151,2,c	;volatile
 32462  0092AE  0012               	return		;funcret
 32463  0092B0                     __end_of_I2C1_MasterStop:
 32464                           	callstack 0
 32465                           
 32466 ;; *************** function _I2C1_MasterEnableRestart *****************
 32467 ;; Defined at:
 32468 ;;		line 573 in file "mcc_generated_files/i2c1_master.c"
 32469 ;; Parameters:    Size  Location     Type
 32470 ;;		None
 32471 ;; Auto vars:     Size  Location     Type
 32472 ;;		None
 32473 ;; Return value:  Size  Location     Type
 32474 ;;                  1    wreg      void 
 32475 ;; Registers used:
 32476 ;;		None
 32477 ;; Tracked objects:
 32478 ;;		On entry : 0/2
 32479 ;;		On exit  : 0/0
 32480 ;;		Unchanged: 0/0
 32481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32483 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32485 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32486 ;;Total ram usage:        0 bytes
 32487 ;; Hardware stack levels used: 1
 32488 ;; Hardware stack levels required when called: 4
 32489 ;; This function calls:
 32490 ;;		Nothing
 32491 ;; This function is called by:
 32492 ;;		_I2C1_DO_SEND_RESTART_READ
 32493 ;;		_I2C1_DO_SEND_RESTART_WRITE
 32494 ;;		_I2C1_DO_SEND_RESTART
 32495 ;; This function uses a non-reentrant model
 32496 ;;
 32497                           
 32498                           	psect	text177
 32499  0092B0                     __ptext177:
 32500                           	callstack 0
 32501  0092B0                     _I2C1_MasterEnableRestart:
 32502                           	callstack 15
 32503                           
 32504                           ;mcc_generated_files/i2c1_master.c: 575:     SSP1CON2bits.RSEN = 1;
 32505                           
 32506                           ;incstack = 0
 32507  0092B0  8297               	bsf	151,1,c	;volatile
 32508  0092B2  0012               	return		;funcret
 32509  0092B4                     __end_of_I2C1_MasterEnableRestart:
 32510                           	callstack 0
 32511                           
 32512 ;; *************** function _I2C1_MasterStart *****************
 32513 ;; Defined at:
 32514 ;;		line 588 in file "mcc_generated_files/i2c1_master.c"
 32515 ;; Parameters:    Size  Location     Type
 32516 ;;		None
 32517 ;; Auto vars:     Size  Location     Type
 32518 ;;		None
 32519 ;; Return value:  Size  Location     Type
 32520 ;;                  1    wreg      void 
 32521 ;; Registers used:
 32522 ;;		None
 32523 ;; Tracked objects:
 32524 ;;		On entry : 3F/2
 32525 ;;		On exit  : 3F/2
 32526 ;;		Unchanged: 3F/0
 32527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32531 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32532 ;;Total ram usage:        0 bytes
 32533 ;; Hardware stack levels used: 1
 32534 ;; Hardware stack levels required when called: 4
 32535 ;; This function calls:
 32536 ;;		Nothing
 32537 ;; This function is called by:
 32538 ;;		_I2C1_MasterOperation
 32539 ;; This function uses a non-reentrant model
 32540 ;;
 32541                           
 32542                           	psect	text178
 32543  0092B4                     __ptext178:
 32544                           	callstack 0
 32545  0092B4                     _I2C1_MasterStart:
 32546                           	callstack 19
 32547                           
 32548                           ; BSR set to: 2
 32549                           ;mcc_generated_files/i2c1_master.c: 590:     SSP1CON2bits.SEN = 1;
 32550                           
 32551                           ;incstack = 0
 32552  0092B4  8097               	bsf	151,0,c	;volatile
 32553                           
 32554                           ; BSR set to: 2
 32555  0092B6  0012               	return		;funcret
 32556  0092B8                     __end_of_I2C1_MasterStart:
 32557                           	callstack 0
 32558                           
 32559 ;; *************** function _I2C1_Close *****************
 32560 ;; Defined at:
 32561 ;;		line 209 in file "mcc_generated_files/i2c1_master.c"
 32562 ;; Parameters:    Size  Location     Type
 32563 ;;		None
 32564 ;; Auto vars:     Size  Location     Type
 32565 ;;  returnValue     1   15[COMRAM] enum E355
 32566 ;; Return value:  Size  Location     Type
 32567 ;;                  1    wreg      enum E355
 32568 ;; Registers used:
 32569 ;;		wreg, status,2, cstack
 32570 ;; Tracked objects:
 32571 ;;		On entry : 0/2
 32572 ;;		On exit  : 33/2
 32573 ;;		Unchanged: 0/0
 32574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32576 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32578 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32579 ;;Total ram usage:        1 bytes
 32580 ;; Hardware stack levels used: 1
 32581 ;; Hardware stack levels required when called: 5
 32582 ;; This function calls:
 32583 ;;		_I2C1_MasterClearIrq
 32584 ;;		_I2C1_MasterClose
 32585 ;;		_I2C1_MasterDisableIrq
 32586 ;; This function is called by:
 32587 ;;		_i2c_writeNBytes
 32588 ;;		_i2c_readDataBlock
 32589 ;;		_I2C1_Read1ByteRegister
 32590 ;; This function uses a non-reentrant model
 32591 ;;
 32592                           
 32593                           	psect	text179
 32594  008EF4                     __ptext179:
 32595                           	callstack 0
 32596  008EF4                     _I2C1_Close:
 32597                           	callstack 20
 32598                           
 32599                           ;mcc_generated_files/i2c1_master.c: 211:     i2c1_error_t returnValue = I2C1_BUSY;
 32600                           
 32601                           ; BSR set to: 2
 32602                           ;incstack = 0
 32603  008EF4  0E01               	movlw	1
 32604  008EF6  6E10               	movwf	I2C1_Close@returnValue^0,c
 32605                           
 32606                           ;mcc_generated_files/i2c1_master.c: 212:     if(!I2C1_Status.busy)
 32607  008EF8  0102               	movlb	2	; () banked
 32608  008EFA  B35F               	btfsc	(_I2C1_Status+35)& (0+255),1,b
 32609  008EFC  D00A               	goto	l19329
 32610                           
 32611                           ; BSR set to: 2
 32612                           ;mcc_generated_files/i2c1_master.c: 213:     {;mcc_generated_files/i2c1_master.c: 214:  
      +                                 I2C1_Status.inUse = 0;
 32613  008EFE  955F               	bcf	(_I2C1_Status+35)& (0+255),2,b
 32614                           
 32615                           ;mcc_generated_files/i2c1_master.c: 215:         I2C1_Status.address = 0xff;
 32616  008F00  6958               	setf	(_I2C1_Status+28)& (0+255),b
 32617                           
 32618                           ; BSR set to: 2
 32619                           ;mcc_generated_files/i2c1_master.c: 216:         I2C1_MasterClearIrq();
 32620  008F02  EC3E  F049         	call	_I2C1_MasterClearIrq	;wreg free
 32621                           
 32622                           ;mcc_generated_files/i2c1_master.c: 217:         I2C1_MasterDisableIrq();
 32623  008F06  EC5C  F049         	call	_I2C1_MasterDisableIrq	;wreg free
 32624                           
 32625                           ;mcc_generated_files/i2c1_master.c: 218:         I2C1_MasterClose();
 32626  008F0A  EC5E  F049         	call	_I2C1_MasterClose	;wreg free
 32627                           
 32628                           ; BSR set to: 14
 32629                           ;mcc_generated_files/i2c1_master.c: 219:         returnValue = I2C1_Status.error;
 32630  008F0E  C25E  F010         	movff	_I2C1_Status+34,I2C1_Close@returnValue
 32631  008F12                     l19329:
 32632                           
 32633                           ;mcc_generated_files/i2c1_master.c: 221:     return returnValue;
 32634  008F12  5010               	movf	I2C1_Close@returnValue^0,w,c
 32635  008F14  0012               	return		;funcret
 32636  008F16                     __end_of_I2C1_Close:
 32637                           	callstack 0
 32638                           
 32639 ;; *************** function _I2C1_MasterDisableIrq *****************
 32640 ;; Defined at:
 32641 ;;		line 635 in file "mcc_generated_files/i2c1_master.c"
 32642 ;; Parameters:    Size  Location     Type
 32643 ;;		None
 32644 ;; Auto vars:     Size  Location     Type
 32645 ;;		None
 32646 ;; Return value:  Size  Location     Type
 32647 ;;                  1    wreg      void 
 32648 ;; Registers used:
 32649 ;;		None
 32650 ;; Tracked objects:
 32651 ;;		On entry : 3F/E
 32652 ;;		On exit  : 3F/E
 32653 ;;		Unchanged: 0/0
 32654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32658 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32659 ;;Total ram usage:        0 bytes
 32660 ;; Hardware stack levels used: 1
 32661 ;; Hardware stack levels required when called: 4
 32662 ;; This function calls:
 32663 ;;		Nothing
 32664 ;; This function is called by:
 32665 ;;		_I2C1_Close
 32666 ;; This function uses a non-reentrant model
 32667 ;;
 32668                           
 32669                           	psect	text180
 32670  0092B8                     __ptext180:
 32671                           	callstack 0
 32672  0092B8                     _I2C1_MasterDisableIrq:
 32673                           	callstack 20
 32674                           
 32675                           ; BSR set to: 14
 32676                           ;mcc_generated_files/i2c1_master.c: 637:     PIE3bits.SSP1IE = 0;
 32677                           
 32678                           ;incstack = 0
 32679  0092B8  91C5               	bcf	197,0,b	;volatile
 32680                           
 32681                           ; BSR set to: 14
 32682  0092BA  0012               	return		;funcret
 32683  0092BC                     __end_of_I2C1_MasterDisableIrq:
 32684                           	callstack 0
 32685                           
 32686 ;; *************** function _I2C1_MasterClose *****************
 32687 ;; Defined at:
 32688 ;;		line 557 in file "mcc_generated_files/i2c1_master.c"
 32689 ;; Parameters:    Size  Location     Type
 32690 ;;		None
 32691 ;; Auto vars:     Size  Location     Type
 32692 ;;		None
 32693 ;; Return value:  Size  Location     Type
 32694 ;;                  1    wreg      void 
 32695 ;; Registers used:
 32696 ;;		None
 32697 ;; Tracked objects:
 32698 ;;		On entry : 3F/E
 32699 ;;		On exit  : 3F/E
 32700 ;;		Unchanged: 3F/0
 32701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32702 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32703 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32705 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32706 ;;Total ram usage:        0 bytes
 32707 ;; Hardware stack levels used: 1
 32708 ;; Hardware stack levels required when called: 4
 32709 ;; This function calls:
 32710 ;;		Nothing
 32711 ;; This function is called by:
 32712 ;;		_I2C1_Close
 32713 ;; This function uses a non-reentrant model
 32714 ;;
 32715                           
 32716                           	psect	text181
 32717  0092BC                     __ptext181:
 32718                           	callstack 0
 32719  0092BC                     _I2C1_MasterClose:
 32720                           	callstack 20
 32721                           
 32722                           ; BSR set to: 14
 32723                           ;mcc_generated_files/i2c1_master.c: 560:     SSP1CON1bits.SSPEN = 0;
 32724                           
 32725                           ; BSR set to: 14
 32726                           ;incstack = 0
 32727  0092BC  9A96               	bcf	150,5,c	;volatile
 32728                           
 32729                           ; BSR set to: 14
 32730  0092BE  0012               	return		;funcret
 32731  0092C0                     __end_of_I2C1_MasterClose:
 32732                           	callstack 0
 32733                           
 32734 ;; *************** function _I2C1_MasterClearIrq *****************
 32735 ;; Defined at:
 32736 ;;		line 640 in file "mcc_generated_files/i2c1_master.c"
 32737 ;; Parameters:    Size  Location     Type
 32738 ;;		None
 32739 ;; Auto vars:     Size  Location     Type
 32740 ;;		None
 32741 ;; Return value:  Size  Location     Type
 32742 ;;                  1    wreg      void 
 32743 ;; Registers used:
 32744 ;;		None
 32745 ;; Tracked objects:
 32746 ;;		On entry : 33/2
 32747 ;;		On exit  : 3F/E
 32748 ;;		Unchanged: 0/0
 32749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32753 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32754 ;;Total ram usage:        0 bytes
 32755 ;; Hardware stack levels used: 1
 32756 ;; Hardware stack levels required when called: 4
 32757 ;; This function calls:
 32758 ;;		Nothing
 32759 ;; This function is called by:
 32760 ;;		_I2C1_Open
 32761 ;;		_I2C1_Close
 32762 ;;		_I2C1_MasterFsm
 32763 ;; This function uses a non-reentrant model
 32764 ;;
 32765                           
 32766                           	psect	text182
 32767  00927C                     __ptext182:
 32768                           	callstack 0
 32769  00927C                     _I2C1_MasterClearIrq:
 32770                           	callstack 20
 32771                           
 32772                           ;mcc_generated_files/i2c1_master.c: 642:     PIR3bits.SSP1IF = 0;
 32773                           
 32774                           ; BSR set to: 14
 32775                           ;incstack = 0
 32776  00927C  010E               	movlb	14	; () banked
 32777  00927E  91CD               	bcf	205,0,b	;volatile
 32778                           
 32779                           ; BSR set to: 14
 32780  009280  0012               	return		;funcret
 32781  009282                     __end_of_I2C1_MasterClearIrq:
 32782                           	callstack 0
 32783                           
 32784 ;; *************** function _INTERRUPT_InterruptManager *****************
 32785 ;; Defined at:
 32786 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
 32787 ;; Parameters:    Size  Location     Type
 32788 ;;		None
 32789 ;; Auto vars:     Size  Location     Type
 32790 ;;		None
 32791 ;; Return value:  Size  Location     Type
 32792 ;;                  1    wreg      void 
 32793 ;; Registers used:
 32794 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 32795 ;; Tracked objects:
 32796 ;;		On entry : 0/0
 32797 ;;		On exit  : 0/0
 32798 ;;		Unchanged: 0/0
 32799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32802 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32803 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32804 ;;Total ram usage:        6 bytes
 32805 ;; Hardware stack levels used: 1
 32806 ;; Hardware stack levels required when called: 3
 32807 ;; This function calls:
 32808 ;;		Absolute function
 32809 ;;		_EUSART1_Receive_ISR
 32810 ;;		_EUSART1_Transmit_ISR
 32811 ;;		_TMR0_ISR
 32812 ;;		_TMR1_ISR
 32813 ;;		_TMR2_ISR
 32814 ;; This function is called by:
 32815 ;;		Interrupt level 2
 32816 ;; This function uses a non-reentrant model
 32817 ;;
 32818                           
 32819                           	psect	intcode
 32820  000008                     __pintcode:
 32821                           	callstack 0
 32822  000008                     _INTERRUPT_InterruptManager:
 32823                           	callstack 14
 32824                           
 32825                           ; BSR set to: 14
 32826                           ;incstack = 0
 32827  000008  8250               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 32828  00000A  CFFA F00A          	movff	pclath,??_INTERRUPT_InterruptManager
 32829  00000E  CFFB F00B          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 32830  000012  CFD9 F00C          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
 32831  000016  CFDA F00D          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
 32832  00001A  CFF3 F00E          	movff	prodl,??_INTERRUPT_InterruptManager+4
 32833  00001E  CFF4 F00F          	movff	prodh,??_INTERRUPT_InterruptManager+5
 32834                           
 32835                           ;mcc_generated_files/interrupt_manager.c: 61:     if(PIE0bits.TMR0IE == 1 && PIR0bits.TM
      +                          R0IF == 1)
 32836  000022  010E               	movlb	14	; () banked
 32837  000024  BBC2               	btfsc	194,5,b	;volatile
 32838                           
 32839                           ; BSR set to: 14
 32840  000026  ABCA               	btfss	202,5,b	;volatile
 32841  000028  D003               	goto	i2l867
 32842                           
 32843                           ; BSR set to: 14
 32844                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         TMR0_ISR();
 32845  00002A  EC20  F047         	call	_TMR0_ISR	;wreg free
 32846                           
 32847                           ;mcc_generated_files/interrupt_manager.c: 64:     }
 32848  00002E  D028               	goto	i2l873
 32849  000030                     i2l867:
 32850                           
 32851                           ; BSR set to: 14
 32852  000030  ACF2               	btfss	242,6,c	;volatile
 32853  000032  D026               	goto	i2l873
 32854                           
 32855                           ; BSR set to: 14
 32856                           ;mcc_generated_files/interrupt_manager.c: 66:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 67:         if(PIE3bits.TX1IE == 1 && PIR3bits.TX1IF == 1)
 32857  000034  B9C5               	btfsc	197,4,b	;volatile
 32858                           
 32859                           ; BSR set to: 14
 32860  000036  A9CD               	btfss	205,4,b	;volatile
 32861  000038  D009               	goto	i2l870
 32862                           
 32863                           ; BSR set to: 14
 32864                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             EUSART1_TxDefaultInterruptHandler();
 32865  00003A  D801               	call	i2u2172_48
 32866  00003C  D021               	goto	i2l873
 32867  00003E                     i2u2172_48:
 32868  00003E  0005               	push	
 32869  000040  6EFA               	movwf	pclath,c
 32870  000042  0102               	movlb	2	; () banked
 32871  000044  51ED               	movf	_EUSART1_TxDefaultInterruptHandler& (0+255),w,b
 32872  000046  6EFD               	movwf	tosl,c
 32873  000048  51EE               	movf	(_EUSART1_TxDefaultInterruptHandler+1)& (0+255),w,b
 32874  00004A  D00B               	goto	L112
 32875  00004C                     i2l870:
 32876                           
 32877                           ; BSR set to: 14
 32878  00004C  BBC5               	btfsc	197,5,b	;volatile
 32879                           
 32880                           ; BSR set to: 14
 32881  00004E  ABCD               	btfss	205,5,b	;volatile
 32882  000050  D00C               	goto	i2l872
 32883                           
 32884                           ; BSR set to: 14
 32885                           ;mcc_generated_files/interrupt_manager.c: 72:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 73:             EUSART1_RxDefaultInterruptHandler();
 32886  000052  D801               	call	i2u2175_48
 32887  000054  D015               	goto	i2l873
 32888  000056                     i2u2175_48:
 32889  000056  0005               	push	
 32890  000058  6EFA               	movwf	pclath,c
 32891  00005A  0102               	movlb	2	; () banked
 32892  00005C  51EB               	movf	_EUSART1_RxDefaultInterruptHandler& (0+255),w,b
 32893  00005E  6EFD               	movwf	tosl,c
 32894  000060  51EC               	movf	(_EUSART1_RxDefaultInterruptHandler+1)& (0+255),w,b
 32895  000062                     L112:
 32896  000062  6EFE               	movwf	tosh,c
 32897  000064  6AFF               	clrf	tosu,c
 32898  000066  50FA               	movf	pclath,w,c
 32899  000068  0012               	return		;indir
 32900  00006A                     i2l872:
 32901                           
 32902                           ; BSR set to: 14
 32903  00006A  B1C6               	btfsc	198,0,b	;volatile
 32904                           
 32905                           ; BSR set to: 14
 32906  00006C  A1CE               	btfss	206,0,b	;volatile
 32907  00006E  D003               	goto	i2l874
 32908                           
 32909                           ; BSR set to: 14
 32910                           ;mcc_generated_files/interrupt_manager.c: 76:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 77:             TMR1_ISR();
 32911  000070  ECAF  F044         	call	_TMR1_ISR	;wreg free
 32912                           
 32913                           ;mcc_generated_files/interrupt_manager.c: 78:         }
 32914  000074  D005               	goto	i2l873
 32915  000076                     i2l874:
 32916                           
 32917                           ; BSR set to: 14
 32918  000076  B3C6               	btfsc	198,1,b	;volatile
 32919                           
 32920                           ; BSR set to: 14
 32921  000078  A3CE               	btfss	206,1,b	;volatile
 32922  00007A  D002               	goto	i2l873
 32923                           
 32924                           ; BSR set to: 14
 32925                           ;mcc_generated_files/interrupt_manager.c: 80:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 81:             TMR2_ISR();
 32926  00007C  ECF3  F02F         	call	_TMR2_ISR	;wreg free
 32927  000080                     i2l873:
 32928                           
 32929                           ; BSR set to: 14
 32930  000080  C00F  FFF4         	movff	??_INTERRUPT_InterruptManager+5,prodh
 32931  000084  C00E  FFF3         	movff	??_INTERRUPT_InterruptManager+4,prodl
 32932  000088  C00D  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
 32933  00008C  C00C  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
 32934  000090  C00B  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 32935  000094  C00A  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 32936  000098  9250               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 32937  00009A  0011               	retfie		f
 32938  00009C                     __end_of_INTERRUPT_InterruptManager:
 32939                           	callstack 0
 32940                           
 32941 ;; *************** function _TMR2_ISR *****************
 32942 ;; Defined at:
 32943 ;;		line 180 in file "mcc_generated_files/tmr2.c"
 32944 ;; Parameters:    Size  Location     Type
 32945 ;;		None
 32946 ;; Auto vars:     Size  Location     Type
 32947 ;;		None
 32948 ;; Return value:  Size  Location     Type
 32949 ;;                  1    wreg      void 
 32950 ;; Registers used:
 32951 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 32952 ;; Tracked objects:
 32953 ;;		On entry : 3F/E
 32954 ;;		On exit  : 0/0
 32955 ;;		Unchanged: 0/0
 32956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32960 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32961 ;;Total ram usage:        0 bytes
 32962 ;; Hardware stack levels used: 1
 32963 ;; Hardware stack levels required when called: 2
 32964 ;; This function calls:
 32965 ;;		Absolute function
 32966 ;;		_ReadADC
 32967 ;;		_TMR2_DefaultInterruptHandler
 32968 ;;		_controlTimeslots
 32969 ;;		_refreshSegment
 32970 ;; This function is called by:
 32971 ;;		_INTERRUPT_InterruptManager
 32972 ;; This function uses a non-reentrant model
 32973 ;;
 32974                           
 32975                           	psect	text184
 32976  005FE6                     __ptext184:
 32977                           	callstack 0
 32978  005FE6                     _TMR2_ISR:
 32979                           	callstack 14
 32980                           
 32981                           ; BSR set to: 14
 32982                           ;mcc_generated_files/tmr2.c: 184:     PIR4bits.TMR2IF = 0;
 32983                           
 32984                           ;incstack = 0
 32985  005FE6  93CE               	bcf	206,1,b	;volatile
 32986                           
 32987                           ; BSR set to: 14
 32988                           ;mcc_generated_files/tmr2.c: 188:                 ReadADC();
 32989  005FE8  EC62  F042         	call	_ReadADC	;wreg free
 32990                           
 32991                           ;mcc_generated_files/tmr2.c: 191:             refreshSegment();
 32992  005FEC  EC5F  F03C         	call	_refreshSegment	;wreg free
 32993                           
 32994                           ;mcc_generated_files/tmr2.c: 193:             if(ts_system.ts_TimeSlotMain>0)
 32995  005FF0  0101               	movlb	1	; () banked
 32996  005FF2  519D               	movf	(_ts_system+3)& (0+255),w,b	;volatile
 32997  005FF4  A4D8               	btfss	status,2,c
 32998                           
 32999                           ; BSR set to: 1
 33000                           ;mcc_generated_files/tmr2.c: 194:                 {;mcc_generated_files/tmr2.c: 195:    
      +                                       ts_system.ts_TimeSlotMain--;
 33001  005FF6  079D               	decf	(_ts_system+3)& (0+255),f,b	;volatile
 33002                           
 33003                           ; BSR set to: 1
 33004                           ;mcc_generated_files/tmr2.c: 198:             if (ts_system.ts_TimeSlot50ms > 0)
 33005  005FF8  519B               	movf	(_ts_system+1)& (0+255),w,b	;volatile
 33006  005FFA  B4D8               	btfsc	status,2,c
 33007  005FFC  D002               	goto	i2l16281
 33008                           
 33009                           ; BSR set to: 1
 33010                           ;mcc_generated_files/tmr2.c: 199:                 {;mcc_generated_files/tmr2.c: 200:    
      +                                       ts_system.ts_TimeSlot50ms--;
 33011  005FFE  079B               	decf	(_ts_system+1)& (0+255),f,b	;volatile
 33012                           
 33013                           ;mcc_generated_files/tmr2.c: 201:                 }
 33014  006000  D089               	goto	i2l16353
 33015  006002                     i2l16281:
 33016                           
 33017                           ; BSR set to: 1
 33018                           ;mcc_generated_files/tmr2.c: 203:                 {;mcc_generated_files/tmr2.c: 204:    
      +                                       ts_system.ts_TimeSlot50ms = 50;
 33019  006002  0E32               	movlw	50
 33020  006004  6F9B               	movwf	(_ts_system+1)& (0+255),b	;volatile
 33021                           
 33022                           ; BSR set to: 1
 33023                           ;mcc_generated_files/tmr2.c: 208:                     controlTimeslots();
 33024  006006  EC1B  F02C         	call	_controlTimeslots	;wreg free
 33025                           
 33026                           ; BSR set to: 1
 33027                           ;mcc_generated_files/tmr2.c: 210:                       if (Counterchoose == 0)
 33028  00600A  0100               	movlb	0	; () banked
 33029  00600C  5192               	movf	_Counterchoose& (0+255),w,b
 33030  00600E  A4D8               	btfss	status,2,c
 33031  006010  D002               	goto	i2l16289
 33032                           
 33033                           ; BSR set to: 0
 33034                           ;mcc_generated_files/tmr2.c: 211:                                {;mcc_generated_files/t
      +                          mr2.c: 212:                                    Counterchoose = 1;
 33035  006012  0E01               	movlw	1
 33036  006014  D001               	goto	L113
 33037  006016                     i2l16289:
 33038                           
 33039                           ; BSR set to: 0
 33040                           ;mcc_generated_files/tmr2.c: 215:                                {;mcc_generated_files/t
      +                          mr2.c: 216:                                    Counterchoose = 0;
 33041  006016  0E00               	movlw	0
 33042  006018                     L113:
 33043  006018  6F92               	movwf	_Counterchoose& (0+255),b
 33044                           
 33045                           ; BSR set to: 0
 33046                           ;mcc_generated_files/tmr2.c: 218:                            if (var_sys.LearningIsEnabl
      +                          ed==NO)
 33047                           
 33048                           ;mcc_generated_files/tmr2.c: 217:                                }
 33049  00601A  0101               	movlb	1	; () banked
 33050  00601C  5126               	movf	(_var_sys+38)& (0+255),w,b	;volatile
 33051  00601E  A4D8               	btfss	status,2,c
 33052  006020  D034               	goto	i2l16315
 33053                           
 33054                           ; BSR set to: 1
 33055                           ;mcc_generated_files/tmr2.c: 219:                            {;mcc_generated_files/tmr2.
      +                          c: 222:                                if (var_sys.TimeMaxMotorIsON > 0 && var_sys.Activ
      +                          atecounter != stoped)
 33056  006022  5118               	movf	(_var_sys+24)& (0+255),w,b	;volatile
 33057  006024  1119               	iorwf	(_var_sys+25)& (0+255),w,b	;volatile
 33058  006026  111A               	iorwf	(_var_sys+26)& (0+255),w,b	;volatile
 33059  006028  111B               	iorwf	(_var_sys+27)& (0+255),w,b	;volatile
 33060  00602A  B4D8               	btfsc	status,2,c
 33061  00602C  D008               	goto	i2l1266
 33062                           
 33063                           ; BSR set to: 1
 33064  00602E  5116               	movf	(_var_sys+22)& (0+255),w,b	;volatile
 33065  006030  B4D8               	btfsc	status,2,c
 33066  006032  D005               	goto	i2l1266
 33067                           
 33068                           ; BSR set to: 1
 33069                           ;mcc_generated_files/tmr2.c: 223:                                {;mcc_generated_files/t
      +                          mr2.c: 225:                                     var_sys.TimeMaxMotorIsON--;
 33070  006034  0718               	decf	(_var_sys+24)& (0+255),f,b	;volatile
 33071  006036  0E00               	movlw	0
 33072  006038  5B19               	subwfb	(_var_sys+25)& (0+255),f,b	;volatile
 33073  00603A  5B1A               	subwfb	(_var_sys+26)& (0+255),f,b	;volatile
 33074  00603C  5B1B               	subwfb	(_var_sys+27)& (0+255),f,b	;volatile
 33075  00603E                     i2l1266:
 33076                           
 33077                           ; BSR set to: 1
 33078                           ;mcc_generated_files/tmr2.c: 230:                                if (var_sys.Activatecou
      +                          nter == open)
 33079  00603E  0516               	decf	(_var_sys+22)& (0+255),w,b	;volatile
 33080  006040  A4D8               	btfss	status,2,c
 33081  006042  D00E               	goto	i2l16305
 33082                           
 33083                           ; BSR set to: 1
 33084                           ;mcc_generated_files/tmr2.c: 231:                                {;mcc_generated_files/t
      +                          mr2.c: 232:                                    {;mcc_generated_files/tmr2.c: 234:       
      +                                                            if (powerControl_st.decelarationActive==YES)
 33085  006044  057B               	decf	_powerControl_st& (0+255),w,b
 33086  006046  A4D8               	btfss	status,2,c
 33087  006048  D004               	goto	i2u1845_40
 33088                           
 33089                           ; BSR set to: 1
 33090                           ;mcc_generated_files/tmr2.c: 235:                                         {;mcc_generate
      +                          d_files/tmr2.c: 236:                                             if(Counterchoose ==1){
 33091  00604A  0100               	movlb	0	; () banked
 33092  00604C  0592               	decf	_Counterchoose& (0+255),w,b
 33093  00604E  A4D8               	btfss	status,2,c
 33094  006050  D061               	goto	i2l16353
 33095  006052                     i2u1845_40:
 33096                           
 33097                           ;mcc_generated_files/tmr2.c: 237:                                               var_sys.
      +                          PositionActual++;
 33098  006052  0E01               	movlw	1
 33099  006054  0101               	movlb	1	; () banked
 33100  006056  271E               	addwf	(_var_sys+30)& (0+255),f,b	;volatile
 33101  006058  0E00               	movlw	0
 33102  00605A  231F               	addwfc	(_var_sys+31)& (0+255),f,b	;volatile
 33103  00605C  2320               	addwfc	(_var_sys+32)& (0+255),f,b	;volatile
 33104  00605E  D013               	goto	L114
 33105  006060                     i2l16305:
 33106                           
 33107                           ; BSR set to: 1
 33108  006060  0E02               	movlw	2
 33109  006062  1916               	xorwf	(_var_sys+22)& (0+255),w,b	;volatile
 33110  006064  A4D8               	btfss	status,2,c
 33111  006066  D056               	goto	i2l16353
 33112                           
 33113                           ; BSR set to: 1
 33114                           ;mcc_generated_files/tmr2.c: 250:                                {;mcc_generated_files/t
      +                          mr2.c: 251:                                        if (powerControl_st.decelarationActiv
      +                          e==YES)
 33115  006068  057B               	decf	_powerControl_st& (0+255),w,b
 33116  00606A  A4D8               	btfss	status,2,c
 33117  00606C  D004               	goto	i2u1848_40
 33118                           
 33119                           ; BSR set to: 1
 33120                           ;mcc_generated_files/tmr2.c: 252:                                         {;mcc_generate
      +                          d_files/tmr2.c: 253:                                             if(Counterchoose ==1){
 33121  00606E  0100               	movlb	0	; () banked
 33122  006070  0592               	decf	_Counterchoose& (0+255),w,b
 33123  006072  A4D8               	btfss	status,2,c
 33124  006074  D04F               	goto	i2l16353
 33125  006076                     i2u1848_40:
 33126                           
 33127                           ;mcc_generated_files/tmr2.c: 254:                                               var_sys.
      +                          PositionActual--;
 33128  006076  0EFF               	movlw	255
 33129  006078  0101               	movlb	1	; () banked
 33130  00607A  271E               	addwf	(_var_sys+30)& (0+255),f,b	;volatile
 33131  00607C  0EFF               	movlw	255
 33132  00607E  231F               	addwfc	(_var_sys+31)& (0+255),f,b	;volatile
 33133  006080  0EFF               	movlw	255
 33134  006082  2320               	addwfc	(_var_sys+32)& (0+255),f,b	;volatile
 33135  006084  0EFF               	movlw	255
 33136  006086                     L114:
 33137  006086  2321               	addwfc	(_var_sys+33)& (0+255),f,b	;volatile
 33138                           
 33139                           ;mcc_generated_files/tmr2.c: 263:                            }
 33140  006088  D045               	goto	i2l16353
 33141  00608A                     i2l16315:
 33142                           
 33143                           ; BSR set to: 1
 33144                           ;mcc_generated_files/tmr2.c: 266:                            {;mcc_generated_files/tmr2.
      +                          c: 267:                                if (var_sys.Counter_Learning ==1)
 33145  00608A  0517               	decf	(_var_sys+23)& (0+255),w,b	;volatile
 33146  00608C  A4D8               	btfss	status,2,c
 33147  00608E  D01C               	goto	i2l1277
 33148                           
 33149                           ; BSR set to: 1
 33150                           ;mcc_generated_files/tmr2.c: 268:                                {;mcc_generated_files/t
      +                          mr2.c: 270:                                     if (var_sys.Activatecounter == open)
 33151  006090  0516               	decf	(_var_sys+22)& (0+255),w,b	;volatile
 33152  006092  A4D8               	btfss	status,2,c
 33153  006094  D00B               	goto	i2l16325
 33154                           
 33155                           ; BSR set to: 1
 33156                           ;mcc_generated_files/tmr2.c: 271:                                     {;mcc_generated_fi
      +                          les/tmr2.c: 273:                                         if (var_sys.LearningDecelaratio
      +                          n ==1)
 33157  006096  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 33158  006098  B4D8               	btfsc	status,2,c
 33159  00609A  D016               	goto	i2l1277
 33160                           
 33161                           ; BSR set to: 1
 33162                           ;mcc_generated_files/tmr2.c: 282:                                            {;mcc_gener
      +                          ated_files/tmr2.c: 283:                                              learn_st.timeOpen++
      +                          ;
 33163  00609C  0E01               	movlw	1
 33164  00609E  0100               	movlb	0	; () banked
 33165  0060A0  2764               	addwf	(_learn_st+4)& (0+255),f,b	;volatile
 33166  0060A2  0E00               	movlw	0
 33167  0060A4  2365               	addwfc	(_learn_st+5)& (0+255),f,b	;volatile
 33168  0060A6  2366               	addwfc	(_learn_st+6)& (0+255),f,b	;volatile
 33169  0060A8  2367               	addwfc	(_learn_st+7)& (0+255),f,b	;volatile
 33170  0060AA  D00E               	goto	i2l1277
 33171  0060AC                     i2l16325:
 33172                           
 33173                           ; BSR set to: 1
 33174  0060AC  0E02               	movlw	2
 33175  0060AE  1916               	xorwf	(_var_sys+22)& (0+255),w,b	;volatile
 33176  0060B0  A4D8               	btfss	status,2,c
 33177  0060B2  D00A               	goto	i2l1277
 33178                           
 33179                           ; BSR set to: 1
 33180                           ;mcc_generated_files/tmr2.c: 287:                                     {;mcc_generated_fi
      +                          les/tmr2.c: 289:                                         if (var_sys.LearningDecelaratio
      +                          n ==1)
 33181  0060B4  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 33182  0060B6  B4D8               	btfsc	status,2,c
 33183  0060B8  D007               	goto	i2l1277
 33184                           
 33185                           ; BSR set to: 1
 33186                           ;mcc_generated_files/tmr2.c: 297:                                             {;mcc_gene
      +                          rated_files/tmr2.c: 298:                                                learn_st.timeClo
      +                          se++;
 33187  0060BA  0E01               	movlw	1
 33188  0060BC  0100               	movlb	0	; () banked
 33189  0060BE  2760               	addwf	_learn_st& (0+255),f,b	;volatile
 33190  0060C0  0E00               	movlw	0
 33191  0060C2  2361               	addwfc	(_learn_st+1)& (0+255),f,b	;volatile
 33192  0060C4  2362               	addwfc	(_learn_st+2)& (0+255),f,b	;volatile
 33193  0060C6  2363               	addwfc	(_learn_st+3)& (0+255),f,b	;volatile
 33194  0060C8                     i2l1277:
 33195                           
 33196                           ;mcc_generated_files/tmr2.c: 304:                                 if (var_sys.LearningDe
      +                          celaration ==1 && var_sys.programinAutomatic == 1)
 33197  0060C8  0101               	movlb	1	; () banked
 33198  0060CA  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 33199  0060CC  A4D8               	btfss	status,2,c
 33200  0060CE  D022               	goto	i2l16353
 33201                           
 33202                           ; BSR set to: 1
 33203  0060D0  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 33204  0060D2  A4D8               	btfss	status,2,c
 33205  0060D4  D01F               	goto	i2l16353
 33206                           
 33207                           ; BSR set to: 1
 33208                           ;mcc_generated_files/tmr2.c: 305:                                 {;mcc_generated_files/
      +                          tmr2.c: 308:                                        if ( ts_system.ts_TimeSlot500ms > 0)
 33209  0060D6  519A               	movf	_ts_system& (0+255),w,b	;volatile
 33210  0060D8  B4D8               	btfsc	status,2,c
 33211  0060DA  D002               	goto	i2l16339
 33212                           
 33213                           ; BSR set to: 1
 33214                           ;mcc_generated_files/tmr2.c: 309:                                            {;mcc_gener
      +                          ated_files/tmr2.c: 310:                                                ts_system.ts_Time
      +                          Slot500ms--;
 33215  0060DC  079A               	decf	_ts_system& (0+255),f,b	;volatile
 33216                           
 33217                           ;mcc_generated_files/tmr2.c: 311:                                            }
 33218  0060DE  D01A               	goto	i2l16353
 33219  0060E0                     i2l16339:
 33220                           
 33221                           ; BSR set to: 1
 33222                           ;mcc_generated_files/tmr2.c: 314:                                          {;mcc_generat
      +                          ed_files/tmr2.c: 315:                                             ts_system.ts_TimeSlot5
      +                          00ms = 10;
 33223  0060E0  0E0A               	movlw	10
 33224  0060E2  6F9A               	movwf	_ts_system& (0+255),b	;volatile
 33225                           
 33226                           ; BSR set to: 1
 33227                           ;mcc_generated_files/tmr2.c: 317:                                             if ( var_s
      +                          ys.Activatecounter ==open )
 33228  0060E4  0516               	decf	(_var_sys+22)& (0+255),w,b	;volatile
 33229  0060E6  A4D8               	btfss	status,2,c
 33230  0060E8  D009               	goto	i2l16347
 33231                           
 33232                           ; BSR set to: 1
 33233                           ;mcc_generated_files/tmr2.c: 318:                                                {;mcc_g
      +                          enerated_files/tmr2.c: 319:                                                  learn_st.ti
      +                          meDecelerationOpen++;
 33234  0060EA  0100               	movlb	0	; () banked
 33235  0060EC  2B69               	incf	(_learn_st+9)& (0+255),f,b	;volatile
 33236                           
 33237                           ; BSR set to: 0
 33238                           ;mcc_generated_files/tmr2.c: 320:                                                  learn
      +                          _st.timeOpen++;
 33239  0060EE  0E01               	movlw	1
 33240  0060F0  2764               	addwf	(_learn_st+4)& (0+255),f,b	;volatile
 33241  0060F2  0E00               	movlw	0
 33242  0060F4  2365               	addwfc	(_learn_st+5)& (0+255),f,b	;volatile
 33243  0060F6  2366               	addwfc	(_learn_st+6)& (0+255),f,b	;volatile
 33244  0060F8  2367               	addwfc	(_learn_st+7)& (0+255),f,b	;volatile
 33245                           
 33246                           ;mcc_generated_files/tmr2.c: 322:                                                }
 33247  0060FA  D00C               	goto	i2l16353
 33248  0060FC                     i2l16347:
 33249                           
 33250                           ; BSR set to: 1
 33251  0060FC  0E02               	movlw	2
 33252  0060FE  1916               	xorwf	(_var_sys+22)& (0+255),w,b	;volatile
 33253  006100  A4D8               	btfss	status,2,c
 33254  006102  D008               	goto	i2l16353
 33255                           
 33256                           ; BSR set to: 1
 33257                           ;mcc_generated_files/tmr2.c: 325:                                                {;mcc_g
      +                          enerated_files/tmr2.c: 326:                                                  learn_st.ti
      +                          meDecelerationClose++;
 33258  006104  0100               	movlb	0	; () banked
 33259  006106  2B68               	incf	(_learn_st+8)& (0+255),f,b	;volatile
 33260                           
 33261                           ; BSR set to: 0
 33262                           ;mcc_generated_files/tmr2.c: 327:                                                  learn
      +                          _st.timeClose++;
 33263  006108  0E01               	movlw	1
 33264  00610A  2760               	addwf	_learn_st& (0+255),f,b	;volatile
 33265  00610C  0E00               	movlw	0
 33266  00610E  2361               	addwfc	(_learn_st+1)& (0+255),f,b	;volatile
 33267  006110  2362               	addwfc	(_learn_st+2)& (0+255),f,b	;volatile
 33268  006112  2363               	addwfc	(_learn_st+3)& (0+255),f,b	;volatile
 33269  006114                     i2l16353:
 33270                           
 33271                           ;mcc_generated_files/tmr2.c: 335:     if(TMR2_InterruptHandler)
 33272  006114  0102               	movlb	2	; () banked
 33273  006116  51DD               	movf	_TMR2_InterruptHandler& (0+255),w,b
 33274  006118  11DE               	iorwf	(_TMR2_InterruptHandler+1)& (0+255),w,b
 33275  00611A  B4D8               	btfsc	status,2,c
 33276  00611C  0012               	return	
 33277                           
 33278                           ; BSR set to: 2
 33279                           ;mcc_generated_files/tmr2.c: 336:     {;mcc_generated_files/tmr2.c: 337:         TMR2_In
      +                          terruptHandler();
 33280  00611E  D801               	call	i2u1860_48
 33281  006120  0012               	return	
 33282  006122                     i2u1860_48:
 33283  006122  0005               	push	
 33284  006124  6EFA               	movwf	pclath,c
 33285  006126  51DD               	movf	_TMR2_InterruptHandler& (0+255),w,b
 33286  006128  6EFD               	movwf	tosl,c
 33287  00612A  51DE               	movf	(_TMR2_InterruptHandler+1)& (0+255),w,b
 33288  00612C  6EFE               	movwf	tosh,c
 33289  00612E  6AFF               	clrf	tosu,c
 33290  006130  50FA               	movf	pclath,w,c
 33291  006132  0012               	return		;indir
 33292  006134                     __end_of_TMR2_ISR:
 33293                           	callstack 0
 33294                           
 33295 ;; *************** function _refreshSegment *****************
 33296 ;; Defined at:
 33297 ;;		line 50 in file "outputs_MC50.c"
 33298 ;; Parameters:    Size  Location     Type
 33299 ;;		None
 33300 ;; Auto vars:     Size  Location     Type
 33301 ;;		None
 33302 ;; Return value:  Size  Location     Type
 33303 ;;                  1    wreg      void 
 33304 ;; Registers used:
 33305 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 33306 ;; Tracked objects:
 33307 ;;		On entry : 31/E
 33308 ;;		On exit  : 3E/0
 33309 ;;		Unchanged: 0/0
 33310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33314 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33315 ;;Total ram usage:        0 bytes
 33316 ;; Hardware stack levels used: 1
 33317 ;; Hardware stack levels required when called: 1
 33318 ;; This function calls:
 33319 ;;		_Segments_Set
 33320 ;; This function is called by:
 33321 ;;		_TMR2_ISR
 33322 ;; This function uses a non-reentrant model
 33323 ;;
 33324                           
 33325                           	psect	text185
 33326  0078BE                     __ptext185:
 33327                           	callstack 0
 33328  0078BE                     _refreshSegment:
 33329                           	callstack 14
 33330                           
 33331                           ;outputs_MC50.c: 54:     if (dispStruct.intermitentFreq==0||dispStruct.upFase==1)
 33332                           
 33333                           ;incstack = 0
 33334  0078BE  0100               	movlb	0	; () banked
 33335  0078C0  5175               	movf	(_dispStruct+3)& (0+255),w,b	;volatile
 33336  0078C2  1176               	iorwf	(_dispStruct+4)& (0+255),w,b	;volatile
 33337  0078C4  B4D8               	btfsc	status,2,c
 33338  0078C6  D003               	goto	i2u1462_40
 33339                           
 33340                           ; BSR set to: 0
 33341  0078C8  0577               	decf	(_dispStruct+5)& (0+255),w,b	;volatile
 33342  0078CA  A4D8               	btfss	status,2,c
 33343  0078CC  D01F               	goto	i2l2128
 33344  0078CE                     i2u1462_40:
 33345                           
 33346                           ; BSR set to: 0
 33347                           ;outputs_MC50.c: 55:     {;outputs_MC50.c: 56:         if (dispStruct.lastDisplay==disp2
      +                          _e)
 33348  0078CE  0574               	decf	(_dispStruct+2)& (0+255),w,b	;volatile
 33349  0078D0  A4D8               	btfss	status,2,c
 33350  0078D2  D00D               	goto	i2l2123
 33351                           
 33352                           ; BSR set to: 0
 33353                           
 33354                           ;outputs_MC50.c: 57:         {;outputs_MC50.c: 58:             do { LATCbits.LATC0 = 0; 
      +                          } while(0);
 33355  0078D4  9085               	bcf	133,0,c	;volatile
 33356                           
 33357                           ; BSR set to: 0
 33358                           ;outputs_MC50.c: 59:             Segments_Set(DispTable[dispStruct.display_grp.value_dis
      +                          play1]);
 33359  0078D6  0ED2               	movlw	low _DispTable
 33360  0078D8  2572               	addwf	_dispStruct& (0+255),w,b	;volatile
 33361  0078DA  6ED9               	movwf	fsr2l,c
 33362  0078DC  6ADA               	clrf	fsr2h,c
 33363  0078DE  0E03               	movlw	high _DispTable
 33364  0078E0  22DA               	addwfc	fsr2h,f,c
 33365  0078E2  50DF               	movf	indf2,w,c
 33366  0078E4  ECC5  F048         	call	_Segments_Set
 33367  0078E8  8285               	bsf	133,1,c	;volatile
 33368                           
 33369                           ;outputs_MC50.c: 61:             dispStruct.lastDisplay=disp1_e;
 33370  0078EA  0E00               	movlw	0
 33371  0078EC  D00C               	goto	L115
 33372  0078EE                     i2l2123:
 33373                           
 33374                           ; BSR set to: 0
 33375  0078EE  9285               	bcf	133,1,c	;volatile
 33376                           
 33377                           ; BSR set to: 0
 33378                           ;outputs_MC50.c: 66:             Segments_Set(DispTable[dispStruct.display_grp.value_dis
      +                          play2]);
 33379  0078F0  0ED2               	movlw	low _DispTable
 33380  0078F2  2573               	addwf	(_dispStruct+1)& (0+255),w,b	;volatile
 33381  0078F4  6ED9               	movwf	fsr2l,c
 33382  0078F6  6ADA               	clrf	fsr2h,c
 33383  0078F8  0E03               	movlw	high _DispTable
 33384  0078FA  22DA               	addwfc	fsr2h,f,c
 33385  0078FC  50DF               	movf	indf2,w,c
 33386  0078FE  ECC5  F048         	call	_Segments_Set
 33387  007902  8085               	bsf	133,0,c	;volatile
 33388                           
 33389                           ;outputs_MC50.c: 68:             dispStruct.lastDisplay=disp2_e;
 33390  007904  0E01               	movlw	1
 33391  007906                     L115:
 33392  007906  0100               	movlb	0	; () banked
 33393  007908  6F74               	movwf	(_dispStruct+2)& (0+255),b	;volatile
 33394  00790A  D002               	goto	i2l14369
 33395  00790C                     i2l2128:
 33396                           
 33397                           ; BSR set to: 0
 33398  00790C  9085               	bcf	133,0,c	;volatile
 33399                           
 33400                           ; BSR set to: 0
 33401                           
 33402                           ;outputs_MC50.c: 75:         do { LATCbits.LATC1 = 0; } while(0);
 33403  00790E  9285               	bcf	133,1,c	;volatile
 33404  007910                     i2l14369:
 33405                           
 33406                           ; BSR set to: 0
 33407                           ;outputs_MC50.c: 79:     if(ts_system.timeFreqDigit<=0 && dispStruct.intermitentFreq!=0)
 33408  007910  0101               	movlb	1	; () banked
 33409  007912  BFA5               	btfsc	(_ts_system+11)& (0+255),7,b	;volatile
 33410  007914  D005               	goto	i2u1464_40
 33411  007916  51A5               	movf	(_ts_system+11)& (0+255),w,b	;volatile
 33412  007918  E114               	bnz	i2l2135
 33413  00791A  05A4               	decf	(_ts_system+10)& (0+255),w,b	;volatile
 33414  00791C  B0D8               	btfsc	status,0,c
 33415  00791E  0012               	return	
 33416  007920                     i2u1464_40:
 33417                           
 33418                           ; BSR set to: 1
 33419  007920  0100               	movlb	0	; () banked
 33420  007922  5175               	movf	(_dispStruct+3)& (0+255),w,b	;volatile
 33421  007924  1176               	iorwf	(_dispStruct+4)& (0+255),w,b	;volatile
 33422  007926  B4D8               	btfsc	status,2,c
 33423  007928  0012               	return	
 33424                           
 33425                           ; BSR set to: 0
 33426                           ;outputs_MC50.c: 80:     {;outputs_MC50.c: 81:         ts_system.timeFreqDigit=dispStruc
      +                          t.intermitentFreq;
 33427  00792A  C075  F1A4         	movff	_dispStruct+3,_ts_system+10	;volatile
 33428  00792E  C076  F1A5         	movff	_dispStruct+4,_ts_system+11	;volatile
 33429                           
 33430                           ; BSR set to: 0
 33431                           ;outputs_MC50.c: 82:         if(dispStruct.upFase==1)
 33432  007932  0577               	decf	(_dispStruct+5)& (0+255),w,b	;volatile
 33433  007934  A4D8               	btfss	status,2,c
 33434  007936  D003               	goto	i2l14379
 33435                           
 33436                           ; BSR set to: 0
 33437                           ;outputs_MC50.c: 83:         {;outputs_MC50.c: 84:             dispStruct.upFase = 0;
 33438  007938  0E00               	movlw	0
 33439  00793A  6F77               	movwf	(_dispStruct+5)& (0+255),b	;volatile
 33440                           
 33441                           ;outputs_MC50.c: 85:         }
 33442  00793C  0012               	return	
 33443  00793E                     i2l14379:
 33444                           
 33445                           ; BSR set to: 0
 33446                           ;outputs_MC50.c: 87:         {;outputs_MC50.c: 88:             dispStruct.upFase = 1;
 33447  00793E  0E01               	movlw	1
 33448  007940  6F77               	movwf	(_dispStruct+5)& (0+255),b	;volatile
 33449  007942                     i2l2135:
 33450  007942  0012               	return		;funcret
 33451  007944                     __end_of_refreshSegment:
 33452                           	callstack 0
 33453                           
 33454 ;; *************** function _Segments_Set *****************
 33455 ;; Defined at:
 33456 ;;		line 93 in file "outputs_MC50.c"
 33457 ;; Parameters:    Size  Location     Type
 33458 ;;  value           1    wreg     unsigned char 
 33459 ;; Auto vars:     Size  Location     Type
 33460 ;;  value           1    0[COMRAM] unsigned char 
 33461 ;; Return value:  Size  Location     Type
 33462 ;;                  1    wreg      void 
 33463 ;; Registers used:
 33464 ;;		wreg, status,2, status,0
 33465 ;; Tracked objects:
 33466 ;;		On entry : 3F/0
 33467 ;;		On exit  : 0/0
 33468 ;;		Unchanged: 0/0
 33469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33471 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33473 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33474 ;;Total ram usage:        1 bytes
 33475 ;; Hardware stack levels used: 1
 33476 ;; This function calls:
 33477 ;;		Nothing
 33478 ;; This function is called by:
 33479 ;;		_refreshSegment
 33480 ;; This function uses a non-reentrant model
 33481 ;;
 33482                           
 33483                           	psect	text186
 33484  00918A                     __ptext186:
 33485                           	callstack 0
 33486  00918A                     _Segments_Set:
 33487                           	callstack 14
 33488                           
 33489                           ;incstack = 0
 33490                           ;Segments_Set@value stored from wreg
 33491  00918A  6E01               	movwf	Segments_Set@value^0,c
 33492                           
 33493                           ;outputs_MC50.c: 93: void Segments_Set(char value);outputs_MC50.c: 94: {;outputs_MC50.c:
      +                           95:    LATD &= 0x80;
 33494  00918C  0E80               	movlw	128
 33495  00918E  1686               	andwf	134,f,c	;volatile
 33496                           
 33497                           ;outputs_MC50.c: 96:    LATD |= value;
 33498  009190  5001               	movf	Segments_Set@value^0,w,c	;volatile
 33499  009192  1286               	iorwf	134,f,c	;volatile
 33500  009194  0012               	return		;funcret
 33501  009196                     __end_of_Segments_Set:
 33502                           	callstack 0
 33503                           
 33504 ;; *************** function _controlTimeslots *****************
 33505 ;; Defined at:
 33506 ;;		line 190 in file "main_MC50.c"
 33507 ;; Parameters:    Size  Location     Type
 33508 ;;		None
 33509 ;; Auto vars:     Size  Location     Type
 33510 ;;		None
 33511 ;; Return value:  Size  Location     Type
 33512 ;;                  1    wreg      void 
 33513 ;; Registers used:
 33514 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 33515 ;; Tracked objects:
 33516 ;;		On entry : 3F/1
 33517 ;;		On exit  : 3F/1
 33518 ;;		Unchanged: 0/0
 33519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33521 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33523 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33524 ;;Total ram usage:        0 bytes
 33525 ;; Hardware stack levels used: 1
 33526 ;; Hardware stack levels required when called: 1
 33527 ;; This function calls:
 33528 ;;		_decrementTimeslot
 33529 ;; This function is called by:
 33530 ;;		_TMR2_ISR
 33531 ;; This function uses a non-reentrant model
 33532 ;;
 33533                           
 33534                           	psect	text187
 33535  005836                     __ptext187:
 33536                           	callstack 0
 33537  005836                     _controlTimeslots:
 33538                           	callstack 14
 33539                           
 33540                           ; BSR set to: 1
 33541                           ;main_MC50.c: 192:  decrementTimeslot((int*)&ts_system.Debug_TS);
 33542                           
 33543                           ;incstack = 0
 33544  005836  0EA2               	movlw	low (_ts_system+8)
 33545  005838  6E01               	movwf	decrementTimeslot@ts^0,c
 33546  00583A  0E01               	movlw	high (_ts_system+8)
 33547  00583C  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33548  00583E  ECBE  F046         	call	_decrementTimeslot	;wreg free
 33549                           
 33550                           ;main_MC50.c: 193:     decrementTimeslot((int*)&ts_system.timewaitFlashRGB);
 33551  005842  0EE0               	movlw	low (_ts_system+70)
 33552  005844  6E01               	movwf	decrementTimeslot@ts^0,c
 33553  005846  0E01               	movlw	high (_ts_system+70)
 33554  005848  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33555  00584A  ECBE  F046         	call	_decrementTimeslot	;wreg free
 33556                           
 33557                           ;main_MC50.c: 194:     decrementTimeslot((int*)&ts_system.timeFreqDigit);
 33558  00584E  0EA4               	movlw	low (_ts_system+10)
 33559  005850  6E01               	movwf	decrementTimeslot@ts^0,c
 33560  005852  0E01               	movlw	high (_ts_system+10)
 33561  005854  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33562  005856  ECBE  F046         	call	_decrementTimeslot	;wreg free
 33563                           
 33564                           ;main_MC50.c: 195:     decrementTimeslot((int*)&ts_system.timeSinalizationDigit);
 33565  00585A  0EA6               	movlw	low (_ts_system+12)
 33566  00585C  6E01               	movwf	decrementTimeslot@ts^0,c
 33567  00585E  0E01               	movlw	high (_ts_system+12)
 33568  005860  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33569  005862  ECBE  F046         	call	_decrementTimeslot	;wreg free
 33570                           
 33571                           ;main_MC50.c: 196:     decrementTimeslot((int*)&ts_system.timeoutMenu);
 33572  005866  0EA8               	movlw	low (_ts_system+14)
 33573  005868  6E01               	movwf	decrementTimeslot@ts^0,c
 33574  00586A  0E01               	movlw	high (_ts_system+14)
 33575  00586C  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33576  00586E  ECBE  F046         	call	_decrementTimeslot	;wreg free
 33577                           
 33578                           ;main_MC50.c: 197:     decrementTimeslot((int*)&ts_system.timeOpenWalk);
 33579  005872  0EAA               	movlw	low (_ts_system+16)
 33580  005874  6E01               	movwf	decrementTimeslot@ts^0,c
 33581  005876  0E01               	movlw	high (_ts_system+16)
 33582  005878  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33583  00587A  ECBE  F046         	call	_decrementTimeslot	;wreg free
 33584                           
 33585                           ;main_MC50.c: 198:     decrementTimeslot((int*)&ts_system.timeWaitToClose);
 33586  00587E  0EAC               	movlw	low (_ts_system+18)
 33587  005880  6E01               	movwf	decrementTimeslot@ts^0,c
 33588  005882  0E01               	movlw	high (_ts_system+18)
 33589  005884  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33590  005886  ECBE  F046         	call	_decrementTimeslot	;wreg free
 33591                           
 33592                           ;main_MC50.c: 199:     decrementTimeslot((int*)&ts_system.TimeLastCommand);
 33593  00588A  0EAE               	movlw	low (_ts_system+20)
 33594  00588C  6E01               	movwf	decrementTimeslot@ts^0,c
 33595  00588E  0E01               	movlw	high (_ts_system+20)
 33596  005890  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33597  005892  ECBE  F046         	call	_decrementTimeslot	;wreg free
 33598                           
 33599                           ;main_MC50.c: 200:     decrementTimeslot((int*)&ts_system.timeSoftStart);
 33600  005896  0EB0               	movlw	low (_ts_system+22)
 33601  005898  6E01               	movwf	decrementTimeslot@ts^0,c
 33602  00589A  0E01               	movlw	high (_ts_system+22)
 33603  00589C  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33604  00589E  ECBE  F046         	call	_decrementTimeslot	;wreg free
 33605                           
 33606                           ;main_MC50.c: 201:     decrementTimeslot((int*)&ts_system.TimeChargeCondesador);
 33607  0058A2  0EB4               	movlw	low (_ts_system+26)
 33608  0058A4  6E01               	movwf	decrementTimeslot@ts^0,c
 33609  0058A6  0E01               	movlw	high (_ts_system+26)
 33610  0058A8  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33611  0058AA  ECBE  F046         	call	_decrementTimeslot	;wreg free
 33612                           
 33613                           ;main_MC50.c: 203:     decrementTimeslot((int*)&ts_system.timeFreqRGB);
 33614  0058AE  0EB6               	movlw	low (_ts_system+28)
 33615  0058B0  6E01               	movwf	decrementTimeslot@ts^0,c
 33616  0058B2  0E01               	movlw	high (_ts_system+28)
 33617  0058B4  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33618  0058B6  ECBE  F046         	call	_decrementTimeslot	;wreg free
 33619                           
 33620                           ;main_MC50.c: 204:     decrementTimeslot((int*)&ts_system.timeFreqFlashligth);
 33621  0058BA  0EB8               	movlw	low (_ts_system+30)
 33622  0058BC  6E01               	movwf	decrementTimeslot@ts^0,c
 33623  0058BE  0E01               	movlw	high (_ts_system+30)
 33624  0058C0  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33625  0058C2  ECBE  F046         	call	_decrementTimeslot	;wreg free
 33626                           
 33627                           ;main_MC50.c: 206:     decrementTimeslot((int*)&ts_system.TimeWaitToNextState);
 33628  0058C6  0EBE               	movlw	low (_ts_system+36)
 33629  0058C8  6E01               	movwf	decrementTimeslot@ts^0,c
 33630  0058CA  0E01               	movlw	high (_ts_system+36)
 33631  0058CC  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33632  0058CE  ECBE  F046         	call	_decrementTimeslot	;wreg free
 33633                           
 33634                           ;main_MC50.c: 208:     decrementTimeslot((int*)&ts_system.timeBetweenSaveCounters);
 33635  0058D2  0EC0               	movlw	low (_ts_system+38)
 33636  0058D4  6E01               	movwf	decrementTimeslot@ts^0,c
 33637  0058D6  0E01               	movlw	high (_ts_system+38)
 33638  0058D8  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33639  0058DA  ECBE  F046         	call	_decrementTimeslot	;wreg free
 33640                           
 33641                           ;main_MC50.c: 209:     decrementTimeslot((int*)&ts_system.TimeElectricBrake);
 33642  0058DE  0EC2               	movlw	low (_ts_system+40)
 33643  0058E0  6E01               	movwf	decrementTimeslot@ts^0,c
 33644  0058E2  0E01               	movlw	high (_ts_system+40)
 33645  0058E4  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33646  0058E6  ECBE  F046         	call	_decrementTimeslot	;wreg free
 33647                           
 33648                           ;main_MC50.c: 210:     decrementTimeslot((int*)&ts_system.TimeCurrentAlarm);
 33649  0058EA  0EC4               	movlw	low (_ts_system+42)
 33650  0058EC  6E01               	movwf	decrementTimeslot@ts^0,c
 33651  0058EE  0E01               	movlw	high (_ts_system+42)
 33652  0058F0  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33653  0058F2  ECBE  F046         	call	_decrementTimeslot	;wreg free
 33654                           
 33655                           ;main_MC50.c: 212:     decrementTimeslot((int*)&ts_system.TimeStopedBeforeDecelaration);
 33656  0058F6  0EC6               	movlw	low (_ts_system+44)
 33657  0058F8  6E01               	movwf	decrementTimeslot@ts^0,c
 33658  0058FA  0E01               	movlw	high (_ts_system+44)
 33659  0058FC  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33660  0058FE  ECBE  F046         	call	_decrementTimeslot	;wreg free
 33661                           
 33662                           ;main_MC50.c: 213:     decrementTimeslot((int*)&ts_system.TimeCurrentWaitForAlarm);
 33663  005902  0EC8               	movlw	low (_ts_system+46)
 33664  005904  6E01               	movwf	decrementTimeslot@ts^0,c
 33665  005906  0E01               	movlw	high (_ts_system+46)
 33666  005908  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33667  00590A  ECBE  F046         	call	_decrementTimeslot	;wreg free
 33668                           
 33669                           ;main_MC50.c: 214:     decrementTimeslot((int*)&ts_system.TimeInversionStart);
 33670  00590E  0ECA               	movlw	low (_ts_system+48)
 33671  005910  6E01               	movwf	decrementTimeslot@ts^0,c
 33672  005912  0E01               	movlw	high (_ts_system+48)
 33673  005914  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33674  005916  ECBE  F046         	call	_decrementTimeslot	;wreg free
 33675                           
 33676                           ;main_MC50.c: 215:     decrementTimeslot((int*)&ts_system.TimeReleCapacitor);
 33677  00591A  0EDC               	movlw	low (_ts_system+66)
 33678  00591C  6E01               	movwf	decrementTimeslot@ts^0,c
 33679  00591E  0E01               	movlw	high (_ts_system+66)
 33680  005920  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33681  005922  ECBE  F046         	call	_decrementTimeslot	;wreg free
 33682                           
 33683                           ;main_MC50.c: 216:     decrementTimeslot((int*)&ts_system.TimeWaitReleCapacitor);
 33684  005926  0EDE               	movlw	low (_ts_system+68)
 33685  005928  6E01               	movwf	decrementTimeslot@ts^0,c
 33686  00592A  0E01               	movlw	high (_ts_system+68)
 33687  00592C  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33688  00592E  ECBE  F046         	call	_decrementTimeslot	;wreg free
 33689                           
 33690                           ;main_MC50.c: 221:     if ( ( var_sys_NVM.electricBrake==0 ) || ( ts_system.TimeElectric
      +                          Brake<=0 ) )
 33691  005932  0100               	movlb	0	; () banked
 33692  005934  51AF               	movf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 33693  005936  B4D8               	btfsc	status,2,c
 33694  005938  D008               	goto	i2u1468_40
 33695                           
 33696                           ; BSR set to: 0
 33697  00593A  0101               	movlb	1	; () banked
 33698  00593C  BFC3               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 33699  00593E  D005               	goto	i2u1468_40
 33700  005940  51C3               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 33701  005942  E109               	bnz	i2l2019
 33702  005944  05C2               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 33703  005946  B0D8               	btfsc	status,0,c
 33704  005948  D006               	goto	i2l2019
 33705  00594A                     i2u1468_40:
 33706                           
 33707                           ;main_MC50.c: 222:     {;main_MC50.c: 225:         decrementTimeslot((int*)&ts_system.In
      +                          vertionTimeClosingFromOpen);
 33708  00594A  0ECC               	movlw	low (_ts_system+50)
 33709  00594C  6E01               	movwf	decrementTimeslot@ts^0,c
 33710  00594E  0E01               	movlw	high (_ts_system+50)
 33711  005950  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33712  005952  ECBE  F046         	call	_decrementTimeslot	;wreg free
 33713  005956                     i2l2019:
 33714                           
 33715                           ;main_MC50.c: 228:     decrementTimeslot((int*)&ts_system.TimeWaitToGetCurrent);
 33716  005956  0ECE               	movlw	low (_ts_system+52)
 33717  005958  6E01               	movwf	decrementTimeslot@ts^0,c
 33718  00595A  0E01               	movlw	high (_ts_system+52)
 33719  00595C  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33720  00595E  ECBE  F046         	call	_decrementTimeslot	;wreg free
 33721                           
 33722                           ;main_MC50.c: 229:     decrementTimeslot((int*)&ts_system.TimeLearningDecelaration);
 33723  005962  0ED0               	movlw	low (_ts_system+54)
 33724  005964  6E01               	movwf	decrementTimeslot@ts^0,c
 33725  005966  0E01               	movlw	high (_ts_system+54)
 33726  005968  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33727  00596A  ECBE  F046         	call	_decrementTimeslot	;wreg free
 33728                           
 33729                           ;main_MC50.c: 230:     decrementTimeslot((int*)&ts_system.TimeTransitionDecelaration);
 33730  00596E  0ED2               	movlw	low (_ts_system+56)
 33731  005970  6E01               	movwf	decrementTimeslot@ts^0,c
 33732  005972  0E01               	movlw	high (_ts_system+56)
 33733  005974  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33734  005976  ECBE  F046         	call	_decrementTimeslot	;wreg free
 33735                           
 33736                           ;main_MC50.c: 232:     decrementTimeslot((int*)&ts_system.timewaitBeforeSoftStart);
 33737  00597A  0ED4               	movlw	low (_ts_system+58)
 33738  00597C  6E01               	movwf	decrementTimeslot@ts^0,c
 33739  00597E  0E01               	movlw	high (_ts_system+58)
 33740  005980  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33741  005982  ECBE  F046         	call	_decrementTimeslot	;wreg free
 33742                           
 33743                           ;main_MC50.c: 233:     decrementTimeslot((int*)&ts_system.TimeShowVersion);
 33744  005986  0ED6               	movlw	low (_ts_system+60)
 33745  005988  6E01               	movwf	decrementTimeslot@ts^0,c
 33746  00598A  0E01               	movlw	high (_ts_system+60)
 33747  00598C  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33748  00598E  ECBE  F046         	call	_decrementTimeslot	;wreg free
 33749                           
 33750                           ;main_MC50.c: 235:     decrementTimeslot((int*)&ts_system.TimeStopADCZeroOffsetCalc);
 33751  005992  0ED8               	movlw	low (_ts_system+62)
 33752  005994  6E01               	movwf	decrementTimeslot@ts^0,c
 33753  005996  0E01               	movlw	high (_ts_system+62)
 33754  005998  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33755  00599A  ECBE  F046         	call	_decrementTimeslot	;wreg free
 33756                           
 33757                           ;main_MC50.c: 237:     decrementTimeslot((int*)&ts_system.TimeStopElectricBrake);
 33758  00599E  0EDA               	movlw	low (_ts_system+64)
 33759  0059A0  6E01               	movwf	decrementTimeslot@ts^0,c
 33760  0059A2  0E01               	movlw	high (_ts_system+64)
 33761  0059A4  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 33762  0059A6  ECBE  F046         	call	_decrementTimeslot	;wreg free
 33763                           
 33764                           ;main_MC50.c: 240:     if (ts_system.TimeOnFlashLigth>0)
 33765  0059AA  0101               	movlb	1	; () banked
 33766  0059AC  BFBD               	btfsc	(_ts_system+35)& (0+255),7,b	;volatile
 33767  0059AE  0012               	return	
 33768  0059B0  51BD               	movf	(_ts_system+35)& (0+255),w,b	;volatile
 33769  0059B2  11BC               	iorwf	(_ts_system+34)& (0+255),w,b	;volatile
 33770  0059B4  11BB               	iorwf	(_ts_system+33)& (0+255),w,b	;volatile
 33771  0059B6  E103               	bnz	i2u1469_40
 33772  0059B8  05BA               	decf	(_ts_system+32)& (0+255),w,b	;volatile
 33773  0059BA  A0D8               	btfss	status,0,c
 33774  0059BC  0012               	return	
 33775  0059BE                     i2u1469_40:
 33776                           
 33777                           ; BSR set to: 1
 33778                           ;main_MC50.c: 241:     {;main_MC50.c: 242:         ts_system.TimeOnFlashLigth--;
 33779  0059BE  0EFF               	movlw	255
 33780  0059C0  27BA               	addwf	(_ts_system+32)& (0+255),f,b	;volatile
 33781  0059C2  0EFF               	movlw	255
 33782  0059C4  23BB               	addwfc	(_ts_system+33)& (0+255),f,b	;volatile
 33783  0059C6  0EFF               	movlw	255
 33784  0059C8  23BC               	addwfc	(_ts_system+34)& (0+255),f,b	;volatile
 33785  0059CA  0EFF               	movlw	255
 33786  0059CC  23BD               	addwfc	(_ts_system+35)& (0+255),f,b	;volatile
 33787                           
 33788                           ; BSR set to: 1
 33789  0059CE  0012               	return		;funcret
 33790  0059D0                     __end_of_controlTimeslots:
 33791                           	callstack 0
 33792                           
 33793 ;; *************** function _decrementTimeslot *****************
 33794 ;; Defined at:
 33795 ;;		line 246 in file "main_MC50.c"
 33796 ;; Parameters:    Size  Location     Type
 33797 ;;  ts              2    0[COMRAM] PTR int 
 33798 ;;		 -> ts_system.TimeShowVersion(2), ts_system.TimeLearningDecelaration(2), ts_system.TimeWaitToGetCurrent(2), ts_syste
      +m.InvertionTimeClosingFromOpen(2), 
 33799 ;;		 -> ts_system.TimeWaitReleCapacitor(2), ts_system.TimeInversionStart(2), ts_system.TimeStopedBeforeDecelaration(2), 
      +ts_system.TimeWaitToNextState(2), 
 33800 ;;		 -> ts_system.timeFreqFlashligth(2), ts_system.timeFreqRGB(2), ts_system.timeWaitToClose(2), ts_system.timeOpenWalk(
      +2), 
 33801 ;;		 -> ts_system.timeoutMenu(2), ts_system.timeFreqDigit(2), ts_system.timewaitFlashRGB(2), ts_system.TimeStopElectricB
      +rake(2), 
 33802 ;;		 -> ts_system.Debug_TS(2), ts_system.timeSinalizationDigit(2), ts_system.TimeLastCommand(2), ts_system.timeBetweenSa
      +veCounters(2), 
 33803 ;;		 -> ts_system.TimeCurrentAlarm(2), ts_system.TimeCurrentWaitForAlarm(2), ts_system.TimeReleCapacitor(2), ts_system.T
      +imeChargeCondesador(2), 
 33804 ;;		 -> ts_system.TimeTransitionDecelaration(2), ts_system.timewaitBeforeSoftStart(2), ts_system.timeSoftStart(2), ts_sy
      +stem.TimeElectricBrake(2), 
 33805 ;;		 -> ts_system.TimeStopADCZeroOffsetCalc(2), ts_system(72), 
 33806 ;; Auto vars:     Size  Location     Type
 33807 ;;		None
 33808 ;; Return value:  Size  Location     Type
 33809 ;;                  1    wreg      void 
 33810 ;; Registers used:
 33811 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 33812 ;; Tracked objects:
 33813 ;;		On entry : 0/1
 33814 ;;		On exit  : 0/0
 33815 ;;		Unchanged: 0/0
 33816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33817 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33818 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33819 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33820 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33821 ;;Total ram usage:        4 bytes
 33822 ;; Hardware stack levels used: 1
 33823 ;; This function calls:
 33824 ;;		Nothing
 33825 ;; This function is called by:
 33826 ;;		_controlTimeslots
 33827 ;; This function uses a non-reentrant model
 33828 ;;
 33829                           
 33830                           	psect	text188
 33831  008D7C                     __ptext188:
 33832                           	callstack 0
 33833  008D7C                     _decrementTimeslot:
 33834                           	callstack 14
 33835                           
 33836                           ;main_MC50.c: 246: void decrementTimeslot(int * ts);main_MC50.c: 247: {;main_MC50.c: 248
      +                          :     if (ts[0]>0)
 33837                           
 33838                           ; BSR set to: 1
 33839                           ;incstack = 0
 33840  008D7C  C001  FFD9         	movff	decrementTimeslot@ts,fsr2l
 33841  008D80  C002  FFDA         	movff	decrementTimeslot@ts+1,fsr2h
 33842  008D84  0E01               	movlw	1
 33843  008D86  BEDB               	btfsc	plusw2,7,c
 33844  008D88  0012               	return	
 33845  008D8A  0E01               	movlw	1
 33846  008D8C  50DB               	movf	plusw2,w,c
 33847  008D8E  E103               	bnz	i2u1305_40
 33848  008D90  04DE               	decf	postinc2,w,c
 33849  008D92  A0D8               	btfss	status,0,c
 33850  008D94  0012               	return	
 33851  008D96                     i2u1305_40:
 33852                           
 33853                           ;main_MC50.c: 249:     {;main_MC50.c: 250:         ts[0]--;
 33854  008D96  C001  FFD9         	movff	decrementTimeslot@ts,fsr2l
 33855  008D9A  C002  FFDA         	movff	decrementTimeslot@ts+1,fsr2h
 33856  008D9E  06DE               	decf	postinc2,f,c
 33857  008DA0  0E00               	movlw	0
 33858  008DA2  5ADD               	subwfb	postdec2,f,c
 33859  008DA4  0012               	return		;funcret
 33860  008DA6                     __end_of_decrementTimeslot:
 33861                           	callstack 0
 33862                           
 33863 ;; *************** function _TMR2_DefaultInterruptHandler *****************
 33864 ;; Defined at:
 33865 ;;		line 346 in file "mcc_generated_files/tmr2.c"
 33866 ;; Parameters:    Size  Location     Type
 33867 ;;		None
 33868 ;; Auto vars:     Size  Location     Type
 33869 ;;		None
 33870 ;; Return value:  Size  Location     Type
 33871 ;;                  1    wreg      void 
 33872 ;; Registers used:
 33873 ;;		None
 33874 ;; Tracked objects:
 33875 ;;		On entry : 3F/2
 33876 ;;		On exit  : 3F/2
 33877 ;;		Unchanged: 3F/0
 33878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33879 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33880 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33882 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33883 ;;Total ram usage:        0 bytes
 33884 ;; Hardware stack levels used: 1
 33885 ;; This function calls:
 33886 ;;		Nothing
 33887 ;; This function is called by:
 33888 ;;		_TMR2_Initialize
 33889 ;;		_TMR2_ISR
 33890 ;; This function uses a non-reentrant model
 33891 ;;
 33892                           
 33893                           	psect	text189
 33894  0092C4                     __ptext189:
 33895                           	callstack 0
 33896  0092C4                     _TMR2_DefaultInterruptHandler:
 33897                           	callstack 15
 33898                           
 33899                           ; BSR set to: 2
 33900                           
 33901                           ;incstack = 0
 33902  0092C4  0012               	return		;funcret
 33903  0092C6                     __end_of_TMR2_DefaultInterruptHandler:
 33904                           	callstack 0
 33905                           
 33906 ;; *************** function _ReadADC *****************
 33907 ;; Defined at:
 33908 ;;		line 38 in file "controlCurrent_MC50.c"
 33909 ;; Parameters:    Size  Location     Type
 33910 ;;		None
 33911 ;; Auto vars:     Size  Location     Type
 33912 ;;		None
 33913 ;; Return value:  Size  Location     Type
 33914 ;;                  1    wreg      void 
 33915 ;; Registers used:
 33916 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33917 ;; Tracked objects:
 33918 ;;		On entry : 3F/E
 33919 ;;		On exit  : 31/0
 33920 ;;		Unchanged: 0/0
 33921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33924 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33925 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33926 ;;Total ram usage:        3 bytes
 33927 ;; Hardware stack levels used: 1
 33928 ;; Hardware stack levels required when called: 1
 33929 ;; This function calls:
 33930 ;;		_ADCC_GetSingleConversion
 33931 ;; This function is called by:
 33932 ;;		_TMR2_ISR
 33933 ;; This function uses a non-reentrant model
 33934 ;;
 33935                           
 33936                           	psect	text190
 33937  0084C4                     __ptext190:
 33938                           	callstack 0
 33939  0084C4                     _ReadADC:
 33940                           	callstack 14
 33941                           
 33942                           ; BSR set to: 14
 33943                           ;controlCurrent_MC50.c: 40:      if (!ADCON0bits.GO_nDONE)
 33944                           
 33945                           ; BSR set to: 2
 33946                           ;incstack = 0
 33947  0084C4  B060               	btfsc	96,0,c	;volatile
 33948  0084C6  0012               	return	
 33949                           
 33950                           ; BSR set to: 14
 33951                           ;controlCurrent_MC50.c: 41:      {;controlCurrent_MC50.c: 42:         if ( idxAdcAquisit
      +                          ion >= 30 )
 33952  0084C8  0E1D               	movlw	29
 33953  0084CA  0100               	movlb	0	; () banked
 33954  0084CC  6591               	cpfsgt	_idxAdcAquisition& (0+255),b	;volatile
 33955  0084CE  D002               	goto	i2l14345
 33956                           
 33957                           ; BSR set to: 0
 33958                           ;controlCurrent_MC50.c: 43:         {;controlCurrent_MC50.c: 44:             idxAdcAquis
      +                          ition=0;
 33959  0084D0  0E00               	movlw	0
 33960  0084D2  6F91               	movwf	_idxAdcAquisition& (0+255),b	;volatile
 33961  0084D4                     i2l14345:
 33962                           
 33963                           ; BSR set to: 0
 33964                           ;controlCurrent_MC50.c: 47:         ADC_array[idxAdcAquisition] = ((unsigned int)((ADRES
      +                          H << 8) + ADRESL)>>6);
 33965  0084D4  5063               	movf	99,w,c	;volatile
 33966  0084D6  CF64 F002          	movff	3940,??_ReadADC	;volatile
 33967  0084DA  6A03               	clrf	(??_ReadADC+1)^0,c
 33968  0084DC  C002  F003         	movff	??_ReadADC,??_ReadADC+1
 33969  0084E0  6A02               	clrf	??_ReadADC^0,c
 33970  0084E2  2602               	addwf	??_ReadADC^0,f,c
 33971  0084E4  0E00               	movlw	0
 33972  0084E6  2203               	addwfc	(??_ReadADC+1)^0,f,c
 33973  0084E8  0E06               	movlw	6
 33974  0084EA  6E04               	movwf	(??_ReadADC+2)^0,c
 33975  0084EC                     i2u1460_45:
 33976  0084EC  90D8               	bcf	status,0,c
 33977  0084EE  3203               	rrcf	(??_ReadADC+1)^0,f,c
 33978  0084F0  3202               	rrcf	??_ReadADC^0,f,c
 33979  0084F2  2E04               	decfsz	(??_ReadADC+2)^0,f,c
 33980  0084F4  D7FB               	goto	i2u1460_45
 33981  0084F6  5191               	movf	_idxAdcAquisition& (0+255),w,b	;volatile
 33982  0084F8  0D02               	mullw	2
 33983  0084FA  0E00               	movlw	low _ADC_array
 33984  0084FC  24F3               	addwf	243,w,c
 33985  0084FE  6ED9               	movwf	fsr2l,c
 33986  008500  0E02               	movlw	high _ADC_array
 33987  008502  20F4               	addwfc	prodh,w,c
 33988  008504  6EDA               	movwf	fsr2h,c
 33989  008506  C002  FFDE         	movff	??_ReadADC,postinc2
 33990  00850A  C003  FFDD         	movff	??_ReadADC+1,postdec2
 33991                           
 33992                           ; BSR set to: 0
 33993                           ;controlCurrent_MC50.c: 48:         ADCC_GetSingleConversion(0x00);
 33994  00850E  0E00               	movlw	0
 33995  008510  EC68  F048         	call	_ADCC_GetSingleConversion
 33996                           
 33997                           ;controlCurrent_MC50.c: 49:         idxAdcAquisition++;
 33998  008514  0100               	movlb	0	; () banked
 33999  008516  2B91               	incf	_idxAdcAquisition& (0+255),f,b	;volatile
 34000  008518  0012               	return		;funcret
 34001  00851A                     __end_of_ReadADC:
 34002                           	callstack 0
 34003                           
 34004 ;; *************** function _ADCC_GetSingleConversion *****************
 34005 ;; Defined at:
 34006 ;;		line 131 in file "mcc_generated_files/adcc.c"
 34007 ;; Parameters:    Size  Location     Type
 34008 ;;  channel         1    wreg     enum E10053
 34009 ;; Auto vars:     Size  Location     Type
 34010 ;;  channel         1    0[COMRAM] enum E10053
 34011 ;; Return value:  Size  Location     Type
 34012 ;;                  2  433[None  ] int 
 34013 ;; Registers used:
 34014 ;;		wreg, status,2, cstack
 34015 ;; Tracked objects:
 34016 ;;		On entry : 3F/0
 34017 ;;		On exit  : 0/0
 34018 ;;		Unchanged: 0/0
 34019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34021 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34023 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34024 ;;Total ram usage:        1 bytes
 34025 ;; Hardware stack levels used: 1
 34026 ;; This function calls:
 34027 ;;		Nothing
 34028 ;; This function is called by:
 34029 ;;		_ReadADC
 34030 ;; This function uses a non-reentrant model
 34031 ;;
 34032                           
 34033                           	psect	text191
 34034  0090D0                     __ptext191:
 34035                           	callstack 0
 34036  0090D0                     _ADCC_GetSingleConversion:
 34037                           	callstack 14
 34038                           
 34039                           ;incstack = 0
 34040                           ;ADCC_GetSingleConversion@channel stored from wreg
 34041  0090D0  6E01               	movwf	ADCC_GetSingleConversion@channel^0,c
 34042                           
 34043                           ;mcc_generated_files/adcc.c: 131: ADCC_GetSingleConversion(adcc_channel_t channel);mcc_g
      +                          enerated_files/adcc.c: 132: {;mcc_generated_files/adcc.c: 134:     ADPCH = channel;
 34044  0090D2  C001  FF5F         	movff	ADCC_GetSingleConversion@channel,3935	;volatile
 34045                           
 34046                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADON = 1;
 34047  0090D6  8E60               	bsf	96,7,c	;volatile
 34048                           
 34049                           ;mcc_generated_files/adcc.c: 139:       _delay((unsigned long)((5)*(64000000/4000000.0))
      +                          );
 34050  0090D8  0E1A               	movlw	26
 34051  0090DA                     i2u2891_47:
 34052  0090DA  2EE8               	decfsz	wreg,f,c
 34053  0090DC  D7FE               	bra	i2u2891_47
 34054  0090DE  D000               	nop2	
 34055                           
 34056                           ;mcc_generated_files/adcc.c: 142:     ADCON0bits.ADCONT = 0;
 34057  0090E0  9C60               	bcf	96,6,c	;volatile
 34058                           
 34059                           ;mcc_generated_files/adcc.c: 145:     ADCON0bits.ADGO = 1;
 34060  0090E2  8060               	bsf	96,0,c	;volatile
 34061  0090E4  0012               	return		;funcret
 34062  0090E6                     __end_of_ADCC_GetSingleConversion:
 34063                           	callstack 0
 34064                           
 34065 ;; *************** function _TMR1_ISR *****************
 34066 ;; Defined at:
 34067 ;;		line 166 in file "mcc_generated_files/tmr1.c"
 34068 ;; Parameters:    Size  Location     Type
 34069 ;;		None
 34070 ;; Auto vars:     Size  Location     Type
 34071 ;;		None
 34072 ;; Return value:  Size  Location     Type
 34073 ;;                  1    wreg      void 
 34074 ;; Registers used:
 34075 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 34076 ;; Tracked objects:
 34077 ;;		On entry : 3F/E
 34078 ;;		On exit  : 0/0
 34079 ;;		Unchanged: 0/0
 34080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34084 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34085 ;;Total ram usage:        0 bytes
 34086 ;; Hardware stack levels used: 1
 34087 ;; Hardware stack levels required when called: 2
 34088 ;; This function calls:
 34089 ;;		Absolute function
 34090 ;;		_TMR1_DefaultInterruptHandler
 34091 ;;		_TMR1_WriteTimer
 34092 ;;		_controlMotorForce
 34093 ;; This function is called by:
 34094 ;;		_INTERRUPT_InterruptManager
 34095 ;; This function uses a non-reentrant model
 34096 ;;
 34097                           
 34098                           	psect	text192
 34099  00895E                     __ptext192:
 34100                           	callstack 0
 34101  00895E                     _TMR1_ISR:
 34102                           	callstack 14
 34103                           
 34104                           ; BSR set to: 14
 34105                           ;mcc_generated_files/tmr1.c: 170:     PIR4bits.TMR1IF = 0;
 34106                           
 34107                           ;incstack = 0
 34108  00895E  91CE               	bcf	206,0,b	;volatile
 34109                           
 34110                           ; BSR set to: 14
 34111                           ;mcc_generated_files/tmr1.c: 172:             controlMotorForce();
 34112  008960  ECCC  F024         	call	_controlMotorForce	;wreg free
 34113                           
 34114                           ;mcc_generated_files/tmr1.c: 173:             if(ts_system.ts_TimeSlotTRIAC>0)
 34115  008964  0101               	movlb	1	; () banked
 34116  008966  519F               	movf	(_ts_system+5)& (0+255),w,b	;volatile
 34117  008968  A4D8               	btfss	status,2,c
 34118                           
 34119                           ; BSR set to: 1
 34120                           ;mcc_generated_files/tmr1.c: 174:             {;mcc_generated_files/tmr1.c: 176:        
      +                                   ts_system.ts_TimeSlotTRIAC--;
 34121  00896A  079F               	decf	(_ts_system+5)& (0+255),f,b	;volatile
 34122                           
 34123                           ; BSR set to: 1
 34124                           ;mcc_generated_files/tmr1.c: 178:             if (ts_system.ts_TimeSlot1ms > 0 )
 34125  00896C  519C               	movf	(_ts_system+2)& (0+255),w,b	;volatile
 34126  00896E  A4D8               	btfss	status,2,c
 34127                           
 34128                           ; BSR set to: 1
 34129                           ;mcc_generated_files/tmr1.c: 179:             {;mcc_generated_files/tmr1.c: 180:        
      +                               ts_system.ts_TimeSlot1ms--;
 34130  008970  079C               	decf	(_ts_system+2)& (0+255),f,b	;volatile
 34131                           
 34132                           ; BSR set to: 1
 34133                           ;mcc_generated_files/tmr1.c: 183:     TMR1_WriteTimer(timer1ReloadVal);
 34134  008972  C2E1  F001         	movff	_timer1ReloadVal,TMR1_WriteTimer@timerVal	;volatile
 34135  008976  C2E2  F002         	movff	_timer1ReloadVal+1,TMR1_WriteTimer@timerVal+1	;volatile
 34136  00897A  ECC6  F047         	call	_TMR1_WriteTimer	;wreg free
 34137                           
 34138                           ; BSR set to: 1
 34139                           ;mcc_generated_files/tmr1.c: 185:     if(TMR1_InterruptHandler)
 34140  00897E  0102               	movlb	2	; () banked
 34141  008980  51DF               	movf	_TMR1_InterruptHandler& (0+255),w,b
 34142  008982  11E0               	iorwf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 34143  008984  B4D8               	btfsc	status,2,c
 34144  008986  0012               	return	
 34145                           
 34146                           ; BSR set to: 2
 34147                           ;mcc_generated_files/tmr1.c: 186:     {;mcc_generated_files/tmr1.c: 187:         TMR1_In
      +                          terruptHandler();
 34148  008988  D801               	call	i2u1836_48
 34149  00898A  0012               	return	
 34150  00898C                     i2u1836_48:
 34151  00898C  0005               	push	
 34152  00898E  6EFA               	movwf	pclath,c
 34153  008990  51DF               	movf	_TMR1_InterruptHandler& (0+255),w,b
 34154  008992  6EFD               	movwf	tosl,c
 34155  008994  51E0               	movf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 34156  008996  6EFE               	movwf	tosh,c
 34157  008998  6AFF               	clrf	tosu,c
 34158  00899A  50FA               	movf	pclath,w,c
 34159  00899C  0012               	return		;indir
 34160  00899E                     __end_of_TMR1_ISR:
 34161                           	callstack 0
 34162                           
 34163 ;; *************** function _controlMotorForce *****************
 34164 ;; Defined at:
 34165 ;;		line 213 in file "outputs_MC50.c"
 34166 ;; Parameters:    Size  Location     Type
 34167 ;;		None
 34168 ;; Auto vars:     Size  Location     Type
 34169 ;;		None
 34170 ;; Return value:  Size  Location     Type
 34171 ;;                  1    wreg      void 
 34172 ;; Registers used:
 34173 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34174 ;; Tracked objects:
 34175 ;;		On entry : 3F/E
 34176 ;;		On exit  : 3E/0
 34177 ;;		Unchanged: 0/0
 34178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34181 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34182 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34183 ;;Total ram usage:        5 bytes
 34184 ;; Hardware stack levels used: 1
 34185 ;; Hardware stack levels required when called: 1
 34186 ;; This function calls:
 34187 ;;		i2_GetMotorPower
 34188 ;;		i2_VerifyElectricalBrake
 34189 ;; This function is called by:
 34190 ;;		_TMR1_ISR
 34191 ;; This function uses a non-reentrant model
 34192 ;;
 34193                           
 34194                           	psect	text193
 34195  004998                     __ptext193:
 34196                           	callstack 0
 34197  004998                     _controlMotorForce:
 34198                           	callstack 14
 34199                           
 34200                           ; BSR set to: 14
 34201                           ;outputs_MC50.c: 217:     difTime=GetMotorPower();
 34202                           
 34203                           ;incstack = 0
 34204  004998  EC0B  F038         	call	i2_GetMotorPower	;wreg free
 34205  00499C  6F8F               	movwf	_difTime& (0+255),b
 34206                           
 34207                           ; BSR set to: 1
 34208                           ;outputs_MC50.c: 218:     if(powerControl_st.decelarationActive==YES)
 34209  00499E  057B               	decf	_powerControl_st& (0+255),w,b
 34210  0049A0  A4D8               	btfss	status,2,c
 34211  0049A2  D00F               	goto	i2l2186
 34212                           
 34213                           ; BSR set to: 1
 34214                           ;outputs_MC50.c: 219:     {;outputs_MC50.c: 220:         if(ts_system.TimeStopedBeforeDe
      +                          celaration>0)
 34215  0049A4  BFC7               	btfsc	(_ts_system+45)& (0+255),7,b	;volatile
 34216  0049A6  D008               	goto	i2l14233
 34217  0049A8  51C7               	movf	(_ts_system+45)& (0+255),w,b	;volatile
 34218  0049AA  E103               	bnz	i2u1420_40
 34219  0049AC  05C6               	decf	(_ts_system+44)& (0+255),w,b	;volatile
 34220  0049AE  A0D8               	btfss	status,0,c
 34221  0049B0  D003               	goto	i2l14233
 34222  0049B2                     i2u1420_40:
 34223                           
 34224                           ; BSR set to: 1
 34225                           ;outputs_MC50.c: 221:         {;outputs_MC50.c: 222:             StateTRIAC=0;
 34226  0049B2  0E00               	movlw	0
 34227  0049B4  6F90               	movwf	_StateTRIAC& (0+255),b
 34228                           
 34229                           ;outputs_MC50.c: 223:         }
 34230  0049B6  D005               	goto	i2l2186
 34231  0049B8                     i2l14233:
 34232                           
 34233                           ; BSR set to: 1
 34234  0049B8  517D               	movf	(_powerControl_st+2)& (0+255),w,b
 34235  0049BA  5D7F               	subwf	(_powerControl_st+4)& (0+255),w,b
 34236  0049BC  A0D8               	btfss	status,0,c
 34237                           
 34238                           ; BSR set to: 1
 34239                           ;outputs_MC50.c: 225:         {;outputs_MC50.c: 227:             difTime=powerControl_st
      +                          .decelarationPower;
 34240  0049BE  C17E  F18F         	movff	_powerControl_st+3,_difTime
 34241  0049C2                     i2l2186:
 34242                           
 34243                           ; BSR set to: 1
 34244                           ;outputs_MC50.c: 242:     if(PORTAbits.RA3==1 && zeroCrossing==0)
 34245  0049C2  A68D               	btfss	141,3,c	;volatile
 34246  0049C4  D071               	goto	i2l2190
 34247                           
 34248                           ; BSR set to: 1
 34249  0049C6  5192               	movf	_zeroCrossing& (0+255),w,b
 34250  0049C8  A4D8               	btfss	status,2,c
 34251  0049CA  D06E               	goto	i2l2190
 34252                           
 34253                           ; BSR set to: 1
 34254                           ;outputs_MC50.c: 243:     {;outputs_MC50.c: 257:         if ( waitZeroPeak == 0 )
 34255  0049CC  5191               	movf	_waitZeroPeak& (0+255),w,b
 34256  0049CE  A4D8               	btfss	status,2,c
 34257  0049D0  D016               	goto	i2l14249
 34258                           
 34259                           ; BSR set to: 1
 34260                           ;outputs_MC50.c: 258:         {;outputs_MC50.c: 260:             zeroCrossingWaitTime[ze
      +                          roCrossingWaitTimeIdx] = (zeroCrossingLength>>1);
 34261  0049D2  0EEF               	movlw	low _zeroCrossingWaitTime
 34262  0049D4  0100               	movlb	0	; () banked
 34263  0049D6  2584               	addwf	_zeroCrossingWaitTimeIdx& (0+255),w,b
 34264  0049D8  6ED9               	movwf	fsr2l,c
 34265  0049DA  6ADA               	clrf	fsr2h,c
 34266  0049DC  0E02               	movlw	high _zeroCrossingWaitTime
 34267  0049DE  22DA               	addwfc	fsr2h,f,c
 34268  0049E0  0101               	movlb	1	; () banked
 34269  0049E2  90D8               	bcf	status,0,c
 34270  0049E4  3193               	rrcf	_zeroCrossingLength& (0+255),w,b
 34271  0049E6  6EDF               	movwf	indf2,c
 34272                           
 34273                           ; BSR set to: 1
 34274                           ;outputs_MC50.c: 261:             if ( zeroCrossingWaitTimeIdx == 0 )
 34275  0049E8  0100               	movlb	0	; () banked
 34276  0049EA  5184               	movf	_zeroCrossingWaitTimeIdx& (0+255),w,b
 34277  0049EC  A4D8               	btfss	status,2,c
 34278  0049EE  D002               	goto	i2l14247
 34279                           
 34280                           ; BSR set to: 0
 34281                           ;outputs_MC50.c: 262:             {;outputs_MC50.c: 263:                 zeroCrossingWai
      +                          tTimeIdx = 1;
 34282  0049F0  0E01               	movlw	1
 34283  0049F2  D001               	goto	L116
 34284  0049F4                     i2l14247:
 34285                           
 34286                           ; BSR set to: 0
 34287                           ;outputs_MC50.c: 266:             {;outputs_MC50.c: 267:                 zeroCrossingWai
      +                          tTimeIdx = 0;
 34288  0049F4  0E00               	movlw	0
 34289  0049F6                     L116:
 34290  0049F6  6F84               	movwf	_zeroCrossingWaitTimeIdx& (0+255),b
 34291                           
 34292                           ; BSR set to: 0
 34293                           ;outputs_MC50.c: 270:             zeroCrossingLength = 0;
 34294                           
 34295                           ;outputs_MC50.c: 268:             }
 34296  0049F8  0E00               	movlw	0
 34297  0049FA  0101               	movlb	1	; () banked
 34298  0049FC  6F93               	movwf	_zeroCrossingLength& (0+255),b
 34299  0049FE                     i2l14249:
 34300                           
 34301                           ; BSR set to: 1
 34302                           ;outputs_MC50.c: 273:         if ( (difTime<=80) || (ts_system.TimeElectricBrake>0) )
 34303  0049FE  0E50               	movlw	80
 34304  004A00  658F               	cpfsgt	_difTime& (0+255),b
 34305  004A02  D007               	goto	i2u1427_40
 34306                           
 34307                           ; BSR set to: 1
 34308  004A04  BFC3               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 34309  004A06  D008               	goto	i2l14255
 34310  004A08  51C3               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 34311  004A0A  E103               	bnz	i2u1427_40
 34312  004A0C  05C2               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 34313  004A0E  A0D8               	btfss	status,0,c
 34314  004A10  D003               	goto	i2l14255
 34315  004A12                     i2u1427_40:
 34316                           
 34317                           ; BSR set to: 1
 34318                           
 34319                           ;outputs_MC50.c: 274:         {;outputs_MC50.c: 275:             do { LATDbits.LATD7 = 0
      +                          ; } while(0);
 34320  004A12  9E86               	bcf	134,7,c	;volatile
 34321                           
 34322                           ; BSR set to: 1
 34323                           ;outputs_MC50.c: 276:             var_sys.TriacON=NO;
 34324  004A14  0E00               	movlw	0
 34325  004A16  6F0C               	movwf	(_var_sys+12)& (0+255),b	;volatile
 34326  004A18                     i2l14255:
 34327                           
 34328                           ; BSR set to: 1
 34329                           ;outputs_MC50.c: 280:         waitZeroPeak++;
 34330  004A18  2B91               	incf	_waitZeroPeak& (0+255),f,b
 34331                           
 34332                           ; BSR set to: 1
 34333                           ;outputs_MC50.c: 282:         if ( waitZeroPeak > zeroCrossingWaitTime[zeroCrossingWaitT
      +                          imeIdx] )
 34334  004A1A  0EEF               	movlw	low _zeroCrossingWaitTime
 34335  004A1C  0100               	movlb	0	; () banked
 34336  004A1E  2584               	addwf	_zeroCrossingWaitTimeIdx& (0+255),w,b
 34337  004A20  6ED9               	movwf	fsr2l,c
 34338  004A22  6ADA               	clrf	fsr2h,c
 34339  004A24  0E02               	movlw	high _zeroCrossingWaitTime
 34340  004A26  22DA               	addwfc	fsr2h,f,c
 34341  004A28  0101               	movlb	1	; () banked
 34342  004A2A  5191               	movf	_waitZeroPeak& (0+255),w,b
 34343  004A2C  5CDE               	subwf	postinc2,w,c
 34344  004A2E  B0D8               	btfsc	status,0,c
 34345  004A30  D044               	goto	i2l14285
 34346                           
 34347                           ; BSR set to: 1
 34348                           ;outputs_MC50.c: 284:         {;outputs_MC50.c: 286:             if ((var_sys.Control50o
      +                          r60hz >= 90)&&(var_sys.Control50or60hz <= 105)){
 34349  004A32  0E59               	movlw	89
 34350  004A34  654D               	cpfsgt	(_var_sys+77)& (0+255),b	;volatile
 34351  004A36  D005               	goto	i2l14265
 34352                           
 34353                           ; BSR set to: 1
 34354  004A38  0E6A               	movlw	106
 34355  004A3A  614D               	cpfslt	(_var_sys+77)& (0+255),b	;volatile
 34356  004A3C  D002               	goto	i2l14265
 34357                           
 34358                           ; BSR set to: 1
 34359                           ;outputs_MC50.c: 287:                 var_sys.Torquerelanty = 1;
 34360  004A3E  0E01               	movlw	1
 34361  004A40  D001               	goto	L117
 34362  004A42                     i2l14265:
 34363                           
 34364                           ; BSR set to: 1
 34365                           ;outputs_MC50.c: 290:             {;outputs_MC50.c: 291:                var_sys.Torquere
      +                          lanty = 0;
 34366  004A42  0E00               	movlw	0
 34367  004A44                     L117:
 34368  004A44  6F15               	movwf	(_var_sys+21)& (0+255),b	;volatile
 34369                           
 34370                           ; BSR set to: 1
 34371                           ;outputs_MC50.c: 294:             ts_system.ts_TimeSlotTRIAC=80;
 34372                           
 34373                           ;outputs_MC50.c: 292:             }
 34374  004A46  0E50               	movlw	80
 34375  004A48  6F9F               	movwf	(_ts_system+5)& (0+255),b	;volatile
 34376                           
 34377                           ;outputs_MC50.c: 295:             var_sys.Control50or60hz = 0;
 34378  004A4A  0E00               	movlw	0
 34379  004A4C  6F4D               	movwf	(_var_sys+77)& (0+255),b	;volatile
 34380                           
 34381                           ;outputs_MC50.c: 296:             StateTRIAC=1;
 34382  004A4E  0E01               	movlw	1
 34383  004A50  6F90               	movwf	_StateTRIAC& (0+255),b
 34384                           
 34385                           ;outputs_MC50.c: 297:             zeroCrossing=1;
 34386  004A52  0E01               	movlw	1
 34387  004A54  6F92               	movwf	_zeroCrossing& (0+255),b
 34388                           
 34389                           ; BSR set to: 1
 34390                           ;outputs_MC50.c: 298:             powerControl_st.actualCycle++;
 34391  004A56  2B7F               	incf	(_powerControl_st+4)& (0+255),f,b
 34392                           
 34393                           ; BSR set to: 1
 34394                           ;outputs_MC50.c: 304:             if ( var_sys_NVM.electricBrake==1 && ts_system.TimeEle
      +                          ctricBrake>0 )
 34395  004A58  0100               	movlb	0	; () banked
 34396  004A5A  05AF               	decf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 34397  004A5C  A4D8               	btfss	status,2,c
 34398  004A5E  D00E               	goto	i2l14277
 34399                           
 34400                           ; BSR set to: 0
 34401  004A60  0101               	movlb	1	; () banked
 34402  004A62  BFC3               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 34403  004A64  D00B               	goto	i2l14277
 34404  004A66  51C3               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 34405  004A68  E103               	bnz	i2u1432_40
 34406  004A6A  05C2               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 34407  004A6C  A0D8               	btfss	status,0,c
 34408  004A6E  D006               	goto	i2l14277
 34409  004A70                     i2u1432_40:
 34410                           
 34411                           ; BSR set to: 1
 34412                           ;outputs_MC50.c: 305:             {;outputs_MC50.c: 307:                 if ( powerContr
      +                          ol_st.actualCycle>=2 )
 34413  004A70  0E01               	movlw	1
 34414  004A72  657F               	cpfsgt	(_powerControl_st+4)& (0+255),b
 34415  004A74  D022               	goto	i2l14285
 34416  004A76                     i2u1433_40:
 34417                           
 34418                           ; BSR set to: 1
 34419                           ;outputs_MC50.c: 308:                 {;outputs_MC50.c: 309:                     powerCo
      +                          ntrol_st.actualCycle=0;
 34420  004A76  0E00               	movlw	0
 34421  004A78  6F7F               	movwf	(_powerControl_st+4)& (0+255),b
 34422  004A7A  D01F               	goto	i2l14285
 34423  004A7C                     i2l14277:
 34424                           
 34425                           ;outputs_MC50.c: 313:             {;outputs_MC50.c: 314:                 if ( powerContr
      +                          ol_st.actualCycle>=(powerControl_st.decelarationCyclesOff+powerControl_st.decelarationCy
      +                          clesOn) )
 34426  004A7C  0101               	movlb	1	; () banked
 34427  004A7E  517C               	movf	(_powerControl_st+1)& (0+255),w,b
 34428  004A80  C17D  F005         	movff	_powerControl_st+2,??_controlMotorForce
 34429  004A84  6A06               	clrf	(??_controlMotorForce+1)^0,c
 34430  004A86  2605               	addwf	??_controlMotorForce^0,f,c
 34431  004A88  0E00               	movlw	0
 34432  004A8A  2206               	addwfc	(??_controlMotorForce+1)^0,f,c
 34433  004A8C  517F               	movf	(_powerControl_st+4)& (0+255),w,b
 34434  004A8E  6E07               	movwf	(??_controlMotorForce+2)^0,c
 34435  004A90  6A08               	clrf	(??_controlMotorForce+3)^0,c
 34436  004A92  5005               	movf	??_controlMotorForce^0,w,c
 34437  004A94  5C07               	subwf	(??_controlMotorForce+2)^0,w,c
 34438  004A96  5008               	movf	(??_controlMotorForce+3)^0,w,c
 34439  004A98  0A80               	xorlw	128
 34440  004A9A  6E09               	movwf	(??_controlMotorForce+4)^0,c
 34441  004A9C  5006               	movf	(??_controlMotorForce+1)^0,w,c
 34442  004A9E  0A80               	xorlw	128
 34443  004AA0  5809               	subwfb	(??_controlMotorForce+4)^0,w,c
 34444  004AA2  B0D8               	btfsc	status,0,c
 34445  004AA4  D7E8               	goto	i2u1433_40
 34446  004AA6  D009               	goto	i2l14285
 34447  004AA8                     i2l2190:
 34448                           
 34449                           ; BSR set to: 1
 34450  004AA8  B68D               	btfsc	141,3,c	;volatile
 34451  004AAA  D007               	goto	i2l14285
 34452                           
 34453                           ; BSR set to: 1
 34454  004AAC  5192               	movf	_zeroCrossing& (0+255),w,b
 34455  004AAE  B4D8               	btfsc	status,2,c
 34456  004AB0  D004               	goto	i2l14285
 34457                           
 34458                           ; BSR set to: 1
 34459                           ;outputs_MC50.c: 328:     {;outputs_MC50.c: 330:         zeroCrossing=0;
 34460  004AB2  0E00               	movlw	0
 34461  004AB4  6F92               	movwf	_zeroCrossing& (0+255),b
 34462                           
 34463                           ;outputs_MC50.c: 331:         waitZeroPeak=0;
 34464  004AB6  0E00               	movlw	0
 34465  004AB8  6F91               	movwf	_waitZeroPeak& (0+255),b
 34466  004ABA                     i2l14285:
 34467                           
 34468                           ; BSR set to: 1
 34469                           ;outputs_MC50.c: 336:     if ( PORTAbits.RA3!=0 )
 34470  004ABA  B68D               	btfsc	141,3,c	;volatile
 34471                           
 34472                           ; BSR set to: 1
 34473                           ;outputs_MC50.c: 337:     {;outputs_MC50.c: 339:         zeroCrossingLength++;
 34474  004ABC  2B93               	incf	_zeroCrossingLength& (0+255),f,b
 34475                           
 34476                           ; BSR set to: 1
 34477                           ;outputs_MC50.c: 342:    var_sys.Control50or60hz ++;
 34478                           
 34479                           ;outputs_MC50.c: 340:     }
 34480  004ABE  2B4D               	incf	(_var_sys+77)& (0+255),f,b	;volatile
 34481                           
 34482                           ; BSR set to: 1
 34483                           ;outputs_MC50.c: 352:     stateMotor = VerifyElectricalBrake(var_sys.StateMotor);
 34484  004AC0  5100               	movf	_var_sys& (0+255),w,b	;volatile
 34485  004AC2  EC9D  F03E         	call	i2_VerifyElectricalBrake
 34486  004AC6  0100               	movlb	0	; () banked
 34487  004AC8  6F83               	movwf	_stateMotor& (0+255),b
 34488                           
 34489                           ; BSR set to: 0
 34490                           ;outputs_MC50.c: 354:     if ( var_sys_NVM.electricBrake==1 && ts_system.TimeElectricBra
      +                          ke>0 && ts_system.TimeStopElectricBrake<=0 )
 34491  004ACA  05AF               	decf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 34492  004ACC  A4D8               	btfss	status,2,c
 34493  004ACE  D02E               	goto	i2l14309
 34494                           
 34495                           ; BSR set to: 0
 34496  004AD0  0101               	movlb	1	; () banked
 34497  004AD2  BFC3               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 34498  004AD4  D02B               	goto	i2l14309
 34499  004AD6  51C3               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 34500  004AD8  E103               	bnz	i2u1439_40
 34501  004ADA  05C2               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 34502  004ADC  A0D8               	btfss	status,0,c
 34503  004ADE  D026               	goto	i2l14309
 34504  004AE0                     i2u1439_40:
 34505                           
 34506                           ; BSR set to: 1
 34507  004AE0  BFDB               	btfsc	(_ts_system+65)& (0+255),7,b	;volatile
 34508  004AE2  D005               	goto	i2u1440_40
 34509  004AE4  51DB               	movf	(_ts_system+65)& (0+255),w,b	;volatile
 34510  004AE6  E122               	bnz	i2l14309
 34511  004AE8  05DA               	decf	(_ts_system+64)& (0+255),w,b	;volatile
 34512  004AEA  B0D8               	btfsc	status,0,c
 34513  004AEC  D01F               	goto	i2l14309
 34514  004AEE                     i2u1440_40:
 34515                           
 34516                           ; BSR set to: 1
 34517                           ;outputs_MC50.c: 355:     {;outputs_MC50.c: 357:         if(stateMotor !=0 && StateTRIAC
      +                          ==1 && ts_system.ts_TRIACWait<=0 && powerControl_st.actualCycle==0 && ts_system.TimeElec
      +                          tricBrake<(((5+6)*( 100/50))-(5*( 100/50))) )
 34518  004AEE  0100               	movlb	0	; () banked
 34519  004AF0  5183               	movf	_stateMotor& (0+255),w,b
 34520  004AF2  B4D8               	btfsc	status,2,c
 34521  004AF4  D03A               	goto	i2l14321
 34522                           
 34523                           ; BSR set to: 0
 34524  004AF6  0101               	movlb	1	; () banked
 34525  004AF8  0590               	decf	_StateTRIAC& (0+255),w,b
 34526  004AFA  A4D8               	btfss	status,2,c
 34527  004AFC  D036               	goto	i2l14321
 34528                           
 34529                           ; BSR set to: 1
 34530  004AFE  BFA1               	btfsc	(_ts_system+7)& (0+255),7,b	;volatile
 34531  004B00  D005               	goto	i2u1443_40
 34532  004B02  51A1               	movf	(_ts_system+7)& (0+255),w,b	;volatile
 34533  004B04  E132               	bnz	i2l14321
 34534  004B06  05A0               	decf	(_ts_system+6)& (0+255),w,b	;volatile
 34535  004B08  B0D8               	btfsc	status,0,c
 34536  004B0A  D02F               	goto	i2l14321
 34537  004B0C                     i2u1443_40:
 34538                           
 34539                           ; BSR set to: 1
 34540  004B0C  517F               	movf	(_powerControl_st+4)& (0+255),w,b
 34541  004B0E  A4D8               	btfss	status,2,c
 34542  004B10  D02C               	goto	i2l14321
 34543                           
 34544                           ; BSR set to: 1
 34545  004B12  BFC3               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 34546  004B14  D006               	goto	i2u1445_40
 34547  004B16  51C3               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 34548  004B18  E128               	bnz	i2l14321
 34549  004B1A  0E0C               	movlw	12
 34550  004B1C  5DC2               	subwf	(_ts_system+40)& (0+255),w,b	;volatile
 34551  004B1E  B0D8               	btfsc	status,0,c
 34552  004B20  D024               	goto	i2l14321
 34553  004B22                     i2u1445_40:
 34554                           
 34555                           ; BSR set to: 1
 34556                           
 34557                           ;outputs_MC50.c: 358:         {;outputs_MC50.c: 359:            do { LATDbits.LATD7 = 1;
      +                           } while(0);
 34558  004B22  8E86               	bsf	134,7,c	;volatile
 34559                           
 34560                           ; BSR set to: 1
 34561                           ;outputs_MC50.c: 360:            ts_system.ts_TRIACWait=-(25*200);
 34562  004B24  0EEC               	movlw	236
 34563  004B26  6FA1               	movwf	(_ts_system+7)& (0+255),b	;volatile
 34564  004B28  0E78               	movlw	120
 34565  004B2A  D01A               	goto	L118
 34566  004B2C                     i2l14309:
 34567                           
 34568                           ;outputs_MC50.c: 366:     {;outputs_MC50.c: 368:         if(stateMotor !=0 && ts_system.
      +                          ts_TimeSlotTRIAC<difTime && StateTRIAC==1 && ts_system.ts_TRIACWait<=0 && var_sys.InStop
      +                          ing==NO)
 34569  004B2C  0100               	movlb	0	; () banked
 34570  004B2E  5183               	movf	_stateMotor& (0+255),w,b
 34571  004B30  B4D8               	btfsc	status,2,c
 34572  004B32  D01B               	goto	i2l14321
 34573                           
 34574                           ; BSR set to: 0
 34575  004B34  0101               	movlb	1	; () banked
 34576  004B36  518F               	movf	_difTime& (0+255),w,b
 34577  004B38  5D9F               	subwf	(_ts_system+5)& (0+255),w,b	;volatile
 34578  004B3A  B0D8               	btfsc	status,0,c
 34579  004B3C  D016               	goto	i2l14321
 34580                           
 34581                           ; BSR set to: 1
 34582  004B3E  0590               	decf	_StateTRIAC& (0+255),w,b
 34583  004B40  A4D8               	btfss	status,2,c
 34584  004B42  D013               	goto	i2l14321
 34585                           
 34586                           ; BSR set to: 1
 34587  004B44  BFA1               	btfsc	(_ts_system+7)& (0+255),7,b	;volatile
 34588  004B46  D005               	goto	i2u1449_40
 34589  004B48  51A1               	movf	(_ts_system+7)& (0+255),w,b	;volatile
 34590  004B4A  E10F               	bnz	i2l14321
 34591  004B4C  05A0               	decf	(_ts_system+6)& (0+255),w,b	;volatile
 34592  004B4E  B0D8               	btfsc	status,0,c
 34593  004B50  D00C               	goto	i2l14321
 34594  004B52                     i2u1449_40:
 34595                           
 34596                           ; BSR set to: 1
 34597  004B52  510D               	movf	(_var_sys+13)& (0+255),w,b	;volatile
 34598  004B54  A4D8               	btfss	status,2,c
 34599  004B56  D009               	goto	i2l14321
 34600                           
 34601                           ; BSR set to: 1
 34602                           
 34603                           ;outputs_MC50.c: 369:         {;outputs_MC50.c: 370:            do { LATDbits.LATD7 = 1;
      +                           } while(0);
 34604  004B58  8E86               	bsf	134,7,c	;volatile
 34605                           
 34606                           ; BSR set to: 1
 34607                           ;outputs_MC50.c: 371:            ts_system.ts_TRIACWait=-200;
 34608  004B5A  0EFF               	movlw	255
 34609  004B5C  6FA1               	movwf	(_ts_system+7)& (0+255),b	;volatile
 34610  004B5E  0E38               	movlw	56
 34611  004B60                     L118:
 34612  004B60  6FA0               	movwf	(_ts_system+6)& (0+255),b	;volatile
 34613                           
 34614                           ;outputs_MC50.c: 372:            var_sys.TriacON=YES;
 34615  004B62  0E01               	movlw	1
 34616  004B64  6F0C               	movwf	(_var_sys+12)& (0+255),b	;volatile
 34617                           
 34618                           ;outputs_MC50.c: 373:            StateTRIAC=0;
 34619  004B66  0E00               	movlw	0
 34620  004B68  6F90               	movwf	_StateTRIAC& (0+255),b
 34621  004B6A                     i2l14321:
 34622                           
 34623                           ;outputs_MC50.c: 377:     if (((ts_system.ts_TimeSlotTRIAC <= 20 )&& ts_system.TimeElect
      +                          ricBrake<0) || (stateMotor==0))
 34624  004B6A  0E15               	movlw	21
 34625  004B6C  0101               	movlb	1	; () banked
 34626  004B6E  619F               	cpfslt	(_ts_system+5)& (0+255),b	;volatile
 34627  004B70  D002               	goto	i2u1452_40
 34628                           
 34629                           ; BSR set to: 1
 34630  004B72  BFC3               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 34631  004B74  D004               	goto	i2u1453_40
 34632  004B76                     i2u1452_40:
 34633                           
 34634                           ; BSR set to: 1
 34635  004B76  0100               	movlb	0	; () banked
 34636  004B78  5183               	movf	_stateMotor& (0+255),w,b
 34637  004B7A  A4D8               	btfss	status,2,c
 34638  004B7C  D004               	goto	i2l2217
 34639  004B7E                     i2u1453_40:
 34640                           
 34641                           ;outputs_MC50.c: 378:     {;outputs_MC50.c: 384:             do { LATDbits.LATD7 = 0; } 
      +                          while(0);
 34642  004B7E  9E86               	bcf	134,7,c	;volatile
 34643                           
 34644                           ;outputs_MC50.c: 385:             var_sys.TriacON=NO;
 34645  004B80  0E00               	movlw	0
 34646  004B82  0101               	movlb	1	; () banked
 34647  004B84  6F0C               	movwf	(_var_sys+12)& (0+255),b	;volatile
 34648  004B86                     i2l2217:
 34649                           
 34650                           ;outputs_MC50.c: 396:     if(stateMotor !=0 && ts_system.ts_TRIACWait>0)
 34651  004B86  0100               	movlb	0	; () banked
 34652  004B88  5183               	movf	_stateMotor& (0+255),w,b
 34653  004B8A  B4D8               	btfsc	status,2,c
 34654  004B8C  D00C               	goto	i2l14333
 34655                           
 34656                           ; BSR set to: 0
 34657  004B8E  0101               	movlb	1	; () banked
 34658  004B90  BFA1               	btfsc	(_ts_system+7)& (0+255),7,b	;volatile
 34659  004B92  D009               	goto	i2l14333
 34660  004B94  51A1               	movf	(_ts_system+7)& (0+255),w,b	;volatile
 34661  004B96  E103               	bnz	i2u1455_40
 34662  004B98  05A0               	decf	(_ts_system+6)& (0+255),w,b	;volatile
 34663  004B9A  A0D8               	btfss	status,0,c
 34664  004B9C  D004               	goto	i2l14333
 34665  004B9E                     i2u1455_40:
 34666                           
 34667                           ; BSR set to: 1
 34668                           ;outputs_MC50.c: 397:     {;outputs_MC50.c: 398:         ts_system.ts_TRIACWait--;
 34669  004B9E  07A0               	decf	(_ts_system+6)& (0+255),f,b	;volatile
 34670  004BA0  A0D8               	btfss	status,0,c
 34671  004BA2  07A1               	decf	(_ts_system+7)& (0+255),f,b	;volatile
 34672                           
 34673                           ;outputs_MC50.c: 399:     }
 34674  004BA4  0012               	return	
 34675  004BA6                     i2l14333:
 34676  004BA6  0100               	movlb	0	; () banked
 34677  004BA8  5183               	movf	_stateMotor& (0+255),w,b
 34678  004BAA  A4D8               	btfss	status,2,c
 34679  004BAC  0012               	return	
 34680                           
 34681                           ; BSR set to: 0
 34682  004BAE  0101               	movlb	1	; () banked
 34683  004BB0  AFA1               	btfss	(_ts_system+7)& (0+255),7,b	;volatile
 34684  004BB2  0012               	return	
 34685                           
 34686                           ; BSR set to: 1
 34687                           ;outputs_MC50.c: 401:     {;outputs_MC50.c: 402:         ts_system.ts_TRIACWait++;
 34688  004BB4  4BA0               	infsnz	(_ts_system+6)& (0+255),f,b	;volatile
 34689  004BB6  2BA1               	incf	(_ts_system+7)& (0+255),f,b	;volatile
 34690  004BB8  0012               	return		;funcret
 34691  004BBA                     __end_of_controlMotorForce:
 34692                           	callstack 0
 34693                           
 34694 ;; *************** function i2_VerifyElectricalBrake *****************
 34695 ;; Defined at:
 34696 ;;		line 658 in file "outputs_MC50.c"
 34697 ;; Parameters:    Size  Location     Type
 34698 ;;  actualState     1    wreg     enum E10381
 34699 ;; Auto vars:     Size  Location     Type
 34700 ;;  actualState     1    1[COMRAM] enum E10381
 34701 ;;  tempState       1    0[COMRAM] enum E10381
 34702 ;; Return value:  Size  Location     Type
 34703 ;;                  1    wreg      enum E10381
 34704 ;; Registers used:
 34705 ;;		wreg, status,2, status,0
 34706 ;; Tracked objects:
 34707 ;;		On entry : 3F/1
 34708 ;;		On exit  : 3E/0
 34709 ;;		Unchanged: 0/0
 34710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34712 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34714 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34715 ;;Total ram usage:        2 bytes
 34716 ;; Hardware stack levels used: 1
 34717 ;; This function calls:
 34718 ;;		Nothing
 34719 ;; This function is called by:
 34720 ;;		_controlMotorForce
 34721 ;; This function uses a non-reentrant model
 34722 ;;
 34723                           
 34724                           	psect	text194
 34725  007D3A                     __ptext194:
 34726                           	callstack 0
 34727  007D3A                     i2_VerifyElectricalBrake:
 34728                           	callstack 14
 34729                           
 34730                           ;incstack = 0
 34731                           ;i2VerifyElectricalBrake@actualState stored from wreg
 34732  007D3A  6E02               	movwf	i2VerifyElectricalBrake@actualState^0,c
 34733                           
 34734                           ;outputs_MC50.c: 658: stateMotor_enum VerifyElectricalBrake(stateMotor_enum actualState)
      +                          ;outputs_MC50.c: 659: {;outputs_MC50.c: 660:     stateMotor_enum tempState;;outputs_MC50
      +                          .c: 661:     tempState=actualState;
 34735  007D3C  C002  F001         	movff	i2VerifyElectricalBrake@actualState,i2VerifyElectricalBrake@tempState
 34736                           
 34737                           ;outputs_MC50.c: 662:     if(var_sys_NVM.electricBrake==1 && actualState==Stopped && ts_
      +                          system.TimeStopElectricBrake<=0)
 34738  007D40  0100               	movlb	0	; () banked
 34739  007D42  05AF               	decf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 34740  007D44  A4D8               	btfss	status,2,c
 34741  007D46  D02E               	goto	i2l2318
 34742                           
 34743                           ; BSR set to: 0
 34744  007D48  5002               	movf	i2VerifyElectricalBrake@actualState^0,w,c
 34745  007D4A  A4D8               	btfss	status,2,c
 34746  007D4C  D02B               	goto	i2l2318
 34747                           
 34748                           ; BSR set to: 0
 34749  007D4E  0101               	movlb	1	; () banked
 34750  007D50  BFDB               	btfsc	(_ts_system+65)& (0+255),7,b	;volatile
 34751  007D52  D005               	goto	i2u1386_40
 34752  007D54  51DB               	movf	(_ts_system+65)& (0+255),w,b	;volatile
 34753  007D56  E126               	bnz	i2l2318
 34754  007D58  05DA               	decf	(_ts_system+64)& (0+255),w,b	;volatile
 34755  007D5A  B0D8               	btfsc	status,0,c
 34756  007D5C  D023               	goto	i2l2318
 34757  007D5E                     i2u1386_40:
 34758                           
 34759                           ; BSR set to: 1
 34760                           ;outputs_MC50.c: 663:     {;outputs_MC50.c: 664:         if(actualState!=brakeElectric_s
      +                          t.lastState && brakeElectric_st.ElectricBrakeIsActive==NO )
 34761  007D5E  5002               	movf	i2VerifyElectricalBrake@actualState^0,w,c
 34762  007D60  0100               	movlb	0	; () banked
 34763  007D62  1978               	xorwf	_brakeElectric_st& (0+255),w,b
 34764  007D64  B4D8               	btfsc	status,2,c
 34765  007D66  D00B               	goto	i2l13951
 34766                           
 34767                           ; BSR set to: 0
 34768  007D68  5179               	movf	(_brakeElectric_st+1)& (0+255),w,b
 34769  007D6A  A4D8               	btfss	status,2,c
 34770  007D6C  D008               	goto	i2l13951
 34771                           
 34772                           ; BSR set to: 0
 34773                           ;outputs_MC50.c: 665:         {;outputs_MC50.c: 666:             brakeElectric_st.Electr
      +                          icBrakeIsActive=YES;
 34774  007D6E  0E01               	movlw	1
 34775  007D70  6F79               	movwf	(_brakeElectric_st+1)& (0+255),b
 34776                           
 34777                           ;outputs_MC50.c: 668:             ts_system.TimeElectricBrake=((5+6)*( 100/50));
 34778  007D72  0E00               	movlw	0
 34779  007D74  0101               	movlb	1	; () banked
 34780  007D76  6FC3               	movwf	(_ts_system+41)& (0+255),b	;volatile
 34781  007D78  0E16               	movlw	22
 34782  007D7A  6FC2               	movwf	(_ts_system+40)& (0+255),b	;volatile
 34783                           
 34784                           ;outputs_MC50.c: 670:         }
 34785  007D7C  D018               	goto	i2l2323
 34786  007D7E                     i2l13951:
 34787                           
 34788                           ; BSR set to: 0
 34789  007D7E  0579               	decf	(_brakeElectric_st+1)& (0+255),w,b
 34790  007D80  A4D8               	btfss	status,2,c
 34791  007D82  D00B               	goto	i2l13957
 34792                           
 34793                           ; BSR set to: 0
 34794  007D84  0101               	movlb	1	; () banked
 34795  007D86  BFC3               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 34796  007D88  D008               	goto	i2l13957
 34797  007D8A  51C3               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 34798  007D8C  E103               	bnz	i2u1390_40
 34799  007D8E  05C2               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 34800  007D90  A0D8               	btfss	status,0,c
 34801  007D92  D003               	goto	i2l13957
 34802  007D94                     i2u1390_40:
 34803                           
 34804                           ; BSR set to: 1
 34805                           ;outputs_MC50.c: 672:         {;outputs_MC50.c: 673:             tempState=InOpenFull;
 34806  007D94  0E01               	movlw	1
 34807  007D96  6E01               	movwf	i2VerifyElectricalBrake@tempState^0,c
 34808                           
 34809                           ;outputs_MC50.c: 686:         }
 34810  007D98  D00A               	goto	i2l2323
 34811  007D9A                     i2l13957:
 34812                           
 34813                           ;outputs_MC50.c: 688:         {;outputs_MC50.c: 689:             brakeElectric_st.lastSt
      +                          ate=Stopped;
 34814  007D9A  0E00               	movlw	0
 34815  007D9C  0100               	movlb	0	; () banked
 34816  007D9E  6F78               	movwf	_brakeElectric_st& (0+255),b
 34817                           
 34818                           ;outputs_MC50.c: 690:             brakeElectric_st.ElectricBrakeIsActive=NO;
 34819  007DA0  0E00               	movlw	0
 34820  007DA2  D004               	goto	L119
 34821  007DA4                     i2l2318:
 34822                           
 34823                           ;outputs_MC50.c: 695:     {;outputs_MC50.c: 696:         brakeElectric_st.lastState=actu
      +                          alState;
 34824  007DA4  C002  F078         	movff	i2VerifyElectricalBrake@actualState,_brakeElectric_st
 34825                           
 34826                           ;outputs_MC50.c: 697:         brakeElectric_st.ElectricBrakeIsActive=NO;
 34827  007DA8  0E00               	movlw	0
 34828  007DAA  0100               	movlb	0	; () banked
 34829  007DAC                     L119:
 34830  007DAC  6F79               	movwf	(_brakeElectric_st+1)& (0+255),b
 34831  007DAE                     i2l2323:
 34832                           
 34833                           ;outputs_MC50.c: 700:     return tempState;
 34834  007DAE  5001               	movf	i2VerifyElectricalBrake@tempState^0,w,c
 34835  007DB0  0012               	return		;funcret
 34836  007DB2                     __end_ofi2_VerifyElectricalBrake:
 34837                           	callstack 0
 34838                           
 34839 ;; *************** function i2_GetMotorPower *****************
 34840 ;; Defined at:
 34841 ;;		line 405 in file "outputs_MC50.c"
 34842 ;; Parameters:    Size  Location     Type
 34843 ;;		None
 34844 ;; Auto vars:     Size  Location     Type
 34845 ;;  defineatraso    1    3[COMRAM] unsigned char 
 34846 ;; Return value:  Size  Location     Type
 34847 ;;                  1    wreg      unsigned char 
 34848 ;; Registers used:
 34849 ;;		wreg, status,2, status,0, prodl, prodh
 34850 ;; Tracked objects:
 34851 ;;		On entry : 3F/E
 34852 ;;		On exit  : 3F/1
 34853 ;;		Unchanged: 0/0
 34854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34856 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34857 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34858 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34859 ;;Total ram usage:        4 bytes
 34860 ;; Hardware stack levels used: 1
 34861 ;; This function calls:
 34862 ;;		Nothing
 34863 ;; This function is called by:
 34864 ;;		_controlMotorForce
 34865 ;; This function uses a non-reentrant model
 34866 ;;
 34867                           
 34868                           	psect	text195
 34869  007016                     __ptext195:
 34870                           	callstack 0
 34871  007016                     i2_GetMotorPower:
 34872                           	callstack 14
 34873                           
 34874                           ; BSR set to: 14
 34875                           ;outputs_MC50.c: 408:     unsigned char defineatraso;;outputs_MC50.c: 413:     if(powerC
      +                          ontrol_st.decelarationActive==YES)
 34876                           
 34877                           ;incstack = 0
 34878  007016  0101               	movlb	1	; () banked
 34879  007018  057B               	decf	_powerControl_st& (0+255),w,b
 34880  00701A  A4D8               	btfss	status,2,c
 34881  00701C  D006               	goto	i2l13901
 34882                           
 34883                           ; BSR set to: 1
 34884                           ;outputs_MC50.c: 414:     {;outputs_MC50.c: 415:        temppower=(var_sys_NVM.motorPowe
      +                          r*6);
 34885  00701E  0100               	movlb	0	; () banked
 34886  007020  519A               	movf	(_var_sys_NVM+2)& (0+255),w,b	;volatile
 34887  007022  0D06               	mullw	6
 34888  007024  CFF3 F18E          	movff	prodl,_temppower
 34889                           
 34890                           ;outputs_MC50.c: 416:     }
 34891  007028  D043               	goto	i2l2235
 34892  00702A                     i2l13901:
 34893                           
 34894                           ; BSR set to: 1
 34895                           ;outputs_MC50.c: 418:     {;outputs_MC50.c: 419:         fullmotorPower=(var_sys_NVM.mot
      +                          orPower*6);
 34896  00702A  0100               	movlb	0	; () banked
 34897  00702C  519A               	movf	(_var_sys_NVM+2)& (0+255),w,b	;volatile
 34898  00702E  0D06               	mullw	6
 34899  007030  CFF3 F082          	movff	prodl,_fullmotorPower
 34900                           
 34901                           ; BSR set to: 0
 34902                           ;outputs_MC50.c: 421:         if(var_sys.velocityFactor>0)
 34903  007034  0101               	movlb	1	; () banked
 34904  007036  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 34905  007038  D01C               	goto	i2l13911
 34906  00703A  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 34907  00703C  E103               	bnz	i2u1376_40
 34908  00703E  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 34909  007040  A0D8               	btfss	status,0,c
 34910  007042  D017               	goto	i2l13911
 34911  007044                     i2u1376_40:
 34912                           
 34913                           ; BSR set to: 1
 34914                           ;outputs_MC50.c: 422:         {;outputs_MC50.c: 423:             if(var_sys.velocityFact
      +                          or>fullmotorPower)
 34915  007044  0100               	movlb	0	; () banked
 34916  007046  5182               	movf	_fullmotorPower& (0+255),w,b
 34917  007048  6E01               	movwf	??i2_GetMotorPower^0,c
 34918  00704A  6A02               	clrf	(??i2_GetMotorPower+1)^0,c
 34919  00704C  0101               	movlb	1	; () banked
 34920  00704E  510E               	movf	(_var_sys+14)& (0+255),w,b	;volatile
 34921  007050  5C01               	subwf	??i2_GetMotorPower^0,w,c
 34922  007052  5002               	movf	(??i2_GetMotorPower+1)^0,w,c
 34923  007054  0A80               	xorlw	128
 34924  007056  6E03               	movwf	(??i2_GetMotorPower+2)^0,c
 34925  007058  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 34926  00705A  0A80               	xorlw	128
 34927  00705C  5803               	subwfb	(??i2_GetMotorPower+2)^0,w,c
 34928  00705E  B0D8               	btfsc	status,0,c
 34929  007060  D002               	goto	i2l13909
 34930                           
 34931                           ; BSR set to: 1
 34932                           ;outputs_MC50.c: 424:             {;outputs_MC50.c: 425:                 temppower=1;
 34933  007062  0E01               	movlw	1
 34934  007064  D004               	goto	L121
 34935  007066                     i2l13909:
 34936                           
 34937                           ; BSR set to: 1
 34938                           ;outputs_MC50.c: 428:             {;outputs_MC50.c: 430:                 temppower =full
      +                          motorPower-var_sys.velocityFactor;
 34939  007066  510E               	movf	(_var_sys+14)& (0+255),w,b	;volatile
 34940  007068  0100               	movlb	0	; () banked
 34941  00706A  5D82               	subwf	_fullmotorPower& (0+255),w,b
 34942  00706C  D017               	goto	L122
 34943  00706E                     L121:
 34944  00706E  6F8E               	movwf	_temppower& (0+255),b
 34945  007070  D01F               	goto	i2l2235
 34946  007072                     i2l13911:
 34947                           
 34948                           ; BSR set to: 1
 34949  007072  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 34950  007074  D005               	goto	i2u1378_40
 34951  007076  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 34952  007078  E113               	bnz	i2l13921
 34953  00707A  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 34954  00707C  B0D8               	btfsc	status,0,c
 34955  00707E  D010               	goto	i2l13921
 34956  007080                     i2u1378_40:
 34957                           
 34958                           ; BSR set to: 1
 34959  007080  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 34960  007082  D005               	goto	i2u1379_40
 34961  007084  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 34962  007086  E10C               	bnz	i2l13921
 34963  007088  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 34964  00708A  B0D8               	btfsc	status,0,c
 34965  00708C  D009               	goto	i2l13921
 34966  00708E                     i2u1379_40:
 34967                           
 34968                           ; BSR set to: 1
 34969                           ;outputs_MC50.c: 434:         {;outputs_MC50.c: 435:             temppower =fullmotorPow
      +                          er;
 34970  00708E  C082  F18E         	movff	_fullmotorPower,_temppower
 34971                           
 34972                           ; BSR set to: 1
 34973                           ;outputs_MC50.c: 438:             if ( var_sys_NVM.motorPower>8 )
 34974  007092  0E08               	movlw	8
 34975  007094  0100               	movlb	0	; () banked
 34976  007096  659A               	cpfsgt	(_var_sys_NVM+2)& (0+255),b	;volatile
 34977  007098  D00B               	goto	i2l2235
 34978                           
 34979                           ; BSR set to: 0
 34980                           ;outputs_MC50.c: 439:             {;outputs_MC50.c: 440:                 temppower = 80 
      +                          -23 +1;
 34981  00709A  0E3A               	movlw	58
 34982  00709C                     L122:
 34983  00709C  0101               	movlb	1	; () banked
 34984  00709E  D7E7               	goto	L121
 34985  0070A0                     i2l13921:
 34986                           
 34987                           ; BSR set to: 1
 34988  0070A0  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 34989  0070A2  D006               	goto	i2l2235
 34990  0070A4  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 34991  0070A6  E102               	bnz	i2u1381_40
 34992  0070A8  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 34993  0070AA  B0D8               	btfsc	status,0,c
 34994  0070AC                     i2u1381_40:
 34995                           
 34996                           ; BSR set to: 1
 34997                           ;outputs_MC50.c: 447:                 temppower = var_sys.velocityFactorstop;
 34998  0070AC  C110  F18E         	movff	_var_sys+16,_temppower	;volatile
 34999  0070B0                     i2l2235:
 35000                           
 35001                           ;outputs_MC50.c: 451:     if ((var_sys.velocityFactorstop > 0)&&(var_sys.velocityFactor 
      +                          <= 0 )){
 35002  0070B0  0101               	movlb	1	; () banked
 35003  0070B2  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 35004  0070B4  D00E               	goto	i2l13931
 35005  0070B6  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 35006  0070B8  E103               	bnz	i2u1382_40
 35007  0070BA  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 35008  0070BC  A0D8               	btfss	status,0,c
 35009  0070BE  D009               	goto	i2l13931
 35010  0070C0                     i2u1382_40:
 35011                           
 35012                           ; BSR set to: 1
 35013  0070C0  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 35014  0070C2  D005               	goto	i2u1383_40
 35015  0070C4  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 35016  0070C6  E105               	bnz	i2l13931
 35017  0070C8  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 35018  0070CA  B0D8               	btfsc	status,0,c
 35019  0070CC  D002               	goto	i2l13931
 35020  0070CE                     i2u1383_40:
 35021                           
 35022                           ; BSR set to: 1
 35023                           ;outputs_MC50.c: 452:     defineatraso = 5;
 35024  0070CE  0E05               	movlw	5
 35025  0070D0  D001               	goto	L120
 35026  0070D2                     i2l13931:
 35027                           
 35028                           ; BSR set to: 1
 35029                           ;outputs_MC50.c: 455:     {;outputs_MC50.c: 456:     defineatraso = 23;
 35030  0070D2  0E17               	movlw	23
 35031  0070D4                     L120:
 35032  0070D4  6E04               	movwf	i2GetMotorPower@defineatraso^0,c
 35033                           
 35034                           ; BSR set to: 1
 35035                           ;outputs_MC50.c: 459:     return temppower+defineatraso;
 35036  0070D6  518E               	movf	_temppower& (0+255),w,b
 35037  0070D8  2404               	addwf	i2GetMotorPower@defineatraso^0,w,c
 35038                           
 35039                           ; BSR set to: 1
 35040  0070DA  0012               	return		;funcret
 35041  0070DC                     __end_ofi2_GetMotorPower:
 35042                           	callstack 0
 35043                           
 35044 ;; *************** function _TMR1_WriteTimer *****************
 35045 ;; Defined at:
 35046 ;;		line 129 in file "mcc_generated_files/tmr1.c"
 35047 ;; Parameters:    Size  Location     Type
 35048 ;;  timerVal        2    0[COMRAM] unsigned short 
 35049 ;; Auto vars:     Size  Location     Type
 35050 ;;		None
 35051 ;; Return value:  Size  Location     Type
 35052 ;;                  1    wreg      void 
 35053 ;; Registers used:
 35054 ;;		None
 35055 ;; Tracked objects:
 35056 ;;		On entry : 3F/1
 35057 ;;		On exit  : 3F/1
 35058 ;;		Unchanged: 3F/0
 35059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35060 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35061 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35063 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35064 ;;Total ram usage:        2 bytes
 35065 ;; Hardware stack levels used: 1
 35066 ;; This function calls:
 35067 ;;		Nothing
 35068 ;; This function is called by:
 35069 ;;		_TMR1_ISR
 35070 ;; This function uses a non-reentrant model
 35071 ;;
 35072                           
 35073                           	psect	text196
 35074  008F8C                     __ptext196:
 35075                           	callstack 0
 35076  008F8C                     _TMR1_WriteTimer:
 35077                           	callstack 15
 35078                           
 35079                           ; BSR set to: 1
 35080                           ;mcc_generated_files/tmr1.c: 129: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 130: {;mcc_generated_files/tmr1.c: 131:     if (T1CONbits.nT1SYNC == 1)
 35081                           
 35082                           ; BSR set to: 1
 35083                           ;incstack = 0
 35084  008F8C  A4CF               	btfss	207,2,c	;volatile
 35085  008F8E  D007               	goto	i2l1147
 35086                           
 35087                           ; BSR set to: 1
 35088                           ;mcc_generated_files/tmr1.c: 132:     {;mcc_generated_files/tmr1.c: 134:         T1CONbi
      +                          ts.TMR1ON = 0;
 35089  008F90  90CF               	bcf	207,0,c	;volatile
 35090                           
 35091                           ;mcc_generated_files/tmr1.c: 137:         TMR1H = (uint8_t)(timerVal >> 8);
 35092  008F92  C002  FFCE         	movff	TMR1_WriteTimer@timerVal+1,4046	;volatile
 35093                           
 35094                           ;mcc_generated_files/tmr1.c: 138:         TMR1L = (uint8_t)timerVal;
 35095  008F96  C001  FFCD         	movff	TMR1_WriteTimer@timerVal,4045	;volatile
 35096                           
 35097                           ;mcc_generated_files/tmr1.c: 141:         T1CONbits.TMR1ON =1;
 35098  008F9A  80CF               	bsf	207,0,c	;volatile
 35099                           
 35100                           ;mcc_generated_files/tmr1.c: 142:     }
 35101  008F9C  0012               	return	
 35102  008F9E                     i2l1147:
 35103                           
 35104                           ; BSR set to: 1
 35105                           ;mcc_generated_files/tmr1.c: 144:     {;mcc_generated_files/tmr1.c: 146:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
 35106  008F9E  C002  FFCE         	movff	TMR1_WriteTimer@timerVal+1,4046	;volatile
 35107                           
 35108                           ;mcc_generated_files/tmr1.c: 147:         TMR1L = (uint8_t)timerVal;
 35109  008FA2  C001  FFCD         	movff	TMR1_WriteTimer@timerVal,4045	;volatile
 35110                           
 35111                           ; BSR set to: 1
 35112  008FA6  0012               	return		;funcret
 35113  008FA8                     __end_of_TMR1_WriteTimer:
 35114                           	callstack 0
 35115                           
 35116 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 35117 ;; Defined at:
 35118 ;;		line 196 in file "mcc_generated_files/tmr1.c"
 35119 ;; Parameters:    Size  Location     Type
 35120 ;;		None
 35121 ;; Auto vars:     Size  Location     Type
 35122 ;;		None
 35123 ;; Return value:  Size  Location     Type
 35124 ;;                  1    wreg      void 
 35125 ;; Registers used:
 35126 ;;		None
 35127 ;; Tracked objects:
 35128 ;;		On entry : 3F/2
 35129 ;;		On exit  : 3F/2
 35130 ;;		Unchanged: 3F/0
 35131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35135 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35136 ;;Total ram usage:        0 bytes
 35137 ;; Hardware stack levels used: 1
 35138 ;; This function calls:
 35139 ;;		Nothing
 35140 ;; This function is called by:
 35141 ;;		_TMR1_Initialize
 35142 ;;		_TMR1_ISR
 35143 ;; This function uses a non-reentrant model
 35144 ;;
 35145                           
 35146                           	psect	text197
 35147  0092C6                     __ptext197:
 35148                           	callstack 0
 35149  0092C6                     _TMR1_DefaultInterruptHandler:
 35150                           	callstack 15
 35151                           
 35152                           ; BSR set to: 2
 35153                           
 35154                           ; BSR set to: 1
 35155                           ;incstack = 0
 35156  0092C6  0012               	return		;funcret
 35157  0092C8                     __end_of_TMR1_DefaultInterruptHandler:
 35158                           	callstack 0
 35159                           
 35160 ;; *************** function _TMR0_ISR *****************
 35161 ;; Defined at:
 35162 ;;		line 127 in file "mcc_generated_files/tmr0.c"
 35163 ;; Parameters:    Size  Location     Type
 35164 ;;		None
 35165 ;; Auto vars:     Size  Location     Type
 35166 ;;		None
 35167 ;; Return value:  Size  Location     Type
 35168 ;;                  1    wreg      void 
 35169 ;; Registers used:
 35170 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 35171 ;; Tracked objects:
 35172 ;;		On entry : 3F/E
 35173 ;;		On exit  : 0/0
 35174 ;;		Unchanged: 0/0
 35175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35179 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35180 ;;Total ram usage:        0 bytes
 35181 ;; Hardware stack levels used: 1
 35182 ;; Hardware stack levels required when called: 1
 35183 ;; This function calls:
 35184 ;;		Absolute function
 35185 ;;		_TMR0_DefaultInterruptHandler
 35186 ;;		_rxi
 35187 ;; This function is called by:
 35188 ;;		_INTERRUPT_InterruptManager
 35189 ;; This function uses a non-reentrant model
 35190 ;;
 35191                           
 35192                           	psect	text198
 35193  008E40                     __ptext198:
 35194                           	callstack 0
 35195  008E40                     _TMR0_ISR:
 35196                           	callstack 15
 35197                           
 35198                           ; BSR set to: 14
 35199                           ;mcc_generated_files/tmr0.c: 130:     PIR0bits.TMR0IF = 0;
 35200                           
 35201                           ; BSR set to: 2
 35202                           ;incstack = 0
 35203  008E40  9BCA               	bcf	202,5,b	;volatile
 35204                           
 35205                           ; BSR set to: 14
 35206                           ;mcc_generated_files/tmr0.c: 132:     rxi();
 35207  008E42  EC42  F021         	call	_rxi	;wreg free
 35208                           
 35209                           ;mcc_generated_files/tmr0.c: 134:     if(TMR0_InterruptHandler)
 35210  008E46  0102               	movlb	2	; () banked
 35211  008E48  51E3               	movf	_TMR0_InterruptHandler& (0+255),w,b
 35212  008E4A  11E4               	iorwf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 35213  008E4C  B4D8               	btfsc	status,2,c
 35214  008E4E  0012               	return	
 35215                           
 35216                           ; BSR set to: 2
 35217                           ;mcc_generated_files/tmr0.c: 135:     {;mcc_generated_files/tmr0.c: 136:         TMR0_In
      +                          terruptHandler();
 35218  008E50  D801               	call	i2u1832_48
 35219  008E52  0012               	return	
 35220  008E54                     i2u1832_48:
 35221  008E54  0005               	push	
 35222  008E56  6EFA               	movwf	pclath,c
 35223  008E58  51E3               	movf	_TMR0_InterruptHandler& (0+255),w,b
 35224  008E5A  6EFD               	movwf	tosl,c
 35225  008E5C  51E4               	movf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 35226  008E5E  6EFE               	movwf	tosh,c
 35227  008E60  6AFF               	clrf	tosu,c
 35228  008E62  50FA               	movf	pclath,w,c
 35229  008E64  0012               	return		;indir
 35230  008E66                     __end_of_TMR0_ISR:
 35231                           	callstack 0
 35232                           
 35233 ;; *************** function _rxi *****************
 35234 ;; Defined at:
 35235 ;;		line 41 in file "inputs_MC50.c"
 35236 ;; Parameters:    Size  Location     Type
 35237 ;;		None
 35238 ;; Auto vars:     Size  Location     Type
 35239 ;;		None
 35240 ;; Return value:  Size  Location     Type
 35241 ;;                  1    wreg      void 
 35242 ;; Registers used:
 35243 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 35244 ;; Tracked objects:
 35245 ;;		On entry : 3F/E
 35246 ;;		On exit  : 3C/0
 35247 ;;		Unchanged: 0/0
 35248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35250 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35251 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35252 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35253 ;;Total ram usage:        2 bytes
 35254 ;; Hardware stack levels used: 1
 35255 ;; This function calls:
 35256 ;;		Nothing
 35257 ;; This function is called by:
 35258 ;;		_TMR0_ISR
 35259 ;; This function uses a non-reentrant model
 35260 ;;
 35261                           
 35262                           	psect	text199
 35263  004284                     __ptext199:
 35264                           	callstack 0
 35265  004284                     _rxi:
 35266                           	callstack 15
 35267                           
 35268                           ; BSR set to: 14
 35269                           ;inputs_MC50.c: 43:     RFBit = PORTBbits.RB3;
 35270                           
 35271                           ;incstack = 0
 35272  004284  0E00               	movlw	0
 35273  004286  B68E               	btfsc	142,3,c	;volatile
 35274  004288  0E01               	movlw	1
 35275  00428A  0100               	movlb	0	; () banked
 35276  00428C  6F89               	movwf	_RFBit& (0+255),b	;volatile
 35277                           
 35278                           ; BSR set to: 0
 35279                           ;inputs_MC50.c: 47:     if (RFFull)
 35280  00428E  518B               	movf	_RFFull& (0+255),w,b	;volatile
 35281  004290  A4D8               	btfss	status,2,c
 35282  004292  0012               	return	
 35283  004294  D116               	goto	i2l14215
 35284  004296                     i2l14105:
 35285                           
 35286                           ; BSR set to: 1
 35287                           ;inputs_MC50.c: 53:             if (RFBit == 0) {
 35288  004296  0100               	movlb	0	; () banked
 35289  004298  5189               	movf	_RFBit& (0+255),w,b	;volatile
 35290  00429A  A4D8               	btfss	status,2,c
 35291  00429C  D004               	goto	i2l14109
 35292                           
 35293                           ; BSR set to: 0
 35294                           ;inputs_MC50.c: 56:                 RFstate = 3;
 35295  00429E  0E03               	movlw	3
 35296  0042A0  0101               	movlb	1	; () banked
 35297  0042A2  6F98               	movwf	_RFstate& (0+255),b
 35298                           
 35299                           ;inputs_MC50.c: 57:             } else {
 35300  0042A4  0012               	return	
 35301  0042A6                     i2l14109:
 35302                           
 35303                           ; BSR set to: 0
 35304                           ;inputs_MC50.c: 58:                 RFcount--;
 35305  0042A6  077E               	decf	_RFcount& (0+255),f,b
 35306  0042A8  A0D8               	btfss	status,0,c
 35307  0042AA  077F               	decf	(_RFcount+1)& (0+255),f,b
 35308                           
 35309                           ; BSR set to: 0
 35310                           ;inputs_MC50.c: 59:                 if (RFcount < -10)
 35311  0042AC  AF7F               	btfss	(_RFcount+1)& (0+255),7,b
 35312  0042AE  0012               	return	
 35313  0042B0  0EF6               	movlw	246
 35314  0042B2  5D7E               	subwf	_RFcount& (0+255),w,b
 35315  0042B4  0EFF               	movlw	255
 35316  0042B6  597F               	subwfb	(_RFcount+1)& (0+255),w,b
 35317  0042B8  B0D8               	btfsc	status,0,c
 35318  0042BA  0012               	return	
 35319  0042BC                     i2u1397_40:
 35320  0042BC                     i2l14113:
 35321                           
 35322                           ; BSR set to: 0
 35323                           ;inputs_MC50.c: 60:                 {;inputs_MC50.c: 62:                     RFstate = 0
      +                          ;
 35324  0042BC  0E00               	movlw	0
 35325  0042BE  0101               	movlb	1	; () banked
 35326  0042C0  6F98               	movwf	_RFstate& (0+255),b
 35327  0042C2  0012               	return	
 35328  0042C4                     i2l14115:
 35329                           
 35330                           ; BSR set to: 1
 35331                           ;inputs_MC50.c: 67:             if (RFBit) {
 35332  0042C4  0100               	movlb	0	; () banked
 35333  0042C6  5189               	movf	_RFBit& (0+255),w,b	;volatile
 35334  0042C8  B4D8               	btfsc	status,2,c
 35335  0042CA  D02C               	goto	i2l14135
 35336                           
 35337                           ; BSR set to: 0
 35338                           ;inputs_MC50.c: 71:                 RFstate = 2;
 35339  0042CC  0E02               	movlw	2
 35340  0042CE  0101               	movlb	1	; () banked
 35341  0042D0  6F98               	movwf	_RFstate& (0+255),b
 35342                           
 35343                           ; BSR set to: 1
 35344                           ;inputs_MC50.c: 72:                 BufferRF[Bptr] >>= 1;
 35345  0042D2  0EC8               	movlw	low _BufferRF
 35346  0042D4  0100               	movlb	0	; () banked
 35347  0042D6  258D               	addwf	_Bptr& (0+255),w,b
 35348  0042D8  6ED9               	movwf	fsr2l,c
 35349  0042DA  6ADA               	clrf	fsr2h,c
 35350  0042DC  0E02               	movlw	high _BufferRF
 35351  0042DE  22DA               	addwfc	fsr2h,f,c
 35352  0042E0  90D8               	bcf	status,0,c
 35353  0042E2  32DF               	rrcf	indf2,f,c
 35354                           
 35355                           ; BSR set to: 0
 35356                           ;inputs_MC50.c: 73:                 if (RFcount >= 0) {
 35357  0042E4  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 35358  0042E6  D008               	goto	i2l14125
 35359                           
 35360                           ; BSR set to: 0
 35361                           ;inputs_MC50.c: 74:                     BufferRF[Bptr] += 0x80;
 35362  0042E8  0EC8               	movlw	low _BufferRF
 35363  0042EA  258D               	addwf	_Bptr& (0+255),w,b
 35364  0042EC  6ED9               	movwf	fsr2l,c
 35365  0042EE  6ADA               	clrf	fsr2h,c
 35366  0042F0  0E02               	movlw	high _BufferRF
 35367  0042F2  22DA               	addwfc	fsr2h,f,c
 35368  0042F4  0E80               	movlw	128
 35369  0042F6  26DF               	addwf	indf2,f,c
 35370  0042F8                     i2l14125:
 35371                           
 35372                           ; BSR set to: 0
 35373                           ;inputs_MC50.c: 81:                 RFcount = 0;
 35374  0042F8  0E00               	movlw	0
 35375  0042FA  6F7F               	movwf	(_RFcount+1)& (0+255),b
 35376  0042FC  0E00               	movlw	0
 35377  0042FE  6F7E               	movwf	_RFcount& (0+255),b
 35378                           
 35379                           ; BSR set to: 0
 35380                           ;inputs_MC50.c: 83:                 if ((++BitCount & 7) == 0)
 35381  004300  2B8C               	incf	_BitCount& (0+255),f,b
 35382  004302  C08C  F001         	movff	_BitCount,??_rxi
 35383  004306  0E07               	movlw	7
 35384  004308  1601               	andwf	??_rxi^0,f,c
 35385  00430A  B4D8               	btfsc	status,2,c
 35386                           
 35387                           ; BSR set to: 0
 35388                           ;inputs_MC50.c: 84:                     Bptr++;
 35389  00430C  2B8D               	incf	_Bptr& (0+255),f,b
 35390                           
 35391                           ; BSR set to: 0
 35392                           ;inputs_MC50.c: 85:                 if (BitCount == 65) {
 35393  00430E  0E41               	movlw	65
 35394  004310  198C               	xorwf	_BitCount& (0+255),w,b
 35395  004312  A4D8               	btfss	status,2,c
 35396  004314  0012               	return	
 35397                           
 35398                           ; BSR set to: 0
 35399                           ;inputs_MC50.c: 86:                     RFstate = 0;
 35400  004316  0E00               	movlw	0
 35401  004318  0101               	movlb	1	; () banked
 35402  00431A  6F98               	movwf	_RFstate& (0+255),b
 35403                           
 35404                           ;inputs_MC50.c: 87:                     RFFull = 1;
 35405  00431C  0E01               	movlw	1
 35406  00431E  0100               	movlb	0	; () banked
 35407  004320  6F8B               	movwf	_RFFull& (0+255),b	;volatile
 35408  004322  0012               	return	
 35409  004324                     i2l14135:
 35410                           
 35411                           ; BSR set to: 0
 35412                           ;inputs_MC50.c: 92:                 RFcount++;
 35413  004324  4B7E               	infsnz	_RFcount& (0+255),f,b
 35414  004326  2B7F               	incf	(_RFcount+1)& (0+255),f,b
 35415                           
 35416                           ; BSR set to: 0
 35417                           ;inputs_MC50.c: 93:                 if (RFcount >= 10)
 35418  004328  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 35419  00432A  0012               	return	
 35420  00432C  517F               	movf	(_RFcount+1)& (0+255),w,b
 35421  00432E  E104               	bnz	i2u1402_40
 35422  004330  0E0A               	movlw	10
 35423  004332  5D7E               	subwf	_RFcount& (0+255),w,b
 35424  004334  A0D8               	btfss	status,0,c
 35425  004336  0012               	return	
 35426  004338                     i2u1402_40:
 35427                           
 35428                           ; BSR set to: 0
 35429                           ;inputs_MC50.c: 94:                 {;inputs_MC50.c: 96:                     RFstate = 1
      +                          ;
 35430  004338  0E01               	movlw	1
 35431  00433A  0101               	movlb	1	; () banked
 35432  00433C  6F98               	movwf	_RFstate& (0+255),b
 35433                           
 35434                           ;inputs_MC50.c: 97:                     Bptr = 0;
 35435  00433E  0E00               	movlw	0
 35436  004340  0100               	movlb	0	; () banked
 35437  004342  6F8D               	movwf	_Bptr& (0+255),b
 35438                           
 35439                           ;inputs_MC50.c: 98:                     BitCount = 0;
 35440  004344  0E00               	movlw	0
 35441  004346  6F8C               	movwf	_BitCount& (0+255),b
 35442  004348  0012               	return	
 35443  00434A                     i2l14141:
 35444                           
 35445                           ; BSR set to: 1
 35446                           ;inputs_MC50.c: 103:             if (RFBit) {
 35447  00434A  0100               	movlb	0	; () banked
 35448  00434C  5189               	movf	_RFBit& (0+255),w,b	;volatile
 35449  00434E  B4D8               	btfsc	status,2,c
 35450  004350  D030               	goto	i2l14157
 35451                           
 35452                           ; BSR set to: 0
 35453                           ;inputs_MC50.c: 106:                 if ((RFcount < 20) || (RFcount >= 45)) {
 35454  004352  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 35455  004354  D00E               	goto	i2u1405_40
 35456  004356  517F               	movf	(_RFcount+1)& (0+255),w,b
 35457  004358  E104               	bnz	i2u1404_40
 35458  00435A  0E14               	movlw	20
 35459  00435C  5D7E               	subwf	_RFcount& (0+255),w,b
 35460  00435E  A0D8               	btfss	status,0,c
 35461  004360  D008               	goto	i2u1405_40
 35462  004362                     i2u1404_40:
 35463                           
 35464                           ; BSR set to: 0
 35465  004362  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 35466  004364  D01E               	goto	i2l14155
 35467  004366  517F               	movf	(_RFcount+1)& (0+255),w,b
 35468  004368  E104               	bnz	i2u1405_40
 35469  00436A  0E2D               	movlw	45
 35470  00436C  5D7E               	subwf	_RFcount& (0+255),w,b
 35471  00436E  A0D8               	btfss	status,0,c
 35472  004370  D018               	goto	i2l14155
 35473  004372                     i2u1405_40:
 35474                           
 35475                           ; BSR set to: 0
 35476                           ;inputs_MC50.c: 107:                     if((RFcount < 80) || RFcount>=100)
 35477  004372  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 35478  004374  D7A3               	goto	i2u1397_40
 35479  004376  517F               	movf	(_RFcount+1)& (0+255),w,b
 35480  004378  E104               	bnz	i2u1406_40
 35481  00437A  0E50               	movlw	80
 35482  00437C  5D7E               	subwf	_RFcount& (0+255),w,b
 35483  00437E  A0D8               	btfss	status,0,c
 35484  004380  D79D               	goto	i2u1397_40
 35485  004382                     i2u1406_40:
 35486                           
 35487                           ; BSR set to: 0
 35488  004382  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 35489  004384  D006               	goto	i2l14153
 35490  004386  517F               	movf	(_RFcount+1)& (0+255),w,b
 35491  004388  E199               	bnz	i2l14113
 35492  00438A  0E64               	movlw	100
 35493  00438C  5D7E               	subwf	_RFcount& (0+255),w,b
 35494  00438E  B0D8               	btfsc	status,0,c
 35495  004390  D795               	goto	i2u1397_40
 35496  004392                     i2l14153:
 35497                           
 35498                           ; BSR set to: 0
 35499                           ;inputs_MC50.c: 112:                     {;inputs_MC50.c: 113:                         R
      +                          Fcount = -10;
 35500  004392  0EFF               	movlw	255
 35501  004394  6F7F               	movwf	(_RFcount+1)& (0+255),b
 35502  004396  0EF6               	movlw	246
 35503  004398  6F7E               	movwf	_RFcount& (0+255),b
 35504                           
 35505                           ;inputs_MC50.c: 114:                         RFstate = 4;
 35506  00439A  0E04               	movlw	4
 35507  00439C  0101               	movlb	1	; () banked
 35508  00439E  6F98               	movwf	_RFstate& (0+255),b
 35509  0043A0  0012               	return	
 35510  0043A2                     i2l14155:
 35511                           
 35512                           ; BSR set to: 0
 35513                           ;inputs_MC50.c: 118:                     RFcount = 0;
 35514  0043A2  0E00               	movlw	0
 35515  0043A4  6F7F               	movwf	(_RFcount+1)& (0+255),b
 35516  0043A6  0E00               	movlw	0
 35517  0043A8  6F7E               	movwf	_RFcount& (0+255),b
 35518                           
 35519                           ;inputs_MC50.c: 119:                     RFstate = 2;
 35520  0043AA  0E02               	movlw	2
 35521  0043AC  0101               	movlb	1	; () banked
 35522  0043AE  6F98               	movwf	_RFstate& (0+255),b
 35523  0043B0  0012               	return	
 35524  0043B2                     i2l14157:
 35525                           
 35526                           ; BSR set to: 0
 35527                           ;inputs_MC50.c: 122:                 RFcount++;
 35528  0043B2  4B7E               	infsnz	_RFcount& (0+255),f,b
 35529  0043B4  2B7F               	incf	(_RFcount+1)& (0+255),f,b
 35530  0043B6  0012               	return	
 35531  0043B8                     i2l14159:
 35532                           
 35533                           ; BSR set to: 1
 35534                           ;inputs_MC50.c: 127:             if (RFBit == 0) {
 35535  0043B8  0100               	movlb	0	; () banked
 35536  0043BA  5189               	movf	_RFBit& (0+255),w,b	;volatile
 35537  0043BC  A4D8               	btfss	status,2,c
 35538  0043BE  D056               	goto	i2l14195
 35539                           
 35540                           ; BSR set to: 0
 35541                           ;inputs_MC50.c: 130:                 RFstate = 5;
 35542  0043C0  0E05               	movlw	5
 35543  0043C2  0101               	movlb	1	; () banked
 35544  0043C4  6F98               	movwf	_RFstate& (0+255),b
 35545                           
 35546                           ; BSR set to: 1
 35547                           ;inputs_MC50.c: 131:                 BufferRF[Bptr] >>= 1;
 35548  0043C6  0EC8               	movlw	low _BufferRF
 35549  0043C8  0100               	movlb	0	; () banked
 35550  0043CA  258D               	addwf	_Bptr& (0+255),w,b
 35551  0043CC  6ED9               	movwf	fsr2l,c
 35552  0043CE  6ADA               	clrf	fsr2h,c
 35553  0043D0  0E02               	movlw	high _BufferRF
 35554  0043D2  22DA               	addwfc	fsr2h,f,c
 35555  0043D4  90D8               	bcf	status,0,c
 35556  0043D6  32DF               	rrcf	indf2,f,c
 35557                           
 35558                           ; BSR set to: 0
 35559                           ;inputs_MC50.c: 132:                 if (RFcount >= 0) {
 35560  0043D8  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 35561  0043DA  D008               	goto	i2l14169
 35562                           
 35563                           ; BSR set to: 0
 35564                           ;inputs_MC50.c: 133:                     BufferRF[Bptr] += 0x80;
 35565  0043DC  0EC8               	movlw	low _BufferRF
 35566  0043DE  258D               	addwf	_Bptr& (0+255),w,b
 35567  0043E0  6ED9               	movwf	fsr2l,c
 35568  0043E2  6ADA               	clrf	fsr2h,c
 35569  0043E4  0E02               	movlw	high _BufferRF
 35570  0043E6  22DA               	addwfc	fsr2h,f,c
 35571  0043E8  0E80               	movlw	128
 35572  0043EA  26DF               	addwf	indf2,f,c
 35573  0043EC                     i2l14169:
 35574                           
 35575                           ; BSR set to: 0
 35576                           ;inputs_MC50.c: 136:                 RFcount = 0;
 35577  0043EC  0E00               	movlw	0
 35578  0043EE  6F7F               	movwf	(_RFcount+1)& (0+255),b
 35579  0043F0  0E00               	movlw	0
 35580  0043F2  6F7E               	movwf	_RFcount& (0+255),b
 35581                           
 35582                           ; BSR set to: 0
 35583                           ;inputs_MC50.c: 138:                 if ((++BitCount & 7) == 0)
 35584  0043F4  2B8C               	incf	_BitCount& (0+255),f,b
 35585  0043F6  C08C  F001         	movff	_BitCount,??_rxi
 35586  0043FA  0E07               	movlw	7
 35587  0043FC  1601               	andwf	??_rxi^0,f,c
 35588  0043FE  A4D8               	btfss	status,2,c
 35589  004400  D009               	goto	i2l14177
 35590                           
 35591                           ; BSR set to: 0
 35592                           ;inputs_MC50.c: 139:                 {;inputs_MC50.c: 140:                     Bptr++;
 35593  004402  2B8D               	incf	_Bptr& (0+255),f,b
 35594                           
 35595                           ; BSR set to: 0
 35596                           ;inputs_MC50.c: 141:                     BufferRF[Bptr]=0;
 35597  004404  0EC8               	movlw	low _BufferRF
 35598  004406  258D               	addwf	_Bptr& (0+255),w,b
 35599  004408  6ED9               	movwf	fsr2l,c
 35600  00440A  6ADA               	clrf	fsr2h,c
 35601  00440C  0E02               	movlw	high _BufferRF
 35602  00440E  22DA               	addwfc	fsr2h,f,c
 35603  004410  0E00               	movlw	0
 35604  004412  6EDF               	movwf	indf2,c
 35605  004414                     i2l14177:
 35606                           
 35607                           ; BSR set to: 0
 35608                           ;inputs_MC50.c: 143:                 if (BitCount == 13) {
 35609  004414  0E0D               	movlw	13
 35610  004416  198C               	xorwf	_BitCount& (0+255),w,b
 35611  004418  A4D8               	btfss	status,2,c
 35612  00441A  0012               	return	
 35613                           
 35614                           ; BSR set to: 0
 35615                           ;inputs_MC50.c: 144:                     RFstate = 0;
 35616  00441C  0E00               	movlw	0
 35617  00441E  0101               	movlb	1	; () banked
 35618  004420  6F98               	movwf	_RFstate& (0+255),b
 35619                           
 35620                           ; BSR set to: 1
 35621                           ;inputs_MC50.c: 145:                     if(RFFull_12BIT==1)
 35622  004422  0100               	movlb	0	; () banked
 35623  004424  058A               	decf	_RFFull_12BIT& (0+255),w,b	;volatile
 35624  004426  A4D8               	btfss	status,2,c
 35625  004428  D01A               	goto	i2l14189
 35626                           
 35627                           ; BSR set to: 0
 35628                           ;inputs_MC50.c: 146:                     {;inputs_MC50.c: 147:                         i
      +                          f(BufferRF_12BIT[0]==BufferRF[0] && BufferRF_12BIT[1]==BufferRF[1])
 35629  00442A  0102               	movlb	2	; () banked
 35630  00442C  51C8               	movf	_BufferRF& (0+255),w,b
 35631  00442E  0101               	movlb	1	; () banked
 35632  004430  1987               	xorwf	_BufferRF_12BIT& (0+255),w,b
 35633  004432  A4D8               	btfss	status,2,c
 35634  004434  D00F               	goto	i2l1615
 35635                           
 35636                           ; BSR set to: 1
 35637  004436  0102               	movlb	2	; () banked
 35638  004438  51C9               	movf	(_BufferRF+1)& (0+255),w,b
 35639  00443A  0101               	movlb	1	; () banked
 35640  00443C  1988               	xorwf	(_BufferRF_12BIT+1)& (0+255),w,b
 35641  00443E  A4D8               	btfss	status,2,c
 35642  004440  D009               	goto	i2l1615
 35643                           
 35644                           ; BSR set to: 1
 35645                           ;inputs_MC50.c: 148:                         {;inputs_MC50.c: 149:                      
      +                                 RFFull = 1;
 35646  004442  0E01               	movlw	1
 35647  004444  0100               	movlb	0	; () banked
 35648  004446  6F8B               	movwf	_RFFull& (0+255),b	;volatile
 35649                           
 35650                           ;inputs_MC50.c: 150:                             BufferRF[2]=0;
 35651  004448  0E00               	movlw	0
 35652  00444A  0102               	movlb	2	; () banked
 35653  00444C  6FCA               	movwf	(_BufferRF+2)& (0+255),b
 35654                           
 35655                           ;inputs_MC50.c: 151:                             BufferRF[3]=0;
 35656  00444E  0E00               	movlw	0
 35657  004450  6FCB               	movwf	(_BufferRF+3)& (0+255),b
 35658                           
 35659                           ;inputs_MC50.c: 152:                         }
 35660  004452  0012               	return	
 35661  004454                     i2l1615:
 35662                           
 35663                           ; BSR set to: 1
 35664                           ;inputs_MC50.c: 154:                         {;inputs_MC50.c: 155:                      
      +                                 BufferRF_12BIT[0]=BufferRF[0];
 35665  004454  C2C8  F187         	movff	_BufferRF,_BufferRF_12BIT
 35666                           
 35667                           ;inputs_MC50.c: 156:                             BufferRF_12BIT[1]=BufferRF[1];
 35668  004458  C2C9  F188         	movff	_BufferRF+1,_BufferRF_12BIT+1
 35669  00445C  0012               	return	
 35670  00445E                     i2l14189:
 35671                           
 35672                           ; BSR set to: 0
 35673                           ;inputs_MC50.c: 161:                     {;inputs_MC50.c: 162:                         R
      +                          FFull_12BIT=1;
 35674  00445E  0E01               	movlw	1
 35675  004460  6F8A               	movwf	_RFFull_12BIT& (0+255),b	;volatile
 35676                           
 35677                           ; BSR set to: 0
 35678                           ;inputs_MC50.c: 163:                         BufferRF_12BIT[0]=BufferRF[0];
 35679  004462  C2C8  F187         	movff	_BufferRF,_BufferRF_12BIT
 35680                           
 35681                           ; BSR set to: 0
 35682                           ;inputs_MC50.c: 164:                         BufferRF_12BIT[1]=BufferRF[1];
 35683  004466  C2C9  F188         	movff	_BufferRF+1,_BufferRF_12BIT+1
 35684  00446A  0012               	return	
 35685  00446C                     i2l14195:
 35686                           
 35687                           ; BSR set to: 0
 35688                           ;inputs_MC50.c: 168:                 RFcount++;
 35689  00446C  4B7E               	infsnz	_RFcount& (0+255),f,b
 35690  00446E  2B7F               	incf	(_RFcount+1)& (0+255),f,b
 35691                           
 35692                           ; BSR set to: 0
 35693                           ;inputs_MC50.c: 169:                 if (RFcount >= 10)
 35694  004470  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 35695  004472  0012               	return	
 35696  004474  517F               	movf	(_RFcount+1)& (0+255),w,b
 35697  004476  E104               	bnz	i2u1415_40
 35698  004478  0E0A               	movlw	10
 35699  00447A  5D7E               	subwf	_RFcount& (0+255),w,b
 35700  00447C  A0D8               	btfss	status,0,c
 35701  00447E  0012               	return	
 35702  004480                     i2u1415_40:
 35703  004480  D71D               	goto	i2u1397_40
 35704  004482                     i2l14201:
 35705                           
 35706                           ; BSR set to: 1
 35707                           ;inputs_MC50.c: 177:             if (RFBit) {
 35708  004482  0100               	movlb	0	; () banked
 35709  004484  5189               	movf	_RFBit& (0+255),w,b	;volatile
 35710  004486  B4D8               	btfsc	status,2,c
 35711  004488  D004               	goto	i2l14205
 35712                           
 35713                           ; BSR set to: 0
 35714                           ;inputs_MC50.c: 181:                 RFstate = 4;
 35715  00448A  0E04               	movlw	4
 35716  00448C  0101               	movlb	1	; () banked
 35717  00448E  6F98               	movwf	_RFstate& (0+255),b
 35718                           
 35719                           ;inputs_MC50.c: 183:             } else {
 35720  004490  0012               	return	
 35721  004492                     i2l14205:
 35722                           
 35723                           ; BSR set to: 0
 35724                           ;inputs_MC50.c: 184:                 RFcount--;
 35725  004492  077E               	decf	_RFcount& (0+255),f,b
 35726  004494  A0D8               	btfss	status,0,c
 35727  004496  077F               	decf	(_RFcount+1)& (0+255),f,b
 35728                           
 35729                           ; BSR set to: 0
 35730                           ;inputs_MC50.c: 185:                 if (RFcount < -10)
 35731  004498  AF7F               	btfss	(_RFcount+1)& (0+255),7,b
 35732  00449A  0012               	return	
 35733  00449C  0EF6               	movlw	246
 35734  00449E  5D7E               	subwf	_RFcount& (0+255),w,b
 35735  0044A0  0EFF               	movlw	255
 35736  0044A2  597F               	subwfb	(_RFcount+1)& (0+255),w,b
 35737  0044A4  B0D8               	btfsc	status,0,c
 35738  0044A6  0012               	return	
 35739  0044A8  D747               	goto	i2u1402_40
 35740  0044AA                     i2l14211:
 35741                           
 35742                           ; BSR set to: 1
 35743                           ;inputs_MC50.c: 197:             RFstate = 1;
 35744  0044AA  0E01               	movlw	1
 35745  0044AC  6F98               	movwf	_RFstate& (0+255),b
 35746                           
 35747                           ;inputs_MC50.c: 198:             RFcount = 0;
 35748  0044AE  0E00               	movlw	0
 35749  0044B0  0100               	movlb	0	; () banked
 35750  0044B2  6F7F               	movwf	(_RFcount+1)& (0+255),b
 35751  0044B4  0E00               	movlw	0
 35752  0044B6  6F7E               	movwf	_RFcount& (0+255),b
 35753                           
 35754                           ;inputs_MC50.c: 199:             Bptr = 0;
 35755  0044B8  0E00               	movlw	0
 35756  0044BA  6F8D               	movwf	_Bptr& (0+255),b
 35757                           
 35758                           ;inputs_MC50.c: 200:             BitCount = 0;
 35759  0044BC  0E00               	movlw	0
 35760  0044BE  6F8C               	movwf	_BitCount& (0+255),b
 35761                           
 35762                           ;inputs_MC50.c: 201:             break;
 35763  0044C0  0012               	return	
 35764  0044C2                     i2l14215:
 35765                           
 35766                           ; BSR set to: 0
 35767  0044C2  0101               	movlb	1	; () banked
 35768  0044C4  5198               	movf	_RFstate& (0+255),w,b
 35769  0044C6  6E01               	movwf	??_rxi^0,c
 35770  0044C8  6A02               	clrf	(??_rxi+1)^0,c
 35771                           
 35772                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 35773                           ; Switch size 1, requested type "simple"
 35774                           ; Number of cases is 1, Range of values is 0 to 0
 35775                           ; switch strategies available:
 35776                           ; Name         Instructions Cycles
 35777                           ; simple_byte            4     3 (average)
 35778                           ;	Chosen strategy is simple_byte
 35779  0044CA  5002               	movf	(??_rxi+1)^0,w,c
 35780  0044CC  0A00               	xorlw	0	; case 0
 35781  0044CE  A4D8               	btfss	status,2,c
 35782  0044D0  D7EC               	goto	i2l14211
 35783                           
 35784                           ; BSR set to: 1
 35785                           ; Switch size 1, requested type "simple"
 35786                           ; Number of cases is 6, Range of values is 0 to 5
 35787                           ; switch strategies available:
 35788                           ; Name         Instructions Cycles
 35789                           ; simple_byte           19    10 (average)
 35790                           ;	Chosen strategy is simple_byte
 35791  0044D2  5001               	movf	??_rxi^0,w,c
 35792  0044D4  0A00               	xorlw	0	; case 0
 35793  0044D6  B4D8               	btfsc	status,2,c
 35794  0044D8  D7E8               	goto	i2l14211
 35795  0044DA  0A01               	xorlw	1	; case 1
 35796  0044DC  B4D8               	btfsc	status,2,c
 35797  0044DE  D735               	goto	i2l14141
 35798  0044E0  0A03               	xorlw	3	; case 2
 35799  0044E2  B4D8               	btfsc	status,2,c
 35800  0044E4  D6D8               	goto	i2l14105
 35801  0044E6  0A01               	xorlw	1	; case 3
 35802  0044E8  B4D8               	btfsc	status,2,c
 35803  0044EA  D6EC               	goto	i2l14115
 35804  0044EC  0A07               	xorlw	7	; case 4
 35805  0044EE  B4D8               	btfsc	status,2,c
 35806  0044F0  D763               	goto	i2l14159
 35807  0044F2  0A01               	xorlw	1	; case 5
 35808  0044F4  B4D8               	btfsc	status,2,c
 35809  0044F6  D7C5               	goto	i2l14201
 35810  0044F8  D7D8               	goto	i2l14211
 35811  0044FA                     __end_of_rxi:
 35812                           	callstack 0
 35813                           
 35814 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 35815 ;; Defined at:
 35816 ;;		line 147 in file "mcc_generated_files/tmr0.c"
 35817 ;; Parameters:    Size  Location     Type
 35818 ;;		None
 35819 ;; Auto vars:     Size  Location     Type
 35820 ;;		None
 35821 ;; Return value:  Size  Location     Type
 35822 ;;                  1    wreg      void 
 35823 ;; Registers used:
 35824 ;;		None
 35825 ;; Tracked objects:
 35826 ;;		On entry : 3F/2
 35827 ;;		On exit  : 3F/2
 35828 ;;		Unchanged: 3F/0
 35829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35833 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35834 ;;Total ram usage:        0 bytes
 35835 ;; Hardware stack levels used: 1
 35836 ;; This function calls:
 35837 ;;		Nothing
 35838 ;; This function is called by:
 35839 ;;		_TMR0_Initialize
 35840 ;;		_TMR0_ISR
 35841 ;; This function uses a non-reentrant model
 35842 ;;
 35843                           
 35844                           	psect	text200
 35845  0092C8                     __ptext200:
 35846                           	callstack 0
 35847  0092C8                     _TMR0_DefaultInterruptHandler:
 35848                           	callstack 15
 35849                           
 35850                           ; BSR set to: 2
 35851                           
 35852                           ;incstack = 0
 35853  0092C8  0012               	return		;funcret
 35854  0092CA                     __end_of_TMR0_DefaultInterruptHandler:
 35855                           	callstack 0
 35856                           
 35857 ;; *************** function _EUSART1_Transmit_ISR *****************
 35858 ;; Defined at:
 35859 ;;		line 197 in file "mcc_generated_files/eusart1.c"
 35860 ;; Parameters:    Size  Location     Type
 35861 ;;		None
 35862 ;; Auto vars:     Size  Location     Type
 35863 ;;		None
 35864 ;; Return value:  Size  Location     Type
 35865 ;;                  1    wreg      void 
 35866 ;; Registers used:
 35867 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 35868 ;; Tracked objects:
 35869 ;;		On entry : 3F/2
 35870 ;;		On exit  : 30/0
 35871 ;;		Unchanged: 0/0
 35872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35876 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35877 ;;Total ram usage:        0 bytes
 35878 ;; Hardware stack levels used: 1
 35879 ;; This function calls:
 35880 ;;		Nothing
 35881 ;; This function is called by:
 35882 ;;		_EUSART1_Initialize
 35883 ;;		_INTERRUPT_InterruptManager
 35884 ;; This function uses a non-reentrant model
 35885 ;;
 35886                           
 35887                           	psect	text201
 35888  008AB2                     __ptext201:
 35889                           	callstack 0
 35890  008AB2                     _EUSART1_Transmit_ISR:
 35891                           	callstack 16
 35892                           
 35893                           ; BSR set to: 2
 35894                           ;mcc_generated_files/eusart1.c: 201:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
 35895                           
 35896                           ; BSR set to: 2
 35897                           ;incstack = 0
 35898  008AB2  0E08               	movlw	8
 35899  008AB4  0101               	movlb	1	; () banked
 35900  008AB6  61FE               	cpfslt	_eusart1TxBufferRemaining& (0+255),b
 35901  008AB8  D012               	goto	i2l106
 35902                           
 35903                           ; BSR set to: 1
 35904                           ;mcc_generated_files/eusart1.c: 202:     {;mcc_generated_files/eusart1.c: 203:         T
      +                          X1REG = eusart1TxBuffer[eusart1TxTail++];
 35905  008ABA  0E84               	movlw	low _eusart1TxBuffer
 35906  008ABC  0100               	movlb	0	; () banked
 35907  008ABE  2596               	addwf	_eusart1TxTail& (0+255),w,b	;volatile
 35908  008AC0  6ED9               	movwf	fsr2l,c
 35909  008AC2  6ADA               	clrf	fsr2h,c
 35910  008AC4  0E02               	movlw	high _eusart1TxBuffer
 35911  008AC6  22DA               	addwfc	fsr2h,f,c
 35912  008AC8  50DF               	movf	indf2,w,c
 35913  008ACA  6E9A               	movwf	154,c	;volatile
 35914                           
 35915                           ; BSR set to: 0
 35916  008ACC  2B96               	incf	_eusart1TxTail& (0+255),f,b	;volatile
 35917                           
 35918                           ; BSR set to: 0
 35919                           ;mcc_generated_files/eusart1.c: 204:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
 35920  008ACE  0E07               	movlw	7
 35921  008AD0  6596               	cpfsgt	_eusart1TxTail& (0+255),b
 35922  008AD2  D002               	goto	i2l16219
 35923                           
 35924                           ; BSR set to: 0
 35925                           ;mcc_generated_files/eusart1.c: 205:         {;mcc_generated_files/eusart1.c: 206:      
      +                                 eusart1TxTail = 0;
 35926  008AD4  0E00               	movlw	0
 35927  008AD6  6F96               	movwf	_eusart1TxTail& (0+255),b	;volatile
 35928  008AD8                     i2l16219:
 35929                           
 35930                           ; BSR set to: 0
 35931                           ;mcc_generated_files/eusart1.c: 208:         eusart1TxBufferRemaining++;
 35932  008AD8  0101               	movlb	1	; () banked
 35933  008ADA  2BFE               	incf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
 35934                           
 35935                           ;mcc_generated_files/eusart1.c: 209:     }
 35936  008ADC  0012               	return	
 35937  008ADE                     i2l106:
 35938                           
 35939                           ; BSR set to: 1
 35940                           ;mcc_generated_files/eusart1.c: 211:     {;mcc_generated_files/eusart1.c: 212:         P
      +                          IE3bits.TX1IE = 0;
 35941  008ADE  010E               	movlb	14	; () banked
 35942  008AE0  99C5               	bcf	197,4,b	;volatile
 35943  008AE2  0012               	return		;funcret
 35944  008AE4                     __end_of_EUSART1_Transmit_ISR:
 35945                           	callstack 0
 35946                           
 35947 ;; *************** function _EUSART1_Receive_ISR *****************
 35948 ;; Defined at:
 35949 ;;		line 216 in file "mcc_generated_files/eusart1.c"
 35950 ;; Parameters:    Size  Location     Type
 35951 ;;		None
 35952 ;; Auto vars:     Size  Location     Type
 35953 ;;		None
 35954 ;; Return value:  Size  Location     Type
 35955 ;;                  1    wreg      void 
 35956 ;; Registers used:
 35957 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 35958 ;; Tracked objects:
 35959 ;;		On entry : 3F/2
 35960 ;;		On exit  : 0/0
 35961 ;;		Unchanged: 0/0
 35962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35966 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35967 ;;Total ram usage:        0 bytes
 35968 ;; Hardware stack levels used: 1
 35969 ;; Hardware stack levels required when called: 2
 35970 ;; This function calls:
 35971 ;;		Absolute function
 35972 ;;		_EUSART1_DefaultErrorHandler
 35973 ;;		_EUSART1_DefaultFramingErrorHandler
 35974 ;;		_EUSART1_DefaultOverrunErrorHandler
 35975 ;;		_EUSART1_RxDataHandler
 35976 ;; This function is called by:
 35977 ;;		_EUSART1_Initialize
 35978 ;;		_INTERRUPT_InterruptManager
 35979 ;; This function uses a non-reentrant model
 35980 ;;
 35981                           
 35982                           	psect	text202
 35983  00743C                     __ptext202:
 35984                           	callstack 0
 35985  00743C                     _EUSART1_Receive_ISR:
 35986                           	callstack 14
 35987                           
 35988                           ; BSR set to: 2
 35989                           ;mcc_generated_files/eusart1.c: 219:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
 35990                           
 35991                           ;incstack = 0
 35992  00743C  0E74               	movlw	low _eusart1RxStatusBuffer
 35993  00743E  0100               	movlb	0	; () banked
 35994  007440  2595               	addwf	_eusart1RxHead& (0+255),w,b	;volatile
 35995  007442  6ED9               	movwf	fsr2l,c
 35996  007444  6ADA               	clrf	fsr2h,c
 35997  007446  0E02               	movlw	high _eusart1RxStatusBuffer
 35998  007448  22DA               	addwfc	fsr2h,f,c
 35999  00744A  0E00               	movlw	0
 36000  00744C  6EDF               	movwf	indf2,c
 36001                           
 36002                           ; BSR set to: 0
 36003                           ;mcc_generated_files/eusart1.c: 221:     if(RC1STAbits.FERR){
 36004  00744E  A49D               	btfss	157,2,c	;volatile
 36005  007450  D013               	goto	i2u1826_49
 36006                           
 36007                           ; BSR set to: 0
 36008                           ;mcc_generated_files/eusart1.c: 222:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
 36009  007452  0E74               	movlw	low _eusart1RxStatusBuffer
 36010  007454  2595               	addwf	_eusart1RxHead& (0+255),w,b	;volatile
 36011  007456  6ED9               	movwf	fsr2l,c
 36012  007458  6ADA               	clrf	fsr2h,c
 36013  00745A  0E02               	movlw	high _eusart1RxStatusBuffer
 36014  00745C  22DA               	addwfc	fsr2h,f,c
 36015  00745E  0102               	movlb	2	; () banked
 36016  007460  82DF               	bsf	indf2,1,c
 36017                           
 36018                           ; BSR set to: 2
 36019                           ;mcc_generated_files/eusart1.c: 223:         EUSART1_FramingErrorHandler();
 36020  007462  D801               	call	i2u1826_48
 36021  007464  D009               	goto	i2u1826_49
 36022  007466                     i2u1826_48:
 36023  007466  0005               	push	
 36024  007468  6EFA               	movwf	pclath,c
 36025  00746A  51E9               	movf	_EUSART1_FramingErrorHandler& (0+255),w,b
 36026  00746C  6EFD               	movwf	tosl,c
 36027  00746E  51EA               	movf	(_EUSART1_FramingErrorHandler+1)& (0+255),w,b
 36028  007470  6EFE               	movwf	tosh,c
 36029  007472  6AFF               	clrf	tosu,c
 36030  007474  50FA               	movf	pclath,w,c
 36031  007476  0012               	return		;indir
 36032  007478                     i2u1826_49:
 36033                           
 36034                           ;mcc_generated_files/eusart1.c: 226:     if(RC1STAbits.OERR){
 36035  007478  A29D               	btfss	157,1,c	;volatile
 36036  00747A  D014               	goto	i2u1828_49
 36037                           
 36038                           ;mcc_generated_files/eusart1.c: 227:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
 36039  00747C  0E74               	movlw	low _eusart1RxStatusBuffer
 36040  00747E  0100               	movlb	0	; () banked
 36041  007480  2595               	addwf	_eusart1RxHead& (0+255),w,b	;volatile
 36042  007482  6ED9               	movwf	fsr2l,c
 36043  007484  6ADA               	clrf	fsr2h,c
 36044  007486  0E02               	movlw	high _eusart1RxStatusBuffer
 36045  007488  22DA               	addwfc	fsr2h,f,c
 36046  00748A  0102               	movlb	2	; () banked
 36047  00748C  84DF               	bsf	indf2,2,c
 36048                           
 36049                           ; BSR set to: 2
 36050                           ;mcc_generated_files/eusart1.c: 228:         EUSART1_OverrunErrorHandler();
 36051  00748E  D801               	call	i2u1828_48
 36052  007490  D009               	goto	i2u1828_49
 36053  007492                     i2u1828_48:
 36054  007492  0005               	push	
 36055  007494  6EFA               	movwf	pclath,c
 36056  007496  51E7               	movf	_EUSART1_OverrunErrorHandler& (0+255),w,b
 36057  007498  6EFD               	movwf	tosl,c
 36058  00749A  51E8               	movf	(_EUSART1_OverrunErrorHandler+1)& (0+255),w,b
 36059  00749C  6EFE               	movwf	tosh,c
 36060  00749E  6AFF               	clrf	tosu,c
 36061  0074A0  50FA               	movf	pclath,w,c
 36062  0074A2  0012               	return		;indir
 36063  0074A4                     i2u1828_49:
 36064                           
 36065                           ;mcc_generated_files/eusart1.c: 231:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
 36066  0074A4  0E74               	movlw	low _eusart1RxStatusBuffer
 36067  0074A6  0100               	movlb	0	; () banked
 36068  0074A8  2595               	addwf	_eusart1RxHead& (0+255),w,b	;volatile
 36069  0074AA  6ED9               	movwf	fsr2l,c
 36070  0074AC  6ADA               	clrf	fsr2h,c
 36071  0074AE  0E02               	movlw	high _eusart1RxStatusBuffer
 36072  0074B0  22DA               	addwfc	fsr2h,f,c
 36073  0074B2  50DF               	movf	indf2,w,c
 36074  0074B4  B4D8               	btfsc	status,2,c
 36075  0074B6  D00C               	goto	i2l16239
 36076                           
 36077                           ; BSR set to: 0
 36078                           ;mcc_generated_files/eusart1.c: 232:         EUSART1_ErrorHandler();
 36079  0074B8  D801               	call	i2u1830_48
 36080  0074BA  0012               	return	
 36081  0074BC                     i2u1830_48:
 36082  0074BC  0005               	push	
 36083  0074BE  6EFA               	movwf	pclath,c
 36084  0074C0  0102               	movlb	2	; () banked
 36085  0074C2  51E5               	movf	_EUSART1_ErrorHandler& (0+255),w,b
 36086  0074C4  6EFD               	movwf	tosl,c
 36087  0074C6  51E6               	movf	(_EUSART1_ErrorHandler+1)& (0+255),w,b
 36088  0074C8  6EFE               	movwf	tosh,c
 36089  0074CA  6AFF               	clrf	tosu,c
 36090  0074CC  50FA               	movf	pclath,w,c
 36091  0074CE  0012               	return		;indir
 36092  0074D0                     i2l16239:
 36093                           
 36094                           ; BSR set to: 0
 36095                           ;mcc_generated_files/eusart1.c: 234:         EUSART1_RxDataHandler();
 36096  0074D0  EC8B  F047         	call	_EUSART1_RxDataHandler	;wreg free
 36097  0074D4  0012               	return		;funcret
 36098  0074D6                     __end_of_EUSART1_Receive_ISR:
 36099                           	callstack 0
 36100                           
 36101 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
 36102 ;; Defined at:
 36103 ;;		line 252 in file "mcc_generated_files/eusart1.c"
 36104 ;; Parameters:    Size  Location     Type
 36105 ;;		None
 36106 ;; Auto vars:     Size  Location     Type
 36107 ;;		None
 36108 ;; Return value:  Size  Location     Type
 36109 ;;                  1    wreg      void 
 36110 ;; Registers used:
 36111 ;;		None
 36112 ;; Tracked objects:
 36113 ;;		On entry : 3F/2
 36114 ;;		On exit  : 3F/2
 36115 ;;		Unchanged: 3F/0
 36116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36120 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36121 ;;Total ram usage:        0 bytes
 36122 ;; Hardware stack levels used: 1
 36123 ;; This function calls:
 36124 ;;		Nothing
 36125 ;; This function is called by:
 36126 ;;		_EUSART1_Initialize
 36127 ;;		_EUSART1_Receive_ISR
 36128 ;; This function uses a non-reentrant model
 36129 ;;
 36130                           
 36131                           	psect	text203
 36132  009282                     __ptext203:
 36133                           	callstack 0
 36134  009282                     _EUSART1_DefaultOverrunErrorHandler:
 36135                           	callstack 15
 36136                           
 36137                           ; BSR set to: 2
 36138                           ;mcc_generated_files/eusart1.c: 255:     RC1STAbits.CREN = 0;
 36139                           
 36140                           ;incstack = 0
 36141  009282  989D               	bcf	157,4,c	;volatile
 36142                           
 36143                           ;mcc_generated_files/eusart1.c: 256:     RC1STAbits.CREN = 1;
 36144  009284  889D               	bsf	157,4,c	;volatile
 36145                           
 36146                           ; BSR set to: 2
 36147  009286  0012               	return		;funcret
 36148  009288                     __end_of_EUSART1_DefaultOverrunErrorHandler:
 36149                           	callstack 0
 36150                           
 36151 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
 36152 ;; Defined at:
 36153 ;;		line 250 in file "mcc_generated_files/eusart1.c"
 36154 ;; Parameters:    Size  Location     Type
 36155 ;;		None
 36156 ;; Auto vars:     Size  Location     Type
 36157 ;;		None
 36158 ;; Return value:  Size  Location     Type
 36159 ;;                  1    wreg      void 
 36160 ;; Registers used:
 36161 ;;		None
 36162 ;; Tracked objects:
 36163 ;;		On entry : 3F/2
 36164 ;;		On exit  : 3F/2
 36165 ;;		Unchanged: 3F/0
 36166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36167 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36170 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36171 ;;Total ram usage:        0 bytes
 36172 ;; Hardware stack levels used: 1
 36173 ;; This function calls:
 36174 ;;		Nothing
 36175 ;; This function is called by:
 36176 ;;		_EUSART1_Initialize
 36177 ;;		_EUSART1_Receive_ISR
 36178 ;; This function uses a non-reentrant model
 36179 ;;
 36180                           
 36181                           	psect	text204
 36182  0092CA                     __ptext204:
 36183                           	callstack 0
 36184  0092CA                     _EUSART1_DefaultFramingErrorHandler:
 36185                           	callstack 15
 36186                           
 36187                           ; BSR set to: 2
 36188                           
 36189                           ; BSR set to: 2
 36190                           ;incstack = 0
 36191  0092CA  0012               	return		;funcret
 36192  0092CC                     __end_of_EUSART1_DefaultFramingErrorHandler:
 36193                           	callstack 0
 36194                           
 36195 ;; *************** function _EUSART1_DefaultErrorHandler *****************
 36196 ;; Defined at:
 36197 ;;		line 260 in file "mcc_generated_files/eusart1.c"
 36198 ;; Parameters:    Size  Location     Type
 36199 ;;		None
 36200 ;; Auto vars:     Size  Location     Type
 36201 ;;		None
 36202 ;; Return value:  Size  Location     Type
 36203 ;;                  1    wreg      void 
 36204 ;; Registers used:
 36205 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 36206 ;; Tracked objects:
 36207 ;;		On entry : 3F/2
 36208 ;;		On exit  : 3F/0
 36209 ;;		Unchanged: 0/0
 36210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36214 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36215 ;;Total ram usage:        0 bytes
 36216 ;; Hardware stack levels used: 1
 36217 ;; Hardware stack levels required when called: 1
 36218 ;; This function calls:
 36219 ;;		_EUSART1_RxDataHandler
 36220 ;; This function is called by:
 36221 ;;		_EUSART1_Initialize
 36222 ;;		_EUSART1_Receive_ISR
 36223 ;; This function uses a non-reentrant model
 36224 ;;
 36225                           
 36226                           	psect	text205
 36227  009288                     __ptext205:
 36228                           	callstack 0
 36229  009288                     _EUSART1_DefaultErrorHandler:
 36230                           	callstack 14
 36231                           
 36232                           ; BSR set to: 2
 36233                           ;mcc_generated_files/eusart1.c: 261:     EUSART1_RxDataHandler();
 36234                           
 36235                           ; BSR set to: 2
 36236                           ;incstack = 0
 36237  009288  EC8B  F047         	call	_EUSART1_RxDataHandler	;wreg free
 36238                           
 36239                           ; BSR set to: 0
 36240  00928C  0012               	return		;funcret
 36241  00928E                     __end_of_EUSART1_DefaultErrorHandler:
 36242                           	callstack 0
 36243                           
 36244 ;; *************** function _EUSART1_RxDataHandler *****************
 36245 ;; Defined at:
 36246 ;;		line 240 in file "mcc_generated_files/eusart1.c"
 36247 ;; Parameters:    Size  Location     Type
 36248 ;;		None
 36249 ;; Auto vars:     Size  Location     Type
 36250 ;;		None
 36251 ;; Return value:  Size  Location     Type
 36252 ;;                  1    wreg      void 
 36253 ;; Registers used:
 36254 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 36255 ;; Tracked objects:
 36256 ;;		On entry : 3D/0
 36257 ;;		On exit  : 3F/0
 36258 ;;		Unchanged: 0/0
 36259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36263 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36264 ;;Total ram usage:        0 bytes
 36265 ;; Hardware stack levels used: 1
 36266 ;; This function calls:
 36267 ;;		Nothing
 36268 ;; This function is called by:
 36269 ;;		_EUSART1_Receive_ISR
 36270 ;;		_EUSART1_DefaultErrorHandler
 36271 ;; This function uses a non-reentrant model
 36272 ;;
 36273                           
 36274                           	psect	text206
 36275  008F16                     __ptext206:
 36276                           	callstack 0
 36277  008F16                     _EUSART1_RxDataHandler:
 36278                           	callstack 15
 36279                           
 36280                           ;mcc_generated_files/eusart1.c: 242:     eusart1RxBuffer[eusart1RxHead++] = RC1REG;
 36281                           
 36282                           ; BSR set to: 0
 36283                           ;incstack = 0
 36284  008F16  0E7C               	movlw	low _eusart1RxBuffer
 36285  008F18  0100               	movlb	0	; () banked
 36286  008F1A  2595               	addwf	_eusart1RxHead& (0+255),w,b	;volatile
 36287  008F1C  6ED9               	movwf	fsr2l,c
 36288  008F1E  6ADA               	clrf	fsr2h,c
 36289  008F20  0E02               	movlw	high _eusart1RxBuffer
 36290  008F22  22DA               	addwfc	fsr2h,f,c
 36291  008F24  CF99 FFDF          	movff	3993,indf2	;volatile
 36292                           
 36293                           ; BSR set to: 0
 36294  008F28  2B95               	incf	_eusart1RxHead& (0+255),f,b	;volatile
 36295                           
 36296                           ; BSR set to: 0
 36297                           ;mcc_generated_files/eusart1.c: 243:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
 36298  008F2A  0E07               	movlw	7
 36299  008F2C  6595               	cpfsgt	_eusart1RxHead& (0+255),b
 36300  008F2E  D002               	goto	i2l12553
 36301                           
 36302                           ; BSR set to: 0
 36303                           ;mcc_generated_files/eusart1.c: 244:     {;mcc_generated_files/eusart1.c: 245:         e
      +                          usart1RxHead = 0;
 36304  008F30  0E00               	movlw	0
 36305  008F32  6F95               	movwf	_eusart1RxHead& (0+255),b	;volatile
 36306  008F34                     i2l12553:
 36307                           
 36308                           ; BSR set to: 0
 36309                           ;mcc_generated_files/eusart1.c: 247:     eusart1RxCount++;
 36310  008F34  2B93               	incf	_eusart1RxCount& (0+255),f,b	;volatile
 36311                           
 36312                           ; BSR set to: 0
 36313  008F36  0012               	return		;funcret
 36314  008F38                     __end_of_EUSART1_RxDataHandler:
 36315                           	callstack 0
 36316                           
 36317                           	psect	text207
 36318  000000                     __ptext207:
 36319                           	callstack 0
 36320                           
 36321                           	psect	rparam
 36322  0000                     
 36323                           	psect	temp
 36324  000050                     btemp:
 36325                           	callstack 0
 36326  000050                     	ds	1
 36327  0000                     int$flags	set	btemp
 36328  0000                     wtemp8	set	btemp+1
 36329  0000                     ttemp5	set	btemp+1
 36330  0000                     ttemp6	set	btemp+4
 36331  0000                     ttemp7	set	btemp+8
 36332                           
 36333                           	psect	idloc
 36334                           
 36335                           ;Config register IDLOC0 @ 0x200000
 36336                           ;	unspecified, using default values
 36337  200000                     	org	2097152
 36338  200000  0FFF               	dw	4095
 36339                           
 36340                           ;Config register IDLOC1 @ 0x200002
 36341                           ;	unspecified, using default values
 36342  200002                     	org	2097154
 36343  200002  0FFF               	dw	4095
 36344                           
 36345                           ;Config register IDLOC2 @ 0x200004
 36346                           ;	unspecified, using default values
 36347  200004                     	org	2097156
 36348  200004  0FFF               	dw	4095
 36349                           
 36350                           ;Config register IDLOC3 @ 0x200006
 36351                           ;	unspecified, using default values
 36352  200006                     	org	2097158
 36353  200006  0FFF               	dw	4095
 36354                           
 36355                           ;Config register IDLOC4 @ 0x200008
 36356                           ;	unspecified, using default values
 36357  200008                     	org	2097160
 36358  200008  0FFF               	dw	4095
 36359                           
 36360                           ;Config register IDLOC5 @ 0x20000A
 36361                           ;	unspecified, using default values
 36362  20000A                     	org	2097162
 36363  20000A  0FFF               	dw	4095
 36364                           
 36365                           ;Config register IDLOC6 @ 0x20000C
 36366                           ;	unspecified, using default values
 36367  20000C                     	org	2097164
 36368  20000C  0FFF               	dw	4095
 36369                           
 36370                           ;Config register IDLOC7 @ 0x20000E
 36371                           ;	unspecified, using default values
 36372  20000E                     	org	2097166
 36373  20000E  0FFF               	dw	4095
 36374                           
 36375                           	psect	config
 36376                           
 36377                           ;Config register CONFIG1L @ 0x300000
 36378                           ;	External Oscillator mode Selection bits
 36379                           ;	FEXTOSC = OFF, Oscillator not enabled
 36380                           ;	Power-up default value for COSC bits
 36381                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
 36382  300000                     	org	3145728
 36383  300000  8C                 	db	140
 36384                           
 36385                           ;Config register CONFIG1H @ 0x300001
 36386                           ;	Clock Out Enable bit
 36387                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
 36388                           ;	Clock Switch Enable bit
 36389                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 36390                           ;	Fail-Safe Clock Monitor Enable bit
 36391                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 36392  300001                     	org	3145729
 36393  300001  FF                 	db	255
 36394                           
 36395                           ;Config register CONFIG2L @ 0x300002
 36396                           ;	Master Clear Enable bit
 36397                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
 36398                           ;	Power-up Timer Enable bit
 36399                           ;	PWRTE = ON, Power up timer enabled
 36400                           ;	Low-power BOR enable bit
 36401                           ;	LPBOREN = OFF, ULPBOR disabled
 36402                           ;	Brown-out Reset Enable bits
 36403                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 36404  300002                     	org	3145730
 36405  300002  FD                 	db	253
 36406                           
 36407                           ;Config register CONFIG2H @ 0x300003
 36408                           ;	Brown Out Reset Voltage selection bits
 36409                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
 36410                           ;	ZCD Disable bit
 36411                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
 36412                           ;	PPSLOCK bit One-Way Set Enable bit
 36413                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
 36414                           ;	Stack Full/Underflow Reset Enable bit
 36415                           ;	STVREN = ON, Stack full/underflow will cause Reset
 36416                           ;	Debugger Enable bit
 36417                           ;	DEBUG = OFF, Background debugger disabled
 36418                           ;	Extended Instruction Set Enable bit
 36419                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 36420  300003                     	org	3145731
 36421  300003  FF                 	db	255
 36422                           
 36423                           ;Config register CONFIG3L @ 0x300004
 36424                           ;	WDT Period Select bits
 36425                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 36426                           ;	WDT operating mode
 36427                           ;	WDTE = SWDTEN, WDT enabled/disabled by SWDTEN bit
 36428  300004                     	org	3145732
 36429  300004  BF                 	db	191
 36430                           
 36431                           ;Config register CONFIG3H @ 0x300005
 36432                           ;	WDT Window Select bits
 36433                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 36434                           ;	WDT input clock selector
 36435                           ;	WDTCCS = SC, Software Control
 36436  300005                     	org	3145733
 36437  300005  FF                 	db	255
 36438                           
 36439                           ;Config register CONFIG4L @ 0x300006
 36440                           ;	Write Protection Block 0
 36441                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
 36442                           ;	Write Protection Block 1
 36443                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
 36444                           ;	Write Protection Block 2
 36445                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
 36446                           ;	Write Protection Block 3
 36447                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
 36448  300006                     	org	3145734
 36449  300006  FF                 	db	255
 36450                           
 36451                           ;Config register CONFIG4H @ 0x300007
 36452                           ;	Configuration Register Write Protection bit
 36453                           ;	WRTC = OFF, Configuration registers (300000-30000Bh) not write-protected
 36454                           ;	Boot Block Write Protection bit
 36455                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 36456                           ;	Data EEPROM Write Protection bit
 36457                           ;	WRTD = OFF, Data EEPROM not write-protected
 36458                           ;	Scanner Enable bit
 36459                           ;	SCANE = ON, Scanner module is available for use, SCANMD bit can control the module
 36460                           ;	Low Voltage Programming Enable bit
 36461                           ;	LVP = OFF, HV on MCLR/VPP must be used for programming
 36462  300007                     	org	3145735
 36463  300007  DF                 	db	223
 36464                           
 36465                           ;Config register CONFIG5L @ 0x300008
 36466                           ;	UserNVM Program Memory Code Protection bit
 36467                           ;	CP = ON, UserNVM code protection enabled
 36468                           ;	DataNVM Memory Code Protection bit
 36469                           ;	CPD = ON, DataNVM code protection enabled
 36470  300008                     	org	3145736
 36471  300008  FC                 	db	252
 36472                           
 36473                           ;Config register CONFIG5H @ 0x300009
 36474                           ;	unspecified, using default values
 36475  300009                     	org	3145737
 36476  300009  FF                 	db	255
 36477                           
 36478                           ;Config register CONFIG6L @ 0x30000A
 36479                           ;	Table Read Protection Block 0
 36480                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
 36481                           ;	Table Read Protection Block 1
 36482                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
 36483                           ;	Table Read Protection Block 2
 36484                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
 36485                           ;	Table Read Protection Block 3
 36486                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
 36487  30000A                     	org	3145738
 36488  30000A  FF                 	db	255
 36489                           
 36490                           ;Config register CONFIG6H @ 0x30000B
 36491                           ;	Boot Block Table Read Protection bit
 36492                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 36493  30000B                     	org	3145739
 36494  30000B  FF                 	db	255
 36495                           tosu	equ	0xFFF
 36496                           tosh	equ	0xFFE
 36497                           tosl	equ	0xFFD
 36498                           stkptr	equ	0xFFC
 36499                           pclatu	equ	0xFFB
 36500                           pclath	equ	0xFFA
 36501                           pcl	equ	0xFF9
 36502                           tblptru	equ	0xFF8
 36503                           tblptrh	equ	0xFF7
 36504                           tblptrl	equ	0xFF6
 36505                           tablat	equ	0xFF5
 36506                           prodh	equ	0xFF4
 36507                           prodl	equ	0xFF3
 36508                           indf0	equ	0xFEF
 36509                           postinc0	equ	0xFEE
 36510                           postdec0	equ	0xFED
 36511                           preinc0	equ	0xFEC
 36512                           plusw0	equ	0xFEB
 36513                           fsr0h	equ	0xFEA
 36514                           fsr0l	equ	0xFE9
 36515                           wreg	equ	0xFE8
 36516                           indf1	equ	0xFE7
 36517                           postinc1	equ	0xFE6
 36518                           postdec1	equ	0xFE5
 36519                           preinc1	equ	0xFE4
 36520                           plusw1	equ	0xFE3
 36521                           fsr1h	equ	0xFE2
 36522                           fsr1l	equ	0xFE1
 36523                           bsr	equ	0xFE0
 36524                           indf2	equ	0xFDF
 36525                           postinc2	equ	0xFDE
 36526                           postdec2	equ	0xFDD
 36527                           preinc2	equ	0xFDC
 36528                           plusw2	equ	0xFDB
 36529                           fsr2h	equ	0xFDA
 36530                           fsr2l	equ	0xFD9
 36531                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    32
    Data        46
    BSS         821
    Persistent  19
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     58      79
    BANK0           160     32     154
    BANK1           256      0     255
    BANK2           256      0     241
    BANK3           256      0     247
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          136      0       0

Pointer List with Targets:

    i2c_write1ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    i2c_read1ByteRegister@d2.data	PTR unsigned char  size(2) Largest target is 0
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    i2c_read2ByteRegister@result.data	PTR unsigned char  size(2) Largest target is 0
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    i2c_write2ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    I2C1_Read1ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    I2C1_Read2ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    I2C1_Write1ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    I2C1_Write2ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    I2C1_DO_TX$8214$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_RX$8220$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_TX_EMPTY$8226$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_RX_EMPTY$8232$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_TX_EMPTY$8231	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_TX_EMPTY$8226	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), 
		 -> wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    I2C1_DO_RX$8225	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_RX$8220	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), 
		 -> wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    I2C1_DO_TX$8219	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_TX$8214	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), 
		 -> wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    I2C1_MasterFsm$8213	const PTR FTN()enum E10442 size(2) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_RESET(), I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), 
		 -> I2C1_DO_RX_ACK(), I2C1_DO_SEND_STOP(), I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_WRITE(), 
		 -> I2C1_DO_SEND_RESTART_READ(), I2C1_DO_TX_EMPTY(), I2C1_DO_RCEN(), I2C1_DO_RX(), 
		 -> I2C1_DO_TX(), I2C1_DO_SEND_ADR_WRITE(), I2C1_DO_SEND_ADR_READ(), I2C1_DO_IDLE(), 

    I2C1_CallbackReturnStop@funPtr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_CallbackReturnReset@funPtr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    Absolute function$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    S935$0$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    memcpy@d1	PTR void  size(2) Largest target is 17
		 -> controlSelectRemote@tempSerial(BANK0[4]), Decrypt@Buffer(COMRAM[4]), SecureKeyGen@SKEYtemp(COMRAM[8]), SecureKeyGen@HOPtemp(COMRAM[4]), 
		 -> SecureKeyGen@Buffer(COMRAM[8]), NormalKeyGen@SKEYtemp(COMRAM[4]), NormalKeyGen@SEED(BANK2[4]), NormalKeyGen@HOPtemp(COMRAM[4]), 
		 -> NormalKeyGen@Buffer(COMRAM[8]), DKEY(BANK2[8]), classic_data(BANK2[16]), I2C1_WriteNBytes@dat(COMRAM[17]), 
		 -> i2c_writeNBytes@dat(COMRAM[17]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 17
		 -> controlSelectRemote@tempSerial(BANK0[4]), Decrypt@Buffer(COMRAM[4]), SecureKeyGen@SKEYtemp(COMRAM[8]), SecureKeyGen@HOPtemp(COMRAM[4]), 
		 -> SecureKeyGen@Buffer(COMRAM[8]), NormalKeyGen@SKEYtemp(COMRAM[4]), NormalKeyGen@SEED(BANK2[4]), NormalKeyGen@HOPtemp(COMRAM[4]), 
		 -> NormalKeyGen@Buffer(COMRAM[8]), DKEY(BANK2[8]), classic_data(BANK2[16]), I2C1_WriteNBytes@dat(COMRAM[17]), 
		 -> i2c_writeNBytes@dat(COMRAM[17]), 

    memcpy@s1	PTR const void  size(2) Largest target is 64
		 -> classic_data.raw_data(BANK2[4]), Decrypt@Buffer(COMRAM[4]), SecureKeyGen@SKEYtemp(COMRAM[8]), SecureKeyGen@HOPtemp(COMRAM[4]), 
		 -> SecureKeyGen@Buffer(COMRAM[8]), NormalKeyGen@SKEYtemp(COMRAM[4]), NormalKeyGen@SEED(BANK2[4]), NormalKeyGen@HOPtemp(COMRAM[4]), 
		 -> NormalKeyGen@Buffer(COMRAM[8]), classic_data.serialnumber(BANK2[4]), classic_data(BANK2[16]), BufferRF(BANK2[9]), 
		 -> RemoveSerial@tempSerial(BANK0[4]), saveNewSerial@tempSerial(BANK0[4]), var_sys_NVM(BANK0[64]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 64
		 -> classic_data.raw_data(BANK2[4]), Decrypt@Buffer(COMRAM[4]), SecureKeyGen@SKEYtemp(COMRAM[8]), SecureKeyGen@HOPtemp(COMRAM[4]), 
		 -> SecureKeyGen@Buffer(COMRAM[8]), NormalKeyGen@SKEYtemp(COMRAM[4]), NormalKeyGen@SEED(BANK2[4]), NormalKeyGen@HOPtemp(COMRAM[4]), 
		 -> NormalKeyGen@Buffer(COMRAM[8]), classic_data.serialnumber(BANK2[4]), classic_data(BANK2[16]), BufferRF(BANK2[9]), 
		 -> RemoveSerial@tempSerial(BANK0[4]), saveNewSerial@tempSerial(BANK0[4]), var_sys_NVM(BANK0[64]), 

    eusartparser@package	PTR struct package_t size(1) Largest target is 7
		 -> main@package(BANK0[7]), 

    read_eusartparser@package	PTR struct package_t size(1) Largest target is 7
		 -> main@package(BANK0[7]), 

    sm_send_event@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_send_event@psm	PTR struct . size(2) Largest target is 12
		 -> controlLearning_stateMachine(BANK2[11]), controlGate_stateMachine(BANK1[11]), main_stateMachine(BANK1[11]), menuConfiguration_stateMachine(BANK2[11]), 

    sm_get_current_state@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_get_current_state@psm	PTR struct . size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_restart@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_restart@psm	PTR struct . size(2) Largest target is 12
		 -> controlLearning_stateMachine(BANK2[11]), controlGate_stateMachine(BANK1[11]), main_stateMachine(BANK1[11]), menuConfiguration_stateMachine(BANK2[11]), 

    sm_init@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_init@psm	PTR struct . size(2) Largest target is 12
		 -> controlLearning_stateMachine(BANK2[11]), controlGate_stateMachine(BANK1[11]), main_stateMachine(BANK1[11]), menuConfiguration_stateMachine(BANK2[11]), 

    sm_execute_menuConfiguration@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_execute_menuConfiguration@psm	PTR struct . size(2) Largest target is 12
		 -> menuConfiguration_stateMachine(BANK2[11]), 

    S6605$Value	PTR unsigned char  size(2) Largest target is 64
		 -> setValueToEdit@value(BANK1[1]), var_sys_NVM(BANK0[64]), NULL(NULL[0]), 

    edit_Param.Value	PTR unsigned char  size(2) Largest target is 64
		 -> setValueToEdit@value(BANK1[1]), var_sys_NVM.walkTime(BANK0[1]), var_sys_NVM.softStart(BANK0[1]), var_sys_NVM.softstop(BANK0[1]), 
		 -> var_sys_NVM.flashRGBMode(BANK0[1]), var_sys_NVM.velocityDecelaration(BANK0[1]), var_sys_NVM.operationMode(BANK0[1]), var_sys_NVM.autoTimeFullClose(BANK0[1]), 
		 -> var_sys_NVM.Stopboton(BANK0[1]), var_sys_NVM.logicDigital(BANK0[1]), var_sys_NVM.Direction_motor(BANK0[1]), var_sys_NVM.folow_me(BANK0[1]), 
		 -> var_sys_NVM.ligthTime(BANK0[1]), var_sys_NVM.autoTimeWalkClose(BANK0[1]), var_sys_NVM.programmingDistance(BANK0[1]), var_sys_NVM.flashLightMode(BANK0[1]), 
		 -> var_sys_NVM.securityBandInOpen(BANK0[1]), var_sys_NVM.securityBandType(BANK0[1]), var_sys_NVM.securityBandIsON(BANK0[1]), var_sys_NVM.photoCellInOpen(BANK0[1]), 
		 -> var_sys_NVM.photoCellIsON(BANK0[1]), var_sys_NVM.decelarationClose(BANK0[1]), var_sys_NVM.motorPower(BANK0[1]), var_sys_NVM.decelarationOpen(BANK0[1]), 
		 -> var_sys_NVM.homemPresente(BANK0[1]), var_sys_NVM.TypeofMotor(BANK0[1]), var_sys_NVM.positionRemotesWalk(BANK0[1]), var_sys_NVM.decelarationSensivity(BANK0[1]), 
		 -> var_sys_NVM.motorSensitivity(BANK0[1]), var_sys_NVM.electricBrake(BANK0[1]), var_sys_NVM(BANK0[64]), NULL(NULL[0]), 

    sm_execute_main@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_execute_main@psm	PTR struct . size(2) Largest target is 12
		 -> main_stateMachine(BANK1[11]), 

    sm_execute_ControlLearning@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_execute_ControlLearning@psm	PTR struct . size(2) Largest target is 12
		 -> controlLearning_stateMachine(BANK2[11]), 

    sm_execute_ControlGate@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_execute_ControlGate@psm	PTR struct . size(2) Largest target is 12
		 -> controlGate_stateMachine(BANK1[11]), 

    decrementTimeslot@ts	PTR int  size(2) Largest target is 72
		 -> ts_system.TimeShowVersion(BANK1[2]), ts_system.TimeLearningDecelaration(BANK1[2]), ts_system.TimeWaitToGetCurrent(BANK1[2]), ts_system.InvertionTimeClosingFromOpen(BANK1[2]), 
		 -> ts_system.TimeWaitReleCapacitor(BANK1[2]), ts_system.TimeInversionStart(BANK1[2]), ts_system.TimeStopedBeforeDecelaration(BANK1[2]), ts_system.TimeWaitToNextState(BANK1[2]), 
		 -> ts_system.timeFreqFlashligth(BANK1[2]), ts_system.timeFreqRGB(BANK1[2]), ts_system.timeWaitToClose(BANK1[2]), ts_system.timeOpenWalk(BANK1[2]), 
		 -> ts_system.timeoutMenu(BANK1[2]), ts_system.timeFreqDigit(BANK1[2]), ts_system.timewaitFlashRGB(BANK1[2]), ts_system.TimeStopElectricBrake(BANK1[2]), 
		 -> ts_system.Debug_TS(BANK1[2]), ts_system.timeSinalizationDigit(BANK1[2]), ts_system.TimeLastCommand(BANK1[2]), ts_system.timeBetweenSaveCounters(BANK1[2]), 
		 -> ts_system.TimeCurrentAlarm(BANK1[2]), ts_system.TimeCurrentWaitForAlarm(BANK1[2]), ts_system.TimeReleCapacitor(BANK1[2]), ts_system.TimeChargeCondesador(BANK1[2]), 
		 -> ts_system.TimeTransitionDecelaration(BANK1[2]), ts_system.timewaitBeforeSoftStart(BANK1[2]), ts_system.timeSoftStart(BANK1[2]), ts_system.TimeElectricBrake(BANK1[2]), 
		 -> ts_system.TimeStopADCZeroOffsetCalc(BANK1[2]), ts_system(BANK1[72]), 

    controlLearning_stateMachine.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    controlGate_stateMachine.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    main_stateMachine.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S4643$parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    menuConfiguration_stateMachine.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    verifyProgramingMode@classic_data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    keeloq_classic_decrypt_packet@data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    DecryptPacket_12BIT@data	PTR unsigned char  size(2) Largest target is 9
		 -> BufferRF(BANK2[9]), 

    DecryptPacket_12BIT@classic_data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    keeloqDecryptPacket@data	PTR unsigned char  size(2) Largest target is 9
		 -> BufferRF(BANK2[9]), 

    keeloqDecryptPacket@classic_data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    getHopCode@data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    HopCHK@data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    DecCHK@data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    Decrypt@packet	PTR unsigned char  size(2) Largest target is 16
		 -> SecureKeyGen@HOPtemp(COMRAM[4]), NormalKeyGen@Buffer(COMRAM[8]), classic_data(BANK2[16]), 

    NormalKeyGen@serial	PTR unsigned long  size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    sp__getClassicManufCode	PTR void  size(2) Largest target is 8
		 -> DKEY(BANK2[8]), 

    getSerialCmd@serial	PTR unsigned long  size(1) Largest target is 4
		 -> controlSelectRemote@tempSerial(BANK0[4]), 

    SaveNVM_VarSystem@point	PTR unsigned char  size(1) Largest target is 64
		 -> var_sys_NVM(BANK0[64]), 

    validateRemoteSerialNumber@position	PTR unsigned char  size(2) Largest target is 16
		 -> controlSelectRemote@pos(BANK0[1]), classic_data(BANK2[16]), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), Absolute function(), 

    I2C1_SetCallback@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_SetCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), 
		 -> rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), wr1RegCompleteHandler(), 

    I2C1_SetAddressNackCallback@ptr	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C1_SetAddressNackCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), 

    I2C1_SetDataCompleteCallback@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_SetDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), 
		 -> rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), wr1RegCompleteHandler(), 

    I2C1_SetBuffer@buffer	PTR void  size(2) Largest target is 64
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), I2C1_ReadDataBlock@reg(COMRAM[1]), 
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_WriteNBytes@dat(COMRAM[17]), I2C1_Write2ByteRegister@reg(COMRAM[1]), I2C1_Write2ByteRegister@data(COMRAM[2]), 
		 -> I2C1_Write1ByteRegister@reg(COMRAM[1]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@reg(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@reg(COMRAM[1]), I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@reg(COMRAM[2]), i2c_readDataBlock@d(COMRAM[4]), 
		 -> i2c_write2ByteRegister@reg(COMRAM[1]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@reg(COMRAM[1]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@reg(COMRAM[1]), i2c_read1ByteRegister@d2(COMRAM[1]), i2c_writeNBytes@dat(COMRAM[17]), i2c_write1ByteRegister@reg(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    S935$data_ptr	PTR unsigned char  size(2) Largest target is 64
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), I2C1_ReadDataBlock@reg(COMRAM[1]), 
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_WriteNBytes@dat(COMRAM[17]), I2C1_Write2ByteRegister@reg(COMRAM[1]), I2C1_Write2ByteRegister@data(COMRAM[2]), 
		 -> I2C1_Write1ByteRegister@reg(COMRAM[1]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@reg(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@reg(COMRAM[1]), I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@reg(COMRAM[2]), i2c_readDataBlock@d(COMRAM[4]), 
		 -> i2c_write2ByteRegister@reg(COMRAM[1]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@reg(COMRAM[1]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@reg(COMRAM[1]), i2c_read1ByteRegister@d2(COMRAM[1]), i2c_writeNBytes@dat(COMRAM[17]), i2c_write1ByteRegister@reg(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_Status.data_ptr	PTR unsigned char  size(2) Largest target is 64
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), I2C1_ReadDataBlock@reg(COMRAM[1]), 
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_WriteNBytes@dat(COMRAM[17]), I2C1_Write2ByteRegister@reg(COMRAM[1]), I2C1_Write2ByteRegister@data(COMRAM[2]), 
		 -> I2C1_Write1ByteRegister@reg(COMRAM[1]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@reg(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@reg(COMRAM[1]), I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@reg(COMRAM[2]), i2c_readDataBlock@d(COMRAM[4]), 
		 -> i2c_write2ByteRegister@reg(COMRAM[1]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@reg(COMRAM[1]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@reg(COMRAM[1]), i2c_read1ByteRegister@d2(COMRAM[1]), i2c_writeNBytes@dat(COMRAM[17]), i2c_write1ByteRegister@reg(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    S935$callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_Status.callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    S935$callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), 
		 -> wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    I2C1_Status.callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), 
		 -> wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    i2c1_fsmStateTable	const PTR FTN()enum E10442[16] size(2) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_RESET(), I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), 
		 -> I2C1_DO_RX_ACK(), I2C1_DO_SEND_STOP(), I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_WRITE(), 
		 -> I2C1_DO_SEND_RESTART_READ(), I2C1_DO_TX_EMPTY(), I2C1_DO_RCEN(), I2C1_DO_RX(), 
		 -> I2C1_DO_TX(), I2C1_DO_SEND_ADR_WRITE(), I2C1_DO_SEND_ADR_READ(), I2C1_DO_IDLE(), 

    rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr.data	PTR unsigned char  size(2) Largest target is 64
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    wr2RegCompleteHandler@i2c1_master_example$F523@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    wr1RegCompleteHandler@i2c1_master_example$F517@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    rd2RegCompleteHandler@i2c1_master_example$F511@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    rd1RegCompleteHandler@i2c1_master_example$F500@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    bufferBlock.data	PTR unsigned char  size(2) Largest target is 64
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    i2c_readDataBlock@data	PTR void  size(2) Largest target is 64
		 -> var_sys_NVM.homemPresente(BANK0[1]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), var_sys_NVM.positionRemotesFull(BANK0[1]), memoryTEMP(BANK2[16]), 
		 -> var_sys_NVM.learningCurrentNormalClose(BANK0[2]), var_sys_NVM(BANK0[64]), 

    d.data	PTR unsigned char  size(2) Largest target is 64
		 -> var_sys_NVM.homemPresente(BANK0[1]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), var_sys_NVM.positionRemotesFull(BANK0[1]), memoryTEMP(BANK2[16]), 
		 -> var_sys_NVM.learningCurrentNormalClose(BANK0[2]), var_sys_NVM(BANK0[64]), 

    S429$data	PTR unsigned char  size(2) Largest target is 64
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    rdBlkRegCompleteHandler@p.data	PTR unsigned char  size(2) Largest target is 64
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    rdBlkRegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    wr2RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    rd2RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    rd1RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    sp__memcpy	PTR void  size(2) Largest target is 17
		 -> controlSelectRemote@tempSerial(BANK0[4]), Decrypt@Buffer(COMRAM[4]), SecureKeyGen@SKEYtemp(COMRAM[8]), SecureKeyGen@HOPtemp(COMRAM[4]), 
		 -> SecureKeyGen@Buffer(COMRAM[8]), NormalKeyGen@SKEYtemp(COMRAM[4]), NormalKeyGen@SEED(BANK2[4]), NormalKeyGen@HOPtemp(COMRAM[4]), 
		 -> NormalKeyGen@Buffer(COMRAM[8]), DKEY(BANK2[8]), classic_data(BANK2[16]), I2C1_WriteNBytes@dat(COMRAM[17]), 
		 -> i2c_writeNBytes@dat(COMRAM[17]), 

    i2c_writeNBytes@data	PTR void  size(1) Largest target is 64
		 -> RemoveSerial@tempSerial(BANK0[4]), saveNewSerial@tempSerial(BANK0[4]), var_sys_NVM(BANK0[64]), 

    wr1RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Transmit_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMRAM

    _main->_eusartparser
    _sm_execute_menuConfiguration->_ResetDefaultMemory
    _sm_execute_menuConfiguration->_setValueToEdit
    _load_New_Menu->_SetSegmentValueIntermitentMain
    _controlSelectRemote->_RemoveSerial
    _controlSelectRemote->_saveNewSerial
    _controlSelectRemote->_validateRemoteSerialNumber
    _saveNewSerial->_i2c_writeNBytes
    _getSerialCmd->_memcpy
    _cmdMemoryIsEmpty->_i2c_readDataBlock
    _RemoveSerial->_i2c_writeNBytes
    _controlSaveRemote->_SetSegmentValueIntermitentMain
    ___awdiv->___lbmod
    _SetSegmentValueMain->___awdiv
    _controlLearnDigit->_SetSegmentValueLearn
    _sm_execute_ControlGate->_sm_execute_ControlLearning
    _generateErrorLearnig->_sm_init
    _sm_init->_sm_restart
    _setPositionInvertionInOpening->_getTimeDecelaration
    _controlVelocity->_getStateOpenPosition
    _getStateOpenPosition->_getTimeDecelaration
    _InitSoftStop->_GetMotorPower
    _CloseOrder->_sm_send_event
    _setPositionInvertionInClosing->_getTimeDecelaration
    _getTimeDecelaration->___lmul
    ___lmul->___lldiv
    _StopOrder->_sm_send_event
    _GetSecurityStateInClosing->_SetSegmentValueIntermitent
    _WaitPreFlash->_sm_send_event
    _OpenFullOrder->_sm_send_event
    _OpenWalkOrder->_sm_send_event
    _sm_send_event->_sm_get_current_state
    _InitSoftStart->_GetMotorPower
    _GetSecurityStateInOpening->_SetSegmentValueIntermitent
    _GetOpenOrder->_SetSegmentValueIntermitentMain
    _SetSegmentValueIntermitentMain->___awdiv
    _read_package->_EUSART1_Read
    _keeloqDecryptPacket->_validateRemoteSerialNumber
    _keeloq_classic_decrypt_packet->_NormalKeyGen
    _NormalKeyGen->_Decrypt
    _Decrypt->_memcpy
    _HopCHK->_getHopCode
    _getHopCode->___wmul
    _DecryptPacket_12BIT->_validateRemoteSerialNumber
    _validateRemoteSerialNumber->_i2c_readDataBlock
    _loadNVM_VarSystem->_ResetDefaultMemory
    _loadNVM_VarSystem->_checkNVM_VarSystem
    _read_eusartparser->_write_package
    _write_package->_EUSART1_Write
    _ShowVersion->_SetSegmentValue
    _SetSegmentValue->___awdiv
    _SYSTEM_Initialize->_TMR1_Initialize
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler
    _ControlMotor->_VerifyElectricalBrake
    _ControlLights->_setRGB_ON
    _setRGB_ON->_RGB_Set
    _ControlCurrent->_getCurrentComparator
    _refreshCurrent->_sumHIST
    _refreshADCZeroOffset->___lwdiv
    _getCurrentComparator->___wmul
    _SaveNVM_VarSystem->_i2c_writeNBytes
    _I2C1_SetAddressNackCallback->_I2C1_SetCallback
    _I2C1_MasterWrite->_I2C1_MasterOperation
    _I2C1_Poller->_I2C1_MasterFsm
    _I2C1_MasterFsm->_I2C1_DO_ADDRESS_NACK
    _I2C1_MasterFsm->_I2C1_DO_RX
    _I2C1_MasterFsm->_I2C1_DO_TX
    _I2C1_MasterFsm->_I2C1_DO_TX_EMPTY
    _I2C1_DO_TX_EMPTY->_I2C1_CallbackReturnReset
    _I2C1_DO_TX_EMPTY->_I2C1_CallbackReturnStop
    _I2C1_DO_TX_EMPTY->_rd1RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rd1RegCompleteHandler@i2c1_master_example$F500
    _I2C1_DO_TX_EMPTY->_rd2RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rd2RegCompleteHandler@i2c1_master_example$F511
    _I2C1_DO_TX_EMPTY->_rdBlkRegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rdBlkRegCompleteHandler@i2c1_master_example$F535
    _I2C1_DO_TX_EMPTY->_wr1RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_wr1RegCompleteHandler@i2c1_master_example$F517
    _I2C1_DO_TX_EMPTY->_wr2RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_wr2RegCompleteHandler@i2c1_master_example$F523
    _I2C1_DO_TX->_I2C1_CallbackReturnReset
    _I2C1_DO_TX->_I2C1_CallbackReturnStop
    _I2C1_DO_TX->_rd1RegCompleteHandler
    _I2C1_DO_TX->_rd1RegCompleteHandler@i2c1_master_example$F500
    _I2C1_DO_TX->_rd2RegCompleteHandler
    _I2C1_DO_TX->_rd2RegCompleteHandler@i2c1_master_example$F511
    _I2C1_DO_TX->_rdBlkRegCompleteHandler
    _I2C1_DO_TX->_rdBlkRegCompleteHandler@i2c1_master_example$F535
    _I2C1_DO_TX->_wr1RegCompleteHandler
    _I2C1_DO_TX->_wr1RegCompleteHandler@i2c1_master_example$F517
    _I2C1_DO_TX->_wr2RegCompleteHandler
    _I2C1_DO_TX->_wr2RegCompleteHandler@i2c1_master_example$F523
    _I2C1_DO_SEND_ADR_WRITE->_I2C1_MasterSendTxData
    _I2C1_DO_RX->_I2C1_CallbackReturnReset
    _I2C1_DO_RX->_I2C1_CallbackReturnStop
    _I2C1_DO_RX->_rd1RegCompleteHandler
    _I2C1_DO_RX->_rd1RegCompleteHandler@i2c1_master_example$F500
    _I2C1_DO_RX->_rd2RegCompleteHandler
    _I2C1_DO_RX->_rd2RegCompleteHandler@i2c1_master_example$F511
    _I2C1_DO_RX->_rdBlkRegCompleteHandler
    _I2C1_DO_RX->_rdBlkRegCompleteHandler@i2c1_master_example$F535
    _I2C1_DO_RX->_wr1RegCompleteHandler
    _I2C1_DO_RX->_wr1RegCompleteHandler@i2c1_master_example$F517
    _I2C1_DO_RX->_wr2RegCompleteHandler
    _I2C1_DO_RX->_wr2RegCompleteHandler@i2c1_master_example$F523
    _I2C1_DO_ADDRESS_NACK->_I2C1_CallbackReturnReset
    _I2C1_DO_ADDRESS_NACK->_I2C1_CallbackReturnStop
    _I2C1_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rd1RegCompleteHandler@i2c1_master_example$F500
    _I2C1_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rd2RegCompleteHandler@i2c1_master_example$F511
    _I2C1_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler@i2c1_master_example$F535
    _I2C1_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_wr1RegCompleteHandler@i2c1_master_example$F517
    _I2C1_DO_ADDRESS_NACK->_wr2RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_wr2RegCompleteHandler@i2c1_master_example$F523
    _wr2RegCompleteHandler@i2c1_master_example$F523->_I2C1_SetDataCompleteCallback
    _wr2RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _wr1RegCompleteHandler@i2c1_master_example$F517->_I2C1_SetDataCompleteCallback
    _wr1RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rdBlkRegCompleteHandler@i2c1_master_example$F535->_I2C1_SetDataCompleteCallback
    _rdBlkRegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rd2RegCompleteHandler@i2c1_master_example$F511->_I2C1_SetDataCompleteCallback
    _rd2RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rd1RegCompleteHandler@i2c1_master_example$F500->_I2C1_SetDataCompleteCallback
    _rd1RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _I2C1_SetDataCompleteCallback->_I2C1_SetCallback

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR2_ISR->_ReadADC
    _refreshSegment->_Segments_Set
    _controlTimeslots->_decrementTimeslot
    _ReadADC->_ADCC_GetSingleConversion
    _TMR1_ISR->_controlMotorForce
    _controlMotorForce->i2_GetMotorPower
    _TMR0_ISR->_rxi

Critical Paths under _main in BANK0

    _main->_sm_execute_main
    _sm_execute_main->_sm_execute_menuConfiguration
    _sm_execute_menuConfiguration->_controlSelectRemote
    _setValueToEdit->_SaveNVM_VarSystem
    _controlSelectRemote->_validateRemoteSerialNumber
    _sm_execute_ControlGate->_actionZone_Opening
    _sm_execute_ControlLearning->_SaveNVM_VarSystem
    _actionZone_Opening->_setPositionInvertionInClosing
    _controlVelocity->_getStateOpenPosition
    _actionZone_Closing->_setPositionInvertionInClosing
    _readRFButtons->_keeloqDecryptPacket
    _keeloqDecryptPacket->_validateRemoteSerialNumber
    _DecryptPacket_12BIT->_validateRemoteSerialNumber
    _loadNVM_VarSystem->_SaveNVM_VarSystem
    _checkNVM_VarSystem->_SaveNVM_VarSystem
    _ResetDefaultMemory->_SaveNVM_VarSystem
    _eusartparser->_SaveNVM_VarSystem
    _ControlCounterMoves->_SaveNVM_VarSystem

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0 7104586
                                             25 BANK0      7     7      0
                _ControlCounterMoves
                     _ControlCurrent
                      _ControlInputs
                      _ControlLights
                       _ControlMotor
                _EUSART1_is_rx_ready
                       _InitReceiver
                  _SYSTEM_Initialize
                    _SetSegmentValue
                        _ShowVersion
                    _WWDT_SoftEnable
                    _WWDT_TimerClear
                    _controlVelocity
                       _eusartparser
                      _getKeyPressed
                  _loadNVM_VarSystem
                         _readInputs
                      _readRFButtons
                       _read_package
                         _readbutton
             _sm_execute_ControlGate
                    _sm_execute_main
                            _sm_init
 ---------------------------------------------------------------------------------
 (1) _sm_execute_main                                      4     2      2 3265240
                                             21 BANK0      4     2      2
     _SetSegmentValueIntermitentMain
                _SetSegmentValueMain
                      _load_New_Menu
       _sm_execute_menuConfiguration
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (2) _sm_execute_menuConfiguration                         4     2      2 3239816
                                             17 BANK0      4     2      2
                    _ClearFlag_rfCMD
                 _ResetDefaultMemory
                  _SaveNVM_VarSystem
     _SetSegmentValueIntermitentMain
                _SetSegmentValueMain
                            ___lbdiv
                            ___lldiv
                             ___lmul
                            ___lwdiv
                  _controlLearnDigit
                  _controlSaveRemote
                _controlSelectRemote
                      _load_New_Menu
                     _setValueToEdit
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _setValueToEdit                                       6     5      1  716791
                                             57 COMRAM     1     0      1
                                              4 BANK0      5     5      0
                       _InitReceiver
                  _SaveNVM_VarSystem
                   _cmdMemoryIsEmpty
                      _load_New_Menu
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (4) _load_New_Menu                                        4     4      0    7093
                                             31 COMRAM     4     4      0
     _SetSegmentValueIntermitentMain
                _SetSegmentValueMain
 ---------------------------------------------------------------------------------
 (4) _InitReceiver                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _controlSelectRemote                                  9     9      0 1773799
                                              8 BANK0      9     9      0
                    _ClearFlag_rfCMD
                       _RemoveSerial
                  _SaveNVM_VarSystem
                    _SetSegmentValue
     _SetSegmentValueIntermitentMain
                _SetSegmentValueMain
                            ___awdiv
                            ___lbmod
                   _cmdMemoryIsEmpty
                       _getSerialCmd
                      _getTypeRemote
                      _saveNewSerial
                      _sm_send_event
         _validateRemoteSerialNumber
 ---------------------------------------------------------------------------------
 (4) _saveNewSerial                                        8     3      5  349450
                                             57 COMRAM     1     1      0
                                              0 BANK0      7     2      5
                    _i2c_writeNBytes
 ---------------------------------------------------------------------------------
 (4) _getTypeRemote                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _getSerialCmd                                         2     1      1    6667
                                             26 COMRAM     2     1      1
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _cmdMemoryIsEmpty                                     8     7      1  348241
                                             45 COMRAM     8     7      1
                  _i2c_readDataBlock
 ---------------------------------------------------------------------------------
 (4) _RemoveSerial                                         8     7      1  349363
                                             57 COMRAM     1     0      1
                                              0 BANK0      7     7      0
                    _i2c_writeNBytes
 ---------------------------------------------------------------------------------
 (3) _controlSaveRemote                                    1     1      0   20456
                                             31 COMRAM     1     1      0
                    _ClearFlag_rfCMD
     _SetSegmentValueIntermitentMain
                _SetSegmentValueMain
                            ___awdiv
                            ___lbmod
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (4) ___lbmod                                              4     3      1    1223
                                             15 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    1364
                                             19 COMRAM     8     4      4
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (5) _SetSegmentValueMain                                  2     1      1    2020
                                             27 COMRAM     2     1      1
                            ___awdiv (ARG)
                            ___lbdiv (ARG)
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (4) _ClearFlag_rfCMD                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _controlLearnDigit                                    0     0      0      22
               _SetSegmentValueLearn
 ---------------------------------------------------------------------------------
 (4) _SetSegmentValueLearn                                 3     3      0      22
                                             15 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     466
                                             15 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _sm_execute_ControlGate                               5     3      2  633789
                                             15 BANK0      5     3      2
                       _GetOpenOrder
         _SetSegmentValueIntermitent
                       _WaitPreFlash
                  _actionZone_Closed
                 _actionZone_Closing
                  _actionZone_Opened
                 _actionZone_Opening
         _sm_execute_ControlLearning
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (2) _sm_execute_ControlLearning                           5     3      2  372027
                                             57 COMRAM     1     1      0
                                              4 BANK0      4     2      2
                       _GetOpenOrder
                  _SaveNVM_VarSystem
                      _calculateMean
                 _clearLearningValue
               _generateErrorLearnig
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _generateErrorLearnig                                 0     0      0    2622
                            _sm_init
 ---------------------------------------------------------------------------------
 (1) _sm_init                                              5     0      5    2622
                                             17 COMRAM     5     0      5
                         _sm_restart
 ---------------------------------------------------------------------------------
 (2) _sm_restart                                           2     0      2     214
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _clearLearningValue                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _calculateMean                                       12     4      8    1241
                                             15 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) _actionZone_Opening                                   3     3      0   52477
                                             12 BANK0      3     3      0
                         _CloseOrder
                       _GetOpenOrder
          _GetSecurityStateInClosing
          _GetSecurityStateInOpening
                   _InitFullAutoTime
                   _InitWalkAutoTime
         _SetSegmentValueIntermitent
                          _StopOrder
                     _VerifyFollowMe
                    _controlVelocity
      _setPositionInvertionInClosing
      _setPositionInvertionInOpening
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _setPositionInvertionInOpening                        8     8      0    1207
                                             49 COMRAM     8     8      0
                _getTimeDecelaration
 ---------------------------------------------------------------------------------
 (3) _controlVelocity                                      1     1      0    3806
                                              2 BANK0      1     1      0
          _ControlDecelarationFactor
                       _InitSoftStop
               _getStateOpenPosition
                _getTimeDecelaration
 ---------------------------------------------------------------------------------
 (4) _getStateOpenPosition                                11    11      0    2562
                                             49 COMRAM     9     9      0
                                              0 BANK0      2     2      0
                             ___lmul
                _getTimeDecelaration
 ---------------------------------------------------------------------------------
 (4) _InitSoftStop                                         1     1      0      37
                                             19 COMRAM     1     1      0
                      _GetMotorPower
 ---------------------------------------------------------------------------------
 (4) _ControlDecelarationFactor                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _actionZone_Opened                                    2     2      0   42796
                                             31 COMRAM     2     2      0
                         _CloseOrder
                       _GetOpenOrder
          _GetSecurityStateInClosing
                   _InitFullAutoTime
                   _InitWalkAutoTime
                      _OpenFullOrder
                      _OpenWalkOrder
                     _VerifyFollowMe
 ---------------------------------------------------------------------------------
 (3) _VerifyFollowMe                                       1     1      0      31
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _CloseOrder                                           0     0      0   11293
                      _InitSoftStart
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (2) _actionZone_Closing                                   2     2      0   58040
                                             49 COMRAM     2     2      0
                       _GetOpenOrder
          _GetSecurityStateInClosing
                   _InitFullAutoTime
                   _InitWalkAutoTime
                      _OpenFullOrder
                      _OpenWalkOrder
         _SetSegmentValueIntermitent
                          _StopOrder
                             ___lmul
      _setPositionInvertionInClosing
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _setPositionInvertionInClosing                       12    12      0    1207
                                              0 BANK0     12    12      0
                _getTimeDecelaration
 ---------------------------------------------------------------------------------
 (4) _getTimeDecelaration                                  9     5      4    1207
                                             40 COMRAM     9     5      4
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8    1176
                                             28 COMRAM    12     4      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) _StopOrder                                            0     0      0   11256
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _GetSecurityStateInClosing                            0     0      0    1893
         _SetSegmentValueIntermitent
 ---------------------------------------------------------------------------------
 (2) _actionZone_Closed                                    2     2      0   65057
                                             31 COMRAM     2     2      0
                       _GetOpenOrder
          _GetSecurityStateInOpening
                   _InitFullAutoTime
                   _InitWalkAutoTime
                      _OpenFullOrder
                      _OpenWalkOrder
                       _WaitPreFlash
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _WaitPreFlash                                         0     0      0   22549
                   _InitFullAutoTime
                      _OpenFullOrder
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _OpenFullOrder                                        0     0      0   11293
                      _InitSoftStart
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _InitFullAutoTime                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _OpenWalkOrder                                        4     4      0   11389
                                             23 COMRAM     4     4      0
                      _InitSoftStart
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (2) _sm_send_event                                        6     2      4   11256
                                             17 COMRAM     6     2      4
               _sm_get_current_state
 ---------------------------------------------------------------------------------
 (3) _sm_get_current_state                                 2     0      2     121
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _InitSoftStart                                        1     1      0      37
                                             19 COMRAM     1     1      0
                      _GetMotorPower
 ---------------------------------------------------------------------------------
 (3) _InitWalkAutoTime                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _GetSecurityStateInOpening                            0     0      0    1893
         _SetSegmentValueIntermitent
 ---------------------------------------------------------------------------------
 (3) _SetSegmentValueIntermitent                           4     1      3    1893
                                             15 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (3) _GetOpenOrder                                         0     0      0    6454
     _SetSegmentValueIntermitentMain
                            ___lbdiv
 ---------------------------------------------------------------------------------
 (3) ___lbdiv                                              4     3      1    1861
                                             15 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (5) _SetSegmentValueIntermitentMain                       4     1      3    4593
                                             27 COMRAM     4     1      3
                            ___awdiv (ARG)
                            ___lbdiv (ARG)
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _readbutton                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _read_package                                        14     7      7     283
                                             16 COMRAM    14     7      7
                       _EUSART1_Read
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Read                                         1     1      0      24
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _readRFButtons                                        0     0      0  740427
                _DecryptPacket_12BIT
                _keeloqDecryptPacket
 ---------------------------------------------------------------------------------
 (2) _keeloqDecryptPacket                                 10     6      4  384102
                                              8 BANK0     10     6      4
                             _DecCHK
                             _HopCHK
      _keeloq_classic_decrypt_packet
                             _memcpy
         _validateRemoteSerialNumber
               _verifyProgramingMode
 ---------------------------------------------------------------------------------
 (3) _verifyProgramingMode                                 3     1      2     152
                                             15 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _keeloq_classic_decrypt_packet                        5     3      2   23218
                                             55 COMRAM     2     0      2
                                              0 BANK0      3     3      0
                            _Decrypt
                       _NormalKeyGen
 ---------------------------------------------------------------------------------
 (4) _NormalKeyGen                                        18    16      2   15069
                                             37 COMRAM    18    16      2
                            _Decrypt
                      _LoadManufCode
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _LoadManufCode                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _Decrypt                                             11     9      2    7935
                                             26 COMRAM    11     9      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _HopCHK                                               4     2      2    3536
                                             35 COMRAM     4     2      2
                          _ReqResync
                         _getHopCode
 ---------------------------------------------------------------------------------
 (4) _getHopCode                                          14    12      2    3145
                                             21 COMRAM    14    12      2
                          _ReqResync
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) _ReqResync                                            2     0      2     174
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _DecCHK                                               4     2      2     242
                                             15 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _DecryptPacket_12BIT                                  5     1      4  356325
                                              8 BANK0      5     1      4
                             _memcpy
         _validateRemoteSerialNumber
 ---------------------------------------------------------------------------------
 (4) _validateRemoteSerialNumber                          21    14      7  349416
                                             45 COMRAM    13     6      7
                                              0 BANK0      8     8      0
                  _i2c_readDataBlock
 ---------------------------------------------------------------------------------
 (1) _readInputs                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _loadNVM_VarSystem                                    0     0      0 1741500
             _I2C1_Read1ByteRegister
                 _ResetDefaultMemory
                  _SaveNVM_VarSystem
                 _checkNVM_VarSystem
                  _i2c_readDataBlock
 ---------------------------------------------------------------------------------
 (5) _i2c_readDataBlock                                   12     6      6  347773
                                             33 COMRAM    12     6      6
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (2) _checkNVM_VarSystem                                   1     1      0  349391
                                             57 COMRAM     1     1      0
                  _SaveNVM_VarSystem
 ---------------------------------------------------------------------------------
 (3) _ResetDefaultMemory                                   1     1      0  349369
                                             57 COMRAM     1     1      0
                  _SaveNVM_VarSystem
 ---------------------------------------------------------------------------------
 (2) _I2C1_Read1ByteRegister                               3     2      1  345691
                                             33 COMRAM     3     2      1
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (1) _getKeyPressed                                        1     1      0      24
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _eusartparser                                        10     9      1  359320
                                             57 COMRAM     1     0      1
                                              4 BANK0      2     2      0
                  _SaveNVM_VarSystem
                  _read_eusartparser
                 _write_eusartparser
                      _write_package
 ---------------------------------------------------------------------------------
 (2) _write_eusartparser                                  19    12      7    1343
                                             15 COMRAM    19    12      7
 ---------------------------------------------------------------------------------
 (2) _read_eusartparser                                    3     2      1    5302
                                             23 COMRAM     3     2      1
                      _write_package
 ---------------------------------------------------------------------------------
 (2) _write_package                                        7     0      7    3092
                                             16 COMRAM     7     0      7
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART1_Write                                        1     1      0      44
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _WWDT_TimerClear                                      2     2      0      25
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _WWDT_SoftEnable                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ShowVersion                                          0     0      0     500
                    _SetSegmentValue
 ---------------------------------------------------------------------------------
 (4) _SetSegmentValue                                      2     1      1     500
                                             27 COMRAM     2     1      1
                            ___awdiv (ARG)
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     784
                    _ADCC_Initialize
                 _EUSART1_Initialize
                    _I2C1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _WWDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WWDT_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0      98
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR2_SetInterruptHandler                             2     0      2      98
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0      98
                                             17 COMRAM     2     2      0
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             2     0      2      98
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0      98
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2      98
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     490
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2      98
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2      98
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ControlMotor                                         7     7      0     223
                                             17 COMRAM     7     7      0
              _VerifyElectricalBrake
 ---------------------------------------------------------------------------------
 (2) _VerifyElectricalBrake                                2     2      0     112
                                             15 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ControlLights                                        0     0      0    1620
                   _setFlashLigth_ON
                          _setRGB_ON
 ---------------------------------------------------------------------------------
 (2) _setRGB_ON                                            5     3      2    1022
                                             16 COMRAM     5     3      2
                            _RGB_Set
 ---------------------------------------------------------------------------------
 (3) _RGB_Set                                              1     1      0      22
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _setFlashLigth_ON                                     2     0      2     598
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _ControlInputs                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ControlCurrent                                       4     4      0    4118
                                             34 COMRAM     4     4      0
                      _GetMotorPower
               _getCurrentComparator
               _refreshADCZeroOffset
                     _refreshCurrent
 ---------------------------------------------------------------------------------
 (2) _refreshCurrent                                       0     0      0     576
                  _saveEnergyADCHist
                       _sumEnergyADC
                            _sumHIST
 ---------------------------------------------------------------------------------
 (3) _sumHIST                                             17    13      4     317
                                             15 COMRAM    17    13      4
 ---------------------------------------------------------------------------------
 (3) _sumEnergyADC                                         9     7      2     161
                                             15 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (3) _saveEnergyADCHist                                    2     0      2      98
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _refreshADCZeroOffset                                 3     3      0     893
                                             22 COMRAM     3     3      0
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     618
                                             15 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _getCurrentComparator                                13     9      4    2612
                                             21 COMRAM    13     9      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    2519
                                             15 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _GetMotorPower                                        4     4      0      37
                                             15 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (1) _ControlCounterMoves                                  0     0      0  349276
                  _SaveNVM_VarSystem
 ---------------------------------------------------------------------------------
 (4) _SaveNVM_VarSystem                                    4     4      0  349276
                                              0 BANK0      4     4      0
                    _i2c_writeNBytes
 ---------------------------------------------------------------------------------
 (5) _i2c_writeNBytes                                     24    19      5  349112
                                             33 COMRAM    24    19      5
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
                             _memcpy
 ---------------------------------------------------------------------------------
 (6) _memcpy                                              11     5      6    6478
                                             15 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _I2C1_SetAddressNackCallback                          4     0      4    2859
                                             20 COMRAM     4     0      4
                   _I2C1_SetCallback
 ---------------------------------------------------------------------------------
 (6) _I2C1_Open                                            2     2      0      68
                                             15 COMRAM     2     2      0
                _I2C1_MasterClearIrq
                    _I2C1_MasterOpen
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterOpen                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterWrite                                     0     0      0  334109
               _I2C1_MasterOperation
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterOperation                                 2     2      0  334109
                                             31 COMRAM     2     2      0
                   _I2C1_MasterStart
                        _I2C1_Poller
 ---------------------------------------------------------------------------------
 (8) _I2C1_Poller                                          0     0      0  334041
                     _I2C1_MasterFsm
            _I2C1_MasterWaitForEvent
 ---------------------------------------------------------------------------------
 (9) _I2C1_MasterWaitForEvent                              0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_MasterFsm                                       3     3      0  334041
                                             28 COMRAM     3     3      0
               _I2C1_DO_ADDRESS_NACK *
                       _I2C1_DO_IDLE *
                       _I2C1_DO_RCEN *
                      _I2C1_DO_RESET *
                         _I2C1_DO_RX *
                     _I2C1_DO_RX_ACK *
            _I2C1_DO_RX_NACK_RESTART *
               _I2C1_DO_RX_NACK_STOP *
              _I2C1_DO_SEND_ADR_READ *
             _I2C1_DO_SEND_ADR_WRITE *
               _I2C1_DO_SEND_RESTART *
          _I2C1_DO_SEND_RESTART_READ *
         _I2C1_DO_SEND_RESTART_WRITE *
                  _I2C1_DO_SEND_STOP *
                         _I2C1_DO_TX *
                   _I2C1_DO_TX_EMPTY *
                _I2C1_MasterClearIrq
                  _I2C1_MasterIsNack
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_TX_EMPTY                                    2     2      0   83487
                                             26 COMRAM     2     2      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
               _I2C1_DO_SEND_RESTART
                  _I2C1_DO_SEND_STOP
                  _I2C1_MasterSetIrq
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterSetIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_TX                                          2     2      0   83518
                                             26 COMRAM     2     2      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
          _I2C1_DO_SEND_RESTART_READ
         _I2C1_DO_SEND_RESTART_WRITE
                  _I2C1_DO_SEND_STOP
                  _I2C1_MasterIsNack
              _I2C1_MasterSendTxData
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterIsNack                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_DO_SEND_RESTART_WRITE                          0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (11) _I2C1_DO_SEND_RESTART_READ                           0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_SEND_ADR_WRITE                              0     0      0      31
              _I2C1_MasterSendTxData
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_SEND_ADR_READ                               0     0      0      31
              _I2C1_MasterSendTxData
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterSendTxData                               1     1      0      31
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RX_ACK                                      0     0      0       0
                 _I2C1_MasterSendAck
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RX                                          2     2      0   83487
                                             26 COMRAM     2     2      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
            _I2C1_DO_RX_NACK_RESTART
               _I2C1_DO_RX_NACK_STOP
               _I2C1_MasterGetRxData
                 _I2C1_MasterSendAck
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterSendAck                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterGetRxData                                0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RX_NACK_STOP                                0     0      0       0
                _I2C1_MasterSendNack
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RX_NACK_RESTART                             0     0      0       0
                _I2C1_MasterSendNack
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterSendNack                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RESET                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RCEN                                        0     0      0       0
                 _I2C1_MasterStartRx
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterStartRx                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_IDLE                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_ADDRESS_NACK                                2     2      0   83487
                                             26 COMRAM     2     2      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
               _I2C1_DO_SEND_RESTART
                  _I2C1_DO_SEND_STOP
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (11) _wr2RegCompleteHandler@i2c1_master_example$F523      2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _wr2RegCompleteHandler                               2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _wr1RegCompleteHandler@i2c1_master_example$F517      2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _wr1RegCompleteHandler                               2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rdBlkRegCompleteHandler@i2c1_master_example$F535    2     0      2    8343
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rdBlkRegCompleteHandler                             2     0      2    8343
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rd2RegCompleteHandler@i2c1_master_example$F511      2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rd2RegCompleteHandler                               2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rd1RegCompleteHandler@i2c1_master_example$F500      2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rd1RegCompleteHandler                               2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (6) _I2C1_SetDataCompleteCallback                         4     0      4    4339
                                             20 COMRAM     4     0      4
                   _I2C1_SetCallback
 ---------------------------------------------------------------------------------
 (7) _I2C1_SetCallback                                     5     1      4     997
                                             15 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (6) _I2C1_SetBuffer                                       4     0      4    3942
                                             15 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (11) _I2C1_DO_SEND_STOP                                   0     0      0       0
                    _I2C1_MasterStop
 ---------------------------------------------------------------------------------
 (12) _I2C1_MasterStop                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_DO_SEND_RESTART                                0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (12) _I2C1_MasterEnableRestart                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_CallbackReturnStop                             2     0      2       0
                                             24 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (11) _I2C1_CallbackReturnReset                            2     0      2     305
                                             24 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              2     0      2       0
 ---------------------------------------------------------------------------------
 (8) _I2C1_MasterStart                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C1_Close                                           1     1      0      37
                                             15 COMRAM     1     1      0
                _I2C1_MasterClearIrq
                   _I2C1_MasterClose
              _I2C1_MasterDisableIrq
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterDisableIrq                                0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterClose                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterClearIrq                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INTERRUPT_InterruptManager                          6     6      0    2657
                                              9 COMRAM     6     6      0
                   Absolute function *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
                           _TMR0_ISR
                           _TMR1_ISR
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (15) _TMR2_ISR                                            0     0      0    2292
                   Absolute function *
                            _ReadADC
       _TMR2_DefaultInterruptHandler *
                   _controlTimeslots
                     _refreshSegment
 ---------------------------------------------------------------------------------
 (16) _refreshSegment                                      0     0      0      22
                       _Segments_Set
 ---------------------------------------------------------------------------------
 (17) _Segments_Set                                        1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (16) _controlTimeslots                                    0     0      0    2248
                  _decrementTimeslot
 ---------------------------------------------------------------------------------
 (17) _decrementTimeslot                                   4     2      2    2248
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (16) _TMR2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _ReadADC                                             3     3      0      22
                                              1 COMRAM     3     3      0
           _ADCC_GetSingleConversion
 ---------------------------------------------------------------------------------
 (17) _ADCC_GetSingleConversion                            1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (15) _TMR1_ISR                                            0     0      0     365
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
                  _controlMotorForce
 ---------------------------------------------------------------------------------
 (16) _controlMotorForce                                   5     5      0     136
                                              4 COMRAM     5     5      0
                    i2_GetMotorPower
            i2_VerifyElectricalBrake
 ---------------------------------------------------------------------------------
 (17) i2_VerifyElectricalBrake                             2     2      0     112
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (17) i2_GetMotorPower                                     4     4      0      24
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (16) _TMR1_WriteTimer                                     2     0      2     229
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (16) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _TMR0_ISR                                            0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                                _rxi
 ---------------------------------------------------------------------------------
 (16) _rxi                                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (16) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART1_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART1_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (16) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (16) _EUSART1_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              2     0      2       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ControlCounterMoves
     _SaveNVM_VarSystem
       _i2c_writeNBytes
         _I2C1_Close
           _I2C1_MasterClearIrq
           _I2C1_MasterClose
           _I2C1_MasterDisableIrq
         _I2C1_MasterWrite
           _I2C1_MasterOperation
             _I2C1_MasterStart
             _I2C1_Poller
               _I2C1_MasterFsm
                 _I2C1_DO_ADDRESS_NACK *
                   Absolute function(Fake) *
                   _I2C1_CallbackReturnReset *
                   _I2C1_CallbackReturnStop *
                   _I2C1_DO_SEND_RESTART *
                     _I2C1_MasterEnableRestart
                   _I2C1_DO_SEND_STOP *
                     _I2C1_MasterStop
                   _rd1RegCompleteHandler *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                       _I2C1_SetCallback
                   _rd1RegCompleteHandler@i2c1_master_example$F500 *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _rd2RegCompleteHandler *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _rd2RegCompleteHandler@i2c1_master_example$F511 *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _rdBlkRegCompleteHandler *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _rdBlkRegCompleteHandler@i2c1_master_example$F535 *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _wr1RegCompleteHandler *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _wr1RegCompleteHandler@i2c1_master_example$F517 *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _wr2RegCompleteHandler *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _wr2RegCompleteHandler@i2c1_master_example$F523 *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                 _I2C1_DO_IDLE *
                 _I2C1_DO_RCEN *
                   _I2C1_MasterStartRx
                 _I2C1_DO_RESET *
                 _I2C1_DO_RX *
                   Absolute function(Fake) *
                   _I2C1_CallbackReturnReset *
                   _I2C1_CallbackReturnStop *
                   _I2C1_DO_RX_NACK_RESTART *
                     _I2C1_MasterSendNack
                   _I2C1_DO_RX_NACK_STOP *
                     _I2C1_MasterSendNack
                   _I2C1_MasterGetRxData *
                   _I2C1_MasterSendAck *
                   _rd1RegCompleteHandler *
                   _rd1RegCompleteHandler@i2c1_master_example$F500 *
                   _rd2RegCompleteHandler *
                   _rd2RegCompleteHandler@i2c1_master_example$F511 *
                   _rdBlkRegCompleteHandler *
                   _rdBlkRegCompleteHandler@i2c1_master_example$F535 *
                   _wr1RegCompleteHandler *
                   _wr1RegCompleteHandler@i2c1_master_example$F517 *
                   _wr2RegCompleteHandler *
                   _wr2RegCompleteHandler@i2c1_master_example$F523 *
                 _I2C1_DO_RX_ACK *
                   _I2C1_MasterSendAck
                 _I2C1_DO_RX_NACK_RESTART *
                 _I2C1_DO_RX_NACK_STOP *
                 _I2C1_DO_SEND_ADR_READ *
                   _I2C1_MasterSendTxData
                 _I2C1_DO_SEND_ADR_WRITE *
                   _I2C1_MasterSendTxData
                 _I2C1_DO_SEND_RESTART *
                 _I2C1_DO_SEND_RESTART_READ *
                   _I2C1_MasterEnableRestart
                 _I2C1_DO_SEND_RESTART_WRITE *
                   _I2C1_MasterEnableRestart
                 _I2C1_DO_SEND_STOP *
                 _I2C1_DO_TX *
                   Absolute function(Fake) *
                   _I2C1_CallbackReturnReset *
                   _I2C1_CallbackReturnStop *
                   _I2C1_DO_SEND_RESTART_READ *
                   _I2C1_DO_SEND_RESTART_WRITE *
                   _I2C1_DO_SEND_STOP *
                   _I2C1_MasterIsNack *
                   _I2C1_MasterSendTxData *
                   _rd1RegCompleteHandler *
                   _rd1RegCompleteHandler@i2c1_master_example$F500 *
                   _rd2RegCompleteHandler *
                   _rd2RegCompleteHandler@i2c1_master_example$F511 *
                   _rdBlkRegCompleteHandler *
                   _rdBlkRegCompleteHandler@i2c1_master_example$F535 *
                   _wr1RegCompleteHandler *
                   _wr1RegCompleteHandler@i2c1_master_example$F517 *
                   _wr2RegCompleteHandler *
                   _wr2RegCompleteHandler@i2c1_master_example$F523 *
                 _I2C1_DO_TX_EMPTY *
                   Absolute function(Fake) *
                   _I2C1_CallbackReturnReset *
                   _I2C1_CallbackReturnStop *
                   _I2C1_DO_SEND_RESTART *
                   _I2C1_DO_SEND_STOP *
                   _I2C1_MasterSetIrq *
                   _rd1RegCompleteHandler *
                   _rd1RegCompleteHandler@i2c1_master_example$F500 *
                   _rd2RegCompleteHandler *
                   _rd2RegCompleteHandler@i2c1_master_example$F511 *
                   _rdBlkRegCompleteHandler *
                   _rdBlkRegCompleteHandler@i2c1_master_example$F535 *
                   _wr1RegCompleteHandler *
                   _wr1RegCompleteHandler@i2c1_master_example$F517 *
                   _wr2RegCompleteHandler *
                   _wr2RegCompleteHandler@i2c1_master_example$F523 *
                 _I2C1_MasterClearIrq *
                 _I2C1_MasterIsNack *
               _I2C1_MasterWaitForEvent
         _I2C1_Open
           _I2C1_MasterClearIrq
           _I2C1_MasterOpen
         _I2C1_SetAddressNackCallback
           _I2C1_SetCallback
         _I2C1_SetBuffer
         _memcpy
   _ControlCurrent
     _GetMotorPower
     _getCurrentComparator
       ___wmul
     _refreshADCZeroOffset
       ___lwdiv
     _refreshCurrent
       _saveEnergyADCHist
       _sumEnergyADC
       _sumHIST
   _ControlInputs
   _ControlLights
     _setFlashLigth_ON
     _setRGB_ON
       _RGB_Set
   _ControlMotor
     _VerifyElectricalBrake
   _EUSART1_is_rx_ready
   _InitReceiver
   _SYSTEM_Initialize
     _ADCC_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _I2C1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
     _WWDT_Initialize
   _SetSegmentValue
     ___awdiv (ARG)
       ___lbmod (ARG)
     ___lbmod (ARG)
   _ShowVersion
     _SetSegmentValue
   _WWDT_SoftEnable
   _WWDT_TimerClear
   _controlVelocity
     _ControlDecelarationFactor
     _InitSoftStop
       _GetMotorPower
     _getStateOpenPosition
       ___lmul
         ___lldiv (ARG)
       _getTimeDecelaration
         ___lmul
     _getTimeDecelaration
   _eusartparser
     _SaveNVM_VarSystem
     _read_eusartparser
       _write_package
         _EUSART1_Write
     _write_eusartparser
     _write_package
   _getKeyPressed
   _loadNVM_VarSystem
     _I2C1_Read1ByteRegister
       _I2C1_Close
       _I2C1_MasterWrite
       _I2C1_Open
       _I2C1_SetAddressNackCallback
       _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
     _ResetDefaultMemory
       _SaveNVM_VarSystem
     _SaveNVM_VarSystem
     _checkNVM_VarSystem
       _SaveNVM_VarSystem
     _i2c_readDataBlock
       _I2C1_Close
       _I2C1_MasterWrite
       _I2C1_Open
       _I2C1_SetAddressNackCallback
       _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
   _readInputs
   _readRFButtons
     _DecryptPacket_12BIT
       _memcpy
       _validateRemoteSerialNumber
         _i2c_readDataBlock
     _keeloqDecryptPacket
       _DecCHK
       _HopCHK
         _ReqResync
         _getHopCode
           _ReqResync
           ___wmul
       _keeloq_classic_decrypt_packet
         _Decrypt
           _memcpy
         _NormalKeyGen
           _Decrypt
           _LoadManufCode
           _memcpy
       _memcpy
       _validateRemoteSerialNumber
       _verifyProgramingMode
   _read_package
     _EUSART1_Read
   _readbutton
   _sm_execute_ControlGate
     _GetOpenOrder
       _SetSegmentValueIntermitentMain
         ___awdiv (ARG)
         ___lbdiv (ARG)
         ___lbmod (ARG)
       ___lbdiv
     _SetSegmentValueIntermitent
     _WaitPreFlash
       _InitFullAutoTime
       _OpenFullOrder
         _InitSoftStart
           _GetMotorPower
         _sm_send_event
           _sm_get_current_state
       _sm_send_event
     _actionZone_Closed
       _GetOpenOrder
       _GetSecurityStateInOpening
         _SetSegmentValueIntermitent
       _InitFullAutoTime
       _InitWalkAutoTime
       _OpenFullOrder
       _OpenWalkOrder
         _InitSoftStart
         _sm_send_event
       _WaitPreFlash
       _sm_send_event
     _actionZone_Closing
       _GetOpenOrder
       _GetSecurityStateInClosing
         _SetSegmentValueIntermitent
       _InitFullAutoTime
       _InitWalkAutoTime
       _OpenFullOrder
       _OpenWalkOrder
       _SetSegmentValueIntermitent
       _StopOrder
         _sm_send_event
       ___lmul
       _setPositionInvertionInClosing
         _getTimeDecelaration
       _sm_send_event
     _actionZone_Opened
       _CloseOrder
         _InitSoftStart
         _sm_send_event
       _GetOpenOrder
       _GetSecurityStateInClosing
       _InitFullAutoTime
       _InitWalkAutoTime
       _OpenFullOrder
       _OpenWalkOrder
       _VerifyFollowMe
     _actionZone_Opening
       _CloseOrder
       _GetOpenOrder
       _GetSecurityStateInClosing
       _GetSecurityStateInOpening
       _InitFullAutoTime
       _InitWalkAutoTime
       _SetSegmentValueIntermitent
       _StopOrder
       _VerifyFollowMe
       _controlVelocity
       _setPositionInvertionInClosing
       _setPositionInvertionInOpening
         _getTimeDecelaration
       _sm_send_event
     _sm_execute_ControlLearning
       _GetOpenOrder
       _SaveNVM_VarSystem
       _calculateMean
       _clearLearningValue
       _generateErrorLearnig
         _sm_init
           _sm_restart
       _sm_send_event
     _sm_send_event
   _sm_execute_main
     _SetSegmentValueIntermitentMain
     _SetSegmentValueMain
       ___awdiv (ARG)
       ___lbdiv (ARG)
       ___lbmod (ARG)
     _load_New_Menu
       _SetSegmentValueIntermitentMain
       _SetSegmentValueMain
     _sm_execute_menuConfiguration
       _ClearFlag_rfCMD
       _ResetDefaultMemory
       _SaveNVM_VarSystem
       _SetSegmentValueIntermitentMain
       _SetSegmentValueMain
       ___lbdiv
       ___lldiv
       ___lmul
       ___lwdiv
       _controlLearnDigit
         _SetSegmentValueLearn
       _controlSaveRemote
         _ClearFlag_rfCMD
         _SetSegmentValueIntermitentMain
         _SetSegmentValueMain
         ___awdiv
         ___lbmod
         _sm_send_event
       _controlSelectRemote
         _ClearFlag_rfCMD
         _RemoveSerial
           _i2c_writeNBytes
         _SaveNVM_VarSystem
         _SetSegmentValue
         _SetSegmentValueIntermitentMain
         _SetSegmentValueMain
         ___awdiv
         ___lbmod
         _cmdMemoryIsEmpty
           _i2c_readDataBlock
         _getSerialCmd
           _memcpy
         _getTypeRemote
         _saveNewSerial
           _i2c_writeNBytes
         _sm_send_event
         _validateRemoteSerialNumber
       _load_New_Menu
       _setValueToEdit
         _InitReceiver
         _SaveNVM_VarSystem
         _cmdMemoryIsEmpty
         _load_New_Menu
         _sm_send_event
       _sm_send_event
     _sm_send_event
   _sm_init

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *
   _TMR0_ISR *
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _rxi *
   _TMR1_ISR *
     Absolute function(Fake) *
     _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer *
     _controlMotorForce *
       i2_GetMotorPower
       i2_VerifyElectricalBrake
   _TMR2_ISR *
     Absolute function(Fake) *
     _ReadADC *
       _ADCC_GetSingleConversion
     _TMR2_DefaultInterruptHandler *
     _controlTimeslots *
       _decrementTimeslot
     _refreshSegment *
       _Segments_Set

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E87      0       0      61        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      F7      11       96.5%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      F1       9       94.1%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FF       7       99.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     20      9A       5       96.2%
BITBANK14           88      0       0      32        0.0%
BANK14              88      0       0      33        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3A      4F       1       84.0%
BITBIGSFRllll       28      0       0      59        0.0%
BITBIGSFRhlllll     27      0       0      42        0.0%
BITBIGSFRhhllll     1B      0       0      37        0.0%
BITBIGSFRhhlh       1A      0       0      35        0.0%
BITBIGSFRhlllll     13      0       0      48        0.0%
BITBIGSFRhlllhh      F      0       0      41        0.0%
BITBIGSFRhlllll      E      0       0      46        0.0%
BITBIGSFRhhh         D      0       0      34        0.0%
BITBIGSFRhhllll      C      0       0      36        0.0%
BITBIGSFRllh         9      0       0      57        0.0%
BITBIGSFRhlllll      4      0       0      52        0.0%
BITBIGSFRhlllll      3      0       0      44        0.0%
BITBIGSFRhlllll      3      0       0      43        0.0%
BITBIGSFRhlllll      3      0       0      53        0.0%
BITBIGSFRhlllll      3      0       0      55        0.0%
BITBIGSFRhlllll      2      0       0      47        0.0%
BITBIGSFRhlllhh      2      0       0      40        0.0%
BITBIGSFRhlllll      2      0       0      49        0.0%
BITBIGSFRhlllll      2      0       0      54        0.0%
BITBIGSFRlh          2      0       0      56        0.0%
BITBIGSFRlllh        1      0       0      58        0.0%
BITBIGSFRhlllll      1      0       0      45        0.0%
BITBIGSFRhlllll      1      0       0      50        0.0%
BITBIGSFRhlllll      1      0       0      51        0.0%
BITBIGSFRhlllhh      1      0       0      39        0.0%
BITBIGSFRhlllhh      1      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     3D0      60        0.0%
DATA                 0      0     3D0       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Mon Jul 18 11:21:52 2022

                                        ?_ClearFlag_rfCMD 0001  
                              cmdMemoryIsEmpty@tempSerial 0032  
                                           _Counterchoose 0092  
                        __end_of_TMR2_SetInterruptHandler 91AA  
                                _eusart1TxBufferRemaining 01FE  
                            SetSegmentValueIntermitent@d1 0013  
                            SetSegmentValueIntermitent@d2 0010  
                                    ??_checkNVM_VarSystem 003A  
                                            ___awdiv@sign 0019  
                                     ___wmul@multiplicand 0012  
                           __end_of_VerifyElectricalBrake 7D3A  
                                           _LoadManufCode 8EB0  
                                        ?_SetSegmentValue 001C  
                                                     l100 88B4  
                            ??_sm_execute_ControlLearning 00DE  
                                                     l674 7808  
                                                     l690 7C70  
                                                     _GIE 007F97  
                                                     _Hop 007C  
                                   ?_I2C1_MasterOperation 0001  
                                         _timer1ReloadVal 02E1  
                                 keeloqDecryptPacket@data 00E0  
                                                     _rxi 4284  
                                  ControlMotor@stateMotor 0018  
                                         _TMR2_Initialize 8B9A  
                                                     prod 000FF3  
                                                     tosl 000FFD  
                                                     wreg 000FE8  
                                  ?_I2C1_MasterSendTxData 0001  
                                       load_New_Menu@Menu 0022  
                                    _I2C1_DO_RX_NACK_STOP 9226  
                               ?_I2C1_MasterEnableRestart 0001  
                                       _SaveNVM_VarSystem 8A14  
                        validateRemoteSerialNumber@serial 002E  
                                    I2C1_SetBuffer@buffer 0010  
                                       getKeyPressed@temp 0010  
                                     eusartparser@package 003A  
                                   getCurrentComparator@x 0022  
                                      ?_SaveNVM_VarSystem 0001  
                                 ??_rd2RegCompleteHandler 001B  
                                                    l2034 8184  
                                                    l1405 5FE4  
                                       readRFButtons@key1 0088  
                                                    l2039 8190  
                                                    l1512 54A0  
                                                    l2410 3A12  
                                                    l2306 4DD6  
                                                    l2235 6FEA  
                                                    l2323 7D36  
                                                    l1372 87B2  
                                                    l1436 551C  
                                                    l3060 26D2  
                                                    l1357 69FE  
                                                    l1366 6B80  
                                                    l2502 768E  
                                                    l2318 7D2C  
                                                    l1383 5720  
                                                    l2511 89B2  
                                                    l1519 54EC  
                                                    l3048 2546  
                                                    l2249 66E8  
                                                    l2514 89D8  
                                                    l1490 5382  
                                                    l2371 48C4  
                                                    l1731 685E  
                                                    l3083 2718  
                                                    l1388 57A8  
                                                    l2348 48B8  
                                                    l1740 68CA  
                                                    l1732 6866  
                                                    l1652 5ADE  
                                                    l3228 1066  
                                                    l2365 48B0  
                                                    l1741 68D2  
                                                    l1486 83BE  
                                                    l2438 3B84  
                                                    l1734 6882  
                                                    l1726 6824  
                                                    l1662 5B26  
                                                    l2375 4988  
                                                    l1743 68FC  
                                                    l1735 688A  
                                                    l1727 682C  
                                                    l2472 3C9A  
                                                    l2392 4980  
                                                    l3600 2F10  
                                                    l3601 2F16  
                                                    l1737 68A6  
                                                    l1649 5A68  
                                                    l3433 23C8  
                                                    l3353 1FA0  
                                                    l3097 27F2  
                                                    l3610 2F3E  
                                                    l1738 68AE  
                                                    l2722 4E02  
                                                    l4139 85B6  
                                                    l3611 2F44  
                                                    l3603 2F1C  
                                                    l3507 82AC  
                                                    l3604 2F22  
                                                    l2580 7F7A  
                                                    l2724 4E38  
                                                    l3613 2F4A  
                                                    l2805 4282  
                                                    l2725 4EF8  
                                                    l2398 4994  
                                                    l3614 2F50  
                                                    l3606 2F2C  
                                                    l1854 6DFA  
                                                    l2718 474C  
                                                    l3615 2F56  
                                                    l3375 209A  
                                                    l3367 2060  
                                                    l3624 31AC  
                                                    l3616 2F5C  
                                                    l3608 2F32  
                                                    l1864 6E2E  
                                                    l1856 6E0A  
                                                    l2648 384C  
                                                    l3625 31B6  
                                                    l3609 2F38  
                                                    l3385 21DE  
                                                    l3386 21FE  
                                                    l3619 3026  
                                                    l2907 19FC  
                                                    l3483 7244  
                                                    l3590 2ED4  
                                                    l3592 2EDA  
                                                    l2768 409E  
                                                    l3489 8B12  
                                                    l3594 2EE4  
                                                    l3595 2EEE  
                                                    l3587 2EC0  
                                                    l3675 7ABC  
                                                    l3596 2EF8  
                                                    l3597 2EFE  
                                                    l3589 2ECA  
                                                    l3598 2F04  
                                                    l3599 2F0A  
                                                    ?_rxi 0001  
                                                    _DKEY 02D1  
                                                    _LATA 000F83  
                                                    _LATB 000F84  
                                                    _LATC 000F85  
                                                    _LATD 000F86  
                                                    _LATE 000F87  
                                             main@package 00F1  
                                                    _T2PR 000FBC  
                                                    _PMD0 000EE1  
                                                    _PMD1 000EE2  
                                                    _PMD2 000EE3  
                                                    _PMD3 000EE4  
                                                    _PMD4 000EE5  
                                                    _PMD5 000EE6  
                                                    _EHop 028C  
                                                    _WPUA 000F10  
                                                    _WPUB 000F18  
                                                    _WPUC 000F20  
                                                    _WPUD 000F25  
                                                    _WPUE 000F2D  
                                         __end_of_RGB_Set 9162  
                                 ??_wr2RegCompleteHandler 001B  
                                                    _Bptr 008D  
                                        ??_I2C1_MasterFsm 001D  
                                           _EUSART1_Write 889E  
                               ??_I2C1_CallbackReturnStop 001B  
                                __end_of_controlTimeslots 59D0  
                                                    _main 5CF0  
                                           ?_EUSART1_Read 0001  
                                                    _temp 0080  
                                                    fsr1h 000FE2  
                                                    fsr2h 000FDA  
                                                    indf1 000FE7  
                                                    indf2 000FDF  
                                                    fsr1l 000FE1  
                                                    fsr2l 000FD9  
                                                    btemp 0050  
                                    saveNewSerial@cmdType 003A  
                                     ??_SaveNVM_VarSystem 003A  
                                                    prodh 000FF4  
                                                    prodl 000FF3  
                                                    start 009C  
                                        ??_I2C1_SetBuffer 0014  
                                          ??_ControlMotor 0012  
                                         __end_of_Decrypt 6E86  
                                ?i2_VerifyElectricalBrake 0001  
                                        getSerialCmd@temp 001C  
                                           ?_InitReceiver 0001  
                              ??_TMR1_SetInterruptHandler 0012  
                                            ___param_bank 000000  
                                         i2_GetMotorPower 7016  
                                         __end_of_ReadADC 851A  
                           I2C1_CallbackReturnStop@funPtr 0019  
                                         ??_getTypeRemote 0010  
                                                   ??_rxi 0001  
                                    __end_of_GetOpenOrder 5360  
                                 __end_of_TMR0_Initialize 8EF4  
                                          ?_LoadManufCode 0001  
                          ??_TMR0_DefaultInterruptHandler 0001  
                                           ?_InitSoftStop 0001  
                           sm_execute_ControlLearning@psm 00DC  
                           __end_of_OSCILLATOR_Initialize 90D0  
                      SetSegmentValueIntermitentMain@time 001D  
                                                   l12011 88A0  
                                                   l20031 52A2  
                                                   l20015 5270  
                                                   l20111 7402  
                                                   l12025 88D4  
                                                   l20009 5268  
                                                   l21001 34F2  
                                                   l12027 88D8  
                                                   l20203 7880  
                                                   l20051 52D0  
                                                   l21101 8358  
                                                   l20037 52AA  
                                                   l20215 78A0  
                                                   l20207 7884  
                                                   l20063 531C  
                                                   l20127 7438  
                                                   l20143 732A  
                                                   l21031 3586  
                                                   l21201 54B4  
                                                   l21121 5396  
                                                   l21113 5374  
                                                   l20305 4CB4  
                                                   l12241 6A12  
                                                   l20243 8A7C  
                                                   l20235 8A64  
                                                   l20075 535C  
                                                   l20067 5320  
                                                   l20091 73D0  
                                                   l20163 735C  
                                                   l21213 54DE  
                                                   l21205 54C2  
                                                   l21141 53DC  
                                                   l21133 53C0  
                                                   l21125 53A4  
                                                   l20421 7FCC  
                                                   l20149 732E  
                                                   l20501 81B0  
                                                   l12261 6A64  
                                                   l12253 6A46  
                                                   l21053 3612  
                                                   l20423 7FD8  
                                                   l20319 4CE2  
                                                   l20271 4C0A  
                                                   l20503 81E2  
                                                   l12247 6A2C  
                                                   l20511 1FAA  
                                                   l21209 54D0  
                                                   l21161 5422  
                                                   l21153 5406  
                                                   l21145 53EA  
                                                   l21137 53CE  
                                                   l21129 53B2  
                                                   l21233 5078  
                                                   l20097 73D4  
                                                   l21321 727E  
                                                   l20361 4D74  
                                                   l20265 4BF0  
                                                   l22121 1E76  
                                                   l22041 1CE0  
                                                   l22009 1C3A  
                                                   l12273 6A94  
                                                   l12265 6A70  
                                                   l12257 6A58  
                                                   l12521 8D5C  
                                                   l21081 7204  
                                                   l20513 1FB2  
                                                   l23001 27E2  
                                                   l12611 6BB4  
                                                   l21091 8310  
                                                   l21243 50EC  
                                                   l21251 5100  
                                                   l20427 7FE0  
                                                   l21323 7294  
                                                   l20179 7392  
                                                   l20339 4D44  
                                                   l20347 4D62  
                                                   l20259 4BDE  
                                                   l22123 1E80  
                                                   l12291 6AD4  
                                                   l12283 6ABC  
                                                   l12267 6A7A  
                                                   l21059 3628  
                                                   l20603 210C  
                                                   l20531 1FEE  
                                                   l20515 1FBA  
                                                   l22203 0FAA  
                                                   l12605 6B1C  
                                                   l21181 5468  
                                                   l21173 544C  
                                                   l21165 5430  
                                                   l21157 5414  
                                                   l21149 53F8  
                                                   l20189 8AAE  
                                                   l21261 5146  
                                                   l21245 50FC  
                                                   l21229 506E  
                                                   l20453 6CFA  
                                                   l21501 4700  
                                                   l21421 4628  
                                                   l22029 1C8A  
                                                   l20701 22FC  
                                                   l20613 211C  
                                                   l20525 1FD6  
                                                   l20517 1FC2  
                                                   l21343 72D0  
                                                   l20367 4D98  
                                                   l20295 4C96  
                                                   l20463 6D6E  
                                                   l21407 45E8  
                                                   l22143 1ED8  
                                                   l12287 6AC8  
                                                   l12279 6AAE  
                                                   l12295 6ADE  
                                                   l12471 7986  
                                                   l12463 7968  
                                                   l20703 2300  
                                                   l20623 21A4  
                                                   l20615 216A  
                                                   l20527 1FDE  
                                                   l22231 101E  
                                                   l22223 0FFC  
                                                   l22215 0FE4  
                                                   l22207 0FCC  
                                                   l23023 282A  
                                                   l21193 5492  
                                                   l21185 5476  
                                                   l21177 545A  
                                                   l21169 543E  
                                                   l21337 72C6  
                                                   l20377 4DC2  
                                                   l20369 4D9E  
                                                   l21513 472A  
                                                   l22161 1F06  
                                                   l22081 1D80  
                                                   l23121 36DA  
                                                   l23113 36AA  
                                                   l12481 79A6  
                                                   l12457 7958  
                                                   l12529 8D74  
                                                   l20713 2322  
                                                   l20561 206E  
                                                   l20529 1FE6  
                                                   l20801 2448  
                                                   l22313 12B6  
                                                   l14403 692C  
                                                   l20483 6438  
                                                   l21611 4EF4  
                                                   l20459 6D34  
                                                   l21427 4640  
                                                   l21371 4534  
                                                   l22155 1EF0  
                                                   l22067 1D50  
                                                   l22171 1F54  
                                                   l20723 2332  
                                                   l20715 2326  
                                                   l20707 2304  
                                                   l20563 2076  
                                                   l20547 2006  
                                                   l20539 1FFA  
                                                   l20803 249A  
                                                   l23043 2880  
                                                   l23027 283A  
                                                   l12581 776A  
                                                   l21189 5484  
                                                   l21277 5172  
                                                   l20389 7F3E  
                                                   l20477 63F4  
                                                   l20469 63A8  
                                                   l21605 4EDE  
                                                   l21533 4DF2  
                                                   l21373 454A  
                                                   l23213 390E  
                                                   l23133 3714  
                                                   l23125 36F2  
                                                   l23117 36B8  
                                                   l12469 797E  
                                                   l12485 79B0  
                                                   l20717 232A  
                                                   l20661 224E  
                                                   l20653 2218  
                                                   l20573 208A  
                                                   l20565 207E  
                                                   l20557 2012  
                                                   l22317 12D8  
                                                   l22245 1068  
                                                   l23037 285C  
                                                   l23301 5D4C  
                                                   l14423 6994  
                                                   l16111 2B56  
                                                   l16103 2B36  
                                                   l16031 29AA  
                                                   l21455 4698  
                                                   l21439 4664  
                                                   l20743 2370  
                                                   l20735 2366  
                                                   l20719 232E  
                                                   l20663 226A  
                                                   l20655 2242  
                                                   l22415 14D0  
                                                   l22407 147C  
                                                   l22343 1344  
                                                   l22335 1328  
                                                   l22351 1360  
                                                   l22239 1044  
                                                   l22247 10AC  
                                                   l22191 0F44  
                                                   l23071 2902  
                                                   l14417 6980  
                                                   l12593 8DB2  
                                                   l12577 7728  
                                                   l22601 5F30  
                                                   l16033 29C6  
                                                   l21641 4F66  
                                                   l21457 469E  
                                                   l22097 1DEC  
                                                   l22089 1D9E  
                                                   l23233 396E  
                                                   l23161 37AA  
                                                   l23145 374C  
                                                   l12489 79BE  
                                                   l20729 235C  
                                                   l20673 2298  
                                                   l20657 2246  
                                                   l20593 20B2  
                                                   l20585 20A2  
                                                   l22513 16CE  
                                                   l22409 147E  
                                                   l22281 11DC  
                                                   l22249 10C2  
                                                   l23321 5DFE  
                                                   l14435 69BA  
                                                   l14419 6988  
                                                   l14451 87A6  
                                                   l22603 5F34  
                                                   l16123 2B94  
                                                   l16115 2B66  
                                                   l16107 2B46  
                                                   l16051 2A4A  
                                                   l16043 2A0E  
                                                   l16035 29E0  
                                                   l21715 4104  
                                                   l21619 4F12  
                                                   l21491 46E4  
                                                   l21387 4578  
                                                   l23243 398A  
                                                   l23235 3974  
                                                   l20763 239C  
                                                   l20755 2398  
                                                   l20691 22D4  
                                                   l20683 22AC  
                                                   l20667 2284  
                                                   l22515 16D6  
                                                   l22507 16BC  
                                                   l22435 1562  
                                                   l22419 14F2  
                                                   l22291 11FA  
                                                   l22275 11AA  
                                                   l22259 112A  
                                                   l22195 0F66  
                                                   l22187 0F24  
                                                   l23091 2962  
                                                   l23331 5E1C  
                                                   l23315 5DDA  
                                                   l17013 3B40  
                                                   l16133 2C10  
                                                   l21629 4F38  
                                                   l21565 4E6C  
                                                   l21493 46E8  
                                                   l21477 46B8  
                                                   l23237 3978  
                                                   l23253 399E  
                                                   l23173 37EC  
                                                   l23149 376E  
                                                   l20749 238E  
                                                   l20677 22A0  
                                                   l20669 228E  
                                                   l22541 17F4  
                                                   l22525 1710  
                                                   l22381 1412  
                                                   l22277 11AC  
                                                   l22269 1190  
                                                   l23069 28EE  
                                                   l23093 296E  
                                                   l14463 56CA  
                                                   l22615 5F68  
                                                   l17015 3B50  
                                                   l14711 7D22  
                                                   l16119 2B76  
                                                   l16071 2AA8  
                                                   l16063 2A88  
                                                   l16055 2A68  
                                                   l16047 2A2C  
                                                   l16039 29FE  
                                                   l21831 426A  
                                                   l21815 4238  
                                                   l21807 421E  
                                                   l21735 4150  
                                                   l21655 4F96  
                                                   l21575 4E90  
                                                   l21495 46EE  
                                                   l21903 19DA  
                                                   l23247 3990  
                                                   l23239 3984  
                                                   l23191 38A4  
                                                   l20783 23F4  
                                                   l20791 2420  
                                                   l20695 22DC  
                                                   l20679 22A4  
                                                   l20599 20FA  
                                                   l22543 17FA  
                                                   l22535 17DE  
                                                   l22455 15D0  
                                                   l22439 1584  
                                                   l22383 1416  
                                                   l22367 13CC  
                                                   l22295 1226  
                                                   l22279 11D6  
                                                   l22199 0F88  
                                                   l23087 294E  
                                                   l22617 5F7E  
                                                   l14721 89B4  
                                                   l14705 7D06  
                                                   l16153 2CF4  
                                                   l16145 2CCC  
                                                   l16129 2BF2  
                                                   l22721 5A9C  
                                                   l22713 5A6E  
                                                   l21753 418E  
                                                   l21681 401E  
                                                   l21585 4EAE  
                                                   l21913 19FE  
                                                   l23177 380E  
                                                   l20769 23BA  
                                                   l20697 22F8  
                                                   l20689 22D0  
                                                   l22385 1422  
                                                   l23097 297A  
                                                   l14483 57B8  
                                                   l14459 56B4  
                                                   l17051 3C02  
                                                   l17019 3B66  
                                                   l17027 3B90  
                                                   l16139 2C6E  
                                                   l16091 2B06  
                                                   l16083 2AD8  
                                                   l16075 2AB8  
                                                   l16067 2A98  
                                                   l16059 2A78  
                                                   l21763 41AA  
                                                   l21747 4174  
                                                   l21683 4034  
                                                   l21659 4FA2  
                                                   l21595 4ECC  
                                                   l21587 4EB6  
                                                   l21579 4E9A  
                                                   l21915 1A3E  
                                                   l23187 384E  
                                                   l13843 8B0C  
                                                   l20947 3346  
                                                   l20779 23E2  
                                                   l22539 17EE  
                                                   l22467 160A  
                                                   l22811 252E  
                                                   l22803 24EC  
                                                   l23291 5D36  
                                                   l14469 56EA  
                                                   l14733 7616  
                                                   l17045 3BDC  
                                                   l17061 3C26  
                                                   l16149 2CE0  
                                                   l16181 302C  
                                                   l22725 5AC2  
                                                   l21781 41E4  
                                                   l21757 4196  
                                                   l21765 41B0  
                                                   l21941 1AF0  
                                                   l21933 1AB2  
                                                   l21917 1A54  
                                                   l23189 388E  
                                                   l13861 7A7A  
                                                   l20965 33C4  
                                                   l20957 3368  
                                                   l20789 2404  
                                                   l22493 1688  
                                                   l22485 1666  
                                                   l22821 258A  
                                                   l14487 57DA  
                                                   l14479 578E  
                                                   l22583 5EBE  
                                                   l14735 761E  
                                                   l14743 7636  
                                                   l17071 3C5C  
                                                   l17055 3C16  
                                                   l16159 2D52  
                                                   l16095 2B16  
                                                   l16087 2AF6  
                                                   l16079 2AC8  
                                                   l16167 2DB0  
                                                   l16183 309E  
                                                   l22663 630A  
                                                   l22743 5B42  
                                                   l22727 5AC8  
                                                   l21775 41D4  
                                                   l21695 408C  
                                                   l21935 1AD0  
                                                   l21855 18F0  
                                                   l21847 18BE  
                                                   l21839 188E  
                                                   l13871 7AAE  
                                                   l20991 34B8  
                                                   l20967 33FC  
                                                   l20959 336A  
                                                   l22479 164E  
                                                   l22399 145E  
                                                   l22559 1840  
                                                   l22911 26A8  
                                                   l22807 250C  
                                                   l13881 8584  
                                                   l14737 7626  
                                                   l14745 765E  
                                                   l17049 3BF4  
                                                   l16185 30EC  
                                                   l16177 2F66  
                                                   l22761 6E98  
                                                   l22745 5B4A  
                                                   l21793 41F6  
                                                   l20969 3402  
                                                   l22497 1694  
                                                   l22921 26E2  
                                                   l22841 25D8  
                                                   l22833 25BC  
                                                   l22817 2548  
                                                   l13883 858C  
                                                   l14755 768A  
                                                   l14739 762E  
                                                   l17083 3C9E  
                                                   l17067 3C48  
                                                   l16099 2B26  
                                                   l16187 315E  
                                                   l16179 2FD8  
                                                   l22771 6ECE  
                                                   l16507 906E  
                                                   l22691 59F4  
                                                   l16603 80B4  
                                                   l21795 41FA  
                                                   l21779 41DC  
                                                   l21875 195E  
                                                   l21867 1938  
                                                   l21859 1914  
                                                   l13859 7A6E  
                                                   l20987 347E  
                                                   l22931 2708  
                                                   l22851 25E6  
                                                   l22827 259C  
                                                   l22819 2574  
                                                   l13893 85AC  
                                                   l17093 3CDA  
                                                   l22765 6EB8  
                                                   l22757 6E88  
                                                   l16613 680E  
                                                   l22749 5B56  
                                                   l16605 80B8  
                                                   l21797 4200  
                                                   l21973 1B6A  
                                                   l22917 26C8  
                                                   l16703 651A  
                                                   l17087 3CB6  
                                                   l16199 31C0  
                                                   l22775 6EDE  
                                                   l16615 6818  
                                                   l21975 1B74  
                                                   l21895 19B2  
                                                   l21887 199A  
                                                   l21879 1978  
                                                   l20999 34DE  
                                                   l22919 26D4  
                                                   l22871 261A  
                                                   l22863 25FC  
                                                   l19105 7830  
                                                   l17089 3CC4  
                                                   l22777 6EF0  
                                                   l22785 6F24  
                                                   l21969 1B5C  
                                                   l22953 2752  
                                                   l22881 262A  
                                                   l22793 24A2  
                                                   l19131 7C7A  
                                                   l19203 86C2  
                                                   l17099 3CF4  
                                                   l22779 6F0A  
                                                   l16627 6848  
                                                   l16629 6852  
                                                   l21997 1BE4  
                                                   l22981 27AE  
                                                   l22893 265C  
                                                   l19127 7C74  
                                                   l16743 65B4  
                                                   l16719 6554  
                                                   l16831 814C  
                                                   l13999 877E  
                                                   l22967 278A  
                                                   l22959 2770  
                                                   l22887 2642  
                                                   l22799 24CA  
                                                   l19153 81F8  
                                                   l19137 7C80  
                                                   l19225 9146  
                                                   l16729 6580  
                                                   l16913 48A0  
                                                   l16585 807C  
                                                   l22993 27C4  
                                                   l22897 266E  
                                                   l19163 8206  
                                                   l19091 77C0  
                                                   l19083 77B4  
                                                   l19219 8532  
                                                   l19411 7E82  
                                                   l19403 7E46  
                                                   l16915 48A4  
                                                   l16835 815E  
                                                   l16675 68F6  
                                                   l16763 85E2  
                                                   l16595 809E  
                                                   l16587 8080  
                                                   l19157 81FE  
                                                   l19229 914E  
                                                   l19261 8BEE  
                                                   l19309 7A48  
                                                   l16941 4970  
                                                   l16917 48B2  
                                                   l19501 6C3A  
                                                   l19087 77BA  
                                                   l19255 8BE2  
                                                   l19335 882A  
                                                   l19343 884A  
                                                   l16951 39F4  
                                                   l16943 4974  
                                                   l16919 48C8  
                                                   l16871 47A2  
                                                   l16863 4786  
                                                   l16839 8172  
                                                   l19329 8F12  
                                                   l19169 820C  
                                                   l19097 77C6  
                                                   l19193 86B6  
                                                   l16689 64E6  
                                                   l16945 4982  
                                                   l16873 47A8  
                                                   l16857 4776  
                                                   l19417 7DC4  
                                                   l19513 6CAA  
                                                   l19505 6C66  
                                                   l19427 7E0E  
                                    write_package@package 0011  
                                   _eusart1RxStatusBuffer 0274  
                                                   l19197 86BC  
                                                   l19357 6FA0  
                                                   l19349 6F64  
                                                   l16981 3A98  
                                                   l16957 3A14  
                                                   l19701 6194  
                                                   l19541 8802  
                                                   l19605 7B1C  
                                                   l19613 75BA  
                                                   l19359 6FAC  
                                                   l16991 3AD4  
                                                   l19551 552A  
                                                   l19455 6DF6  
                                                   l19447 6DDC  
                                                   l19535 82F2  
                                                   l19391 847E  
                                                   l19623 75FC  
                                                   l19615 75EC  
                                                   l19369 6FDA  
                                                   l16993 3AE2  
                                                   l16985 3AAC  
                                                   l16969 3A5E  
                                                   l16889 47F4  
                                                   l19721 6240  
                                                   l19465 6E06  
                                                   l19379 700C  
                                                   l19571 55E4  
                                                   l19715 622A  
                                                   l19395 8492  
                                                   l19643 868C  
                                                   l19811 3D22  
                                                   l16997 3AF8  
                                                   l19565 55D2  
                                                   l19557 556E  
                                                   l19549 5524  
                                                   l19477 6E26  
                                                   l19469 6E12  
                                                   l19901 8A08  
                                                   l19645 86A6  
                                                   l16999 3B06  
                                                   l19567 55D6  
                                                   l19647 86AA  
                                                   l19823 3D42  
                                                   l19815 3D2C  
                                                   l19585 568C  
                                                   l19577 5628  
                                                   l19905 8A10  
                                                   l19753 6630  
                                                   l19745 65F2  
                                                   l19841 3DB6  
                                                   l19817 3D32  
                                                   l19923 5C54  
                                                   l19915 5BE0  
                                                   l19587 5690  
                                                   l19851 3E5A  
                                                   l19843 3DE2  
                                                   l19835 3D84  
                                                   l19597 7ED8  
                                                   l19861 3EF2  
                                                   l19853 3E88  
                                                   l19845 3DFE  
                                                   l19829 3D74  
                                                   l18895 8026  
                                                   l19919 5C1C  
                                                   l19695 6142  
                                                   l19759 6684  
                                                   l19863 3F0C  
                                                   l19855 3EA4  
                                                   l19847 3E22  
                                                   l19937 5CE2  
                                                   l19953 51D2  
                                                   l19873 3F90  
                                                   l19857 3EC0  
                                                   l19849 3E3E  
                                                   l19971 5210  
                                                   l19859 3ED8  
                                                   l19867 3F1E  
                                                   l19893 89F2  
                                                   l19877 3FCC  
                                                   l19869 3F82  
                                                   l19983 5238  
                                                   l19959 51D6  
                                                   l19889 89EC  
                                                   l19977 5214  
                                                   l19993 523C  
                                                   _ADACQ 000F5C  
                                       __end_of_I2C1_Open 7A4C  
                                                   _ADCAP 000F5D  
                                                   _ADACT 000F56  
                                   __end_of_saveNewSerial 7F0C  
                                                   ?_main 0001  
                                                   _ADCLK 000F57  
                                                   _ADCNT 000F67  
                                                   _ADPCH 000F5F  
                                                   _ADREF 000F58  
                                         __end_of___awdiv 79C8  
                          ?_keeloq_classic_decrypt_packet 0038  
                                         __end_of___lbdiv 8A14  
                                                   _ADPRE 000F5E  
                                                   _ADRPT 000F66  
                                         __end_of___lbmod 8D7C  
                                            _zeroCrossing 0192  
                                         __end_of___lldiv 7ACE  
                                                   u20000 4836  
                                                   u20100 48F0  
                                                   u20020 4858  
                                                   u12100 798A  
                                                   _T1CLK 000FD2  
                                                   u20120 48FA  
                                                   u20300 3AA8  
                                                   u20140 4904  
                                         ___awdiv@divisor 0016  
                                                   u20230 3A26  
                                                   u20320 3AC4  
                                                   u20240 3A34  
                                                   u20160 4928  
                                                   u20080 48E4  
                                                   _T1CON 000FCF  
                                                   u20250 3A44  
                                                   u22110 6FBA  
                                                   u22008 8556  
                                                   u22120 6FC8  
                                                   _T2CON 000FBD  
                                                   u22009 8568  
                                                   u20530 3C12  
                                                   u20450 3BA6  
                                                   u22140 6FE6  
                                                   u20620 3C84  
                                                   u22150 6FFA  
                                                   u20630 3C8C  
                                                   u20390 3B30  
                                                   u22160 7008  
                                                   u20480 3BBE  
                                                   u22090 6F7E  
                                                   u22410 82EA  
                                                   u20580 3C58  
                                                   u23300 78B0  
                                                   u13700 7A7E  
                                                   u24020 343C  
                                                   u20670 3CE8  
                                                   u24110 351E  
                                                   u15400 766E  
                                                   u22345 6C46  
                                                   u13730 8590  
                                                   u15330 7D1C  
                                                   u23410 4C40  
                                                   u22620 6222  
                                                   u22380 8298  
                                                   u13660 8AF4  
                                                   u24140 3558  
                                                   _T2HLT 000FBE  
                                                   u22365 6CB6  
                                                   u14710 6920  
                                                   u15350 89AE  
                                                   u22630 65EE  
                                                   u23430 4C50  
                                                   u25030 46CC  
                                                   u23335 8406  
                                                   u14800 56C2  
                                                   u15360 89C4  
                                                   u24320 538E  
                                                   u23440 4C60  
                                                   u25120 4742  
                                                   u15290 7CE6  
                                                   u22730 8708  
                                                   u23450 4C68  
                                                   u24250 71A2  
                                                   u23540 4CFE  
                                                   u23380 4BFC  
                                                   u24180 35FA  
                                                   u18101 29D2  
                                                   u21918 77D2  
                                                   u14830 5706  
                                                   u23710 7F4E  
                                                   u25310 4E8A  
                                                   u23630 4D84  
                                                   u23550 4D0E  
                                                   u21919 77E4  
                                                   u18111 2BB6  
                                                   u14840 5718  
                                                   u22840 89F6  
                                                   u23560 4D16  
                                                   u18201 2DA2  
                                                   u18121 2BE4  
                                                   u21890 9186  
                                                   u18210 9140  
                                                   u24530 54AC  
                                                   u23730 7FA6  
                                                   u22690 6692  
                                                   u23650 4DAC  
                                                   u23490 4CC4  
                                                   u26130 1A8E  
                                                   u18131 2C32  
                                                   u23491 4CC2  
                                                   u21948 7C8C  
                                                   u22940 51AE  
                                                   u25500 4F76  
                                                   u25340 4EAA  
                                                   u26220 1B64  
                                                   u23900 23EE  
                                                   u21949 7C9E  
                                                   u18141 2C60  
                                                   u21958 8218  
                                                   u14790 56AA  
                                                   u25270 4E66  
                                                   u26310 1C4A  
                                                   u23910 32F0  
                                                   u21959 822A  
                                                   u18151 2C90  
                                                   u21968 86CE  
                                                   u24640 5110  
                                                   u26400 1D04  
                                                   u26320 1C64  
                                                   u26240 1B88  
                                                   u23920 32F6  
                                                   u27200 15E6  
                                                   u27120 14A4  
                                                   u21969 86E0  
                                                   u18161 2CBE  
                                                   u26321 1C62  
                                                   u22970 520C  
                                                   u23690 7F2C  
                                                   u25610 4052  
                                                   u26410 1D0A  
                                                   u26250 1B90  
                                                   u26170 1B0C  
                                                   u27210 161A  
                                                   u18171 2D16  
                                                   u27211 1618  
                                                   u27115 148E  
                                                   u25460 4F46  
                                                   u26500 1DB8  
                                                   u26420 1D2E  
                                                   u26340 1CA8  
                                                   u26260 1BAA  
                                                   u26180 1B14  
                                                   u18181 2D44  
                                                   u26501 1DB6  
                                                   u26421 1D2C  
                                                   u26341 1CA6  
                                                   u26261 1BA8  
                                                   u27125 14A0  
                                                   u19310 64DA  
                                                   u24750 72A2  
                                                   u25710 416A  
                                                   u24910 4600  
                                                   u26510 1DC6  
                                                   u26350 1CB6  
                                                   u26190 1B2E  
                                                   u27230 1630  
                                                   u27070 1430  
                                                   u18191 2D74  
                                                   u26191 1B2C  
                                                   u19080 8096  
                                                   u25720 4182  
                                                   u25640 4118  
                                                   u25560 4FC0  
                                                   u24840 4560  
                                                   u26600 1EEA  
                                                   u26280 1C02  
                                                   u27320 16E6  
                                                   u27240 1644  
                                                   u27160 1536  
                                                   u27080 1436  
                                                   u28120 2702  
                                                   u25561 4FBE  
                                                   u26281 1C00  
                                                   u27321 16E4  
                                                   u27410 5F12  
                                                   u24930 4614  
                                                   u26450 1D62  
                                                   u26290 1C10  
                                                   u23970 3382  
                                         __end_of___lwdiv 85C0  
                                                   u27155 1520  
                                                   u27500 5FC8  
                                                   u25820 422E  
                                                   u25660 412C  
                                                   u27260 165E  
                                                   u28300 2802  
                                                   u28060 267E  
                                                   u27245 1640  
                                                   u27165 1532  
                                                   u28301 2800  
                                                   u25750 41C8  
                                                   u26630 1F04  
                                                   u26550 1E06  
                                                   u26470 1D6E  
                                                   u25910 18B2  
                                                   u27190 15E0  
                                                   u18615 8F6C  
                                                   u27440 5F4C  
                                                   u19600 65D4  
                                                   u19520 658E  
                                                   u19360 6502  
                                                   u18616 8F6E  
                                                   u24960 464E  
                                                   u26640 1F20  
                                                   u26560 1E0C  
                                                   u28080 26B6  
                                                   u26641 1F1E  
                                                   u19450 6546  
                                                   u19290 64CE  
                                                   u19610 85CA  
                                                   u25690 415E  
                                                   u24890 459E  
                                                   u26650 1F2E  
                                                   u26490 1D9C  
                                                   u28170 2730  
                                                   u27540 8376  
                                                   u19380 650E  
                                                   u19700 813A  
                                                   u25940 18E4  
                                                   u19621 85D8  
                                                   u27550 83A8  
                                                   u27470 5FA0  
                                                   u27390 5EFA  
                                                   u25790 420E  
                                                   u24990 4672  
                                                   u28510 291A  
                                                   u28430 28AE  
                                                   u28350 2848  
                                                   u28190 2740  
                                                   u27480 5FAE  
                                                   u27801 6EAA  
                                                   u19490 6576  
                                                   u27650 5A8E  
                                                   u28610 3708  
                                                   u26930 128A  
                                                   u19580 65C4  
                                                   u27740 5B26  
                                                   u27660 5A9C  
                                                   u26940 12E6  
                                                   u28540 2932  
                                                   _T2TMR 000FBB  
                                                   u26925 1274  
                                                   u19590 65CC  
                                                   u19910 4802  
                                                   u26950 12EC  
                                                   u26790 105A  
                                                   u28470 28CC  
                                                   u27831 6EFC  
                                                   u26935 1286  
                                                   u27680 5AC2  
                                                   u28640 3740  
                                                   u27690 5AD6  
                                                   u28810 38FE  
                                                   u26970 1336  
                                                   u27850 24BE  
                                                   _T2RST 000FC0  
                                                   u19940 4816  
                                                   u28660 3762  
                                                   u26980 133C  
                                                   u19870 47D0  
                                                   u28590 36CE  
                                                   u26990 1352  
                                                   u26991 1350  
                                                   u19960 4822  
                                                   u19880 47DE  
                                                   u27880 2522  
                                                   i2l106 8ADE  
                                                   u19890 47EE  
                                                   u28770 38C0  
                                                   u28907 7E92  
                                                   u19891 47EC  
                                                   u28851 5DEE  
                                                   u19980 482C  
                                                   u28897 7E1E  
                                                   i2l870 004C  
                                                   i2l872 006A  
                                                   i2l873 0080  
                                                   i2l874 0076  
                                                   i2l867 0030  
                                         ___awdiv@counter 0018  
                                              _CloseOrder 8DCE  
                              __end_of_i2c1_fsmStateTable 0F21  
                                                   _OSCEN 000EDC  
                                                   _TMR0H 000FD4  
                                                   _TMR1H 000FCE  
                                                   _TMR0L 000FD3  
                                                   _TMR1L 000FCD  
                                                   _RFBit 0089  
                                                   _PORTB 000F8E  
                               __end_of_SaveNVM_VarSystem 8A4C  
                          DecryptPacket_12BIT@commandType 00E4  
                                                   _TRISA 000F88  
                                                   _TRISB 000F89  
                                                   _TRISC 000F8A  
                                                   _TRISD 000F8B  
                                                   _TRISE 000F8C  
                                  ??_I2C1_MasterGetRxData 0010  
                                   ?_I2C1_DO_RX_NACK_STOP 0001  
                             validateRemoteSerialNumber@i 003A  
                             validateRemoteSerialNumber@j 0039  
                                     ___lmul@multiplicand 0021  
                               ?_TMR0_SetInterruptHandler 0010  
                                           _InitSoftStart 82AE  
                              ??_I2C1_CallbackReturnReset 001B  
                                       ??_I2C1_MasterOpen 0010  
                                        _idxAdcAquisition 0091  
                                    _EUSART1_Transmit_ISR 8AB2  
                                       ??_I2C1_MasterStop 0010  
                                       ??_I2C1_Initialize 0010  
                               GetMotorPower@defineatraso 0013  
                                        __end_of_TMR0_ISR 8E66  
                                        __end_of_TMR1_ISR 899E  
                                        __end_of_TMR2_ISR 6134  
                                    _idxSaveEnergyADCHist 0090  
                                                   _rfCMD 003B  
                                                   _aux_i 018C  
                          actionZone_Closed@typeOpenOrder 0021  
                                        _setFlashLigth_ON 899E  
                                          ?_EUSART1_Write 0001  
                                          readbutton@key1 0086  
                                   SetSegmentValueMain@d1 001D  
                                          readbutton@key2 0196  
                                   SetSegmentValueMain@d2 001C  
                                 __end_of_TMR1_Initialize 889E  
                                    setFlashLigth_ON@Freq 0010  
                                                   pclath 000FFA  
       rd1RegCompleteHandler@i2c1_master_example$F500@ptr 0019  
                                                   pclatu 000FFB  
                                         __end_of_sumHIST 6BF6  
                                         __end_of_sm_init 846E  
                                                   tablat 000FF5  
       rd2RegCompleteHandler@i2c1_master_example$F511@ptr 0019  
       wr2RegCompleteHandler@i2c1_master_example$F523@ptr 0019  
       wr1RegCompleteHandler@i2c1_master_example$F517@ptr 0019  
     rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr 0019  
                                          ??_EUSART1_Read 0010  
                                                   plusw0 000FEB  
                                                   plusw2 000FDB  
                                 __end_of_sm_execute_main 29A8  
                                                   ttemp5 0051  
                                                   ttemp6 0054  
                                                   ttemp7 0058  
                                                   status 000FD8  
                                         ??_ControlLights 0016  
                                                   wtemp8 0051  
                                            ??_I2C1_DO_RX 001B  
                                            ??_I2C1_DO_TX 001B  
                                         ??_ControlInputs 0010  
                                         ___lbdiv@divisor 0010  
              __end_of_EUSART1_DefaultFramingErrorHandler 92CC  
                    ??_EUSART1_DefaultFramingErrorHandler 0001  
                     ?_EUSART1_DefaultFramingErrorHandler 0001  
                      _EUSART1_DefaultFramingErrorHandler 92CA  
                                         _TMR1_WriteTimer 8F8C  
                                  ??_I2C1_DO_ADDRESS_NACK 001B  
                                         ___lbdiv@counter 0012  
                            __end_of_getStateOpenPosition 66EC  
                                            ??_I2C1_Close 0010  
                                          ??_InitReceiver 0010  
                        VerifyElectricalBrake@actualState 0011  
                      i2VerifyElectricalBrake@actualState 0002  
                                         __initialization 70DC  
                                 cmdMemoryIsEmpty@cmdType 0031  
                             ?_SetSegmentValueIntermitent 0010  
                              __end_of_EUSART1_Initialize 7BCC  
                                            __end_of_main 5E72  
                         sm_execute_menuConfiguration@psm 00E9  
                             __end_of_DecryptPacket_12BIT 771C  
                                          _refreshCurrent 878E  
                                          ??_InitSoftStop 0014  
                      validateRemoteSerialNumber@position 0033  
                                 __end_of_TMR2_Initialize 8BC6  
                             ?_INTERRUPT_InterruptManager 0001  
                                          _refreshSegment 78BE  
                                  ??_I2C1_MasterOperation 0020  
                                _TMR2_SetInterruptHandler 91A0  
                                                  ??_main 003B  
                                       ??_WWDT_Initialize 0010  
                                           __activetblptr 000003  
                                       Segments_Set@value 0001  
                                   saveNewSerial@position 00DC  
                      __end_of_validateRemoteSerialNumber 569C  
                              _validateRemoteSerialNumber 5500  
                                          ?_InitSoftStart 0001  
                                   ?_EUSART1_Transmit_ISR 0001  
                                           sumEnergyADC@i 0018  
                                      __end_of_I2C1_DO_RX 7CC2  
                                      __end_of_I2C1_DO_TX 7834  
                                       ?_InitWalkAutoTime 0001  
                                       ??_controlVelocity 00DA  
                                               ??_RGB_Set 0010  
                              ?_ControlDecelarationFactor 0001  
                                    __end_of_getSerialCmd 86AE  
                  __end_of_SetSegmentValueIntermitentMain 910E  
                          _SetSegmentValueIntermitentMain 90FA  
                                      __end_of_I2C1_Close 8F16  
                                                  _ADACCH 000F71  
                                                  _ADACCL 000F70  
                                 ?_I2C1_Read1ByteRegister 0022  
                                      ??_InitWalkAutoTime 0010  
                                                  _ADCON0 000F60  
                                                  _ADCON1 000F59  
                                                  _ADCON2 000F5A  
                                                  _ADCON3 000F5B  
                                                  _ADERRH 000F6F  
                                                  _ADERRL 000F6E  
                                                  _ADLTHH 000F6B  
                                                  _ADLTHL 000F6A  
                                                  _ADRESH 000F64  
                                                  _ADRESL 000F63  
                                                  _ADSTAT 000F65  
                                                  _ADUTHH 000F6D  
                                        ___awdiv@dividend 0014  
                                                  _ADUTHL 000F6C  
                                                  _ANSELA 000F11  
                                                  _ANSELB 000F19  
                                                  _ANSELC 000F21  
                                                  _ANSELD 000F26  
                                                  _ANSELE 000F2E  
                                                  _T0CON0 000FD5  
                                                  _T0CON1 000FD6  
                                                  _T1GATE 000FD1  
                                                  _T1GCON 000FD0  
                                     readRFButtons@serial 0181  
                                                  _IOCBN3 00789B  
                                                  _IOCBP3 0078A3  
                                                  _RC1REG 000F99  
                                           _readRFButtons 59D0  
                                                  _RC1STA 000F9D  
                                                  _RC3PPS 000EFA  
                                 TMR1_WriteTimer@timerVal 0001  
                                                  _RC4PPS 000EFB  
                                                  _ODCONA 000F0F  
                                                  _ODCONB 000F17  
                                                  _ODCONC 000F1F  
                                                  _ODCOND 000F24  
                                                  _ODCONE 000F2C  
                                                  _RC7PPS 000EFE  
                                   __end_of_GetMotorPower 7016  
                                                  i2l1147 8F9E  
                                                  i2l2019 5956  
                                                  i2l2123 78EE  
                                                  i2l2135 7942  
                                                  i2l2128 790C  
                                                  i2l2217 4B86  
                                                  i2l1266 603E  
                                                  i2l2235 70B0  
                                                  i2l2323 7DAE  
                                                  i2l1277 60C8  
                                                  i2l2318 7DA4  
                                                  i2l2190 4AA8  
                                                  i2l1615 4454  
                                                  i2l2186 49C2  
                                                  _INLVLA 000F0D  
                                                  _INLVLB 000F15  
                                                  _INLVLC 000F1D  
                                                  _INLVLD 000F22  
                                                  _INLVLE 000F2A  
                                               ??_Decrypt 001D  
                                  calculateMean@meanValue 0010  
                                                  _OSCFRQ 000EDE  
                         __end_ofi2_VerifyElectricalBrake 7DB2  
                                                  _TMR0IE 007615  
                                                  _TMR0IF 007655  
                                                  _RX1PPS 000EB5  
                            __end_of_refreshADCZeroOffset 6A00  
                                                  _TX1REG 000F9A  
                                                  _TX1STA 000F9E  
                                __end_of_cmdMemoryIsEmpty 7600  
                                       ?_I2C1_MasterClose 0001  
                                                  _DecCHK 8A80  
                                 __end_ofi2_GetMotorPower 70DC  
                                                  _RFFull 008B  
                                rdBlkRegCompleteHandler@p 0019  
                                               ??_ReadADC 0002  
                                 ??_I2C1_MasterDisableIrq 0010  
                                       ?_I2C1_MasterStart 0001  
                    __end_of_sm_execute_menuConfiguration 1886  
                            _sm_execute_menuConfiguration 0F22  
                                       ?_I2C1_MasterWrite 0001  
                                                  _HopCHK 7834  
                                ?_I2C1_MasterWaitForEvent 0001  
                                      ??_I2C1_MasterClose 0010  
                                        _I2C1_DO_TX_EMPTY 81F4  
                                 controlSelectRemote@temp 00E8  
                                  _SumEnergyADCHist_array 0260  
                                      ??_I2C1_MasterStart 0010  
                                      ??_I2C1_MasterWrite 0022  
                                       _decrementTimeslot 8D7C  
                    __end_of_TMR1_DefaultInterruptHandler 92C8  
                            _TMR1_DefaultInterruptHandler 92C6  
                                  __end_of_refreshCurrent 87D4  
                                           ?_read_package 0011  
                                                  ___lmul 846E  
                                         ??_LoadManufCode 0010  
                                                  ___wmul 8E1A  
                                  __end_of_refreshSegment 7944  
                                               ??___awdiv 0018  
                                               ??___lbdiv 0011  
                                               ??___lbmod 0011  
                                               ??___lldiv 0018  
                                      ?_decrementTimeslot 0001  
                                               ??___lwdiv 0014  
                                       ??_i2c_writeNBytes 0027  
                                           _load_New_Menu 3D02  
                             __end_of_keeloqDecryptPacket 5198  
                                ?_EUSART1_SetErrorHandler 0010  
                                                  _memcpy 8818  
                                        ?_TMR0_Initialize 0001  
                                                  clear_0 7152  
                                                  clear_1 715E  
                                                  clear_2 716A  
                                                  clear_3 7176  
                                                  clear_4 7182  
                                        ___awdiv@quotient 001A  
                                       ??_WWDT_TimerClear 0010  
                      __end_of_sm_execute_ControlLearning 1F94  
                              _sm_execute_ControlLearning 1886  
                                                  isa$std 000001  
                        ??_EUSART1_SetOverrunErrorHandler 0012  
                         ?_EUSART1_SetOverrunErrorHandler 0010  
                                       ??_WWDT_SoftEnable 0010  
                                ??_I2C1_DO_SEND_ADR_WRITE 0011  
                          SetSegmentValueIntermitent@time 0011  
                                  setValueToEdit@menuType 00DE  
                                       ?_I2C1_SetCallback 0010  
                                  ??_I2C1_DO_RX_NACK_STOP 0010  
                                           ??_ShowVersion 001E  
                                         _ADCC_Initialize 8610  
                                     ??_decrementTimeslot 0003  
                                             ?_CloseOrder 0001  
                                   _I2C1_DO_SEND_ADR_READ 9170  
                                          _PMD_Initialize 8F70  
                                              _StateTRIAC 0190  
                                           ?_eusartparser 003A  
                           ?_I2C1_SetDataCompleteCallback 0015  
                                      ??_I2C1_SetCallback 0014  
                                            __mediumconst 0000  
                          __end_of_I2C1_Read1ByteRegister 8366  
                                    __end_of_ControlMotor 4998  
                                                  tblptrh 000FF7  
                                                  tblptrl 000FF6  
                                           Decrypt@Buffer 0022  
                                                  tblptru 000FF8  
                                               ??_sumHIST 0014  
                                               ??_sm_init 0017  
                                   SaveNVM_VarSystem@page 00D8  
                              __end_of_actionZone_Closing 4284  
                               ?_ADCC_GetSingleConversion 0001  
                                         ??_EUSART1_Write 0010  
                       __end_of_ControlDecelarationFactor 9042  
                TMR2_SetInterruptHandler@InterruptHandler 0010  
                TMR1_SetInterruptHandler@InterruptHandler 0010  
                TMR0_SetInterruptHandler@InterruptHandler 0010  
                                        ??_ControlCurrent 0023  
                                  setValueToEdit@posindex 00DF  
                                 __end_of_TMR1_WriteTimer 8FA8  
                                         _eusart1RxBuffer 027C  
                                          ?_readRFButtons 0001  
                                        ___lbdiv@dividend 0011  
                                 _I2C1_DO_RX_NACK_RESTART 921E  
                                         _eusart1TxBuffer 0284  
                                     _SetSegmentValueMain 8FC2  
                                        ?_TMR1_Initialize 0001  
                                       _SYSTEM_Initialize 8B14  
                              __end_of_actionZone_Opening 474E  
                          I2C1_SetDataCompleteCallback@cb 0015  
                                         ___lbmod@divisor 0010  
                                              __accesstop 0060  
                                 __end_of__initialization 7188  
                                         ___lbmod@counter 0012  
                                           Decrypt@packet 001B  
                           setValueToEdit@haveValueToEdit 00E0  
                                        ?_sm_execute_main 00ED  
                                          _setValueToEdit 1F94  
                                      getSerialCmd@serial 001B  
                         I2C1_MasterOperation@returnValue 0021  
                                      ?_SYSTEM_Initialize 0001  
                                           ___rparam_used 000001  
                               __end_of_decrementTimeslot 8DA6  
                                           ??_I2C1_Poller 0020  
                                           ?_Segments_Set 0001  
                                          ??_read_package 0018  
                         ??_setPositionInvertionInClosing 00D8  
                           ?_sm_execute_menuConfiguration 00E9  
                           __end_of_EUSART1_RxDataHandler 8F38  
                                 _rdBlkRegCompleteHandler 891E  
                                          __pcstackCOMRAM 0001  
                                         ?_refreshCurrent 0001  
                                   __end_of_getKeyPressed 9072  
                                            __pidataBANK0 92C0  
                                            __pidataBANK1 928E  
                                            __pidataBANK2 92C2  
                                            __pidataBANK3 8E66  
                                     ??_SYSTEM_Initialize 0014  
                        __end_of_I2C1_MasterEnableRestart 92B4  
                                          ?_load_New_Menu 0001  
                               sm_execute_ControlGate@psm 00E7  
                                               ?_TMR0_ISR 0001  
                                         ?_refreshSegment 0001  
                                               ?_TMR1_ISR 0001  
                                               ?_TMR2_ISR 0001  
                           ?_TMR1_DefaultInterruptHandler 0001  
                         ??_setPositionInvertionInOpening 0032  
                                    ?_SetSegmentValueMain 001C  
                                        ?_TMR2_Initialize 0001  
                                        ___lbdiv@quotient 0013  
                                  __end_of_PMD_Initialize 8F8C  
                            ??_I2C1_DO_SEND_RESTART_WRITE 0010  
                                 ??_I2C1_MasterSendTxData 0010  
                                         ??_InitSoftStart 0014  
                                    __end_of_EUSART1_Read 878E  
                                          ??_eusartparser 00DC  
                                  ??_EUSART1_Transmit_ISR 0001  
                                    _getStateOpenPosition 65DC  
                               write_eusartparser@package 0010  
                                           ?_RemoveSerial 003A  
                                    __end_of_InitReceiver 8FC2  
                         actionZone_Closing@typeOpenOrder 0033  
                             __end_of_EUSART1_Receive_ISR 74D6  
                                   __end_of_I2C1_DO_RESET 91FA  
                          keeloqDecryptPacket@commandType 00E9  
                                        sumEnergyADC@sumE 0014  
                        verifyProgramingMode@classic_data 0010  
                                       __end_of_ReqResync 905A  
                             VerifyFollowMe@securityClose 0010  
                               __end_of_SYSTEM_Initialize 8B42  
                                     __end_of_ShowVersion 8192  
                                           _eusart1RxHead 0095  
                                           _eusart1TxHead 0097  
                                           _eusart1RxTail 0094  
                                              __pbssBANK0 0060  
                                              __pbssBANK1 0100  
                                              __pbssBANK2 0200  
                                              __pbssBANK3 0300  
                                  __end_of_setValueToEdit 24A0  
                                           _eusart1TxTail 0096  
                         __end_of_I2C1_MasterWaitForEvent 921E  
                       _EUSART1_TxDefaultInterruptHandler 02ED  
                                            _GetOpenOrder 5198  
                                    __end_of_InitSoftStop 8746  
                         ??_EUSART1_SetRxInterruptHandler 0012  
                          validateRemoteSerialNumber@mask 0035  
                                cmdMemoryIsEmpty@position 002E  
                           __end_of_rd2RegCompleteHandler 8CCE  
                                    I2C1_Open@returnValue 0011  
                                                 ?_DecCHK 0010  
                                           ?_WaitPreFlash 0001  
                                        ?i2_GetMotorPower 0001  
                            __end_of_SetSegmentValueLearn 6AFC  
                                       ?_controlTimeslots 0001  
                           __end_of_wr2RegCompleteHandler 8CA2  
                                           ?_NormalKeyGen 0026  
                                   __end_of_sm_send_event 82AE  
                                   _rd1RegCompleteHandler 8CCE  
                                                 ?_HopCHK 0024  
                                          ??_Segments_Set 0001  
              validateRemoteSerialNumber@VerifyOnlySerial 0032  
                                              _edit_Param 0046  
                                       _I2C1_DO_SEND_STOP 9236  
                                      ??_controlTimeslots 0005  
                                           _button_struct 004C  
                                   _wr1RegCompleteHandler 8CFA  
                         __end_of_EUSART1_SetErrorHandler 91F0  
                                       getHopCode@tempHop 0020  
                                       getHopCode@tempPos 0022  
                        __end_of_TMR0_SetInterruptHandler 91BE  
                                                 ?___lmul 001D  
                                      ?_I2C1_DO_SEND_STOP 0001  
                                                 ?___wmul 0010  
                                              ??_TMR0_ISR 0003  
                                              _getHopCode 6134  
                                              ??_TMR1_ISR 000A  
                                              ??_TMR2_ISR 0005  
                                 __end_of_ADCC_Initialize 8660  
                                         _I2C1_MasterOpen 908A  
                                   ??_SetSegmentValueMain 001D  
                                         _I2C1_MasterStop 92AC  
                                         _I2C1_Initialize 910E  
                                     __end_of_I2C1_Poller 9154  
                                __end_of_setFlashLigth_ON 89DA  
                                                 _ADFLTRH 000F73  
                                                 _ADFLTRL 000F72  
                                                 ?_memcpy 0010  
                                    readRFButtons@keyType 0087  
                                       __end_of_StopOrder 8F54  
                                          ___lmul@product 0025  
                                                 _ADPREVH 000F62  
                                                 _ADPREVL 000F61  
                                write_eusartparser@debug2 0021  
                              __end_of_ResetDefaultMemory 5CF0  
                                                 _ADSTPTH 000F69  
                                                 _ADSTPTL 000F68  
                          _menuConfiguration_stateMachine 02BD  
                                         ?_PMD_Initialize 0001  
                       keeloq_classic_decrypt_packet@data 0038  
                                  ?_I2C1_DO_SEND_ADR_READ 0001  
                                           _erroranterior 0189  
                                     ??_I2C1_DO_SEND_STOP 0010  
                  __end_of_EUSART1_SetFramingErrorHandler 91E6  
                          _EUSART1_SetFramingErrorHandler 91DC  
                                    _refreshADCZeroOffset 6902  
                                ??_sm_execute_ControlGate 00E9  
                                   i2c_readDataBlock@data 0024  
                                   _VerifyElectricalBrake 7CC2  
                                                 i2l14201 4482  
                                                 i2l14113 42BC  
                                                 i2l14105 4296  
                                                 i2l14211 44AA  
                                                 i2l14115 42C4  
                                                 i2l14205 4492  
                                                 i2l14141 434A  
                                                 i2l14125 42F8  
                                                 i2l14109 42A6  
                                                 i2l14135 4324  
                                                 i2l14215 44C2  
                                                 i2l12553 8F34  
                                                 i2l14153 4392  
                                                 i2l14321 4B6A  
                                                 i2l14233 49B8  
                                                 i2l14155 43A2  
                                                 i2l14157 43B2  
                                                 i2l14333 4BA6  
                                                 i2l14309 4B2C  
                                                 i2l14159 43B8  
                                                 i2l14255 4A18  
                                                 i2l14247 49F4  
                                                 i2l14177 4414  
                                                 i2l14169 43EC  
                                                 i2l14265 4A42  
                                                 i2l14249 49FE  
                                                 i2l14345 84D4  
                                                 i2l14195 446C  
                                                 i2l14189 445E  
                                                 i2l13901 702A  
                                                 i2l14277 4A7C  
                                                 i2l14285 4ABA  
                                                 i2l13911 7072  
                                                 i2l13921 70A0  
                                                 i2l14369 7910  
                                                 i2l16305 6060  
                                                 i2l16219 8AD8  
                                                 i2l13931 70D2  
                                                 i2l14379 793E  
                                                 i2l16315 608A  
                                                 i2l13909 7066  
                                                 i2l16325 60AC  
                                                 i2l16239 74D0  
                                                 i2l13951 7D7E  
                                                 i2l16353 6114  
                                                 i2l16281 6002  
                                                 i2l16347 60FC  
                                                 i2l16339 60E0  
                                                 i2l13957 7D9A  
                                                 i2l16289 6016  
                          actionZone_Opened@typeOpenOrder 0021  
                                   ?_getStateOpenPosition 0001  
                                          ??_RemoveSerial 00D8  
                                              _fimdecurso 0175  
                            ?_EUSART1_DefaultErrorHandler 0001  
                                       _I2C1_MasterIsNack 917E  
                                                 _SP1BRGH 000F9C  
                                                 _SP1BRGL 000F9B  
                                              _dispStruct 0072  
                                                 _OSCCON1 000ED8  
                                                 _OSCCON3 000EDA  
                                               _I2C1_Open 79C8  
                               ??_I2C1_DO_RX_NACK_RESTART 0010  
                                                 _RGB_Set 9154  
                                              _auxCounter 00F8  
                                         ??_readRFButtons 003B  
                                                 _OSCTUNE 000EDD  
                                       _I2C1_MasterSetIrq 926A  
                                                 _SSP1ADD 000F93  
                                                 _SLRCONA 000F0E  
                                                 _SLRCONB 000F16  
                                                 _SLRCONC 000F1E  
                                                 _SLRCOND 000F23  
                                                 _SLRCONE 000F2B  
                                                 _WDTCON0 000ED2  
                                                 _SSP1BUF 000F92  
                                                 _WDTCON1 000ED3  
                                      ?_I2C1_MasterIsNack 0001  
                              ?_I2C1_DO_SEND_RESTART_READ 0001  
                          ??_I2C1_SetDataCompleteCallback 0019  
                                        ?_TMR1_WriteTimer 0001  
                                      ?_I2C1_MasterSetIrq 0001  
                            __end_of_generateErrorLearnig 812C  
                                            _classic_data 0292  
                                          load_New_Menu@i 0023  
                                         ?_setValueToEdit 003A  
                                                 _RFcount 007E  
                         ??_keeloq_classic_decrypt_packet 00D8  
                                                 _Decrypt 6DBA  
                                          ??_WaitPreFlash 0018  
                                                 _RFstate 0198  
                                      _i2c1_fsmStateTable 0F01  
                                          ??_NormalKeyGen 0028  
                                     ??_I2C1_MasterIsNack 0010  
  __end_of_rd1RegCompleteHandler@i2c1_master_example$F500 8C76  
          _rd1RegCompleteHandler@i2c1_master_example$F500 8C4A  
  __end_of_rd2RegCompleteHandler@i2c1_master_example$F511 8C4A  
          _rd2RegCompleteHandler@i2c1_master_example$F511 8C1E  
  __end_of_wr2RegCompleteHandler@i2c1_master_example$F523 8D52  
          _wr2RegCompleteHandler@i2c1_master_example$F523 8D26  
  __end_of_wr1RegCompleteHandler@i2c1_master_example$F517 8C1E  
                               __end_of_I2C1_DO_SEND_STOP 923E  
          _wr1RegCompleteHandler@i2c1_master_example$F517 8BF2  
__end_of_rdBlkRegCompleteHandler@i2c1_master_example$F535 891E  
        _rdBlkRegCompleteHandler@i2c1_master_example$F535 88DE  
                               ??_rdBlkRegCompleteHandler 001B  
                          getCurrentComparator@tempOffset 0020  
                                                 _ReadADC 84C4  
                                      I2C1_SetCallback@cb 0010  
                                           _write_package 8B6E  
                                     ??_I2C1_MasterSetIrq 0010  
                                     _controlSelectRemote 32D4  
                              __end_of_clearLearningValue 7C48  
                                                 _NextHop 028E  
                                                 __Hparam 0000  
                              __end_of_write_eusartparser 32D4  
                                                 __Lparam 0000  
                                         _WWDT_Initialize 9196  
                                         ??_load_New_Menu 0020  
                              ??_TMR2_SetInterruptHandler 0012  
                                               _ADC_array 0200  
                                            _getSerialCmd 8660  
                                                 ___awdiv 7944  
                                                 ___lbdiv 89DA  
                                                 ___lbmod 8D52  
                                                 ___lldiv 7A4C  
                                              _readInputs 67FA  
                                         _controlVelocity 4BBA  
                                                 ___lwdiv 856E  
                                           _OpenFullOrder 8DF4  
                                            __psmallconst 0F00  
                                     RemoveSerial@cmdType 00DA  
                   __end_of_setPositionInvertionInClosing 64B8  
                           _setPositionInvertionInClosing 6390  
                          ??_sm_execute_menuConfiguration 00EB  
                                     _EUSART1_is_rx_ready 9134  
                                          getHopCode@data 0016  
                                                 _difTime 018F  
                                                 __pcinit 70DC  
                                           ?_I2C1_DO_IDLE 0001  
                                           ?_I2C1_DO_RCEN 0001  
                                                 __ramtop 0F00  
                                  i2c_writeNBytes@address 0039  
                                   __end_of_getTypeRemote 9264  
                                                 __ptext0 5CF0  
                                                 __ptext1 24A0  
                                                 __ptext2 0F22  
                                                 __ptext3 1F94  
                                                 __ptext4 3D02  
                                                 __ptext5 8FA8  
                                                 __ptext6 32D4  
                                                 __ptext7 7E9C  
                                                 __ptext8 925E  
                                                 __ptext9 8660  
                                   ?_refreshADCZeroOffset 0001  
                                              _memoryTEMP 02A2  
                                      i2c_readDataBlock@d 002A  
                                _I2C1_MasterEnableRestart 92B0  
                          ??_TMR1_DefaultInterruptHandler 0001  
                               __end_of_I2C1_MasterIsNack 918A  
                            ?_I2C1_SetAddressNackCallback 0015  
                                               _T1CONbits 000FCF  
                   __end_of_setPositionInvertionInOpening 6DBA  
                           _setPositionInvertionInOpening 6CDE  
                                                 _lastKey 0194  
                                              _readbutton 8058  
                                   _OSCILLATOR_Initialize 90BA  
                                   OpenWalkOrder@diffTime 001A  
                                             _ShowVersion 812C  
                                    ?_controlSelectRemote 0001  
                             ?_validateRemoteSerialNumber 002E  
                                        _InitFullAutoTime 8FDC  
                               __end_of_I2C1_MasterSetIrq 9270  
                             checkNVM_VarSystem@saveParam 003A  
                                                 _menu_st 0151  
                                __end_of_I2C1_DO_TX_EMPTY 8252  
                                  RemoveSerial@tempSerial 00DB  
                                       __end_of_setRGB_ON 7690  
                                      _EUSART1_Initialize 7B4E  
                                ??_PIN_MANAGER_Initialize 0010  
                               ?_TMR1_SetInterruptHandler 0010  
                                              ?_I2C1_Open 0001  
                                                 _sumHIST 6AFC  
                                                 _sm_init 8418  
                                          _BufferRF_12BIT 0187  
                                             sumHIST@sumH 001C  
                                    __end_of_read_package 8610  
                                                 _var_sys 0100  
                           ??_EUSART1_DefaultErrorHandler 0001  
                             ??_ControlDecelarationFactor 0010  
                                ?_I2C1_CallbackReturnStop 0019  
                                           _OpenWalkOrder 7F7C  
                                    _zeroCrossingWaitTime 02EF  
                                       SetSegmentValue@d1 001D  
                                       SetSegmentValue@d2 001C  
                       __end_of_I2C1_DO_SEND_RESTART_READ 9256  
                                    end_of_initialization 7188  
                              __end_of_I2C1_MasterSendAck 9276  
                                    ?_EUSART1_is_rx_ready 0001  
                                     _I2C1_MasterClearIrq 927C  
                                     ?_EUSART1_Initialize 0001  
                                               _PCON0bits 000FD7  
                                                 memcpy@d 0017  
                                                 memcpy@n 0014  
                                                 memcpy@s 0019  
                              __end_of_I2C1_MasterStartRx 92A4  
                             _EUSART1_OverrunErrorHandler 02E7  
                                  ?_rd1RegCompleteHandler 0019  
                                         _i2c_writeNBytes 7E28  
                              ?_GetSecurityStateInClosing 0001  
                                  _I2C1_DO_SEND_ADR_WRITE 9162  
                                       ?_cmdMemoryIsEmpty 002E  
                                          ?_write_package 0011  
                                           _calculateMean 8192  
                            __end_of_sm_get_current_state 9134  
                                               i2u1305_40 8D96  
                                               i2u1402_40 4338  
                                               i2u1404_40 4362  
                                               i2u1420_40 49B2  
                                               i2u1405_40 4372  
                                               i2u1406_40 4382  
                                               i2u1415_40 4480  
                                               i2u1440_40 4AEE  
                                               i2u1432_40 4A70  
                                               i2u1433_40 4A76  
                                               i2u1443_40 4B0C  
                                               i2u1427_40 4A12  
                                               i2u1452_40 4B76  
                                               i2u1460_45 84EC  
                                               i2u1381_40 70AC  
                                               i2u1453_40 4B7E  
                                               i2u1445_40 4B22  
                                               i2u2172_48 003E  
                                               i2u1382_40 70C0  
                                               i2u1390_40 7D94  
                                               i2u1462_40 78CE  
                                               i2u1383_40 70CE  
                                               i2u1455_40 4B9E  
                                               i2u1439_40 4AE0  
                            __end_of_I2C1_DO_SEND_RESTART 9246  
                                               i2u1376_40 7044  
                                               i2u1464_40 7920  
                                               i2u2175_48 0056  
                                               i2u1449_40 4B52  
                                               i2u1378_40 7080  
                                               i2u1386_40 7D5E  
                                               i2u1379_40 708E  
                                    __end_of_eusartparser 6F50  
                                               i2u1468_40 594A  
                                         _WWDT_TimerClear 8F54  
                                               i2u1397_40 42BC  
                                               i2u1469_40 59BE  
                                 __end_of_I2C1_MasterOpen 90A2  
                                  ?_wr1RegCompleteHandler 0019  
                                               i2u1830_48 74BC  
                                               i2u1832_48 8E54  
                                   __end_of_ControlLights 3D02  
                                               i2u1826_48 7466  
                                               i2u1826_49 7478  
                                               i2u1828_48 7492  
                                               i2u1836_48 898C  
                                               i2u1860_48 6122  
                                               i2u1845_40 6052  
                                               i2u1828_49 74A4  
                                 __end_of_I2C1_MasterStop 92B0  
                                               i2u1848_40 6076  
                                 __end_of_I2C1_Initialize 9122  
                                         ___lldiv@divisor 0014  
                                   __end_of_ControlInputs 65DC  
                   __end_of_EUSART1_SetRxInterruptHandler 91D2  
                           _EUSART1_SetRxInterruptHandler 91C8  
                                               i2u2891_47 90DA  
                                             _I2C1_Poller 9144  
                        ??_SetSegmentValueIntermitentMain 001F  
                         ?_SetSegmentValueIntermitentMain 001C  
                                         _WWDT_SoftEnable 9294  
                                         ___lldiv@counter 001C  
                                      ??_cmdMemoryIsEmpty 002F  
                               ?_I2C1_CallbackReturnReset 0019  
                           __end_of_I2C1_MasterDisableIrq 92BC  
                                             _I2C1_Status 023C  
                              ?_GetSecurityStateInOpening 0001  
                                            _ControlMotor 474E  
                                  SaveNVM_VarSystem@point 00DB  
                                                 postdec1 000FE5  
                                                 postdec2 000FDD  
                                                 postinc0 000FEE  
                                                 postinc1 000FE6  
                                                 postinc2 000FDE  
                                             ?_getHopCode 0016  
                                          ?_OpenFullOrder 0001  
                        SetSegmentValueIntermitentMain@d1 001F  
                        SetSegmentValueIntermitentMain@d2 001C  
                                     _I2C1_MasterSendNack 9276  
                                           HopCHK@hopDiff 0026  
                     __end_of_I2C1_SetAddressNackCallback 908A  
                             _I2C1_SetAddressNackCallback 9072  
                                        ?_ADCC_Initialize 0001  
                                     _getTimeDecelaration 6BF6  
                                              _sm_restart 87D4  
                        __end_of_ADCC_GetSingleConversion 90E6  
                                    ?_I2C1_MasterClearIrq 0001  
                                          ??_I2C1_DO_IDLE 0010  
                                    ??_EUSART1_Initialize 0012  
                                        NormalKeyGen@SEED 02D9  
                                          ??_I2C1_DO_RCEN 0010  
                      __end_of_I2C1_DO_SEND_RESTART_WRITE 924E  
                              _I2C1_DO_SEND_RESTART_WRITE 9246  
                       actionZone_Closing@securityClosing 0032  
                             ?_sm_execute_ControlLearning 00DC  
                                _TMR0_SetInterruptHandler 91B4  
                                               _PORTAbits 000F8D  
                                               _PORTBbits 000F8E  
                                  ?_VerifyElectricalBrake 0001  
                                               _PORTEbits 000F91  
                         __end_of_rdBlkRegCompleteHandler 895E  
                                  ??_getStateOpenPosition 0032  
                                            ??_CloseOrder 0018  
                                   ??_controlSelectRemote 00E0  
                                    _SetSegmentValueLearn 6A00  
                           ??_I2C1_SetAddressNackCallback 0019  
                               I2C1_Read1ByteRegister@reg 0022  
                                        ___lbmod@dividend 0011  
                                    __end_of_Segments_Set 9196  
                                     _ControlCounterMoves 8366  
                            _controlLearning_stateMachine 02B2  
                         I2C1_SetDataCompleteCallback@ptr 0017  
                                          ?_OpenWalkOrder 0001  
                                              _stateMotor 0083  
                                           ?_sumEnergyADC 0010  
                          I2C1_CallbackReturnReset@funPtr 0019  
                       actionZone_Opening@securityClosing 00E4  
                                    ?_I2C1_MasterSendNack 0001  
                         keeloqDecryptPacket@classic_data 00E2  
                                     EUSART1_Write@txData 0010  
                                       ??_ClearFlag_rfCMD 0010  
                                    ?_getTimeDecelaration 0029  
                                   ??_EUSART1_is_rx_ready 0010  
                                       _saveEnergyADCHist 8DA6  
                                 __end_of_WWDT_Initialize 91A0  
                                             ___lbmod@rem 0013  
                       actionZone_Opening@securityOpening 00E5  
                                          ?_calculateMean 0010  
                                        ??_refreshCurrent 0021  
                                       ??_SetSegmentValue 001D  
                                            _EUSART1_Read 8746  
                                      ?_saveEnergyADCHist 0010  
                       __end_of_GetSecurityStateInClosing 7396  
                                        ??_refreshSegment 0002  
                                          __end_of_DecCHK 8AB2  
                                       _controlLearnDigit 8AE4  
                                 __end_of_controlVelocity 4DD8  
                                    ?_ControlCounterMoves 0001  
                                     setValueToEdit@value 01F8  
                                      _actionZone_Closing 3FF8  
                                    __end_of_RemoveSerial 7B4E  
                                          __end_of_HopCHK 78BE  
                                      __end_of_CloseOrder 8DF4  
                                 _zeroCrossingWaitTimeIdx 0084  
                                            _InitReceiver 8FA8  
                               _ControlDecelarationFactor 902A  
                                      ?_controlLearnDigit 0001  
                                    _timer0ReloadVal16bit 0290  
                       __end_of_GetSecurityStateInOpening 743C  
                                       setRGB_ON@RGBLigth 0015  
                                     ??_saveEnergyADCHist 0012  
                            __end_of_INTERRUPT_Initialize 929C  
                                      _actionZone_Opening 44FA  
                                   ??_I2C1_MasterClearIrq 0010  
                    __end_of_TMR2_DefaultInterruptHandler 92C6  
                            _TMR2_DefaultInterruptHandler 92C4  
                                             ?_readInputs 0001  
                                               _DispTable 03D2  
                                          __end_of___lmul 84C4  
                                   __end_of_LoadManufCode 8ED2  
                                     ?_actionZone_Closing 0001  
                                          __end_of___wmul 8E40  
                                          _I2C1_DO_RX_ACK 922E  
                                  ??_refreshADCZeroOffset 0017  
                                    _generateErrorLearnig 80C4  
                                            _InitSoftStop 86FC  
                                     ??_controlLearnDigit 0013  
                                 i2_VerifyElectricalBrake 7D3A  
                                          __end_of_memcpy 885C  
                                  ?_OSCILLATOR_Initialize 0001  
                                    __end_of_WaitPreFlash 7F7C  
                            __end_of_getCurrentComparator 5836  
                                      sm_send_event@event 0014  
                                    __end_of_NormalKeyGen 67FA  
                                           _saveNewSerial 7E9C  
                                             ?_readbutton 0001  
                                     ?_actionZone_Opening 0001  
                                   ?_SetSegmentValueLearn 0001  
                         __end_of_I2C1_CallbackReturnStop 92AC  
                          ?_setPositionInvertionInClosing 0001  
                           __end_of_I2C1_MasterSendTxData 925E  
                                       _read_eusartparser 29A8  
                                   refreshADCZeroOffset@i 0017  
                                     start_initialization 70DC  
                             i2GetMotorPower@defineatraso 0004  
                                             ??_I2C1_Open 0010  
                                          ??_sumEnergyADC 0012  
                                      ?_read_eusartparser 0018  
                                             __end_of_rxi 44FA  
                                   ??_I2C1_MasterSendNack 0010  
                                 __end_of_i2c_writeNBytes 7E9C  
                          ?_setPositionInvertionInOpening 0001  
                                   ??_getTimeDecelaration 002D  
           EUSART1_SetRxInterruptHandler@interruptHandler 0010  
           EUSART1_SetTxInterruptHandler@interruptHandler 0010  
                               __end_of_saveEnergyADCHist 8DCE  
                                 __end_of_WWDT_TimerClear 8F70  
                                    ??_actionZone_Closing 0032  
                                   __end_of_EUSART1_Write 88DE  
                                 __end_of_WWDT_SoftEnable 9298  
                                         ??_write_package 0018  
                                  rd1RegCompleteHandler@p 0019  
                            __end_of_verifyProgramingMode 8A80  
                                               _ReqResync 9042  
                               __end_of_controlLearnDigit 8B14  
                                     ??_read_eusartparser 0019  
                                                ??_DecCHK 0012  
                                       _programmer_enable 0085  
                                    ??_actionZone_Opening 003B  
                                  _sm_execute_ControlGate 3694  
                 sm_execute_ControlLearning@typeOpenOrder 003A  
                                                ??_HopCHK 0026  
                               refreshADCZeroOffset@media 0018  
                                I2C1_SetBuffer@bufferSize 0012  
                                   ??_ControlCounterMoves 003A  
                                       _controlSaveRemote 7192  
                                        ?_I2C1_MasterOpen 0001  
                            keeloqDecryptPacket@hop_error 00E8  
                                        ?_I2C1_MasterStop 0001  
                                        ?_I2C1_Initialize 0001  
                                 saveNewSerial@tempSerial 00D8  
                                  controlSelectRemote@pos 00E2  
                                         ??_OpenFullOrder 0018  
                                   calculateMean@newValue 0014  
                                      ?_controlSaveRemote 0001  
                                 sm_get_current_state@psm 0010  
                                        ??_PMD_Initialize 0010  
                                                ??___lmul 0025  
                                  __end_of_I2C1_DO_RX_ACK 9236  
                                                ??___wmul 0014  
                                      _zeroCrossingLength 0193  
                                          _VerifyFollowMe 8E8C  
                                  wr1RegCompleteHandler@p 0019  
                                   _EUSART1_RxDataHandler 8F16  
                                 ??_I2C1_DO_SEND_ADR_READ 0010  
                          ?_EUSART1_SetRxInterruptHandler 0010  
                                             ?_sm_restart 0010  
                                             __pdataBANK0 00F8  
                                             __pdataBANK1 01F9  
                                             __pdataBANK2 02EF  
                                             __pdataBANK3 03D2  
                                   ?_generateErrorLearnig 0001  
                                                ??_memcpy 0016  
                                       ?_setFlashLigth_ON 0010  
                           ?_TMR2_DefaultInterruptHandler 0001  
                                       _controlMotorForce 4998  
                                     ??_controlSaveRemote 0020  
                               __end_of_read_eusartparser 2EB0  
                                          ?_saveNewSerial 00D8  
                                        I2C1_Open@address 0010  
                                          _eusart1RxCount 0093  
                                      ??_setFlashLigth_ON 0012  
                                _ADCC_GetSingleConversion 90D0  
                                      ?_controlMotorForce 0001  
                                   __end_of_InitSoftStart 830A  
                                               _StopOrder 8F38  
                                    _sm_get_current_state 9122  
                                             __pbssCOMRAM 003B  
                                         ??_OpenWalkOrder 0018  
                                    _I2C1_DO_SEND_RESTART 923E  
                                getTimeDecelaration@state 0031  
                       _EUSART1_RxDefaultInterruptHandler 02EB  
                                           __pcstackBANK0 00D8  
                                        ??_setValueToEdit 00DC  
                                                ?_RGB_Set 0001  
                                        _brakeElectric_st 0078  
                             ??_I2C1_DO_SEND_RESTART_READ 0010  
                                     ??_controlMotorForce 0005  
                                      _ResetDefaultMemory 5B66  
                                         ??_calculateMean 0018  
                         ??_EUSART1_SetTxInterruptHandler 0012  
                                    __end_of_I2C1_DO_IDLE 920E  
                        ??_EUSART1_SetFramingErrorHandler 0012  
                         ?_EUSART1_SetFramingErrorHandler 0010  
                                                ?_Decrypt 001B  
                                    __end_of_I2C1_DO_RCEN 9204  
                                           _GetMotorPower 6F50  
                                        ?_WWDT_Initialize 0001  
                                              ?_ReqResync 0010  
                               __end_of_controlSaveRemote 7246  
                           I2C1_SetAddressNackCallback@cb 0015  
                                      sm_execute_main@psm 00ED  
                                                ?_ReadADC 0001  
                                            RGB_Set@value 0010  
                                   _TMR0_InterruptHandler 02E3  
                                     ?_ResetDefaultMemory 0001  
                                               __pnvBANK1 01FE  
                                               __pnvBANK2 02DD  
                                   _rd2RegCompleteHandler 8CA2  
                                        _InitWalkAutoTime 90E6  
                                        ?_controlVelocity 0001  
                                __end_of_InitFullAutoTime 8FF6  
                             __end_of_SetSegmentValueMain 8FDC  
                          VerifyElectricalBrake@tempState 0010  
                        i2VerifyElectricalBrake@tempState 0001  
                                        ___lwdiv@dividend 0010  
                                  _PIN_MANAGER_Initialize 74D6  
                                  __end_of_VerifyFollowMe 8EB0  
                                   _wr2RegCompleteHandler 8C76  
                              ??_I2C1_MasterEnableRestart 0010  
                                               __pintcode 0008  
                                            _read_package 85C0  
                                          _I2C1_MasterFsm 851A  
                              __end_of_checkNVM_VarSystem 5500  
                        __end_of_TMR1_SetInterruptHandler 91B4  
                         ADCC_GetSingleConversion@channel 0001  
                                         ?_I2C1_DO_RX_ACK 0001  
                                                ?___awdiv 0014  
                                               __ptext100 910E  
                                               __ptext101 7B4E  
                                                ?___lbdiv 0010  
                                               __ptext110 7CC2  
                                               __ptext102 91BE  
                                               __ptext111 39DE  
                                               __ptext103 91C8  
                                               __ptext200 92C8  
                                               __ptext120 8DA6  
                                               __ptext112 7600  
                                               __ptext104 91D2  
                                               __ptext201 8AB2  
                                               __ptext121 6902  
                                               __ptext113 9154  
                                               __ptext105 91DC  
                                               __ptext202 743C  
                                               __ptext130 9072  
                                               __ptext122 856E  
                                               __ptext114 899E  
                                               __ptext106 91E6  
                                               __ptext203 9282  
                                               __ptext131 79C8  
                                               __ptext123 569C  
                                               __ptext115 64B8  
                                               __ptext107 8610  
                                               __ptext204 92CA  
                                               __ptext140 921E  
                                               __ptext132 908A  
                                               __ptext124 8E1A  
                                               __ptext116 5E72  
                                               __ptext108 9134  
                                               __ptext205 9288  
                                               __ptext141 9226  
                                               __ptext133 920E  
                                               __ptext125 6F50  
                                               __ptext117 878E  
                                               __ptext109 474E  
                                               __ptext206 8F16  
                                               __ptext150 9162  
                                               __ptext142 922E  
                                               __ptext134 8BC6  
                                               __ptext126 8366  
                                               __ptext118 6AFC  
                                               __ptext207 0000  
                                               __ptext151 9170  
                                               __ptext143 9236  
                                               __ptext135 9144  
                                               __ptext127 8A14  
                                               __ptext119 771C  
                                               __ptext160 92A0  
                                               __ptext152 9204  
                                               __ptext144 923E  
                                               __ptext136 9216  
                                               __ptext128 7E28  
                                               __ptext161 92A4  
                                               __ptext153 81F4  
                                               __ptext145 9246  
                                               __ptext137 851A  
                                               __ptext129 8818  
                                               __ptext170 8CCE  
                                               __ptext162 92A8  
                                               __ptext154 926A  
                                               __ptext146 924E  
                                               __ptext138 86AE  
                                               __ptext171 8CFA  
                                               __ptext163 88DE  
                                               __ptext155 917E  
                                               __ptext147 91FA  
                                               __ptext139 91F0  
                                               __ptext180 92B8  
                                               __ptext172 8D26  
                                               __ptext164 8BF2  
                                               __ptext156 9256  
                                               __ptext148 7C48  
                                               __ptext181 92BC  
                                               __ptext173 90A2  
                                               __ptext165 8C1E  
                                               __ptext157 9270  
                                               __ptext149 77A8  
                                               __ptext190 84C4  
                                               __ptext182 927C  
                                               __ptext174 7FEA  
                                               __ptext166 8C4A  
                                               __ptext158 929C  
                                               __ptext191 90D0  
                                               __ptext175 9010  
                                               __ptext167 891E  
                                               __ptext159 9276  
                                               __ptext192 895E  
                                               __ptext184 5FE6  
                                               __ptext176 92AC  
                                               __ptext168 8C76  
                                               __ptext193 4998  
                                               __ptext185 78BE  
                                               __ptext177 92B0  
                                               __ptext169 8CA2  
                                               __ptext194 7D3A  
                                               __ptext186 918A  
                                               __ptext178 92B4  
                                               __ptext195 7016  
                                               __ptext187 5836  
                                               __ptext179 8EF4  
                                               __ptext196 8F8C  
                                               __ptext188 8D7C  
                                               __ptext197 92C6  
                                               __ptext189 92C4  
                                               __ptext198 8E40  
                                               __ptext199 4284  
                                                ?___lbmod 0010  
                                 write_eusartparser@debug 001F  
                            ??_SetSegmentValueIntermitent 0013  
                                                ?___lldiv 0010  
                               ??i2_VerifyElectricalBrake 0001  
                               __end_of_controlMotorForce 4BBA  
                                                ?___lwdiv 0010  
                                    i2c_readDataBlock@len 0026  
                                    i2c_readDataBlock@reg 0022  
                                 _I2C1_MasterWaitForEvent 9216  
                                        _I2C1_MasterClose 92BC  
                         DecryptPacket_12BIT@classic_data 00E2  
                                ??_I2C1_Read1ByteRegister 0023  
                                          _I2C1_SetBuffer 9010  
                            ??_INTERRUPT_InterruptManager 000A  
                                  ??_SetSegmentValueLearn 0010  
                                        _I2C1_MasterStart 92B4  
                                    NormalKeyGen@SKEYtemp 002C  
                                        _I2C1_MasterWrite 920E  
                                      _clearLearningValue 7BCC  
                                      _write_eusartparser 2EB0  
                                    ??_ResetDefaultMemory 003A  
                                                _BAUD1CON 000F9F  
                                             __smallconst 0F00  
                                   ?_sm_get_current_state 0010  
                                            ?_ShowVersion 0001  
                                                _F2Chance 0195  
                                              ?_StopOrder 0001  
              __end_of_EUSART1_DefaultOverrunErrorHandler 9288  
                    ??_EUSART1_DefaultOverrunErrorHandler 0001  
                     ?_EUSART1_DefaultOverrunErrorHandler 0001  
                      _EUSART1_DefaultOverrunErrorHandler 9282  
                                   ?_I2C1_DO_SEND_RESTART 0001  
                                       _i2c_readDataBlock 7DB2  
                                            _eusartparser 6E86  
                                    _EUSART1_ErrorHandler 02E5  
                                       ?_I2C1_DO_TX_EMPTY 0001  
                                                ?_sumHIST 0010  
                                                ?_sm_init 0012  
                                 _EUSART1_SetErrorHandler 91E6  
                                      ?_i2c_readDataBlock 0022  
                                     ReqResync@CurrentHop 0010  
                        __end_of_I2C1_CallbackReturnReset 92A8  
                                     ?_clearLearningValue 0001  
                                        ___lwdiv@quotient 0014  
                                     ?_write_eusartparser 0010  
                                        ?_i2c_writeNBytes 0022  
                                      ??_I2C1_DO_TX_EMPTY 001B  
                                                _T2CLKCON 000FBF  
                                   __end_of_readRFButtons 5B66  
                                 ??_rd1RegCompleteHandler 001B  
                                 ?_I2C1_DO_SEND_ADR_WRITE 0001  
                                               _setRGB_ON 7600  
                               I2C1_MasterSendTxData@data 0010  
                                        ?_WWDT_TimerClear 0001  
                                    _INTERRUPT_Initialize 9298  
                                          ?_GetMotorPower 0001  
                                 ??_wr1RegCompleteHandler 001B  
                                        ?_WWDT_SoftEnable 0001  
                                              sumHIST@max 0018  
                                              sumHIST@min 001A  
                                       ??_TMR0_Initialize 0012  
                                     ??_i2c_readDataBlock 0028  
                                        _I2C1_SetCallback 7FEA  
                                              sm_init@psm 0012  
                                          ___wmul@product 0014  
                                                _LATAbits 000F83  
                 EUSART1_SetErrorHandler@interruptHandler 0010  
                                                _LATCbits 000F85  
                                read_eusartparser@package 0018  
                                                _LATDbits 000F86  
                                                _LATEbits 000F87  
                                              _I2C1_DO_RX 7C48  
                                              _I2C1_DO_TX 77A8  
                             ??_GetSecurityStateInClosing 0014  
                                                _PIE0bits 000EC2  
                                    _getCurrentComparator 569C  
                                                _PIE3bits 000EC5  
                                                _PIE4bits 000EC6  
                                              DecCHK@data 0010  
                                                Decrypt@i 001E  
                                                Decrypt@j 001F  
                                                Decrypt@p 0020  
                                         _firstselectflag 01FD  
                                     _DecryptPacket_12BIT 7690  
                                              _I2C1_Close 8EF4  
                         setValueToEdit@ParameterSelected 003A  
                                            ?_I2C1_Poller 0001  
                                  __end_of_I2C1_MasterFsm 856E  
                            __end_of_I2C1_MasterGetRxData 92A0  
                              ??_TMR0_SetInterruptHandler 0012  
                                                _PIR0bits 000ECA  
                                            _Segments_Set 918A  
                                                _PIR3bits 000ECD  
                                         ?_VerifyFollowMe 0001  
                                                _PIR4bits 000ECE  
                                readRFButtons@rollingCode 0185  
                             ??_GetSecurityStateInOpening 0014  
                                  ?_EUSART1_RxDataHandler 0001  
                                    ??_clearLearningValue 0010  
                                      _I2C1_MasterSendAck 9270  
                                    ??_write_eusartparser 0017  
                                    __end_of_sumEnergyADC 77A8  
                               _I2C1_DO_SEND_RESTART_READ 924E  
                                            ??_getHopCode 0018  
                                               _pointSync 007A  
                                   __end_of_load_New_Menu 3FF8  
                                                _SSP1CON1 000F96  
                                                _SSP1CON2 000F97  
                                  ??_generateErrorLearnig 0017  
                                                _TMR0_ISR 8E40  
                                                _TMR1_ISR 895E  
                                                _TMR2_ISR 5FE6  
                                           _getKeyPressed 905A  
                                 ??_VerifyElectricalBrake 0010  
                                  __end_of_I2C1_SetBuffer 902A  
                                               _temppower 018E  
                                         _powerControl_st 017B  
                                                _SSP1STAT 000F95  
                    __end_of_I2C1_SetDataCompleteCallback 90BA  
                            _I2C1_SetDataCompleteCallback 90A2  
                                      _I2C1_MasterStartRx 92A0  
                                         ??_saveNewSerial 00DD  
                             ?_I2C1_DO_SEND_RESTART_WRITE 0001  
                                       ??_TMR1_Initialize 0012  
                                         _ClearFlag_rfCMD 9264  
                                     ?_I2C1_MasterSendAck 0001  
                                              _ADCON0bits 000F60  
                               __end_of_i2c_readDataBlock 7E28  
                                       ___wmul@multiplier 0010  
                                ?_I2C1_DO_RX_NACK_RESTART 0001  
                                    _verifyProgramingMode 8A4C  
                                       ??_sm_execute_main 00EF  
                                    _numberOfErrorCurrent 008E  
                                    ?_DecryptPacket_12BIT 00E0  
                                               _ts_system 019A  
                                                _BitCount 008C  
                                     ?_I2C1_MasterStartRx 0001  
                            __end_of_I2C1_DO_ADDRESS_NACK 86FC  
                          controlSelectRemote@validSerial 00E1  
                          ??_TMR2_DefaultInterruptHandler 0001  
                                       _actionZone_Closed 7246  
                               ?_TMR2_SetInterruptHandler 0010  
                                    _idxAdcZeroAquisition 008F  
                                         _SetSegmentValue 8FF6  
                                            _RemoveSerial 7ACE  
                          getStateOpenPosition@stateMotor 00D9  
                          __end_of_I2C1_DO_SEND_ADR_WRITE 9170  
                                       _actionZone_Opened 4DD8  
                                           _I2C1_DO_RESET 91F0  
                                      ?_actionZone_Closed 0001  
                                                _BufferRF 02C8  
                                     read_package@package 0018  
                                       ___lmul@multiplier 001D  
                                               copy_data0 70F0  
                                               copy_data1 7128  
                                   ?_INTERRUPT_Initialize 0001  
                                              ?_setRGB_ON 0011  
                                   I2C1_Close@returnValue 0010  
                                ?_rdBlkRegCompleteHandler 0019  
                                      ?_actionZone_Opened 0001  
                                        _Abertura_pedonal 018D  
                                     I2C1_SetCallback@idx 0014  
                                     I2C1_SetCallback@ptr 0012  
                                      __end_of_getHopCode 6262  
                                             ??_ReqResync 0012  
                                    ??_I2C1_MasterSendAck 0010  
                                       ??_TMR2_Initialize 0012  
                                   EUSART1_Read@readValue 0010  
                                  ?_rd2RegCompleteHandler 0019  
                                     ??_actionZone_Closed 0020  
                                            _WaitPreFlash 7F0C  
                                   ?_getCurrentComparator 0016  
                            __end_of_I2C1_MasterOperation 8BF2  
                                            _NormalKeyGen 66EC  
                     sm_execute_ControlGate@typeOpenOrder 00EB  
                                  ?_wr2RegCompleteHandler 0019  
                                    ??_I2C1_MasterStartRx 0010  
                                     ??_actionZone_Opened 0020  
                            saveEnergyADCHist@valueToSave 0010  
                   __end_of_EUSART1_SetTxInterruptHandler 91C8  
                           _EUSART1_SetTxInterruptHandler 91BE  
                                           _sm_send_event 8252  
                                     _keeloqDecryptPacket 4FC6  
                                                __Hrparam 0000  
                                         ?_I2C1_MasterFsm 0001  
                                               memcpy@tmp 0016  
                                                __Lrparam 0000  
                                    sumEnergyADC@auxValue 0016  
                                     i2c_writeNBytes@data 0024  
                         actionZone_Opening@typeOpenOrder 00E6  
                                          ?_getKeyPressed 0001  
                               ??_I2C1_MasterWaitForEvent 0010  
                                       _main_stateMachine 01ED  
                                   _I2C1_MasterDisableIrq 92B8  
                                            ??_readInputs 0010  
                                 ??_OSCILLATOR_Initialize 0010  
                             __end_of_controlSelectRemote 3694  
                                         ?_I2C1_SetBuffer 0010  
                                          _fullmotorPower 0082  
                                  ResetDefaultMemory@type 003A  
                                        _controlTimeslots 5836  
                                _TMR1_SetInterruptHandler 91AA  
                                  ??_sm_get_current_state 0012  
                                   ?_verifyProgramingMode 0010  
                               _GetSecurityStateInClosing 72F0  
                       I2C1_Read1ByteRegister@returnValue 0024  
                                  ??_I2C1_DO_SEND_RESTART 0010  
                                            ??_readbutton 0010  
                               __end_of_actionZone_Closed 72F0  
                                   ??_DecryptPacket_12BIT 003B  
                                   _TMR1_InterruptHandler 02DF  
                               ??_EUSART1_SetErrorHandler 0012  
                                       ??i2_GetMotorPower 0001  
                     __end_of_EUSART1_DefaultErrorHandler 928E  
                             _EUSART1_DefaultErrorHandler 9288  
                                             ??_StopOrder 0018  
                             __end_of_EUSART1_is_rx_ready 9144  
                                    ?_keeloqDecryptPacket 00E0  
                               __end_of_actionZone_Opened 4FC6  
                               getStateOpenPosition@state 00D8  
                               _GetSecurityStateInOpening 7396  
                                         ___lwdiv@divisor 0012  
                                          ?_I2C1_DO_RESET 0001  
                                         ___lwdiv@counter 0016  
                                                __ptext10 756E  
                                                __ptext11 7ACE  
                                                __ptext20 3694  
                                                __ptext12 7192  
                                                __ptext21 1886  
                                                __ptext13 8D52  
                                                __ptext30 65DC  
                                                __ptext22 80C4  
                                                __ptext14 7944  
                                                __ptext31 86FC  
                                                __ptext23 8418  
                                                __ptext15 8FC2  
                                                __ptext40 8F38  
                                                __ptext32 902A  
                                                __ptext24 87D4  
                                                __ptext16 9264  
                                                __ptext41 72F0  
                                                __ptext33 4DD8  
                                                __ptext25 7BCC  
                                                __ptext17 8AE4  
                                                __ptext50 90E6  
                                                __ptext42 7246  
                                                __ptext34 8E8C  
                                                __ptext26 8192  
                                                __ptext18 6A00  
                                                __ptext51 7396  
                                                __ptext43 7F0C  
                                                __ptext35 8DCE  
                                                __ptext27 44FA  
                                                __ptext19 7A4C  
                                                __ptext60 4FC6  
                                                __ptext52 8B42  
                                                __ptext44 8DF4  
                                                __ptext36 3FF8  
                                                __ptext28 6CDE  
                                                __ptext61 8A4C  
                                                __ptext53 5198  
                                                __ptext45 8FDC  
                                                __ptext37 6390  
                                                __ptext29 4BBA  
                                                __ptext70 7690  
                                                __ptext62 83C0  
                                                __ptext54 89DA  
                                                __ptext46 7F7C  
                                                __ptext38 6BF6  
                                                __ptext71 5500  
                                                __ptext63 66EC  
                                                __ptext55 90FA  
                                                __ptext47 8252  
                                                __ptext39 846E  
                                                __ptext80 2EB0  
                                                __ptext72 67FA  
                                                __ptext64 8EB0  
                                                __ptext56 8058  
                                                __ptext48 9122  
                                                __ptext81 29A8  
                                                __ptext73 6262  
                                                __ptext65 6DBA  
                                                __ptext57 85C0  
                                                __ptext49 82AE  
                                                __ptext90 8B9A  
                                                __ptext82 8B6E  
                                                __ptext74 7DB2  
                                                __ptext66 7834  
                                                __ptext58 8746  
                                                __ptext91 91A0  
                                                __ptext83 889E  
                                                __ptext75 5360  
                                                __ptext67 6134  
                                                __ptext59 59D0  
                                                __ptext92 885C  
                                                __ptext84 8F54  
                                                __ptext76 5B66  
                                                __ptext68 9042  
                                                __ptext93 91AA  
                                                __ptext85 9294  
                                                __ptext77 830A  
                                                __ptext69 8A80  
                                                __ptext94 8ED2  
                                                __ptext86 812C  
                                                __ptext78 905A  
                                                __ptext95 91B4  
                                                __ptext87 8FF6  
                                                __ptext79 6E86  
                                                __ptext96 8F70  
                                                __ptext88 8B14  
                                                __ptext97 74D6  
                                                __ptext89 9196  
                                                __ptext98 90BA  
                                                __ptext99 9298  
                                            _SSP1CON1bits 000F96  
                                            _SSP1CON2bits 000F97  
                                     NormalKeyGen@HOPtemp 0028  
                                         ??_GetMotorPower 0010  
                                _controlGate_stateMachine 01E2  
                                           ?_GetOpenOrder 0001  
                                 ?_sm_execute_ControlGate 00E7  
                                 DecryptPacket_12BIT@data 00E0  
              ?_rdBlkRegCompleteHandler@pic18f46k40$F7701 0019  
             ??_rdBlkRegCompleteHandler@pic18f46k40$F7703 001B  
                                                _learn_st 0060  
               ??_rd2RegCompleteHandler@pic18f46k40$F7691 001B  
                ?_rd1RegCompleteHandler@pic18f46k40$F7683 0019  
                ?_wr1RegCompleteHandler@pic18f46k40$F7675 0019  
               ??_rd1RegCompleteHandler@pic18f46k40$F7685 001B  
               ??_wr1RegCompleteHandler@pic18f46k40$F7677 001B  
                ?_wr2RegCompleteHandler@pic18f46k40$F7695 0019  
               ??_wr2RegCompleteHandler@pic18f46k40$F7697 001B  
                ?_rd2RegCompleteHandler@pic18f46k40$F7689 0019  
                                      __end_of_readInputs 6902  
                                _I2C1_CallbackReturnReset 92A4  
                                             ?_I2C1_DO_RX 0001  
                                             ?_I2C1_DO_TX 0001  
                                          ?_sm_send_event 0012  
                    __end_of_TMR0_DefaultInterruptHandler 92CA  
                            _TMR0_DefaultInterruptHandler 92C8  
                                i2c_readDataBlock@address 0029  
                             __end_of_I2C1_MasterClearIrq 9282  
                            __end_of_I2C1_DO_RX_NACK_STOP 922E  
                                             ?_I2C1_Close 0001  
                                          _ControlCurrent 5E72  
                                                _security 016A  
                                    RemoveSerial@position 003A  
                                      __end_of_readbutton 80C4  
                                              _RC1STAbits 000F9D  
          EUSART1_SetOverrunErrorHandler@interruptHandler 0010  
                                 __end_of_ClearFlag_rfCMD 926A  
                                    sm_init@initial_state 0014  
                      __end_of_SetSegmentValueIntermitent 8B6E  
                              _SetSegmentValueIntermitent 8B42  
                                                isa$xinst 000000  
                              ??_ADCC_GetSingleConversion 0001  
                                                int$flags 0050  
                         __end_of_I2C1_DO_RX_NACK_RESTART 9226  
                           SetSegmentValueLearn@direction 0012  
                                            ??_sm_restart 0012  
                                I2C1_MasterOperation@read 0020  
                      __end_of_INTERRUPT_InterruptManager 009C  
                              _INTERRUPT_InterruptManager 0008  
                                       _loadNVM_VarSystem 6262  
                                SaveNVM_VarSystem@tempAdd 00D9  
                                       ??_TMR1_WriteTimer 0003  
                                 __end_of_SetSegmentValue 9010  
                           __end_of_I2C1_DO_SEND_ADR_READ 917E  
                             _EUSART1_FramingErrorHandler 02E9  
                                            _I2C1_DO_IDLE 9204  
                                     _EUSART1_Receive_ISR 743C  
                                            _I2C1_DO_RCEN 91FA  
                                     decrementTimeslot@ts 0001  
                                      ?_loadNVM_VarSystem 0001  
                           controlSelectRemote@tempSerial 00E4  
                                           _getTypeRemote 925E  
                             __end_of_I2C1_MasterSendNack 927C  
                                        sm_send_event@psm 0012  
                             __end_of_getTimeDecelaration 6CDE  
                                   ??_keeloqDecryptPacket 00E4  
                                            _waitZeroPeak 0191  
                                __end_of_InitWalkAutoTime 90FA  
                                              _INTCONbits 000FF2  
                                       _aux_in_auto_close 018B  
                                                memcpy@d1 0010  
                                                memcpy@s1 0012  
                          I2C1_SetAddressNackCallback@ptr 0017  
                                      i2c_writeNBytes@dat 0028  
                                      i2c_writeNBytes@len 0025  
                                      i2c_writeNBytes@reg 0022  
                                    _I2C1_MasterGetRxData 929C  
                                   _I2C1_MasterSendTxData 9256  
                                     ??_loadNVM_VarSystem 003B  
                                           sm_restart@psm 0010  
                                  ??_INTERRUPT_Initialize 0010  
                                            _RFFull_12BIT 008A  
                                    _control_limit_switch 0081  
                          __end_of_sm_execute_ControlGate 39DE  
                                              Decrypt@aux 0021  
                                              Decrypt@key 001D  
                                          ??_GetOpenOrder 0020  
                                             ??_setRGB_ON 0013  
                             __end_of_ControlCounterMoves 83C0  
                                                intlevel2 0000  
                        actionZone_Opened@securityClosing 0020  
                        actionZone_Closed@securityOpening 0020  
                                __end_of_I2C1_MasterClose 92C0  
                                    ?_EUSART1_Receive_ISR 0001  
                                  _I2C1_Read1ByteRegister 830A  
                                 readRFButtons@typeRemote 0197  
                                  ??_getCurrentComparator 001A  
                                  rd2RegCompleteHandler@p 0019  
                                      __end_of_sm_restart 8818  
                                        ___lldiv@dividend 0010  
                                 ?_PIN_MANAGER_Initialize 0001  
                                  __end_of_ControlCurrent 5FE6  
                           I2C1_Read1ByteRegister@address 0023  
                                __end_of_I2C1_MasterStart 92B8  
                                __end_of_I2C1_MasterWrite 9216  
                                   __end_of_write_package 8B9A  
                                             _tempCounter 01F9  
                  __end_of_EUSART1_SetOverrunErrorHandler 91DC  
                          _EUSART1_SetOverrunErrorHandler 91D2  
                                        ??_I2C1_DO_RX_ACK 0010  
                                             _WDTCON0bits 000ED2  
                                             getHopCode@i 0023  
                                 _I2C1_CallbackReturnStop 92A8  
                            __end_of_EUSART1_Transmit_ISR 8AE4  
                                      NormalKeyGen@Buffer 0030  
                                                sumHIST@i 0020  
                                         ??_getKeyPressed 0010  
                                           _ControlLights 39DE  
                                       ?_InitFullAutoTime 0001  
                                           _ControlInputs 64B8  
                           ?_TMR0_DefaultInterruptHandler 0001  
                                    _I2C1_DO_ADDRESS_NACK 86AE  
                                              HopCHK@data 0024  
                                  ?_I2C1_MasterDisableIrq 0001  
                                           ?_getSerialCmd 001B  
                                          _ADC_zero_array 0396  
                               __end_of_loadNVM_VarSystem 6390  
                                      ??_InitFullAutoTime 0010  
                   __end_of_keeloq_classic_decrypt_packet 8418  
                           _keeloq_classic_decrypt_packet 83C0  
                                   __end_of_OpenFullOrder 8E1A  
                                  wr2RegCompleteHandler@p 0019  
          EUSART1_SetFramingErrorHandler@interruptHandler 0010  
                          ?_EUSART1_SetTxInterruptHandler 0010  
                                  ??_verifyProgramingMode 0012  
                                      _eusart1RxLastError 0199  
                                          ?_getTypeRemote 0001  
                                        _cmdMemoryIsEmpty 756E  
                                      NormalKeyGen@serial 0026  
                                __end_of_I2C1_SetCallback 8058  
                                             _var_sys_NVM 0098  
                                              _SSP1DATPPS 000EB8  
                                              _SSP1CLKPPS 000EB7  
                                         ??_I2C1_DO_RESET 0010  
                                    WWDT_TimerClear@state 0010  
                                        ___lldiv@quotient 0018  
                                    _I2C1_MasterOperation 8BC6  
                                         _TMR0_Initialize 8ED2  
                            ??_validateRemoteSerialNumber 00D8  
                                      _checkNVM_VarSystem 5360  
                                   ?_I2C1_MasterGetRxData 0001  
                           controlSelectRemote@typeRemote 00E3  
                                   __end_of_OpenWalkOrder 7FEA  
                                            _sumEnergyADC 771C  
                                          _listSyncValues 0300  
                                           setRGB_ON@Freq 0011  
                                     ?_checkNVM_VarSystem 0001  
                                   ??_EUSART1_Receive_ISR 0001  
                          __end_of_PIN_MANAGER_Initialize 756E  
                                       ??_ADCC_Initialize 0010  
                           __end_of_rd1RegCompleteHandler 8CFA  
                                         ??_sm_send_event 0016  
                                        ??_VerifyFollowMe 0010  
                                   __end_of_calculateMean 81F4  
                                        sm_init@hist_mode 0016  
                                         ?_ControlCurrent 0001  
                           __end_of_wr1RegCompleteHandler 8D26  
                                   _TMR2_InterruptHandler 02DD  
                                 ??_EUSART1_RxDataHandler 0001  
                                          ?_ControlLights 0001  
                                         _TMR1_Initialize 885C  
                                          ?_ControlInputs 0001  
                                   ?_I2C1_DO_ADDRESS_NACK 0001  
                                          ??_getSerialCmd 001C  
                                           ?_ControlMotor 0001  
                                         _sm_execute_main 24A0  
