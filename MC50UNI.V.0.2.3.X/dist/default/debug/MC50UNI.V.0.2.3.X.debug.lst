

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Mon Jul 18 17:28:50 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og9 
     1                           	processor	18F46K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     9                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    10                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    12                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    13                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    19                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    21                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    22                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    23                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    24                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    25                           	psect	text0,global,reloc=2,class=CODE,delta=1
    26                           	psect	text1,global,reloc=2,class=CODE,delta=1
    27                           	psect	text2,global,reloc=2,class=CODE,delta=1
    28                           	psect	text3,global,reloc=2,class=CODE,delta=1
    29                           	psect	text4,global,reloc=2,class=CODE,delta=1
    30                           	psect	text5,global,reloc=2,class=CODE,delta=1
    31                           	psect	text6,global,reloc=2,class=CODE,delta=1
    32                           	psect	text7,global,reloc=2,class=CODE,delta=1
    33                           	psect	text8,global,reloc=2,class=CODE,delta=1
    34                           	psect	text9,global,reloc=2,class=CODE,delta=1
    35                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text12,global,reloc=2,class=CODE,delta=1
    38                           	psect	text13,global,reloc=2,class=CODE,delta=1
    39                           	psect	text14,global,reloc=2,class=CODE,delta=1
    40                           	psect	text15,global,reloc=2,class=CODE,delta=1
    41                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text17,global,reloc=2,class=CODE,delta=1
    43                           	psect	text18,global,reloc=2,class=CODE,delta=1
    44                           	psect	text19,global,reloc=2,class=CODE,delta=1
    45                           	psect	text20,global,reloc=2,class=CODE,delta=1
    46                           	psect	text21,global,reloc=2,class=CODE,delta=1
    47                           	psect	text22,global,reloc=2,class=CODE,delta=1
    48                           	psect	text23,global,reloc=2,class=CODE,delta=1
    49                           	psect	text24,global,reloc=2,class=CODE,delta=1
    50                           	psect	text25,global,reloc=2,class=CODE,delta=1
    51                           	psect	text26,global,reloc=2,class=CODE,delta=1
    52                           	psect	text27,global,reloc=2,class=CODE,delta=1
    53                           	psect	text28,global,reloc=2,class=CODE,delta=1
    54                           	psect	text29,global,reloc=2,class=CODE,delta=1
    55                           	psect	text30,global,reloc=2,class=CODE,delta=1
    56                           	psect	text31,global,reloc=2,class=CODE,delta=1
    57                           	psect	text32,global,reloc=2,class=CODE,delta=1
    58                           	psect	text33,global,reloc=2,class=CODE,delta=1
    59                           	psect	text34,global,reloc=2,class=CODE,delta=1
    60                           	psect	text35,global,reloc=2,class=CODE,delta=1
    61                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    62                           	psect	text37,global,reloc=2,class=CODE,delta=1
    63                           	psect	text38,global,reloc=2,class=CODE,delta=1
    64                           	psect	text39,global,reloc=2,class=CODE,delta=1
    65                           	psect	text40,global,reloc=2,class=CODE,delta=1
    66                           	psect	text41,global,reloc=2,class=CODE,delta=1
    67                           	psect	text42,global,reloc=2,class=CODE,delta=1
    68                           	psect	text43,global,reloc=2,class=CODE,delta=1
    69                           	psect	text44,global,reloc=2,class=CODE,delta=1
    70                           	psect	text45,global,reloc=2,class=CODE,delta=1
    71                           	psect	text46,global,reloc=2,class=CODE,delta=1
    72                           	psect	text47,global,reloc=2,class=CODE,delta=1
    73                           	psect	text48,global,reloc=2,class=CODE,delta=1
    74                           	psect	text49,global,reloc=2,class=CODE,delta=1
    75                           	psect	text50,global,reloc=2,class=CODE,delta=1
    76                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text52,global,reloc=2,class=CODE,delta=1
    78                           	psect	text53,global,reloc=2,class=CODE,delta=1
    79                           	psect	text54,global,reloc=2,class=CODE,delta=1
    80                           	psect	text55,global,reloc=2,class=CODE,delta=1
    81                           	psect	text56,global,reloc=2,class=CODE,delta=1
    82                           	psect	text57,global,reloc=2,class=CODE,delta=1
    83                           	psect	text58,global,reloc=2,class=CODE,delta=1
    84                           	psect	text59,global,reloc=2,class=CODE,delta=1
    85                           	psect	text60,global,reloc=2,class=CODE,delta=1
    86                           	psect	text61,global,reloc=2,class=CODE,delta=1
    87                           	psect	text62,global,reloc=2,class=CODE,delta=1
    88                           	psect	text63,global,reloc=2,class=CODE,delta=1
    89                           	psect	text64,global,reloc=2,class=CODE,delta=1
    90                           	psect	text65,global,reloc=2,class=CODE,delta=1
    91                           	psect	text66,global,reloc=2,class=CODE,delta=1
    92                           	psect	text67,global,reloc=2,class=CODE,delta=1
    93                           	psect	text68,global,reloc=2,class=CODE,delta=1
    94                           	psect	text69,global,reloc=2,class=CODE,delta=1
    95                           	psect	text70,global,reloc=2,class=CODE,delta=1
    96                           	psect	text71,global,reloc=2,class=CODE,delta=1
    97                           	psect	text72,global,reloc=2,class=CODE,delta=1
    98                           	psect	text73,global,reloc=2,class=CODE,delta=1
    99                           	psect	text74,global,reloc=2,class=CODE,delta=1
   100                           	psect	text75,global,reloc=2,class=CODE,delta=1
   101                           	psect	text76,global,reloc=2,class=CODE,delta=1
   102                           	psect	text77,global,reloc=2,class=CODE,delta=1
   103                           	psect	text78,global,reloc=2,class=CODE,delta=1
   104                           	psect	text79,global,reloc=2,class=CODE,delta=1
   105                           	psect	text80,global,reloc=2,class=CODE,delta=1
   106                           	psect	text81,global,reloc=2,class=CODE,delta=1
   107                           	psect	text82,global,reloc=2,class=CODE,delta=1
   108                           	psect	text83,global,reloc=2,class=CODE,delta=1
   109                           	psect	text84,global,reloc=2,class=CODE,delta=1
   110                           	psect	text85,global,reloc=2,class=CODE,delta=1
   111                           	psect	text86,global,reloc=2,class=CODE,delta=1
   112                           	psect	text87,global,reloc=2,class=CODE,delta=1
   113                           	psect	text88,global,reloc=2,class=CODE,delta=1
   114                           	psect	text89,global,reloc=2,class=CODE,delta=1
   115                           	psect	text90,global,reloc=2,class=CODE,delta=1
   116                           	psect	text91,global,reloc=2,class=CODE,delta=1
   117                           	psect	text92,global,reloc=2,class=CODE,delta=1
   118                           	psect	text93,global,reloc=2,class=CODE,delta=1
   119                           	psect	text94,global,reloc=2,class=CODE,delta=1
   120                           	psect	text95,global,reloc=2,class=CODE,delta=1
   121                           	psect	text96,global,reloc=2,class=CODE,delta=1
   122                           	psect	text97,global,reloc=2,class=CODE,delta=1
   123                           	psect	text98,global,reloc=2,class=CODE,delta=1
   124                           	psect	text99,global,reloc=2,class=CODE,delta=1
   125                           	psect	text100,global,reloc=2,class=CODE,delta=1
   126                           	psect	text101,global,reloc=2,class=CODE,delta=1
   127                           	psect	text102,global,reloc=2,class=CODE,delta=1
   128                           	psect	text103,global,reloc=2,class=CODE,delta=1
   129                           	psect	text104,global,reloc=2,class=CODE,delta=1
   130                           	psect	text105,global,reloc=2,class=CODE,delta=1
   131                           	psect	text106,global,reloc=2,class=CODE,delta=1
   132                           	psect	text107,global,reloc=2,class=CODE,delta=1
   133                           	psect	text108,global,reloc=2,class=CODE,delta=1
   134                           	psect	text109,global,reloc=2,class=CODE,delta=1
   135                           	psect	text110,global,reloc=2,class=CODE,delta=1
   136                           	psect	text111,global,reloc=2,class=CODE,delta=1
   137                           	psect	text112,global,reloc=2,class=CODE,delta=1
   138                           	psect	text113,global,reloc=2,class=CODE,delta=1
   139                           	psect	text114,global,reloc=2,class=CODE,delta=1
   140                           	psect	text115,global,reloc=2,class=CODE,delta=1
   141                           	psect	text116,global,reloc=2,class=CODE,delta=1
   142                           	psect	text117,global,reloc=2,class=CODE,delta=1
   143                           	psect	text118,global,reloc=2,class=CODE,delta=1
   144                           	psect	text119,global,reloc=2,class=CODE,delta=1
   145                           	psect	text120,global,reloc=2,class=CODE,delta=1
   146                           	psect	text121,global,reloc=2,class=CODE,delta=1
   147                           	psect	text122,global,reloc=2,class=CODE,delta=1
   148                           	psect	text123,global,reloc=2,class=CODE,delta=1
   149                           	psect	text124,global,reloc=2,class=CODE,delta=1
   150                           	psect	text125,global,reloc=2,class=CODE,delta=1,group=1
   151                           	psect	text126,global,reloc=2,class=CODE,delta=1
   152                           	psect	text127,global,reloc=2,class=CODE,delta=1,group=1
   153                           	psect	text128,global,reloc=2,class=CODE,delta=1
   154                           	psect	text129,global,reloc=2,class=CODE,delta=1
   155                           	psect	text130,global,reloc=2,class=CODE,delta=1
   156                           	psect	text131,global,reloc=2,class=CODE,delta=1
   157                           	psect	text132,global,reloc=2,class=CODE,delta=1,group=2
   158                           	psect	text133,global,reloc=2,class=CODE,delta=1
   159                           	psect	text134,global,reloc=2,class=CODE,delta=1
   160                           	psect	text135,global,reloc=2,class=CODE,delta=1,inline
   161                           	psect	text136,global,reloc=2,class=CODE,delta=1
   162                           	psect	text137,global,reloc=2,class=CODE,delta=1
   163                           	psect	text138,global,reloc=2,class=CODE,delta=1
   164                           	psect	text139,global,reloc=2,class=CODE,delta=1,inline
   165                           	psect	text140,global,reloc=2,class=CODE,delta=1,inline
   166                           	psect	text141,global,reloc=2,class=CODE,delta=1
   167                           	psect	text142,global,reloc=2,class=CODE,delta=1
   168                           	psect	text143,global,reloc=2,class=CODE,delta=1
   169                           	psect	text144,global,reloc=2,class=CODE,delta=1
   170                           	psect	text145,global,reloc=2,class=CODE,delta=1
   171                           	psect	text146,global,reloc=2,class=CODE,delta=1
   172                           	psect	text147,global,reloc=2,class=CODE,delta=1
   173                           	psect	text148,global,reloc=2,class=CODE,delta=1
   174                           	psect	text149,global,reloc=2,class=CODE,delta=1
   175                           	psect	text150,global,reloc=2,class=CODE,delta=1
   176                           	psect	text151,global,reloc=2,class=CODE,delta=1
   177                           	psect	text152,global,reloc=2,class=CODE,delta=1
   178                           	psect	text153,global,reloc=2,class=CODE,delta=1
   179                           	psect	text154,global,reloc=2,class=CODE,delta=1
   180                           	psect	text155,global,reloc=2,class=CODE,delta=1
   181                           	psect	text156,global,reloc=2,class=CODE,delta=1
   182                           	psect	text157,global,reloc=2,class=CODE,delta=1,inline
   183                           	psect	text158,global,reloc=2,class=CODE,delta=1,inline
   184                           	psect	text159,global,reloc=2,class=CODE,delta=1,inline
   185                           	psect	text160,global,reloc=2,class=CODE,delta=1,inline
   186                           	psect	text161,global,reloc=2,class=CODE,delta=1,inline
   187                           	psect	text162,global,reloc=2,class=CODE,delta=1,inline
   188                           	psect	text163,global,reloc=2,class=CODE,delta=1,inline
   189                           	psect	text164,global,reloc=2,class=CODE,delta=1
   190                           	psect	text165,global,reloc=2,class=CODE,delta=1
   191                           	psect	text166,global,reloc=2,class=CODE,delta=1
   192                           	psect	text167,global,reloc=2,class=CODE,delta=1
   193                           	psect	text168,global,reloc=2,class=CODE,delta=1
   194                           	psect	text169,global,reloc=2,class=CODE,delta=1
   195                           	psect	text170,global,reloc=2,class=CODE,delta=1
   196                           	psect	text171,global,reloc=2,class=CODE,delta=1
   197                           	psect	text172,global,reloc=2,class=CODE,delta=1
   198                           	psect	text173,global,reloc=2,class=CODE,delta=1
   199                           	psect	text174,global,reloc=2,class=CODE,delta=1
   200                           	psect	text175,global,reloc=2,class=CODE,delta=1
   201                           	psect	text176,global,reloc=2,class=CODE,delta=1
   202                           	psect	text177,global,reloc=2,class=CODE,delta=1
   203                           	psect	text178,global,reloc=2,class=CODE,delta=1
   204                           	psect	text179,global,reloc=2,class=CODE,delta=1,inline
   205                           	psect	text180,global,reloc=2,class=CODE,delta=1,inline
   206                           	psect	text181,global,reloc=2,class=CODE,delta=1,inline
   207                           	psect	text182,global,reloc=2,class=CODE,delta=1
   208                           	psect	text183,global,reloc=2,class=CODE,delta=1,inline
   209                           	psect	text184,global,reloc=2,class=CODE,delta=1,inline
   210                           	psect	text185,global,reloc=2,class=CODE,delta=1,inline
   211                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   212                           	psect	text187,global,reloc=2,class=CODE,delta=1
   213                           	psect	text188,global,reloc=2,class=CODE,delta=1
   214                           	psect	text189,global,reloc=2,class=CODE,delta=1
   215                           	psect	text190,global,reloc=2,class=CODE,delta=1
   216                           	psect	text191,global,reloc=2,class=CODE,delta=1
   217                           	psect	text192,global,reloc=2,class=CODE,delta=1
   218                           	psect	text193,global,reloc=2,class=CODE,delta=1
   219                           	psect	text194,global,reloc=2,class=CODE,delta=1
   220                           	psect	text195,global,reloc=2,class=CODE,delta=1
   221                           	psect	text196,global,reloc=2,class=CODE,delta=1
   222                           	psect	text197,global,reloc=2,class=CODE,delta=1
   223                           	psect	text198,global,reloc=2,class=CODE,delta=1
   224                           	psect	text199,global,reloc=2,class=CODE,delta=1
   225                           	psect	text200,global,reloc=2,class=CODE,delta=1
   226                           	psect	text201,global,reloc=2,class=CODE,delta=1
   227                           	psect	text202,global,reloc=2,class=CODE,delta=1
   228                           	psect	text203,global,reloc=2,class=CODE,delta=1
   229                           	psect	text204,global,reloc=2,class=CODE,delta=1
   230                           	psect	text205,global,reloc=2,class=CODE,delta=1
   231                           	psect	text206,global,reloc=2,class=CODE,delta=1
   232                           	psect	text207,global,reloc=2,class=CODE,delta=1
   233                           	psect	text208,global,reloc=2,class=CODE,delta=1
   234                           	psect	text209,global,reloc=2,class=CODE,delta=1
   235                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   236                           	psect	text210,global,reloc=2,class=CODE,delta=1
   237                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   238                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   239                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   240                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   241  0000                     
   242                           ; Version 2.36
   243                           ; Generated 28/01/2022 GMT
   244                           ; 
   245                           ; Copyright © 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
   246                           ; All rights reserved.
   247                           ; 
   248                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   249                           ; 
   250                           ; Redistribution and use in source and binary forms, with or without modification, are
   251                           ; permitted provided that the following conditions are met:
   252                           ; 
   253                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   254                           ;        conditions and the following disclaimer.
   255                           ; 
   256                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   257                           ;        of conditions and the following disclaimer in the documentation and/or other
   258                           ;        materials provided with the distribution. Publication is not required when
   259                           ;        this file is used in an embedded application.
   260                           ; 
   261                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   262                           ;        software without specific prior written permission.
   263                           ; 
   264                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   265                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   266                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   267                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   268                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   269                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   270                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   271                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   272                           ; 
   273                           ; 
   274                           ; Code-generator required, PIC18F46K40 Definitions
   275                           ; 
   276                           ; SFR Addresses
   277  0000                     
   278                           	psect	idataBANK0
   279  009CA2                     __pidataBANK0:
   280                           	callstack 0
   281                           
   282                           ;initializer for _auxCounter
   283  009CA2  03E8               	dw	1000
   284                           
   285                           	psect	idataBANK1
   286  009CAC                     __pidataBANK1:
   287                           	callstack 0
   288                           
   289                           ;initializer for _firstselectflag
   290  009CAC  01                 	db	1
   291                           
   292                           	psect	idataBANK2
   293  009C40                     __pidataBANK2:
   294                           	callstack 0
   295                           
   296                           ;initializer for _tempCounter
   297  009C40  3DDD               	dw	15837
   298  009C42  000F               	dw	15
   299                           
   300                           ;initializer for _zeroCrossingWaitTime
   301  009C44  19                 	db	25
   302  009C45  19                 	db	25
   303                           
   304                           	psect	idataBANK3
   305  00984A                     __pidataBANK3:
   306                           	callstack 0
   307                           
   308                           ;initializer for _DispTable
   309  00984A  6F                 	db	111
   310  00984B  21                 	db	33
   311  00984C  76                 	db	118
   312  00984D  73                 	db	115
   313  00984E  39                 	db	57
   314  00984F  5B                 	db	91
   315  009850  5F                 	db	95
   316  009851  61                 	db	97
   317  009852  7F                 	db	127
   318  009853  7B                 	db	123
   319  009854  7D                 	db	125
   320  009855  7F                 	db	127
   321  009856  4E                 	db	78
   322  009857  37                 	db	55
   323  009858  5E                 	db	94
   324  009859  5C                 	db	92
   325  00985A  7C                 	db	124
   326  00985B  3D                 	db	61
   327  00985C  0E                 	db	14
   328  00985D  2F                 	db	47
   329  00985E  14                 	db	20
   330  00985F  1E                 	db	30
   331  009860  07                 	db	7
   332  009861  45                 	db	69
   333  009862  10                 	db	16
   334  009863  0C                 	db	12
   335  009864  40                 	db	64
   336  009865  20                 	db	32
   337  009866  01                 	db	1
   338  009867  02                 	db	2
   339  009868  04                 	db	4
   340  009869  08                 	db	8
   341  00986A  00                 	db	0
   342  00986B  3B                 	db	59
   343  00986C  1F                 	db	31
   344  00986D  16                 	db	22
   345  00986E  17                 	db	23
   346                           
   347                           	psect	smallconst
   348  000F00                     __psmallconst:
   349                           	callstack 0
   350  000F00  00                 	db	0
   351  000F01                     _i2c1_fsmStateTable:
   352                           	callstack 0
   353  000F01  E6                 	db	low _I2C1_DO_IDLE
   354  000F02  9B                 	db	high _I2C1_DO_IDLE
   355  000F03  52                 	db	low _I2C1_DO_SEND_ADR_READ
   356  000F04  9B                 	db	high _I2C1_DO_SEND_ADR_READ
   357  000F05  44                 	db	low _I2C1_DO_SEND_ADR_WRITE
   358  000F06  9B                 	db	high _I2C1_DO_SEND_ADR_WRITE
   359  000F07  92                 	db	low _I2C1_DO_TX
   360  000F08  80                 	db	high _I2C1_DO_TX
   361  000F09  30                 	db	low _I2C1_DO_RX
   362  000F0A  85                 	db	high _I2C1_DO_RX
   363  000F0B  DC                 	db	low _I2C1_DO_RCEN
   364  000F0C  9B                 	db	high _I2C1_DO_RCEN
   365  000F0D  4C                 	db	low _I2C1_DO_TX_EMPTY
   366  000F0E  8B                 	db	high _I2C1_DO_TX_EMPTY
   367  000F0F  30                 	db	low _I2C1_DO_SEND_RESTART_READ
   368  000F10  9C                 	db	high _I2C1_DO_SEND_RESTART_READ
   369  000F11  28                 	db	low _I2C1_DO_SEND_RESTART_WRITE
   370  000F12  9C                 	db	high _I2C1_DO_SEND_RESTART_WRITE
   371  000F13  20                 	db	low _I2C1_DO_SEND_RESTART
   372  000F14  9C                 	db	high _I2C1_DO_SEND_RESTART
   373  000F15  18                 	db	low _I2C1_DO_SEND_STOP
   374  000F16  9C                 	db	high _I2C1_DO_SEND_STOP
   375  000F17  10                 	db	low _I2C1_DO_RX_ACK
   376  000F18  9C                 	db	high _I2C1_DO_RX_ACK
   377  000F19  08                 	db	low _I2C1_DO_RX_NACK_STOP
   378  000F1A  9C                 	db	high _I2C1_DO_RX_NACK_STOP
   379  000F1B  00                 	db	low _I2C1_DO_RX_NACK_RESTART
   380  000F1C  9C                 	db	high _I2C1_DO_RX_NACK_RESTART
   381  000F1D  D2                 	db	low _I2C1_DO_RESET
   382  000F1E  9B                 	db	high _I2C1_DO_RESET
   383  000F1F  60                 	db	low _I2C1_DO_ADDRESS_NACK
   384  000F20  90                 	db	high _I2C1_DO_ADDRESS_NACK
   385  000F21                     __end_of_i2c1_fsmStateTable:
   386                           	callstack 0
   387  0000                     _T2CON	set	4029
   388  0000                     _T1CON	set	4047
   389  0000                     _T1CLK	set	4050
   390  0000                     _T1GATE	set	4049
   391  0000                     _T0CON0	set	4053
   392  0000                     _INLVLD	set	3874
   393  0000                     _SLRCOND	set	3875
   394  0000                     _ODCOND	set	3876
   395  0000                     _WPUD	set	3877
   396  0000                     _TRISD	set	3979
   397  0000                     _TRISC	set	3978
   398  0000                     _TRISB	set	3977
   399  0000                     _TRISA	set	3976
   400  0000                     _TRISE	set	3980
   401  0000                     _LATC	set	3973
   402  0000                     _LATB	set	3972
   403  0000                     _OSCTUNE	set	3805
   404  0000                     _OSCFRQ	set	3806
   405  0000                     _ADERRL	set	3950
   406  0000                     _ADERRH	set	3951
   407  0000                     _ADPREVL	set	3937
   408  0000                     _ADPREVH	set	3938
   409  0000                     _ADFLTRL	set	3954
   410  0000                     _ADFLTRH	set	3955
   411  0000                     _ADACCL	set	3952
   412  0000                     _ADACCH	set	3953
   413  0000                     _ADCNT	set	3943
   414  0000                     _ADRESL	set	3939
   415  0000                     _ADRESH	set	3940
   416  0000                     _ADACQ	set	3932
   417  0000                     _ADCON0	set	3936
   418  0000                     _ADCLK	set	3927
   419  0000                     _ADSTAT	set	3941
   420  0000                     _ADCON3	set	3931
   421  0000                     _ADCON2	set	3930
   422  0000                     _ADPRE	set	3934
   423  0000                     _ADSTPTH	set	3945
   424  0000                     _ADUTHH	set	3949
   425  0000                     _ADUTHL	set	3948
   426  0000                     _ADLTHH	set	3947
   427  0000                     _SP1BRGH	set	3996
   428  0000                     _TX1STA	set	3998
   429  000F21  00                 	db	0	; dummy byte at the end
   430  0000                     
   431                           	psect	nvBANK1
   432  0001FE                     __pnvBANK1:
   433                           	callstack 0
   434  0001FE                     _eusart1TxBufferRemaining:
   435                           	callstack 0
   436  0001FE                     	ds	1
   437                           
   438                           	psect	nvBANK2
   439  0002DB                     __pnvBANK2:
   440                           	callstack 0
   441  0002DB                     _TMR2_InterruptHandler:
   442                           	callstack 0
   443  0002DB                     	ds	2
   444  0002DD                     _TMR1_InterruptHandler:
   445                           	callstack 0
   446  0002DD                     	ds	2
   447  0002DF                     _timer1ReloadVal:
   448                           	callstack 0
   449  0002DF                     	ds	2
   450  0002E1                     _TMR0_InterruptHandler:
   451                           	callstack 0
   452  0002E1                     	ds	2
   453  0002E3                     _EUSART1_ErrorHandler:
   454                           	callstack 0
   455  0002E3                     	ds	2
   456  0002E5                     _EUSART1_OverrunErrorHandler:
   457                           	callstack 0
   458  0002E5                     	ds	2
   459  0002E7                     _EUSART1_FramingErrorHandler:
   460                           	callstack 0
   461  0002E7                     	ds	2
   462  0002E9                     _EUSART1_RxDefaultInterruptHandler:
   463                           	callstack 0
   464  0002E9                     	ds	2
   465  0002EB                     _EUSART1_TxDefaultInterruptHandler:
   466                           	callstack 0
   467  0002EB                     	ds	2
   468  0000                     _WDTCON0bits	set	3794
   469  0000                     _TMR0IE	set	30229
   470  0000                     _TMR0IF	set	30293
   471  0000                     _LATEbits	set	3975
   472  0000                     _LATDbits	set	3974
   473  0000                     _LATAbits	set	3971
   474  0000                     _LATCbits	set	3973
   475  0000                     _PORTB	set	3982
   476  0000                     _T1CONbits	set	4047
   477  0000                     _SSP1CON2bits	set	3991
   478  0000                     _SSP1CON1bits	set	3990
   479  0000                     _ADCON0bits	set	3936
   480  0000                     _RC1STAbits	set	3997
   481  0000                     _GIE	set	32663
   482  0000                     _RX1PPS	set	3765
   483  0000                     _SSP1CLKPPS	set	3767
   484  0000                     _PIE0bits	set	3778
   485  0000                     _PIE3bits	set	3781
   486  0000                     _PIE4bits	set	3782
   487  0000                     _PIR0bits	set	3786
   488  0000                     _PIR3bits	set	3789
   489  0000                     _ADACT	set	3926
   490  0000                     _ADREF	set	3928
   491  0000                     _ADCON1	set	3929
   492  0000                     _ADCAP	set	3933
   493  0000                     _ADPCH	set	3935
   494  0000                     _ADRPT	set	3942
   495  0000                     _ADSTPTL	set	3944
   496  0000                     _ADLTHL	set	3946
   497  0000                     _RC1REG	set	3993
   498  0000                     _TX1REG	set	3994
   499  0000                     _SP1BRGL	set	3995
   500  0000                     _RC1STA	set	3997
   501  0000                     _BAUD1CON	set	3999
   502  0000                     _T2TMR	set	4027
   503  0000                     _T2PR	set	4028
   504  0000                     _T2HLT	set	4030
   505  0000                     _T2CLKCON	set	4031
   506  0000                     _TMR1L	set	4045
   507  0000                     _TMR1H	set	4046
   508  0000                     _T1GCON	set	4048
   509  0000                     _TMR0L	set	4051
   510  0000                     _TMR0H	set	4052
   511  0000                     _T0CON1	set	4054
   512  0000                     _PCON0bits	set	4055
   513  0000                     _INTCONbits	set	4082
   514  0000                     _LATA	set	3971
   515  0000                     _LATD	set	3974
   516  0000                     _LATE	set	3975
   517  0000                     _SSP1BUF	set	3986
   518  0000                     _SSP1ADD	set	3987
   519  0000                     _SSP1STAT	set	3989
   520  0000                     _SSP1CON2	set	3991
   521  0000                     _SSP1CON1	set	3990
   522  0000                     _WDTCON0	set	3794
   523  0000                     _OSCCON1	set	3800
   524  0000                     _PIR4bits	set	3790
   525  0000                     _OSCCON3	set	3802
   526  0000                     _OSCEN	set	3804
   527  0000                     _PMD0	set	3809
   528  0000                     _RC3PPS	set	3834
   529  0000                     _INLVLA	set	3853
   530  0000                     _SLRCONA	set	3854
   531  0000                     _ODCONA	set	3855
   532  0000                     _WPUA	set	3856
   533  0000                     _ANSELA	set	3857
   534  0000                     _ANSELB	set	3865
   535  0000                     _ANSELC	set	3873
   536  0000                     _ANSELD	set	3878
   537  0000                     _PMD5	set	3814
   538  0000                     _PMD4	set	3813
   539  0000                     _PMD3	set	3812
   540  0000                     _PMD2	set	3811
   541  0000                     _PMD1	set	3810
   542  0000                     _WDTCON1	set	3795
   543  0000                     _PORTEbits	set	3985
   544  0000                     _PORTBbits	set	3982
   545  0000                     _PORTAbits	set	3981
   546  0000                     _INLVLE	set	3882
   547  0000                     _SLRCONE	set	3883
   548  0000                     _ODCONE	set	3884
   549  0000                     _WPUE	set	3885
   550  0000                     _ANSELE	set	3886
   551  0000                     _INLVLC	set	3869
   552  0000                     _SLRCONC	set	3870
   553  0000                     _ODCONC	set	3871
   554  0000                     _WPUC	set	3872
   555  0000                     _INLVLB	set	3861
   556  0000                     _SLRCONB	set	3862
   557  0000                     _ODCONB	set	3863
   558  0000                     _WPUB	set	3864
   559  0000                     _IOCBN3	set	30875
   560  0000                     _IOCBP3	set	30883
   561  0000                     _SSP1DATPPS	set	3768
   562  0000                     _RC7PPS	set	3838
   563  0000                     _RC4PPS	set	3835
   564  0000                     _T2RST	set	4032
   565                           
   566                           ; #config settings
   567                           
   568                           	psect	cinit
   569  007A80                     __pcinit:
   570                           	callstack 0
   571  007A80                     start_initialization:
   572                           	callstack 0
   573  007A80                     __initialization:
   574                           	callstack 0
   575                           
   576                           ; Initialize objects allocated to BANK3 (37 bytes)
   577                           ; load TBLPTR registers with __pidataBANK3
   578  007A80  0E4A               	movlw	low __pidataBANK3
   579  007A82  6EF6               	movwf	tblptrl,c
   580  007A84  0E98               	movlw	high __pidataBANK3
   581  007A86  6EF7               	movwf	tblptrh,c
   582  007A88  0E00               	movlw	low (__pidataBANK3 shr (0+16))
   583  007A8A  6EF8               	movwf	tblptru,c
   584  007A8C  EE03  F0D2         	lfsr	0,__pdataBANK3
   585  007A90  EE10 F025          	lfsr	1,37
   586  007A94                     copy_data0:
   587  007A94  0009               	tblrd		*+
   588  007A96  CFF5 FFEE          	movff	tablat,postinc0
   589  007A9A  50E5               	movf	postdec1,w,c
   590  007A9C  50E1               	movf	fsr1l,w,c
   591  007A9E  E1FA               	bnz	copy_data0
   592                           
   593                           ; Initialize objects allocated to BANK2 (6 bytes)
   594                           ; load TBLPTR registers with __pidataBANK2
   595  007AA0  0E40               	movlw	low __pidataBANK2
   596  007AA2  6EF6               	movwf	tblptrl,c
   597  007AA4  0E9C               	movlw	high __pidataBANK2
   598  007AA6  6EF7               	movwf	tblptrh,c
   599  007AA8  0E00               	movlw	low (__pidataBANK2 shr (0+16))
   600  007AAA  6EF8               	movwf	tblptru,c
   601  007AAC  EE02  F0F4         	lfsr	0,__pdataBANK2
   602  007AB0  EE10 F006          	lfsr	1,6
   603  007AB4                     copy_data1:
   604  007AB4  0009               	tblrd		*+
   605  007AB6  CFF5 FFEE          	movff	tablat,postinc0
   606  007ABA  50E5               	movf	postdec1,w,c
   607  007ABC  50E1               	movf	fsr1l,w,c
   608  007ABE  E1FA               	bnz	copy_data1
   609                           
   610                           ; Initialize objects allocated to BANK1 (1 bytes)
   611                           ; load TBLPTR registers with __pidataBANK1
   612  007AC0  0EAC               	movlw	low __pidataBANK1
   613  007AC2  6EF6               	movwf	tblptrl,c
   614  007AC4  0E9C               	movlw	high __pidataBANK1
   615  007AC6  6EF7               	movwf	tblptrh,c
   616  007AC8  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   617  007ACA  6EF8               	movwf	tblptru,c
   618  007ACC  0009               	tblrd		*+	;fetch initializer
   619  007ACE  CFF5 F1FF          	movff	tablat,__pdataBANK1
   620                           
   621                           ; Initialize objects allocated to BANK0 (2 bytes)
   622                           ; load TBLPTR registers with __pidataBANK0
   623  007AD2  0EA2               	movlw	low __pidataBANK0
   624  007AD4  6EF6               	movwf	tblptrl,c
   625  007AD6  0E9C               	movlw	high __pidataBANK0
   626  007AD8  6EF7               	movwf	tblptrh,c
   627  007ADA  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   628  007ADC  6EF8               	movwf	tblptru,c
   629  007ADE  0009               	tblrd		*+	;fetch initializer
   630  007AE0  CFF5 F0FC          	movff	tablat,__pdataBANK0
   631  007AE4  0009               	tblrd		*+	;fetch initializer
   632  007AE6  CFF5 F0FD          	movff	tablat,__pdataBANK0+1
   633                           
   634                           ; Clear objects allocated to BANK3 (210 bytes)
   635  007AEA  EE03  F000         	lfsr	0,__pbssBANK3
   636  007AEE  0ED2               	movlw	210
   637  007AF0                     clear_0:
   638  007AF0  6AEE               	clrf	postinc0,c
   639  007AF2  06E8               	decf	wreg,f,c
   640  007AF4  E1FD               	bnz	clear_0
   641                           
   642                           ; Clear objects allocated to BANK2 (219 bytes)
   643  007AF6  EE02  F000         	lfsr	0,__pbssBANK2
   644  007AFA  0EDB               	movlw	219
   645  007AFC                     clear_1:
   646  007AFC  6AEE               	clrf	postinc0,c
   647  007AFE  06E8               	decf	wreg,f,c
   648  007B00  E1FD               	bnz	clear_1
   649                           
   650                           ; Clear objects allocated to BANK1 (254 bytes)
   651  007B02  EE01  F000         	lfsr	0,__pbssBANK1
   652  007B06  0EFE               	movlw	254
   653  007B08                     clear_2:
   654  007B08  6AEE               	clrf	postinc0,c
   655  007B0A  06E8               	decf	wreg,f,c
   656  007B0C  E1FD               	bnz	clear_2
   657                           
   658                           ; Clear objects allocated to BANK0 (120 bytes)
   659  007B0E  EE00  F060         	lfsr	0,__pbssBANK0
   660  007B12  0E78               	movlw	120
   661  007B14                     clear_3:
   662  007B14  6AEE               	clrf	postinc0,c
   663  007B16  06E8               	decf	wreg,f,c
   664  007B18  E1FD               	bnz	clear_3
   665                           
   666                           ; Clear objects allocated to COMRAM (21 bytes)
   667  007B1A  EE00  F03B         	lfsr	0,__pbssCOMRAM
   668  007B1E  0E15               	movlw	21
   669  007B20                     clear_4:
   670  007B20  6AEE               	clrf	postinc0,c
   671  007B22  06E8               	decf	wreg,f,c
   672  007B24  E1FD               	bnz	clear_4
   673  007B26                     end_of_initialization:
   674                           	callstack 0
   675  007B26                     __end_of__initialization:
   676                           	callstack 0
   677  007B26  9050               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   678  007B28  9250               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   679  007B2A  0100               	movlb	0
   680  007B2C  EF52  F033         	goto	_main	;jump to C main() function
   681                           
   682                           	psect	bssCOMRAM
   683  00003B                     __pbssCOMRAM:
   684                           	callstack 0
   685  00003B                     _rfCMD:
   686                           	callstack 0
   687  00003B                     	ds	11
   688  000046                     _edit_Param:
   689                           	callstack 0
   690  000046                     	ds	6
   691  00004C                     _button_struct:
   692                           	callstack 0
   693  00004C                     	ds	4
   694                           
   695                           	psect	bssBANK0
   696  000060                     __pbssBANK0:
   697                           	callstack 0
   698  000060                     _learn_st:
   699                           	callstack 0
   700  000060                     	ds	18
   701  000072                     _dispStruct:
   702                           	callstack 0
   703  000072                     	ds	6
   704  000078                     _brakeElectric_st:
   705                           	callstack 0
   706  000078                     	ds	2
   707  00007A                     _pointSync:
   708                           	callstack 0
   709  00007A                     	ds	2
   710  00007C                     _Hop:
   711                           	callstack 0
   712  00007C                     	ds	2
   713  00007E                     _RFcount:
   714                           	callstack 0
   715  00007E                     	ds	2
   716  000080                     _temp:
   717                           	callstack 0
   718  000080                     	ds	1
   719  000081                     _control_limit_switch:
   720                           	callstack 0
   721  000081                     	ds	1
   722  000082                     _fullmotorPower:
   723                           	callstack 0
   724  000082                     	ds	1
   725  000083                     _stateMotor:
   726                           	callstack 0
   727  000083                     	ds	1
   728  000084                     _zeroCrossingWaitTimeIdx:
   729                           	callstack 0
   730  000084                     	ds	1
   731  000085                     _programmer_enable:
   732                           	callstack 0
   733  000085                     	ds	1
   734  000086                     readbutton@key1:
   735                           	callstack 0
   736  000086                     	ds	1
   737  000087                     readRFButtons@keyType:
   738                           	callstack 0
   739  000087                     	ds	1
   740  000088                     readRFButtons@key1:
   741                           	callstack 0
   742  000088                     	ds	1
   743  000089                     _RFBit:
   744                           	callstack 0
   745  000089                     	ds	1
   746  00008A                     _RFFull_12BIT:
   747                           	callstack 0
   748  00008A                     	ds	1
   749  00008B                     _RFFull:
   750                           	callstack 0
   751  00008B                     	ds	1
   752  00008C                     _BitCount:
   753                           	callstack 0
   754  00008C                     	ds	1
   755  00008D                     _Bptr:
   756                           	callstack 0
   757  00008D                     	ds	1
   758  00008E                     _numberOfErrorCurrent:
   759                           	callstack 0
   760  00008E                     	ds	1
   761  00008F                     _idxAdcZeroAquisition:
   762                           	callstack 0
   763  00008F                     	ds	1
   764  000090                     _idxSaveEnergyADCHist:
   765                           	callstack 0
   766  000090                     	ds	1
   767  000091                     _idxAdcAquisition:
   768                           	callstack 0
   769  000091                     	ds	1
   770  000092                     _Counterchoose:
   771                           	callstack 0
   772  000092                     	ds	1
   773  000093                     _eusart1RxCount:
   774                           	callstack 0
   775  000093                     	ds	1
   776  000094                     _eusart1RxTail:
   777                           	callstack 0
   778  000094                     	ds	1
   779  000095                     _eusart1RxHead:
   780                           	callstack 0
   781  000095                     	ds	1
   782  000096                     _eusart1TxTail:
   783                           	callstack 0
   784  000096                     	ds	1
   785  000097                     _eusart1TxHead:
   786                           	callstack 0
   787  000097                     	ds	1
   788  000098                     _var_sys_NVM:
   789                           	callstack 0
   790  000098                     	ds	64
   791                           
   792                           	psect	dataBANK0
   793  0000FC                     __pdataBANK0:
   794                           	callstack 0
   795  0000FC                     _auxCounter:
   796                           	callstack 0
   797  0000FC                     	ds	2
   798                           
   799                           	psect	bssBANK1
   800  000100                     __pbssBANK1:
   801                           	callstack 0
   802  000100                     _var_sys:
   803                           	callstack 0
   804  000100                     	ds	81
   805  000151                     _menu_st:
   806                           	callstack 0
   807  000151                     	ds	25
   808  00016A                     _security:
   809                           	callstack 0
   810  00016A                     	ds	11
   811  000175                     _fimdecurso:
   812                           	callstack 0
   813  000175                     	ds	6
   814  00017B                     _powerControl_st:
   815                           	callstack 0
   816  00017B                     	ds	6
   817  000181                     readRFButtons@serial:
   818                           	callstack 0
   819  000181                     	ds	4
   820  000185                     eusartparser@buffer:
   821                           	callstack 0
   822  000185                     	ds	2
   823  000187                     _NextHop:
   824                           	callstack 0
   825  000187                     	ds	2
   826  000189                     readRFButtons@rollingCode:
   827                           	callstack 0
   828  000189                     	ds	2
   829  00018B                     _BufferRF_12BIT:
   830                           	callstack 0
   831  00018B                     	ds	2
   832  00018D                     _erroranterior:
   833                           	callstack 0
   834  00018D                     	ds	2
   835  00018F                     eusartparser@save_f:
   836                           	callstack 0
   837  00018F                     	ds	1
   838  000190                     _aux_in_auto_close:
   839                           	callstack 0
   840  000190                     	ds	1
   841  000191                     _aux_i:
   842                           	callstack 0
   843  000191                     	ds	1
   844  000192                     _Abertura_pedonal:
   845                           	callstack 0
   846  000192                     	ds	1
   847  000193                     _temppower:
   848                           	callstack 0
   849  000193                     	ds	1
   850  000194                     _difTime:
   851                           	callstack 0
   852  000194                     	ds	1
   853  000195                     _StateTRIAC:
   854                           	callstack 0
   855  000195                     	ds	1
   856  000196                     _waitZeroPeak:
   857                           	callstack 0
   858  000196                     	ds	1
   859  000197                     _zeroCrossing:
   860                           	callstack 0
   861  000197                     	ds	1
   862  000198                     _zeroCrossingLength:
   863                           	callstack 0
   864  000198                     	ds	1
   865  000199                     _lastKey:
   866                           	callstack 0
   867  000199                     	ds	1
   868  00019A                     _F2Chance:
   869                           	callstack 0
   870  00019A                     	ds	1
   871  00019B                     readbutton@key2:
   872                           	callstack 0
   873  00019B                     	ds	1
   874  00019C                     readRFButtons@typeRemote:
   875                           	callstack 0
   876  00019C                     	ds	1
   877  00019D                     _RFstate:
   878                           	callstack 0
   879  00019D                     	ds	1
   880  00019E                     _eusart1RxLastError:
   881                           	callstack 0
   882  00019E                     	ds	1
   883  00019F                     _ts_system:
   884                           	callstack 0
   885  00019F                     	ds	72
   886  0001E7                     _controlGate_stateMachine:
   887                           	callstack 0
   888  0001E7                     	ds	11
   889  0001F2                     _main_stateMachine:
   890                           	callstack 0
   891  0001F2                     	ds	11
   892  0001FD                     setValueToEdit@value:
   893                           	callstack 0
   894  0001FD                     	ds	1
   895                           
   896                           	psect	dataBANK1
   897  0001FF                     __pdataBANK1:
   898                           	callstack 0
   899  0001FF                     _firstselectflag:
   900                           	callstack 0
   901  0001FF                     	ds	1
   902                           
   903                           	psect	bssBANK2
   904  000200                     __pbssBANK2:
   905                           	callstack 0
   906  000200                     _ADC_array:
   907                           	callstack 0
   908  000200                     	ds	60
   909  00023C                     _I2C1_Status:
   910                           	callstack 0
   911  00023C                     	ds	36
   912  000260                     _SumEnergyADCHist_array:
   913                           	callstack 0
   914  000260                     	ds	20
   915  000274                     _eusart1RxStatusBuffer:
   916                           	callstack 0
   917  000274                     	ds	8
   918  00027C                     _eusart1RxBuffer:
   919                           	callstack 0
   920  00027C                     	ds	8
   921  000284                     _eusart1TxBuffer:
   922                           	callstack 0
   923  000284                     	ds	8
   924  00028C                     _EHop:
   925                           	callstack 0
   926  00028C                     	ds	2
   927  00028E                     _timer0ReloadVal16bit:
   928                           	callstack 0
   929  00028E                     	ds	2
   930  000290                     _classic_data:
   931                           	callstack 0
   932  000290                     	ds	16
   933  0002A0                     _memoryTEMP:
   934                           	callstack 0
   935  0002A0                     	ds	16
   936  0002B0                     _controlLearning_stateMachine:
   937                           	callstack 0
   938  0002B0                     	ds	11
   939  0002BB                     _menuConfiguration_stateMachine:
   940                           	callstack 0
   941  0002BB                     	ds	11
   942  0002C6                     _BufferRF:
   943                           	callstack 0
   944  0002C6                     	ds	9
   945  0002CF                     _DKEY:
   946                           	callstack 0
   947  0002CF                     	ds	8
   948  0002D7                     NormalKeyGen@SEED:
   949                           	callstack 0
   950  0002D7                     	ds	4
   951                           
   952                           	psect	dataBANK2
   953  0002F4                     __pdataBANK2:
   954                           	callstack 0
   955  0002F4                     _tempCounter:
   956                           	callstack 0
   957  0002F4                     	ds	4
   958  0002F8                     _zeroCrossingWaitTime:
   959                           	callstack 0
   960  0002F8                     	ds	2
   961                           
   962                           	psect	bssBANK3
   963  000300                     __pbssBANK3:
   964                           	callstack 0
   965  000300                     _listSyncValues:
   966                           	callstack 0
   967  000300                     	ds	150
   968  000396                     _ADC_zero_array:
   969                           	callstack 0
   970  000396                     	ds	60
   971                           
   972                           	psect	dataBANK3
   973  0003D2                     __pdataBANK3:
   974                           	callstack 0
   975  0003D2                     _DispTable:
   976                           	callstack 0
   977  0003D2                     	ds	37
   978                           
   979                           	psect	cstackBANK2
   980  0002ED                     __pcstackBANK2:
   981                           	callstack 0
   982  0002ED                     main@package:
   983                           	callstack 0
   984                           
   985                           ; 7 bytes @ 0x0
   986  0002ED                     	ds	7
   987                           
   988                           	psect	cstackBANK0
   989  0000D8                     __pcstackBANK0:
   990                           	callstack 0
   991  0000D8                     ??_keeloq_classic_decrypt_packet:
   992  0000D8                     ??_setPositionInvertionInClosing:
   993  0000D8                     ??_validateRemoteSerialNumber:
   994  0000D8                     ??_RemoveSerial:
   995  0000D8                     SaveNVM_VarSystem@page:
   996                           	callstack 0
   997  0000D8                     getStateOpenPosition@state:
   998                           	callstack 0
   999  0000D8                     saveNewSerial@tempSerial:
  1000                           	callstack 0
  1001                           
  1002                           ; 4 bytes @ 0x0
  1003  0000D8                     	ds	1
  1004  0000D9                     getStateOpenPosition@stateMotor:
  1005                           	callstack 0
  1006  0000D9                     SaveNVM_VarSystem@tempAdd:
  1007                           	callstack 0
  1008                           
  1009                           ; 2 bytes @ 0x1
  1010  0000D9                     	ds	1
  1011  0000DA                     ??_controlVelocity:
  1012  0000DA                     RemoveSerial@cmdType:
  1013                           	callstack 0
  1014                           
  1015                           ; 1 bytes @ 0x2
  1016  0000DA                     	ds	1
  1017  0000DB                     SaveNVM_VarSystem@point:
  1018                           	callstack 0
  1019  0000DB                     RemoveSerial@tempSerial:
  1020                           	callstack 0
  1021                           
  1022                           ; 4 bytes @ 0x3
  1023  0000DB                     	ds	1
  1024  0000DC                     ??_setValueToEdit:
  1025  0000DC                     saveNewSerial@position:
  1026                           	callstack 0
  1027  0000DC                     sm_execute_ControlLearning@psm:
  1028                           	callstack 0
  1029                           
  1030                           ; 2 bytes @ 0x4
  1031  0000DC                     	ds	1
  1032  0000DD                     ??_saveNewSerial:
  1033                           
  1034                           ; 1 bytes @ 0x5
  1035  0000DD                     	ds	1
  1036  0000DE                     ??_sm_execute_ControlLearning:
  1037  0000DE                     setValueToEdit@menuType:
  1038                           	callstack 0
  1039                           
  1040                           ; 1 bytes @ 0x6
  1041  0000DE                     	ds	1
  1042  0000DF                     setValueToEdit@posindex:
  1043                           	callstack 0
  1044                           
  1045                           ; 1 bytes @ 0x7
  1046  0000DF                     	ds	1
  1047  0000E0                     ??_controlSelectRemote:
  1048  0000E0                     setValueToEdit@haveValueToEdit:
  1049                           	callstack 0
  1050  0000E0                     keeloqDecryptPacket@data:
  1051                           	callstack 0
  1052  0000E0                     DecryptPacket_12BIT@data:
  1053                           	callstack 0
  1054  0000E0                     eusartparser@package:
  1055                           	callstack 0
  1056                           
  1057                           ; 2 bytes @ 0x8
  1058  0000E0                     	ds	1
  1059  0000E1                     controlSelectRemote@validSerial:
  1060                           	callstack 0
  1061                           
  1062                           ; 1 bytes @ 0x9
  1063  0000E1                     	ds	1
  1064  0000E2                     ??_eusartparser:
  1065  0000E2                     controlSelectRemote@pos:
  1066                           	callstack 0
  1067  0000E2                     keeloqDecryptPacket@classic_data:
  1068                           	callstack 0
  1069  0000E2                     DecryptPacket_12BIT@classic_data:
  1070                           	callstack 0
  1071                           
  1072                           ; 2 bytes @ 0xA
  1073  0000E2                     	ds	1
  1074  0000E3                     controlSelectRemote@typeRemote:
  1075                           	callstack 0
  1076                           
  1077                           ; 1 bytes @ 0xB
  1078  0000E3                     	ds	1
  1079  0000E4                     ??_keeloqDecryptPacket:
  1080  0000E4                     DecryptPacket_12BIT@commandType:
  1081                           	callstack 0
  1082  0000E4                     actionZone_Opening@securityClosing:
  1083                           	callstack 0
  1084  0000E4                     controlSelectRemote@tempSerial:
  1085                           	callstack 0
  1086                           
  1087                           ; 4 bytes @ 0xC
  1088  0000E4                     	ds	1
  1089  0000E5                     actionZone_Opening@securityOpening:
  1090                           	callstack 0
  1091                           
  1092                           ; 1 bytes @ 0xD
  1093  0000E5                     	ds	1
  1094  0000E6                     actionZone_Opening@typeOpenOrder:
  1095                           	callstack 0
  1096                           
  1097                           ; 1 bytes @ 0xE
  1098  0000E6                     	ds	1
  1099  0000E7                     sm_execute_ControlGate@psm:
  1100                           	callstack 0
  1101                           
  1102                           ; 2 bytes @ 0xF
  1103  0000E7                     	ds	1
  1104  0000E8                     keeloqDecryptPacket@hop_error:
  1105                           	callstack 0
  1106  0000E8                     controlSelectRemote@temp:
  1107                           	callstack 0
  1108  0000E8                     eusartparser@i:
  1109                           	callstack 0
  1110                           
  1111                           ; 1 bytes @ 0x10
  1112  0000E8                     	ds	1
  1113  0000E9                     ??_sm_execute_ControlGate:
  1114  0000E9                     keeloqDecryptPacket@commandType:
  1115                           	callstack 0
  1116  0000E9                     eusartparser@i_7301:
  1117                           	callstack 0
  1118  0000E9                     sm_execute_menuConfiguration@psm:
  1119                           	callstack 0
  1120                           
  1121                           ; 2 bytes @ 0x11
  1122  0000E9                     	ds	1
  1123  0000EA                     eusartparser@i_7308:
  1124                           	callstack 0
  1125                           
  1126                           ; 1 bytes @ 0x12
  1127  0000EA                     	ds	1
  1128  0000EB                     ??_sm_execute_menuConfiguration:
  1129  0000EB                     sm_execute_ControlGate@typeOpenOrder:
  1130                           	callstack 0
  1131  0000EB                     eusartparser@i_7309:
  1132                           	callstack 0
  1133                           
  1134                           ; 1 bytes @ 0x13
  1135  0000EB                     	ds	1
  1136  0000EC                     eusartparser@pos:
  1137                           	callstack 0
  1138                           
  1139                           ; 1 bytes @ 0x14
  1140  0000EC                     	ds	1
  1141  0000ED                     eusartparser@i_7302:
  1142                           	callstack 0
  1143  0000ED                     sm_execute_main@psm:
  1144                           	callstack 0
  1145                           
  1146                           ; 2 bytes @ 0x15
  1147  0000ED                     	ds	1
  1148  0000EE                     eusartparser@i_7303:
  1149                           	callstack 0
  1150                           
  1151                           ; 1 bytes @ 0x16
  1152  0000EE                     	ds	1
  1153  0000EF                     ??_sm_execute_main:
  1154  0000EF                     eusartparser@i_7310:
  1155                           	callstack 0
  1156                           
  1157                           ; 1 bytes @ 0x17
  1158  0000EF                     	ds	1
  1159  0000F0                     eusartparser@i_7311:
  1160                           	callstack 0
  1161                           
  1162                           ; 1 bytes @ 0x18
  1163  0000F0                     	ds	1
  1164  0000F1                     eusartparser@i_7304:
  1165                           	callstack 0
  1166                           
  1167                           ; 1 bytes @ 0x19
  1168  0000F1                     	ds	1
  1169  0000F2                     eusartparser@i_7305:
  1170                           	callstack 0
  1171                           
  1172                           ; 1 bytes @ 0x1A
  1173  0000F2                     	ds	1
  1174  0000F3                     eusartparser@i_7306:
  1175                           	callstack 0
  1176                           
  1177                           ; 1 bytes @ 0x1B
  1178  0000F3                     	ds	1
  1179  0000F4                     eusartparser@i_7312:
  1180                           	callstack 0
  1181                           
  1182                           ; 1 bytes @ 0x1C
  1183  0000F4                     	ds	1
  1184  0000F5                     eusartparser@i_7313:
  1185                           	callstack 0
  1186                           
  1187                           ; 1 bytes @ 0x1D
  1188  0000F5                     	ds	1
  1189  0000F6                     eusartparser@i_7314:
  1190                           	callstack 0
  1191                           
  1192                           ; 1 bytes @ 0x1E
  1193  0000F6                     	ds	1
  1194  0000F7                     eusartparser@relcounter:
  1195                           	callstack 0
  1196                           
  1197                           ; 1 bytes @ 0x1F
  1198  0000F7                     	ds	1
  1199  0000F8                     eusartparser@serial:
  1200                           	callstack 0
  1201                           
  1202                           ; 4 bytes @ 0x20
  1203  0000F8                     	ds	4
  1204                           
  1205                           	psect	cstackCOMRAM
  1206  000001                     __pcstackCOMRAM:
  1207                           	callstack 0
  1208  000001                     ??_rxi:
  1209  000001                     ??i2_GetMotorPower:
  1210  000001                     ADCC_GetSingleConversion@channel:
  1211                           	callstack 0
  1212  000001                     Segments_Set@value:
  1213                           	callstack 0
  1214  000001                     i2VerifyElectricalBrake@tempState:
  1215                           	callstack 0
  1216  000001                     TMR1_WriteTimer@timerVal:
  1217                           	callstack 0
  1218  000001                     decrementTimeslot@ts:
  1219                           	callstack 0
  1220                           
  1221                           ; 2 bytes @ 0x0
  1222  000001                     	ds	1
  1223  000002                     ??_ReadADC:
  1224  000002                     i2VerifyElectricalBrake@actualState:
  1225                           	callstack 0
  1226                           
  1227                           ; 1 bytes @ 0x1
  1228  000002                     	ds	1
  1229  000003                     
  1230                           ; 1 bytes @ 0x2
  1231  000003                     	ds	1
  1232  000004                     i2GetMotorPower@defineatraso:
  1233                           	callstack 0
  1234                           
  1235                           ; 1 bytes @ 0x3
  1236  000004                     	ds	1
  1237  000005                     ??_controlMotorForce:
  1238  000005                     
  1239                           ; 1 bytes @ 0x4
  1240  000005                     	ds	5
  1241  00000A                     ??_INTERRUPT_InterruptManager:
  1242                           
  1243                           ; 1 bytes @ 0x9
  1244  00000A                     	ds	6
  1245  000010                     ??_GetMotorPower:
  1246  000010                     ??_SetSegmentValueLearn:
  1247  000010                     ?_sumEnergyADC:
  1248                           	callstack 0
  1249  000010                     ?_sm_get_current_state:
  1250                           	callstack 0
  1251  000010                     ?___wmul:
  1252                           	callstack 0
  1253  000010                     ?___lwdiv:
  1254                           	callstack 0
  1255  000010                     ?_calculateMean:
  1256                           	callstack 0
  1257  000010                     ?_sumHIST:
  1258                           	callstack 0
  1259  000010                     ?___lldiv:
  1260                           	callstack 0
  1261  000010                     EUSART1_Read@readValue:
  1262                           	callstack 0
  1263  000010                     EUSART1_Write@txData:
  1264                           	callstack 0
  1265  000010                     I2C1_Open@address:
  1266                           	callstack 0
  1267  000010                     I2C1_Close@returnValue:
  1268                           	callstack 0
  1269  000010                     I2C1_MasterSendTxData@data:
  1270                           	callstack 0
  1271  000010                     WWDT_TimerClear@state:
  1272                           	callstack 0
  1273  000010                     getKeyPressed@temp:
  1274                           	callstack 0
  1275  000010                     RGB_Set@value:
  1276                           	callstack 0
  1277  000010                     SetSegmentValueIntermitent@d2:
  1278                           	callstack 0
  1279  000010                     VerifyElectricalBrake@tempState:
  1280                           	callstack 0
  1281  000010                     VerifyFollowMe@securityClose:
  1282                           	callstack 0
  1283  000010                     ___lbdiv@divisor:
  1284                           	callstack 0
  1285  000010                     ___lbmod@divisor:
  1286                           	callstack 0
  1287  000010                     EUSART1_SetFramingErrorHandler@interruptHandler:
  1288                           	callstack 0
  1289  000010                     EUSART1_SetOverrunErrorHandler@interruptHandler:
  1290                           	callstack 0
  1291  000010                     EUSART1_SetErrorHandler@interruptHandler:
  1292                           	callstack 0
  1293  000010                     EUSART1_SetTxInterruptHandler@interruptHandler:
  1294                           	callstack 0
  1295  000010                     EUSART1_SetRxInterruptHandler@interruptHandler:
  1296                           	callstack 0
  1297  000010                     I2C1_SetBuffer@buffer:
  1298                           	callstack 0
  1299  000010                     I2C1_SetCallback@cb:
  1300                           	callstack 0
  1301  000010                     TMR0_SetInterruptHandler@InterruptHandler:
  1302                           	callstack 0
  1303  000010                     TMR1_SetInterruptHandler@InterruptHandler:
  1304                           	callstack 0
  1305  000010                     TMR2_SetInterruptHandler@InterruptHandler:
  1306                           	callstack 0
  1307  000010                     saveEnergyADCHist@valueToSave:
  1308                           	callstack 0
  1309  000010                     DecCHK@data:
  1310                           	callstack 0
  1311  000010                     ReqResync@CurrentHop:
  1312                           	callstack 0
  1313  000010                     verifyProgramingMode@classic_data:
  1314                           	callstack 0
  1315  000010                     setFlashLigth_ON@Freq:
  1316                           	callstack 0
  1317  000010                     sm_restart@psm:
  1318                           	callstack 0
  1319  000010                     sm_get_current_state@psm:
  1320                           	callstack 0
  1321  000010                     init_package@package:
  1322                           	callstack 0
  1323  000010                     ___wmul@multiplier:
  1324                           	callstack 0
  1325  000010                     ___lwdiv@dividend:
  1326                           	callstack 0
  1327  000010                     memcpy@d1:
  1328                           	callstack 0
  1329  000010                     calculateMean@meanValue:
  1330                           	callstack 0
  1331  000010                     ___lldiv@dividend:
  1332                           	callstack 0
  1333  000010                     write_eusartparser@package:
  1334                           	callstack 0
  1335                           
  1336                           ; 7 bytes @ 0xF
  1337  000010                     	ds	1
  1338  000011                     ?_read_package:
  1339                           	callstack 0
  1340  000011                     I2C1_Open@returnValue:
  1341                           	callstack 0
  1342  000011                     VerifyElectricalBrake@actualState:
  1343                           	callstack 0
  1344  000011                     ___lbdiv@dividend:
  1345                           	callstack 0
  1346  000011                     ___lbmod@dividend:
  1347                           	callstack 0
  1348  000011                     SetSegmentValueIntermitent@time:
  1349                           	callstack 0
  1350  000011                     setRGB_ON@Freq:
  1351                           	callstack 0
  1352  000011                     write_package@package:
  1353                           	callstack 0
  1354                           
  1355                           ; 7 bytes @ 0x10
  1356  000011                     	ds	1
  1357  000012                     ??_TMR1_Initialize:
  1358  000012                     ??_ControlMotor:
  1359  000012                     ??_sumEnergyADC:
  1360  000012                     ??_DecCHK:
  1361  000012                     SetSegmentValueLearn@direction:
  1362                           	callstack 0
  1363  000012                     ___lbdiv@counter:
  1364                           	callstack 0
  1365  000012                     ___lbmod@counter:
  1366                           	callstack 0
  1367  000012                     I2C1_SetBuffer@bufferSize:
  1368                           	callstack 0
  1369  000012                     I2C1_SetCallback@ptr:
  1370                           	callstack 0
  1371  000012                     sm_init@psm:
  1372                           	callstack 0
  1373  000012                     sm_send_event@psm:
  1374                           	callstack 0
  1375  000012                     confirmpackage@package:
  1376                           	callstack 0
  1377  000012                     ___wmul@multiplicand:
  1378                           	callstack 0
  1379  000012                     ___lwdiv@divisor:
  1380                           	callstack 0
  1381  000012                     memcpy@s1:
  1382                           	callstack 0
  1383                           
  1384                           ; 2 bytes @ 0x11
  1385  000012                     	ds	1
  1386  000013                     ??_setRGB_ON:
  1387  000013                     SetSegmentValueIntermitent@d1:
  1388                           	callstack 0
  1389  000013                     GetMotorPower@defineatraso:
  1390                           	callstack 0
  1391  000013                     ___lbdiv@quotient:
  1392                           	callstack 0
  1393  000013                     ___lbmod@rem:
  1394                           	callstack 0
  1395                           
  1396                           ; 1 bytes @ 0x12
  1397  000013                     	ds	1
  1398  000014                     ??_InitSoftStop:
  1399  000014                     ??_InitSoftStart:
  1400  000014                     ??_sumHIST:
  1401  000014                     ?___awdiv:
  1402                           	callstack 0
  1403  000014                     I2C1_SetCallback@idx:
  1404                           	callstack 0
  1405  000014                     confirmpackage@confirm:
  1406                           	callstack 0
  1407  000014                     ___lwdiv@counter:
  1408                           	callstack 0
  1409  000014                     sumEnergyADC@sumE:
  1410                           	callstack 0
  1411  000014                     sm_init@initial_state:
  1412                           	callstack 0
  1413  000014                     sm_send_event@event:
  1414                           	callstack 0
  1415  000014                     ___wmul@product:
  1416                           	callstack 0
  1417  000014                     ___awdiv@dividend:
  1418                           	callstack 0
  1419  000014                     memcpy@n:
  1420                           	callstack 0
  1421  000014                     calculateMean@newValue:
  1422                           	callstack 0
  1423  000014                     ___lldiv@divisor:
  1424                           	callstack 0
  1425                           
  1426                           ; 4 bytes @ 0x13
  1427  000014                     	ds	1
  1428  000015                     setRGB_ON@RGBLigth:
  1429                           	callstack 0
  1430  000015                     I2C1_SetDataCompleteCallback@cb:
  1431                           	callstack 0
  1432  000015                     I2C1_SetAddressNackCallback@cb:
  1433                           	callstack 0
  1434  000015                     ___lwdiv@quotient:
  1435                           	callstack 0
  1436                           
  1437                           ; 2 bytes @ 0x14
  1438  000015                     	ds	1
  1439  000016                     ?_getHopCode:
  1440                           	callstack 0
  1441  000016                     ?_getCurrentComparator:
  1442                           	callstack 0
  1443  000016                     sm_init@hist_mode:
  1444                           	callstack 0
  1445  000016                     memcpy@tmp:
  1446                           	callstack 0
  1447  000016                     sumEnergyADC@auxValue:
  1448                           	callstack 0
  1449  000016                     getHopCode@data:
  1450                           	callstack 0
  1451  000016                     ___awdiv@divisor:
  1452                           	callstack 0
  1453                           
  1454                           ; 2 bytes @ 0x15
  1455  000016                     	ds	1
  1456  000017                     ??_write_eusartparser:
  1457  000017                     refreshADCZeroOffset@i:
  1458                           	callstack 0
  1459  000017                     I2C1_SetDataCompleteCallback@ptr:
  1460                           	callstack 0
  1461  000017                     I2C1_SetAddressNackCallback@ptr:
  1462                           	callstack 0
  1463  000017                     memcpy@d:
  1464                           	callstack 0
  1465                           
  1466                           ; 2 bytes @ 0x16
  1467  000017                     	ds	1
  1468  000018                     ??_getHopCode:
  1469  000018                     ??_calculateMean:
  1470  000018                     ??_OpenWalkOrder:
  1471  000018                     sumEnergyADC@i:
  1472                           	callstack 0
  1473  000018                     ControlMotor@stateMotor:
  1474                           	callstack 0
  1475  000018                     ___awdiv@counter:
  1476                           	callstack 0
  1477  000018                     refreshADCZeroOffset@media:
  1478                           	callstack 0
  1479  000018                     sumHIST@max:
  1480                           	callstack 0
  1481  000018                     read_eusartparser@package:
  1482                           	callstack 0
  1483  000018                     ___lldiv@quotient:
  1484                           	callstack 0
  1485  000018                     read_package@package:
  1486                           	callstack 0
  1487                           
  1488                           ; 7 bytes @ 0x17
  1489  000018                     	ds	1
  1490  000019                     ___awdiv@sign:
  1491                           	callstack 0
  1492  000019                     wr1RegCompleteHandler@p:
  1493                           	callstack 0
  1494  000019                     rd1RegCompleteHandler@p:
  1495                           	callstack 0
  1496  000019                     rd2RegCompleteHandler@p:
  1497                           	callstack 0
  1498  000019                     wr2RegCompleteHandler@p:
  1499                           	callstack 0
  1500  000019                     rdBlkRegCompleteHandler@p:
  1501                           	callstack 0
  1502  000019                     rd1RegCompleteHandler@i2c1_master_example$F500@ptr:
  1503                           	callstack 0
  1504  000019                     rd2RegCompleteHandler@i2c1_master_example$F511@ptr:
  1505                           	callstack 0
  1506  000019                     wr1RegCompleteHandler@i2c1_master_example$F517@ptr:
  1507                           	callstack 0
  1508  000019                     wr2RegCompleteHandler@i2c1_master_example$F523@ptr:
  1509                           	callstack 0
  1510  000019                     rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr:
  1511                           	callstack 0
  1512  000019                     I2C1_CallbackReturnReset@funPtr:
  1513                           	callstack 0
  1514  000019                     memcpy@s:
  1515                           	callstack 0
  1516                           
  1517                           ; 2 bytes @ 0x18
  1518  000019                     	ds	1
  1519  00001A                     ??_getCurrentComparator:
  1520  00001A                     ??_read_eusartparser:
  1521  00001A                     sumHIST@min:
  1522                           	callstack 0
  1523  00001A                     OpenWalkOrder@diffTime:
  1524                           	callstack 0
  1525  00001A                     ___awdiv@quotient:
  1526                           	callstack 0
  1527                           
  1528                           ; 2 bytes @ 0x19
  1529  00001A                     	ds	1
  1530  00001B                     ??_I2C1_DO_TX:
  1531  00001B                     ??_I2C1_DO_RX:
  1532  00001B                     ??_I2C1_DO_TX_EMPTY:
  1533  00001B                     ??_I2C1_DO_ADDRESS_NACK:
  1534  00001B                     getSerialCmd@serial:
  1535                           	callstack 0
  1536  00001B                     Decrypt@packet:
  1537                           	callstack 0
  1538                           
  1539                           ; 2 bytes @ 0x1A
  1540  00001B                     	ds	1
  1541  00001C                     getSerialCmd@temp:
  1542                           	callstack 0
  1543  00001C                     SetSegmentValueMain@d2:
  1544                           	callstack 0
  1545  00001C                     SetSegmentValue@d2:
  1546                           	callstack 0
  1547  00001C                     SetSegmentValueIntermitentMain@d2:
  1548                           	callstack 0
  1549  00001C                     ___lldiv@counter:
  1550                           	callstack 0
  1551  00001C                     sumHIST@sumH:
  1552                           	callstack 0
  1553                           
  1554                           ; 4 bytes @ 0x1B
  1555  00001C                     	ds	1
  1556  00001D                     ??_I2C1_MasterFsm:
  1557  00001D                     ?___lmul:
  1558                           	callstack 0
  1559  00001D                     Decrypt@key:
  1560                           	callstack 0
  1561  00001D                     SetSegmentValueMain@d1:
  1562                           	callstack 0
  1563  00001D                     SetSegmentValue@d1:
  1564                           	callstack 0
  1565  00001D                     SetSegmentValueIntermitentMain@time:
  1566                           	callstack 0
  1567  00001D                     ___lmul@multiplier:
  1568                           	callstack 0
  1569                           
  1570                           ; 4 bytes @ 0x1C
  1571  00001D                     	ds	1
  1572  00001E                     Decrypt@i:
  1573                           	callstack 0
  1574                           
  1575                           ; 1 bytes @ 0x1D
  1576  00001E                     	ds	1
  1577  00001F                     Decrypt@j:
  1578                           	callstack 0
  1579  00001F                     SetSegmentValueIntermitentMain@d1:
  1580                           	callstack 0
  1581  00001F                     write_eusartparser@debug:
  1582                           	callstack 0
  1583                           
  1584                           ; 2 bytes @ 0x1E
  1585  00001F                     	ds	1
  1586  000020                     ??_load_New_Menu:
  1587  000020                     ??_controlSaveRemote:
  1588  000020                     I2C1_MasterOperation@read:
  1589                           	callstack 0
  1590  000020                     sumHIST@i:
  1591                           	callstack 0
  1592  000020                     Decrypt@p:
  1593                           	callstack 0
  1594  000020                     actionZone_Closed@securityOpening:
  1595                           	callstack 0
  1596  000020                     actionZone_Opened@securityClosing:
  1597                           	callstack 0
  1598  000020                     getCurrentComparator@tempOffset:
  1599                           	callstack 0
  1600  000020                     getHopCode@tempHop:
  1601                           	callstack 0
  1602                           
  1603                           ; 2 bytes @ 0x1F
  1604  000020                     	ds	1
  1605  000021                     I2C1_MasterOperation@returnValue:
  1606                           	callstack 0
  1607  000021                     Decrypt@aux:
  1608                           	callstack 0
  1609  000021                     actionZone_Closed@typeOpenOrder:
  1610                           	callstack 0
  1611  000021                     actionZone_Opened@typeOpenOrder:
  1612                           	callstack 0
  1613  000021                     write_eusartparser@debug2:
  1614                           	callstack 0
  1615  000021                     ___lmul@multiplicand:
  1616                           	callstack 0
  1617                           
  1618                           ; 4 bytes @ 0x20
  1619  000021                     	ds	1
  1620  000022                     I2C1_Read1ByteRegister@reg:
  1621                           	callstack 0
  1622  000022                     getCurrentComparator@x:
  1623                           	callstack 0
  1624  000022                     getHopCode@tempPos:
  1625                           	callstack 0
  1626  000022                     load_New_Menu@Menu:
  1627                           	callstack 0
  1628  000022                     i2c_writeNBytes@reg:
  1629                           	callstack 0
  1630  000022                     i2c_readDataBlock@reg:
  1631                           	callstack 0
  1632  000022                     Decrypt@Buffer:
  1633                           	callstack 0
  1634                           
  1635                           ; 4 bytes @ 0x21
  1636  000022                     	ds	1
  1637  000023                     ??_ControlCurrent:
  1638  000023                     I2C1_Read1ByteRegister@address:
  1639                           	callstack 0
  1640  000023                     getHopCode@i:
  1641                           	callstack 0
  1642  000023                     load_New_Menu@i:
  1643                           	callstack 0
  1644                           
  1645                           ; 1 bytes @ 0x22
  1646  000023                     	ds	1
  1647  000024                     i2c_writeNBytes@data:
  1648                           	callstack 0
  1649  000024                     I2C1_Read1ByteRegister@returnValue:
  1650                           	callstack 0
  1651  000024                     i2c_readDataBlock@data:
  1652                           	callstack 0
  1653  000024                     HopCHK@data:
  1654                           	callstack 0
  1655                           
  1656                           ; 2 bytes @ 0x23
  1657  000024                     	ds	1
  1658  000025                     i2c_writeNBytes@len:
  1659                           	callstack 0
  1660  000025                     ___lmul@product:
  1661                           	callstack 0
  1662                           
  1663                           ; 4 bytes @ 0x24
  1664  000025                     	ds	1
  1665  000026                     i2c_readDataBlock@len:
  1666                           	callstack 0
  1667  000026                     NormalKeyGen@serial:
  1668                           	callstack 0
  1669  000026                     HopCHK@hopDiff:
  1670                           	callstack 0
  1671                           
  1672                           ; 2 bytes @ 0x25
  1673  000026                     	ds	1
  1674  000027                     ??_i2c_writeNBytes:
  1675                           
  1676                           ; 1 bytes @ 0x26
  1677  000027                     	ds	1
  1678  000028                     ??_i2c_readDataBlock:
  1679  000028                     NormalKeyGen@HOPtemp:
  1680                           	callstack 0
  1681  000028                     i2c_writeNBytes@dat:
  1682                           	callstack 0
  1683                           
  1684                           ; 17 bytes @ 0x27
  1685  000028                     	ds	1
  1686  000029                     ?_getTimeDecelaration:
  1687                           	callstack 0
  1688  000029                     i2c_readDataBlock@address:
  1689                           	callstack 0
  1690                           
  1691                           ; 1 bytes @ 0x28
  1692  000029                     	ds	1
  1693  00002A                     i2c_readDataBlock@d:
  1694                           	callstack 0
  1695                           
  1696                           ; 4 bytes @ 0x29
  1697  00002A                     	ds	2
  1698  00002C                     NormalKeyGen@SKEYtemp:
  1699                           	callstack 0
  1700                           
  1701                           ; 4 bytes @ 0x2B
  1702  00002C                     	ds	1
  1703  00002D                     ??_getTimeDecelaration:
  1704                           
  1705                           ; 1 bytes @ 0x2C
  1706  00002D                     	ds	1
  1707  00002E                     ReadSerial@tempSerial:
  1708                           	callstack 0
  1709  00002E                     cmdMemoryIsEmpty@position:
  1710                           	callstack 0
  1711  00002E                     validateRemoteSerialNumber@serial:
  1712                           	callstack 0
  1713                           
  1714                           ; 4 bytes @ 0x2D
  1715  00002E                     	ds	1
  1716  00002F                     ??_cmdMemoryIsEmpty:
  1717  00002F                     ReadSerial@position:
  1718                           	callstack 0
  1719                           
  1720                           ; 1 bytes @ 0x2E
  1721  00002F                     	ds	1
  1722  000030                     ??_ReadSerial:
  1723  000030                     NormalKeyGen@Buffer:
  1724                           	callstack 0
  1725                           
  1726                           ; 8 bytes @ 0x2F
  1727  000030                     	ds	1
  1728  000031                     cmdMemoryIsEmpty@cmdType:
  1729                           	callstack 0
  1730  000031                     getTimeDecelaration@state:
  1731                           	callstack 0
  1732                           
  1733                           ; 1 bytes @ 0x30
  1734  000031                     	ds	1
  1735  000032                     ??_setPositionInvertionInOpening:
  1736  000032                     ??_getStateOpenPosition:
  1737  000032                     validateRemoteSerialNumber@VerifyOnlySerial:
  1738                           	callstack 0
  1739  000032                     ReadSerial@cmdType:
  1740                           	callstack 0
  1741  000032                     actionZone_Closing@securityClosing:
  1742                           	callstack 0
  1743  000032                     cmdMemoryIsEmpty@tempSerial:
  1744                           	callstack 0
  1745                           
  1746                           ; 4 bytes @ 0x31
  1747  000032                     	ds	1
  1748  000033                     actionZone_Closing@typeOpenOrder:
  1749                           	callstack 0
  1750  000033                     validateRemoteSerialNumber@position:
  1751                           	callstack 0
  1752                           
  1753                           ; 2 bytes @ 0x32
  1754  000033                     	ds	2
  1755  000035                     validateRemoteSerialNumber@mask:
  1756                           	callstack 0
  1757                           
  1758                           ; 4 bytes @ 0x34
  1759  000035                     	ds	3
  1760  000038                     keeloq_classic_decrypt_packet@data:
  1761                           	callstack 0
  1762                           
  1763                           ; 2 bytes @ 0x37
  1764  000038                     	ds	1
  1765  000039                     i2c_writeNBytes@address:
  1766                           	callstack 0
  1767  000039                     validateRemoteSerialNumber@j:
  1768                           	callstack 0
  1769                           
  1770                           ; 1 bytes @ 0x38
  1771  000039                     	ds	1
  1772  00003A                     validateRemoteSerialNumber@i:
  1773                           	callstack 0
  1774  00003A                     saveNewSerial@cmdType:
  1775                           	callstack 0
  1776  00003A                     RemoveSerial@position:
  1777                           	callstack 0
  1778  00003A                     ResetDefaultMemory@type:
  1779                           	callstack 0
  1780  00003A                     checkNVM_VarSystem@saveParam:
  1781                           	callstack 0
  1782  00003A                     sm_execute_ControlLearning@typeOpenOrder:
  1783                           	callstack 0
  1784  00003A                     setValueToEdit@ParameterSelected:
  1785                           	callstack 0
  1786                           
  1787                           ; 1 bytes @ 0x39
  1788  00003A                     	ds	1
  1789  00003B                     
  1790                           ; 1 bytes @ 0x3A
  1791 ;;
  1792 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1793 ;;
  1794 ;; *************** function _main *****************
  1795 ;; Defined at:
  1796 ;;		line 63 in file "main_MC50.c"
  1797 ;; Parameters:    Size  Location     Type
  1798 ;;		None
  1799 ;; Auto vars:     Size  Location     Type
  1800 ;;  package         7    0[BANK2 ] struct package_t
  1801 ;; Return value:  Size  Location     Type
  1802 ;;                  1    wreg      void 
  1803 ;; Registers used:
  1804 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  1805 ;; Tracked objects:
  1806 ;;		On entry : 0/0
  1807 ;;		On exit  : 3F/1
  1808 ;;		Unchanged: 0/0
  1809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1811 ;;      Locals:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1813 ;;      Totals:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1814 ;;Total ram usage:        7 bytes
  1815 ;; Hardware stack levels required when called: 17
  1816 ;; This function calls:
  1817 ;;		_ControlCounterMoves
  1818 ;;		_ControlCurrent
  1819 ;;		_ControlInputs
  1820 ;;		_ControlLights
  1821 ;;		_ControlMotor
  1822 ;;		_EUSART1_is_rx_ready
  1823 ;;		_InitReceiver
  1824 ;;		_SYSTEM_Initialize
  1825 ;;		_SetSegmentValue
  1826 ;;		_ShowVersion
  1827 ;;		_WWDT_SoftEnable
  1828 ;;		_WWDT_TimerClear
  1829 ;;		_controlVelocity
  1830 ;;		_eusartparser
  1831 ;;		_getKeyPressed
  1832 ;;		_loadNVM_VarSystem
  1833 ;;		_readInputs
  1834 ;;		_readRFButtons
  1835 ;;		_read_package
  1836 ;;		_readbutton
  1837 ;;		_sm_execute_ControlGate
  1838 ;;		_sm_execute_main
  1839 ;;		_sm_init
  1840 ;; This function is called by:
  1841 ;;		Startup code after reset
  1842 ;; This function uses a non-reentrant model
  1843 ;;
  1844                           
  1845                           	psect	text0
  1846  0066A4                     __ptext0:
  1847                           	callstack 0
  1848  0066A4                     _main:
  1849                           	callstack 14
  1850                           
  1851                           ;main_MC50.c: 70:     dispStruct.display_grp.value_display1=dMinus;
  1852                           
  1853                           ;incstack = 0
  1854  0066A4  0E18               	movlw	24
  1855  0066A6  0100               	movlb	0	; () banked
  1856  0066A8  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  1857                           
  1858                           ;main_MC50.c: 71:     dispStruct.display_grp.value_display1=dMinus;
  1859  0066AA  0E18               	movlw	24
  1860  0066AC  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  1861                           
  1862                           ;main_MC50.c: 72:     dispStruct.intermitentFreq=0;
  1863  0066AE  0E00               	movlw	0
  1864  0066B0  6F76               	movwf	(_dispStruct+4)& (0+255),b	;volatile
  1865  0066B2  0E00               	movlw	0
  1866  0066B4  6F75               	movwf	(_dispStruct+3)& (0+255),b	;volatile
  1867                           
  1868                           ;main_MC50.c: 73:     dispStruct.upFase=1;
  1869  0066B6  0E01               	movlw	1
  1870  0066B8  6F77               	movwf	(_dispStruct+5)& (0+255),b	;volatile
  1871                           
  1872                           ; BSR set to: 0
  1873                           ;main_MC50.c: 76:     SYSTEM_Initialize();
  1874  0066BA  EC7C  F04A         	call	_SYSTEM_Initialize	;wreg free
  1875                           
  1876                           ; BSR set to: 14
  1877                           ;main_MC50.c: 77:     WWDT_SoftEnable();
  1878  0066BE  EC3B  F04E         	call	_WWDT_SoftEnable	;wreg free
  1879                           
  1880                           ; BSR set to: 14
  1881                           ;main_MC50.c: 80:       (INTCONbits.GIE = 1);
  1882  0066C2  8EF2               	bsf	242,7,c	;volatile
  1883                           
  1884                           ; BSR set to: 14
  1885                           ;main_MC50.c: 83:      (INTCONbits.PEIE = 1);
  1886  0066C4  8CF2               	bsf	242,6,c	;volatile
  1887                           
  1888                           ; BSR set to: 14
  1889                           ;main_MC50.c: 86:     IOCBP3=1;
  1890  0066C6  010F               	movlb	15	; () banked
  1891  0066C8  8714               	bsf	20,3,b	;volatile
  1892                           
  1893                           ; BSR set to: 15
  1894                           ;main_MC50.c: 87:     IOCBN3=1;
  1895  0066CA  8713               	bsf	19,3,b	;volatile
  1896                           
  1897                           ; BSR set to: 15
  1898                           ;main_MC50.c: 94:     InitReceiver();
  1899  0066CC  ECC6  F04C         	call	_InitReceiver	;wreg free
  1900                           
  1901                           ; BSR set to: 0
  1902                           ;main_MC50.c: 95:     loadNVM_VarSystem();
  1903  0066D0  EC0E  F036         	call	_loadNVM_VarSystem	;wreg free
  1904                           
  1905                           ;main_MC50.c: 97:     WWDT_TimerClear();
  1906  0066D4  EC9C  F04C         	call	_WWDT_TimerClear	;wreg free
  1907                           
  1908                           ;main_MC50.c: 99:     SetSegmentValue(dMinus,dMinus);
  1909  0066D8  0E18               	movlw	24
  1910  0066DA  6E1C               	movwf	SetSegmentValue@d2^0,c
  1911  0066DC  0E18               	movlw	24
  1912  0066DE  ECED  F04C         	call	_SetSegmentValue
  1913                           
  1914                           ; BSR set to: 0
  1915                           ;main_MC50.c: 100:     ts_system.ts_TimeSlot1ms = ( 100/50);
  1916  0066E2  0E02               	movlw	2
  1917  0066E4  0101               	movlb	1	; () banked
  1918  0066E6  6FA1               	movwf	(_ts_system+2)& (0+255),b	;volatile
  1919                           
  1920                           ;main_MC50.c: 101:     while ( ts_system.ts_TimeSlot1ms > 0 )
  1921  0066E8  D00B               	goto	l27789
  1922  0066EA                     l27779:
  1923                           
  1924                           ; BSR set to: 1
  1925                           ;main_MC50.c: 102:     {;main_MC50.c: 103:         if ( ts_system.ts_TimeSlotMain<=0 )
  1926  0066EA  51A2               	movf	(_ts_system+3)& (0+255),w,b	;volatile
  1927  0066EC  A4D8               	btfss	status,2,c
  1928  0066EE  D008               	goto	l27789
  1929                           
  1930                           ; BSR set to: 1
  1931                           ;main_MC50.c: 104:         {;main_MC50.c: 105:             WWDT_TimerClear();
  1932  0066F0  EC9C  F04C         	call	_WWDT_TimerClear	;wreg free
  1933                           
  1934                           ;main_MC50.c: 106:             ts_system.ts_TimeSlotMain = 50;
  1935  0066F4  0E32               	movlw	50
  1936  0066F6  0101               	movlb	1	; () banked
  1937  0066F8  6FA2               	movwf	(_ts_system+3)& (0+255),b	;volatile
  1938                           
  1939                           ; BSR set to: 1
  1940                           ;main_MC50.c: 108:             ts_system.ts_TimeSlot1ms--;
  1941  0066FA  07A1               	decf	(_ts_system+2)& (0+255),f,b	;volatile
  1942                           
  1943                           ; BSR set to: 1
  1944                           ;main_MC50.c: 109:             readInputs();
  1945  0066FC  ECDA  F038         	call	_readInputs	;wreg free
  1946  006700                     l27789:
  1947                           
  1948                           ;main_MC50.c: 101:     while ( ts_system.ts_TimeSlot1ms > 0 )
  1949  006700  0101               	movlb	1	; () banked
  1950  006702  51A1               	movf	(_ts_system+2)& (0+255),w,b	;volatile
  1951  006704  A4D8               	btfss	status,2,c
  1952  006706  D7F1               	goto	l27779
  1953                           
  1954                           ; BSR set to: 1
  1955                           ;main_MC50.c: 117:     sm_init(&menuConfiguration_stateMachine,st_MainMenu,HIST_NONE);
  1956  006708  0EBB               	movlw	low _menuConfiguration_stateMachine
  1957  00670A  6E12               	movwf	sm_init@psm^0,c
  1958  00670C  0E02               	movlw	high _menuConfiguration_stateMachine
  1959  00670E  6E13               	movwf	(sm_init@psm+1)^0,c
  1960  006710  0E00               	movlw	0
  1961  006712  6E15               	movwf	(sm_init@initial_state+1)^0,c
  1962  006714  0E00               	movlw	0
  1963  006716  6E14               	movwf	sm_init@initial_state^0,c
  1964  006718  0E00               	movlw	0
  1965  00671A  6E16               	movwf	sm_init@hist_mode^0,c
  1966  00671C  ECE5  F046         	call	_sm_init	;wreg free
  1967                           
  1968                           ;main_MC50.c: 118:     sm_init(&main_stateMachine,st_standBy,HIST_NONE);
  1969  006720  0EF2               	movlw	low _main_stateMachine
  1970  006722  6E12               	movwf	sm_init@psm^0,c
  1971  006724  0E01               	movlw	high _main_stateMachine
  1972  006726  6E13               	movwf	(sm_init@psm+1)^0,c
  1973  006728  0E00               	movlw	0
  1974  00672A  6E15               	movwf	(sm_init@initial_state+1)^0,c
  1975  00672C  0E00               	movlw	0
  1976  00672E  6E14               	movwf	sm_init@initial_state^0,c
  1977  006730  0E00               	movlw	0
  1978  006732  6E16               	movwf	sm_init@hist_mode^0,c
  1979  006734  ECE5  F046         	call	_sm_init	;wreg free
  1980                           
  1981                           ;main_MC50.c: 119:     sm_init(&controlGate_stateMachine,st_Idle,HIST_NONE);
  1982  006738  0EE7               	movlw	low _controlGate_stateMachine
  1983  00673A  6E12               	movwf	sm_init@psm^0,c
  1984  00673C  0E01               	movlw	high _controlGate_stateMachine
  1985  00673E  6E13               	movwf	(sm_init@psm+1)^0,c
  1986  006740  0E00               	movlw	0
  1987  006742  6E15               	movwf	(sm_init@initial_state+1)^0,c
  1988  006744  0E00               	movlw	0
  1989  006746  6E14               	movwf	sm_init@initial_state^0,c
  1990  006748  0E00               	movlw	0
  1991  00674A  6E16               	movwf	sm_init@hist_mode^0,c
  1992  00674C  ECE5  F046         	call	_sm_init	;wreg free
  1993                           
  1994                           ;main_MC50.c: 120:     sm_init(&controlLearning_stateMachine,st_InitLearning,HIST_NONE);
  1995  006750  0EB0               	movlw	low _controlLearning_stateMachine
  1996  006752  6E12               	movwf	sm_init@psm^0,c
  1997  006754  0E02               	movlw	high _controlLearning_stateMachine
  1998  006756  6E13               	movwf	(sm_init@psm+1)^0,c
  1999  006758  0E00               	movlw	0
  2000  00675A  6E15               	movwf	(sm_init@initial_state+1)^0,c
  2001  00675C  0E00               	movlw	0
  2002  00675E  6E14               	movwf	sm_init@initial_state^0,c
  2003  006760  0E00               	movlw	0
  2004  006762  6E16               	movwf	sm_init@hist_mode^0,c
  2005  006764  ECE5  F046         	call	_sm_init	;wreg free
  2006                           
  2007                           ;main_MC50.c: 122:     ts_system.Debug_TS=(1000/50);
  2008  006768  0E00               	movlw	0
  2009  00676A  0101               	movlb	1	; () banked
  2010  00676C  6FA8               	movwf	(_ts_system+9)& (0+255),b	;volatile
  2011  00676E  0E14               	movlw	20
  2012  006770  6FA7               	movwf	(_ts_system+8)& (0+255),b	;volatile
  2013                           
  2014                           ; BSR set to: 1
  2015                           ;main_MC50.c: 124:     var_sys.ADCZeroOffset = 510;
  2016  006772  0E01               	movlw	1
  2017  006774  6F4C               	movwf	(_var_sys+76)& (0+255),b	;volatile
  2018  006776  0EFE               	movlw	254
  2019  006778  6F4B               	movwf	(_var_sys+75)& (0+255),b	;volatile
  2020                           
  2021                           ; BSR set to: 1
  2022                           ;main_MC50.c: 125:     ts_system.TimeStopADCZeroOffsetCalc = (5*(1000/50));
  2023  00677A  0E00               	movlw	0
  2024  00677C  6FDE               	movwf	(_ts_system+63)& (0+255),b	;volatile
  2025  00677E  0E64               	movlw	100
  2026  006780  6FDD               	movwf	(_ts_system+62)& (0+255),b	;volatile
  2027                           
  2028                           ; BSR set to: 1
  2029                           ;main_MC50.c: 126:     ts_system.TimeStopElectricBrake = 0;
  2030  006782  0E00               	movlw	0
  2031  006784  6FE0               	movwf	(_ts_system+65)& (0+255),b	;volatile
  2032  006786  0E00               	movlw	0
  2033  006788  6FDF               	movwf	(_ts_system+64)& (0+255),b	;volatile
  2034                           
  2035                           ; BSR set to: 1
  2036                           ;main_MC50.c: 129:     var_sys.StateMotor = Stopped;
  2037  00678A  0E00               	movlw	0
  2038  00678C  6F00               	movwf	_var_sys& (0+255),b	;volatile
  2039  00678E                     l27803:
  2040                           
  2041                           ;main_MC50.c: 136:     {;main_MC50.c: 140:         struct package_t package;;main_MC50.c
      +                          : 141:         if(EUSART1_is_rx_ready()){
  2042  00678E  EC8B  F04D         	call	_EUSART1_is_rx_ready	;wreg free
  2043  006792  0900               	iorlw	0
  2044  006794  B4D8               	btfsc	status,2,c
  2045  006796  D010               	goto	l27809
  2046                           
  2047                           ; BSR set to: 0
  2048                           ;main_MC50.c: 142:             package=read_package();
  2049  006798  ECB9  F047         	call	_read_package	;wreg free
  2050  00679C  EE22  F0ED         	lfsr	2,main@package
  2051  0067A0  0E06               	movlw	6
  2052  0067A2                     u33871:
  2053  0067A2  CFEB FFDB          	movff	plusw0,plusw2
  2054  0067A6  06E8               	decf	wreg,f,c
  2055  0067A8  E2FC               	bc	u33871
  2056                           
  2057                           ; BSR set to: 14
  2058                           ;main_MC50.c: 143:             eusartparser(&package);
  2059  0067AA  0EED               	movlw	low main@package
  2060  0067AC  0100               	movlb	0	; () banked
  2061  0067AE  6FE0               	movwf	eusartparser@package& (0+255),b
  2062  0067B0  0E02               	movlw	high main@package
  2063  0067B2  6FE1               	movwf	(eusartparser@package+1)& (0+255),b
  2064  0067B4  EC43  F00C         	call	_eusartparser	;wreg free
  2065  0067B8                     l27809:
  2066                           
  2067                           ;main_MC50.c: 147:         if ( ts_system.ts_TimeSlotMain<=0 )
  2068  0067B8  0101               	movlb	1	; () banked
  2069  0067BA  51A2               	movf	(_ts_system+3)& (0+255),w,b	;volatile
  2070  0067BC  A4D8               	btfss	status,2,c
  2071  0067BE  D7E7               	goto	l27803
  2072                           
  2073                           ; BSR set to: 1
  2074                           ;main_MC50.c: 148:         {;main_MC50.c: 149:              ts_system.ts_TimeSlotMain = 
      +                          50;
  2075  0067C0  0E32               	movlw	50
  2076  0067C2  6FA2               	movwf	(_ts_system+3)& (0+255),b	;volatile
  2077                           
  2078                           ; BSR set to: 1
  2079                           ;main_MC50.c: 150:             WWDT_TimerClear();
  2080  0067C4  EC9C  F04C         	call	_WWDT_TimerClear	;wreg free
  2081                           
  2082                           ;main_MC50.c: 152:             if(var_sys.StateVersion<4)
  2083  0067C8  0E04               	movlw	4
  2084  0067CA  0101               	movlb	1	; () banked
  2085  0067CC  6149               	cpfslt	(_var_sys+73)& (0+255),b	;volatile
  2086  0067CE  D003               	goto	l27819
  2087                           
  2088                           ; BSR set to: 1
  2089                           ;main_MC50.c: 154:             {;main_MC50.c: 155:                 ShowVersion();
  2090  0067D0  EC42  F045         	call	_ShowVersion	;wreg free
  2091                           
  2092                           ;main_MC50.c: 156:             }
  2093  0067D4  D7DC               	goto	l27803
  2094  0067D6                     l27819:
  2095                           
  2096                           ; BSR set to: 1
  2097                           ;main_MC50.c: 158:             {;main_MC50.c: 160:                 readbutton();
  2098  0067D6  ECD8  F044         	call	_readbutton	;wreg free
  2099                           
  2100                           ; BSR set to: 1
  2101                           ;main_MC50.c: 162:                 readRFButtons();
  2102  0067DA  ECC2  F031         	call	_readRFButtons	;wreg free
  2103                           
  2104                           ;main_MC50.c: 163:                lastKey=getKeyPressed();
  2105  0067DE  EC13  F04D         	call	_getKeyPressed	;wreg free
  2106  0067E2  0101               	movlb	1	; () banked
  2107  0067E4  6F99               	movwf	_lastKey& (0+255),b
  2108                           
  2109                           ; BSR set to: 1
  2110                           ;main_MC50.c: 165:                 readInputs();
  2111  0067E6  ECDA  F038         	call	_readInputs	;wreg free
  2112                           
  2113                           ;main_MC50.c: 166:                 ControlInputs();
  2114  0067EA  EC39  F037         	call	_ControlInputs	;wreg free
  2115                           
  2116                           ;main_MC50.c: 167:                 ControlCurrent();
  2117  0067EE  EC16  F034         	call	_ControlCurrent	;wreg free
  2118                           
  2119                           ;main_MC50.c: 168:                 controlVelocity();
  2120  0067F2  ECB7  F02A         	call	_controlVelocity	;wreg free
  2121                           
  2122                           ;main_MC50.c: 169:                 ControlMotor();
  2123  0067F6  EC81  F028         	call	_ControlMotor	;wreg free
  2124                           
  2125                           ;main_MC50.c: 170:                 ControlLights();
  2126  0067FA  ECC9  F021         	call	_ControlLights	;wreg free
  2127                           
  2128                           ;main_MC50.c: 171:                 ControlCounterMoves();
  2129  0067FE  EC8C  F046         	call	_ControlCounterMoves	;wreg free
  2130                           
  2131                           ;main_MC50.c: 173:                 sm_execute_main(&main_stateMachine);
  2132  006802  0EF2               	movlw	low _main_stateMachine
  2133  006804  0100               	movlb	0	; () banked
  2134  006806  6FED               	movwf	sm_execute_main@psm& (0+255),b
  2135  006808  0E01               	movlw	high _main_stateMachine
  2136  00680A  6FEE               	movwf	(sm_execute_main@psm+1)& (0+255),b
  2137  00680C  ECAE  F019         	call	_sm_execute_main	;wreg free
  2138                           
  2139                           ;main_MC50.c: 174:                 sm_execute_ControlGate(&controlGate_stateMachine);
  2140  006810  0EE7               	movlw	low _controlGate_stateMachine
  2141  006812  0100               	movlb	0	; () banked
  2142  006814  6FE7               	movwf	sm_execute_ControlGate@psm& (0+255),b
  2143  006816  0E01               	movlw	high _controlGate_stateMachine
  2144  006818  6FE8               	movwf	(sm_execute_ControlGate@psm+1)& (0+255),b
  2145  00681A  EC24  F020         	call	_sm_execute_ControlGate	;wreg free
  2146                           
  2147                           ;main_MC50.c: 177:                 if(lastKey!=0xff)
  2148  00681E  0101               	movlb	1	; () banked
  2149  006820  2999               	incf	_lastKey& (0+255),w,b
  2150  006822  B4D8               	btfsc	status,2,c
  2151  006824  D7B4               	goto	l27803
  2152                           
  2153                           ; BSR set to: 1
  2154                           ;main_MC50.c: 178:                 {;main_MC50.c: 180:                       InitReceive
      +                          r();
  2155  006826  ECC6  F04C         	call	_InitReceiver	;wreg free
  2156                           
  2157                           ; BSR set to: 1
  2158                           
  2159                           ;main_MC50.c: 185:         }
  2160  00682A  D7B1               	goto	l27803
  2161  00682C                     __end_of_main:
  2162                           	callstack 0
  2163                           
  2164 ;; *************** function _sm_execute_main *****************
  2165 ;; Defined at:
  2166 ;;		line 26 in file "sm_Main_MC50.c"
  2167 ;; Parameters:    Size  Location     Type
  2168 ;;  psm             2   21[BANK0 ] PTR struct .
  2169 ;;		 -> main_stateMachine(11), 
  2170 ;; Auto vars:     Size  Location     Type
  2171 ;;		None
  2172 ;; Return value:  Size  Location     Type
  2173 ;;                  1    wreg      void 
  2174 ;; Registers used:
  2175 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2176 ;; Tracked objects:
  2177 ;;		On entry : 3F/0
  2178 ;;		On exit  : 0/0
  2179 ;;		Unchanged: 0/0
  2180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2181 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2183 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2184 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2185 ;;Total ram usage:        4 bytes
  2186 ;; Hardware stack levels used: 1
  2187 ;; Hardware stack levels required when called: 16
  2188 ;; This function calls:
  2189 ;;		_SetSegmentValueIntermitentMain
  2190 ;;		_SetSegmentValueMain
  2191 ;;		_load_New_Menu
  2192 ;;		_sm_execute_menuConfiguration
  2193 ;;		_sm_send_event
  2194 ;; This function is called by:
  2195 ;;		_main
  2196 ;; This function uses a non-reentrant model
  2197 ;;
  2198                           
  2199                           	psect	text1
  2200  00335C                     __ptext1:
  2201                           	callstack 0
  2202  00335C                     _sm_execute_main:
  2203                           	callstack 14
  2204                           
  2205                           ; BSR set to: 0
  2206                           ;sm_Main_MC50.c: 29:     switch((sm_state_Main_t) psm->current_state)
  2207                           
  2208                           ; BSR set to: 1
  2209                           ;incstack = 0
  2210  00335C  D053               	goto	l25577
  2211  00335E                     l25553:
  2212                           
  2213                           ; BSR set to: 0
  2214                           ;sm_Main_MC50.c: 32:         {;sm_Main_MC50.c: 33:             if(programmer_enable==0)
  2215  00335E  5185               	movf	_programmer_enable& (0+255),w,b
  2216  003360  A4D8               	btfss	status,2,c
  2217  003362  D066               	goto	l25579
  2218                           
  2219                           ; BSR set to: 0
  2220                           ;sm_Main_MC50.c: 34:                 if(psm->last_event==ev_goto_MenuConfig)
  2221  003364  EE20 F004          	lfsr	2,4
  2222  003368  51ED               	movf	sm_execute_main@psm& (0+255),w,b
  2223  00336A  26D9               	addwf	fsr2l,f,c
  2224  00336C  51EE               	movf	(sm_execute_main@psm+1)& (0+255),w,b
  2225  00336E  22DA               	addwfc	fsr2h,f,c
  2226  003370  0E06               	movlw	6
  2227  003372  18DE               	xorwf	postinc2,w,c
  2228  003374  10DE               	iorwf	postinc2,w,c
  2229  003376  A4D8               	btfss	status,2,c
  2230  003378  D006               	goto	l25559
  2231  00337A                     u32060:
  2232                           
  2233                           ; BSR set to: 0
  2234                           ;sm_Main_MC50.c: 35:                 {;sm_Main_MC50.c: 37:                     psm->curr
      +                          ent_state = st_MenuConfiguration;
  2235  00337A  C0ED  FFD9         	movff	sm_execute_main@psm,fsr2l
  2236  00337E  C0EE  FFDA         	movff	sm_execute_main@psm+1,fsr2h
  2237  003382  0E01               	movlw	1
  2238  003384  D01D               	goto	L2
  2239  003386                     l25559:
  2240                           
  2241                           ; BSR set to: 0
  2242  003386  EE20 F004          	lfsr	2,4
  2243  00338A  51ED               	movf	sm_execute_main@psm& (0+255),w,b
  2244  00338C  26D9               	addwf	fsr2l,f,c
  2245  00338E  51EE               	movf	(sm_execute_main@psm+1)& (0+255),w,b
  2246  003390  22DA               	addwfc	fsr2h,f,c
  2247  003392  0E11               	movlw	17
  2248  003394  18DE               	xorwf	postinc2,w,c
  2249  003396  10DE               	iorwf	postinc2,w,c
  2250  003398  A4D8               	btfss	status,2,c
  2251  00339A  D04A               	goto	l25579
  2252                           
  2253                           ; BSR set to: 0
  2254                           ;sm_Main_MC50.c: 40:                 {;sm_Main_MC50.c: 41:                     psm->curr
      +                          ent_state = st_MotorON;
  2255  00339C  C0ED  FFD9         	movff	sm_execute_main@psm,fsr2l
  2256  0033A0  C0EE  FFDA         	movff	sm_execute_main@psm+1,fsr2h
  2257  0033A4  0E02               	movlw	2
  2258  0033A6  D00C               	goto	L2
  2259  0033A8                     l25563:
  2260                           
  2261                           ; BSR set to: 0
  2262                           ;sm_Main_MC50.c: 46:         {;sm_Main_MC50.c: 47:             if(psm->last_event==ev_go
      +                          to_StandBy)
  2263  0033A8  EE20 F004          	lfsr	2,4
  2264  0033AC  51ED               	movf	sm_execute_main@psm& (0+255),w,b
  2265  0033AE  26D9               	addwf	fsr2l,f,c
  2266  0033B0  51EE               	movf	(sm_execute_main@psm+1)& (0+255),w,b
  2267  0033B2  22DA               	addwfc	fsr2h,f,c
  2268  0033B4  0E07               	movlw	7
  2269  0033B6  18DE               	xorwf	postinc2,w,c
  2270  0033B8  10DE               	iorwf	postinc2,w,c
  2271  0033BA  A4D8               	btfss	status,2,c
  2272  0033BC  D039               	goto	l25579
  2273  0033BE  D00F               	goto	u32090
  2274  0033C0                     L2:
  2275  0033C0  6EDE               	movwf	postinc2,c
  2276  0033C2  0E00               	movlw	0
  2277  0033C4  6EDD               	movwf	postdec2,c
  2278  0033C6  D034               	goto	l25579
  2279  0033C8                     l25567:
  2280                           
  2281                           ; BSR set to: 0
  2282                           ;sm_Main_MC50.c: 54:         {;sm_Main_MC50.c: 55:             if(psm->last_event==ev_go
      +                          to_StandBy)
  2283  0033C8  EE20 F004          	lfsr	2,4
  2284  0033CC  51ED               	movf	sm_execute_main@psm& (0+255),w,b
  2285  0033CE  26D9               	addwf	fsr2l,f,c
  2286  0033D0  51EE               	movf	(sm_execute_main@psm+1)& (0+255),w,b
  2287  0033D2  22DA               	addwfc	fsr2h,f,c
  2288  0033D4  0E07               	movlw	7
  2289  0033D6  18DE               	xorwf	postinc2,w,c
  2290  0033D8  10DE               	iorwf	postinc2,w,c
  2291  0033DA  A4D8               	btfss	status,2,c
  2292  0033DC  D006               	goto	l25571
  2293  0033DE                     u32090:
  2294                           
  2295                           ; BSR set to: 0
  2296                           ;sm_Main_MC50.c: 56:             {;sm_Main_MC50.c: 57:                 psm->current_stat
      +                          e = st_standBy;
  2297  0033DE  C0ED  FFD9         	movff	sm_execute_main@psm,fsr2l
  2298  0033E2  C0EE  FFDA         	movff	sm_execute_main@psm+1,fsr2h
  2299  0033E6  0E00               	movlw	0
  2300  0033E8  D7EB               	goto	L2
  2301  0033EA                     l25571:
  2302                           
  2303                           ; BSR set to: 0
  2304  0033EA  EE20 F004          	lfsr	2,4
  2305  0033EE  51ED               	movf	sm_execute_main@psm& (0+255),w,b
  2306  0033F0  26D9               	addwf	fsr2l,f,c
  2307  0033F2  51EE               	movf	(sm_execute_main@psm+1)& (0+255),w,b
  2308  0033F4  22DA               	addwfc	fsr2h,f,c
  2309  0033F6  0E06               	movlw	6
  2310  0033F8  18DE               	xorwf	postinc2,w,c
  2311  0033FA  10DE               	iorwf	postinc2,w,c
  2312  0033FC  A4D8               	btfss	status,2,c
  2313  0033FE  D018               	goto	l25579
  2314  003400  D7BC               	goto	u32060
  2315  003402                     l3053:
  2316                           
  2317                           ; BSR set to: 0
  2318  003402  D7FF               	goto	l3053
  2319  003404                     l25577:
  2320                           
  2321                           ; BSR set to: 0
  2322  003404  C0ED  FFD9         	movff	sm_execute_main@psm,fsr2l
  2323  003408  C0EE  FFDA         	movff	sm_execute_main@psm+1,fsr2h
  2324  00340C  50DF               	movf	indf2,w,c
  2325  00340E  6FEF               	movwf	??_sm_execute_main& (0+255),b
  2326  003410  6BF0               	clrf	(??_sm_execute_main+1)& (0+255),b
  2327                           
  2328                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2329                           ; Switch size 1, requested type "simple"
  2330                           ; Number of cases is 1, Range of values is 0 to 0
  2331                           ; switch strategies available:
  2332                           ; Name         Instructions Cycles
  2333                           ; simple_byte            4     3 (average)
  2334                           ;	Chosen strategy is simple_byte
  2335  003412  51F0               	movf	(??_sm_execute_main+1)& (0+255),w,b
  2336  003414  0A00               	xorlw	0	; case 0
  2337  003416  A4D8               	btfss	status,2,c
  2338  003418  D7F4               	goto	l3053
  2339                           
  2340                           ; BSR set to: 0
  2341                           ; Switch size 1, requested type "simple"
  2342                           ; Number of cases is 3, Range of values is 0 to 2
  2343                           ; switch strategies available:
  2344                           ; Name         Instructions Cycles
  2345                           ; simple_byte           10     6 (average)
  2346                           ;	Chosen strategy is simple_byte
  2347  00341A  51EF               	movf	??_sm_execute_main& (0+255),w,b
  2348  00341C  0A00               	xorlw	0	; case 0
  2349  00341E  B4D8               	btfsc	status,2,c
  2350  003420  D79E               	goto	l25553
  2351  003422  0A01               	xorlw	1	; case 1
  2352  003424  B4D8               	btfsc	status,2,c
  2353  003426  D7C0               	goto	l25563
  2354  003428  0A03               	xorlw	3	; case 2
  2355  00342A  B4D8               	btfsc	status,2,c
  2356  00342C  D7CD               	goto	l25567
  2357  00342E  D7E9               	goto	l3053
  2358  003430                     l25579:
  2359                           
  2360                           ; BSR set to: 0
  2361                           ;sm_Main_MC50.c: 77:     sm_send_event(&main_stateMachine, ev_NULL);
  2362  003430  0EF2               	movlw	low _main_stateMachine
  2363  003432  6E12               	movwf	sm_send_event@psm^0,c
  2364  003434  0E01               	movlw	high _main_stateMachine
  2365  003436  6E13               	movwf	(sm_send_event@psm+1)^0,c
  2366  003438  0E00               	movlw	0
  2367  00343A  6E15               	movwf	(sm_send_event@event+1)^0,c
  2368  00343C  0E00               	movlw	0
  2369  00343E  6E14               	movwf	sm_send_event@event^0,c
  2370  003440  ECD5  F045         	call	_sm_send_event	;wreg free
  2371                           
  2372                           ;sm_Main_MC50.c: 82:     switch((sm_state_Main_t) psm->current_state)
  2373  003444  D1F8               	goto	l25857
  2374  003446                     l25581:
  2375                           
  2376                           ; BSR set to: 0
  2377                           ;sm_Main_MC50.c: 85:         {;sm_Main_MC50.c: 86:             if (button_struct.current
      +                          ==0 && button_struct.timer>((1000/50)*5))
  2378  003446  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  2379  003448  A4D8               	btfss	status,2,c
  2380  00344A  D016               	goto	l25593
  2381                           
  2382                           ; BSR set to: 0
  2383  00344C  0E64               	movlw	100
  2384  00344E  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2385  003450  D013               	goto	l25593
  2386                           
  2387                           ; BSR set to: 0
  2388                           ;sm_Main_MC50.c: 87:             {;sm_Main_MC50.c: 88:                 load_New_Menu(E_M
      +                          enu);
  2389  003452  0E01               	movlw	1
  2390  003454  EC5B  F023         	call	_load_New_Menu
  2391  003458                     l25587:
  2392                           
  2393                           ;sm_Main_MC50.c: 89:                 sm_send_event(&main_stateMachine, ev_goto_MenuConfi
      +                          g);
  2394  003458  0EF2               	movlw	low _main_stateMachine
  2395  00345A  6E12               	movwf	sm_send_event@psm^0,c
  2396  00345C  0E01               	movlw	high _main_stateMachine
  2397  00345E  6E13               	movwf	(sm_send_event@psm+1)^0,c
  2398  003460  0E00               	movlw	0
  2399  003462  6E15               	movwf	(sm_send_event@event+1)^0,c
  2400  003464  0E06               	movlw	6
  2401  003466  6E14               	movwf	sm_send_event@event^0,c
  2402  003468  ECD5  F045         	call	_sm_send_event	;wreg free
  2403                           
  2404                           ;sm_Main_MC50.c: 90:                 button_struct.processed=1;
  2405  00346C  0E01               	movlw	1
  2406  00346E  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  2407                           
  2408                           ;sm_Main_MC50.c: 91:                 temp=0;
  2409  003470  0E00               	movlw	0
  2410  003472  0100               	movlb	0	; () banked
  2411  003474  6F80               	movwf	_temp& (0+255),b
  2412                           
  2413                           ;sm_Main_MC50.c: 92:             }
  2414  003476  0012               	return	
  2415  003478                     l25593:
  2416                           
  2417                           ; BSR set to: 0
  2418  003478  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  2419  00347A  A4D8               	btfss	status,2,c
  2420  00347C  D00B               	goto	l25601
  2421                           
  2422                           ; BSR set to: 0
  2423  00347E  0E14               	movlw	20
  2424  003480  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2425  003482  D008               	goto	l25601
  2426                           
  2427                           ; BSR set to: 0
  2428                           ;sm_Main_MC50.c: 94:             {;sm_Main_MC50.c: 97:                 SetSegmentValueMa
      +                          in(dP,d0);
  2429  003484  0E00               	movlw	0
  2430  003486  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  2431  003488  0E10               	movlw	16
  2432  00348A  ECD3  F04C         	call	_SetSegmentValueMain
  2433                           
  2434                           ; BSR set to: 0
  2435                           ;sm_Main_MC50.c: 98:                 temp=1;
  2436  00348E  0E01               	movlw	1
  2437  003490  6F80               	movwf	_temp& (0+255),b
  2438                           
  2439                           ;sm_Main_MC50.c: 99:             }
  2440  003492  0012               	return	
  2441  003494                     l25601:
  2442                           
  2443                           ; BSR set to: 0
  2444  003494  0580               	decf	_temp& (0+255),w,b
  2445  003496  A4D8               	btfss	status,2,c
  2446  003498  D004               	goto	l25611
  2447                           
  2448                           ; BSR set to: 0
  2449                           ;sm_Main_MC50.c: 101:             {;sm_Main_MC50.c: 102:                 load_New_Menu(P
      +                          _Menu);
  2450  00349A  0E00               	movlw	0
  2451  00349C  EC5B  F023         	call	_load_New_Menu
  2452  0034A0  D7DB               	goto	l25587
  2453  0034A2                     l25611:
  2454                           
  2455                           ; BSR set to: 0
  2456  0034A2  0E27               	movlw	39
  2457  0034A4  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2458  0034A6  A4D8               	btfss	status,2,c
  2459  0034A8  D007               	goto	l25623
  2460                           
  2461                           ; BSR set to: 0
  2462  0034AA  0E78               	movlw	120
  2463  0034AC  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2464  0034AE  D004               	goto	l25623
  2465                           
  2466                           ; BSR set to: 0
  2467                           ;sm_Main_MC50.c: 108:             {;sm_Main_MC50.c: 110:                 load_New_Menu(D
      +                          el_Menu);
  2468  0034B0  0E0D               	movlw	13
  2469  0034B2  EC5B  F023         	call	_load_New_Menu
  2470  0034B6  D7D0               	goto	l25587
  2471  0034B8                     l25623:
  2472                           
  2473                           ; BSR set to: 0
  2474  0034B8  0E27               	movlw	39
  2475  0034BA  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2476  0034BC  A4D8               	btfss	status,2,c
  2477  0034BE  D00B               	goto	l25631
  2478                           
  2479                           ; BSR set to: 0
  2480  0034C0  0E14               	movlw	20
  2481  0034C2  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2482  0034C4  D008               	goto	l25631
  2483                           
  2484                           ; BSR set to: 0
  2485                           ;sm_Main_MC50.c: 116:             {;sm_Main_MC50.c: 118:                 SetSegmentValue
      +                          Main(d5,dU);
  2486  0034C6  0E13               	movlw	19
  2487  0034C8  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  2488  0034CA  0E05               	movlw	5
  2489  0034CC  ECD3  F04C         	call	_SetSegmentValueMain
  2490                           
  2491                           ; BSR set to: 0
  2492                           ;sm_Main_MC50.c: 119:                 temp=2;
  2493  0034D0  0E02               	movlw	2
  2494  0034D2  6F80               	movwf	_temp& (0+255),b
  2495                           
  2496                           ;sm_Main_MC50.c: 120:             }
  2497  0034D4  0012               	return	
  2498  0034D6                     l25631:
  2499                           
  2500                           ; BSR set to: 0
  2501  0034D6  0E02               	movlw	2
  2502  0034D8  1980               	xorwf	_temp& (0+255),w,b
  2503  0034DA  A4D8               	btfss	status,2,c
  2504  0034DC  D004               	goto	l25641
  2505                           
  2506                           ; BSR set to: 0
  2507                           ;sm_Main_MC50.c: 122:             {;sm_Main_MC50.c: 123:                 load_New_Menu(S
      +                          _Menu);
  2508  0034DE  0E0C               	movlw	12
  2509  0034E0  EC5B  F023         	call	_load_New_Menu
  2510  0034E4  D7B9               	goto	l25587
  2511  0034E6                     l25641:
  2512                           
  2513                           ; BSR set to: 0
  2514  0034E6  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  2515  0034E8  A4D8               	btfss	status,2,c
  2516  0034EA  D009               	goto	l25647
  2517                           
  2518                           ; BSR set to: 0
  2519  0034EC  0101               	movlb	1	; () banked
  2520  0034EE  5103               	movf	(_var_sys+3)& (0+255),w,b	;volatile
  2521  0034F0  A4D8               	btfss	status,2,c
  2522  0034F2  D005               	goto	l25647
  2523                           
  2524                           ; BSR set to: 1
  2525                           ;sm_Main_MC50.c: 129:             {;sm_Main_MC50.c: 130:                 var_sys.StartFr
      +                          omButton=YES;
  2526  0034F4  0E01               	movlw	1
  2527  0034F6  6F09               	movwf	(_var_sys+9)& (0+255),b	;volatile
  2528                           
  2529                           ;sm_Main_MC50.c: 131:                 var_sys.StateMotor=InClose;
  2530  0034F8  0E03               	movlw	3
  2531  0034FA  6F00               	movwf	_var_sys& (0+255),b	;volatile
  2532                           
  2533                           ;sm_Main_MC50.c: 132:             }
  2534  0034FC  0012               	return	
  2535  0034FE                     l25647:
  2536  0034FE  0E17               	movlw	23
  2537  003500  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2538  003502  A4D8               	btfss	status,2,c
  2539  003504  D009               	goto	l25653
  2540  003506  0101               	movlb	1	; () banked
  2541  003508  5104               	movf	(_var_sys+4)& (0+255),w,b	;volatile
  2542  00350A  A4D8               	btfss	status,2,c
  2543  00350C  D005               	goto	l25653
  2544                           
  2545                           ; BSR set to: 1
  2546                           ;sm_Main_MC50.c: 134:             {;sm_Main_MC50.c: 135:                 var_sys.StartFr
      +                          omButton=YES;
  2547  00350E  0E01               	movlw	1
  2548  003510  6F09               	movwf	(_var_sys+9)& (0+255),b	;volatile
  2549                           
  2550                           ;sm_Main_MC50.c: 136:                 var_sys.StateMotor=InOpenFull;
  2551  003512  0E01               	movlw	1
  2552  003514  6F00               	movwf	_var_sys& (0+255),b	;volatile
  2553                           
  2554                           ;sm_Main_MC50.c: 137:             }
  2555  003516  0012               	return	
  2556  003518                     l25653:
  2557  003518  0101               	movlb	1	; () banked
  2558  00351A  0509               	decf	(_var_sys+9)& (0+255),w,b	;volatile
  2559  00351C  A4D8               	btfss	status,2,c
  2560  00351E  D005               	goto	l25657
  2561                           
  2562                           ; BSR set to: 1
  2563                           ;sm_Main_MC50.c: 139:             {;sm_Main_MC50.c: 140:                 var_sys.StartFr
      +                          omButton=NO;
  2564  003520  0E00               	movlw	0
  2565  003522  6F09               	movwf	(_var_sys+9)& (0+255),b	;volatile
  2566                           
  2567                           ;sm_Main_MC50.c: 141:                 var_sys.StateMotor = Stopped;
  2568  003524  0E00               	movlw	0
  2569  003526  6F00               	movwf	_var_sys& (0+255),b	;volatile
  2570                           
  2571                           ;sm_Main_MC50.c: 142:             }
  2572  003528  0012               	return	
  2573  00352A                     l25657:
  2574                           
  2575                           ; BSR set to: 1
  2576  00352A  0E06               	movlw	6
  2577  00352C  183B               	xorwf	_rfCMD^0,w,c	;volatile
  2578  00352E  B4D8               	btfsc	status,2,c
  2579  003530  D004               	goto	u32270
  2580                           
  2581                           ; BSR set to: 1
  2582  003532  0E05               	movlw	5
  2583  003534  183B               	xorwf	_rfCMD^0,w,c	;volatile
  2584  003536  A4D8               	btfss	status,2,c
  2585  003538  D015               	goto	l25671
  2586  00353A                     u32270:
  2587                           
  2588                           ; BSR set to: 1
  2589  00353A  0E63               	movlw	99
  2590  00353C  6444               	cpfsgt	(_rfCMD+9)^0,c	;volatile
  2591  00353E  D012               	goto	l25671
  2592                           
  2593                           ; BSR set to: 1
  2594                           ;sm_Main_MC50.c: 144:             {;sm_Main_MC50.c: 145:                 load_New_Menu(S
      +                          _Menu);
  2595  003540  0E0C               	movlw	12
  2596  003542  EC5B  F023         	call	_load_New_Menu
  2597                           
  2598                           ;sm_Main_MC50.c: 146:                 sm_send_event(&main_stateMachine, ev_goto_MenuConf
      +                          ig);
  2599  003546  0EF2               	movlw	low _main_stateMachine
  2600  003548  6E12               	movwf	sm_send_event@psm^0,c
  2601  00354A  0E01               	movlw	high _main_stateMachine
  2602  00354C  6E13               	movwf	(sm_send_event@psm+1)^0,c
  2603  00354E  0E00               	movlw	0
  2604  003550  6E15               	movwf	(sm_send_event@event+1)^0,c
  2605  003552  0E06               	movlw	6
  2606  003554  6E14               	movwf	sm_send_event@event^0,c
  2607  003556  ECD5  F045         	call	_sm_send_event	;wreg free
  2608                           
  2609                           ;sm_Main_MC50.c: 147:                 var_sys.ProgrammingDistanceIs=rfCMD.currentType;
  2610  00355A  C03B  F13B         	movff	_rfCMD,_var_sys+59	;volatile
  2611                           
  2612                           ;sm_Main_MC50.c: 148:                 rfCMD.processed=1;
  2613  00355E  0E01               	movlw	1
  2614  003560  6E45               	movwf	(_rfCMD+10)^0,c	;volatile
  2615                           
  2616                           ;sm_Main_MC50.c: 149:             }
  2617  003562  0012               	return	
  2618  003564                     l25671:
  2619                           
  2620                           ; BSR set to: 1
  2621  003564  BFAC               	btfsc	(_ts_system+13)& (0+255),7,b	;volatile
  2622  003566  D005               	goto	u32290
  2623  003568  51AC               	movf	(_ts_system+13)& (0+255),w,b	;volatile
  2624  00356A  E111               	bnz	l3065
  2625  00356C  05AB               	decf	(_ts_system+12)& (0+255),w,b	;volatile
  2626  00356E  B0D8               	btfsc	status,0,c
  2627  003570  0012               	return	
  2628  003572                     u32290:
  2629                           
  2630                           ; BSR set to: 1
  2631                           ;sm_Main_MC50.c: 151:             {;sm_Main_MC50.c: 152:                 if(var_sys.FimC
      +                          urso_CloseIsEnabled == YES)
  2632  003572  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
  2633  003574  A4D8               	btfss	status,2,c
  2634  003576  D006               	goto	l25677
  2635                           
  2636                           ; BSR set to: 1
  2637                           ;sm_Main_MC50.c: 154:                     {;sm_Main_MC50.c: 156:                        
      +                           SetSegmentValueMain(dF,dC);
  2638  003578  0E0C               	movlw	12
  2639  00357A  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  2640  00357C  0E0F               	movlw	15
  2641  00357E  ECD3  F04C         	call	_SetSegmentValueMain
  2642                           
  2643                           ;sm_Main_MC50.c: 157:                     }
  2644  003582  0012               	return	
  2645  003584                     l25677:
  2646                           
  2647                           ; BSR set to: 1
  2648                           ;sm_Main_MC50.c: 160:                 SetSegmentValueMain(dMinus,dMinus);
  2649  003584  0E18               	movlw	24
  2650  003586  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  2651  003588  0E18               	movlw	24
  2652  00358A  ECD3  F04C         	call	_SetSegmentValueMain
  2653  00358E                     l3065:
  2654                           
  2655                           ; BSR set to: 1
  2656  00358E  0012               	return	
  2657  003590                     l25679:
  2658                           
  2659                           ; BSR set to: 0
  2660                           ;sm_Main_MC50.c: 167:         {;sm_Main_MC50.c: 168:             sm_execute_menuConfigur
      +                          ation(&menuConfiguration_stateMachine);
  2661  003590  0EBB               	movlw	low _menuConfiguration_stateMachine
  2662  003592  6FE9               	movwf	sm_execute_menuConfiguration@psm& (0+255),b
  2663  003594  0E02               	movlw	high _menuConfiguration_stateMachine
  2664  003596  6FEA               	movwf	(sm_execute_menuConfiguration@psm+1)& (0+255),b
  2665  003598  EC91  F007         	call	_sm_execute_menuConfiguration	;wreg free
  2666                           
  2667                           ;sm_Main_MC50.c: 169:         };sm_Main_MC50.c: 170:         break;
  2668  00359C  0012               	return	
  2669  00359E                     l25681:
  2670                           
  2671                           ; BSR set to: 0
  2672                           ;sm_Main_MC50.c: 172:         {;sm_Main_MC50.c: 175:             aux_in_auto_close = NO;
  2673  00359E  0E00               	movlw	0
  2674  0035A0  0101               	movlb	1	; () banked
  2675  0035A2  6F90               	movwf	_aux_in_auto_close& (0+255),b
  2676                           
  2677                           ; BSR set to: 1
  2678                           ;sm_Main_MC50.c: 176:             if ( controlGate_stateMachine.current_state == st_Open
      +                          ed )
  2679  0035A4  0E04               	movlw	4
  2680  0035A6  19E7               	xorwf	_controlGate_stateMachine& (0+255),w,b
  2681  0035A8  11E8               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
  2682  0035AA  A4D8               	btfss	status,2,c
  2683  0035AC  D013               	goto	l3088
  2684                           
  2685                           ; BSR set to: 1
  2686                           ;sm_Main_MC50.c: 177:             {;sm_Main_MC50.c: 179:                 if ( var_sys_NV
      +                          M.operationMode == ModoPassoPasso && var_sys.passoAPassoAutoClose == YES )
  2687  0035AE  0100               	movlb	0	; () banked
  2688  0035B0  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
  2689  0035B2  A4D8               	btfss	status,2,c
  2690  0035B4  D007               	goto	l25691
  2691                           
  2692                           ; BSR set to: 0
  2693  0035B6  0101               	movlb	1	; () banked
  2694  0035B8  0550               	decf	(_var_sys+80)& (0+255),w,b	;volatile
  2695  0035BA  A4D8               	btfss	status,2,c
  2696  0035BC  D003               	goto	l25691
  2697  0035BE                     u32330:
  2698                           
  2699                           ; BSR set to: 1
  2700                           ;sm_Main_MC50.c: 180:                 {;sm_Main_MC50.c: 181:                     aux_in_
      +                          auto_close = YES;
  2701  0035BE  0E01               	movlw	1
  2702  0035C0  6F90               	movwf	_aux_in_auto_close& (0+255),b
  2703                           
  2704                           ;sm_Main_MC50.c: 182:                 }
  2705  0035C2  D008               	goto	l3088
  2706  0035C4                     l25691:
  2707  0035C4  0100               	movlb	0	; () banked
  2708  0035C6  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
  2709  0035C8  B4D8               	btfsc	status,2,c
  2710  0035CA  D004               	goto	l3088
  2711                           
  2712                           ; BSR set to: 0
  2713  0035CC  0101               	movlb	1	; () banked
  2714  0035CE  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
  2715  0035D0  A4D8               	btfss	status,2,c
  2716  0035D2  D7F5               	goto	u32330
  2717  0035D4                     l3088:
  2718                           
  2719                           ;sm_Main_MC50.c: 193:             if(var_sys.StateMotor==Stopped && ( (controlGate_state
      +                          Machine.current_state==st_Opened && aux_in_auto_close==NO) || controlGate_stateMachine.c
      +                          urrent_state==st_Closed || controlGate_stateMachine.current_state==st_Idle ) )
  2720  0035D4  0101               	movlb	1	; () banked
  2721  0035D6  5100               	movf	_var_sys& (0+255),w,b	;volatile
  2722  0035D8  A4D8               	btfss	status,2,c
  2723  0035DA  D069               	goto	l3102
  2724                           
  2725                           ; BSR set to: 1
  2726  0035DC  0E04               	movlw	4
  2727  0035DE  19E7               	xorwf	_controlGate_stateMachine& (0+255),w,b
  2728  0035E0  11E8               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
  2729  0035E2  A4D8               	btfss	status,2,c
  2730  0035E4  D003               	goto	u32380
  2731                           
  2732                           ; BSR set to: 1
  2733  0035E6  5190               	movf	_aux_in_auto_close& (0+255),w,b
  2734  0035E8  B4D8               	btfsc	status,2,c
  2735  0035EA  D008               	goto	u32400
  2736  0035EC                     u32380:
  2737                           
  2738                           ; BSR set to: 1
  2739  0035EC  05E7               	decf	_controlGate_stateMachine& (0+255),w,b
  2740  0035EE  11E8               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
  2741  0035F0  B4D8               	btfsc	status,2,c
  2742  0035F2  D004               	goto	u32400
  2743                           
  2744                           ; BSR set to: 1
  2745  0035F4  51E7               	movf	_controlGate_stateMachine& (0+255),w,b
  2746  0035F6  11E8               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
  2747  0035F8  A4D8               	btfss	status,2,c
  2748  0035FA  D059               	goto	l3102
  2749  0035FC                     u32400:
  2750                           
  2751                           ; BSR set to: 1
  2752                           ;sm_Main_MC50.c: 194:             {;sm_Main_MC50.c: 195:                 if (button_stru
      +                          ct.current==0 && button_struct.timer>((1000/50)*5))
  2753  0035FC  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  2754  0035FE  A4D8               	btfss	status,2,c
  2755  003600  D015               	goto	l25719
  2756                           
  2757                           ; BSR set to: 1
  2758  003602  0E64               	movlw	100
  2759  003604  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2760  003606  D012               	goto	l25719
  2761                           
  2762                           ; BSR set to: 1
  2763                           ;sm_Main_MC50.c: 196:                 {;sm_Main_MC50.c: 197:                     load_Ne
      +                          w_Menu(E_Menu);
  2764  003608  0E01               	movlw	1
  2765  00360A  EC5B  F023         	call	_load_New_Menu
  2766  00360E                     l25713:
  2767                           
  2768                           ;sm_Main_MC50.c: 198:                     sm_send_event(&main_stateMachine, ev_goto_Menu
      +                          Config);
  2769  00360E  0EF2               	movlw	low _main_stateMachine
  2770  003610  6E12               	movwf	sm_send_event@psm^0,c
  2771  003612  0E01               	movlw	high _main_stateMachine
  2772  003614  6E13               	movwf	(sm_send_event@psm+1)^0,c
  2773  003616  0E00               	movlw	0
  2774  003618  6E15               	movwf	(sm_send_event@event+1)^0,c
  2775  00361A  0E06               	movlw	6
  2776  00361C  6E14               	movwf	sm_send_event@event^0,c
  2777  00361E  ECD5  F045         	call	_sm_send_event	;wreg free
  2778                           
  2779                           ;sm_Main_MC50.c: 199:                     button_struct.processed=1;
  2780  003622  0E01               	movlw	1
  2781  003624  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  2782                           
  2783                           ;sm_Main_MC50.c: 200:                     temp=0;
  2784  003626  0E00               	movlw	0
  2785  003628  0100               	movlb	0	; () banked
  2786  00362A  D037               	goto	L4
  2787  00362C                     l25719:
  2788                           
  2789                           ; BSR set to: 1
  2790  00362C  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  2791  00362E  A4D8               	btfss	status,2,c
  2792  003630  D00A               	goto	l25727
  2793                           
  2794                           ; BSR set to: 1
  2795  003632  0E14               	movlw	20
  2796  003634  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2797  003636  D007               	goto	l25727
  2798                           
  2799                           ; BSR set to: 1
  2800                           ;sm_Main_MC50.c: 203:                 {;sm_Main_MC50.c: 205:                     SetSegm
      +                          entValueMain(dP,d0);
  2801  003638  0E00               	movlw	0
  2802  00363A  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  2803  00363C  0E10               	movlw	16
  2804  00363E  ECD3  F04C         	call	_SetSegmentValueMain
  2805                           
  2806                           ; BSR set to: 0
  2807                           ;sm_Main_MC50.c: 206:                     temp=1;
  2808  003642  0E01               	movlw	1
  2809  003644  D02A               	goto	L4
  2810  003646                     l25727:
  2811                           
  2812                           ; BSR set to: 1
  2813  003646  0100               	movlb	0	; () banked
  2814  003648  0580               	decf	_temp& (0+255),w,b
  2815  00364A  A4D8               	btfss	status,2,c
  2816  00364C  D00E               	goto	l25741
  2817                           
  2818                           ; BSR set to: 0
  2819                           ;sm_Main_MC50.c: 209:                 {;sm_Main_MC50.c: 210:                     load_Ne
      +                          w_Menu(P_Menu);
  2820  00364E  0E00               	movlw	0
  2821  003650  EC5B  F023         	call	_load_New_Menu
  2822                           
  2823                           ;sm_Main_MC50.c: 212:                     button_struct.processed=1;
  2824  003654  0E01               	movlw	1
  2825  003656  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  2826                           
  2827                           ;sm_Main_MC50.c: 213:                     temp=0;
  2828  003658  0E00               	movlw	0
  2829  00365A  0100               	movlb	0	; () banked
  2830  00365C  6F80               	movwf	_temp& (0+255),b
  2831                           
  2832                           ; BSR set to: 0
  2833                           ;sm_Main_MC50.c: 214:                     main_stateMachine.current_state = st_MenuConfi
      +                          guration;
  2834  00365E  0E00               	movlw	0
  2835  003660  0101               	movlb	1	; () banked
  2836  003662  6FF3               	movwf	(_main_stateMachine+1)& (0+255),b
  2837  003664  0E01               	movlw	1
  2838  003666  6FF2               	movwf	_main_stateMachine& (0+255),b
  2839  003668  0012               	return	
  2840  00366A                     l25741:
  2841                           
  2842                           ; BSR set to: 0
  2843  00366A  0E27               	movlw	39
  2844  00366C  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2845  00366E  A4D8               	btfss	status,2,c
  2846  003670  D007               	goto	l25753
  2847                           
  2848                           ; BSR set to: 0
  2849  003672  0E78               	movlw	120
  2850  003674  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2851  003676  D004               	goto	l25753
  2852                           
  2853                           ; BSR set to: 0
  2854                           ;sm_Main_MC50.c: 218:             {;sm_Main_MC50.c: 220:                 load_New_Menu(D
      +                          el_Menu);
  2855  003678  0E0D               	movlw	13
  2856  00367A  EC5B  F023         	call	_load_New_Menu
  2857  00367E  D7C7               	goto	l25713
  2858  003680                     l25753:
  2859                           
  2860                           ; BSR set to: 0
  2861  003680  0E27               	movlw	39
  2862  003682  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2863  003684  A4D8               	btfss	status,2,c
  2864  003686  D00B               	goto	l25761
  2865                           
  2866                           ; BSR set to: 0
  2867  003688  0E14               	movlw	20
  2868  00368A  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2869  00368C  D008               	goto	l25761
  2870                           
  2871                           ; BSR set to: 0
  2872                           ;sm_Main_MC50.c: 226:             {;sm_Main_MC50.c: 228:                 SetSegmentValue
      +                          Main(d5,dU);
  2873  00368E  0E13               	movlw	19
  2874  003690  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  2875  003692  0E05               	movlw	5
  2876  003694  ECD3  F04C         	call	_SetSegmentValueMain
  2877                           
  2878                           ; BSR set to: 0
  2879                           ;sm_Main_MC50.c: 229:                 temp=2;
  2880  003698  0E02               	movlw	2
  2881  00369A                     L4:
  2882  00369A  6F80               	movwf	_temp& (0+255),b
  2883                           
  2884                           ;sm_Main_MC50.c: 230:             }
  2885  00369C  D008               	goto	l3102
  2886  00369E                     l25761:
  2887                           
  2888                           ; BSR set to: 0
  2889  00369E  0E02               	movlw	2
  2890  0036A0  1980               	xorwf	_temp& (0+255),w,b
  2891  0036A2  A4D8               	btfss	status,2,c
  2892  0036A4  D004               	goto	l3102
  2893                           
  2894                           ; BSR set to: 0
  2895                           ;sm_Main_MC50.c: 232:             {;sm_Main_MC50.c: 233:                 load_New_Menu(S
      +                          _Menu);
  2896  0036A6  0E0C               	movlw	12
  2897  0036A8  EC5B  F023         	call	_load_New_Menu
  2898  0036AC  D6D5               	goto	l25587
  2899  0036AE                     l3102:
  2900                           
  2901                           ;sm_Main_MC50.c: 243:             if( ts_system.timeSinalizationDigit<=0 && (button_stru
      +                          ct.current!=0 && button_struct.current!=0x27) )
  2902                           
  2903                           ; BSR set to: 0
  2904  0036AE  0101               	movlb	1	; () banked
  2905  0036B0  BFAC               	btfsc	(_ts_system+13)& (0+255),7,b	;volatile
  2906  0036B2  D005               	goto	u32510
  2907  0036B4  51AC               	movf	(_ts_system+13)& (0+255),w,b	;volatile
  2908  0036B6  E102               	bnz	u32511
  2909  0036B8  05AB               	decf	(_ts_system+12)& (0+255),w,b	;volatile
  2910  0036BA  B0D8               	btfsc	status,0,c
  2911  0036BC                     u32511:
  2912  0036BC  0012               	return	
  2913  0036BE                     u32510:
  2914                           
  2915                           ; BSR set to: 1
  2916  0036BE  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  2917  0036C0  B4D8               	btfsc	status,2,c
  2918  0036C2  0012               	return	
  2919                           
  2920                           ; BSR set to: 1
  2921  0036C4  0E27               	movlw	39
  2922  0036C6  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2923  0036C8  B4D8               	btfsc	status,2,c
  2924  0036CA  0012               	return	
  2925                           
  2926                           ; BSR set to: 1
  2927                           ;sm_Main_MC50.c: 244:             {;sm_Main_MC50.c: 245:                 if(var_sys.Stat
      +                          eMotor==InClose )
  2928  0036CC  0E03               	movlw	3
  2929  0036CE  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
  2930  0036D0  A4D8               	btfss	status,2,c
  2931  0036D2  D011               	goto	l25787
  2932                           
  2933                           ; BSR set to: 1
  2934                           ;sm_Main_MC50.c: 246:                 {;sm_Main_MC50.c: 248:                    SetSegme
      +                          ntValueIntermitentMain(dC,dL,( 500/50));
  2935  0036D4  0E12               	movlw	18
  2936  0036D6  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  2937  0036D8  0E00               	movlw	0
  2938  0036DA  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  2939  0036DC  0E0A               	movlw	10
  2940  0036DE  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  2941  0036E0  0E0C               	movlw	12
  2942  0036E2  EC6E  F04D         	call	_SetSegmentValueIntermitentMain
  2943  0036E6                     l25783:
  2944                           
  2945                           ;sm_Main_MC50.c: 249:                    ts_system.timeSinalizationDigit=( 200/50);
  2946  0036E6  0E00               	movlw	0
  2947  0036E8  0101               	movlb	1	; () banked
  2948  0036EA  6FAC               	movwf	(_ts_system+13)& (0+255),b	;volatile
  2949  0036EC  0E04               	movlw	4
  2950  0036EE  6FAB               	movwf	(_ts_system+12)& (0+255),b	;volatile
  2951                           
  2952                           ; BSR set to: 1
  2953                           ;sm_Main_MC50.c: 251:                     var_sys.showAP = NO;
  2954  0036F0  0E00               	movlw	0
  2955  0036F2  6F4F               	movwf	(_var_sys+79)& (0+255),b	;volatile
  2956                           
  2957                           ;sm_Main_MC50.c: 252:                 }
  2958  0036F4  0012               	return	
  2959  0036F6                     l25787:
  2960                           
  2961                           ; BSR set to: 1
  2962  0036F6  0E02               	movlw	2
  2963  0036F8  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
  2964  0036FA  B4D8               	btfsc	status,2,c
  2965  0036FC  D003               	goto	u32560
  2966                           
  2967                           ; BSR set to: 1
  2968  0036FE  0500               	decf	_var_sys& (0+255),w,b	;volatile
  2969  003700  A4D8               	btfss	status,2,c
  2970  003702  D00A               	goto	l25797
  2971  003704                     u32560:
  2972                           
  2973                           ; BSR set to: 1
  2974                           ;sm_Main_MC50.c: 254:                 {;sm_Main_MC50.c: 256:                     SetSegm
      +                          entValueIntermitentMain(d0,dP,( 500/50));
  2975  003704  0E10               	movlw	16
  2976  003706  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  2977  003708  0E00               	movlw	0
  2978  00370A  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  2979  00370C  0E0A               	movlw	10
  2980  00370E  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  2981  003710  0E00               	movlw	0
  2982  003712  EC6E  F04D         	call	_SetSegmentValueIntermitentMain
  2983  003716  D7E7               	goto	l25783
  2984  003718                     l25797:
  2985                           
  2986                           ; BSR set to: 1
  2987  003718  5100               	movf	_var_sys& (0+255),w,b	;volatile
  2988  00371A  A4D8               	btfss	status,2,c
  2989  00371C  D00F               	goto	l25803
  2990                           
  2991                           ; BSR set to: 1
  2992  00371E  05E7               	decf	_controlGate_stateMachine& (0+255),w,b
  2993  003720  11E8               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
  2994  003722  A4D8               	btfss	status,2,c
  2995  003724  D00B               	goto	l25803
  2996                           
  2997                           ; BSR set to: 1
  2998                           ;sm_Main_MC50.c: 262:                 {;sm_Main_MC50.c: 263:                     sm_send
      +                          _event(&main_stateMachine, ev_goto_StandBy);
  2999  003726  0EF2               	movlw	low _main_stateMachine
  3000  003728  6E12               	movwf	sm_send_event@psm^0,c
  3001  00372A  0E01               	movlw	high _main_stateMachine
  3002  00372C  6E13               	movwf	(sm_send_event@psm+1)^0,c
  3003  00372E  0E00               	movlw	0
  3004  003730  6E15               	movwf	(sm_send_event@event+1)^0,c
  3005  003732  0E07               	movlw	7
  3006  003734  6E14               	movwf	sm_send_event@event^0,c
  3007  003736  ECD5  F045         	call	_sm_send_event	;wreg free
  3008                           
  3009                           ;sm_Main_MC50.c: 264:                 }
  3010  00373A  0012               	return	
  3011  00373C                     l25803:
  3012                           
  3013                           ; BSR set to: 1
  3014  00373C  5100               	movf	_var_sys& (0+255),w,b	;volatile
  3015  00373E  A4D8               	btfss	status,2,c
  3016  003740  D074               	goto	l25853
  3017                           
  3018                           ; BSR set to: 1
  3019  003742  0E04               	movlw	4
  3020  003744  19E7               	xorwf	_controlGate_stateMachine& (0+255),w,b
  3021  003746  11E8               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
  3022  003748  A4D8               	btfss	status,2,c
  3023  00374A  D06F               	goto	l25853
  3024                           
  3025                           ; BSR set to: 1
  3026                           ;sm_Main_MC50.c: 266:                 {;sm_Main_MC50.c: 268:                     if
  3027  00374C  0100               	movlb	0	; () banked
  3028  00374E  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
  3029  003750  B4D8               	btfsc	status,2,c
  3030  003752  D00B               	goto	u32640
  3031                           
  3032                           ; BSR set to: 0
  3033  003754  0101               	movlb	1	; () banked
  3034  003756  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
  3035  003758  B4D8               	btfsc	status,2,c
  3036  00375A  D007               	goto	u32640
  3037                           
  3038                           ; BSR set to: 1
  3039  00375C  050B               	decf	(_var_sys+11)& (0+255),w,b	;volatile
  3040  00375E  B4D8               	btfsc	status,2,c
  3041  003760  D013               	goto	u32680
  3042                           
  3043                           ; BSR set to: 1
  3044  003762  0E03               	movlw	3
  3045  003764  190B               	xorwf	(_var_sys+11)& (0+255),w,b	;volatile
  3046  003766  B4D8               	btfsc	status,2,c
  3047  003768  D00F               	goto	u32680
  3048  00376A                     u32640:
  3049  00376A  0100               	movlb	0	; () banked
  3050  00376C  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
  3051  00376E  A4D8               	btfss	status,2,c
  3052  003770  D026               	goto	l25831
  3053                           
  3054                           ; BSR set to: 0
  3055  003772  0101               	movlb	1	; () banked
  3056  003774  0550               	decf	(_var_sys+80)& (0+255),w,b	;volatile
  3057  003776  A4D8               	btfss	status,2,c
  3058  003778  D022               	goto	l25831
  3059                           
  3060                           ; BSR set to: 1
  3061  00377A  0E02               	movlw	2
  3062  00377C  190B               	xorwf	(_var_sys+11)& (0+255),w,b	;volatile
  3063  00377E  B4D8               	btfsc	status,2,c
  3064  003780  D01E               	goto	l25831
  3065                           
  3066                           ; BSR set to: 1
  3067  003782  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
  3068  003784  B4D8               	btfsc	status,2,c
  3069  003786  D01B               	goto	l25831
  3070  003788                     u32680:
  3071                           
  3072                           ; BSR set to: 1
  3073                           ;sm_Main_MC50.c: 273:                     {;sm_Main_MC50.c: 274:                        
      +                           ts_system.timeSinalizationDigit=( 500/50);
  3074  003788  0E00               	movlw	0
  3075  00378A  6FAC               	movwf	(_ts_system+13)& (0+255),b	;volatile
  3076  00378C  0E0A               	movlw	10
  3077  00378E  6FAB               	movwf	(_ts_system+12)& (0+255),b	;volatile
  3078                           
  3079                           ; BSR set to: 1
  3080                           ;sm_Main_MC50.c: 279:                         if ( var_sys.showAP == YES )
  3081  003790  054F               	decf	(_var_sys+79)& (0+255),w,b	;volatile
  3082  003792  A4D8               	btfss	status,2,c
  3083  003794  D00A               	goto	l25829
  3084                           
  3085                           ; BSR set to: 1
  3086                           ;sm_Main_MC50.c: 280:                         {;sm_Main_MC50.c: 281:                    
      +                                   SetSegmentValueIntermitentMain(dA,dP,( 500/50));
  3087  003796  0E10               	movlw	16
  3088  003798  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  3089  00379A  0E00               	movlw	0
  3090  00379C  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  3091  00379E  0E0A               	movlw	10
  3092  0037A0  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  3093  0037A2  0E0A               	movlw	10
  3094  0037A4  EC6E  F04D         	call	_SetSegmentValueIntermitentMain
  3095                           
  3096                           ;sm_Main_MC50.c: 282:                         }
  3097  0037A8  0012               	return	
  3098  0037AA                     l25829:
  3099                           
  3100                           ; BSR set to: 1
  3101                           ;sm_Main_MC50.c: 284:                         {;sm_Main_MC50.c: 285:                    
      +                                   SetSegmentValueIntermitentMain(dA,dF,( 500/50));
  3102  0037AA  0E0F               	movlw	15
  3103  0037AC  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  3104  0037AE  0E00               	movlw	0
  3105  0037B0  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  3106  0037B2  0E0A               	movlw	10
  3107  0037B4  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  3108  0037B6  0E0A               	movlw	10
  3109  0037B8  EC6E  F04D         	call	_SetSegmentValueIntermitentMain
  3110  0037BC  0012               	return	
  3111  0037BE                     l25831:
  3112  0037BE  0100               	movlb	0	; () banked
  3113  0037C0  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
  3114  0037C2  B4D8               	btfsc	status,2,c
  3115  0037C4  D008               	goto	u32720
  3116                           
  3117                           ; BSR set to: 0
  3118  0037C6  0101               	movlb	1	; () banked
  3119  0037C8  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
  3120  0037CA  B4D8               	btfsc	status,2,c
  3121  0037CC  D004               	goto	u32720
  3122                           
  3123                           ; BSR set to: 1
  3124  0037CE  0E02               	movlw	2
  3125  0037D0  190B               	xorwf	(_var_sys+11)& (0+255),w,b	;volatile
  3126  0037D2  B4D8               	btfsc	status,2,c
  3127  0037D4  D00C               	goto	u32750
  3128  0037D6                     u32720:
  3129  0037D6  0100               	movlb	0	; () banked
  3130  0037D8  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
  3131  0037DA  A4D8               	btfss	status,2,c
  3132  0037DC  D016               	goto	l25847
  3133                           
  3134                           ; BSR set to: 0
  3135  0037DE  0101               	movlb	1	; () banked
  3136  0037E0  0550               	decf	(_var_sys+80)& (0+255),w,b	;volatile
  3137  0037E2  A4D8               	btfss	status,2,c
  3138  0037E4  D012               	goto	l25847
  3139                           
  3140                           ; BSR set to: 1
  3141  0037E6  0E02               	movlw	2
  3142  0037E8  190B               	xorwf	(_var_sys+11)& (0+255),w,b	;volatile
  3143  0037EA  A4D8               	btfss	status,2,c
  3144  0037EC  D00E               	goto	l25847
  3145  0037EE                     u32750:
  3146                           
  3147                           ; BSR set to: 1
  3148                           ;sm_Main_MC50.c: 294:                     {;sm_Main_MC50.c: 295:                        
      +                           ts_system.timeSinalizationDigit=( 500/50);
  3149  0037EE  0E00               	movlw	0
  3150  0037F0  6FAC               	movwf	(_ts_system+13)& (0+255),b	;volatile
  3151  0037F2  0E0A               	movlw	10
  3152  0037F4  6FAB               	movwf	(_ts_system+12)& (0+255),b	;volatile
  3153                           
  3154                           ; BSR set to: 1
  3155                           ;sm_Main_MC50.c: 297:                         SetSegmentValueIntermitentMain(dA,dP,( 500
      +                          /50));
  3156  0037F6  0E10               	movlw	16
  3157  0037F8  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  3158  0037FA  0E00               	movlw	0
  3159  0037FC  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  3160  0037FE  0E0A               	movlw	10
  3161  003800  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  3162  003802  0E0A               	movlw	10
  3163  003804  EC6E  F04D         	call	_SetSegmentValueIntermitentMain
  3164                           
  3165                           ;sm_Main_MC50.c: 298:                     }
  3166  003808  0012               	return	
  3167  00380A                     l25847:
  3168  00380A  0101               	movlb	1	; () banked
  3169  00380C  0504               	decf	(_var_sys+4)& (0+255),w,b	;volatile
  3170  00380E  A4D8               	btfss	status,2,c
  3171  003810  D006               	goto	l25851
  3172                           
  3173                           ; BSR set to: 1
  3174                           ;sm_Main_MC50.c: 301:                     {;sm_Main_MC50.c: 303:                        
      +                           SetSegmentValueMain(dF,d0);
  3175  003812  0E00               	movlw	0
  3176  003814  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3177  003816  0E0F               	movlw	15
  3178  003818  ECD3  F04C         	call	_SetSegmentValueMain
  3179                           
  3180                           ;sm_Main_MC50.c: 304:                     }
  3181  00381C  0012               	return	
  3182  00381E                     l25851:
  3183                           
  3184                           ; BSR set to: 1
  3185                           ;sm_Main_MC50.c: 306:                     {;sm_Main_MC50.c: 307:                       S
      +                          etSegmentValueMain(dMinus,dMinus);
  3186  00381E  0E18               	movlw	24
  3187  003820  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3188  003822  0E18               	movlw	24
  3189  003824  ECD3  F04C         	call	_SetSegmentValueMain
  3190  003828  0012               	return	
  3191  00382A                     l25853:
  3192                           
  3193                           ; BSR set to: 1
  3194                           ;sm_Main_MC50.c: 311:                 {;sm_Main_MC50.c: 313:                     SetSegm
      +                          entValueMain(dMinus,dMinus);
  3195  00382A  0E18               	movlw	24
  3196  00382C  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3197  00382E  0E18               	movlw	24
  3198  003830  ECD3  F04C         	call	_SetSegmentValueMain
  3199  003834  0012               	return	
  3200  003836                     l25857:
  3201  003836  C0ED  FFD9         	movff	sm_execute_main@psm,fsr2l
  3202  00383A  C0EE  FFDA         	movff	sm_execute_main@psm+1,fsr2h
  3203  00383E  50DF               	movf	indf2,w,c
  3204  003840  0100               	movlb	0	; () banked
  3205  003842  6FEF               	movwf	??_sm_execute_main& (0+255),b
  3206  003844  6BF0               	clrf	(??_sm_execute_main+1)& (0+255),b
  3207                           
  3208                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3209                           ; Switch size 1, requested type "simple"
  3210                           ; Number of cases is 1, Range of values is 0 to 0
  3211                           ; switch strategies available:
  3212                           ; Name         Instructions Cycles
  3213                           ; simple_byte            4     3 (average)
  3214                           ;	Chosen strategy is simple_byte
  3215  003846  51F0               	movf	(??_sm_execute_main+1)& (0+255),w,b
  3216  003848  0A00               	xorlw	0	; case 0
  3217  00384A  A4D8               	btfss	status,2,c
  3218  00384C  0012               	return	
  3219                           
  3220                           ; BSR set to: 0
  3221                           ; Switch size 1, requested type "simple"
  3222                           ; Number of cases is 3, Range of values is 0 to 2
  3223                           ; switch strategies available:
  3224                           ; Name         Instructions Cycles
  3225                           ; simple_byte           10     6 (average)
  3226                           ;	Chosen strategy is simple_byte
  3227  00384E  51EF               	movf	??_sm_execute_main& (0+255),w,b
  3228  003850  0A00               	xorlw	0	; case 0
  3229  003852  B4D8               	btfsc	status,2,c
  3230  003854  D5F8               	goto	l25581
  3231  003856  0A01               	xorlw	1	; case 1
  3232  003858  B4D8               	btfsc	status,2,c
  3233  00385A  D69A               	goto	l25679
  3234  00385C  0A03               	xorlw	3	; case 2
  3235  00385E  A4D8               	btfss	status,2,c
  3236  003860  0012               	return	
  3237  003862  D69D               	goto	l25681
  3238  003864                     __end_of_sm_execute_main:
  3239                           	callstack 0
  3240                           
  3241 ;; *************** function _sm_execute_menuConfiguration *****************
  3242 ;; Defined at:
  3243 ;;		line 33 in file "sm_MenuConfiguration_MC50.c"
  3244 ;; Parameters:    Size  Location     Type
  3245 ;;  psm             2   17[BANK0 ] PTR struct .
  3246 ;;		 -> menuConfiguration_stateMachine(11), 
  3247 ;; Auto vars:     Size  Location     Type
  3248 ;;		None
  3249 ;; Return value:  Size  Location     Type
  3250 ;;                  1    wreg      void 
  3251 ;; Registers used:
  3252 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3253 ;; Tracked objects:
  3254 ;;		On entry : 3F/0
  3255 ;;		On exit  : 0/0
  3256 ;;		Unchanged: 0/0
  3257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3258 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3260 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3261 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3262 ;;Total ram usage:        4 bytes
  3263 ;; Hardware stack levels used: 1
  3264 ;; Hardware stack levels required when called: 15
  3265 ;; This function calls:
  3266 ;;		_ClearFlag_rfCMD
  3267 ;;		_ResetDefaultMemory
  3268 ;;		_SaveNVM_VarSystem
  3269 ;;		_SetSegmentValueIntermitentMain
  3270 ;;		_SetSegmentValueMain
  3271 ;;		___lbdiv
  3272 ;;		___lldiv
  3273 ;;		___lmul
  3274 ;;		___lwdiv
  3275 ;;		_controlLearnDigit
  3276 ;;		_controlSaveRemote
  3277 ;;		_controlSelectRemote
  3278 ;;		_load_New_Menu
  3279 ;;		_setValueToEdit
  3280 ;;		_sm_send_event
  3281 ;; This function is called by:
  3282 ;;		_sm_execute_main
  3283 ;; This function uses a non-reentrant model
  3284 ;;
  3285                           
  3286                           	psect	text2
  3287  000F22                     __ptext2:
  3288                           	callstack 0
  3289  000F22                     _sm_execute_menuConfiguration:
  3290                           	callstack 14
  3291                           
  3292                           ; BSR set to: 0
  3293                           ;sm_MenuConfiguration_MC50.c: 36:     switch((sm_state_Menu_t) psm->current_state)
  3294                           
  3295                           ;incstack = 0
  3296  000F22  D0A2               	goto	l23873
  3297  000F24                     l23815:
  3298                           
  3299                           ; BSR set to: 0
  3300                           ;sm_MenuConfiguration_MC50.c: 39:         {;sm_MenuConfiguration_MC50.c: 40:            
      +                           if(psm->last_event==ev_ParameterIsSelected)
  3301  000F24  EE20 F004          	lfsr	2,4
  3302  000F28  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3303  000F2A  26D9               	addwf	fsr2l,f,c
  3304  000F2C  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3305  000F2E  22DA               	addwfc	fsr2h,f,c
  3306  000F30  04DE               	decf	postinc2,w,c
  3307  000F32  10DE               	iorwf	postinc2,w,c
  3308  000F34  A4D8               	btfss	status,2,c
  3309  000F36  D006               	goto	l23819
  3310                           
  3311                           ; BSR set to: 0
  3312                           ;sm_MenuConfiguration_MC50.c: 41:             {;sm_MenuConfiguration_MC50.c: 42:        
      +                                   psm->current_state = st_EditParameter;
  3313  000F38  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3314  000F3C  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3315  000F40  0E01               	movlw	1
  3316  000F42  D04C               	goto	L9
  3317  000F44                     l23819:
  3318                           
  3319                           ; BSR set to: 0
  3320  000F44  EE20 F004          	lfsr	2,4
  3321  000F48  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3322  000F4A  26D9               	addwf	fsr2l,f,c
  3323  000F4C  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3324  000F4E  22DA               	addwfc	fsr2h,f,c
  3325  000F50  0E05               	movlw	5
  3326  000F52  18DE               	xorwf	postinc2,w,c
  3327  000F54  10DE               	iorwf	postinc2,w,c
  3328  000F56  A4D8               	btfss	status,2,c
  3329  000F58  D006               	goto	l23823
  3330                           
  3331                           ; BSR set to: 0
  3332                           ;sm_MenuConfiguration_MC50.c: 45:             {;sm_MenuConfiguration_MC50.c: 46:        
      +                                   psm->current_state = st_Counter;
  3333  000F5A  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3334  000F5E  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3335  000F62  0E03               	movlw	3
  3336  000F64  D03B               	goto	L9
  3337  000F66                     l23823:
  3338                           
  3339                           ; BSR set to: 0
  3340  000F66  EE20 F004          	lfsr	2,4
  3341  000F6A  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3342  000F6C  26D9               	addwf	fsr2l,f,c
  3343  000F6E  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3344  000F70  22DA               	addwfc	fsr2h,f,c
  3345  000F72  0E08               	movlw	8
  3346  000F74  18DE               	xorwf	postinc2,w,c
  3347  000F76  10DE               	iorwf	postinc2,w,c
  3348  000F78  A4D8               	btfss	status,2,c
  3349  000F7A  D006               	goto	l23827
  3350                           
  3351                           ; BSR set to: 0
  3352                           ;sm_MenuConfiguration_MC50.c: 49:             {;sm_MenuConfiguration_MC50.c: 50:        
      +                                   psm->current_state = st_SelectRemote;
  3353  000F7C  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3354  000F80  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3355  000F84  0E04               	movlw	4
  3356  000F86  D02A               	goto	L9
  3357  000F88                     l23827:
  3358                           
  3359                           ; BSR set to: 0
  3360  000F88  EE20 F004          	lfsr	2,4
  3361  000F8C  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3362  000F8E  26D9               	addwf	fsr2l,f,c
  3363  000F90  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3364  000F92  22DA               	addwfc	fsr2h,f,c
  3365  000F94  0E14               	movlw	20
  3366  000F96  18DE               	xorwf	postinc2,w,c
  3367  000F98  10DE               	iorwf	postinc2,w,c
  3368  000F9A  A4D8               	btfss	status,2,c
  3369  000F9C  D087               	goto	l23875
  3370                           
  3371                           ; BSR set to: 0
  3372                           ;sm_MenuConfiguration_MC50.c: 53:             {;sm_MenuConfiguration_MC50.c: 55:        
      +                                   psm->current_state = st_LearningMode;
  3373  000F9E  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3374  000FA2  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3375  000FA6  0E06               	movlw	6
  3376  000FA8  D019               	goto	L9
  3377  000FAA                     l23831:
  3378                           
  3379                           ; BSR set to: 0
  3380                           ;sm_MenuConfiguration_MC50.c: 65:         {;sm_MenuConfiguration_MC50.c: 66:            
      +                           if(psm->last_event==ev_ParameterIsEdited)
  3381  000FAA  EE20 F004          	lfsr	2,4
  3382  000FAE  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3383  000FB0  26D9               	addwf	fsr2l,f,c
  3384  000FB2  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3385  000FB4  22DA               	addwfc	fsr2h,f,c
  3386  000FB6  0E02               	movlw	2
  3387  000FB8  18DE               	xorwf	postinc2,w,c
  3388  000FBA  10DE               	iorwf	postinc2,w,c
  3389  000FBC  A4D8               	btfss	status,2,c
  3390  000FBE  D006               	goto	l23835
  3391                           
  3392                           ; BSR set to: 0
  3393                           ;sm_MenuConfiguration_MC50.c: 67:             {;sm_MenuConfiguration_MC50.c: 68:        
      +                                   psm->current_state = st_SaveParameter;
  3394  000FC0  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3395  000FC4  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3396  000FC8  0E02               	movlw	2
  3397  000FCA  D008               	goto	L9
  3398  000FCC                     l23835:
  3399                           
  3400                           ; BSR set to: 0
  3401  000FCC  EE20 F004          	lfsr	2,4
  3402  000FD0  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3403  000FD2  26D9               	addwf	fsr2l,f,c
  3404  000FD4  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3405  000FD6  22DA               	addwfc	fsr2h,f,c
  3406  000FD8  0E03               	movlw	3
  3407  000FDA  D03B               	goto	L123
  3408  000FDC                     L9:
  3409  000FDC  6EDE               	movwf	postinc2,c
  3410  000FDE  0E00               	movlw	0
  3411  000FE0  6EDD               	movwf	postdec2,c
  3412  000FE2  D064               	goto	l23875
  3413  000FE4                     l23843:
  3414                           
  3415                           ; BSR set to: 0
  3416                           ;sm_MenuConfiguration_MC50.c: 85:         {;sm_MenuConfiguration_MC50.c: 86:            
      +                           if(psm->last_event==ev_ParameterIsSaved)
  3417  000FE4  EE20 F004          	lfsr	2,4
  3418  000FE8  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3419  000FEA  26D9               	addwf	fsr2l,f,c
  3420  000FEC  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3421  000FEE  22DA               	addwfc	fsr2h,f,c
  3422  000FF0  0E04               	movlw	4
  3423  000FF2  18DE               	xorwf	postinc2,w,c
  3424  000FF4  10DE               	iorwf	postinc2,w,c
  3425  000FF6  A4D8               	btfss	status,2,c
  3426  000FF8  D7E9               	goto	l23835
  3427  000FFA  D02F               	goto	u28700
  3428  000FFC                     l23851:
  3429                           
  3430                           ; BSR set to: 0
  3431                           ;sm_MenuConfiguration_MC50.c: 97:         {;sm_MenuConfiguration_MC50.c: 98:            
      +                           if(psm->last_event==ev_addRemotes)
  3432  000FFC  EE20 F004          	lfsr	2,4
  3433  001000  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3434  001002  26D9               	addwf	fsr2l,f,c
  3435  001004  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3436  001006  22DA               	addwfc	fsr2h,f,c
  3437  001008  0E08               	movlw	8
  3438  00100A  18DE               	xorwf	postinc2,w,c
  3439  00100C  10DE               	iorwf	postinc2,w,c
  3440  00100E  A4D8               	btfss	status,2,c
  3441  001010  D7DD               	goto	l23835
  3442                           
  3443                           ; BSR set to: 0
  3444                           ;sm_MenuConfiguration_MC50.c: 99:             {;sm_MenuConfiguration_MC50.c: 100:       
      +                                    psm->current_state = st_SaveRemotes;
  3445  001012  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3446  001016  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3447  00101A  0E05               	movlw	5
  3448  00101C  D7DF               	goto	L9
  3449  00101E                     l23859:
  3450                           
  3451                           ; BSR set to: 0
  3452                           ;sm_MenuConfiguration_MC50.c: 109:         {;sm_MenuConfiguration_MC50.c: 110:          
      +                             if(psm->last_event==ev_NextRemote)
  3453  00101E  EE20 F004          	lfsr	2,4
  3454  001022  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3455  001024  26D9               	addwf	fsr2l,f,c
  3456  001026  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3457  001028  22DA               	addwfc	fsr2h,f,c
  3458  00102A  0E09               	movlw	9
  3459  00102C  18DE               	xorwf	postinc2,w,c
  3460  00102E  10DE               	iorwf	postinc2,w,c
  3461  001030  A4D8               	btfss	status,2,c
  3462  001032  D008               	goto	l23867
  3463                           
  3464                           ; BSR set to: 0
  3465                           ;sm_MenuConfiguration_MC50.c: 111:             {;sm_MenuConfiguration_MC50.c: 112:      
      +                                     psm->current_state = st_SelectRemote;
  3466  001034  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3467  001038  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3468  00103C  0E04               	movlw	4
  3469  00103E  6EDE               	movwf	postinc2,c
  3470  001040  0E00               	movlw	0
  3471  001042  6EDD               	movwf	postdec2,c
  3472  001044                     l23867:
  3473                           
  3474                           ; BSR set to: 0
  3475                           ;sm_MenuConfiguration_MC50.c: 121:         {;sm_MenuConfiguration_MC50.c: 122:          
      +                             if(psm->last_event==ev_ParameterIsSaved)
  3476  001044  EE20 F004          	lfsr	2,4
  3477  001048  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3478  00104A  26D9               	addwf	fsr2l,f,c
  3479  00104C  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3480  00104E  22DA               	addwfc	fsr2h,f,c
  3481  001050  0E04               	movlw	4
  3482  001052                     L123:
  3483  001052  18DE               	xorwf	postinc2,w,c
  3484  001054  10DE               	iorwf	postinc2,w,c
  3485  001056  A4D8               	btfss	status,2,c
  3486  001058  D029               	goto	l23875
  3487  00105A                     u28700:
  3488                           
  3489                           ; BSR set to: 0
  3490                           ;sm_MenuConfiguration_MC50.c: 123:             {;sm_MenuConfiguration_MC50.c: 124:      
      +                                     psm->current_state = st_MainMenu;
  3491  00105A  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3492  00105E  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3493  001062  0E00               	movlw	0
  3494  001064  D7BB               	goto	L9
  3495  001066                     l3233:
  3496                           
  3497                           ; BSR set to: 0
  3498  001066  D7FF               	goto	l3233
  3499  001068                     l23873:
  3500                           
  3501                           ; BSR set to: 0
  3502  001068  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3503  00106C  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3504  001070  50DF               	movf	indf2,w,c
  3505  001072  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  3506  001074  6BEC               	clrf	(??_sm_execute_menuConfiguration+1)& (0+255),b
  3507                           
  3508                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3509                           ; Switch size 1, requested type "simple"
  3510                           ; Number of cases is 1, Range of values is 0 to 0
  3511                           ; switch strategies available:
  3512                           ; Name         Instructions Cycles
  3513                           ; simple_byte            4     3 (average)
  3514                           ;	Chosen strategy is simple_byte
  3515  001076  51EC               	movf	(??_sm_execute_menuConfiguration+1)& (0+255),w,b
  3516  001078  0A00               	xorlw	0	; case 0
  3517  00107A  A4D8               	btfss	status,2,c
  3518  00107C  D7F4               	goto	l3233
  3519                           
  3520                           ; BSR set to: 0
  3521                           ; Switch size 1, requested type "simple"
  3522                           ; Number of cases is 7, Range of values is 0 to 6
  3523                           ; switch strategies available:
  3524                           ; Name         Instructions Cycles
  3525                           ; simple_byte           22    12 (average)
  3526                           ;	Chosen strategy is simple_byte
  3527  00107E  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  3528  001080  0A00               	xorlw	0	; case 0
  3529  001082  B4D8               	btfsc	status,2,c
  3530  001084  D74F               	goto	l23815
  3531  001086  0A01               	xorlw	1	; case 1
  3532  001088  B4D8               	btfsc	status,2,c
  3533  00108A  D78F               	goto	l23831
  3534  00108C  0A03               	xorlw	3	; case 2
  3535  00108E  B4D8               	btfsc	status,2,c
  3536  001090  D7D9               	goto	l23867
  3537  001092  0A01               	xorlw	1	; case 3
  3538  001094  B4D8               	btfsc	status,2,c
  3539  001096  D7A6               	goto	l23843
  3540  001098  0A07               	xorlw	7	; case 4
  3541  00109A  B4D8               	btfsc	status,2,c
  3542  00109C  D7AF               	goto	l23851
  3543  00109E  0A01               	xorlw	1	; case 5
  3544  0010A0  B4D8               	btfsc	status,2,c
  3545  0010A2  D7BD               	goto	l23859
  3546  0010A4  0A03               	xorlw	3	; case 6
  3547  0010A6  B4D8               	btfsc	status,2,c
  3548  0010A8  D7CD               	goto	l23867
  3549  0010AA  D7DD               	goto	l3233
  3550  0010AC                     l23875:
  3551                           
  3552                           ; BSR set to: 0
  3553                           ;sm_MenuConfiguration_MC50.c: 137:     sm_send_event(&menuConfiguration_stateMachine, ev
      +                          _NULL);
  3554  0010AC  0EBB               	movlw	low _menuConfiguration_stateMachine
  3555  0010AE  6E12               	movwf	sm_send_event@psm^0,c
  3556  0010B0  0E02               	movlw	high _menuConfiguration_stateMachine
  3557  0010B2  6E13               	movwf	(sm_send_event@psm+1)^0,c
  3558  0010B4  0E00               	movlw	0
  3559  0010B6  6E15               	movwf	(sm_send_event@event+1)^0,c
  3560  0010B8  0E00               	movlw	0
  3561  0010BA  6E14               	movwf	sm_send_event@event^0,c
  3562  0010BC  ECD5  F045         	call	_sm_send_event	;wreg free
  3563                           
  3564                           ;sm_MenuConfiguration_MC50.c: 142:     switch((sm_state_Menu_t) psm->current_state)
  3565  0010C0  D3BF               	goto	l24187
  3566  0010C2                     l23877:
  3567                           
  3568                           ; BSR set to: 0
  3569                           ;sm_MenuConfiguration_MC50.c: 145:         {;sm_MenuConfiguration_MC50.c: 146:          
      +                             if(var_sys.ProgrammingDistanceIs==TypeProgrammingModeFull)
  3570  0010C2  0E06               	movlw	6
  3571  0010C4  0101               	movlb	1	; () banked
  3572  0010C6  193B               	xorwf	(_var_sys+59)& (0+255),w,b	;volatile
  3573  0010C8  A4D8               	btfss	status,2,c
  3574  0010CA  D02F               	goto	l23887
  3575                           
  3576                           ; BSR set to: 1
  3577                           ;sm_MenuConfiguration_MC50.c: 147:             {;sm_MenuConfiguration_MC50.c: 148:      
      +                                     ts_system.timeoutMenu=10*(1000/50);
  3578  0010CC  0E00               	movlw	0
  3579  0010CE  6FAE               	movwf	(_ts_system+15)& (0+255),b	;volatile
  3580  0010D0  0EC8               	movlw	200
  3581  0010D2  6FAD               	movwf	(_ts_system+14)& (0+255),b	;volatile
  3582                           
  3583                           ;sm_MenuConfiguration_MC50.c: 149:                 var_sys.DistanceProgrammingActive=YES
      +                          ;
  3584  0010D4  0E01               	movlw	1
  3585  0010D6  6F40               	movwf	(_var_sys+64)& (0+255),b	;volatile
  3586                           
  3587                           ;sm_MenuConfiguration_MC50.c: 150:                 menu_st.parameterSelected=0;
  3588  0010D8  0E00               	movlw	0
  3589  0010DA  6F68               	movwf	(_menu_st+23)& (0+255),b
  3590                           
  3591                           ; BSR set to: 1
  3592                           ;sm_MenuConfiguration_MC50.c: 151:                 if (setValueToEdit(menu_st.actualMenu
      +                          ,menu_st.parameterSelected)) {
  3593  0010DC  C168  F03A         	movff	_menu_st+23,setValueToEdit@ParameterSelected
  3594  0010E0  5166               	movf	(_menu_st+21)& (0+255),w,b
  3595  0010E2  EC28  F017         	call	_setValueToEdit
  3596  0010E6  0900               	iorlw	0
  3597  0010E8  B4D8               	btfsc	status,2,c
  3598  0010EA  0012               	return	
  3599                           
  3600                           ; BSR set to: 0
  3601                           ;sm_MenuConfiguration_MC50.c: 153:                      sm_send_event(&menuConfiguration
      +                          _stateMachine, ev_addRemotes);
  3602  0010EC  0EBB               	movlw	low _menuConfiguration_stateMachine
  3603  0010EE  6E12               	movwf	sm_send_event@psm^0,c
  3604  0010F0  0E02               	movlw	high _menuConfiguration_stateMachine
  3605  0010F2  6E13               	movwf	(sm_send_event@psm+1)^0,c
  3606  0010F4  0E00               	movlw	0
  3607  0010F6  6E15               	movwf	(sm_send_event@event+1)^0,c
  3608  0010F8  0E08               	movlw	8
  3609  0010FA  6E14               	movwf	sm_send_event@event^0,c
  3610  0010FC  ECD5  F045         	call	_sm_send_event	;wreg free
  3611                           
  3612                           ;sm_MenuConfiguration_MC50.c: 154:                      SetSegmentValueIntermitentMain(e
      +                          dit_Param.tempValue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10),(1000/50));
  3613  001100  0E0A               	movlw	10
  3614  001102  6E10               	movwf	___lbdiv@divisor^0,c
  3615  001104  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3616  001106  ECC6  F049         	call	___lbdiv
  3617  00110A  0DF6               	mullw	246
  3618  00110C  50F3               	movf	243,w,c
  3619  00110E  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  3620  001110  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  3621  001112  0E00               	movlw	0
  3622  001114  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  3623  001116  0E14               	movlw	20
  3624  001118  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  3625  00111A  0E0A               	movlw	10
  3626  00111C  6E10               	movwf	___lbdiv@divisor^0,c
  3627  00111E  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3628  001120  ECC6  F049         	call	___lbdiv
  3629  001124  EC6E  F04D         	call	_SetSegmentValueIntermitentMain
  3630  001128  0012               	return	
  3631  00112A                     l23887:
  3632                           
  3633                           ; BSR set to: 1
  3634  00112A  0E05               	movlw	5
  3635  00112C  193B               	xorwf	(_var_sys+59)& (0+255),w,b	;volatile
  3636  00112E  A4D8               	btfss	status,2,c
  3637  001130  D02F               	goto	l23897
  3638                           
  3639                           ; BSR set to: 1
  3640                           ;sm_MenuConfiguration_MC50.c: 158:             {;sm_MenuConfiguration_MC50.c: 159:      
      +                                     ts_system.timeoutMenu=10*(1000/50);
  3641  001132  0E00               	movlw	0
  3642  001134  6FAE               	movwf	(_ts_system+15)& (0+255),b	;volatile
  3643  001136  0EC8               	movlw	200
  3644  001138  6FAD               	movwf	(_ts_system+14)& (0+255),b	;volatile
  3645                           
  3646                           ;sm_MenuConfiguration_MC50.c: 160:                 var_sys.DistanceProgrammingActive=YES
      +                          ;
  3647  00113A  0E01               	movlw	1
  3648  00113C  6F40               	movwf	(_var_sys+64)& (0+255),b	;volatile
  3649                           
  3650                           ;sm_MenuConfiguration_MC50.c: 161:                 menu_st.parameterSelected=1;
  3651  00113E  0E01               	movlw	1
  3652  001140  6F68               	movwf	(_menu_st+23)& (0+255),b
  3653                           
  3654                           ; BSR set to: 1
  3655                           ;sm_MenuConfiguration_MC50.c: 162:                 if (setValueToEdit(menu_st.actualMenu
      +                          ,menu_st.parameterSelected)) {
  3656  001142  C168  F03A         	movff	_menu_st+23,setValueToEdit@ParameterSelected
  3657  001146  5166               	movf	(_menu_st+21)& (0+255),w,b
  3658  001148  EC28  F017         	call	_setValueToEdit
  3659  00114C  0900               	iorlw	0
  3660  00114E  B4D8               	btfsc	status,2,c
  3661  001150  0012               	return	
  3662                           
  3663                           ; BSR set to: 0
  3664                           ;sm_MenuConfiguration_MC50.c: 164:                      sm_send_event(&menuConfiguration
      +                          _stateMachine, ev_addRemotes);
  3665  001152  0EBB               	movlw	low _menuConfiguration_stateMachine
  3666  001154  6E12               	movwf	sm_send_event@psm^0,c
  3667  001156  0E02               	movlw	high _menuConfiguration_stateMachine
  3668  001158  6E13               	movwf	(sm_send_event@psm+1)^0,c
  3669  00115A  0E00               	movlw	0
  3670  00115C  6E15               	movwf	(sm_send_event@event+1)^0,c
  3671  00115E  0E08               	movlw	8
  3672  001160  6E14               	movwf	sm_send_event@event^0,c
  3673  001162  ECD5  F045         	call	_sm_send_event	;wreg free
  3674                           
  3675                           ;sm_MenuConfiguration_MC50.c: 165:                      SetSegmentValueIntermitentMain(e
      +                          dit_Param.tempValue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10),(1000/50));
  3676  001166  0E0A               	movlw	10
  3677  001168  6E10               	movwf	___lbdiv@divisor^0,c
  3678  00116A  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3679  00116C  ECC6  F049         	call	___lbdiv
  3680  001170  0DF6               	mullw	246
  3681  001172  50F3               	movf	243,w,c
  3682  001174  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  3683  001176  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  3684  001178  0E00               	movlw	0
  3685  00117A  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  3686  00117C  0E14               	movlw	20
  3687  00117E  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  3688  001180  0E0A               	movlw	10
  3689  001182  6E10               	movwf	___lbdiv@divisor^0,c
  3690  001184  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3691  001186  ECC6  F049         	call	___lbdiv
  3692  00118A  EC6E  F04D         	call	_SetSegmentValueIntermitentMain
  3693                           
  3694                           ; BSR set to: 1
  3695                           ;sm_MenuConfiguration_MC50.c: 167:             }
  3696                           
  3697                           ;sm_MenuConfiguration_MC50.c: 166:                 }
  3698  00118E  0012               	return	
  3699  001190                     l23897:
  3700                           
  3701                           ; BSR set to: 1
  3702  001190  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  3703  001192  A4D8               	btfss	status,2,c
  3704  001194  D023               	goto	l23909
  3705                           
  3706                           ; BSR set to: 1
  3707                           ;sm_MenuConfiguration_MC50.c: 169:             {;sm_MenuConfiguration_MC50.c: 170:      
      +                                     ts_system.timeoutMenu= ((1000/50)*5) ;
  3708  001196  0E00               	movlw	0
  3709  001198  6FAE               	movwf	(_ts_system+15)& (0+255),b	;volatile
  3710  00119A  0E64               	movlw	100
  3711  00119C  6FAD               	movwf	(_ts_system+14)& (0+255),b	;volatile
  3712                           
  3713                           ;sm_MenuConfiguration_MC50.c: 171:                 if(menu_st.parameterSelected==0)
  3714  00119E  5168               	movf	(_menu_st+23)& (0+255),w,b
  3715  0011A0  A4D8               	btfss	status,2,c
  3716  0011A2  D003               	goto	l23903
  3717                           
  3718                           ; BSR set to: 1
  3719                           ;sm_MenuConfiguration_MC50.c: 172:                 {;sm_MenuConfiguration_MC50.c: 173:  
      +                                             menu_st.parameterSelected=menu_st.menuSize-1;
  3720  0011A4  0567               	decf	(_menu_st+22)& (0+255),w,b
  3721  0011A6  6F68               	movwf	(_menu_st+23)& (0+255),b
  3722                           
  3723                           ;sm_MenuConfiguration_MC50.c: 174:                 }
  3724  0011A8  D001               	goto	l23905
  3725  0011AA                     l23903:
  3726                           
  3727                           ; BSR set to: 1
  3728                           ;sm_MenuConfiguration_MC50.c: 176:                 {;sm_MenuConfiguration_MC50.c: 177:  
      +                                             menu_st.parameterSelected--;
  3729  0011AA  0768               	decf	(_menu_st+23)& (0+255),f,b
  3730  0011AC                     l23905:
  3731                           
  3732                           ; BSR set to: 1
  3733                           ;sm_MenuConfiguration_MC50.c: 179:                 SetSegmentValueMain(menu_st.menuList[
      +                          menu_st.parameterSelected].value_display1, menu_st.menuList[menu_st.parameterSelected].v
      +                          alue_display2);
  3734  0011AC  5168               	movf	(_menu_st+23)& (0+255),w,b
  3735  0011AE  0D02               	mullw	2
  3736  0011B0  0E52               	movlw	low (_menu_st+1)
  3737  0011B2  24F3               	addwf	243,w,c
  3738  0011B4  6ED9               	movwf	fsr2l,c
  3739  0011B6  0E01               	movlw	high (_menu_st+1)
  3740  0011B8  20F4               	addwfc	prodh,w,c
  3741  0011BA  6EDA               	movwf	fsr2h,c
  3742  0011BC  50DF               	movf	indf2,w,c
  3743  0011BE  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3744  0011C0  5168               	movf	(_menu_st+23)& (0+255),w,b
  3745  0011C2  0D02               	mullw	2
  3746  0011C4  0E51               	movlw	low _menu_st
  3747  0011C6  24F3               	addwf	243,w,c
  3748  0011C8  6ED9               	movwf	fsr2l,c
  3749  0011CA  0E01               	movlw	high _menu_st
  3750  0011CC  20F4               	addwfc	prodh,w,c
  3751  0011CE  6EDA               	movwf	fsr2h,c
  3752  0011D0  50DF               	movf	indf2,w,c
  3753  0011D2  ECD3  F04C         	call	_SetSegmentValueMain
  3754  0011D6                     l23907:
  3755                           
  3756                           ;sm_MenuConfiguration_MC50.c: 180:                 button_struct.processed=1;
  3757  0011D6  0E01               	movlw	1
  3758  0011D8  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  3759                           
  3760                           ;sm_MenuConfiguration_MC50.c: 181:             }
  3761  0011DA  0012               	return	
  3762  0011DC                     l23909:
  3763                           
  3764                           ; BSR set to: 1
  3765  0011DC  0E17               	movlw	23
  3766  0011DE  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  3767  0011E0  A4D8               	btfss	status,2,c
  3768  0011E2  D021               	goto	l23923
  3769                           
  3770                           ; BSR set to: 1
  3771                           ;sm_MenuConfiguration_MC50.c: 183:             {;sm_MenuConfiguration_MC50.c: 184:      
      +                                     ts_system.timeoutMenu=((1000/50)*5) ;
  3772  0011E4  0E00               	movlw	0
  3773  0011E6  6FAE               	movwf	(_ts_system+15)& (0+255),b	;volatile
  3774  0011E8  0E64               	movlw	100
  3775  0011EA  6FAD               	movwf	(_ts_system+14)& (0+255),b	;volatile
  3776                           
  3777                           ; BSR set to: 1
  3778                           ;sm_MenuConfiguration_MC50.c: 185:                 menu_st.parameterSelected++;
  3779  0011EC  2B68               	incf	(_menu_st+23)& (0+255),f,b
  3780                           
  3781                           ; BSR set to: 1
  3782                           ;sm_MenuConfiguration_MC50.c: 186:                 if(menu_st.parameterSelected>=menu_st
      +                          .menuSize)
  3783  0011EE  5167               	movf	(_menu_st+22)& (0+255),w,b
  3784  0011F0  5D68               	subwf	(_menu_st+23)& (0+255),w,b
  3785  0011F2  A0D8               	btfss	status,0,c
  3786  0011F4  D002               	goto	l23919
  3787                           
  3788                           ; BSR set to: 1
  3789                           ;sm_MenuConfiguration_MC50.c: 187:                 {;sm_MenuConfiguration_MC50.c: 188:  
      +                                             menu_st.parameterSelected=0;
  3790  0011F6  0E00               	movlw	0
  3791  0011F8  6F68               	movwf	(_menu_st+23)& (0+255),b
  3792  0011FA                     l23919:
  3793                           
  3794                           ; BSR set to: 1
  3795                           ;sm_MenuConfiguration_MC50.c: 190:                 SetSegmentValueMain(menu_st.menuList[
      +                          menu_st.parameterSelected].value_display1, menu_st.menuList[menu_st.parameterSelected].v
      +                          alue_display2);
  3796  0011FA  5168               	movf	(_menu_st+23)& (0+255),w,b
  3797  0011FC  0D02               	mullw	2
  3798  0011FE  0E52               	movlw	low (_menu_st+1)
  3799  001200  24F3               	addwf	243,w,c
  3800  001202  6ED9               	movwf	fsr2l,c
  3801  001204  0E01               	movlw	high (_menu_st+1)
  3802  001206  20F4               	addwfc	prodh,w,c
  3803  001208  6EDA               	movwf	fsr2h,c
  3804  00120A  50DF               	movf	indf2,w,c
  3805  00120C  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3806  00120E  5168               	movf	(_menu_st+23)& (0+255),w,b
  3807  001210  0D02               	mullw	2
  3808  001212  0E51               	movlw	low _menu_st
  3809  001214  24F3               	addwf	243,w,c
  3810  001216  6ED9               	movwf	fsr2l,c
  3811  001218  0E01               	movlw	high _menu_st
  3812  00121A  20F4               	addwfc	prodh,w,c
  3813  00121C  6EDA               	movwf	fsr2h,c
  3814  00121E  50DF               	movf	indf2,w,c
  3815  001220  ECD3  F04C         	call	_SetSegmentValueMain
  3816  001224  D7D8               	goto	l23907
  3817  001226                     l23923:
  3818                           
  3819                           ; BSR set to: 1
  3820  001226  0E0C               	movlw	12
  3821  001228  6166               	cpfslt	(_menu_st+21)& (0+255),b
  3822  00122A  D09A               	goto	l23979
  3823                           
  3824                           ; BSR set to: 1
  3825                           ;sm_MenuConfiguration_MC50.c: 194:             {;sm_MenuConfiguration_MC50.c: 195:      
      +                                     if (button_struct.current==0 && button_struct.timer>(( 500/50)) )
  3826  00122C  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  3827  00122E  A4D8               	btfss	status,2,c
  3828  001230  D053               	goto	l23945
  3829                           
  3830                           ; BSR set to: 1
  3831  001232  0E0A               	movlw	10
  3832  001234  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  3833  001236  D050               	goto	l23945
  3834                           
  3835                           ; BSR set to: 1
  3836                           ;sm_MenuConfiguration_MC50.c: 196:                 {;sm_MenuConfiguration_MC50.c: 197:  
      +                                             ts_system.timeoutMenu=((1000/50)*5) ;
  3837  001238  0E00               	movlw	0
  3838  00123A  6FAE               	movwf	(_ts_system+15)& (0+255),b	;volatile
  3839  00123C  0E64               	movlw	100
  3840  00123E  6FAD               	movwf	(_ts_system+14)& (0+255),b	;volatile
  3841                           
  3842                           ; BSR set to: 1
  3843                           ;sm_MenuConfiguration_MC50.c: 199:                     if (setValueToEdit(menu_st.actual
      +                          Menu,menu_st.parameterSelected))
  3844  001240  C168  F03A         	movff	_menu_st+23,setValueToEdit@ParameterSelected
  3845  001244  5166               	movf	(_menu_st+21)& (0+255),w,b
  3846  001246  EC28  F017         	call	_setValueToEdit
  3847  00124A  0900               	iorlw	0
  3848  00124C  B4D8               	btfsc	status,2,c
  3849  00124E  D7C3               	goto	l23907
  3850                           
  3851                           ; BSR set to: 0
  3852                           ;sm_MenuConfiguration_MC50.c: 200:                     {;sm_MenuConfiguration_MC50.c: 20
      +                          2:                          sm_send_event(&menuConfiguration_stateMachine, ev_ParameterI
      +                          sSelected);
  3853  001250  0EBB               	movlw	low _menuConfiguration_stateMachine
  3854  001252  6E12               	movwf	sm_send_event@psm^0,c
  3855  001254  0E02               	movlw	high _menuConfiguration_stateMachine
  3856  001256  6E13               	movwf	(sm_send_event@psm+1)^0,c
  3857  001258  0E00               	movlw	0
  3858  00125A  6E15               	movwf	(sm_send_event@event+1)^0,c
  3859  00125C  0E01               	movlw	1
  3860  00125E  6E14               	movwf	sm_send_event@event^0,c
  3861  001260  ECD5  F045         	call	_sm_send_event	;wreg free
  3862                           
  3863                           ;sm_MenuConfiguration_MC50.c: 203:                          if((edit_Param.Value==(unsig
      +                          ned char*)&var_sys_NVM.TypeofMotor)||(edit_Param.Value==(unsigned char*)&var_sys_NVM.Dir
      +                          ection_motor)){
  3864  001264  0E98               	movlw	_var_sys_NVM& (0+255)
  3865  001266  0F1C               	addlw	28
  3866  001268  0100               	movlb	0	; () banked
  3867  00126A  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  3868  00126C  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  3869  00126E  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  3870  001270  E101               	bnz	u28835
  3871  001272  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  3872  001274                     u28835:
  3873  001274  B4D8               	btfsc	status,2,c
  3874  001276  D009               	goto	u28840
  3875                           
  3876                           ; BSR set to: 0
  3877  001278  0E98               	movlw	_var_sys_NVM& (0+255)
  3878  00127A  0F1B               	addlw	27
  3879  00127C  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  3880  00127E  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  3881  001280  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  3882  001282  E101               	bnz	u28845
  3883  001284  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  3884  001286                     u28845:
  3885  001286  A4D8               	btfss	status,2,c
  3886  001288  D016               	goto	l23941
  3887  00128A                     u28840:
  3888                           
  3889                           ; BSR set to: 0
  3890                           ;sm_MenuConfiguration_MC50.c: 204:                            SetSegmentValueMain(menu_s
      +                          t.menuList[edit_Param.tempValue].value_display1, menu_st.menuList[edit_Param.tempValue].
      +                          value_display2);
  3891  00128A  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3892  00128C  0D02               	mullw	2
  3893  00128E  0E52               	movlw	low (_menu_st+1)
  3894  001290  24F3               	addwf	243,w,c
  3895  001292  6ED9               	movwf	fsr2l,c
  3896  001294  0E01               	movlw	high (_menu_st+1)
  3897  001296  20F4               	addwfc	prodh,w,c
  3898  001298  6EDA               	movwf	fsr2h,c
  3899  00129A  50DF               	movf	indf2,w,c
  3900  00129C  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3901  00129E  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3902  0012A0  0D02               	mullw	2
  3903  0012A2  0E51               	movlw	low _menu_st
  3904  0012A4  24F3               	addwf	243,w,c
  3905  0012A6  6ED9               	movwf	fsr2l,c
  3906  0012A8  0E01               	movlw	high _menu_st
  3907  0012AA  20F4               	addwfc	prodh,w,c
  3908  0012AC  6EDA               	movwf	fsr2h,c
  3909  0012AE  50DF               	movf	indf2,w,c
  3910  0012B0  ECD3  F04C         	call	_SetSegmentValueMain
  3911                           
  3912                           ;sm_MenuConfiguration_MC50.c: 206:                          }
  3913  0012B4  D790               	goto	l23907
  3914  0012B6                     l23941:
  3915                           
  3916                           ; BSR set to: 0
  3917                           ;sm_MenuConfiguration_MC50.c: 208:                          SetSegmentValueMain(edit_Par
      +                          am.tempValue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10));
  3918  0012B6  0E0A               	movlw	10
  3919  0012B8  6E10               	movwf	___lbdiv@divisor^0,c
  3920  0012BA  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3921  0012BC  ECC6  F049         	call	___lbdiv
  3922  0012C0  0DF6               	mullw	246
  3923  0012C2  50F3               	movf	243,w,c
  3924  0012C4  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  3925  0012C6  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3926  0012C8  0E0A               	movlw	10
  3927  0012CA  6E10               	movwf	___lbdiv@divisor^0,c
  3928  0012CC  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3929  0012CE  ECC6  F049         	call	___lbdiv
  3930  0012D2  ECD3  F04C         	call	_SetSegmentValueMain
  3931  0012D6  D77F               	goto	l23907
  3932  0012D8                     l23945:
  3933                           
  3934                           ; BSR set to: 1
  3935  0012D8  BFAE               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  3936  0012DA  D008               	goto	u28860
  3937  0012DC  51AE               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  3938  0012DE  E103               	bnz	u28850
  3939  0012E0  05AD               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  3940  0012E2  A0D8               	btfss	status,0,c
  3941  0012E4  D003               	goto	u28860
  3942  0012E6                     u28850:
  3943                           
  3944                           ; BSR set to: 1
  3945  0012E6  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  3946  0012E8  A4D8               	btfss	status,2,c
  3947  0012EA  D01E               	goto	l23963
  3948  0012EC                     u28860:
  3949                           
  3950                           ; BSR set to: 1
  3951  0012EC  0E02               	movlw	2
  3952  0012EE  6166               	cpfslt	(_menu_st+21)& (0+255),b
  3953  0012F0  D01B               	goto	l23963
  3954                           
  3955                           ; BSR set to: 1
  3956                           ;sm_MenuConfiguration_MC50.c: 216:                 {;sm_MenuConfiguration_MC50.c: 217:  
      +                                             ts_system.timeoutMenu=0;
  3957  0012F2  0E00               	movlw	0
  3958  0012F4  6FAE               	movwf	(_ts_system+15)& (0+255),b	;volatile
  3959  0012F6  0E00               	movlw	0
  3960  0012F8  6FAD               	movwf	(_ts_system+14)& (0+255),b	;volatile
  3961                           
  3962                           ; BSR set to: 1
  3963                           ;sm_MenuConfiguration_MC50.c: 218:                     sm_send_event(&main_stateMachine,
      +                           ev_goto_StandBy);
  3964  0012FA  0EF2               	movlw	low _main_stateMachine
  3965  0012FC  6E12               	movwf	sm_send_event@psm^0,c
  3966  0012FE  0E01               	movlw	high _main_stateMachine
  3967  001300  6E13               	movwf	(sm_send_event@psm+1)^0,c
  3968  001302  0E00               	movlw	0
  3969  001304  6E15               	movwf	(sm_send_event@event+1)^0,c
  3970  001306  0E07               	movlw	7
  3971  001308  6E14               	movwf	sm_send_event@event^0,c
  3972  00130A  ECD5  F045         	call	_sm_send_event	;wreg free
  3973                           
  3974                           ;sm_MenuConfiguration_MC50.c: 219:                     SetSegmentValueMain(dMinus,dMinus
      +                          );
  3975  00130E  0E18               	movlw	24
  3976  001310  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3977  001312  0E18               	movlw	24
  3978  001314  ECD3  F04C         	call	_SetSegmentValueMain
  3979                           
  3980                           ; BSR set to: 0
  3981                           ;sm_MenuConfiguration_MC50.c: 220:                     menu_st.lastMainParameterSelected
      +                           = 0;
  3982  001318  0E00               	movlw	0
  3983  00131A  0101               	movlb	1	; () banked
  3984  00131C  6F69               	movwf	(_menu_st+24)& (0+255),b
  3985                           
  3986                           ; BSR set to: 1
  3987                           ;sm_MenuConfiguration_MC50.c: 221:                     button_struct.processed=1;
  3988  00131E  0E01               	movlw	1
  3989  001320  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  3990                           
  3991                           ; BSR set to: 1
  3992                           ;sm_MenuConfiguration_MC50.c: 222:                     ClearFlag_rfCMD();
  3993  001322  EC26  F04E         	call	_ClearFlag_rfCMD	;wreg free
  3994                           
  3995                           ;sm_MenuConfiguration_MC50.c: 224:                 }
  3996  001326  0012               	return	
  3997  001328                     l23963:
  3998                           
  3999                           ; BSR set to: 1
  4000  001328  BFAE               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  4001  00132A  D008               	goto	u28890
  4002  00132C  51AE               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  4003  00132E  E103               	bnz	u28880
  4004  001330  05AD               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  4005  001332  A0D8               	btfss	status,0,c
  4006  001334  D003               	goto	u28890
  4007  001336                     u28880:
  4008                           
  4009                           ; BSR set to: 1
  4010  001336  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  4011  001338  A4D8               	btfss	status,2,c
  4012  00133A  D004               	goto	l23971
  4013  00133C                     u28890:
  4014                           
  4015                           ; BSR set to: 1
  4016                           ;sm_MenuConfiguration_MC50.c: 226:                 {;sm_MenuConfiguration_MC50.c: 228:  
      +                                             load_New_Menu(menu_st.lastMenu);
  4017  00133C  5165               	movf	(_menu_st+20)& (0+255),w,b
  4018  00133E  EC5B  F023         	call	_load_New_Menu
  4019  001342  D749               	goto	l23907
  4020  001344                     l23971:
  4021                           
  4022                           ; BSR set to: 1
  4023  001344  BFAE               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  4024  001346  D005               	goto	u28900
  4025  001348  51AE               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  4026  00134A  E102               	bnz	u28901
  4027  00134C  05AD               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  4028  00134E  B0D8               	btfsc	status,0,c
  4029  001350                     u28901:
  4030  001350  0012               	return	
  4031  001352                     u28900:
  4032                           
  4033                           ; BSR set to: 1
  4034  001352  0E01               	movlw	1
  4035  001354  6566               	cpfsgt	(_menu_st+21)& (0+255),b
  4036  001356  0012               	return	
  4037                           
  4038                           ; BSR set to: 1
  4039                           ;sm_MenuConfiguration_MC50.c: 232:                 {;sm_MenuConfiguration_MC50.c: 234:  
      +                                             load_New_Menu(menu_st.lastMenu);
  4040  001358  5165               	movf	(_menu_st+20)& (0+255),w,b
  4041  00135A  EC5B  F023         	call	_load_New_Menu
  4042  00135E  D73B               	goto	l23907
  4043  001360                     l23979:
  4044                           
  4045                           ; BSR set to: 1
  4046  001360  0E27               	movlw	39
  4047  001362  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  4048  001364  A4D8               	btfss	status,2,c
  4049  001366  D032               	goto	l23995
  4050                           
  4051                           ; BSR set to: 1
  4052  001368  0E0A               	movlw	10
  4053  00136A  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  4054  00136C  D02F               	goto	l23995
  4055                           
  4056                           ; BSR set to: 1
  4057  00136E  0E0D               	movlw	13
  4058  001370  1966               	xorwf	(_menu_st+21)& (0+255),w,b
  4059  001372  B4D8               	btfsc	status,2,c
  4060  001374  D02B               	goto	l23995
  4061                           
  4062                           ; BSR set to: 1
  4063                           ;sm_MenuConfiguration_MC50.c: 239:             {;sm_MenuConfiguration_MC50.c: 240:      
      +                                         ts_system.timeoutMenu=((1000/50)*5);
  4064  001376  0E00               	movlw	0
  4065  001378  6FAE               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4066  00137A  0E64               	movlw	100
  4067  00137C  6FAD               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4068                           
  4069                           ; BSR set to: 1
  4070                           ;sm_MenuConfiguration_MC50.c: 241:                     if (setValueToEdit(menu_st.actual
      +                          Menu,menu_st.parameterSelected))
  4071  00137E  C168  F03A         	movff	_menu_st+23,setValueToEdit@ParameterSelected
  4072  001382  5166               	movf	(_menu_st+21)& (0+255),w,b
  4073  001384  EC28  F017         	call	_setValueToEdit
  4074  001388  0900               	iorlw	0
  4075  00138A  B4D8               	btfsc	status,2,c
  4076  00138C  D724               	goto	l23907
  4077                           
  4078                           ; BSR set to: 0
  4079                           ;sm_MenuConfiguration_MC50.c: 243:                     {;sm_MenuConfiguration_MC50.c: 24
      +                          4:                         sm_send_event(&menuConfiguration_stateMachine, ev_addRemotes)
      +                          ;
  4080  00138E  0EBB               	movlw	low _menuConfiguration_stateMachine
  4081  001390  6E12               	movwf	sm_send_event@psm^0,c
  4082  001392  0E02               	movlw	high _menuConfiguration_stateMachine
  4083  001394  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4084  001396  0E00               	movlw	0
  4085  001398  6E15               	movwf	(sm_send_event@event+1)^0,c
  4086  00139A  0E08               	movlw	8
  4087  00139C  6E14               	movwf	sm_send_event@event^0,c
  4088  00139E  ECD5  F045         	call	_sm_send_event	;wreg free
  4089                           
  4090                           ;sm_MenuConfiguration_MC50.c: 245:                         SetSegmentValueIntermitentMai
      +                          n(edit_Param.tempValue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10),(1000/50)
      +                          );
  4091  0013A2  0E0A               	movlw	10
  4092  0013A4  6E10               	movwf	___lbdiv@divisor^0,c
  4093  0013A6  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4094  0013A8  ECC6  F049         	call	___lbdiv
  4095  0013AC  0DF6               	mullw	246
  4096  0013AE  50F3               	movf	243,w,c
  4097  0013B0  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  4098  0013B2  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  4099  0013B4  0E00               	movlw	0
  4100  0013B6  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  4101  0013B8  0E14               	movlw	20
  4102  0013BA  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  4103  0013BC  0E0A               	movlw	10
  4104  0013BE  6E10               	movwf	___lbdiv@divisor^0,c
  4105  0013C0  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4106  0013C2  ECC6  F049         	call	___lbdiv
  4107  0013C6  EC6E  F04D         	call	_SetSegmentValueIntermitentMain
  4108  0013CA  D705               	goto	l23907
  4109  0013CC                     l23995:
  4110                           
  4111                           ; BSR set to: 1
  4112  0013CC  0E0D               	movlw	13
  4113  0013CE  1966               	xorwf	(_menu_st+21)& (0+255),w,b
  4114  0013D0  A4D8               	btfss	status,2,c
  4115  0013D2  D027               	goto	l24013
  4116                           
  4117                           ; BSR set to: 1
  4118  0013D4  51AB               	movf	(_ts_system+12)& (0+255),w,b	;volatile
  4119  0013D6  11AC               	iorwf	(_ts_system+13)& (0+255),w,b	;volatile
  4120  0013D8  A4D8               	btfss	status,2,c
  4121  0013DA  D023               	goto	l24013
  4122                           
  4123                           ; BSR set to: 1
  4124                           ;sm_MenuConfiguration_MC50.c: 250:             {;sm_MenuConfiguration_MC50.c: 251:      
      +                                     var_sys_NVM.positionRemotesFull=0;
  4125  0013DC  0E00               	movlw	0
  4126  0013DE  0100               	movlb	0	; () banked
  4127  0013E0  6FB8               	movwf	(_var_sys_NVM+32)& (0+255),b	;volatile
  4128                           
  4129                           ;sm_MenuConfiguration_MC50.c: 252:                 var_sys_NVM.positionRemotesWalk=0;
  4130  0013E2  0E00               	movlw	0
  4131  0013E4  6FB9               	movwf	(_var_sys_NVM+33)& (0+255),b	;volatile
  4132                           
  4133                           ;sm_MenuConfiguration_MC50.c: 253:                 var_sys_NVM.OnlyRollingCode=NO;
  4134  0013E6  0E00               	movlw	0
  4135  0013E8  6FBE               	movwf	(_var_sys_NVM+38)& (0+255),b	;volatile
  4136                           
  4137                           ; BSR set to: 0
  4138                           ;sm_MenuConfiguration_MC50.c: 254:                 SaveNVM_VarSystem(pageMemoryCounters)
      +                          ;
  4139  0013EA  0E02               	movlw	2
  4140  0013EC  ECE3  F049         	call	_SaveNVM_VarSystem
  4141                           
  4142                           ;sm_MenuConfiguration_MC50.c: 255:                 sm_send_event(&main_stateMachine, ev_
      +                          goto_StandBy);
  4143  0013F0  0EF2               	movlw	low _main_stateMachine
  4144  0013F2  6E12               	movwf	sm_send_event@psm^0,c
  4145  0013F4  0E01               	movlw	high _main_stateMachine
  4146  0013F6  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4147  0013F8  0E00               	movlw	0
  4148  0013FA  6E15               	movwf	(sm_send_event@event+1)^0,c
  4149  0013FC  0E07               	movlw	7
  4150  0013FE  6E14               	movwf	sm_send_event@event^0,c
  4151  001400  ECD5  F045         	call	_sm_send_event	;wreg free
  4152                           
  4153                           ;sm_MenuConfiguration_MC50.c: 256:                 SetSegmentValueMain(dMinus,dMinus);
  4154  001404  0E18               	movlw	24
  4155  001406  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4156  001408  0E18               	movlw	24
  4157  00140A  ECD3  F04C         	call	_SetSegmentValueMain
  4158                           
  4159                           ; BSR set to: 0
  4160                           ;sm_MenuConfiguration_MC50.c: 257:                 button_struct.processed=1;
  4161  00140E  0E01               	movlw	1
  4162  001410  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  4163  001412                     l24009:
  4164                           
  4165                           ;sm_MenuConfiguration_MC50.c: 258:                 ClearFlag_rfCMD();
  4166  001412  EC26  F04E         	call	_ClearFlag_rfCMD	;wreg free
  4167  001416                     l24011:
  4168                           
  4169                           ;sm_MenuConfiguration_MC50.c: 259:                  ts_system.timeoutMenu=0;
  4170  001416  0E00               	movlw	0
  4171  001418  0101               	movlb	1	; () banked
  4172  00141A  6FAE               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4173  00141C  0E00               	movlw	0
  4174  00141E  6FAD               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4175                           
  4176                           ;sm_MenuConfiguration_MC50.c: 260:             }
  4177  001420  0012               	return	
  4178  001422                     l24013:
  4179                           
  4180                           ; BSR set to: 1
  4181  001422  BFAE               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  4182  001424  D008               	goto	u28990
  4183  001426  51AE               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  4184  001428  E103               	bnz	u28980
  4185  00142A  05AD               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  4186  00142C  A0D8               	btfss	status,0,c
  4187  00142E  D003               	goto	u28990
  4188  001430                     u28980:
  4189                           
  4190                           ; BSR set to: 1
  4191  001430  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  4192  001432  A4D8               	btfss	status,2,c
  4193  001434  0012               	return	
  4194  001436                     u28990:
  4195                           
  4196                           ; BSR set to: 1
  4197                           ;sm_MenuConfiguration_MC50.c: 262:             {;sm_MenuConfiguration_MC50.c: 263:      
      +                                      sm_send_event(&main_stateMachine, ev_goto_StandBy);
  4198  001436  0EF2               	movlw	low _main_stateMachine
  4199  001438  6E12               	movwf	sm_send_event@psm^0,c
  4200  00143A  0E01               	movlw	high _main_stateMachine
  4201  00143C  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4202  00143E  0E00               	movlw	0
  4203  001440  6E15               	movwf	(sm_send_event@event+1)^0,c
  4204  001442  0E07               	movlw	7
  4205  001444  6E14               	movwf	sm_send_event@event^0,c
  4206  001446  ECD5  F045         	call	_sm_send_event	;wreg free
  4207                           
  4208                           ;sm_MenuConfiguration_MC50.c: 264:                  SetSegmentValueMain(dMinus,dMinus);
  4209  00144A  0E18               	movlw	24
  4210  00144C  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4211  00144E  0E18               	movlw	24
  4212  001450  ECD3  F04C         	call	_SetSegmentValueMain
  4213                           
  4214                           ; BSR set to: 0
  4215                           ;sm_MenuConfiguration_MC50.c: 265:                  ClearFlag_rfCMD();
  4216  001454  EC26  F04E         	call	_ClearFlag_rfCMD	;wreg free
  4217                           
  4218                           ;sm_MenuConfiguration_MC50.c: 266:                  button_struct.processed=1;
  4219  001458  0E01               	movlw	1
  4220  00145A  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  4221  00145C  D7DC               	goto	l24011
  4222  00145E                     l24027:
  4223                           
  4224                           ; BSR set to: 0
  4225                           ;sm_MenuConfiguration_MC50.c: 272:         {;sm_MenuConfiguration_MC50.c: 273:          
      +                             if (button_struct.current==0x00)
  4226  00145E  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  4227  001460  A4D8               	btfss	status,2,c
  4228  001462  D047               	goto	l24047
  4229                           
  4230                           ; BSR set to: 0
  4231                           ;sm_MenuConfiguration_MC50.c: 274:             {;sm_MenuConfiguration_MC50.c: 275:      
      +                                     ts_system.timeoutMenu=((1000/50)*5);
  4232  001464  0E00               	movlw	0
  4233  001466  0101               	movlb	1	; () banked
  4234  001468  6FAE               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4235  00146A  0E64               	movlw	100
  4236  00146C  6FAD               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4237                           
  4238                           ; BSR set to: 1
  4239                           ;sm_MenuConfiguration_MC50.c: 276:                 if(edit_Param.tempValue<=edit_Param.M
      +                          in)
  4240  00146E  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4241  001470  5C4B               	subwf	(_edit_Param+5)^0,w,c	;volatile
  4242  001472  A0D8               	btfss	status,0,c
  4243  001474  D003               	goto	l24035
  4244                           
  4245                           ; BSR set to: 1
  4246                           ;sm_MenuConfiguration_MC50.c: 277:                 {;sm_MenuConfiguration_MC50.c: 278:  
      +                                             edit_Param.tempValue=edit_Param.Max;
  4247  001476  C04A  F049         	movff	_edit_Param+4,_edit_Param+3	;volatile
  4248                           
  4249                           ;sm_MenuConfiguration_MC50.c: 279:                 }
  4250  00147A  D001               	goto	l24037
  4251  00147C                     l24035:
  4252                           
  4253                           ; BSR set to: 1
  4254                           ;sm_MenuConfiguration_MC50.c: 281:                 {;sm_MenuConfiguration_MC50.c: 282:  
      +                                             edit_Param.tempValue--;
  4255  00147C  0649               	decf	(_edit_Param+3)^0,f,c	;volatile
  4256  00147E                     l24037:
  4257                           
  4258                           ; BSR set to: 1
  4259                           ;sm_MenuConfiguration_MC50.c: 284:                 if ((edit_Param.Value==(unsigned char
      +                          *)&var_sys_NVM.TypeofMotor)||(edit_Param.Value==(unsigned char*)&var_sys_NVM.Direction_m
      +                          otor)){
  4260  00147E  0E98               	movlw	_var_sys_NVM& (0+255)
  4261  001480  0F1C               	addlw	28
  4262  001482  0100               	movlb	0	; () banked
  4263  001484  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  4264  001486  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  4265  001488  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  4266  00148A  E101               	bnz	u29025
  4267  00148C  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  4268  00148E                     u29025:
  4269  00148E  B4D8               	btfsc	status,2,c
  4270  001490  D009               	goto	u29030
  4271                           
  4272                           ; BSR set to: 0
  4273  001492  0E98               	movlw	_var_sys_NVM& (0+255)
  4274  001494  0F1B               	addlw	27
  4275  001496  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  4276  001498  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  4277  00149A  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  4278  00149C  E101               	bnz	u29035
  4279  00149E  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  4280  0014A0                     u29035:
  4281  0014A0  A4D8               	btfss	status,2,c
  4282  0014A2  D016               	goto	l24043
  4283  0014A4                     u29030:
  4284                           
  4285                           ; BSR set to: 0
  4286                           ;sm_MenuConfiguration_MC50.c: 285:                 SetSegmentValueMain(menu_st.menuList[
      +                          edit_Param.tempValue].value_display1, menu_st.menuList[edit_Param.tempValue].value_displ
      +                          ay2);
  4287  0014A4  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4288  0014A6  0D02               	mullw	2
  4289  0014A8  0E52               	movlw	low (_menu_st+1)
  4290  0014AA  24F3               	addwf	243,w,c
  4291  0014AC  6ED9               	movwf	fsr2l,c
  4292  0014AE  0E01               	movlw	high (_menu_st+1)
  4293  0014B0  20F4               	addwfc	prodh,w,c
  4294  0014B2  6EDA               	movwf	fsr2h,c
  4295  0014B4  50DF               	movf	indf2,w,c
  4296  0014B6  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4297  0014B8  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4298  0014BA  0D02               	mullw	2
  4299  0014BC  0E51               	movlw	low _menu_st
  4300  0014BE  24F3               	addwf	243,w,c
  4301  0014C0  6ED9               	movwf	fsr2l,c
  4302  0014C2  0E01               	movlw	high _menu_st
  4303  0014C4  20F4               	addwfc	prodh,w,c
  4304  0014C6  6EDA               	movwf	fsr2h,c
  4305  0014C8  50DF               	movf	indf2,w,c
  4306  0014CA  ECD3  F04C         	call	_SetSegmentValueMain
  4307                           
  4308                           ;sm_MenuConfiguration_MC50.c: 286:                 }
  4309  0014CE  D683               	goto	l23907
  4310  0014D0                     l24043:
  4311                           
  4312                           ; BSR set to: 0
  4313                           ;sm_MenuConfiguration_MC50.c: 289:                 SetSegmentValueMain(edit_Param.tempVa
      +                          lue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10));
  4314  0014D0  0E0A               	movlw	10
  4315  0014D2  6E10               	movwf	___lbdiv@divisor^0,c
  4316  0014D4  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4317  0014D6  ECC6  F049         	call	___lbdiv
  4318  0014DA  0DF6               	mullw	246
  4319  0014DC  50F3               	movf	243,w,c
  4320  0014DE  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  4321  0014E0  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4322  0014E2  0E0A               	movlw	10
  4323  0014E4  6E10               	movwf	___lbdiv@divisor^0,c
  4324  0014E6  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4325  0014E8  ECC6  F049         	call	___lbdiv
  4326  0014EC  ECD3  F04C         	call	_SetSegmentValueMain
  4327  0014F0  D672               	goto	l23907
  4328  0014F2                     l24047:
  4329                           
  4330                           ; BSR set to: 0
  4331  0014F2  0E17               	movlw	23
  4332  0014F4  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  4333  0014F6  A4D8               	btfss	status,2,c
  4334  0014F8  D045               	goto	l24067
  4335                           
  4336                           ; BSR set to: 0
  4337                           ;sm_MenuConfiguration_MC50.c: 294:             {;sm_MenuConfiguration_MC50.c: 295:      
      +                                     ts_system.timeoutMenu=((1000/50)*5) ;
  4338  0014FA  0E00               	movlw	0
  4339  0014FC  0101               	movlb	1	; () banked
  4340  0014FE  6FAE               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4341  001500  0E64               	movlw	100
  4342  001502  6FAD               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4343                           
  4344                           ; BSR set to: 1
  4345                           ;sm_MenuConfiguration_MC50.c: 296:                 edit_Param.tempValue++;
  4346  001504  2A49               	incf	(_edit_Param+3)^0,f,c	;volatile
  4347                           
  4348                           ; BSR set to: 1
  4349                           ;sm_MenuConfiguration_MC50.c: 297:                 if(edit_Param.tempValue>edit_Param.Ma
      +                          x)
  4350  001506  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4351  001508  5C4A               	subwf	(_edit_Param+4)^0,w,c	;volatile
  4352  00150A  A0D8               	btfss	status,0,c
  4353                           
  4354                           ; BSR set to: 1
  4355                           ;sm_MenuConfiguration_MC50.c: 298:                 {;sm_MenuConfiguration_MC50.c: 299:  
      +                                              edit_Param.tempValue=edit_Param.Min;
  4356  00150C  C04B  F049         	movff	_edit_Param+5,_edit_Param+3	;volatile
  4357                           
  4358                           ; BSR set to: 1
  4359                           ;sm_MenuConfiguration_MC50.c: 301:                 if ((edit_Param.Value==(unsigned char
      +                          *)&var_sys_NVM.TypeofMotor)||(edit_Param.Value==(unsigned char*)&var_sys_NVM.Direction_m
      +                          otor)){
  4360  001510  0E98               	movlw	_var_sys_NVM& (0+255)
  4361  001512  0F1C               	addlw	28
  4362  001514  0100               	movlb	0	; () banked
  4363  001516  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  4364  001518  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  4365  00151A  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  4366  00151C  E101               	bnz	u29065
  4367  00151E  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  4368  001520                     u29065:
  4369  001520  B4D8               	btfsc	status,2,c
  4370  001522  D009               	goto	u29070
  4371                           
  4372                           ; BSR set to: 0
  4373  001524  0E98               	movlw	_var_sys_NVM& (0+255)
  4374  001526  0F1B               	addlw	27
  4375  001528  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  4376  00152A  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  4377  00152C  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  4378  00152E  E101               	bnz	u29075
  4379  001530  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  4380  001532                     u29075:
  4381  001532  A4D8               	btfss	status,2,c
  4382  001534  D016               	goto	l24063
  4383  001536                     u29070:
  4384                           
  4385                           ; BSR set to: 0
  4386                           ;sm_MenuConfiguration_MC50.c: 302:                     SetSegmentValueMain(menu_st.menuL
      +                          ist[edit_Param.tempValue].value_display1, menu_st.menuList[edit_Param.tempValue].value_d
      +                          isplay2);
  4387  001536  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4388  001538  0D02               	mullw	2
  4389  00153A  0E52               	movlw	low (_menu_st+1)
  4390  00153C  24F3               	addwf	243,w,c
  4391  00153E  6ED9               	movwf	fsr2l,c
  4392  001540  0E01               	movlw	high (_menu_st+1)
  4393  001542  20F4               	addwfc	prodh,w,c
  4394  001544  6EDA               	movwf	fsr2h,c
  4395  001546  50DF               	movf	indf2,w,c
  4396  001548  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4397  00154A  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4398  00154C  0D02               	mullw	2
  4399  00154E  0E51               	movlw	low _menu_st
  4400  001550  24F3               	addwf	243,w,c
  4401  001552  6ED9               	movwf	fsr2l,c
  4402  001554  0E01               	movlw	high _menu_st
  4403  001556  20F4               	addwfc	prodh,w,c
  4404  001558  6EDA               	movwf	fsr2h,c
  4405  00155A  50DF               	movf	indf2,w,c
  4406  00155C  ECD3  F04C         	call	_SetSegmentValueMain
  4407                           
  4408                           ;sm_MenuConfiguration_MC50.c: 303:                 }
  4409  001560  D63A               	goto	l23907
  4410  001562                     l24063:
  4411                           
  4412                           ; BSR set to: 0
  4413                           ;sm_MenuConfiguration_MC50.c: 306:                 SetSegmentValueMain(edit_Param.tempVa
      +                          lue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10));
  4414  001562  0E0A               	movlw	10
  4415  001564  6E10               	movwf	___lbdiv@divisor^0,c
  4416  001566  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4417  001568  ECC6  F049         	call	___lbdiv
  4418  00156C  0DF6               	mullw	246
  4419  00156E  50F3               	movf	243,w,c
  4420  001570  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  4421  001572  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4422  001574  0E0A               	movlw	10
  4423  001576  6E10               	movwf	___lbdiv@divisor^0,c
  4424  001578  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4425  00157A  ECC6  F049         	call	___lbdiv
  4426  00157E  ECD3  F04C         	call	_SetSegmentValueMain
  4427  001582  D629               	goto	l23907
  4428  001584                     l24067:
  4429                           
  4430                           ; BSR set to: 0
  4431  001584  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  4432  001586  A4D8               	btfss	status,2,c
  4433  001588  D023               	goto	l24083
  4434                           
  4435                           ; BSR set to: 0
  4436  00158A  0E09               	movlw	9
  4437  00158C  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  4438  00158E  D020               	goto	l24083
  4439                           
  4440                           ; BSR set to: 0
  4441                           ;sm_MenuConfiguration_MC50.c: 312:             {;sm_MenuConfiguration_MC50.c: 313:      
      +                                     ts_system.timeoutMenu=((1000/50)*5) ;
  4442  001590  0E00               	movlw	0
  4443  001592  0101               	movlb	1	; () banked
  4444  001594  6FAE               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4445  001596  0E64               	movlw	100
  4446  001598  6FAD               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4447                           
  4448                           ; BSR set to: 1
  4449                           ;sm_MenuConfiguration_MC50.c: 315:                 edit_Param.Value[0]=edit_Param.tempVa
      +                          lue;
  4450  00159A  C047  FFD9         	movff	_edit_Param+1,fsr2l	;volatile
  4451  00159E  C048  FFDA         	movff	_edit_Param+2,fsr2h	;volatile
  4452  0015A2  C049  FFDF         	movff	_edit_Param+3,indf2	;volatile
  4453                           
  4454                           ; BSR set to: 1
  4455                           ;sm_MenuConfiguration_MC50.c: 316:                 sm_send_event(&menuConfiguration_stat
      +                          eMachine, ev_ParameterIsEdited);
  4456  0015A6  0EBB               	movlw	low _menuConfiguration_stateMachine
  4457  0015A8  6E12               	movwf	sm_send_event@psm^0,c
  4458  0015AA  0E02               	movlw	high _menuConfiguration_stateMachine
  4459  0015AC  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4460  0015AE  0E00               	movlw	0
  4461  0015B0  6E15               	movwf	(sm_send_event@event+1)^0,c
  4462  0015B2  0E02               	movlw	2
  4463  0015B4  6E14               	movwf	sm_send_event@event^0,c
  4464  0015B6  ECD5  F045         	call	_sm_send_event	;wreg free
  4465                           
  4466                           ;sm_MenuConfiguration_MC50.c: 317:                 SetSegmentValueMain(dBar,d1);
  4467  0015BA  0E01               	movlw	1
  4468  0015BC  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4469  0015BE  0E19               	movlw	25
  4470  0015C0  ECD3  F04C         	call	_SetSegmentValueMain
  4471                           
  4472                           ; BSR set to: 0
  4473                           ;sm_MenuConfiguration_MC50.c: 318:                 ts_system.timeSinalizationDigit=((100
      +                          0/50)*2);
  4474  0015C4  0E00               	movlw	0
  4475  0015C6  0101               	movlb	1	; () banked
  4476  0015C8  6FAC               	movwf	(_ts_system+13)& (0+255),b	;volatile
  4477  0015CA  0E28               	movlw	40
  4478  0015CC  6FAB               	movwf	(_ts_system+12)& (0+255),b	;volatile
  4479  0015CE  D603               	goto	l23907
  4480  0015D0                     l24083:
  4481                           
  4482                           ; BSR set to: 0
  4483  0015D0  0101               	movlb	1	; () banked
  4484  0015D2  BFAE               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  4485  0015D4  D008               	goto	u29110
  4486  0015D6  51AE               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  4487  0015D8  E103               	bnz	u29100
  4488  0015DA  05AD               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  4489  0015DC  A0D8               	btfss	status,0,c
  4490  0015DE  D003               	goto	u29110
  4491  0015E0                     u29100:
  4492                           
  4493                           ; BSR set to: 1
  4494  0015E0  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  4495  0015E2  A4D8               	btfss	status,2,c
  4496  0015E4  0012               	return	
  4497  0015E6                     u29110:
  4498                           
  4499                           ; BSR set to: 1
  4500                           ;sm_MenuConfiguration_MC50.c: 323:             {;sm_MenuConfiguration_MC50.c: 324:      
      +                                     ts_system.timeoutMenu=((1000/50)*5) ;
  4501  0015E6  0E00               	movlw	0
  4502  0015E8  6FAE               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4503  0015EA  0E64               	movlw	100
  4504  0015EC  6FAD               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4505                           
  4506                           ; BSR set to: 1
  4507                           ;sm_MenuConfiguration_MC50.c: 325:                 load_New_Menu(menu_st.actualMenu);
  4508  0015EE  5166               	movf	(_menu_st+21)& (0+255),w,b
  4509  0015F0  EC5B  F023         	call	_load_New_Menu
  4510                           
  4511                           ;sm_MenuConfiguration_MC50.c: 326:                 sm_send_event(&menuConfiguration_stat
      +                          eMachine, ev_CancelEdition);
  4512  0015F4  0EBB               	movlw	low _menuConfiguration_stateMachine
  4513  0015F6  6E12               	movwf	sm_send_event@psm^0,c
  4514  0015F8  0E02               	movlw	high _menuConfiguration_stateMachine
  4515  0015FA  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4516  0015FC  0E00               	movlw	0
  4517  0015FE  6E15               	movwf	(sm_send_event@event+1)^0,c
  4518  001600  0E03               	movlw	3
  4519  001602  6E14               	movwf	sm_send_event@event^0,c
  4520  001604  ECD5  F045         	call	_sm_send_event	;wreg free
  4521  001608  D5E6               	goto	l23907
  4522  00160A                     l24095:
  4523                           
  4524                           ; BSR set to: 0
  4525                           ;sm_MenuConfiguration_MC50.c: 332:         {;sm_MenuConfiguration_MC50.c: 333:          
      +                             if (ts_system.timeSinalizationDigit<=0)
  4526  00160A  0101               	movlb	1	; () banked
  4527  00160C  BFAC               	btfsc	(_ts_system+13)& (0+255),7,b	;volatile
  4528  00160E  D005               	goto	u29120
  4529  001610  51AC               	movf	(_ts_system+13)& (0+255),w,b	;volatile
  4530  001612  E102               	bnz	u29121
  4531  001614  05AB               	decf	(_ts_system+12)& (0+255),w,b	;volatile
  4532  001616  B0D8               	btfsc	status,0,c
  4533  001618                     u29121:
  4534  001618  0012               	return	
  4535  00161A                     u29120:
  4536                           
  4537                           ; BSR set to: 1
  4538                           ;sm_MenuConfiguration_MC50.c: 334:             {;sm_MenuConfiguration_MC50.c: 335:      
      +                                     ts_system.timeoutMenu=((1000/50)*5) ;
  4539  00161A  0E00               	movlw	0
  4540  00161C  6FAE               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4541  00161E  0E64               	movlw	100
  4542  001620  6FAD               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4543                           
  4544                           ; BSR set to: 1
  4545                           ;sm_MenuConfiguration_MC50.c: 337:                 if((menu_st.actualMenu==E_Menu && men
      +                          u_st.parameterSelected==8)||(edit_Param.Value==(unsigned char*)&var_sys_NVM.TypeofMotor)
      +                          )
  4546  001622  0566               	decf	(_menu_st+21)& (0+255),w,b
  4547  001624  A4D8               	btfss	status,2,c
  4548  001626  D004               	goto	u29140
  4549                           
  4550                           ; BSR set to: 1
  4551  001628  0E08               	movlw	8
  4552  00162A  1968               	xorwf	(_menu_st+23)& (0+255),w,b
  4553  00162C  B4D8               	btfsc	status,2,c
  4554  00162E  D00A               	goto	u29150
  4555  001630                     u29140:
  4556                           
  4557                           ; BSR set to: 1
  4558  001630  0E98               	movlw	_var_sys_NVM& (0+255)
  4559  001632  0F1C               	addlw	28
  4560  001634  0100               	movlb	0	; () banked
  4561  001636  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  4562  001638  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  4563  00163A  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  4564  00163C  E101               	bnz	u29155
  4565  00163E  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  4566  001640                     u29155:
  4567  001640  A4D8               	btfss	status,2,c
  4568  001642  D005               	goto	l24107
  4569  001644                     u29150:
  4570                           
  4571                           ;sm_MenuConfiguration_MC50.c: 338:                 {;sm_MenuConfiguration_MC50.c: 341:  
      +                                             ResetDefaultMemory(var_sys_NVM.TypeofMotor);
  4572  001644  0100               	movlb	0	; () banked
  4573  001646  51B4               	movf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
  4574  001648  EC8D  F032         	call	_ResetDefaultMemory
  4575                           
  4576                           ;sm_MenuConfiguration_MC50.c: 343:                 }
  4577  00164C  D023               	goto	l24125
  4578  00164E                     l24107:
  4579                           
  4580                           ; BSR set to: 0
  4581  00164E  0101               	movlb	1	; () banked
  4582  001650  0566               	decf	(_menu_st+21)& (0+255),w,b
  4583  001652  B4D8               	btfsc	status,2,c
  4584  001654  D004               	goto	u29170
  4585                           
  4586                           ; BSR set to: 1
  4587  001656  0E0A               	movlw	10
  4588  001658  1966               	xorwf	(_menu_st+21)& (0+255),w,b
  4589  00165A  A4D8               	btfss	status,2,c
  4590  00165C  D004               	goto	l24113
  4591  00165E                     u29170:
  4592                           
  4593                           ; BSR set to: 1
  4594                           ;sm_MenuConfiguration_MC50.c: 345:                 {;sm_MenuConfiguration_MC50.c: 346:  
      +                                             SaveNVM_VarSystem(pageMemoryE);
  4595  00165E  0E01               	movlw	1
  4596  001660  ECE3  F049         	call	_SaveNVM_VarSystem
  4597                           
  4598                           ;sm_MenuConfiguration_MC50.c: 347:                 }
  4599  001664  D017               	goto	l24125
  4600  001666                     l24113:
  4601                           
  4602                           ; BSR set to: 1
  4603                           ;sm_MenuConfiguration_MC50.c: 349:                 {;sm_MenuConfiguration_MC50.c: 350:  
      +                                             if (menu_st.parameterSelected == 1 && edit_Param.Value[0] >=1 && menu
      +                          _st.actualMenu == P2_SMenu )
  4604  001666  0568               	decf	(_menu_st+23)& (0+255),w,b
  4605  001668  A4D8               	btfss	status,2,c
  4606  00166A  D00E               	goto	l24121
  4607                           
  4608                           ; BSR set to: 1
  4609  00166C  C047  FFD9         	movff	_edit_Param+1,fsr2l	;volatile
  4610  001670  C048  FFDA         	movff	_edit_Param+2,fsr2h	;volatile
  4611  001674  50DF               	movf	indf2,w,c
  4612  001676  B4D8               	btfsc	status,2,c
  4613  001678  D007               	goto	l24121
  4614                           
  4615                           ; BSR set to: 1
  4616  00167A  0E06               	movlw	6
  4617  00167C  1966               	xorwf	(_menu_st+21)& (0+255),w,b
  4618  00167E  A4D8               	btfss	status,2,c
  4619  001680  D003               	goto	l24121
  4620                           
  4621                           ; BSR set to: 1
  4622                           ;sm_MenuConfiguration_MC50.c: 351:                     {;sm_MenuConfiguration_MC50.c: 35
      +                          2:                       var_sys_NVM.motorPower = 9;
  4623  001682  0E09               	movlw	9
  4624  001684  0100               	movlb	0	; () banked
  4625  001686  6F9A               	movwf	(_var_sys_NVM+2)& (0+255),b	;volatile
  4626  001688                     l24121:
  4627                           
  4628                           ;sm_MenuConfiguration_MC50.c: 355:                       SaveNVM_VarSystem(pageMemoryE);
  4629  001688  0E01               	movlw	1
  4630  00168A  ECE3  F049         	call	_SaveNVM_VarSystem
  4631                           
  4632                           ;sm_MenuConfiguration_MC50.c: 356:                       SaveNVM_VarSystem(pageMemoryP);
  4633  00168E  0E00               	movlw	0
  4634  001690  ECE3  F049         	call	_SaveNVM_VarSystem
  4635  001694                     l24125:
  4636                           
  4637                           ;sm_MenuConfiguration_MC50.c: 360:                 sm_send_event(&menuConfiguration_stat
      +                          eMachine, ev_ParameterIsSaved);
  4638  001694  0EBB               	movlw	low _menuConfiguration_stateMachine
  4639  001696  6E12               	movwf	sm_send_event@psm^0,c
  4640  001698  0E02               	movlw	high _menuConfiguration_stateMachine
  4641  00169A  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4642  00169C  0E00               	movlw	0
  4643  00169E  6E15               	movwf	(sm_send_event@event+1)^0,c
  4644  0016A0  0E04               	movlw	4
  4645  0016A2  6E14               	movwf	sm_send_event@event^0,c
  4646  0016A4  ECD5  F045         	call	_sm_send_event	;wreg free
  4647                           
  4648                           ;sm_MenuConfiguration_MC50.c: 363:                 menu_st.parameterSelected++;
  4649  0016A8  0101               	movlb	1	; () banked
  4650  0016AA  2B68               	incf	(_menu_st+23)& (0+255),f,b
  4651                           
  4652                           ; BSR set to: 1
  4653                           ;sm_MenuConfiguration_MC50.c: 364:                 if(menu_st.actualMenu<=E_Menu)
  4654  0016AC  0E02               	movlw	2
  4655  0016AE  6166               	cpfslt	(_menu_st+21)& (0+255),b
  4656  0016B0  D005               	goto	l24135
  4657                           
  4658                           ; BSR set to: 1
  4659                           ;sm_MenuConfiguration_MC50.c: 365:                 {;sm_MenuConfiguration_MC50.c: 366:  
      +                                             menu_st.lastMainParameterSelected++;
  4660  0016B2  2B69               	incf	(_menu_st+24)& (0+255),f,b
  4661                           
  4662                           ; BSR set to: 1
  4663                           ;sm_MenuConfiguration_MC50.c: 367:                     load_New_Menu(menu_st.actualMenu)
      +                          ;
  4664  0016B4  5166               	movf	(_menu_st+21)& (0+255),w,b
  4665  0016B6  EC5B  F023         	call	_load_New_Menu
  4666                           
  4667                           ;sm_MenuConfiguration_MC50.c: 368:                 }
  4668  0016BA  0012               	return	
  4669  0016BC                     l24135:
  4670                           
  4671                           ; BSR set to: 1
  4672  0016BC  5167               	movf	(_menu_st+22)& (0+255),w,b
  4673  0016BE  5D68               	subwf	(_menu_st+23)& (0+255),w,b
  4674  0016C0  A0D8               	btfss	status,0,c
  4675  0016C2  D005               	goto	l24141
  4676                           
  4677                           ; BSR set to: 1
  4678                           ;sm_MenuConfiguration_MC50.c: 370:                 {;sm_MenuConfiguration_MC50.c: 371:  
      +                                             menu_st.lastMainParameterSelected++;
  4679  0016C4  2B69               	incf	(_menu_st+24)& (0+255),f,b
  4680                           
  4681                           ; BSR set to: 1
  4682                           ;sm_MenuConfiguration_MC50.c: 372:                     load_New_Menu(menu_st.lastMenu);
  4683  0016C6  5165               	movf	(_menu_st+20)& (0+255),w,b
  4684  0016C8  EC5B  F023         	call	_load_New_Menu
  4685                           
  4686                           ;sm_MenuConfiguration_MC50.c: 373:                 }
  4687  0016CC  0012               	return	
  4688  0016CE                     l24141:
  4689                           
  4690                           ; BSR set to: 1
  4691                           ;sm_MenuConfiguration_MC50.c: 375:                 {;sm_MenuConfiguration_MC50.c: 376:  
      +                                             load_New_Menu(menu_st.actualMenu);
  4692  0016CE  5166               	movf	(_menu_st+21)& (0+255),w,b
  4693  0016D0  EC5B  F023         	call	_load_New_Menu
  4694  0016D4  0012               	return	
  4695  0016D6                     l24143:
  4696                           
  4697                           ; BSR set to: 0
  4698                           ;sm_MenuConfiguration_MC50.c: 382:         {;sm_MenuConfiguration_MC50.c: 383:          
      +                             if(ts_system.timeoutMenu<=0)
  4699  0016D6  0101               	movlb	1	; () banked
  4700  0016D8  BFAE               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  4701  0016DA  D005               	goto	u29230
  4702  0016DC  51AE               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  4703  0016DE  E102               	bnz	u29231
  4704  0016E0  05AD               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  4705  0016E2  B0D8               	btfsc	status,0,c
  4706  0016E4                     u29231:
  4707  0016E4  0012               	return	
  4708  0016E6                     u29230:
  4709                           
  4710                           ; BSR set to: 1
  4711                           ;sm_MenuConfiguration_MC50.c: 384:             {;sm_MenuConfiguration_MC50.c: 386:      
      +                                     if(auxCounter<=0){
  4712  0016E6  0100               	movlb	0	; () banked
  4713  0016E8  51FC               	movf	_auxCounter& (0+255),w,b
  4714  0016EA  11FD               	iorwf	(_auxCounter+1)& (0+255),w,b
  4715  0016EC  A4D8               	btfss	status,2,c
  4716  0016EE  D010               	goto	l24153
  4717                           
  4718                           ; BSR set to: 0
  4719                           ;sm_MenuConfiguration_MC50.c: 387:                     menu_st.lastMainParameterSelected
      +                          ++;
  4720  0016F0  0101               	movlb	1	; () banked
  4721  0016F2  2B69               	incf	(_menu_st+24)& (0+255),f,b
  4722                           
  4723                           ; BSR set to: 1
  4724                           ;sm_MenuConfiguration_MC50.c: 388:                     load_New_Menu(menu_st.actualMenu)
      +                          ;
  4725  0016F4  5166               	movf	(_menu_st+21)& (0+255),w,b
  4726  0016F6  EC5B  F023         	call	_load_New_Menu
  4727                           
  4728                           ;sm_MenuConfiguration_MC50.c: 389:                     sm_send_event(&menuConfiguration_
      +                          stateMachine, ev_ParameterIsSaved);
  4729  0016FA  0EBB               	movlw	low _menuConfiguration_stateMachine
  4730  0016FC  6E12               	movwf	sm_send_event@psm^0,c
  4731  0016FE  0E02               	movlw	high _menuConfiguration_stateMachine
  4732  001700  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4733  001702  0E00               	movlw	0
  4734  001704  6E15               	movwf	(sm_send_event@event+1)^0,c
  4735  001706  0E04               	movlw	4
  4736  001708  6E14               	movwf	sm_send_event@event^0,c
  4737  00170A  ECD5  F045         	call	_sm_send_event	;wreg free
  4738                           
  4739                           ;sm_MenuConfiguration_MC50.c: 390:                 }
  4740  00170E  0012               	return	
  4741  001710                     l24153:
  4742                           
  4743                           ; BSR set to: 0
  4744                           ;sm_MenuConfiguration_MC50.c: 392:                 {;sm_MenuConfiguration_MC50.c: 393:  
      +                                             ts_system.timeoutMenu=(1000/50)*3;
  4745  001710  0E00               	movlw	0
  4746  001712  0101               	movlb	1	; () banked
  4747  001714  6FAE               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4748  001716  0E3C               	movlw	60
  4749  001718  6FAD               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4750                           
  4751                           ; BSR set to: 1
  4752                           ;sm_MenuConfiguration_MC50.c: 394:                     edit_Param.tempValue=(unsigned ch
      +                          ar)(tempCounter/auxCounter);
  4753  00171A  C2F4  F010         	movff	_tempCounter,___lldiv@dividend
  4754  00171E  C2F5  F011         	movff	_tempCounter+1,___lldiv@dividend+1
  4755  001722  C2F6  F012         	movff	_tempCounter+2,___lldiv@dividend+2
  4756  001726  C2F7  F013         	movff	_tempCounter+3,___lldiv@dividend+3
  4757  00172A  C0FC  F014         	movff	_auxCounter,___lldiv@divisor
  4758  00172E  C0FD  F015         	movff	_auxCounter+1,___lldiv@divisor+1
  4759  001732  6A16               	clrf	(___lldiv@divisor+2)^0,c
  4760  001734  6A17               	clrf	(___lldiv@divisor+3)^0,c
  4761  001736  EC9A  F041         	call	___lldiv	;wreg free
  4762  00173A  5010               	movf	?___lldiv^0,w,c
  4763  00173C  6E49               	movwf	(_edit_Param+3)^0,c	;volatile
  4764                           
  4765                           ;sm_MenuConfiguration_MC50.c: 395:                     tempCounter=tempCounter-(tempCoun
      +                          ter/auxCounter*auxCounter);
  4766  00173E  C0FC  F014         	movff	_auxCounter,___lldiv@divisor
  4767  001742  C0FD  F015         	movff	_auxCounter+1,___lldiv@divisor+1
  4768  001746  6A16               	clrf	(___lldiv@divisor+2)^0,c
  4769  001748  6A17               	clrf	(___lldiv@divisor+3)^0,c
  4770  00174A  C2F4  F010         	movff	_tempCounter,___lldiv@dividend
  4771  00174E  C2F5  F011         	movff	_tempCounter+1,___lldiv@dividend+1
  4772  001752  C2F6  F012         	movff	_tempCounter+2,___lldiv@dividend+2
  4773  001756  C2F7  F013         	movff	_tempCounter+3,___lldiv@dividend+3
  4774  00175A  EC9A  F041         	call	___lldiv	;wreg free
  4775  00175E  C010  F01D         	movff	?___lldiv,___lmul@multiplier
  4776  001762  C011  F01E         	movff	?___lldiv+1,___lmul@multiplier+1
  4777  001766  C012  F01F         	movff	?___lldiv+2,___lmul@multiplier+2
  4778  00176A  C013  F020         	movff	?___lldiv+3,___lmul@multiplier+3
  4779  00176E  C0FC  F021         	movff	_auxCounter,___lmul@multiplicand
  4780  001772  C0FD  F022         	movff	_auxCounter+1,___lmul@multiplicand+1
  4781  001776  6A23               	clrf	(___lmul@multiplicand+2)^0,c
  4782  001778  6A24               	clrf	(___lmul@multiplicand+3)^0,c
  4783  00177A  EC10  F047         	call	___lmul	;wreg free
  4784  00177E  501D               	movf	?___lmul^0,w,c
  4785  001780  0102               	movlb	2	; () banked
  4786  001782  5DF4               	subwf	_tempCounter& (0+255),w,b
  4787  001784  6FF4               	movwf	_tempCounter& (0+255),b
  4788  001786  501E               	movf	(?___lmul+1)^0,w,c
  4789  001788  59F5               	subwfb	(_tempCounter+1)& (0+255),w,b
  4790  00178A  6FF5               	movwf	(_tempCounter+1)& (0+255),b
  4791  00178C  501F               	movf	(?___lmul+2)^0,w,c
  4792  00178E  59F6               	subwfb	(_tempCounter+2)& (0+255),w,b
  4793  001790  6FF6               	movwf	(_tempCounter+2)& (0+255),b
  4794  001792  5020               	movf	(?___lmul+3)^0,w,c
  4795  001794  59F7               	subwfb	(_tempCounter+3)& (0+255),w,b
  4796  001796  6FF7               	movwf	(_tempCounter+3)& (0+255),b
  4797                           
  4798                           ; BSR set to: 2
  4799                           ;sm_MenuConfiguration_MC50.c: 396:                     auxCounter=auxCounter/100;
  4800  001798  C0FC  F010         	movff	_auxCounter,___lwdiv@dividend
  4801  00179C  C0FD  F011         	movff	_auxCounter+1,___lwdiv@dividend+1
  4802  0017A0  0E00               	movlw	0
  4803  0017A2  6E13               	movwf	(___lwdiv@divisor+1)^0,c
  4804  0017A4  0E64               	movlw	100
  4805  0017A6  6E12               	movwf	___lwdiv@divisor^0,c
  4806  0017A8  EC90  F047         	call	___lwdiv	;wreg free
  4807  0017AC  C010  F0FC         	movff	?___lwdiv,_auxCounter
  4808  0017B0  C011  F0FD         	movff	?___lwdiv+1,_auxCounter+1
  4809                           
  4810                           ;sm_MenuConfiguration_MC50.c: 397:                     SetSegmentValueIntermitentMain(ed
      +                          it_Param.tempValue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10),( 500/50));
  4811  0017B4  0E0A               	movlw	10
  4812  0017B6  6E10               	movwf	___lbdiv@divisor^0,c
  4813  0017B8  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4814  0017BA  ECC6  F049         	call	___lbdiv
  4815  0017BE  0DF6               	mullw	246
  4816  0017C0  50F3               	movf	243,w,c
  4817  0017C2  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  4818  0017C4  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  4819  0017C6  0E00               	movlw	0
  4820  0017C8  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  4821  0017CA  0E0A               	movlw	10
  4822  0017CC  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  4823  0017CE  0E0A               	movlw	10
  4824  0017D0  6E10               	movwf	___lbdiv@divisor^0,c
  4825  0017D2  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4826  0017D4  ECC6  F049         	call	___lbdiv
  4827  0017D8  EC6E  F04D         	call	_SetSegmentValueIntermitentMain
  4828  0017DC  0012               	return	
  4829  0017DE                     l24163:
  4830                           
  4831                           ; BSR set to: 0
  4832                           ;sm_MenuConfiguration_MC50.c: 403:         {;sm_MenuConfiguration_MC50.c: 404:          
      +                             if(firstselectflag==1){
  4833  0017DE  0101               	movlb	1	; () banked
  4834  0017E0  05FF               	decf	_firstselectflag& (0+255),w,b
  4835  0017E2  A4D8               	btfss	status,2,c
  4836  0017E4  D004               	goto	l24167
  4837                           
  4838                           ; BSR set to: 1
  4839                           ;sm_MenuConfiguration_MC50.c: 405:                 edit_Param.tempValue=0;
  4840  0017E6  0E00               	movlw	0
  4841  0017E8  6E49               	movwf	(_edit_Param+3)^0,c	;volatile
  4842                           
  4843                           ;sm_MenuConfiguration_MC50.c: 406:                 firstselectflag=0;
  4844  0017EA  0E00               	movlw	0
  4845  0017EC  6FFF               	movwf	_firstselectflag& (0+255),b
  4846  0017EE                     l24167:
  4847                           
  4848                           ; BSR set to: 1
  4849                           ;sm_MenuConfiguration_MC50.c: 408:             controlSelectRemote();
  4850  0017EE  EC44  F01E         	call	_controlSelectRemote	;wreg free
  4851                           
  4852                           ;sm_MenuConfiguration_MC50.c: 409:         };sm_MenuConfiguration_MC50.c: 410:         b
      +                          reak;
  4853  0017F2  0012               	return	
  4854  0017F4                     l24169:
  4855                           
  4856                           ; BSR set to: 0
  4857                           ;sm_MenuConfiguration_MC50.c: 412:         {;sm_MenuConfiguration_MC50.c: 413:          
      +                             controlSaveRemote();
  4858  0017F4  ECE6  F03C         	call	_controlSaveRemote	;wreg free
  4859                           
  4860                           ;sm_MenuConfiguration_MC50.c: 414:         };sm_MenuConfiguration_MC50.c: 415:         b
      +                          reak;
  4861  0017F8  0012               	return	
  4862  0017FA                     l24171:
  4863                           
  4864                           ; BSR set to: 0
  4865                           ;sm_MenuConfiguration_MC50.c: 417:         {;sm_MenuConfiguration_MC50.c: 418:          
      +                             controlLearnDigit();
  4866  0017FA  EC64  F04A         	call	_controlLearnDigit	;wreg free
  4867                           
  4868                           ;sm_MenuConfiguration_MC50.c: 419:             if(var_sys.LearningIsEnabled==NO)
  4869  0017FE  0101               	movlb	1	; () banked
  4870  001800  5126               	movf	(_var_sys+38)& (0+255),w,b	;volatile
  4871  001802  A4D8               	btfss	status,2,c
  4872  001804  0012               	return	
  4873                           
  4874                           ; BSR set to: 1
  4875                           ;sm_MenuConfiguration_MC50.c: 420:             {;sm_MenuConfiguration_MC50.c: 421:      
      +                                     sm_send_event(&main_stateMachine, ev_goto_StandBy);
  4876  001806  0EF2               	movlw	low _main_stateMachine
  4877  001808  6E12               	movwf	sm_send_event@psm^0,c
  4878  00180A  0E01               	movlw	high _main_stateMachine
  4879  00180C  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4880  00180E  0E00               	movlw	0
  4881  001810  6E15               	movwf	(sm_send_event@event+1)^0,c
  4882  001812  0E07               	movlw	7
  4883  001814  6E14               	movwf	sm_send_event@event^0,c
  4884  001816  ECD5  F045         	call	_sm_send_event	;wreg free
  4885                           
  4886                           ;sm_MenuConfiguration_MC50.c: 422:                 sm_send_event(&menuConfiguration_stat
      +                          eMachine, ev_ParameterIsSaved);
  4887  00181A  0EBB               	movlw	low _menuConfiguration_stateMachine
  4888  00181C  6E12               	movwf	sm_send_event@psm^0,c
  4889  00181E  0E02               	movlw	high _menuConfiguration_stateMachine
  4890  001820  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4891  001822  0E00               	movlw	0
  4892  001824  6E15               	movwf	(sm_send_event@event+1)^0,c
  4893  001826  0E04               	movlw	4
  4894  001828  6E14               	movwf	sm_send_event@event^0,c
  4895  00182A  ECD5  F045         	call	_sm_send_event	;wreg free
  4896                           
  4897                           ;sm_MenuConfiguration_MC50.c: 423:                 SetSegmentValueMain(dMinus,dMinus);
  4898  00182E  0E18               	movlw	24
  4899  001830  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4900  001832  0E18               	movlw	24
  4901  001834  ECD3  F04C         	call	_SetSegmentValueMain
  4902                           
  4903                           ; BSR set to: 0
  4904                           ;sm_MenuConfiguration_MC50.c: 424:                 SaveNVM_VarSystem(pageMemoryCounters)
      +                          ;
  4905  001838  0E02               	movlw	2
  4906  00183A  ECE3  F049         	call	_SaveNVM_VarSystem
  4907  00183E  D5E9               	goto	l24009
  4908  001840                     l24187:
  4909  001840  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  4910  001844  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  4911  001848  50DF               	movf	indf2,w,c
  4912  00184A  0100               	movlb	0	; () banked
  4913  00184C  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  4914  00184E  6BEC               	clrf	(??_sm_execute_menuConfiguration+1)& (0+255),b
  4915                           
  4916                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4917                           ; Switch size 1, requested type "simple"
  4918                           ; Number of cases is 1, Range of values is 0 to 0
  4919                           ; switch strategies available:
  4920                           ; Name         Instructions Cycles
  4921                           ; simple_byte            4     3 (average)
  4922                           ;	Chosen strategy is simple_byte
  4923  001850  51EC               	movf	(??_sm_execute_menuConfiguration+1)& (0+255),w,b
  4924  001852  0A00               	xorlw	0	; case 0
  4925  001854  A4D8               	btfss	status,2,c
  4926  001856  0012               	return	
  4927                           
  4928                           ; BSR set to: 0
  4929                           ; Switch size 1, requested type "simple"
  4930                           ; Number of cases is 7, Range of values is 0 to 6
  4931                           ; switch strategies available:
  4932                           ; Name         Instructions Cycles
  4933                           ; simple_byte           22    12 (average)
  4934                           ;	Chosen strategy is simple_byte
  4935  001858  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  4936  00185A  0A00               	xorlw	0	; case 0
  4937  00185C  B4D8               	btfsc	status,2,c
  4938  00185E  D431               	goto	l23877
  4939  001860  0A01               	xorlw	1	; case 1
  4940  001862  B4D8               	btfsc	status,2,c
  4941  001864  D5FC               	goto	l24027
  4942  001866  0A03               	xorlw	3	; case 2
  4943  001868  B4D8               	btfsc	status,2,c
  4944  00186A  D6CF               	goto	l24095
  4945  00186C  0A01               	xorlw	1	; case 3
  4946  00186E  B4D8               	btfsc	status,2,c
  4947  001870  D732               	goto	l24143
  4948  001872  0A07               	xorlw	7	; case 4
  4949  001874  B4D8               	btfsc	status,2,c
  4950  001876  D7B3               	goto	l24163
  4951  001878  0A01               	xorlw	1	; case 5
  4952  00187A  B4D8               	btfsc	status,2,c
  4953  00187C  D7BB               	goto	l24169
  4954  00187E  0A03               	xorlw	3	; case 6
  4955  001880  A4D8               	btfss	status,2,c
  4956  001882  0012               	return	
  4957  001884  D7BA               	goto	l24171
  4958  001886                     __end_of_sm_execute_menuConfiguration:
  4959                           	callstack 0
  4960                           
  4961 ;; *************** function _setValueToEdit *****************
  4962 ;; Defined at:
  4963 ;;		line 648 in file "sm_MenuConfiguration_MC50.c"
  4964 ;; Parameters:    Size  Location     Type
  4965 ;;  menuType        1    wreg     enum E10813
  4966 ;;  ParameterSel    1   57[COMRAM] unsigned char 
  4967 ;; Auto vars:     Size  Location     Type
  4968 ;;  menuType        1    6[BANK0 ] enum E10813
  4969 ;;  posindex        1    7[BANK0 ] unsigned char 
  4970 ;;  haveValueToE    1    8[BANK0 ] unsigned char 
  4971 ;; Return value:  Size  Location     Type
  4972 ;;                  1    wreg      unsigned char 
  4973 ;; Registers used:
  4974 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4975 ;; Tracked objects:
  4976 ;;		On entry : 3F/1
  4977 ;;		On exit  : 3F/0
  4978 ;;		Unchanged: 0/0
  4979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4980 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4981 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4982 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4983 ;;      Totals:         1       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4984 ;;Total ram usage:        6 bytes
  4985 ;; Hardware stack levels used: 1
  4986 ;; Hardware stack levels required when called: 14
  4987 ;; This function calls:
  4988 ;;		_InitReceiver
  4989 ;;		_SaveNVM_VarSystem
  4990 ;;		_cmdMemoryIsEmpty
  4991 ;;		_load_New_Menu
  4992 ;;		_sm_send_event
  4993 ;; This function is called by:
  4994 ;;		_sm_execute_menuConfiguration
  4995 ;; This function uses a non-reentrant model
  4996 ;;
  4997                           
  4998                           	psect	text3
  4999  002E50                     __ptext3:
  5000                           	callstack 0
  5001  002E50                     _setValueToEdit:
  5002                           	callstack 14
  5003                           
  5004                           ;incstack = 0
  5005                           ;setValueToEdit@menuType stored from wreg
  5006  002E50  0100               	movlb	0	; () banked
  5007  002E52  6FDE               	movwf	setValueToEdit@menuType& (0+255),b
  5008                           
  5009                           ;sm_MenuConfiguration_MC50.c: 649:     char haveValueToEdit=0;
  5010  002E54  0E00               	movlw	0
  5011  002E56  0100               	movlb	0	; () banked
  5012  002E58  6FE0               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  5013                           
  5014                           ;sm_MenuConfiguration_MC50.c: 652:     switch (menuType)
  5015  002E5A  D254               	goto	l22073
  5016  002E5C                     l3358:
  5017                           
  5018                           ; BSR set to: 0
  5019                           ;sm_MenuConfiguration_MC50.c: 655:         {;sm_MenuConfiguration_MC50.c: 656:          
      +                             menu_st.lastMainParameterSelected= menu_st.parameterSelected;
  5020  002E5C  C168  F169         	movff	_menu_st+23,_menu_st+24
  5021                           
  5022                           ; BSR set to: 0
  5023                           ;sm_MenuConfiguration_MC50.c: 657:             edit_Param.Min=0;
  5024  002E60  0E00               	movlw	0
  5025  002E62  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5026                           
  5027                           ;sm_MenuConfiguration_MC50.c: 658:             switch (ParameterSelected)
  5028  002E64  D034               	goto	l21829
  5029  002E66                     l21783:
  5030                           
  5031                           ; BSR set to: 0
  5032                           ;sm_MenuConfiguration_MC50.c: 661:                 {;sm_MenuConfiguration_MC50.c: 662:  
      +                                             load_New_Menu(P0_SMenu);
  5033  002E66  0E04               	movlw	4
  5034  002E68  EC5B  F023         	call	_load_New_Menu
  5035                           
  5036                           ;sm_MenuConfiguration_MC50.c: 664:                 };sm_MenuConfiguration_MC50.c: 665:  
      +                                         break;
  5037  002E6C  D274               	goto	l22075
  5038  002E6E                     l21785:
  5039                           
  5040                           ; BSR set to: 0
  5041                           ;sm_MenuConfiguration_MC50.c: 667:                 {;sm_MenuConfiguration_MC50.c: 668:  
      +                                             load_New_Menu(P1_SMenu);
  5042  002E6E  0E05               	movlw	5
  5043  002E70  EC5B  F023         	call	_load_New_Menu
  5044                           
  5045                           ;sm_MenuConfiguration_MC50.c: 669:                 };sm_MenuConfiguration_MC50.c: 670:  
      +                                         break;
  5046  002E74  D270               	goto	l22075
  5047  002E76                     l21787:
  5048                           
  5049                           ; BSR set to: 0
  5050                           ;sm_MenuConfiguration_MC50.c: 672:                 {;sm_MenuConfiguration_MC50.c: 673:  
      +                                             load_New_Menu(P2_SMenu);
  5051  002E76  0E06               	movlw	6
  5052  002E78  EC5B  F023         	call	_load_New_Menu
  5053                           
  5054                           ;sm_MenuConfiguration_MC50.c: 674:                 };sm_MenuConfiguration_MC50.c: 675:  
      +                                         break;
  5055  002E7C  D26C               	goto	l22075
  5056  002E7E                     l21789:
  5057                           
  5058                           ; BSR set to: 0
  5059                           ;sm_MenuConfiguration_MC50.c: 677:                 {;sm_MenuConfiguration_MC50.c: 678:  
      +                                             edit_Param.Max=99;
  5060  002E7E  0E63               	movlw	99
  5061  002E80  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5062                           
  5063                           ; BSR set to: 0
  5064                           ;sm_MenuConfiguration_MC50.c: 680:                     edit_Param.tempValue=var_sys_NVM.
      +                          walkTime;
  5065  002E82  C09C  F049         	movff	_var_sys_NVM+4,_edit_Param+3	;volatile
  5066                           
  5067                           ; BSR set to: 0
  5068                           ;sm_MenuConfiguration_MC50.c: 681:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.walkTime;
  5069  002E86  0E9C               	movlw	low (_var_sys_NVM+4)
  5070  002E88                     L13:
  5071  002E88  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5072  002E8A  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5073                           
  5074                           ; BSR set to: 0
  5075                           ;sm_MenuConfiguration_MC50.c: 682:                     haveValueToEdit=1;
  5076  002E8C  0E01               	movlw	1
  5077  002E8E  6FE0               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  5078                           
  5079                           ;sm_MenuConfiguration_MC50.c: 683:                 };sm_MenuConfiguration_MC50.c: 684:  
      +                                         break;
  5080  002E90  D262               	goto	l22075
  5081  002E92                     l21797:
  5082                           
  5083                           ; BSR set to: 0
  5084                           ;sm_MenuConfiguration_MC50.c: 686:                 {;sm_MenuConfiguration_MC50.c: 687:  
      +                                             load_New_Menu(P4_SMenu);
  5085  002E92  0E07               	movlw	7
  5086  002E94  EC5B  F023         	call	_load_New_Menu
  5087                           
  5088                           ;sm_MenuConfiguration_MC50.c: 688:                 };sm_MenuConfiguration_MC50.c: 689:  
      +                                         break;
  5089  002E98  D25E               	goto	l22075
  5090  002E9A                     l21799:
  5091                           
  5092                           ; BSR set to: 0
  5093                           ;sm_MenuConfiguration_MC50.c: 691:                 {;sm_MenuConfiguration_MC50.c: 692:  
      +                                             load_New_Menu(P5_SMenu);
  5094  002E9A  0E08               	movlw	8
  5095  002E9C  EC5B  F023         	call	_load_New_Menu
  5096                           
  5097                           ;sm_MenuConfiguration_MC50.c: 693:                 };sm_MenuConfiguration_MC50.c: 694:  
      +                                         break;
  5098  002EA0  D25A               	goto	l22075
  5099  002EA2                     l21801:
  5100                           
  5101                           ; BSR set to: 0
  5102                           ;sm_MenuConfiguration_MC50.c: 696:                 {;sm_MenuConfiguration_MC50.c: 697:  
      +                                             load_New_Menu(P6_SMenu);
  5103  002EA2  0E09               	movlw	9
  5104  002EA4  EC5B  F023         	call	_load_New_Menu
  5105                           
  5106                           ;sm_MenuConfiguration_MC50.c: 698:                 };sm_MenuConfiguration_MC50.c: 699:  
      +                                         break;
  5107  002EA8  D256               	goto	l22075
  5108  002EAA                     l21803:
  5109                           
  5110                           ; BSR set to: 0
  5111                           ;sm_MenuConfiguration_MC50.c: 701:                 {;sm_MenuConfiguration_MC50.c: 702:  
      +                                             edit_Param.Max=2;
  5112  002EAA  0E02               	movlw	2
  5113  002EAC  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5114                           
  5115                           ; BSR set to: 0
  5116                           ;sm_MenuConfiguration_MC50.c: 704:                     edit_Param.tempValue=var_sys_NVM.
      +                          operationMode;
  5117  002EAE  C0A4  F049         	movff	_var_sys_NVM+12,_edit_Param+3	;volatile
  5118                           
  5119                           ; BSR set to: 0
  5120                           ;sm_MenuConfiguration_MC50.c: 705:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.operationMode;
  5121  002EB2  0EA4               	movlw	low (_var_sys_NVM+12)
  5122  002EB4  D7E9               	goto	L13
  5123  002EB6                     l21811:
  5124                           
  5125                           ; BSR set to: 0
  5126                           ;sm_MenuConfiguration_MC50.c: 710:                 {;sm_MenuConfiguration_MC50.c: 711:  
      +                                             edit_Param.Max=3;
  5127  002EB6  0E03               	movlw	3
  5128  002EB8  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5129                           
  5130                           ; BSR set to: 0
  5131                           ;sm_MenuConfiguration_MC50.c: 713:                     edit_Param.tempValue=var_sys_NVM.
      +                          flashLightMode;
  5132  002EBA  C0A5  F049         	movff	_var_sys_NVM+13,_edit_Param+3	;volatile
  5133                           
  5134                           ; BSR set to: 0
  5135                           ;sm_MenuConfiguration_MC50.c: 714:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.flashLightMode;
  5136  002EBE  0EA5               	movlw	low (_var_sys_NVM+13)
  5137  002EC0  D7E3               	goto	L13
  5138  002EC2                     l21819:
  5139                           
  5140                           ; BSR set to: 0
  5141                           ;sm_MenuConfiguration_MC50.c: 719:                 {;sm_MenuConfiguration_MC50.c: 720:  
      +                                             edit_Param.Max=1;
  5142  002EC2  0E01               	movlw	1
  5143  002EC4  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5144                           
  5145                           ; BSR set to: 0
  5146                           ;sm_MenuConfiguration_MC50.c: 722:                     edit_Param.tempValue=var_sys_NVM.
      +                          programmingDistance;
  5147  002EC6  C0A6  F049         	movff	_var_sys_NVM+14,_edit_Param+3	;volatile
  5148                           
  5149                           ; BSR set to: 0
  5150                           ;sm_MenuConfiguration_MC50.c: 723:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.programmingDistance;
  5151  002ECA  0EA6               	movlw	low (_var_sys_NVM+14)
  5152  002ECC  D7DD               	goto	L13
  5153  002ECE                     l21829:
  5154                           
  5155                           ; BSR set to: 0
  5156  002ECE  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5157  002ED0  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5158  002ED2  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5159                           
  5160                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5161                           ; Switch size 1, requested type "simple"
  5162                           ; Number of cases is 1, Range of values is 0 to 0
  5163                           ; switch strategies available:
  5164                           ; Name         Instructions Cycles
  5165                           ; simple_byte            4     3 (average)
  5166                           ;	Chosen strategy is simple_byte
  5167  002ED4  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5168  002ED6  0A00               	xorlw	0	; case 0
  5169  002ED8  A4D8               	btfss	status,2,c
  5170  002EDA  D23D               	goto	l22075
  5171                           
  5172                           ; BSR set to: 0
  5173                           ; Switch size 1, requested type "simple"
  5174                           ; Number of cases is 10, Range of values is 0 to 9
  5175                           ; switch strategies available:
  5176                           ; Name         Instructions Cycles
  5177                           ; simple_byte           31    16 (average)
  5178                           ;	Chosen strategy is simple_byte
  5179  002EDC  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5180  002EDE  0A00               	xorlw	0	; case 0
  5181  002EE0  B4D8               	btfsc	status,2,c
  5182  002EE2  D7C1               	goto	l21783
  5183  002EE4  0A01               	xorlw	1	; case 1
  5184  002EE6  B4D8               	btfsc	status,2,c
  5185  002EE8  D7C2               	goto	l21785
  5186  002EEA  0A03               	xorlw	3	; case 2
  5187  002EEC  B4D8               	btfsc	status,2,c
  5188  002EEE  D7C3               	goto	l21787
  5189  002EF0  0A01               	xorlw	1	; case 3
  5190  002EF2  B4D8               	btfsc	status,2,c
  5191  002EF4  D7C4               	goto	l21789
  5192  002EF6  0A07               	xorlw	7	; case 4
  5193  002EF8  B4D8               	btfsc	status,2,c
  5194  002EFA  D7CB               	goto	l21797
  5195  002EFC  0A01               	xorlw	1	; case 5
  5196  002EFE  B4D8               	btfsc	status,2,c
  5197  002F00  D7CC               	goto	l21799
  5198  002F02  0A03               	xorlw	3	; case 6
  5199  002F04  B4D8               	btfsc	status,2,c
  5200  002F06  D7CD               	goto	l21801
  5201  002F08  0A01               	xorlw	1	; case 7
  5202  002F0A  B4D8               	btfsc	status,2,c
  5203  002F0C  D7CE               	goto	l21803
  5204  002F0E  0A0F               	xorlw	15	; case 8
  5205  002F10  B4D8               	btfsc	status,2,c
  5206  002F12  D7D1               	goto	l21811
  5207  002F14  0A01               	xorlw	1	; case 9
  5208  002F16  B4D8               	btfsc	status,2,c
  5209  002F18  D7D4               	goto	l21819
  5210  002F1A  D21D               	goto	l22075
  5211  002F1C                     l3372:
  5212                           
  5213                           ; BSR set to: 0
  5214                           ;sm_MenuConfiguration_MC50.c: 733:         {;sm_MenuConfiguration_MC50.c: 734:          
      +                             menu_st.lastMainParameterSelected= menu_st.parameterSelected;
  5215  002F1C  C168  F169         	movff	_menu_st+23,_menu_st+24
  5216                           
  5217                           ; BSR set to: 0
  5218                           ;sm_MenuConfiguration_MC50.c: 735:             edit_Param.Max=1;
  5219  002F20  0E01               	movlw	1
  5220  002F22  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5221                           
  5222                           ;sm_MenuConfiguration_MC50.c: 736:             edit_Param.Min=0;
  5223  002F24  0E00               	movlw	0
  5224  002F26  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5225                           
  5226                           ;sm_MenuConfiguration_MC50.c: 737:             switch (ParameterSelected)
  5227  002F28  D057               	goto	l21885
  5228  002F2A                     l21833:
  5229                           
  5230                           ; BSR set to: 0
  5231                           ;sm_MenuConfiguration_MC50.c: 740:                 {;sm_MenuConfiguration_MC50.c: 741:  
      +                                             load_New_Menu(E0_SMenu);
  5232  002F2A  0E0A               	movlw	10
  5233  002F2C  EC5B  F023         	call	_load_New_Menu
  5234                           
  5235                           ;sm_MenuConfiguration_MC50.c: 742:                 };sm_MenuConfiguration_MC50.c: 743:  
      +                                         break;
  5236  002F30  D212               	goto	l22075
  5237  002F32                     l21835:
  5238                           
  5239                           ; BSR set to: 0
  5240                           ;sm_MenuConfiguration_MC50.c: 745:                 {;sm_MenuConfiguration_MC50.c: 748:  
      +                                             load_New_Menu(E1_SMenu);
  5241  002F32  0E0B               	movlw	11
  5242  002F34  EC5B  F023         	call	_load_New_Menu
  5243                           
  5244                           ;sm_MenuConfiguration_MC50.c: 750:                 };sm_MenuConfiguration_MC50.c: 751:  
      +                                         break;
  5245  002F38  D20E               	goto	l22075
  5246  002F3A                     l21837:
  5247                           
  5248                           ; BSR set to: 0
  5249                           ;sm_MenuConfiguration_MC50.c: 753:                 {;sm_MenuConfiguration_MC50.c: 754:  
      +                                             edit_Param.Max=99;
  5250  002F3A  0E63               	movlw	99
  5251  002F3C  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5252                           
  5253                           ; BSR set to: 0
  5254                           ;sm_MenuConfiguration_MC50.c: 756:                     edit_Param.tempValue=var_sys_NVM.
      +                          ligthTime;
  5255  002F3E  C0AC  F049         	movff	_var_sys_NVM+20,_edit_Param+3	;volatile
  5256                           
  5257                           ; BSR set to: 0
  5258                           ;sm_MenuConfiguration_MC50.c: 757:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.ligthTime;
  5259  002F42  0EAC               	movlw	low (_var_sys_NVM+20)
  5260  002F44  D7A1               	goto	L13
  5261  002F46                     l21845:
  5262                           
  5263                           ; BSR set to: 0
  5264                           ;sm_MenuConfiguration_MC50.c: 762:                 {;sm_MenuConfiguration_MC50.c: 763:  
      +                                            edit_Param.Max=9;
  5265  002F46  0E09               	movlw	9
  5266  002F48  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5267                           
  5268                           ;sm_MenuConfiguration_MC50.c: 764:                    edit_Param.Min=1;
  5269  002F4A  0E01               	movlw	1
  5270  002F4C  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5271                           
  5272                           ; BSR set to: 0
  5273                           ;sm_MenuConfiguration_MC50.c: 765:                    edit_Param.tempValue=var_sys_NVM.f
      +                          olow_me;
  5274  002F4E  C0AD  F049         	movff	_var_sys_NVM+21,_edit_Param+3	;volatile
  5275                           
  5276                           ; BSR set to: 0
  5277                           ;sm_MenuConfiguration_MC50.c: 766:                    edit_Param.Value=(unsigned char*)&
      +                          var_sys_NVM.folow_me;
  5278  002F52  0EAD               	movlw	low (_var_sys_NVM+21)
  5279  002F54  D799               	goto	L13
  5280  002F56                     l3380:
  5281                           
  5282                           ; BSR set to: 0
  5283                           ;sm_MenuConfiguration_MC50.c: 778:                 {;sm_MenuConfiguration_MC50.c: 779:  
      +                                            edit_Param.tempValue=var_sys_NVM.electricBrake;
  5284  002F56  C0AF  F049         	movff	_var_sys_NVM+23,_edit_Param+3	;volatile
  5285                           
  5286                           ; BSR set to: 0
  5287                           ;sm_MenuConfiguration_MC50.c: 780:                    edit_Param.Value=(unsigned char*)&
      +                          var_sys_NVM.electricBrake;
  5288  002F5A  0EAF               	movlw	low (_var_sys_NVM+23)
  5289  002F5C  D795               	goto	L13
  5290  002F5E                     l21857:
  5291                           
  5292                           ; BSR set to: 0
  5293                           ;sm_MenuConfiguration_MC50.c: 785:                 {;sm_MenuConfiguration_MC50.c: 786:  
      +                                             edit_Param.Max=9;
  5294  002F5E  0E09               	movlw	9
  5295  002F60  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5296                           
  5297                           ;sm_MenuConfiguration_MC50.c: 787:                     edit_Param.Min=1;
  5298  002F62  0E01               	movlw	1
  5299  002F64  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5300                           
  5301                           ; BSR set to: 0
  5302                           ;sm_MenuConfiguration_MC50.c: 788:                     edit_Param.tempValue=var_sys_NVM.
      +                          velocityDecelaration;
  5303  002F66  C0B0  F049         	movff	_var_sys_NVM+24,_edit_Param+3	;volatile
  5304                           
  5305                           ; BSR set to: 0
  5306                           ;sm_MenuConfiguration_MC50.c: 789:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.velocityDecelaration;
  5307  002F6A  0EB0               	movlw	low (_var_sys_NVM+24)
  5308  002F6C  D78D               	goto	L13
  5309  002F6E                     l21865:
  5310                           
  5311                           ; BSR set to: 0
  5312                           ;sm_MenuConfiguration_MC50.c: 794:                 {;sm_MenuConfiguration_MC50.c: 795:  
      +                                             edit_Param.tempValue=0;
  5313  002F6E  0E00               	movlw	0
  5314  002F70  6E49               	movwf	(_edit_Param+3)^0,c	;volatile
  5315                           
  5316                           ;sm_MenuConfiguration_MC50.c: 796:                     ts_system.timeoutMenu=0;
  5317  002F72  0E00               	movlw	0
  5318  002F74  0101               	movlb	1	; () banked
  5319  002F76  6FAE               	movwf	(_ts_system+15)& (0+255),b	;volatile
  5320  002F78  0E00               	movlw	0
  5321  002F7A  6FAD               	movwf	(_ts_system+14)& (0+255),b	;volatile
  5322                           
  5323                           ;sm_MenuConfiguration_MC50.c: 798:                     auxCounter=10000;
  5324  002F7C  0E27               	movlw	39
  5325  002F7E  0100               	movlb	0	; () banked
  5326  002F80  6FFD               	movwf	(_auxCounter+1)& (0+255),b
  5327  002F82  0E10               	movlw	16
  5328  002F84  6FFC               	movwf	_auxCounter& (0+255),b
  5329                           
  5330                           ;sm_MenuConfiguration_MC50.c: 799:                     ts_system.timeBetweenSaveCounters
      +                          =0;
  5331  002F86  0E00               	movlw	0
  5332  002F88  0101               	movlb	1	; () banked
  5333  002F8A  6FC6               	movwf	(_ts_system+39)& (0+255),b	;volatile
  5334  002F8C  0E00               	movlw	0
  5335  002F8E  6FC5               	movwf	(_ts_system+38)& (0+255),b	;volatile
  5336                           
  5337                           ; BSR set to: 1
  5338                           ;sm_MenuConfiguration_MC50.c: 800:                     tempCounter=var_sys.actualCounter
      +                          Moves;
  5339  002F90  C13C  F2F4         	movff	_var_sys+60,_tempCounter	;volatile
  5340  002F94  C13D  F2F5         	movff	_var_sys+61,_tempCounter+1	;volatile
  5341  002F98  C13E  F2F6         	movff	_var_sys+62,_tempCounter+2	;volatile
  5342  002F9C  C13F  F2F7         	movff	_var_sys+63,_tempCounter+3	;volatile
  5343                           
  5344                           ; BSR set to: 1
  5345                           ;sm_MenuConfiguration_MC50.c: 801:                     sm_send_event(&menuConfiguration_
      +                          stateMachine, ev_showCounter);
  5346  002FA0  0EBB               	movlw	low _menuConfiguration_stateMachine
  5347  002FA2  6E12               	movwf	sm_send_event@psm^0,c
  5348  002FA4  0E02               	movlw	high _menuConfiguration_stateMachine
  5349  002FA6  6E13               	movwf	(sm_send_event@psm+1)^0,c
  5350  002FA8  0E00               	movlw	0
  5351  002FAA  6E15               	movwf	(sm_send_event@event+1)^0,c
  5352  002FAC  0E05               	movlw	5
  5353  002FAE  6E14               	movwf	sm_send_event@event^0,c
  5354  002FB0  ECD5  F045         	call	_sm_send_event	;wreg free
  5355                           
  5356                           ;sm_MenuConfiguration_MC50.c: 802:                 };sm_MenuConfiguration_MC50.c: 803:  
      +                                         break;
  5357  002FB4  D1D0               	goto	l22075
  5358  002FB6                     l21871:
  5359                           
  5360                           ; BSR set to: 0
  5361                           ;sm_MenuConfiguration_MC50.c: 805:                 {;sm_MenuConfiguration_MC50.c: 806:  
      +                                             edit_Param.tempValue=0;
  5362  002FB6  0E00               	movlw	0
  5363  002FB8  6E49               	movwf	(_edit_Param+3)^0,c	;volatile
  5364                           
  5365                           ;sm_MenuConfiguration_MC50.c: 807:                     haveValueToEdit=1;
  5366  002FBA  0E01               	movlw	1
  5367  002FBC  6FE0               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  5368                           
  5369                           ; BSR set to: 0
  5370                           ;sm_MenuConfiguration_MC50.c: 808:                     edit_Param.Value = 0;
  5371  002FBE  0E00               	movlw	0
  5372  002FC0  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5373  002FC2  0E00               	movlw	0
  5374  002FC4  6E48               	movwf	(_edit_Param+2)^0,c	;volatile
  5375                           
  5376                           ;sm_MenuConfiguration_MC50.c: 809:                 };sm_MenuConfiguration_MC50.c: 810:  
      +                                         break;
  5377  002FC6  D1C7               	goto	l22075
  5378  002FC8                     l21875:
  5379                           
  5380                           ; BSR set to: 0
  5381                           ;sm_MenuConfiguration_MC50.c: 812:                 {;sm_MenuConfiguration_MC50.c: 813:  
      +                                             edit_Param.Max=3;
  5382  002FC8  0E03               	movlw	3
  5383  002FCA  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5384                           
  5385                           ;sm_MenuConfiguration_MC50.c: 814:                     edit_Param.Min=0;
  5386  002FCC  0E00               	movlw	0
  5387  002FCE  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5388                           
  5389                           ; BSR set to: 0
  5390                           ;sm_MenuConfiguration_MC50.c: 815:                     edit_Param.tempValue=var_sys_NVM.
      +                          flashRGBMode;
  5391  002FD0  C0B1  F049         	movff	_var_sys_NVM+25,_edit_Param+3	;volatile
  5392                           
  5393                           ; BSR set to: 0
  5394                           ;sm_MenuConfiguration_MC50.c: 816:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.flashRGBMode;
  5395  002FD4  0EB1               	movlw	low (_var_sys_NVM+25)
  5396  002FD6  D758               	goto	L13
  5397  002FD8                     l21885:
  5398                           
  5399                           ; BSR set to: 0
  5400  002FD8  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5401  002FDA  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5402  002FDC  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5403                           
  5404                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5405                           ; Switch size 1, requested type "simple"
  5406                           ; Number of cases is 1, Range of values is 0 to 0
  5407                           ; switch strategies available:
  5408                           ; Name         Instructions Cycles
  5409                           ; simple_byte            4     3 (average)
  5410                           ;	Chosen strategy is simple_byte
  5411  002FDE  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5412  002FE0  0A00               	xorlw	0	; case 0
  5413  002FE2  A4D8               	btfss	status,2,c
  5414  002FE4  D1B8               	goto	l22075
  5415                           
  5416                           ; BSR set to: 0
  5417                           ; Switch size 1, requested type "simple"
  5418                           ; Number of cases is 10, Range of values is 0 to 9
  5419                           ; switch strategies available:
  5420                           ; Name         Instructions Cycles
  5421                           ; simple_byte           31    16 (average)
  5422                           ;	Chosen strategy is simple_byte
  5423  002FE6  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5424  002FE8  0A00               	xorlw	0	; case 0
  5425  002FEA  B4D8               	btfsc	status,2,c
  5426  002FEC  D79E               	goto	l21833
  5427  002FEE  0A01               	xorlw	1	; case 1
  5428  002FF0  B4D8               	btfsc	status,2,c
  5429  002FF2  D79F               	goto	l21835
  5430  002FF4  0A03               	xorlw	3	; case 2
  5431  002FF6  B4D8               	btfsc	status,2,c
  5432  002FF8  D7A0               	goto	l21837
  5433  002FFA  0A01               	xorlw	1	; case 3
  5434  002FFC  B4D8               	btfsc	status,2,c
  5435  002FFE  D7A3               	goto	l21845
  5436  003000  0A07               	xorlw	7	; case 4
  5437  003002  B4D8               	btfsc	status,2,c
  5438  003004  D1A8               	goto	l22075
  5439  003006  0A01               	xorlw	1	; case 5
  5440  003008  B4D8               	btfsc	status,2,c
  5441  00300A  D7A5               	goto	l3380
  5442  00300C  0A03               	xorlw	3	; case 6
  5443  00300E  B4D8               	btfsc	status,2,c
  5444  003010  D7A6               	goto	l21857
  5445  003012  0A01               	xorlw	1	; case 7
  5446  003014  B4D8               	btfsc	status,2,c
  5447  003016  D7AB               	goto	l21865
  5448  003018  0A0F               	xorlw	15	; case 8
  5449  00301A  B4D8               	btfsc	status,2,c
  5450  00301C  D7CC               	goto	l21871
  5451  00301E  0A01               	xorlw	1	; case 9
  5452  003020  B4D8               	btfsc	status,2,c
  5453  003022  D7D2               	goto	l21875
  5454  003024  D198               	goto	l22075
  5455  003026                     l21887:
  5456                           
  5457                           ; BSR set to: 0
  5458                           ;sm_MenuConfiguration_MC50.c: 829:                 {;sm_MenuConfiguration_MC50.c: 830:  
      +                                          sm_send_event(&menuConfiguration_stateMachine, ev_SartLearning);
  5459  003026  0EBB               	movlw	low _menuConfiguration_stateMachine
  5460  003028  6E12               	movwf	sm_send_event@psm^0,c
  5461  00302A  0E02               	movlw	high _menuConfiguration_stateMachine
  5462  00302C  6E13               	movwf	(sm_send_event@psm+1)^0,c
  5463  00302E  0E00               	movlw	0
  5464  003030  6E15               	movwf	(sm_send_event@event+1)^0,c
  5465  003032  0E14               	movlw	20
  5466  003034  6E14               	movwf	sm_send_event@event^0,c
  5467  003036  ECD5  F045         	call	_sm_send_event	;wreg free
  5468                           
  5469                           ;sm_MenuConfiguration_MC50.c: 831:                  sm_send_event(&controlGate_stateMach
      +                          ine,ev_SartLearning );
  5470  00303A  0EE7               	movlw	low _controlGate_stateMachine
  5471  00303C  6E12               	movwf	sm_send_event@psm^0,c
  5472  00303E  0E01               	movlw	high _controlGate_stateMachine
  5473  003040  6E13               	movwf	(sm_send_event@psm+1)^0,c
  5474  003042  0E00               	movlw	0
  5475  003044  6E15               	movwf	(sm_send_event@event+1)^0,c
  5476  003046  0E14               	movlw	20
  5477  003048  6E14               	movwf	sm_send_event@event^0,c
  5478  00304A  ECD5  F045         	call	_sm_send_event	;wreg free
  5479                           
  5480                           ;sm_MenuConfiguration_MC50.c: 832:                  var_sys.LearningIsEnabled=YES;
  5481  00304E  0E01               	movlw	1
  5482  003050  0101               	movlb	1	; () banked
  5483  003052  6F26               	movwf	(_var_sys+38)& (0+255),b	;volatile
  5484                           
  5485                           ; BSR set to: 1
  5486                           ;sm_MenuConfiguration_MC50.c: 833:                  var_sys.programinAutomatic = Automat
      +                          ic;
  5487  003054  0E00               	movlw	0
  5488  003056  6F2A               	movwf	(_var_sys+42)& (0+255),b	;volatile
  5489                           
  5490                           ; BSR set to: 1
  5491                           ;sm_MenuConfiguration_MC50.c: 834:                  SaveNVM_VarSystem(pageMemoryE);
  5492  003058  0E01               	movlw	1
  5493  00305A  ECE3  F049         	call	_SaveNVM_VarSystem
  5494                           
  5495                           ;sm_MenuConfiguration_MC50.c: 837:                 };sm_MenuConfiguration_MC50.c: 838:  
      +                                         break;
  5496  00305E  D17B               	goto	l22075
  5497  003060                     l21895:
  5498                           
  5499                           ; BSR set to: 0
  5500                           ;sm_MenuConfiguration_MC50.c: 840:                 {;sm_MenuConfiguration_MC50.c: 841:  
      +                                          sm_send_event(&menuConfiguration_stateMachine, ev_SartLearning);
  5501  003060  0EBB               	movlw	low _menuConfiguration_stateMachine
  5502  003062  6E12               	movwf	sm_send_event@psm^0,c
  5503  003064  0E02               	movlw	high _menuConfiguration_stateMachine
  5504  003066  6E13               	movwf	(sm_send_event@psm+1)^0,c
  5505  003068  0E00               	movlw	0
  5506  00306A  6E15               	movwf	(sm_send_event@event+1)^0,c
  5507  00306C  0E14               	movlw	20
  5508  00306E  6E14               	movwf	sm_send_event@event^0,c
  5509  003070  ECD5  F045         	call	_sm_send_event	;wreg free
  5510                           
  5511                           ;sm_MenuConfiguration_MC50.c: 842:                  sm_send_event(&controlGate_stateMach
      +                          ine, ev_SartLearning);
  5512  003074  0EE7               	movlw	low _controlGate_stateMachine
  5513  003076  6E12               	movwf	sm_send_event@psm^0,c
  5514  003078  0E01               	movlw	high _controlGate_stateMachine
  5515  00307A  6E13               	movwf	(sm_send_event@psm+1)^0,c
  5516  00307C  0E00               	movlw	0
  5517  00307E  6E15               	movwf	(sm_send_event@event+1)^0,c
  5518  003080  0E14               	movlw	20
  5519  003082  6E14               	movwf	sm_send_event@event^0,c
  5520  003084  ECD5  F045         	call	_sm_send_event	;wreg free
  5521                           
  5522                           ;sm_MenuConfiguration_MC50.c: 843:                  var_sys.LearningIsEnabled=YES;
  5523  003088  0E01               	movlw	1
  5524  00308A  0101               	movlb	1	; () banked
  5525  00308C  6F26               	movwf	(_var_sys+38)& (0+255),b	;volatile
  5526                           
  5527                           ; BSR set to: 1
  5528                           ;sm_MenuConfiguration_MC50.c: 844:                  var_sys.programinAutomatic = Manual;
  5529  00308E  0E01               	movlw	1
  5530  003090  6F2A               	movwf	(_var_sys+42)& (0+255),b	;volatile
  5531                           
  5532                           ; BSR set to: 1
  5533                           ;sm_MenuConfiguration_MC50.c: 845:                  SaveNVM_VarSystem(pageMemoryE);
  5534  003092  0E01               	movlw	1
  5535  003094  ECE3  F049         	call	_SaveNVM_VarSystem
  5536                           
  5537                           ;sm_MenuConfiguration_MC50.c: 848:                 };sm_MenuConfiguration_MC50.c: 849:  
      +                                         break;
  5538  003098  D15E               	goto	l22075
  5539  00309A                     l3390:
  5540                           
  5541                           ; BSR set to: 0
  5542                           ;sm_MenuConfiguration_MC50.c: 851:                 {;sm_MenuConfiguration_MC50.c: 852:  
      +                                          edit_Param.tempValue=var_sys_NVM.TypeofMotor;
  5543  00309A  C0B4  F049         	movff	_var_sys_NVM+28,_edit_Param+3	;volatile
  5544                           
  5545                           ; BSR set to: 0
  5546                           ;sm_MenuConfiguration_MC50.c: 853:                  load_New_Menu(TypeMotor_Menu);
  5547  00309E  0E03               	movlw	3
  5548  0030A0  EC5B  F023         	call	_load_New_Menu
  5549                           
  5550                           ;sm_MenuConfiguration_MC50.c: 854:                  edit_Param.Value=(unsigned char*)&va
      +                          r_sys_NVM.TypeofMotor;
  5551  0030A4  0EB4               	movlw	low (_var_sys_NVM+28)
  5552  0030A6  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5553  0030A8  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5554                           
  5555                           ;sm_MenuConfiguration_MC50.c: 855:                  haveValueToEdit=1;
  5556  0030AA  0E01               	movlw	1
  5557  0030AC  0100               	movlb	0	; () banked
  5558  0030AE  6FE0               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  5559                           
  5560                           ; BSR set to: 0
  5561                           ;sm_MenuConfiguration_MC50.c: 856:                  edit_Param.Max=2;
  5562  0030B0  0E02               	movlw	2
  5563  0030B2  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5564                           
  5565                           ; BSR set to: 0
  5566                           ;sm_MenuConfiguration_MC50.c: 857:                  edit_Param.Min=0;
  5567  0030B4  0E00               	movlw	0
  5568  0030B6  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5569                           
  5570                           ;sm_MenuConfiguration_MC50.c: 859:                 };sm_MenuConfiguration_MC50.c: 860:  
      +                                         break;
  5571  0030B8  D14E               	goto	l22075
  5572  0030BA                     l3391:
  5573                           
  5574                           ; BSR set to: 0
  5575                           ;sm_MenuConfiguration_MC50.c: 862:                 {;sm_MenuConfiguration_MC50.c: 863:  
      +                                          edit_Param.tempValue=var_sys_NVM.Direction_motor;
  5576  0030BA  C0B3  F049         	movff	_var_sys_NVM+27,_edit_Param+3	;volatile
  5577                           
  5578                           ; BSR set to: 0
  5579                           ;sm_MenuConfiguration_MC50.c: 864:                  load_New_Menu(Direction_Menu);
  5580  0030BE  0E02               	movlw	2
  5581  0030C0  EC5B  F023         	call	_load_New_Menu
  5582                           
  5583                           ;sm_MenuConfiguration_MC50.c: 865:                  edit_Param.Value=(unsigned char*)&va
      +                          r_sys_NVM.Direction_motor;
  5584  0030C4  0EB3               	movlw	low (_var_sys_NVM+27)
  5585  0030C6  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5586  0030C8  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5587                           
  5588                           ;sm_MenuConfiguration_MC50.c: 866:                  haveValueToEdit=1;
  5589  0030CA  0E01               	movlw	1
  5590  0030CC  0100               	movlb	0	; () banked
  5591  0030CE  6FE0               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  5592                           
  5593                           ; BSR set to: 0
  5594                           ;sm_MenuConfiguration_MC50.c: 867:                  edit_Param.Max=1;
  5595  0030D0  0E01               	movlw	1
  5596  0030D2  D7EF               	goto	L14
  5597  0030D4                     l21925:
  5598                           
  5599                           ; BSR set to: 0
  5600  0030D4  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5601  0030D6  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5602  0030D8  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5603                           
  5604                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5605                           ; Switch size 1, requested type "simple"
  5606                           ; Number of cases is 1, Range of values is 0 to 0
  5607                           ; switch strategies available:
  5608                           ; Name         Instructions Cycles
  5609                           ; simple_byte            4     3 (average)
  5610                           ;	Chosen strategy is simple_byte
  5611  0030DA  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5612  0030DC  0A00               	xorlw	0	; case 0
  5613  0030DE  A4D8               	btfss	status,2,c
  5614  0030E0  D13A               	goto	l22075
  5615                           
  5616                           ; BSR set to: 0
  5617                           ; Switch size 1, requested type "simple"
  5618                           ; Number of cases is 4, Range of values is 0 to 3
  5619                           ; switch strategies available:
  5620                           ; Name         Instructions Cycles
  5621                           ; simple_byte           13     7 (average)
  5622                           ;	Chosen strategy is simple_byte
  5623  0030E2  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5624  0030E4  0A00               	xorlw	0	; case 0
  5625  0030E6  B4D8               	btfsc	status,2,c
  5626  0030E8  D79E               	goto	l21887
  5627  0030EA  0A01               	xorlw	1	; case 1
  5628  0030EC  B4D8               	btfsc	status,2,c
  5629  0030EE  D7B8               	goto	l21895
  5630  0030F0  0A03               	xorlw	3	; case 2
  5631  0030F2  B4D8               	btfsc	status,2,c
  5632  0030F4  D7D2               	goto	l3390
  5633  0030F6  0A01               	xorlw	1	; case 3
  5634  0030F8  B4D8               	btfsc	status,2,c
  5635  0030FA  D7DF               	goto	l3391
  5636  0030FC  D12C               	goto	l22075
  5637  0030FE                     l21927:
  5638                           
  5639                           ; BSR set to: 0
  5640                           ;sm_MenuConfiguration_MC50.c: 883:                 {;sm_MenuConfiguration_MC50.c: 884:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.decelarationOpen;
  5641  0030FE  0E98               	movlw	low _var_sys_NVM
  5642  003100  D001               	goto	L15
  5643  003102                     l21929:
  5644                           
  5645                           ; BSR set to: 0
  5646                           ;sm_MenuConfiguration_MC50.c: 888:                 {;sm_MenuConfiguration_MC50.c: 889:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.decelarationClose;
  5647  003102  0E99               	movlw	low (_var_sys_NVM+1)
  5648  003104                     L15:
  5649  003104  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5650  003106  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5651                           
  5652                           ;sm_MenuConfiguration_MC50.c: 890:                 };sm_MenuConfiguration_MC50.c: 891:  
      +                                         break;
  5653  003108  D00E               	goto	l21935
  5654  00310A                     l21933:
  5655                           
  5656                           ; BSR set to: 0
  5657  00310A  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5658  00310C  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5659  00310E  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5660                           
  5661                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5662                           ; Switch size 1, requested type "simple"
  5663                           ; Number of cases is 1, Range of values is 0 to 0
  5664                           ; switch strategies available:
  5665                           ; Name         Instructions Cycles
  5666                           ; simple_byte            4     3 (average)
  5667                           ;	Chosen strategy is simple_byte
  5668  003110  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5669  003112  0A00               	xorlw	0	; case 0
  5670  003114  A4D8               	btfss	status,2,c
  5671  003116  D007               	goto	l21935
  5672                           
  5673                           ; BSR set to: 0
  5674                           ; Switch size 1, requested type "simple"
  5675                           ; Number of cases is 2, Range of values is 0 to 1
  5676                           ; switch strategies available:
  5677                           ; Name         Instructions Cycles
  5678                           ; simple_byte            7     4 (average)
  5679                           ;	Chosen strategy is simple_byte
  5680  003118  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5681  00311A  0A00               	xorlw	0	; case 0
  5682  00311C  B4D8               	btfsc	status,2,c
  5683  00311E  D7EF               	goto	l21927
  5684  003120  0A01               	xorlw	1	; case 1
  5685  003122  B4D8               	btfsc	status,2,c
  5686  003124  D7EE               	goto	l21929
  5687  003126                     l21935:
  5688                           
  5689                           ; BSR set to: 0
  5690                           ;sm_MenuConfiguration_MC50.c: 895:                 edit_Param.Max=45;
  5691  003126  0E2D               	movlw	45
  5692  003128                     L29:
  5693  003128  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5694                           
  5695                           ;sm_MenuConfiguration_MC50.c: 896:                 edit_Param.Min=0;
  5696  00312A  0E00               	movlw	0
  5697  00312C  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5698  00312E                     L19:
  5699                           
  5700                           ;sm_MenuConfiguration_MC50.c: 899:             haveValueToEdit=1;
  5701  00312E  0E01               	movlw	1
  5702  003130  6FE0               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  5703                           
  5704                           ; BSR set to: 0
  5705                           ;sm_MenuConfiguration_MC50.c: 900:             edit_Param.tempValue= edit_Param.Value[0]
      +                          ;
  5706  003132  C047  FFD9         	movff	_edit_Param+1,fsr2l	;volatile
  5707  003136  C048  FFDA         	movff	_edit_Param+2,fsr2h	;volatile
  5708  00313A  50DF               	movf	indf2,w,c
  5709  00313C  6E49               	movwf	(_edit_Param+3)^0,c	;volatile
  5710                           
  5711                           ;sm_MenuConfiguration_MC50.c: 901:         };sm_MenuConfiguration_MC50.c: 902:         b
      +                          reak;
  5712  00313E  D10B               	goto	l22075
  5713  003140                     l21939:
  5714                           
  5715                           ; BSR set to: 0
  5716                           ;sm_MenuConfiguration_MC50.c: 904:         {;sm_MenuConfiguration_MC50.c: 905:          
      +                             edit_Param.Max=9;
  5717  003140  0E09               	movlw	9
  5718  003142  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5719                           
  5720                           ;sm_MenuConfiguration_MC50.c: 906:             edit_Param.Min=0;
  5721  003144  0E00               	movlw	0
  5722  003146  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5723                           
  5724                           ;sm_MenuConfiguration_MC50.c: 907:             switch (ParameterSelected)
  5725  003148  D00F               	goto	l21955
  5726  00314A                     l21941:
  5727                           
  5728                           ; BSR set to: 0
  5729                           ;sm_MenuConfiguration_MC50.c: 910:                 {;sm_MenuConfiguration_MC50.c: 911:  
      +                                               if (var_sys_NVM.motorSensitivity <2)
  5730  00314A  0E02               	movlw	2
  5731  00314C  619B               	cpfslt	(_var_sys_NVM+3)& (0+255),b	;volatile
  5732  00314E  D002               	goto	l21945
  5733                           
  5734                           ; BSR set to: 0
  5735                           ;sm_MenuConfiguration_MC50.c: 912:                       {;sm_MenuConfiguration_MC50.c: 
      +                          913:                         edit_Param.Min=0;
  5736  003150  0E00               	movlw	0
  5737  003152  D001               	goto	L16
  5738  003154                     l21945:
  5739                           
  5740                           ; BSR set to: 0
  5741                           ;sm_MenuConfiguration_MC50.c: 916:                       {;sm_MenuConfiguration_MC50.c: 
      +                          917:                         edit_Param.Min=9;
  5742  003154  0E09               	movlw	9
  5743  003156                     L16:
  5744  003156  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5745                           
  5746                           ; BSR set to: 0
  5747                           ;sm_MenuConfiguration_MC50.c: 919:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.motorPower;
  5748  003158  0E9A               	movlw	low (_var_sys_NVM+2)
  5749  00315A  D003               	goto	L18
  5750  00315C                     l21949:
  5751                           
  5752                           ; BSR set to: 0
  5753                           ;sm_MenuConfiguration_MC50.c: 923:                 {;sm_MenuConfiguration_MC50.c: 924:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.motorSensitivity;
  5754  00315C  0E9B               	movlw	low (_var_sys_NVM+3)
  5755  00315E  D001               	goto	L18
  5756  003160                     l21951:
  5757                           
  5758                           ; BSR set to: 0
  5759                           ;sm_MenuConfiguration_MC50.c: 928:                 {;sm_MenuConfiguration_MC50.c: 929:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.decelarationSensivity;
  5760  003160  0EA7               	movlw	low (_var_sys_NVM+15)
  5761  003162                     L18:
  5762  003162  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5763  003164  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5764                           
  5765                           ;sm_MenuConfiguration_MC50.c: 930:                 };sm_MenuConfiguration_MC50.c: 931:  
      +                                         break;
  5766  003166  D7E3               	goto	L19
  5767  003168                     l21955:
  5768                           
  5769                           ; BSR set to: 0
  5770  003168  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5771  00316A  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5772  00316C  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5773                           
  5774                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5775                           ; Switch size 1, requested type "simple"
  5776                           ; Number of cases is 1, Range of values is 0 to 0
  5777                           ; switch strategies available:
  5778                           ; Name         Instructions Cycles
  5779                           ; simple_byte            4     3 (average)
  5780                           ;	Chosen strategy is simple_byte
  5781  00316E  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5782  003170  0A00               	xorlw	0	; case 0
  5783  003172  A4D8               	btfss	status,2,c
  5784  003174  D7DC               	goto	L19
  5785                           
  5786                           ; BSR set to: 0
  5787                           ; Switch size 1, requested type "simple"
  5788                           ; Number of cases is 3, Range of values is 0 to 2
  5789                           ; switch strategies available:
  5790                           ; Name         Instructions Cycles
  5791                           ; simple_byte           10     6 (average)
  5792                           ;	Chosen strategy is simple_byte
  5793  003176  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5794  003178  0A00               	xorlw	0	; case 0
  5795  00317A  B4D8               	btfsc	status,2,c
  5796  00317C  D7E6               	goto	l21941
  5797  00317E  0A01               	xorlw	1	; case 1
  5798  003180  B4D8               	btfsc	status,2,c
  5799  003182  D7EC               	goto	l21949
  5800  003184  0A03               	xorlw	3	; case 2
  5801  003186  B4D8               	btfsc	status,2,c
  5802  003188  D7EB               	goto	l21951
  5803  00318A  D7D1               	goto	L19
  5804  00318C                     l21961:
  5805                           
  5806                           ; BSR set to: 0
  5807                           ;sm_MenuConfiguration_MC50.c: 942:                 {;sm_MenuConfiguration_MC50.c: 943:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.autoTimeFullClose;
  5808  00318C  0E9D               	movlw	low (_var_sys_NVM+5)
  5809  00318E  D001               	goto	L20
  5810  003190                     l21963:
  5811                           
  5812                           ; BSR set to: 0
  5813                           ;sm_MenuConfiguration_MC50.c: 947:                 {;sm_MenuConfiguration_MC50.c: 948:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.autoTimeWalkClose;
  5814  003190  0E9E               	movlw	low (_var_sys_NVM+6)
  5815  003192                     L20:
  5816  003192  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5817  003194  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5818                           
  5819                           ;sm_MenuConfiguration_MC50.c: 949:                 };sm_MenuConfiguration_MC50.c: 950:  
      +                                         break;
  5820  003196  D00E               	goto	l21969
  5821  003198                     l21967:
  5822                           
  5823                           ; BSR set to: 0
  5824  003198  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5825  00319A  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5826  00319C  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5827                           
  5828                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5829                           ; Switch size 1, requested type "simple"
  5830                           ; Number of cases is 1, Range of values is 0 to 0
  5831                           ; switch strategies available:
  5832                           ; Name         Instructions Cycles
  5833                           ; simple_byte            4     3 (average)
  5834                           ;	Chosen strategy is simple_byte
  5835  00319E  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5836  0031A0  0A00               	xorlw	0	; case 0
  5837  0031A2  A4D8               	btfss	status,2,c
  5838  0031A4  D007               	goto	l21969
  5839                           
  5840                           ; BSR set to: 0
  5841                           ; Switch size 1, requested type "simple"
  5842                           ; Number of cases is 2, Range of values is 0 to 1
  5843                           ; switch strategies available:
  5844                           ; Name         Instructions Cycles
  5845                           ; simple_byte            7     4 (average)
  5846                           ;	Chosen strategy is simple_byte
  5847  0031A6  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5848  0031A8  0A00               	xorlw	0	; case 0
  5849  0031AA  B4D8               	btfsc	status,2,c
  5850  0031AC  D7EF               	goto	l21961
  5851  0031AE  0A01               	xorlw	1	; case 1
  5852  0031B0  B4D8               	btfsc	status,2,c
  5853  0031B2  D7EE               	goto	l21963
  5854  0031B4                     l21969:
  5855                           
  5856                           ; BSR set to: 0
  5857                           ;sm_MenuConfiguration_MC50.c: 952:             edit_Param.Max=99;
  5858  0031B4  0E63               	movlw	99
  5859  0031B6  D7B8               	goto	L29
  5860  0031B8                     l21973:
  5861                           
  5862                           ; BSR set to: 0
  5863                           ;sm_MenuConfiguration_MC50.c: 963:                 {;sm_MenuConfiguration_MC50.c: 964:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.photoCellIsON;
  5864  0031B8  0E9F               	movlw	low (_var_sys_NVM+7)
  5865  0031BA  D034               	goto	L125
  5866  0031BC                     l21975:
  5867                           
  5868                           ; BSR set to: 0
  5869                           ;sm_MenuConfiguration_MC50.c: 968:                 {;sm_MenuConfiguration_MC50.c: 969:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.photoCellInOpen;
  5870  0031BC  0EA0               	movlw	low (_var_sys_NVM+8)
  5871  0031BE  D032               	goto	L125
  5872  0031C0                     l21979:
  5873                           
  5874                           ; BSR set to: 0
  5875  0031C0  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5876  0031C2  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5877  0031C4  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5878                           
  5879                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5880                           ; Switch size 1, requested type "simple"
  5881                           ; Number of cases is 1, Range of values is 0 to 0
  5882                           ; switch strategies available:
  5883                           ; Name         Instructions Cycles
  5884                           ; simple_byte            4     3 (average)
  5885                           ;	Chosen strategy is simple_byte
  5886  0031C6  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5887  0031C8  0A00               	xorlw	0	; case 0
  5888  0031CA  A4D8               	btfss	status,2,c
  5889  0031CC  D02D               	goto	L124
  5890                           
  5891                           ; BSR set to: 0
  5892                           ; Switch size 1, requested type "simple"
  5893                           ; Number of cases is 2, Range of values is 0 to 1
  5894                           ; switch strategies available:
  5895                           ; Name         Instructions Cycles
  5896                           ; simple_byte            7     4 (average)
  5897                           ;	Chosen strategy is simple_byte
  5898  0031CE  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5899  0031D0  0A00               	xorlw	0	; case 0
  5900  0031D2  B4D8               	btfsc	status,2,c
  5901  0031D4  D7F1               	goto	l21973
  5902  0031D6  0A01               	xorlw	1	; case 1
  5903  0031D8  B4D8               	btfsc	status,2,c
  5904  0031DA  D7F0               	goto	l21975
  5905  0031DC  D025               	goto	L124
  5906  0031DE                     l21985:
  5907                           
  5908                           ; BSR set to: 0
  5909                           ;sm_MenuConfiguration_MC50.c: 984:                 {;sm_MenuConfiguration_MC50.c: 985:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.securityBandIsON;
  5910  0031DE  0EA1               	movlw	low (_var_sys_NVM+9)
  5911  0031E0  D021               	goto	L125
  5912  0031E2                     l21987:
  5913                           
  5914                           ; BSR set to: 0
  5915                           ;sm_MenuConfiguration_MC50.c: 989:                 {;sm_MenuConfiguration_MC50.c: 990:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.securityBandType;
  5916  0031E2  0EA2               	movlw	low (_var_sys_NVM+10)
  5917  0031E4  D01F               	goto	L125
  5918  0031E6                     l21989:
  5919                           
  5920                           ; BSR set to: 0
  5921                           ;sm_MenuConfiguration_MC50.c: 994:                 {;sm_MenuConfiguration_MC50.c: 995:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.securityBandInOpen;
  5922  0031E6  0EA3               	movlw	low (_var_sys_NVM+11)
  5923  0031E8  D01D               	goto	L125
  5924  0031EA                     l21991:
  5925                           
  5926                           ; BSR set to: 0
  5927                           ;sm_MenuConfiguration_MC50.c: 999:                 {;sm_MenuConfiguration_MC50.c: 1000: 
      +                                              edit_Param.Value=(unsigned char*)&var_sys_NVM.Stopboton;
  5928  0031EA  0EAE               	movlw	low (_var_sys_NVM+22)
  5929  0031EC  D01B               	goto	L125
  5930  0031EE                     l21995:
  5931                           
  5932                           ; BSR set to: 0
  5933  0031EE  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5934  0031F0  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5935  0031F2  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5936                           
  5937                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5938                           ; Switch size 1, requested type "simple"
  5939                           ; Number of cases is 1, Range of values is 0 to 0
  5940                           ; switch strategies available:
  5941                           ; Name         Instructions Cycles
  5942                           ; simple_byte            4     3 (average)
  5943                           ;	Chosen strategy is simple_byte
  5944  0031F4  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5945  0031F6  0A00               	xorlw	0	; case 0
  5946  0031F8  A4D8               	btfss	status,2,c
  5947  0031FA  D016               	goto	L124
  5948                           
  5949                           ; BSR set to: 0
  5950                           ; Switch size 1, requested type "simple"
  5951                           ; Number of cases is 4, Range of values is 0 to 3
  5952                           ; switch strategies available:
  5953                           ; Name         Instructions Cycles
  5954                           ; simple_byte           13     7 (average)
  5955                           ;	Chosen strategy is simple_byte
  5956  0031FC  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5957  0031FE  0A00               	xorlw	0	; case 0
  5958  003200  B4D8               	btfsc	status,2,c
  5959  003202  D7ED               	goto	l21985
  5960  003204  0A01               	xorlw	1	; case 1
  5961  003206  B4D8               	btfsc	status,2,c
  5962  003208  D7EC               	goto	l21987
  5963  00320A  0A03               	xorlw	3	; case 2
  5964  00320C  B4D8               	btfsc	status,2,c
  5965  00320E  D7EB               	goto	l21989
  5966  003210  0A01               	xorlw	1	; case 3
  5967  003212  B4D8               	btfsc	status,2,c
  5968  003214  D7EA               	goto	l21991
  5969  003216  D008               	goto	L124
  5970  003218                     l22001:
  5971                           
  5972                           ; BSR set to: 0
  5973                           ;sm_MenuConfiguration_MC50.c: 1018:                 {;sm_MenuConfiguration_MC50.c: 1019:
      +                                               edit_Param.Value=(unsigned char*)&var_sys_NVM.homemPresente;
  5974  003218  0EA8               	movlw	low (_var_sys_NVM+16)
  5975  00321A  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5976  00321C  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5977                           
  5978                           ; BSR set to: 0
  5979                           ;sm_MenuConfiguration_MC50.c: 1020:                       edit_Param.Max=2;
  5980  00321E  0E02               	movlw	2
  5981  003220  D783               	goto	L29
  5982  003222                     l22007:
  5983                           
  5984                           ; BSR set to: 0
  5985                           ;sm_MenuConfiguration_MC50.c: 1025:                 {;sm_MenuConfiguration_MC50.c: 1026:
      +                                               edit_Param.Value=(unsigned char*)&var_sys_NVM.logicDigital;
  5986  003222  0EA9               	movlw	low (_var_sys_NVM+17)
  5987  003224                     L125:
  5988  003224  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5989  003226  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5990  003228                     L124:
  5991                           
  5992                           ; BSR set to: 0
  5993                           ;sm_MenuConfiguration_MC50.c: 1027:                     edit_Param.Max=1;
  5994  003228  0E01               	movlw	1
  5995  00322A  D77E               	goto	L29
  5996  00322C                     l22015:
  5997                           
  5998                           ; BSR set to: 0
  5999  00322C  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  6000  00322E  6FDC               	movwf	??_setValueToEdit& (0+255),b
  6001  003230  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  6002                           
  6003                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6004                           ; Switch size 1, requested type "simple"
  6005                           ; Number of cases is 1, Range of values is 0 to 0
  6006                           ; switch strategies available:
  6007                           ; Name         Instructions Cycles
  6008                           ; simple_byte            4     3 (average)
  6009                           ;	Chosen strategy is simple_byte
  6010  003232  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  6011  003234  0A00               	xorlw	0	; case 0
  6012  003236  A4D8               	btfss	status,2,c
  6013  003238  D77A               	goto	L19
  6014                           
  6015                           ; BSR set to: 0
  6016                           ; Switch size 1, requested type "simple"
  6017                           ; Number of cases is 2, Range of values is 0 to 1
  6018                           ; switch strategies available:
  6019                           ; Name         Instructions Cycles
  6020                           ; simple_byte            7     4 (average)
  6021                           ;	Chosen strategy is simple_byte
  6022  00323A  51DC               	movf	??_setValueToEdit& (0+255),w,b
  6023  00323C  0A00               	xorlw	0	; case 0
  6024  00323E  B4D8               	btfsc	status,2,c
  6025  003240  D7EB               	goto	l22001
  6026  003242  0A01               	xorlw	1	; case 1
  6027  003244  B4D8               	btfsc	status,2,c
  6028  003246  D7ED               	goto	l22007
  6029  003248  D772               	goto	L19
  6030  00324A                     l22021:
  6031                           
  6032                           ; BSR set to: 0
  6033                           ;sm_MenuConfiguration_MC50.c: 1042:                 {;sm_MenuConfiguration_MC50.c: 1043:
      +                                               edit_Param.Value=(unsigned char*)&var_sys_NVM.softStart;
  6034  00324A  0EAA               	movlw	low (_var_sys_NVM+18)
  6035  00324C  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  6036  00324E  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  6037                           
  6038                           ; BSR set to: 0
  6039                           ;sm_MenuConfiguration_MC50.c: 1044:                      edit_Param.Max=9;
  6040  003250  0E09               	movlw	9
  6041  003252  D76A               	goto	L29
  6042  003254                     l22027:
  6043                           
  6044                           ; BSR set to: 0
  6045                           ;sm_MenuConfiguration_MC50.c: 1049:                 {;sm_MenuConfiguration_MC50.c: 1050:
      +                                               edit_Param.Value=(unsigned char*)&var_sys_NVM.softstop;
  6046  003254  0EAB               	movlw	low (_var_sys_NVM+19)
  6047  003256  D7FA               	goto	L27
  6048  003258                     l22035:
  6049                           
  6050                           ; BSR set to: 0
  6051  003258  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  6052  00325A  6FDC               	movwf	??_setValueToEdit& (0+255),b
  6053  00325C  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  6054                           
  6055                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6056                           ; Switch size 1, requested type "simple"
  6057                           ; Number of cases is 1, Range of values is 0 to 0
  6058                           ; switch strategies available:
  6059                           ; Name         Instructions Cycles
  6060                           ; simple_byte            4     3 (average)
  6061                           ;	Chosen strategy is simple_byte
  6062  00325E  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  6063  003260  0A00               	xorlw	0	; case 0
  6064  003262  A4D8               	btfss	status,2,c
  6065  003264  D764               	goto	L19
  6066                           
  6067                           ; BSR set to: 0
  6068                           ; Switch size 1, requested type "simple"
  6069                           ; Number of cases is 2, Range of values is 0 to 1
  6070                           ; switch strategies available:
  6071                           ; Name         Instructions Cycles
  6072                           ; simple_byte            7     4 (average)
  6073                           ;	Chosen strategy is simple_byte
  6074  003266  51DC               	movf	??_setValueToEdit& (0+255),w,b
  6075  003268  0A00               	xorlw	0	; case 0
  6076  00326A  B4D8               	btfsc	status,2,c
  6077  00326C  D7EE               	goto	l22021
  6078  00326E  0A01               	xorlw	1	; case 1
  6079  003270  B4D8               	btfsc	status,2,c
  6080  003272  D7F0               	goto	l22027
  6081  003274  D75C               	goto	L19
  6082  003276                     l22041:
  6083                           
  6084                           ; BSR set to: 0
  6085                           ;sm_MenuConfiguration_MC50.c: 1068:                 {;sm_MenuConfiguration_MC50.c: 1069:
      +                                 edit_Param.Value=&value;
  6086  003276  0EFD               	movlw	low setValueToEdit@value
  6087  003278  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  6088  00327A  0E01               	movlw	high setValueToEdit@value
  6089  00327C  6E48               	movwf	(_edit_Param+2)^0,c	;volatile
  6090                           
  6091                           ; BSR set to: 0
  6092                           ;sm_MenuConfiguration_MC50.c: 1070:                     for(unsigned char posindex=0; po
      +                          sindex <= *(unsigned char*)&var_sys_NVM.positionRemotesFull; posindex++)
  6093  00327E  0E00               	movlw	0
  6094  003280  6FDF               	movwf	setValueToEdit@posindex& (0+255),b
  6095  003282  D00D               	goto	l22051
  6096  003284                     l3438:
  6097                           
  6098                           ; BSR set to: 0
  6099                           ;sm_MenuConfiguration_MC50.c: 1071:                     {;sm_MenuConfiguration_MC50.c: 1
      +                          072:                         value=posindex;
  6100  003284  C0DF  F1FD         	movff	setValueToEdit@posindex,setValueToEdit@value
  6101                           
  6102                           ; BSR set to: 0
  6103                           ;sm_MenuConfiguration_MC50.c: 1073:                         if(cmdMemoryIsEmpty(menu_st.
      +                          parameterSelected, posindex))
  6104  003288  C0DF  F02E         	movff	setValueToEdit@posindex,cmdMemoryIsEmpty@position
  6105  00328C  0101               	movlb	1	; () banked
  6106  00328E  5168               	movf	(_menu_st+23)& (0+255),w,b
  6107  003290  EC2C  F03F         	call	_cmdMemoryIsEmpty
  6108  003294  0900               	iorlw	0
  6109  003296  A4D8               	btfss	status,2,c
  6110  003298  D008               	goto	u25360
  6111                           
  6112                           ;sm_MenuConfiguration_MC50.c: 1075:                     }
  6113  00329A  0100               	movlb	0	; () banked
  6114  00329C  2BDF               	incf	setValueToEdit@posindex& (0+255),f,b
  6115  00329E                     l22051:
  6116                           
  6117                           ; BSR set to: 0
  6118  00329E  EE20  F0B8         	lfsr	2,_var_sys_NVM+32
  6119  0032A2  51DF               	movf	setValueToEdit@posindex& (0+255),w,b
  6120  0032A4  5CDE               	subwf	postinc2,w,c
  6121  0032A6  B0D8               	btfsc	status,0,c
  6122  0032A8  D7ED               	goto	l3438
  6123  0032AA                     u25360:
  6124                           
  6125                           ;sm_MenuConfiguration_MC50.c: 1076:                     edit_Param.Max=*(unsigned char*)
      +                          &var_sys_NVM.positionRemotesFull;
  6126  0032AA  EE20  F0B8         	lfsr	2,_var_sys_NVM+32
  6127  0032AE  D005               	goto	L28
  6128  0032B0                     l22055:
  6129                           
  6130                           ; BSR set to: 0
  6131                           ;sm_MenuConfiguration_MC50.c: 1080:                 {;sm_MenuConfiguration_MC50.c: 1081:
      +                                               edit_Param.Value=(unsigned char*)&var_sys_NVM.positionRemotesWalk;
  6132  0032B0  0EB9               	movlw	low (_var_sys_NVM+33)
  6133  0032B2  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  6134  0032B4  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  6135                           
  6136                           ; BSR set to: 0
  6137                           ;sm_MenuConfiguration_MC50.c: 1082:                     edit_Param.Max=*(unsigned char*)
      +                          &var_sys_NVM.positionRemotesWalk;
  6138  0032B6  EE20  F0B9         	lfsr	2,_var_sys_NVM+33
  6139  0032BA                     L28:
  6140  0032BA  50DF               	movf	indf2,w,c
  6141  0032BC  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  6142                           
  6143                           ;sm_MenuConfiguration_MC50.c: 1083:                 };sm_MenuConfiguration_MC50.c: 1084:
      +                                           break;
  6144  0032BE  D00E               	goto	l22063
  6145  0032C0                     l22061:
  6146                           
  6147                           ; BSR set to: 0
  6148  0032C0  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  6149  0032C2  6FDC               	movwf	??_setValueToEdit& (0+255),b
  6150  0032C4  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  6151                           
  6152                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6153                           ; Switch size 1, requested type "simple"
  6154                           ; Number of cases is 1, Range of values is 0 to 0
  6155                           ; switch strategies available:
  6156                           ; Name         Instructions Cycles
  6157                           ; simple_byte            4     3 (average)
  6158                           ;	Chosen strategy is simple_byte
  6159  0032C6  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  6160  0032C8  0A00               	xorlw	0	; case 0
  6161  0032CA  A4D8               	btfss	status,2,c
  6162  0032CC  D007               	goto	l22063
  6163                           
  6164                           ; BSR set to: 0
  6165                           ; Switch size 1, requested type "simple"
  6166                           ; Number of cases is 2, Range of values is 0 to 1
  6167                           ; switch strategies available:
  6168                           ; Name         Instructions Cycles
  6169                           ; simple_byte            7     4 (average)
  6170                           ;	Chosen strategy is simple_byte
  6171  0032CE  51DC               	movf	??_setValueToEdit& (0+255),w,b
  6172  0032D0  0A00               	xorlw	0	; case 0
  6173  0032D2  B4D8               	btfsc	status,2,c
  6174  0032D4  D7D0               	goto	l22041
  6175  0032D6  0A01               	xorlw	1	; case 1
  6176  0032D8  B4D8               	btfsc	status,2,c
  6177  0032DA  D7EA               	goto	l22055
  6178  0032DC                     l22063:
  6179                           
  6180                           ;sm_MenuConfiguration_MC50.c: 1086:             edit_Param.position=*edit_Param.Value;
  6181  0032DC  C047  FFD9         	movff	_edit_Param+1,fsr2l	;volatile
  6182  0032E0  C048  FFDA         	movff	_edit_Param+2,fsr2h	;volatile
  6183  0032E4  50DF               	movf	indf2,w,c
  6184  0032E6  6E46               	movwf	_edit_Param^0,c	;volatile
  6185                           
  6186                           ;sm_MenuConfiguration_MC50.c: 1087:             edit_Param.Min=0;
  6187  0032E8  0E00               	movlw	0
  6188  0032EA  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  6189                           
  6190                           ;sm_MenuConfiguration_MC50.c: 1088:             haveValueToEdit=1;
  6191  0032EC  0E01               	movlw	1
  6192  0032EE  0100               	movlb	0	; () banked
  6193  0032F0  6FE0               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  6194                           
  6195                           ;sm_MenuConfiguration_MC50.c: 1089:             edit_Param.tempValue=*edit_Param.Value;
  6196  0032F2  C047  FFD9         	movff	_edit_Param+1,fsr2l	;volatile
  6197  0032F6  C048  FFDA         	movff	_edit_Param+2,fsr2h	;volatile
  6198  0032FA  50DF               	movf	indf2,w,c
  6199  0032FC  6E49               	movwf	(_edit_Param+3)^0,c	;volatile
  6200                           
  6201                           ; BSR set to: 0
  6202                           ;sm_MenuConfiguration_MC50.c: 1090:             InitReceiver();
  6203  0032FE  ECC6  F04C         	call	_InitReceiver	;wreg free
  6204                           
  6205                           ;sm_MenuConfiguration_MC50.c: 1091:         };sm_MenuConfiguration_MC50.c: 1092:        
      +                           break;
  6206  003302  D029               	goto	l22075
  6207  003304                     l22073:
  6208                           
  6209                           ; BSR set to: 0
  6210  003304  51DE               	movf	setValueToEdit@menuType& (0+255),w,b
  6211  003306  6FDC               	movwf	??_setValueToEdit& (0+255),b
  6212  003308  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  6213                           
  6214                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6215                           ; Switch size 1, requested type "simple"
  6216                           ; Number of cases is 1, Range of values is 0 to 0
  6217                           ; switch strategies available:
  6218                           ; Name         Instructions Cycles
  6219                           ; simple_byte            4     3 (average)
  6220                           ;	Chosen strategy is simple_byte
  6221  00330A  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  6222  00330C  0A00               	xorlw	0	; case 0
  6223  00330E  A4D8               	btfss	status,2,c
  6224  003310  D022               	goto	l22075
  6225                           
  6226                           ; BSR set to: 0
  6227                           ; Switch size 1, requested type "simple"
  6228                           ; Number of cases is 11, Range of values is 0 to 12
  6229                           ; switch strategies available:
  6230                           ; Name         Instructions Cycles
  6231                           ; simple_byte           34    18 (average)
  6232                           ;	Chosen strategy is simple_byte
  6233  003312  51DC               	movf	??_setValueToEdit& (0+255),w,b
  6234  003314  0A00               	xorlw	0	; case 0
  6235  003316  B4D8               	btfsc	status,2,c
  6236  003318  D5A1               	goto	l3358
  6237  00331A  0A01               	xorlw	1	; case 1
  6238  00331C  B4D8               	btfsc	status,2,c
  6239  00331E  D5FE               	goto	l3372
  6240  003320  0A05               	xorlw	5	; case 4
  6241  003322  B4D8               	btfsc	status,2,c
  6242  003324  D6D7               	goto	l21925
  6243  003326  0A01               	xorlw	1	; case 5
  6244  003328  B4D8               	btfsc	status,2,c
  6245  00332A  D6EF               	goto	l21933
  6246  00332C  0A03               	xorlw	3	; case 6
  6247  00332E  B4D8               	btfsc	status,2,c
  6248  003330  D707               	goto	l21939
  6249  003332  0A01               	xorlw	1	; case 7
  6250  003334  B4D8               	btfsc	status,2,c
  6251  003336  D730               	goto	l21967
  6252  003338  0A0F               	xorlw	15	; case 8
  6253  00333A  B4D8               	btfsc	status,2,c
  6254  00333C  D741               	goto	l21979
  6255  00333E  0A01               	xorlw	1	; case 9
  6256  003340  B4D8               	btfsc	status,2,c
  6257  003342  D755               	goto	l21995
  6258  003344  0A03               	xorlw	3	; case 10
  6259  003346  B4D8               	btfsc	status,2,c
  6260  003348  D771               	goto	l22015
  6261  00334A  0A01               	xorlw	1	; case 11
  6262  00334C  B4D8               	btfsc	status,2,c
  6263  00334E  D784               	goto	l22035
  6264  003350  0A07               	xorlw	7	; case 12
  6265  003352  B4D8               	btfsc	status,2,c
  6266  003354  D7B5               	goto	l22061
  6267  003356                     l22075:
  6268                           
  6269                           ;sm_MenuConfiguration_MC50.c: 1095:     return haveValueToEdit;
  6270  003356  0100               	movlb	0	; () banked
  6271  003358  51E0               	movf	setValueToEdit@haveValueToEdit& (0+255),w,b
  6272                           
  6273                           ; BSR set to: 0
  6274  00335A  0012               	return		;funcret
  6275  00335C                     __end_of_setValueToEdit:
  6276                           	callstack 0
  6277                           
  6278 ;; *************** function _load_New_Menu *****************
  6279 ;; Defined at:
  6280 ;;		line 434 in file "sm_MenuConfiguration_MC50.c"
  6281 ;; Parameters:    Size  Location     Type
  6282 ;;  Menu            1    wreg     enum E10813
  6283 ;; Auto vars:     Size  Location     Type
  6284 ;;  Menu            1   33[COMRAM] enum E10813
  6285 ;;  i               1   34[COMRAM] unsigned char 
  6286 ;; Return value:  Size  Location     Type
  6287 ;;                  1    wreg      void 
  6288 ;; Registers used:
  6289 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6290 ;; Tracked objects:
  6291 ;;		On entry : 0/0
  6292 ;;		On exit  : 0/0
  6293 ;;		Unchanged: 0/0
  6294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6296 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6297 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6298 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6299 ;;Total ram usage:        4 bytes
  6300 ;; Hardware stack levels used: 1
  6301 ;; Hardware stack levels required when called: 5
  6302 ;; This function calls:
  6303 ;;		_SetSegmentValueIntermitentMain
  6304 ;;		_SetSegmentValueMain
  6305 ;; This function is called by:
  6306 ;;		_sm_execute_main
  6307 ;;		_sm_execute_menuConfiguration
  6308 ;;		_setValueToEdit
  6309 ;; This function uses a non-reentrant model
  6310 ;;
  6311                           
  6312                           	psect	text4
  6313  0046B6                     __ptext4:
  6314                           	callstack 0
  6315  0046B6                     _load_New_Menu:
  6316                           	callstack 22
  6317                           
  6318                           ; BSR set to: 0
  6319                           ;incstack = 0
  6320                           ;load_New_Menu@Menu stored from wreg
  6321  0046B6  6E22               	movwf	load_New_Menu@Menu^0,c
  6322                           
  6323                           ;sm_MenuConfiguration_MC50.c: 435:     ts_system.timeoutMenu=((1000/50)*5) ;
  6324  0046B8  0E00               	movlw	0
  6325  0046BA  0101               	movlb	1	; () banked
  6326  0046BC  6FAE               	movwf	(_ts_system+15)& (0+255),b	;volatile
  6327  0046BE  0E64               	movlw	100
  6328  0046C0  6FAD               	movwf	(_ts_system+14)& (0+255),b	;volatile
  6329                           
  6330                           ; BSR set to: 1
  6331                           ;sm_MenuConfiguration_MC50.c: 439:     if(menu_st.actualMenu!=Menu && Menu>E_Menu)
  6332  0046C2  5022               	movf	load_New_Menu@Menu^0,w,c
  6333  0046C4  1966               	xorwf	(_menu_st+21)& (0+255),w,b
  6334  0046C6  B4D8               	btfsc	status,2,c
  6335  0046C8  D006               	goto	l20953
  6336                           
  6337                           ; BSR set to: 1
  6338  0046CA  0E01               	movlw	1
  6339  0046CC  6422               	cpfsgt	load_New_Menu@Menu^0,c
  6340  0046CE  D003               	goto	l20953
  6341                           
  6342                           ; BSR set to: 1
  6343                           ;sm_MenuConfiguration_MC50.c: 440:     {;sm_MenuConfiguration_MC50.c: 441:         menu_
      +                          st.parameterSelected=0;
  6344  0046D0  0E00               	movlw	0
  6345  0046D2  6F68               	movwf	(_menu_st+23)& (0+255),b
  6346                           
  6347                           ;sm_MenuConfiguration_MC50.c: 442:     }
  6348  0046D4  D005               	goto	l20957
  6349  0046D6                     l20953:
  6350                           
  6351                           ; BSR set to: 1
  6352  0046D6  0E02               	movlw	2
  6353  0046D8  6022               	cpfslt	load_New_Menu@Menu^0,c
  6354  0046DA  D002               	goto	l20957
  6355                           
  6356                           ; BSR set to: 1
  6357                           ;sm_MenuConfiguration_MC50.c: 444:     {;sm_MenuConfiguration_MC50.c: 445:        menu_s
      +                          t.parameterSelected = menu_st.lastMainParameterSelected;
  6358  0046DC  C169  F168         	movff	_menu_st+24,_menu_st+23
  6359  0046E0                     l20957:
  6360                           
  6361                           ; BSR set to: 1
  6362                           ;sm_MenuConfiguration_MC50.c: 449:     menu_st.lastMenu=((void*)0);
  6363  0046E0  0E00               	movlw	0
  6364  0046E2  6F65               	movwf	(_menu_st+20)& (0+255),b
  6365                           
  6366                           ;sm_MenuConfiguration_MC50.c: 450:     switch (Menu)
  6367  0046E4  D0F6               	goto	l21009
  6368  0046E6                     l20959:
  6369                           
  6370                           ; BSR set to: 1
  6371                           ;sm_MenuConfiguration_MC50.c: 453:         {;sm_MenuConfiguration_MC50.c: 455:          
      +                             menu_st.actualMenu=P_Menu;
  6372  0046E6  0E00               	movlw	0
  6373  0046E8  6F66               	movwf	(_menu_st+21)& (0+255),b
  6374                           
  6375                           ;sm_MenuConfiguration_MC50.c: 456:             menu_st.menuSize=10;
  6376  0046EA  0E0A               	movlw	10
  6377  0046EC  6F67               	movwf	(_menu_st+22)& (0+255),b
  6378                           
  6379                           ;sm_MenuConfiguration_MC50.c: 457:             menu_st.lastMainParameterSelected=0;
  6380  0046EE  0E00               	movlw	0
  6381  0046F0  6F69               	movwf	(_menu_st+24)& (0+255),b
  6382                           
  6383                           ;sm_MenuConfiguration_MC50.c: 458:             for (i=0;i<(10);i++)
  6384  0046F2  0E00               	movlw	0
  6385  0046F4  6E23               	movwf	load_New_Menu@i^0,c
  6386  0046F6                     l20965:
  6387                           
  6388                           ;sm_MenuConfiguration_MC50.c: 459:             {;sm_MenuConfiguration_MC50.c: 460:      
      +                                    menu_st.menuList[i].value_display1=dP;
  6389  0046F6  5023               	movf	load_New_Menu@i^0,w,c
  6390  0046F8  0D02               	mullw	2
  6391  0046FA  0E51               	movlw	low _menu_st
  6392  0046FC  24F3               	addwf	243,w,c
  6393  0046FE  6ED9               	movwf	fsr2l,c
  6394  004700  0E01               	movlw	high _menu_st
  6395  004702  20F4               	addwfc	prodh,w,c
  6396  004704  6EDA               	movwf	fsr2h,c
  6397  004706  0E10               	movlw	16
  6398  004708  6EDF               	movwf	indf2,c
  6399                           
  6400                           ;sm_MenuConfiguration_MC50.c: 461:                menu_st.menuList[i].value_display2=i;
  6401  00470A  5023               	movf	load_New_Menu@i^0,w,c
  6402  00470C  0D02               	mullw	2
  6403  00470E  0E52               	movlw	low (_menu_st+1)
  6404  004710  24F3               	addwf	243,w,c
  6405  004712  6ED9               	movwf	fsr2l,c
  6406  004714  0E01               	movlw	high (_menu_st+1)
  6407  004716  20F4               	addwfc	prodh,w,c
  6408  004718  6EDA               	movwf	fsr2h,c
  6409  00471A  C023  FFDF         	movff	load_New_Menu@i,indf2
  6410                           
  6411                           ;sm_MenuConfiguration_MC50.c: 462:             }
  6412  00471E  2A23               	incf	load_New_Menu@i^0,f,c
  6413  004720  0E09               	movlw	9
  6414  004722  6423               	cpfsgt	load_New_Menu@i^0,c
  6415  004724  D7E8               	goto	l20965
  6416  004726  D107               	goto	l21011
  6417  004728                     l20971:
  6418                           
  6419                           ; BSR set to: 1
  6420                           ;sm_MenuConfiguration_MC50.c: 466:         {;sm_MenuConfiguration_MC50.c: 468:          
      +                             menu_st.actualMenu=E_Menu;
  6421  004728  0E01               	movlw	1
  6422  00472A  6F66               	movwf	(_menu_st+21)& (0+255),b
  6423                           
  6424                           ;sm_MenuConfiguration_MC50.c: 469:             menu_st.menuSize=10;
  6425  00472C  0E0A               	movlw	10
  6426  00472E  6F67               	movwf	(_menu_st+22)& (0+255),b
  6427                           
  6428                           ;sm_MenuConfiguration_MC50.c: 470:             menu_st.lastMainParameterSelected=0;
  6429  004730  0E00               	movlw	0
  6430  004732  6F69               	movwf	(_menu_st+24)& (0+255),b
  6431                           
  6432                           ;sm_MenuConfiguration_MC50.c: 471:             for (i=0;i<(10);i++)
  6433  004734  0E00               	movlw	0
  6434  004736  6E23               	movwf	load_New_Menu@i^0,c
  6435  004738                     l20977:
  6436                           
  6437                           ;sm_MenuConfiguration_MC50.c: 472:             {;sm_MenuConfiguration_MC50.c: 473:      
      +                                    menu_st.menuList[i].value_display1=dE;
  6438  004738  5023               	movf	load_New_Menu@i^0,w,c
  6439  00473A  0D02               	mullw	2
  6440  00473C  0E51               	movlw	low _menu_st
  6441  00473E  24F3               	addwf	243,w,c
  6442  004740  6ED9               	movwf	fsr2l,c
  6443  004742  0E01               	movlw	high _menu_st
  6444  004744  20F4               	addwfc	prodh,w,c
  6445  004746  6EDA               	movwf	fsr2h,c
  6446  004748  0E0E               	movlw	14
  6447  00474A  6EDF               	movwf	indf2,c
  6448                           
  6449                           ;sm_MenuConfiguration_MC50.c: 474:                menu_st.menuList[i].value_display2=i;
  6450  00474C  5023               	movf	load_New_Menu@i^0,w,c
  6451  00474E  0D02               	mullw	2
  6452  004750  0E52               	movlw	low (_menu_st+1)
  6453  004752  24F3               	addwf	243,w,c
  6454  004754  6ED9               	movwf	fsr2l,c
  6455  004756  0E01               	movlw	high (_menu_st+1)
  6456  004758  20F4               	addwfc	prodh,w,c
  6457  00475A  6EDA               	movwf	fsr2h,c
  6458  00475C  C023  FFDF         	movff	load_New_Menu@i,indf2
  6459                           
  6460                           ;sm_MenuConfiguration_MC50.c: 475:             }
  6461  004760  2A23               	incf	load_New_Menu@i^0,f,c
  6462  004762  0E09               	movlw	9
  6463  004764  6423               	cpfsgt	load_New_Menu@i^0,c
  6464  004766  D7E8               	goto	l20977
  6465  004768  D0E6               	goto	l21011
  6466  00476A                     l20983:
  6467                           
  6468                           ; BSR set to: 1
  6469                           ;sm_MenuConfiguration_MC50.c: 479:         {;sm_MenuConfiguration_MC50.c: 480:          
      +                             menu_st.lastMenu=P_Menu;
  6470  00476A  0E00               	movlw	0
  6471  00476C  6F65               	movwf	(_menu_st+20)& (0+255),b
  6472                           
  6473                           ;sm_MenuConfiguration_MC50.c: 481:             menu_st.actualMenu=P0_SMenu;
  6474  00476E  0E04               	movlw	4
  6475  004770  6F66               	movwf	(_menu_st+21)& (0+255),b
  6476                           
  6477                           ;sm_MenuConfiguration_MC50.c: 482:             menu_st.menuSize=4;
  6478  004772  0E04               	movlw	4
  6479  004774  6F67               	movwf	(_menu_st+22)& (0+255),b
  6480                           
  6481                           ;sm_MenuConfiguration_MC50.c: 483:             menu_st.menuList[0].value_display1=dA;
  6482  004776  0E0A               	movlw	10
  6483  004778  6F51               	movwf	_menu_st& (0+255),b
  6484                           
  6485                           ;sm_MenuConfiguration_MC50.c: 484:             menu_st.menuList[0].value_display2=dU;
  6486  00477A  0E13               	movlw	19
  6487  00477C  6F52               	movwf	(_menu_st+1)& (0+255),b
  6488                           
  6489                           ;sm_MenuConfiguration_MC50.c: 485:             menu_st.menuList[1].value_display1=dM;
  6490  00477E  0E17               	movlw	23
  6491  004780  6F53               	movwf	(_menu_st+2)& (0+255),b
  6492                           
  6493                           ;sm_MenuConfiguration_MC50.c: 486:             menu_st.menuList[1].value_display2=dA;
  6494  004782  0E0A               	movlw	10
  6495  004784  6F54               	movwf	(_menu_st+3)& (0+255),b
  6496                           
  6497                           ;sm_MenuConfiguration_MC50.c: 487:             menu_st.menuList[2].value_display1=d5;
  6498  004786  0E05               	movlw	5
  6499  004788  6F55               	movwf	(_menu_st+4)& (0+255),b
  6500                           
  6501                           ;sm_MenuConfiguration_MC50.c: 488:             menu_st.menuList[2].value_display2=dy;
  6502  00478A  0E21               	movlw	33
  6503  00478C  6F56               	movwf	(_menu_st+5)& (0+255),b
  6504                           
  6505                           ;sm_MenuConfiguration_MC50.c: 489:             menu_st.menuList[3].value_display1=dd;
  6506  00478E  0E0D               	movlw	13
  6507  004790  6F57               	movwf	(_menu_st+6)& (0+255),b
  6508                           
  6509                           ;sm_MenuConfiguration_MC50.c: 490:             menu_st.menuList[3].value_display2=d1;
  6510  004792  0E01               	movlw	1
  6511  004794  D051               	goto	L31
  6512  004796                     l20985:
  6513                           
  6514                           ; BSR set to: 1
  6515                           ;sm_MenuConfiguration_MC50.c: 494:         {;sm_MenuConfiguration_MC50.c: 495:          
      +                             menu_st.lastMenu=P_Menu;
  6516  004796  0E00               	movlw	0
  6517  004798  6F65               	movwf	(_menu_st+20)& (0+255),b
  6518                           
  6519                           ;sm_MenuConfiguration_MC50.c: 496:             menu_st.actualMenu=P1_SMenu;
  6520  00479A  0E05               	movlw	5
  6521  00479C  6F66               	movwf	(_menu_st+21)& (0+255),b
  6522                           
  6523                           ;sm_MenuConfiguration_MC50.c: 497:             menu_st.menuSize=2;
  6524  00479E  0E02               	movlw	2
  6525  0047A0  6F67               	movwf	(_menu_st+22)& (0+255),b
  6526                           
  6527                           ;sm_MenuConfiguration_MC50.c: 498:             menu_st.menuList[0].value_display1=dd;
  6528  0047A2  0E0D               	movlw	13
  6529  0047A4  6F51               	movwf	_menu_st& (0+255),b
  6530                           
  6531                           ;sm_MenuConfiguration_MC50.c: 499:             menu_st.menuList[0].value_display2=dA;
  6532  0047A6  0E0A               	movlw	10
  6533  0047A8  6F52               	movwf	(_menu_st+1)& (0+255),b
  6534                           
  6535                           ;sm_MenuConfiguration_MC50.c: 500:             menu_st.menuList[1].value_display1=dd;
  6536  0047AA  0E0D               	movlw	13
  6537  0047AC  6F53               	movwf	(_menu_st+2)& (0+255),b
  6538                           
  6539                           ;sm_MenuConfiguration_MC50.c: 501:             menu_st.menuList[1].value_display2=dF;
  6540  0047AE  0E0F               	movlw	15
  6541  0047B0  D08E               	goto	L38
  6542  0047B2                     l20987:
  6543                           
  6544                           ; BSR set to: 1
  6545                           ;sm_MenuConfiguration_MC50.c: 508:         {;sm_MenuConfiguration_MC50.c: 509:          
      +                             menu_st.lastMenu=P_Menu;
  6546  0047B2  0E00               	movlw	0
  6547  0047B4  6F65               	movwf	(_menu_st+20)& (0+255),b
  6548                           
  6549                           ;sm_MenuConfiguration_MC50.c: 510:             menu_st.actualMenu=P2_SMenu;
  6550  0047B6  0E06               	movlw	6
  6551  0047B8  6F66               	movwf	(_menu_st+21)& (0+255),b
  6552                           
  6553                           ;sm_MenuConfiguration_MC50.c: 511:             menu_st.menuSize=3;
  6554  0047BA  0E03               	movlw	3
  6555  0047BC  6F67               	movwf	(_menu_st+22)& (0+255),b
  6556                           
  6557                           ;sm_MenuConfiguration_MC50.c: 512:             menu_st.menuList[0].value_display1=dF;
  6558  0047BE  0E0F               	movlw	15
  6559  0047C0  6F51               	movwf	_menu_st& (0+255),b
  6560                           
  6561                           ;sm_MenuConfiguration_MC50.c: 513:             menu_st.menuList[0].value_display2=d0;
  6562  0047C2  0E00               	movlw	0
  6563  0047C4  6F52               	movwf	(_menu_st+1)& (0+255),b
  6564                           
  6565                           ;sm_MenuConfiguration_MC50.c: 514:             menu_st.menuList[1].value_display1=dF;
  6566  0047C6  0E0F               	movlw	15
  6567  0047C8  6F53               	movwf	(_menu_st+2)& (0+255),b
  6568                           
  6569                           ;sm_MenuConfiguration_MC50.c: 515:             menu_st.menuList[1].value_display2=d5;
  6570  0047CA  0E05               	movlw	5
  6571  0047CC  6F54               	movwf	(_menu_st+3)& (0+255),b
  6572                           
  6573                           ;sm_MenuConfiguration_MC50.c: 516:             menu_st.menuList[2].value_display1=dF;
  6574  0047CE  0E0F               	movlw	15
  6575  0047D0  6F55               	movwf	(_menu_st+4)& (0+255),b
  6576                           
  6577                           ;sm_MenuConfiguration_MC50.c: 517:             menu_st.menuList[2].value_display2=dd;
  6578  0047D2  0E0D               	movlw	13
  6579  0047D4  D073               	goto	L33
  6580  0047D6                     l20989:
  6581                           
  6582                           ; BSR set to: 1
  6583                           ;sm_MenuConfiguration_MC50.c: 521:         {;sm_MenuConfiguration_MC50.c: 522:          
      +                             menu_st.lastMenu=P_Menu;
  6584  0047D6  0E00               	movlw	0
  6585  0047D8  6F65               	movwf	(_menu_st+20)& (0+255),b
  6586                           
  6587                           ;sm_MenuConfiguration_MC50.c: 523:             menu_st.actualMenu=P4_SMenu;
  6588  0047DA  0E07               	movlw	7
  6589  0047DC  6F66               	movwf	(_menu_st+21)& (0+255),b
  6590                           
  6591                           ;sm_MenuConfiguration_MC50.c: 524:             menu_st.menuSize=2;
  6592  0047DE  0E02               	movlw	2
  6593  0047E0  6F67               	movwf	(_menu_st+22)& (0+255),b
  6594                           
  6595                           ;sm_MenuConfiguration_MC50.c: 525:             menu_st.menuList[0].value_display1=dA;
  6596  0047E2  0E0A               	movlw	10
  6597  0047E4  6F51               	movwf	_menu_st& (0+255),b
  6598                           
  6599                           ;sm_MenuConfiguration_MC50.c: 526:             menu_st.menuList[0].value_display2=dF;
  6600  0047E6  0E0F               	movlw	15
  6601  0047E8  6F52               	movwf	(_menu_st+1)& (0+255),b
  6602                           
  6603                           ;sm_MenuConfiguration_MC50.c: 527:             menu_st.menuList[1].value_display1=dA;
  6604  0047EA  0E0A               	movlw	10
  6605  0047EC  6F53               	movwf	(_menu_st+2)& (0+255),b
  6606                           
  6607                           ;sm_MenuConfiguration_MC50.c: 528:             menu_st.menuList[1].value_display2=dP;
  6608  0047EE  0E10               	movlw	16
  6609  0047F0  D06E               	goto	L38
  6610  0047F2                     l20991:
  6611                           
  6612                           ; BSR set to: 1
  6613                           ;sm_MenuConfiguration_MC50.c: 532:         {;sm_MenuConfiguration_MC50.c: 533:          
      +                             menu_st.lastMenu=P_Menu;
  6614  0047F2  0E00               	movlw	0
  6615  0047F4  6F65               	movwf	(_menu_st+20)& (0+255),b
  6616                           
  6617                           ;sm_MenuConfiguration_MC50.c: 534:             menu_st.actualMenu=P5_SMenu;
  6618  0047F6  0E08               	movlw	8
  6619  0047F8  6F66               	movwf	(_menu_st+21)& (0+255),b
  6620                           
  6621                           ;sm_MenuConfiguration_MC50.c: 535:             menu_st.menuSize=2;
  6622  0047FA  0E02               	movlw	2
  6623  0047FC  6F67               	movwf	(_menu_st+22)& (0+255),b
  6624                           
  6625                           ;sm_MenuConfiguration_MC50.c: 536:             menu_st.menuList[0].value_display1=dL;
  6626  0047FE  0E12               	movlw	18
  6627  004800  6F51               	movwf	_menu_st& (0+255),b
  6628                           
  6629                           ;sm_MenuConfiguration_MC50.c: 537:             menu_st.menuList[0].value_display2=dE;
  6630  004802  0E0E               	movlw	14
  6631  004804  6F52               	movwf	(_menu_st+1)& (0+255),b
  6632                           
  6633                           ;sm_MenuConfiguration_MC50.c: 538:             menu_st.menuList[1].value_display1=dH;
  6634  004806  0E11               	movlw	17
  6635  004808  6F53               	movwf	(_menu_st+2)& (0+255),b
  6636                           
  6637                           ;sm_MenuConfiguration_MC50.c: 539:             menu_st.menuList[1].value_display2=dC;
  6638  00480A  0E0C               	movlw	12
  6639  00480C  D060               	goto	L38
  6640  00480E                     l20993:
  6641                           
  6642                           ; BSR set to: 1
  6643                           ;sm_MenuConfiguration_MC50.c: 543:         {;sm_MenuConfiguration_MC50.c: 544:          
      +                             menu_st.lastMenu=P_Menu;
  6644  00480E  0E00               	movlw	0
  6645  004810  6F65               	movwf	(_menu_st+20)& (0+255),b
  6646                           
  6647                           ;sm_MenuConfiguration_MC50.c: 545:             menu_st.actualMenu=P6_SMenu;
  6648  004812  0E09               	movlw	9
  6649  004814  6F66               	movwf	(_menu_st+21)& (0+255),b
  6650                           
  6651                           ;sm_MenuConfiguration_MC50.c: 546:             menu_st.menuSize=4;
  6652  004816  0E04               	movlw	4
  6653  004818  6F67               	movwf	(_menu_st+22)& (0+255),b
  6654                           
  6655                           ;sm_MenuConfiguration_MC50.c: 547:             menu_st.menuList[0].value_display1=dL;
  6656  00481A  0E12               	movlw	18
  6657  00481C  6F51               	movwf	_menu_st& (0+255),b
  6658                           
  6659                           ;sm_MenuConfiguration_MC50.c: 548:             menu_st.menuList[0].value_display2=dA;
  6660  00481E  0E0A               	movlw	10
  6661  004820  6F52               	movwf	(_menu_st+1)& (0+255),b
  6662                           
  6663                           ;sm_MenuConfiguration_MC50.c: 549:             menu_st.menuList[1].value_display1=dH;
  6664  004822  0E11               	movlw	17
  6665  004824  6F53               	movwf	(_menu_st+2)& (0+255),b
  6666                           
  6667                           ;sm_MenuConfiguration_MC50.c: 550:             menu_st.menuList[1].value_display2=dA;
  6668  004826  0E0A               	movlw	10
  6669  004828  6F54               	movwf	(_menu_st+3)& (0+255),b
  6670                           
  6671                           ;sm_MenuConfiguration_MC50.c: 551:             menu_st.menuList[2].value_display1=dH;
  6672  00482A  0E11               	movlw	17
  6673  00482C  6F55               	movwf	(_menu_st+4)& (0+255),b
  6674                           
  6675                           ;sm_MenuConfiguration_MC50.c: 552:             menu_st.menuList[2].value_display2=dL;
  6676  00482E  0E12               	movlw	18
  6677  004830  6F56               	movwf	(_menu_st+5)& (0+255),b
  6678                           
  6679                           ;sm_MenuConfiguration_MC50.c: 553:             menu_st.menuList[3].value_display1=d5;
  6680  004832  0E05               	movlw	5
  6681  004834  6F57               	movwf	(_menu_st+6)& (0+255),b
  6682                           
  6683                           ;sm_MenuConfiguration_MC50.c: 554:             menu_st.menuList[3].value_display2=dt;
  6684  004836  0E15               	movlw	21
  6685  004838                     L31:
  6686  004838  6F58               	movwf	(_menu_st+7)& (0+255),b
  6687                           
  6688                           ;sm_MenuConfiguration_MC50.c: 556:         };sm_MenuConfiguration_MC50.c: 557:         b
      +                          reak;
  6689  00483A  D07D               	goto	l21011
  6690  00483C                     l20995:
  6691                           
  6692                           ; BSR set to: 1
  6693                           ;sm_MenuConfiguration_MC50.c: 559:         {;sm_MenuConfiguration_MC50.c: 560:          
      +                             menu_st.lastMenu=E_Menu;
  6694  00483C  0E01               	movlw	1
  6695  00483E  6F65               	movwf	(_menu_st+20)& (0+255),b
  6696                           
  6697                           ;sm_MenuConfiguration_MC50.c: 561:             menu_st.actualMenu=E0_SMenu;
  6698  004840  0E0A               	movlw	10
  6699  004842  6F66               	movwf	(_menu_st+21)& (0+255),b
  6700                           
  6701                           ;sm_MenuConfiguration_MC50.c: 562:             menu_st.menuSize=2;
  6702  004844  0E02               	movlw	2
  6703  004846  6F67               	movwf	(_menu_st+22)& (0+255),b
  6704                           
  6705                           ;sm_MenuConfiguration_MC50.c: 563:             menu_st.menuList[0].value_display1=dH;
  6706  004848  0E11               	movlw	17
  6707  00484A  6F51               	movwf	_menu_st& (0+255),b
  6708                           
  6709                           ;sm_MenuConfiguration_MC50.c: 564:             menu_st.menuList[0].value_display2=dP;
  6710  00484C  0E10               	movlw	16
  6711  00484E  6F52               	movwf	(_menu_st+1)& (0+255),b
  6712                           
  6713                           ;sm_MenuConfiguration_MC50.c: 565:             menu_st.menuList[1].value_display1=dP;
  6714  004850  0E10               	movlw	16
  6715  004852  6F53               	movwf	(_menu_st+2)& (0+255),b
  6716                           
  6717                           ;sm_MenuConfiguration_MC50.c: 566:             menu_st.menuList[1].value_display2=dL;
  6718  004854  0E12               	movlw	18
  6719  004856  D03B               	goto	L38
  6720  004858                     l20997:
  6721                           
  6722                           ; BSR set to: 1
  6723                           ;sm_MenuConfiguration_MC50.c: 570:         {;sm_MenuConfiguration_MC50.c: 571:          
      +                             menu_st.lastMenu=E_Menu;
  6724  004858  0E01               	movlw	1
  6725  00485A  6F65               	movwf	(_menu_st+20)& (0+255),b
  6726                           
  6727                           ;sm_MenuConfiguration_MC50.c: 572:             menu_st.actualMenu=E1_SMenu;
  6728  00485C  0E0B               	movlw	11
  6729  00485E  6F66               	movwf	(_menu_st+21)& (0+255),b
  6730                           
  6731                           ;sm_MenuConfiguration_MC50.c: 573:             menu_st.menuSize=2;
  6732  004860  0E02               	movlw	2
  6733  004862  6F67               	movwf	(_menu_st+22)& (0+255),b
  6734                           
  6735                           ;sm_MenuConfiguration_MC50.c: 574:             menu_st.menuList[0].value_display1=dr;
  6736  004864  0E14               	movlw	20
  6737  004866  6F51               	movwf	_menu_st& (0+255),b
  6738                           
  6739                           ;sm_MenuConfiguration_MC50.c: 575:             menu_st.menuList[0].value_display2=dq;
  6740  004868  0E24               	movlw	36
  6741  00486A  6F52               	movwf	(_menu_st+1)& (0+255),b
  6742                           
  6743                           ;sm_MenuConfiguration_MC50.c: 576:             menu_st.menuList[1].value_display1=dr;
  6744  00486C  0E14               	movlw	20
  6745  00486E  6F53               	movwf	(_menu_st+2)& (0+255),b
  6746                           
  6747                           ;sm_MenuConfiguration_MC50.c: 577:             menu_st.menuList[1].value_display2=dc;
  6748  004870  0E23               	movlw	35
  6749  004872  D02D               	goto	L38
  6750  004874                     l20999:
  6751                           
  6752                           ; BSR set to: 1
  6753                           ;sm_MenuConfiguration_MC50.c: 581:         {;sm_MenuConfiguration_MC50.c: 583:          
      +                             menu_st.actualMenu=S_Menu;
  6754  004874  0E0C               	movlw	12
  6755  004876  6F66               	movwf	(_menu_st+21)& (0+255),b
  6756                           
  6757                           ;sm_MenuConfiguration_MC50.c: 584:             menu_st.parameterSelected=0;
  6758  004878  0E00               	movlw	0
  6759  00487A  6F68               	movwf	(_menu_st+23)& (0+255),b
  6760                           
  6761                           ;sm_MenuConfiguration_MC50.c: 585:             menu_st.menuSize=2;
  6762  00487C  0E02               	movlw	2
  6763  00487E  6F67               	movwf	(_menu_st+22)& (0+255),b
  6764                           
  6765                           ;sm_MenuConfiguration_MC50.c: 586:             menu_st.menuList[0].value_display1=d5;
  6766  004880  0E05               	movlw	5
  6767  004882  6F51               	movwf	_menu_st& (0+255),b
  6768                           
  6769                           ;sm_MenuConfiguration_MC50.c: 587:             menu_st.menuList[0].value_display2=dU;
  6770  004884  0E13               	movlw	19
  6771  004886  6F52               	movwf	(_menu_st+1)& (0+255),b
  6772                           
  6773                           ;sm_MenuConfiguration_MC50.c: 588:             menu_st.menuList[1].value_display1=d5;
  6774  004888  0E05               	movlw	5
  6775  00488A  D7B0               	goto	L39
  6776  00488C                     l21001:
  6777                           
  6778                           ; BSR set to: 1
  6779                           ;sm_MenuConfiguration_MC50.c: 593:         {;sm_MenuConfiguration_MC50.c: 595:          
      +                             menu_st.actualMenu=Del_Menu;
  6780  00488C  0E0D               	movlw	13
  6781  00488E  6F66               	movwf	(_menu_st+21)& (0+255),b
  6782                           
  6783                           ;sm_MenuConfiguration_MC50.c: 596:             menu_st.menuSize=1;
  6784  004890  0E01               	movlw	1
  6785  004892  6F67               	movwf	(_menu_st+22)& (0+255),b
  6786                           
  6787                           ;sm_MenuConfiguration_MC50.c: 597:             menu_st.menuList[0].value_display1=dd;
  6788  004894  0E0D               	movlw	13
  6789  004896  6F51               	movwf	_menu_st& (0+255),b
  6790                           
  6791                           ;sm_MenuConfiguration_MC50.c: 598:             menu_st.menuList[0].value_display2=dL;
  6792  004898  0E12               	movlw	18
  6793  00489A  6F52               	movwf	(_menu_st+1)& (0+255),b
  6794                           
  6795                           ;sm_MenuConfiguration_MC50.c: 599:             ts_system.timeSinalizationDigit=(1000/50)
      +                          *3;
  6796  00489C  0E00               	movlw	0
  6797  00489E  6FAC               	movwf	(_ts_system+13)& (0+255),b	;volatile
  6798  0048A0  0E3C               	movlw	60
  6799  0048A2  6FAB               	movwf	(_ts_system+12)& (0+255),b	;volatile
  6800                           
  6801                           ;sm_MenuConfiguration_MC50.c: 600:         };sm_MenuConfiguration_MC50.c: 601:         b
      +                          reak;
  6802  0048A4  D048               	goto	l21011
  6803  0048A6                     l21003:
  6804                           
  6805                           ; BSR set to: 1
  6806                           ;sm_MenuConfiguration_MC50.c: 604:         {;sm_MenuConfiguration_MC50.c: 608:          
      +                             menu_st.menuList[0].value_display1=d5;
  6807  0048A6  0E05               	movlw	5
  6808  0048A8  6F51               	movwf	_menu_st& (0+255),b
  6809                           
  6810                           ;sm_MenuConfiguration_MC50.c: 609:             menu_st.menuList[0].value_display2=dC;
  6811  0048AA  0E0C               	movlw	12
  6812  0048AC  6F52               	movwf	(_menu_st+1)& (0+255),b
  6813                           
  6814                           ;sm_MenuConfiguration_MC50.c: 610:             menu_st.menuList[1].value_display1=d5;
  6815  0048AE  0E05               	movlw	5
  6816  0048B0  6F53               	movwf	(_menu_st+2)& (0+255),b
  6817                           
  6818                           ;sm_MenuConfiguration_MC50.c: 611:             menu_st.menuList[1].value_display2=dE;
  6819  0048B2  0E0E               	movlw	14
  6820  0048B4  6F54               	movwf	(_menu_st+3)& (0+255),b
  6821                           
  6822                           ;sm_MenuConfiguration_MC50.c: 612:             menu_st.menuList[2].value_display1=db;
  6823  0048B6  0E22               	movlw	34
  6824  0048B8  6F55               	movwf	(_menu_st+4)& (0+255),b
  6825                           
  6826                           ;sm_MenuConfiguration_MC50.c: 613:             menu_st.menuList[2].value_display2=dr;
  6827  0048BA  0E14               	movlw	20
  6828  0048BC                     L33:
  6829  0048BC  6F56               	movwf	(_menu_st+5)& (0+255),b
  6830                           
  6831                           ;sm_MenuConfiguration_MC50.c: 614:         };sm_MenuConfiguration_MC50.c: 615:         b
      +                          reak;
  6832  0048BE  D03B               	goto	l21011
  6833  0048C0                     l21005:
  6834                           
  6835                           ; BSR set to: 1
  6836                           ;sm_MenuConfiguration_MC50.c: 617:         {;sm_MenuConfiguration_MC50.c: 621:          
      +                             menu_st.menuList[0].value_display1=dL;
  6837  0048C0  0E12               	movlw	18
  6838  0048C2  6F51               	movwf	_menu_st& (0+255),b
  6839                           
  6840                           ;sm_MenuConfiguration_MC50.c: 622:             menu_st.menuList[0].value_display2=dE;
  6841  0048C4  0E0E               	movlw	14
  6842  0048C6  6F52               	movwf	(_menu_st+1)& (0+255),b
  6843                           
  6844                           ;sm_MenuConfiguration_MC50.c: 623:             menu_st.menuList[1].value_display1=dr;
  6845  0048C8  0E14               	movlw	20
  6846  0048CA  6F53               	movwf	(_menu_st+2)& (0+255),b
  6847                           
  6848                           ;sm_MenuConfiguration_MC50.c: 624:             menu_st.menuList[1].value_display2=dt;
  6849  0048CC  0E15               	movlw	21
  6850  0048CE                     L38:
  6851  0048CE  6F54               	movwf	(_menu_st+3)& (0+255),b
  6852                           
  6853                           ;sm_MenuConfiguration_MC50.c: 626:         };sm_MenuConfiguration_MC50.c: 627:         b
      +                          reak;
  6854  0048D0  D032               	goto	l21011
  6855  0048D2                     l21009:
  6856                           
  6857                           ; BSR set to: 1
  6858  0048D2  5022               	movf	load_New_Menu@Menu^0,w,c
  6859  0048D4  6E20               	movwf	??_load_New_Menu^0,c
  6860  0048D6  6A21               	clrf	(??_load_New_Menu+1)^0,c
  6861                           
  6862                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6863                           ; Switch size 1, requested type "simple"
  6864                           ; Number of cases is 1, Range of values is 0 to 0
  6865                           ; switch strategies available:
  6866                           ; Name         Instructions Cycles
  6867                           ; simple_byte            4     3 (average)
  6868                           ;	Chosen strategy is simple_byte
  6869  0048D8  5021               	movf	(??_load_New_Menu+1)^0,w,c
  6870  0048DA  0A00               	xorlw	0	; case 0
  6871  0048DC  A4D8               	btfss	status,2,c
  6872  0048DE  D02B               	goto	l21011
  6873                           
  6874                           ; BSR set to: 1
  6875                           ; Switch size 1, requested type "simple"
  6876                           ; Number of cases is 14, Range of values is 0 to 13
  6877                           ; switch strategies available:
  6878                           ; Name         Instructions Cycles
  6879                           ; simple_byte           43    22 (average)
  6880                           ;	Chosen strategy is simple_byte
  6881  0048E0  5020               	movf	??_load_New_Menu^0,w,c
  6882  0048E2  0A00               	xorlw	0	; case 0
  6883  0048E4  B4D8               	btfsc	status,2,c
  6884  0048E6  D6FF               	goto	l20959
  6885  0048E8  0A01               	xorlw	1	; case 1
  6886  0048EA  B4D8               	btfsc	status,2,c
  6887  0048EC  D71D               	goto	l20971
  6888  0048EE  0A03               	xorlw	3	; case 2
  6889  0048F0  B4D8               	btfsc	status,2,c
  6890  0048F2  D7E6               	goto	l21005
  6891  0048F4  0A01               	xorlw	1	; case 3
  6892  0048F6  B4D8               	btfsc	status,2,c
  6893  0048F8  D7D6               	goto	l21003
  6894  0048FA  0A07               	xorlw	7	; case 4
  6895  0048FC  B4D8               	btfsc	status,2,c
  6896  0048FE  D735               	goto	l20983
  6897  004900  0A01               	xorlw	1	; case 5
  6898  004902  B4D8               	btfsc	status,2,c
  6899  004904  D748               	goto	l20985
  6900  004906  0A03               	xorlw	3	; case 6
  6901  004908  B4D8               	btfsc	status,2,c
  6902  00490A  D753               	goto	l20987
  6903  00490C  0A01               	xorlw	1	; case 7
  6904  00490E  B4D8               	btfsc	status,2,c
  6905  004910  D762               	goto	l20989
  6906  004912  0A0F               	xorlw	15	; case 8
  6907  004914  B4D8               	btfsc	status,2,c
  6908  004916  D76D               	goto	l20991
  6909  004918  0A01               	xorlw	1	; case 9
  6910  00491A  B4D8               	btfsc	status,2,c
  6911  00491C  D778               	goto	l20993
  6912  00491E  0A03               	xorlw	3	; case 10
  6913  004920  B4D8               	btfsc	status,2,c
  6914  004922  D78C               	goto	l20995
  6915  004924  0A01               	xorlw	1	; case 11
  6916  004926  B4D8               	btfsc	status,2,c
  6917  004928  D797               	goto	l20997
  6918  00492A  0A07               	xorlw	7	; case 12
  6919  00492C  B4D8               	btfsc	status,2,c
  6920  00492E  D7A2               	goto	l20999
  6921  004930  0A01               	xorlw	1	; case 13
  6922  004932  B4D8               	btfsc	status,2,c
  6923  004934  D7AB               	goto	l21001
  6924  004936                     l21011:
  6925                           
  6926                           ;sm_MenuConfiguration_MC50.c: 632:     if(menu_st.parameterSelected>=menu_st.menuSize)
  6927  004936  0101               	movlb	1	; () banked
  6928  004938  5167               	movf	(_menu_st+22)& (0+255),w,b
  6929  00493A  5D68               	subwf	(_menu_st+23)& (0+255),w,b
  6930  00493C  A0D8               	btfss	status,0,c
  6931  00493E  D002               	goto	l21015
  6932                           
  6933                           ; BSR set to: 1
  6934                           ;sm_MenuConfiguration_MC50.c: 633:     {;sm_MenuConfiguration_MC50.c: 634:         menu_
      +                          st.parameterSelected=0;
  6935  004940  0E00               	movlw	0
  6936  004942  6F68               	movwf	(_menu_st+23)& (0+255),b
  6937  004944                     l21015:
  6938                           
  6939                           ; BSR set to: 1
  6940                           ;sm_MenuConfiguration_MC50.c: 637:     if(Menu==Del_Menu)
  6941  004944  0E0D               	movlw	13
  6942  004946  1822               	xorwf	load_New_Menu@Menu^0,w,c
  6943  004948  A4D8               	btfss	status,2,c
  6944  00494A  D01A               	goto	l21019
  6945                           
  6946                           ; BSR set to: 1
  6947                           ;sm_MenuConfiguration_MC50.c: 638:     {;sm_MenuConfiguration_MC50.c: 639:         SetSe
      +                          gmentValueIntermitentMain(menu_st.menuList[ menu_st.parameterSelected].value_display1, m
      +                          enu_st.menuList[ menu_st.parameterSelected].value_display2,( 500/50));
  6948  00494C  5168               	movf	(_menu_st+23)& (0+255),w,b
  6949  00494E  0D02               	mullw	2
  6950  004950  0E52               	movlw	low (_menu_st+1)
  6951  004952  24F3               	addwf	243,w,c
  6952  004954  6ED9               	movwf	fsr2l,c
  6953  004956  0E01               	movlw	high (_menu_st+1)
  6954  004958  20F4               	addwfc	prodh,w,c
  6955  00495A  6EDA               	movwf	fsr2h,c
  6956  00495C  50DF               	movf	indf2,w,c
  6957  00495E  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  6958  004960  0E00               	movlw	0
  6959  004962  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  6960  004964  0E0A               	movlw	10
  6961  004966  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  6962  004968  5168               	movf	(_menu_st+23)& (0+255),w,b
  6963  00496A  0D02               	mullw	2
  6964  00496C  0E51               	movlw	low _menu_st
  6965  00496E  24F3               	addwf	243,w,c
  6966  004970  6ED9               	movwf	fsr2l,c
  6967  004972  0E01               	movlw	high _menu_st
  6968  004974  20F4               	addwfc	prodh,w,c
  6969  004976  6EDA               	movwf	fsr2h,c
  6970  004978  50DF               	movf	indf2,w,c
  6971  00497A  EC6E  F04D         	call	_SetSegmentValueIntermitentMain
  6972                           
  6973                           ;sm_MenuConfiguration_MC50.c: 640:     }
  6974  00497E  0012               	return	
  6975  004980                     l21019:
  6976                           
  6977                           ; BSR set to: 1
  6978                           ;sm_MenuConfiguration_MC50.c: 642:     {;sm_MenuConfiguration_MC50.c: 643:         SetSe
      +                          gmentValueMain(menu_st.menuList[ menu_st.parameterSelected].value_display1, menu_st.menu
      +                          List[ menu_st.parameterSelected].value_display2);
  6979  004980  5168               	movf	(_menu_st+23)& (0+255),w,b
  6980  004982  0D02               	mullw	2
  6981  004984  0E52               	movlw	low (_menu_st+1)
  6982  004986  24F3               	addwf	243,w,c
  6983  004988  6ED9               	movwf	fsr2l,c
  6984  00498A  0E01               	movlw	high (_menu_st+1)
  6985  00498C  20F4               	addwfc	prodh,w,c
  6986  00498E  6EDA               	movwf	fsr2h,c
  6987  004990  50DF               	movf	indf2,w,c
  6988  004992  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  6989  004994  5168               	movf	(_menu_st+23)& (0+255),w,b
  6990  004996  0D02               	mullw	2
  6991  004998  0E51               	movlw	low _menu_st
  6992  00499A  24F3               	addwf	243,w,c
  6993  00499C  6ED9               	movwf	fsr2l,c
  6994  00499E  0E01               	movlw	high _menu_st
  6995  0049A0  20F4               	addwfc	prodh,w,c
  6996  0049A2  6EDA               	movwf	fsr2h,c
  6997  0049A4  50DF               	movf	indf2,w,c
  6998  0049A6  ECD3  F04C         	call	_SetSegmentValueMain
  6999  0049AA  0012               	return		;funcret
  7000  0049AC                     __end_of_load_New_Menu:
  7001                           	callstack 0
  7002                           
  7003 ;; *************** function _InitReceiver *****************
  7004 ;; Defined at:
  7005 ;;		line 207 in file "inputs_MC50.c"
  7006 ;; Parameters:    Size  Location     Type
  7007 ;;		None
  7008 ;; Auto vars:     Size  Location     Type
  7009 ;;		None
  7010 ;; Return value:  Size  Location     Type
  7011 ;;                  1    wreg      void 
  7012 ;; Registers used:
  7013 ;;		wreg, status,2
  7014 ;; Tracked objects:
  7015 ;;		On entry : 30/F
  7016 ;;		On exit  : 3F/0
  7017 ;;		Unchanged: 0/0
  7018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7020 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7022 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7023 ;;Total ram usage:        0 bytes
  7024 ;; Hardware stack levels used: 1
  7025 ;; Hardware stack levels required when called: 4
  7026 ;; This function calls:
  7027 ;;		Nothing
  7028 ;; This function is called by:
  7029 ;;		_main
  7030 ;;		_setValueToEdit
  7031 ;; This function uses a non-reentrant model
  7032 ;;
  7033                           
  7034                           	psect	text5
  7035  00998C                     __ptext5:
  7036                           	callstack 0
  7037  00998C                     _InitReceiver:
  7038                           	callstack 23
  7039                           
  7040                           ;inputs_MC50.c: 208:     TMR0IF = 0;
  7041                           
  7042                           ;incstack = 0
  7043  00998C  010E               	movlb	14	; () banked
  7044  00998E  9BCA               	bcf	202,5,b	;volatile
  7045                           
  7046                           ;inputs_MC50.c: 209:     TMR0IE = 1;
  7047  009990  8BC2               	bsf	194,5,b	;volatile
  7048                           
  7049                           ;inputs_MC50.c: 210:     GIE = 1;
  7050  009992  8EF2               	bsf	4082,7,c	;volatile
  7051                           
  7052                           ; BSR set to: 14
  7053                           ;inputs_MC50.c: 211:     RFstate = 0;
  7054  009994  0E00               	movlw	0
  7055  009996  0101               	movlb	1	; () banked
  7056  009998  6F9D               	movwf	_RFstate& (0+255),b
  7057                           
  7058                           ;inputs_MC50.c: 212:     RFFull_12BIT=0;
  7059  00999A  0E00               	movlw	0
  7060  00999C  0100               	movlb	0	; () banked
  7061  00999E  6F8A               	movwf	_RFFull_12BIT& (0+255),b	;volatile
  7062                           
  7063                           ;inputs_MC50.c: 213:     RFFull = 0;
  7064  0099A0  0E00               	movlw	0
  7065  0099A2  6F8B               	movwf	_RFFull& (0+255),b	;volatile
  7066                           
  7067                           ; BSR set to: 0
  7068  0099A4  0012               	return		;funcret
  7069  0099A6                     __end_of_InitReceiver:
  7070                           	callstack 0
  7071                           
  7072 ;; *************** function _controlSelectRemote *****************
  7073 ;; Defined at:
  7074 ;;		line 1098 in file "sm_MenuConfiguration_MC50.c"
  7075 ;; Parameters:    Size  Location     Type
  7076 ;;		None
  7077 ;; Auto vars:     Size  Location     Type
  7078 ;;  typeRemote      1   11[BANK0 ] enum E10392
  7079 ;;  pos             1   10[BANK0 ] unsigned char 
  7080 ;;  tempSerial      4   12[BANK0 ] unsigned long 
  7081 ;;  temp            1   16[BANK0 ] unsigned char 
  7082 ;;  validSerial     1    9[BANK0 ] unsigned char 
  7083 ;; Return value:  Size  Location     Type
  7084 ;;                  1    wreg      void 
  7085 ;; Registers used:
  7086 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7087 ;; Tracked objects:
  7088 ;;		On entry : 3F/1
  7089 ;;		On exit  : 0/0
  7090 ;;		Unchanged: 0/0
  7091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7093 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7094 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7095 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7096 ;;Total ram usage:        9 bytes
  7097 ;; Hardware stack levels used: 1
  7098 ;; Hardware stack levels required when called: 14
  7099 ;; This function calls:
  7100 ;;		_ClearFlag_rfCMD
  7101 ;;		_RemoveSerial
  7102 ;;		_SaveNVM_VarSystem
  7103 ;;		_SetSegmentValue
  7104 ;;		_SetSegmentValueIntermitentMain
  7105 ;;		_SetSegmentValueMain
  7106 ;;		___awdiv
  7107 ;;		___lbmod
  7108 ;;		_cmdMemoryIsEmpty
  7109 ;;		_getSerialCmd
  7110 ;;		_getTypeRemote
  7111 ;;		_saveNewSerial
  7112 ;;		_sm_send_event
  7113 ;;		_validateRemoteSerialNumber
  7114 ;; This function is called by:
  7115 ;;		_sm_execute_menuConfiguration
  7116 ;; This function uses a non-reentrant model
  7117 ;;
  7118                           
  7119                           	psect	text6
  7120  003C88                     __ptext6:
  7121                           	callstack 0
  7122  003C88                     _controlSelectRemote:
  7123                           	callstack 14
  7124                           
  7125                           ; BSR set to: 1
  7126                           ;sm_MenuConfiguration_MC50.c: 1099:     unsigned long tempSerial;;sm_MenuConfiguration_M
      +                          C50.c: 1100:     char temp=getSerialCmd(&tempSerial);
  7127                           
  7128                           ; BSR set to: 0
  7129                           ;incstack = 0
  7130  003C88  0EE4               	movlw	low controlSelectRemote@tempSerial
  7131  003C8A  6E1B               	movwf	getSerialCmd@serial^0,c
  7132  003C8C  EC09  F048         	call	_getSerialCmd	;wreg free
  7133  003C90  0100               	movlb	0	; () banked
  7134  003C92  6FE8               	movwf	controlSelectRemote@temp& (0+255),b
  7135                           
  7136                           ; BSR set to: 0
  7137                           ;sm_MenuConfiguration_MC50.c: 1101:     char validSerial;;sm_MenuConfiguration_MC50.c: 1
      +                          102:     if(ts_system.timeoutMenu<=0 || button_struct.current==0x00)
  7138  003C94  0101               	movlb	1	; () banked
  7139  003C96  BFAE               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  7140  003C98  D008               	goto	u25380
  7141  003C9A  51AE               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  7142  003C9C  E103               	bnz	u25370
  7143  003C9E  05AD               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  7144  003CA0  A0D8               	btfss	status,0,c
  7145  003CA2  D003               	goto	u25380
  7146  003CA4                     u25370:
  7147                           
  7148                           ; BSR set to: 1
  7149  003CA4  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  7150  003CA6  A4D8               	btfss	status,2,c
  7151  003CA8  D028               	goto	l22219
  7152  003CAA                     u25380:
  7153                           
  7154                           ; BSR set to: 1
  7155                           ;sm_MenuConfiguration_MC50.c: 1103:     {;sm_MenuConfiguration_MC50.c: 1104:         sm_
      +                          send_event(&main_stateMachine, ev_goto_StandBy);
  7156  003CAA  0EF2               	movlw	low _main_stateMachine
  7157  003CAC  6E12               	movwf	sm_send_event@psm^0,c
  7158  003CAE  0E01               	movlw	high _main_stateMachine
  7159  003CB0  6E13               	movwf	(sm_send_event@psm+1)^0,c
  7160  003CB2  0E00               	movlw	0
  7161  003CB4  6E15               	movwf	(sm_send_event@event+1)^0,c
  7162  003CB6  0E07               	movlw	7
  7163  003CB8  6E14               	movwf	sm_send_event@event^0,c
  7164  003CBA  ECD5  F045         	call	_sm_send_event	;wreg free
  7165                           
  7166                           ;sm_MenuConfiguration_MC50.c: 1105:         sm_send_event(&menuConfiguration_stateMachin
      +                          e, ev_CancelEdition);
  7167  003CBE  0EBB               	movlw	low _menuConfiguration_stateMachine
  7168  003CC0  6E12               	movwf	sm_send_event@psm^0,c
  7169  003CC2  0E02               	movlw	high _menuConfiguration_stateMachine
  7170  003CC4  6E13               	movwf	(sm_send_event@psm+1)^0,c
  7171  003CC6  0E00               	movlw	0
  7172  003CC8  6E15               	movwf	(sm_send_event@event+1)^0,c
  7173  003CCA  0E03               	movlw	3
  7174  003CCC  6E14               	movwf	sm_send_event@event^0,c
  7175  003CCE  ECD5  F045         	call	_sm_send_event	;wreg free
  7176                           
  7177                           ;sm_MenuConfiguration_MC50.c: 1106:         var_sys.DistanceProgrammingActive=NO;
  7178  003CD2  0E00               	movlw	0
  7179  003CD4  0101               	movlb	1	; () banked
  7180  003CD6  6F40               	movwf	(_var_sys+64)& (0+255),b	;volatile
  7181                           
  7182                           ; BSR set to: 1
  7183                           ;sm_MenuConfiguration_MC50.c: 1107:         var_sys.ProgrammingDistanceIs=NoCMD;
  7184  003CD8  0E00               	movlw	0
  7185  003CDA  6F3B               	movwf	(_var_sys+59)& (0+255),b	;volatile
  7186                           
  7187                           ; BSR set to: 1
  7188                           ;sm_MenuConfiguration_MC50.c: 1108:         SetSegmentValueMain(dMinus,dMinus);
  7189  003CDC  0E18               	movlw	24
  7190  003CDE  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  7191  003CE0  0E18               	movlw	24
  7192  003CE2  ECD3  F04C         	call	_SetSegmentValueMain
  7193                           
  7194                           ; BSR set to: 0
  7195                           ;sm_MenuConfiguration_MC50.c: 1109:         ClearFlag_rfCMD();
  7196  003CE6  EC26  F04E         	call	_ClearFlag_rfCMD	;wreg free
  7197                           
  7198                           ;sm_MenuConfiguration_MC50.c: 1110:         button_struct.processed=1;
  7199  003CEA  0E01               	movlw	1
  7200  003CEC  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  7201                           
  7202                           ;sm_MenuConfiguration_MC50.c: 1111:         ts_system.timeoutMenu = 0;
  7203  003CEE  0E00               	movlw	0
  7204  003CF0  0101               	movlb	1	; () banked
  7205  003CF2  6FAE               	movwf	(_ts_system+15)& (0+255),b	;volatile
  7206  003CF4  0E00               	movlw	0
  7207  003CF6  6FAD               	movwf	(_ts_system+14)& (0+255),b	;volatile
  7208                           
  7209                           ;sm_MenuConfiguration_MC50.c: 1113:     }
  7210  003CF8  0012               	return	
  7211  003CFA                     l22219:
  7212                           
  7213                           ; BSR set to: 1
  7214  003CFA  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  7215  003CFC  A4D8               	btfss	status,2,c
  7216  003CFE  D05B               	goto	l22241
  7217                           
  7218                           ; BSR set to: 1
  7219  003D00  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  7220  003D02  B4D8               	btfsc	status,2,c
  7221  003D04  D058               	goto	l22241
  7222                           
  7223                           ; BSR set to: 1
  7224                           ;sm_MenuConfiguration_MC50.c: 1115:     {;sm_MenuConfiguration_MC50.c: 1116:         ts_
      +                          system.timeoutMenu=((1000/50)*5) ;
  7225  003D06  0E00               	movlw	0
  7226  003D08  6FAE               	movwf	(_ts_system+15)& (0+255),b	;volatile
  7227  003D0A  0E64               	movlw	100
  7228  003D0C  6FAD               	movwf	(_ts_system+14)& (0+255),b	;volatile
  7229                           
  7230                           ; BSR set to: 1
  7231                           ;sm_MenuConfiguration_MC50.c: 1117:         if(edit_Param.tempValue<=edit_Param.Min)
  7232  003D0E  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7233  003D10  5C4B               	subwf	(_edit_Param+5)^0,w,c	;volatile
  7234  003D12  A0D8               	btfss	status,0,c
  7235  003D14  D003               	goto	l22229
  7236                           
  7237                           ; BSR set to: 1
  7238                           ;sm_MenuConfiguration_MC50.c: 1118:         {;sm_MenuConfiguration_MC50.c: 1119:        
      +                               edit_Param.tempValue=edit_Param.Max;
  7239  003D16  C04A  F049         	movff	_edit_Param+4,_edit_Param+3	;volatile
  7240                           
  7241                           ;sm_MenuConfiguration_MC50.c: 1120:         }
  7242  003D1A  D001               	goto	l22231
  7243  003D1C                     l22229:
  7244                           
  7245                           ; BSR set to: 1
  7246                           ;sm_MenuConfiguration_MC50.c: 1122:         {;sm_MenuConfiguration_MC50.c: 1123:        
      +                               edit_Param.tempValue--;
  7247  003D1C  0649               	decf	(_edit_Param+3)^0,f,c	;volatile
  7248  003D1E                     l22231:
  7249                           
  7250                           ; BSR set to: 1
  7251                           ;sm_MenuConfiguration_MC50.c: 1125:         if(cmdMemoryIsEmpty(menu_st.parameterSelecte
      +                          d,edit_Param.tempValue)==1 || edit_Param.tempValue==edit_Param.Max)
  7252  003D1E  C049  F02E         	movff	_edit_Param+3,cmdMemoryIsEmpty@position	;volatile
  7253  003D22  5168               	movf	(_menu_st+23)& (0+255),w,b
  7254  003D24  EC2C  F03F         	call	_cmdMemoryIsEmpty
  7255  003D28  06E8               	decf	wreg,f,c
  7256  003D2A  B4D8               	btfsc	status,2,c
  7257  003D2C  D004               	goto	u25430
  7258  003D2E  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  7259  003D30  1849               	xorwf	(_edit_Param+3)^0,w,c	;volatile
  7260  003D32  A4D8               	btfss	status,2,c
  7261  003D34  D021               	goto	l22237
  7262  003D36                     u25430:
  7263                           
  7264                           ;sm_MenuConfiguration_MC50.c: 1126:         {;sm_MenuConfiguration_MC50.c: 1127:        
      +                               SetSegmentValueIntermitentMain((edit_Param.tempValue-edit_Param.tempValue%10)/10, e
      +                          dit_Param.tempValue%10,(1000/50));
  7265  003D36  0E0A               	movlw	10
  7266  003D38  6E10               	movwf	___lbmod@divisor^0,c
  7267  003D3A  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7268  003D3C  EC9B  F04B         	call	___lbmod
  7269  003D40  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  7270  003D42  0E00               	movlw	0
  7271  003D44  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  7272  003D46  0E14               	movlw	20
  7273  003D48  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  7274  003D4A  0E0A               	movlw	10
  7275  003D4C  6E10               	movwf	___lbmod@divisor^0,c
  7276  003D4E  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7277  003D50  EC9B  F04B         	call	___lbmod
  7278  003D54  0100               	movlb	0	; () banked
  7279  003D56  6FE0               	movwf	??_controlSelectRemote& (0+255),b
  7280  003D58  51E0               	movf	??_controlSelectRemote& (0+255),w,b
  7281  003D5A  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  7282  003D5C  6E14               	movwf	___awdiv@dividend^0,c
  7283  003D5E  6A15               	clrf	(___awdiv@dividend+1)^0,c
  7284  003D60  A0D8               	btfss	status,0,c
  7285  003D62  0615               	decf	(___awdiv@dividend+1)^0,f,c
  7286  003D64  0E00               	movlw	0
  7287  003D66  6E17               	movwf	(___awdiv@divisor+1)^0,c
  7288  003D68  0E0A               	movlw	10
  7289  003D6A  6E16               	movwf	___awdiv@divisor^0,c
  7290  003D6C  EC16  F041         	call	___awdiv	;wreg free
  7291  003D70  5014               	movf	?___awdiv^0,w,c
  7292  003D72  EC6E  F04D         	call	_SetSegmentValueIntermitentMain
  7293                           
  7294                           ;sm_MenuConfiguration_MC50.c: 1128:         }
  7295  003D76  D01C               	goto	l22239
  7296  003D78                     l22237:
  7297                           
  7298                           ;sm_MenuConfiguration_MC50.c: 1130:         {;sm_MenuConfiguration_MC50.c: 1131:        
      +                               SetSegmentValueMain((edit_Param.tempValue-edit_Param.tempValue%10)/10, edit_Param.t
      +                          empValue%10);
  7299  003D78  0E0A               	movlw	10
  7300  003D7A  6E10               	movwf	___lbmod@divisor^0,c
  7301  003D7C  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7302  003D7E  EC9B  F04B         	call	___lbmod
  7303  003D82  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  7304  003D84  0E0A               	movlw	10
  7305  003D86  6E10               	movwf	___lbmod@divisor^0,c
  7306  003D88  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7307  003D8A  EC9B  F04B         	call	___lbmod
  7308  003D8E  0100               	movlb	0	; () banked
  7309  003D90  6FE0               	movwf	??_controlSelectRemote& (0+255),b
  7310  003D92  51E0               	movf	??_controlSelectRemote& (0+255),w,b
  7311  003D94  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  7312  003D96  6E14               	movwf	___awdiv@dividend^0,c
  7313  003D98  6A15               	clrf	(___awdiv@dividend+1)^0,c
  7314  003D9A  A0D8               	btfss	status,0,c
  7315  003D9C  0615               	decf	(___awdiv@dividend+1)^0,f,c
  7316  003D9E  0E00               	movlw	0
  7317  003DA0  6E17               	movwf	(___awdiv@divisor+1)^0,c
  7318  003DA2  0E0A               	movlw	10
  7319  003DA4  6E16               	movwf	___awdiv@divisor^0,c
  7320  003DA6  EC16  F041         	call	___awdiv	;wreg free
  7321  003DAA  5014               	movf	?___awdiv^0,w,c
  7322  003DAC  ECD3  F04C         	call	_SetSegmentValueMain
  7323  003DB0                     l22239:
  7324                           
  7325                           ;sm_MenuConfiguration_MC50.c: 1133:         button_struct.processed=1;
  7326  003DB0  0E01               	movlw	1
  7327  003DB2  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  7328                           
  7329                           ;sm_MenuConfiguration_MC50.c: 1134:     }
  7330  003DB4  0012               	return	
  7331  003DB6                     l22241:
  7332                           
  7333                           ; BSR set to: 1
  7334  003DB6  0E17               	movlw	23
  7335  003DB8  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  7336  003DBA  A4D8               	btfss	status,2,c
  7337  003DBC  D057               	goto	l22263
  7338                           
  7339                           ; BSR set to: 1
  7340  003DBE  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  7341  003DC0  B4D8               	btfsc	status,2,c
  7342  003DC2  D054               	goto	l22263
  7343                           
  7344                           ; BSR set to: 1
  7345                           ;sm_MenuConfiguration_MC50.c: 1136:     {;sm_MenuConfiguration_MC50.c: 1137:         ts_
      +                          system.timeoutMenu=((1000/50)*5) ;
  7346  003DC4  0E00               	movlw	0
  7347  003DC6  6FAE               	movwf	(_ts_system+15)& (0+255),b	;volatile
  7348  003DC8  0E64               	movlw	100
  7349  003DCA  6FAD               	movwf	(_ts_system+14)& (0+255),b	;volatile
  7350                           
  7351                           ; BSR set to: 1
  7352                           ;sm_MenuConfiguration_MC50.c: 1138:         edit_Param.tempValue++;
  7353  003DCC  2A49               	incf	(_edit_Param+3)^0,f,c	;volatile
  7354                           
  7355                           ; BSR set to: 1
  7356                           ;sm_MenuConfiguration_MC50.c: 1139:         if(edit_Param.tempValue>edit_Param.Max)
  7357  003DCE  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7358  003DD0  5C4A               	subwf	(_edit_Param+4)^0,w,c	;volatile
  7359  003DD2  A0D8               	btfss	status,0,c
  7360                           
  7361                           ; BSR set to: 1
  7362                           ;sm_MenuConfiguration_MC50.c: 1140:         {;sm_MenuConfiguration_MC50.c: 1141:        
      +                                edit_Param.tempValue=edit_Param.Min;
  7363  003DD4  C04B  F049         	movff	_edit_Param+5,_edit_Param+3	;volatile
  7364                           
  7365                           ; BSR set to: 1
  7366                           ;sm_MenuConfiguration_MC50.c: 1143:         if(cmdMemoryIsEmpty(menu_st.parameterSelecte
      +                          d,edit_Param.tempValue)==1|| edit_Param.tempValue==edit_Param.Max)
  7367  003DD8  C049  F02E         	movff	_edit_Param+3,cmdMemoryIsEmpty@position	;volatile
  7368  003DDC  5168               	movf	(_menu_st+23)& (0+255),w,b
  7369  003DDE  EC2C  F03F         	call	_cmdMemoryIsEmpty
  7370  003DE2  06E8               	decf	wreg,f,c
  7371  003DE4  B4D8               	btfsc	status,2,c
  7372  003DE6  D004               	goto	u25480
  7373  003DE8  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  7374  003DEA  1849               	xorwf	(_edit_Param+3)^0,w,c	;volatile
  7375  003DEC  A4D8               	btfss	status,2,c
  7376  003DEE  D021               	goto	l22259
  7377  003DF0                     u25480:
  7378                           
  7379                           ;sm_MenuConfiguration_MC50.c: 1144:         {;sm_MenuConfiguration_MC50.c: 1145:        
      +                               SetSegmentValueIntermitentMain((edit_Param.tempValue-edit_Param.tempValue%10)/10, e
      +                          dit_Param.tempValue%10,(1000/50));
  7380  003DF0  0E0A               	movlw	10
  7381  003DF2  6E10               	movwf	___lbmod@divisor^0,c
  7382  003DF4  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7383  003DF6  EC9B  F04B         	call	___lbmod
  7384  003DFA  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  7385  003DFC  0E00               	movlw	0
  7386  003DFE  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  7387  003E00  0E14               	movlw	20
  7388  003E02  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  7389  003E04  0E0A               	movlw	10
  7390  003E06  6E10               	movwf	___lbmod@divisor^0,c
  7391  003E08  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7392  003E0A  EC9B  F04B         	call	___lbmod
  7393  003E0E  0100               	movlb	0	; () banked
  7394  003E10  6FE0               	movwf	??_controlSelectRemote& (0+255),b
  7395  003E12  51E0               	movf	??_controlSelectRemote& (0+255),w,b
  7396  003E14  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  7397  003E16  6E14               	movwf	___awdiv@dividend^0,c
  7398  003E18  6A15               	clrf	(___awdiv@dividend+1)^0,c
  7399  003E1A  A0D8               	btfss	status,0,c
  7400  003E1C  0615               	decf	(___awdiv@dividend+1)^0,f,c
  7401  003E1E  0E00               	movlw	0
  7402  003E20  6E17               	movwf	(___awdiv@divisor+1)^0,c
  7403  003E22  0E0A               	movlw	10
  7404  003E24  6E16               	movwf	___awdiv@divisor^0,c
  7405  003E26  EC16  F041         	call	___awdiv	;wreg free
  7406  003E2A  5014               	movf	?___awdiv^0,w,c
  7407  003E2C  EC6E  F04D         	call	_SetSegmentValueIntermitentMain
  7408                           
  7409                           ;sm_MenuConfiguration_MC50.c: 1146:         }
  7410  003E30  D7BF               	goto	l22239
  7411  003E32                     l22259:
  7412                           
  7413                           ;sm_MenuConfiguration_MC50.c: 1148:         {;sm_MenuConfiguration_MC50.c: 1149:        
      +                               SetSegmentValue((edit_Param.tempValue-edit_Param.tempValue%10)/10, edit_Param.tempV
      +                          alue%10);
  7414  003E32  0E0A               	movlw	10
  7415  003E34  6E10               	movwf	___lbmod@divisor^0,c
  7416  003E36  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7417  003E38  EC9B  F04B         	call	___lbmod
  7418  003E3C  6E1C               	movwf	SetSegmentValue@d2^0,c
  7419  003E3E  0E0A               	movlw	10
  7420  003E40  6E10               	movwf	___lbmod@divisor^0,c
  7421  003E42  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7422  003E44  EC9B  F04B         	call	___lbmod
  7423  003E48  0100               	movlb	0	; () banked
  7424  003E4A  6FE0               	movwf	??_controlSelectRemote& (0+255),b
  7425  003E4C  51E0               	movf	??_controlSelectRemote& (0+255),w,b
  7426  003E4E  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  7427  003E50  6E14               	movwf	___awdiv@dividend^0,c
  7428  003E52  6A15               	clrf	(___awdiv@dividend+1)^0,c
  7429  003E54  A0D8               	btfss	status,0,c
  7430  003E56  0615               	decf	(___awdiv@dividend+1)^0,f,c
  7431  003E58  0E00               	movlw	0
  7432  003E5A  6E17               	movwf	(___awdiv@divisor+1)^0,c
  7433  003E5C  0E0A               	movlw	10
  7434  003E5E  6E16               	movwf	___awdiv@divisor^0,c
  7435  003E60  EC16  F041         	call	___awdiv	;wreg free
  7436  003E64  5014               	movf	?___awdiv^0,w,c
  7437  003E66  ECED  F04C         	call	_SetSegmentValue
  7438  003E6A  D7A2               	goto	l22239
  7439  003E6C                     l22263:
  7440                           
  7441                           ; BSR set to: 1
  7442  003E6C  0E63               	movlw	99
  7443  003E6E  644A               	cpfsgt	(_edit_Param+4)^0,c	;volatile
  7444  003E70  D01A               	goto	l22273
  7445                           
  7446                           ; BSR set to: 1
  7447  003E72  0E63               	movlw	99
  7448  003E74  6449               	cpfsgt	(_edit_Param+3)^0,c	;volatile
  7449  003E76  D017               	goto	l22273
  7450                           
  7451                           ; BSR set to: 1
  7452                           ;sm_MenuConfiguration_MC50.c: 1154:     {;sm_MenuConfiguration_MC50.c: 1155:         if(
      +                          menu_st.parameterSelected==0)
  7453  003E78  5168               	movf	(_menu_st+23)& (0+255),w,b
  7454  003E7A  A4D8               	btfss	status,2,c
  7455  003E7C  D00A               	goto	l22271
  7456                           
  7457                           ; BSR set to: 1
  7458                           ;sm_MenuConfiguration_MC50.c: 1156:         {;sm_MenuConfiguration_MC50.c: 1157:        
      +                               SetSegmentValueIntermitentMain(dL, dU,( 500/50));
  7459  003E7E  0E13               	movlw	19
  7460  003E80  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  7461  003E82  0E00               	movlw	0
  7462  003E84  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  7463  003E86  0E0A               	movlw	10
  7464  003E88  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  7465  003E8A  0E12               	movlw	18
  7466  003E8C  EC6E  F04D         	call	_SetSegmentValueIntermitentMain
  7467                           
  7468                           ;sm_MenuConfiguration_MC50.c: 1158:         }
  7469  003E90  0012               	return	
  7470  003E92                     l22271:
  7471                           
  7472                           ; BSR set to: 1
  7473                           ;sm_MenuConfiguration_MC50.c: 1160:         {;sm_MenuConfiguration_MC50.c: 1161:        
      +                               SetSegmentValueIntermitentMain(dL, dP,( 500/50));
  7474  003E92  0E10               	movlw	16
  7475  003E94  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  7476  003E96  0E00               	movlw	0
  7477  003E98  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  7478  003E9A  0E0A               	movlw	10
  7479  003E9C  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  7480  003E9E  0E12               	movlw	18
  7481  003EA0  EC6E  F04D         	call	_SetSegmentValueIntermitentMain
  7482  003EA4  0012               	return	
  7483  003EA6                     l22273:
  7484                           
  7485                           ; BSR set to: 1
  7486  003EA6  0100               	movlb	0	; () banked
  7487  003EA8  29E8               	incf	controlSelectRemote@temp& (0+255),w,b
  7488  003EAA  B4D8               	btfsc	status,2,c
  7489  003EAC  D097               	goto	l22331
  7490                           
  7491                           ; BSR set to: 0
  7492  003EAE  51E8               	movf	controlSelectRemote@temp& (0+255),w,b
  7493  003EB0  B4D8               	btfsc	status,2,c
  7494  003EB2  D00F               	goto	u25570
  7495                           
  7496                           ; BSR set to: 0
  7497  003EB4  05E8               	decf	controlSelectRemote@temp& (0+255),w,b
  7498  003EB6  B4D8               	btfsc	status,2,c
  7499  003EB8  D00C               	goto	u25570
  7500                           
  7501                           ; BSR set to: 0
  7502  003EBA  0E02               	movlw	2
  7503  003EBC  19E8               	xorwf	controlSelectRemote@temp& (0+255),w,b
  7504  003EBE  B4D8               	btfsc	status,2,c
  7505  003EC0  D008               	goto	u25570
  7506                           
  7507                           ; BSR set to: 0
  7508  003EC2  0E04               	movlw	4
  7509  003EC4  19E8               	xorwf	controlSelectRemote@temp& (0+255),w,b
  7510  003EC6  B4D8               	btfsc	status,2,c
  7511  003EC8  D004               	goto	u25570
  7512                           
  7513                           ; BSR set to: 0
  7514  003ECA  0E08               	movlw	8
  7515  003ECC  19E8               	xorwf	controlSelectRemote@temp& (0+255),w,b
  7516  003ECE  A4D8               	btfss	status,2,c
  7517  003ED0  D085               	goto	l22331
  7518  003ED2                     u25570:
  7519                           
  7520                           ; BSR set to: 0
  7521                           ;sm_MenuConfiguration_MC50.c: 1165:     {;sm_MenuConfiguration_MC50.c: 1166:         cha
      +                          r pos;;sm_MenuConfiguration_MC50.c: 1167:         validSerial=validateRemoteSerialNumber
      +                          (tempSerial,NO,&pos);
  7522  003ED2  C0E4  F02E         	movff	controlSelectRemote@tempSerial,validateRemoteSerialNumber@serial
  7523  003ED6  C0E5  F02F         	movff	controlSelectRemote@tempSerial+1,validateRemoteSerialNumber@serial+1
  7524  003EDA  C0E6  F030         	movff	controlSelectRemote@tempSerial+2,validateRemoteSerialNumber@serial+2
  7525  003EDE  C0E7  F031         	movff	controlSelectRemote@tempSerial+3,validateRemoteSerialNumber@serial+3
  7526  003EE2  0E00               	movlw	0
  7527  003EE4  6E32               	movwf	validateRemoteSerialNumber@VerifyOnlySerial^0,c
  7528  003EE6  0EE2               	movlw	low controlSelectRemote@pos
  7529  003EE8  6E33               	movwf	validateRemoteSerialNumber@position^0,c
  7530  003EEA  6A34               	clrf	(validateRemoteSerialNumber@position+1)^0,c
  7531  003EEC  EC5A  F02F         	call	_validateRemoteSerialNumber	;wreg free
  7532  003EF0  6FE1               	movwf	controlSelectRemote@validSerial& (0+255),b
  7533                           
  7534                           ; BSR set to: 0
  7535                           ;sm_MenuConfiguration_MC50.c: 1169:         TypeRemote_st typeRemote = getTypeRemote();
  7536  003EF2  EC23  F04E         	call	_getTypeRemote	;wreg free
  7537  003EF6  0100               	movlb	0	; () banked
  7538  003EF8  6FE3               	movwf	controlSelectRemote@typeRemote& (0+255),b
  7539                           
  7540                           ; BSR set to: 0
  7541                           ;sm_MenuConfiguration_MC50.c: 1170:         if(validSerial==0&&(typeRemote==Keeloq_Rolli
      +                          ngCode || (var_sys_NVM.OnlyRollingCode==NO)))
  7542  003EFA  51E1               	movf	controlSelectRemote@validSerial& (0+255),w,b
  7543  003EFC  A4D8               	btfss	status,2,c
  7544  003EFE  0012               	return	
  7545                           
  7546                           ; BSR set to: 0
  7547  003F00  51E3               	movf	controlSelectRemote@typeRemote& (0+255),w,b
  7548  003F02  B4D8               	btfsc	status,2,c
  7549  003F04  D003               	goto	u25600
  7550                           
  7551                           ; BSR set to: 0
  7552  003F06  51BE               	movf	(_var_sys_NVM+38)& (0+255),w,b	;volatile
  7553  003F08  A4D8               	btfss	status,2,c
  7554  003F0A  0012               	return	
  7555  003F0C                     u25600:
  7556                           
  7557                           ; BSR set to: 0
  7558                           ;sm_MenuConfiguration_MC50.c: 1171:         {;sm_MenuConfiguration_MC50.c: 1172:        
      +                               saveNewSerial(menu_st.parameterSelected,tempSerial,edit_Param.tempValue);
  7559  003F0C  C0E4  F0D8         	movff	controlSelectRemote@tempSerial,saveNewSerial@tempSerial
  7560  003F10  C0E5  F0D9         	movff	controlSelectRemote@tempSerial+1,saveNewSerial@tempSerial+1
  7561  003F14  C0E6  F0DA         	movff	controlSelectRemote@tempSerial+2,saveNewSerial@tempSerial+2
  7562  003F18  C0E7  F0DB         	movff	controlSelectRemote@tempSerial+3,saveNewSerial@tempSerial+3
  7563  003F1C  C049  F0DC         	movff	_edit_Param+3,saveNewSerial@position	;volatile
  7564  003F20  0101               	movlb	1	; () banked
  7565  003F22  5168               	movf	(_menu_st+23)& (0+255),w,b
  7566  003F24  ECFA  F043         	call	_saveNewSerial
  7567                           
  7568                           ;sm_MenuConfiguration_MC50.c: 1173:             if(edit_Param.tempValue==var_sys_NVM.pos
      +                          itionRemotesFull&&var_sys_NVM.positionRemotesFull<99)
  7569  003F28  0100               	movlb	0	; () banked
  7570  003F2A  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
  7571  003F2C  1849               	xorwf	(_edit_Param+3)^0,w,c	;volatile
  7572  003F2E  A4D8               	btfss	status,2,c
  7573  003F30  D004               	goto	l22303
  7574                           
  7575                           ; BSR set to: 0
  7576  003F32  0E63               	movlw	99
  7577  003F34  61B8               	cpfslt	(_var_sys_NVM+32)& (0+255),b	;volatile
  7578  003F36  D001               	goto	l22303
  7579                           
  7580                           ; BSR set to: 0
  7581                           ;sm_MenuConfiguration_MC50.c: 1174:                 var_sys_NVM.positionRemotesFull++;
  7582  003F38  2BB8               	incf	(_var_sys_NVM+32)& (0+255),f,b	;volatile
  7583  003F3A                     l22303:
  7584                           
  7585                           ; BSR set to: 0
  7586                           ;sm_MenuConfiguration_MC50.c: 1175:             sm_send_event(&menuConfiguration_stateMa
      +                          chine, ev_addRemotes);
  7587  003F3A  0EBB               	movlw	low _menuConfiguration_stateMachine
  7588  003F3C  6E12               	movwf	sm_send_event@psm^0,c
  7589  003F3E  0E02               	movlw	high _menuConfiguration_stateMachine
  7590  003F40  6E13               	movwf	(sm_send_event@psm+1)^0,c
  7591  003F42  0E00               	movlw	0
  7592  003F44  6E15               	movwf	(sm_send_event@event+1)^0,c
  7593  003F46  0E08               	movlw	8
  7594  003F48  6E14               	movwf	sm_send_event@event^0,c
  7595  003F4A  ECD5  F045         	call	_sm_send_event	;wreg free
  7596                           
  7597                           ;sm_MenuConfiguration_MC50.c: 1176:             var_sys.DistanceProgrammingActive=NO;
  7598  003F4E  0E00               	movlw	0
  7599  003F50  0101               	movlb	1	; () banked
  7600  003F52  6F40               	movwf	(_var_sys+64)& (0+255),b	;volatile
  7601                           
  7602                           ; BSR set to: 1
  7603                           ;sm_MenuConfiguration_MC50.c: 1177:             var_sys.ProgrammingDistanceIs=NoCMD;
  7604  003F54  0E00               	movlw	0
  7605  003F56  6F3B               	movwf	(_var_sys+59)& (0+255),b	;volatile
  7606                           
  7607                           ; BSR set to: 1
  7608                           ;sm_MenuConfiguration_MC50.c: 1178:             ts_system.timeSinalizationDigit=(1000/50
      +                          )*2;
  7609  003F58  0E00               	movlw	0
  7610  003F5A  6FAC               	movwf	(_ts_system+13)& (0+255),b	;volatile
  7611  003F5C  0E28               	movlw	40
  7612  003F5E  6FAB               	movwf	(_ts_system+12)& (0+255),b	;volatile
  7613                           
  7614                           ; BSR set to: 1
  7615                           ;sm_MenuConfiguration_MC50.c: 1179:             SetSegmentValueIntermitentMain((edit_Par
      +                          am.tempValue-edit_Param.tempValue%10)/10, edit_Param.tempValue%10,( 200/50));
  7616  003F60  0E0A               	movlw	10
  7617  003F62  6E10               	movwf	___lbmod@divisor^0,c
  7618  003F64  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7619  003F66  EC9B  F04B         	call	___lbmod
  7620  003F6A  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  7621  003F6C  0E00               	movlw	0
  7622  003F6E  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  7623  003F70  0E04               	movlw	4
  7624  003F72  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  7625  003F74  0E0A               	movlw	10
  7626  003F76  6E10               	movwf	___lbmod@divisor^0,c
  7627  003F78  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7628  003F7A  EC9B  F04B         	call	___lbmod
  7629  003F7E  0100               	movlb	0	; () banked
  7630  003F80  6FE0               	movwf	??_controlSelectRemote& (0+255),b
  7631  003F82  51E0               	movf	??_controlSelectRemote& (0+255),w,b
  7632  003F84  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  7633  003F86  6E14               	movwf	___awdiv@dividend^0,c
  7634  003F88  6A15               	clrf	(___awdiv@dividend+1)^0,c
  7635  003F8A  A0D8               	btfss	status,0,c
  7636  003F8C  0615               	decf	(___awdiv@dividend+1)^0,f,c
  7637  003F8E  0E00               	movlw	0
  7638  003F90  6E17               	movwf	(___awdiv@divisor+1)^0,c
  7639  003F92  0E0A               	movlw	10
  7640  003F94  6E16               	movwf	___awdiv@divisor^0,c
  7641  003F96  EC16  F041         	call	___awdiv	;wreg free
  7642  003F9A  5014               	movf	?___awdiv^0,w,c
  7643  003F9C  EC6E  F04D         	call	_SetSegmentValueIntermitentMain
  7644                           
  7645                           ;sm_MenuConfiguration_MC50.c: 1180:             if(edit_Param.Max==edit_Param.tempValue 
      +                          || edit_Param.Max==0 )
  7646  003FA0  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7647  003FA2  184A               	xorwf	(_edit_Param+4)^0,w,c	;volatile
  7648  003FA4  B4D8               	btfsc	status,2,c
  7649  003FA6  D003               	goto	u25640
  7650  003FA8  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  7651  003FAA  A4D8               	btfss	status,2,c
  7652  003FAC  0012               	return	
  7653  003FAE                     u25640:
  7654                           
  7655                           ;sm_MenuConfiguration_MC50.c: 1181:             {;sm_MenuConfiguration_MC50.c: 1185:    
      +                                       if(var_sys_NVM.positionRemotesFull==0 && var_sys_NVM.positionRemotesFull==0
      +                           && typeRemote==Keeloq_RollingCode)
  7656  003FAE  0100               	movlb	0	; () banked
  7657  003FB0  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
  7658  003FB2  A4D8               	btfss	status,2,c
  7659  003FB4  D008               	goto	l22325
  7660                           
  7661                           ; BSR set to: 0
  7662  003FB6  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
  7663  003FB8  A4D8               	btfss	status,2,c
  7664  003FBA  D005               	goto	l22325
  7665                           
  7666                           ; BSR set to: 0
  7667  003FBC  51E3               	movf	controlSelectRemote@typeRemote& (0+255),w,b
  7668  003FBE  A4D8               	btfss	status,2,c
  7669  003FC0  D002               	goto	l22325
  7670                           
  7671                           ; BSR set to: 0
  7672                           ;sm_MenuConfiguration_MC50.c: 1186:                 {;sm_MenuConfiguration_MC50.c: 1188:
      +                                               var_sys_NVM.OnlyRollingCode=YES;
  7673  003FC2  0E01               	movlw	1
  7674  003FC4  6FBE               	movwf	(_var_sys_NVM+38)& (0+255),b	;volatile
  7675  003FC6                     l22325:
  7676                           
  7677                           ; BSR set to: 0
  7678                           ;sm_MenuConfiguration_MC50.c: 1192:                 edit_Param.tempValue++;
  7679  003FC6  2A49               	incf	(_edit_Param+3)^0,f,c	;volatile
  7680                           
  7681                           ; BSR set to: 0
  7682                           ;sm_MenuConfiguration_MC50.c: 1193:                 edit_Param.Value[0]=edit_Param.tempV
      +                          alue;
  7683  003FC8  C047  FFD9         	movff	_edit_Param+1,fsr2l	;volatile
  7684  003FCC  C048  FFDA         	movff	_edit_Param+2,fsr2h	;volatile
  7685  003FD0  C049  FFDF         	movff	_edit_Param+3,indf2	;volatile
  7686                           
  7687                           ; BSR set to: 0
  7688                           ;sm_MenuConfiguration_MC50.c: 1194:                 SaveNVM_VarSystem(pageMemoryCounters
      +                          );
  7689  003FD4  0E02               	movlw	2
  7690  003FD6  ECE3  F049         	call	_SaveNVM_VarSystem
  7691  003FDA  0012               	return	
  7692  003FDC                     l22331:
  7693                           
  7694                           ; BSR set to: 0
  7695  003FDC  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  7696  003FDE  1849               	xorwf	(_edit_Param+3)^0,w,c	;volatile
  7697  003FE0  B4D8               	btfsc	status,2,c
  7698  003FE2  0012               	return	
  7699                           
  7700                           ; BSR set to: 0
  7701  003FE4  0E27               	movlw	39
  7702  003FE6  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  7703  003FE8  A4D8               	btfss	status,2,c
  7704  003FEA  0012               	return	
  7705                           
  7706                           ; BSR set to: 0
  7707  003FEC  0E27               	movlw	39
  7708  003FEE  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  7709  003FF0  0012               	return	
  7710                           
  7711                           ; BSR set to: 0
  7712                           ;sm_MenuConfiguration_MC50.c: 1201:     {;sm_MenuConfiguration_MC50.c: 1202:         ts_
      +                          system.timeoutMenu=((1000/50)*5) ;
  7713  003FF2  0E00               	movlw	0
  7714  003FF4  0101               	movlb	1	; () banked
  7715  003FF6  6FAE               	movwf	(_ts_system+15)& (0+255),b	;volatile
  7716  003FF8  0E64               	movlw	100
  7717  003FFA  6FAD               	movwf	(_ts_system+14)& (0+255),b	;volatile
  7718                           
  7719                           ; BSR set to: 1
  7720                           ;sm_MenuConfiguration_MC50.c: 1203:         RemoveSerial(menu_st.parameterSelected,edit_
      +                          Param.tempValue);
  7721  003FFC  C049  F03A         	movff	_edit_Param+3,RemoveSerial@position	;volatile
  7722  004000  5168               	movf	(_menu_st+23)& (0+255),w,b
  7723  004002  ECDB  F041         	call	_RemoveSerial
  7724                           
  7725                           ;sm_MenuConfiguration_MC50.c: 1204:         SetSegmentValueIntermitentMain((edit_Param.t
      +                          empValue-edit_Param.tempValue%10)/10, edit_Param.tempValue%10,(1000/50));
  7726  004006  0E0A               	movlw	10
  7727  004008  6E10               	movwf	___lbmod@divisor^0,c
  7728  00400A  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7729  00400C  EC9B  F04B         	call	___lbmod
  7730  004010  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  7731  004012  0E00               	movlw	0
  7732  004014  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  7733  004016  0E14               	movlw	20
  7734  004018  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  7735  00401A  0E0A               	movlw	10
  7736  00401C  6E10               	movwf	___lbmod@divisor^0,c
  7737  00401E  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7738  004020  EC9B  F04B         	call	___lbmod
  7739  004024  0100               	movlb	0	; () banked
  7740  004026  6FE0               	movwf	??_controlSelectRemote& (0+255),b
  7741  004028  51E0               	movf	??_controlSelectRemote& (0+255),w,b
  7742  00402A  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  7743  00402C  6E14               	movwf	___awdiv@dividend^0,c
  7744  00402E  6A15               	clrf	(___awdiv@dividend+1)^0,c
  7745  004030  A0D8               	btfss	status,0,c
  7746  004032  0615               	decf	(___awdiv@dividend+1)^0,f,c
  7747  004034  0E00               	movlw	0
  7748  004036  6E17               	movwf	(___awdiv@divisor+1)^0,c
  7749  004038  0E0A               	movlw	10
  7750  00403A  6E16               	movwf	___awdiv@divisor^0,c
  7751  00403C  EC16  F041         	call	___awdiv	;wreg free
  7752  004040  5014               	movf	?___awdiv^0,w,c
  7753  004042  EC6E  F04D         	call	_SetSegmentValueIntermitentMain
  7754  004046  0012               	return	
  7755  004048                     __end_of_controlSelectRemote:
  7756                           	callstack 0
  7757                           
  7758 ;; *************** function _getTypeRemote *****************
  7759 ;; Defined at:
  7760 ;;		line 459 in file "inputs_MC50.c"
  7761 ;; Parameters:    Size  Location     Type
  7762 ;;		None
  7763 ;; Auto vars:     Size  Location     Type
  7764 ;;		None
  7765 ;; Return value:  Size  Location     Type
  7766 ;;                  1    wreg      enum E10559
  7767 ;; Registers used:
  7768 ;;		wreg, status,2
  7769 ;; Tracked objects:
  7770 ;;		On entry : 3F/0
  7771 ;;		On exit  : 3F/2
  7772 ;;		Unchanged: 0/0
  7773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7777 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7778 ;;Total ram usage:        0 bytes
  7779 ;; Hardware stack levels used: 1
  7780 ;; Hardware stack levels required when called: 4
  7781 ;; This function calls:
  7782 ;;		Nothing
  7783 ;; This function is called by:
  7784 ;;		_controlSelectRemote
  7785 ;; This function uses a non-reentrant model
  7786 ;;
  7787                           
  7788                           	psect	text7
  7789  009C46                     __ptext7:
  7790                           	callstack 0
  7791  009C46                     _getTypeRemote:
  7792                           	callstack 23
  7793                           
  7794                           ; BSR set to: 0
  7795                           ;inputs_MC50.c: 460:     return classic_data.type;
  7796                           
  7797                           ;incstack = 0
  7798  009C46  0102               	movlb	2	; () banked
  7799  009C48  519E               	movf	(_classic_data+14)& (0+255),w,b
  7800                           
  7801                           ; BSR set to: 2
  7802  009C4A  0012               	return		;funcret
  7803  009C4C                     __end_of_getTypeRemote:
  7804                           	callstack 0
  7805                           
  7806 ;; *************** function _getSerialCmd *****************
  7807 ;; Defined at:
  7808 ;;		line 442 in file "inputs_MC50.c"
  7809 ;; Parameters:    Size  Location     Type
  7810 ;;  serial          1   26[COMRAM] PTR unsigned long 
  7811 ;;		 -> controlSelectRemote@tempSerial(4), 
  7812 ;; Auto vars:     Size  Location     Type
  7813 ;;  temp            1   27[COMRAM] char 
  7814 ;; Return value:  Size  Location     Type
  7815 ;;                  1    wreg      char 
  7816 ;; Registers used:
  7817 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7818 ;; Tracked objects:
  7819 ;;		On entry : 3F/1
  7820 ;;		On exit  : 0/0
  7821 ;;		Unchanged: 0/0
  7822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7823 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7824 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7826 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7827 ;;Total ram usage:        2 bytes
  7828 ;; Hardware stack levels used: 1
  7829 ;; Hardware stack levels required when called: 5
  7830 ;; This function calls:
  7831 ;;		_memcpy
  7832 ;; This function is called by:
  7833 ;;		_controlSelectRemote
  7834 ;; This function uses a non-reentrant model
  7835 ;;
  7836                           
  7837                           	psect	text8
  7838  009012                     __ptext8:
  7839                           	callstack 0
  7840  009012                     _getSerialCmd:
  7841                           	callstack 22
  7842                           
  7843                           ; BSR set to: 1
  7844                           ;inputs_MC50.c: 443:     signed char temp=-1;
  7845                           
  7846                           ; BSR set to: 2
  7847                           ;incstack = 0
  7848  009012  681C               	setf	getSerialCmd@temp^0,c
  7849                           
  7850                           ; BSR set to: 1
  7851                           ;inputs_MC50.c: 444:     if(RFFull)
  7852  009014  0100               	movlb	0	; () banked
  7853  009016  518B               	movf	_RFFull& (0+255),w,b	;volatile
  7854  009018  B4D8               	btfsc	status,2,c
  7855  00901A  D020               	goto	l20713
  7856                           
  7857                           ; BSR set to: 0
  7858                           ;inputs_MC50.c: 445:     {;inputs_MC50.c: 446:         if(RFFull_12BIT)
  7859  00901C  518A               	movf	_RFFull_12BIT& (0+255),w,b	;volatile
  7860  00901E  B4D8               	btfsc	status,2,c
  7861  009020  D00E               	goto	l20709
  7862                           
  7863                           ; BSR set to: 0
  7864                           ;inputs_MC50.c: 447:         {;inputs_MC50.c: 448:             memcpy((char*)serial,&cla
      +                          ssic_data.serialnumber,4);
  7865  009022  C01B  F010         	movff	getSerialCmd@serial,memcpy@d1
  7866  009026  6A11               	clrf	(memcpy@d1+1)^0,c
  7867  009028  0E94               	movlw	low (_classic_data+4)
  7868  00902A  6E12               	movwf	memcpy@s1^0,c
  7869  00902C  0E02               	movlw	high (_classic_data+4)
  7870  00902E  6E13               	movwf	(memcpy@s1+1)^0,c
  7871  009030  0E00               	movlw	0
  7872  009032  6E15               	movwf	(memcpy@n+1)^0,c
  7873  009034  0E04               	movlw	4
  7874  009036  6E14               	movwf	memcpy@n^0,c
  7875  009038  ECE5  F048         	call	_memcpy	;wreg free
  7876                           
  7877                           ;inputs_MC50.c: 449:         }
  7878  00903C  D00D               	goto	l20711
  7879  00903E                     l20709:
  7880                           
  7881                           ; BSR set to: 0
  7882                           ;inputs_MC50.c: 451:         {;inputs_MC50.c: 452:             memcpy((char*)serial,(cha
      +                          r*)BufferRF+4,4);
  7883  00903E  C01B  F010         	movff	getSerialCmd@serial,memcpy@d1
  7884  009042  6A11               	clrf	(memcpy@d1+1)^0,c
  7885  009044  0ECA               	movlw	low (_BufferRF+4)
  7886  009046  6E12               	movwf	memcpy@s1^0,c
  7887  009048  0E02               	movlw	high (_BufferRF+4)
  7888  00904A  6E13               	movwf	(memcpy@s1+1)^0,c
  7889  00904C  0E00               	movlw	0
  7890  00904E  6E15               	movwf	(memcpy@n+1)^0,c
  7891  009050  0E04               	movlw	4
  7892  009052  6E14               	movwf	memcpy@n^0,c
  7893  009054  ECE5  F048         	call	_memcpy	;wreg free
  7894  009058                     l20711:
  7895                           
  7896                           ;inputs_MC50.c: 454:         temp=classic_data.fcode1;
  7897  009058  C29C  F01C         	movff	_classic_data+12,getSerialCmd@temp
  7898  00905C                     l20713:
  7899                           
  7900                           ;inputs_MC50.c: 456:     return temp;
  7901  00905C  501C               	movf	getSerialCmd@temp^0,w,c
  7902  00905E  0012               	return		;funcret
  7903  009060                     __end_of_getSerialCmd:
  7904                           	callstack 0
  7905                           
  7906 ;; *************** function _controlSaveRemote *****************
  7907 ;; Defined at:
  7908 ;;		line 1209 in file "sm_MenuConfiguration_MC50.c"
  7909 ;; Parameters:    Size  Location     Type
  7910 ;;		None
  7911 ;; Auto vars:     Size  Location     Type
  7912 ;;		None
  7913 ;; Return value:  Size  Location     Type
  7914 ;;                  1    wreg      void 
  7915 ;; Registers used:
  7916 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7917 ;; Tracked objects:
  7918 ;;		On entry : 3F/0
  7919 ;;		On exit  : 0/0
  7920 ;;		Unchanged: 0/0
  7921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7924 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7925 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7926 ;;Total ram usage:        1 bytes
  7927 ;; Hardware stack levels used: 1
  7928 ;; Hardware stack levels required when called: 6
  7929 ;; This function calls:
  7930 ;;		_ClearFlag_rfCMD
  7931 ;;		_SetSegmentValueIntermitentMain
  7932 ;;		_SetSegmentValueMain
  7933 ;;		___awdiv
  7934 ;;		___lbmod
  7935 ;;		_sm_send_event
  7936 ;; This function is called by:
  7937 ;;		_sm_execute_menuConfiguration
  7938 ;; This function uses a non-reentrant model
  7939 ;;
  7940                           
  7941                           	psect	text9
  7942  0079CC                     __ptext9:
  7943                           	callstack 0
  7944  0079CC                     _controlSaveRemote:
  7945                           	callstack 22
  7946                           
  7947                           ; BSR set to: 0
  7948                           ;sm_MenuConfiguration_MC50.c: 1210:      if (ts_system.timeSinalizationDigit<=0)
  7949                           
  7950                           ;incstack = 0
  7951  0079CC  0101               	movlb	1	; () banked
  7952  0079CE  BFAC               	btfsc	(_ts_system+13)& (0+255),7,b	;volatile
  7953  0079D0  D005               	goto	u25710
  7954  0079D2  51AC               	movf	(_ts_system+13)& (0+255),w,b	;volatile
  7955  0079D4  E154               	bnz	l3488
  7956  0079D6  05AB               	decf	(_ts_system+12)& (0+255),w,b	;volatile
  7957  0079D8  B0D8               	btfsc	status,0,c
  7958  0079DA  0012               	return	
  7959  0079DC                     u25710:
  7960                           
  7961                           ; BSR set to: 1
  7962                           ;sm_MenuConfiguration_MC50.c: 1211:      {;sm_MenuConfiguration_MC50.c: 1212:          i
      +                          f(edit_Param.Max==0)
  7963  0079DC  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  7964  0079DE  A4D8               	btfss	status,2,c
  7965  0079E0  D02E               	goto	l22353
  7966                           
  7967                           ; BSR set to: 1
  7968                           ;sm_MenuConfiguration_MC50.c: 1213:          {;sm_MenuConfiguration_MC50.c: 1214:       
      +                                 ts_system.timeoutMenu=10*(1000/50);
  7969  0079E2  0E00               	movlw	0
  7970  0079E4  6FAE               	movwf	(_ts_system+15)& (0+255),b	;volatile
  7971  0079E6  0EC8               	movlw	200
  7972  0079E8  6FAD               	movwf	(_ts_system+14)& (0+255),b	;volatile
  7973                           
  7974                           ; BSR set to: 1
  7975                           ;sm_MenuConfiguration_MC50.c: 1215:              sm_send_event(&menuConfiguration_stateM
      +                          achine, ev_NextRemote);
  7976  0079EA  0EBB               	movlw	low _menuConfiguration_stateMachine
  7977  0079EC  6E12               	movwf	sm_send_event@psm^0,c
  7978  0079EE  0E02               	movlw	high _menuConfiguration_stateMachine
  7979  0079F0  6E13               	movwf	(sm_send_event@psm+1)^0,c
  7980  0079F2  0E00               	movlw	0
  7981  0079F4  6E15               	movwf	(sm_send_event@event+1)^0,c
  7982  0079F6  0E09               	movlw	9
  7983  0079F8  6E14               	movwf	sm_send_event@event^0,c
  7984  0079FA  ECD5  F045         	call	_sm_send_event	;wreg free
  7985                           
  7986                           ;sm_MenuConfiguration_MC50.c: 1216:              SetSegmentValueIntermitentMain((edit_Pa
      +                          ram.tempValue-edit_Param.tempValue%10)/10, edit_Param.tempValue%10,(1000/50));
  7987  0079FE  0E0A               	movlw	10
  7988  007A00  6E10               	movwf	___lbmod@divisor^0,c
  7989  007A02  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7990  007A04  EC9B  F04B         	call	___lbmod
  7991  007A08  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  7992  007A0A  0E00               	movlw	0
  7993  007A0C  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  7994  007A0E  0E14               	movlw	20
  7995  007A10  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  7996  007A12  0E0A               	movlw	10
  7997  007A14  6E10               	movwf	___lbmod@divisor^0,c
  7998  007A16  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7999  007A18  EC9B  F04B         	call	___lbmod
  8000  007A1C  6E20               	movwf	??_controlSaveRemote^0,c
  8001  007A1E  5020               	movf	??_controlSaveRemote^0,w,c
  8002  007A20  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  8003  007A22  6E14               	movwf	___awdiv@dividend^0,c
  8004  007A24  6A15               	clrf	(___awdiv@dividend+1)^0,c
  8005  007A26  A0D8               	btfss	status,0,c
  8006  007A28  0615               	decf	(___awdiv@dividend+1)^0,f,c
  8007  007A2A  0E00               	movlw	0
  8008  007A2C  6E17               	movwf	(___awdiv@divisor+1)^0,c
  8009  007A2E  0E0A               	movlw	10
  8010  007A30  6E16               	movwf	___awdiv@divisor^0,c
  8011  007A32  EC16  F041         	call	___awdiv	;wreg free
  8012  007A36  5014               	movf	?___awdiv^0,w,c
  8013  007A38  EC6E  F04D         	call	_SetSegmentValueIntermitentMain
  8014                           
  8015                           ;sm_MenuConfiguration_MC50.c: 1217:          }
  8016  007A3C  0012               	return	
  8017  007A3E                     l22353:
  8018                           
  8019                           ; BSR set to: 1
  8020                           ;sm_MenuConfiguration_MC50.c: 1219:          {;sm_MenuConfiguration_MC50.c: 1220:       
      +                                sm_send_event(&main_stateMachine, ev_goto_StandBy);
  8021  007A3E  0EF2               	movlw	low _main_stateMachine
  8022  007A40  6E12               	movwf	sm_send_event@psm^0,c
  8023  007A42  0E01               	movlw	high _main_stateMachine
  8024  007A44  6E13               	movwf	(sm_send_event@psm+1)^0,c
  8025  007A46  0E00               	movlw	0
  8026  007A48  6E15               	movwf	(sm_send_event@event+1)^0,c
  8027  007A4A  0E07               	movlw	7
  8028  007A4C  6E14               	movwf	sm_send_event@event^0,c
  8029  007A4E  ECD5  F045         	call	_sm_send_event	;wreg free
  8030                           
  8031                           ;sm_MenuConfiguration_MC50.c: 1221:             sm_send_event(&menuConfiguration_stateMa
      +                          chine, ev_ParameterIsSaved);
  8032  007A52  0EBB               	movlw	low _menuConfiguration_stateMachine
  8033  007A54  6E12               	movwf	sm_send_event@psm^0,c
  8034  007A56  0E02               	movlw	high _menuConfiguration_stateMachine
  8035  007A58  6E13               	movwf	(sm_send_event@psm+1)^0,c
  8036  007A5A  0E00               	movlw	0
  8037  007A5C  6E15               	movwf	(sm_send_event@event+1)^0,c
  8038  007A5E  0E04               	movlw	4
  8039  007A60  6E14               	movwf	sm_send_event@event^0,c
  8040  007A62  ECD5  F045         	call	_sm_send_event	;wreg free
  8041                           
  8042                           ;sm_MenuConfiguration_MC50.c: 1222:             SetSegmentValueMain(dMinus,dMinus);
  8043  007A66  0E18               	movlw	24
  8044  007A68  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  8045  007A6A  0E18               	movlw	24
  8046  007A6C  ECD3  F04C         	call	_SetSegmentValueMain
  8047                           
  8048                           ; BSR set to: 0
  8049                           ;sm_MenuConfiguration_MC50.c: 1223:             ClearFlag_rfCMD();
  8050  007A70  EC26  F04E         	call	_ClearFlag_rfCMD	;wreg free
  8051                           
  8052                           ;sm_MenuConfiguration_MC50.c: 1224:             ts_system.timeoutMenu = 0;
  8053  007A74  0E00               	movlw	0
  8054  007A76  0101               	movlb	1	; () banked
  8055  007A78  6FAE               	movwf	(_ts_system+15)& (0+255),b	;volatile
  8056  007A7A  0E00               	movlw	0
  8057  007A7C  6FAD               	movwf	(_ts_system+14)& (0+255),b	;volatile
  8058  007A7E                     l3488:
  8059  007A7E  0012               	return		;funcret
  8060  007A80                     __end_of_controlSaveRemote:
  8061                           	callstack 0
  8062                           
  8063 ;; *************** function ___lbmod *****************
  8064 ;; Defined at:
  8065 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\lbmod.c"
  8066 ;; Parameters:    Size  Location     Type
  8067 ;;  dividend        1    wreg     unsigned char 
  8068 ;;  divisor         1   15[COMRAM] unsigned char 
  8069 ;; Auto vars:     Size  Location     Type
  8070 ;;  dividend        1   16[COMRAM] unsigned char 
  8071 ;;  rem             1   18[COMRAM] unsigned char 
  8072 ;;  counter         1   17[COMRAM] unsigned char 
  8073 ;; Return value:  Size  Location     Type
  8074 ;;                  1    wreg      unsigned char 
  8075 ;; Registers used:
  8076 ;;		wreg, status,2, status,0
  8077 ;; Tracked objects:
  8078 ;;		On entry : 0/1
  8079 ;;		On exit  : 0/0
  8080 ;;		Unchanged: 0/0
  8081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8082 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8083 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8085 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8086 ;;Total ram usage:        4 bytes
  8087 ;; Hardware stack levels used: 1
  8088 ;; Hardware stack levels required when called: 4
  8089 ;; This function calls:
  8090 ;;		Nothing
  8091 ;; This function is called by:
  8092 ;;		_controlSelectRemote
  8093 ;;		_controlSaveRemote
  8094 ;; This function uses a non-reentrant model
  8095 ;;
  8096                           
  8097                           	psect	text10
  8098  009736                     __ptext10:
  8099                           	callstack 0
  8100  009736                     ___lbmod:
  8101                           	callstack 23
  8102                           
  8103                           ;incstack = 0
  8104                           ;___lbmod@dividend stored from wreg
  8105  009736  6E11               	movwf	___lbmod@dividend^0,c
  8106  009738  0E08               	movlw	8
  8107  00973A  6E12               	movwf	___lbmod@counter^0,c
  8108  00973C  0E00               	movlw	0
  8109  00973E  6E13               	movwf	___lbmod@rem^0,c
  8110  009740                     l21097:
  8111  009740  90D8               	bcf	status,0,c
  8112  009742  3411               	rlcf	___lbmod@dividend^0,w,c
  8113  009744  3413               	rlcf	___lbmod@rem^0,w,c
  8114  009746  6E13               	movwf	___lbmod@rem^0,c
  8115  009748  90D8               	bcf	status,0,c
  8116  00974A  3611               	rlcf	___lbmod@dividend^0,f,c
  8117  00974C  5010               	movf	___lbmod@divisor^0,w,c
  8118  00974E  5C13               	subwf	___lbmod@rem^0,w,c
  8119  009750  A0D8               	btfss	status,0,c
  8120  009752  D002               	goto	l21105
  8121  009754  5010               	movf	___lbmod@divisor^0,w,c
  8122  009756  5E13               	subwf	___lbmod@rem^0,f,c
  8123  009758                     l21105:
  8124  009758  2E12               	decfsz	___lbmod@counter^0,f,c
  8125  00975A  D7F2               	goto	l21097
  8126  00975C  5013               	movf	___lbmod@rem^0,w,c
  8127  00975E  0012               	return		;funcret
  8128  009760                     __end_of___lbmod:
  8129                           	callstack 0
  8130                           
  8131 ;; *************** function ___awdiv *****************
  8132 ;; Defined at:
  8133 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awdiv.c"
  8134 ;; Parameters:    Size  Location     Type
  8135 ;;  dividend        2   19[COMRAM] int 
  8136 ;;  divisor         2   21[COMRAM] int 
  8137 ;; Auto vars:     Size  Location     Type
  8138 ;;  quotient        2   25[COMRAM] int 
  8139 ;;  sign            1   24[COMRAM] unsigned char 
  8140 ;;  counter         1   23[COMRAM] unsigned char 
  8141 ;; Return value:  Size  Location     Type
  8142 ;;                  2   19[COMRAM] int 
  8143 ;; Registers used:
  8144 ;;		wreg, status,2, status,0
  8145 ;; Tracked objects:
  8146 ;;		On entry : 0/0
  8147 ;;		On exit  : 0/0
  8148 ;;		Unchanged: 0/0
  8149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8150 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8151 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8153 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8154 ;;Total ram usage:        8 bytes
  8155 ;; Hardware stack levels used: 1
  8156 ;; Hardware stack levels required when called: 4
  8157 ;; This function calls:
  8158 ;;		Nothing
  8159 ;; This function is called by:
  8160 ;;		_controlSelectRemote
  8161 ;;		_controlSaveRemote
  8162 ;; This function uses a non-reentrant model
  8163 ;;
  8164                           
  8165                           	psect	text11
  8166  00822C                     __ptext11:
  8167                           	callstack 0
  8168  00822C                     ___awdiv:
  8169                           	callstack 23
  8170                           
  8171                           ;incstack = 0
  8172  00822C  0E00               	movlw	0
  8173  00822E  6E19               	movwf	___awdiv@sign^0,c
  8174  008230  AE17               	btfss	(___awdiv@divisor+1)^0,7,c
  8175  008232  D006               	goto	l21033
  8176  008234  6C16               	negf	___awdiv@divisor^0,c
  8177  008236  1E17               	comf	(___awdiv@divisor+1)^0,f,c
  8178  008238  B0D8               	btfsc	status,0,c
  8179  00823A  2A17               	incf	(___awdiv@divisor+1)^0,f,c
  8180  00823C  0E01               	movlw	1
  8181  00823E  6E19               	movwf	___awdiv@sign^0,c
  8182  008240                     l21033:
  8183  008240  AE15               	btfss	(___awdiv@dividend+1)^0,7,c
  8184  008242  D006               	goto	l21039
  8185  008244  6C14               	negf	___awdiv@dividend^0,c
  8186  008246  1E15               	comf	(___awdiv@dividend+1)^0,f,c
  8187  008248  B0D8               	btfsc	status,0,c
  8188  00824A  2A15               	incf	(___awdiv@dividend+1)^0,f,c
  8189  00824C  0E01               	movlw	1
  8190  00824E  1A19               	xorwf	___awdiv@sign^0,f,c
  8191  008250                     l21039:
  8192  008250  0E00               	movlw	0
  8193  008252  6E1B               	movwf	(___awdiv@quotient+1)^0,c
  8194  008254  0E00               	movlw	0
  8195  008256  6E1A               	movwf	___awdiv@quotient^0,c
  8196  008258  5016               	movf	___awdiv@divisor^0,w,c
  8197  00825A  1017               	iorwf	(___awdiv@divisor+1)^0,w,c
  8198  00825C  B4D8               	btfsc	status,2,c
  8199  00825E  D01C               	goto	l21061
  8200  008260  0E01               	movlw	1
  8201  008262  6E18               	movwf	___awdiv@counter^0,c
  8202  008264  D004               	goto	l21047
  8203  008266                     l21045:
  8204  008266  90D8               	bcf	status,0,c
  8205  008268  3616               	rlcf	___awdiv@divisor^0,f,c
  8206  00826A  3617               	rlcf	(___awdiv@divisor+1)^0,f,c
  8207  00826C  2A18               	incf	___awdiv@counter^0,f,c
  8208  00826E                     l21047:
  8209  00826E  AE17               	btfss	(___awdiv@divisor+1)^0,7,c
  8210  008270  D7FA               	goto	l21045
  8211  008272                     u24190:
  8212  008272  90D8               	bcf	status,0,c
  8213  008274  361A               	rlcf	___awdiv@quotient^0,f,c
  8214  008276  361B               	rlcf	(___awdiv@quotient+1)^0,f,c
  8215  008278  5016               	movf	___awdiv@divisor^0,w,c
  8216  00827A  5C14               	subwf	___awdiv@dividend^0,w,c
  8217  00827C  5017               	movf	(___awdiv@divisor+1)^0,w,c
  8218  00827E  5815               	subwfb	(___awdiv@dividend+1)^0,w,c
  8219  008280  A0D8               	btfss	status,0,c
  8220  008282  D005               	goto	l21057
  8221  008284  5016               	movf	___awdiv@divisor^0,w,c
  8222  008286  5E14               	subwf	___awdiv@dividend^0,f,c
  8223  008288  5017               	movf	(___awdiv@divisor+1)^0,w,c
  8224  00828A  5A15               	subwfb	(___awdiv@dividend+1)^0,f,c
  8225  00828C  801A               	bsf	___awdiv@quotient^0,0,c
  8226  00828E                     l21057:
  8227  00828E  90D8               	bcf	status,0,c
  8228  008290  3217               	rrcf	(___awdiv@divisor+1)^0,f,c
  8229  008292  3216               	rrcf	___awdiv@divisor^0,f,c
  8230  008294  2E18               	decfsz	___awdiv@counter^0,f,c
  8231  008296  D7ED               	goto	u24190
  8232  008298                     l21061:
  8233  008298  5019               	movf	___awdiv@sign^0,w,c
  8234  00829A  B4D8               	btfsc	status,2,c
  8235  00829C  D004               	goto	l21065
  8236  00829E  6C1A               	negf	___awdiv@quotient^0,c
  8237  0082A0  1E1B               	comf	(___awdiv@quotient+1)^0,f,c
  8238  0082A2  B0D8               	btfsc	status,0,c
  8239  0082A4  2A1B               	incf	(___awdiv@quotient+1)^0,f,c
  8240  0082A6                     l21065:
  8241  0082A6  C01A  F014         	movff	___awdiv@quotient,?___awdiv
  8242  0082AA  C01B  F015         	movff	___awdiv@quotient+1,?___awdiv+1
  8243  0082AE  0012               	return		;funcret
  8244  0082B0                     __end_of___awdiv:
  8245                           	callstack 0
  8246                           
  8247 ;; *************** function _SetSegmentValueMain *****************
  8248 ;; Defined at:
  8249 ;;		line 104 in file "outputs_MC50.c"
  8250 ;; Parameters:    Size  Location     Type
  8251 ;;  d1              1    wreg     unsigned char 
  8252 ;;  d2              1   27[COMRAM] unsigned char 
  8253 ;; Auto vars:     Size  Location     Type
  8254 ;;  d1              1   28[COMRAM] unsigned char 
  8255 ;; Return value:  Size  Location     Type
  8256 ;;                  1    wreg      void 
  8257 ;; Registers used:
  8258 ;;		wreg, status,2
  8259 ;; Tracked objects:
  8260 ;;		On entry : 0/0
  8261 ;;		On exit  : 3F/0
  8262 ;;		Unchanged: 0/0
  8263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8264 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8265 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8267 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8268 ;;Total ram usage:        2 bytes
  8269 ;; Hardware stack levels used: 1
  8270 ;; Hardware stack levels required when called: 4
  8271 ;; This function calls:
  8272 ;;		Nothing
  8273 ;; This function is called by:
  8274 ;;		_sm_execute_main
  8275 ;;		_sm_execute_menuConfiguration
  8276 ;;		_load_New_Menu
  8277 ;;		_controlSelectRemote
  8278 ;;		_controlSaveRemote
  8279 ;; This function uses a non-reentrant model
  8280 ;;
  8281                           
  8282                           	psect	text12
  8283  0099A6                     __ptext12:
  8284                           	callstack 0
  8285  0099A6                     _SetSegmentValueMain:
  8286                           	callstack 22
  8287                           
  8288                           ;incstack = 0
  8289                           ;SetSegmentValueMain@d1 stored from wreg
  8290  0099A6  6E1D               	movwf	SetSegmentValueMain@d1^0,c
  8291                           
  8292                           ;outputs_MC50.c: 104: void SetSegmentValueMain(char d1, char d2);outputs_MC50.c: 105: {;
      +                          outputs_MC50.c: 106:     dispStruct.display_grp.value_display1=d1;
  8293  0099A8  C01D  F072         	movff	SetSegmentValueMain@d1,_dispStruct	;volatile
  8294                           
  8295                           ;outputs_MC50.c: 107:     dispStruct.display_grp.value_display2=d2;
  8296  0099AC  C01C  F073         	movff	SetSegmentValueMain@d2,_dispStruct+1	;volatile
  8297                           
  8298                           ;outputs_MC50.c: 108:     dispStruct.intermitentFreq=0;
  8299  0099B0  0E00               	movlw	0
  8300  0099B2  0100               	movlb	0	; () banked
  8301  0099B4  6F76               	movwf	(_dispStruct+4)& (0+255),b	;volatile
  8302  0099B6  0E00               	movlw	0
  8303  0099B8  6F75               	movwf	(_dispStruct+3)& (0+255),b	;volatile
  8304                           
  8305                           ; BSR set to: 0
  8306                           ;outputs_MC50.c: 109:     dispStruct.upFase=0;
  8307  0099BA  0E00               	movlw	0
  8308  0099BC  6F77               	movwf	(_dispStruct+5)& (0+255),b	;volatile
  8309                           
  8310                           ; BSR set to: 0
  8311  0099BE  0012               	return		;funcret
  8312  0099C0                     __end_of_SetSegmentValueMain:
  8313                           	callstack 0
  8314                           
  8315 ;; *************** function _ClearFlag_rfCMD *****************
  8316 ;; Defined at:
  8317 ;;		line 463 in file "inputs_MC50.c"
  8318 ;; Parameters:    Size  Location     Type
  8319 ;;		None
  8320 ;; Auto vars:     Size  Location     Type
  8321 ;;		None
  8322 ;; Return value:  Size  Location     Type
  8323 ;;                  1    wreg      void 
  8324 ;; Registers used:
  8325 ;;		wreg, status,2
  8326 ;; Tracked objects:
  8327 ;;		On entry : 0/1
  8328 ;;		On exit  : 0/0
  8329 ;;		Unchanged: 0/0
  8330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8334 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8335 ;;Total ram usage:        0 bytes
  8336 ;; Hardware stack levels used: 1
  8337 ;; Hardware stack levels required when called: 4
  8338 ;; This function calls:
  8339 ;;		Nothing
  8340 ;; This function is called by:
  8341 ;;		_sm_execute_menuConfiguration
  8342 ;;		_controlSelectRemote
  8343 ;;		_controlSaveRemote
  8344 ;; This function uses a non-reentrant model
  8345 ;;
  8346                           
  8347                           	psect	text13
  8348  009C4C                     __ptext13:
  8349                           	callstack 0
  8350  009C4C                     _ClearFlag_rfCMD:
  8351                           	callstack 23
  8352                           
  8353                           ;inputs_MC50.c: 464:     rfCMD.processed=1;
  8354                           
  8355                           ; BSR set to: 0
  8356                           ;incstack = 0
  8357  009C4C  0E01               	movlw	1
  8358  009C4E  6E45               	movwf	(_rfCMD+10)^0,c	;volatile
  8359  009C50  0012               	return		;funcret
  8360  009C52                     __end_of_ClearFlag_rfCMD:
  8361                           	callstack 0
  8362                           
  8363 ;; *************** function _controlLearnDigit *****************
  8364 ;; Defined at:
  8365 ;;		line 1230 in file "sm_MenuConfiguration_MC50.c"
  8366 ;; Parameters:    Size  Location     Type
  8367 ;;		None
  8368 ;; Auto vars:     Size  Location     Type
  8369 ;;		None
  8370 ;; Return value:  Size  Location     Type
  8371 ;;                  1    wreg      void 
  8372 ;; Registers used:
  8373 ;;		wreg, status,2, status,0, cstack
  8374 ;; Tracked objects:
  8375 ;;		On entry : 3F/0
  8376 ;;		On exit  : 3E/0
  8377 ;;		Unchanged: 0/0
  8378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8382 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8383 ;;Total ram usage:        0 bytes
  8384 ;; Hardware stack levels used: 1
  8385 ;; Hardware stack levels required when called: 5
  8386 ;; This function calls:
  8387 ;;		_SetSegmentValueLearn
  8388 ;; This function is called by:
  8389 ;;		_sm_execute_menuConfiguration
  8390 ;; This function uses a non-reentrant model
  8391 ;;
  8392                           
  8393                           	psect	text14
  8394  0094C8                     __ptext14:
  8395                           	callstack 0
  8396  0094C8                     _controlLearnDigit:
  8397                           	callstack 23
  8398                           
  8399                           ; BSR set to: 0
  8400                           ;sm_MenuConfiguration_MC50.c: 1232:     if(ts_system.timeSinalizationDigit<=0 )
  8401                           
  8402                           ;incstack = 0
  8403  0094C8  0101               	movlb	1	; () banked
  8404  0094CA  BFAC               	btfsc	(_ts_system+13)& (0+255),7,b	;volatile
  8405  0094CC  D005               	goto	u25730
  8406  0094CE  51AC               	movf	(_ts_system+13)& (0+255),w,b	;volatile
  8407  0094D0  E112               	bnz	l3494
  8408  0094D2  05AB               	decf	(_ts_system+12)& (0+255),w,b	;volatile
  8409  0094D4  B0D8               	btfsc	status,0,c
  8410  0094D6  0012               	return	
  8411  0094D8                     u25730:
  8412                           
  8413                           ; BSR set to: 1
  8414                           ;sm_MenuConfiguration_MC50.c: 1233:     {;sm_MenuConfiguration_MC50.c: 1234:         ts_
      +                          system.timeSinalizationDigit=( 100/50);
  8415  0094D8  0E00               	movlw	0
  8416  0094DA  6FAC               	movwf	(_ts_system+13)& (0+255),b	;volatile
  8417  0094DC  0E02               	movlw	2
  8418  0094DE  6FAB               	movwf	(_ts_system+12)& (0+255),b	;volatile
  8419                           
  8420                           ; BSR set to: 1
  8421                           ;sm_MenuConfiguration_MC50.c: 1235:         if(var_sys.StateMotor==InClose)
  8422  0094E0  0E03               	movlw	3
  8423  0094E2  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
  8424  0094E4  A4D8               	btfss	status,2,c
  8425  0094E6  D004               	goto	l22369
  8426                           
  8427                           ; BSR set to: 1
  8428                           ;sm_MenuConfiguration_MC50.c: 1236:         {;sm_MenuConfiguration_MC50.c: 1237:        
      +                               SetSegmentValueLearn(Left);
  8429  0094E8  0E00               	movlw	0
  8430  0094EA  ECDD  F039         	call	_SetSegmentValueLearn
  8431                           
  8432                           ;sm_MenuConfiguration_MC50.c: 1238:         }
  8433  0094EE  0012               	return	
  8434  0094F0                     l22369:
  8435                           
  8436                           ; BSR set to: 1
  8437                           ;sm_MenuConfiguration_MC50.c: 1240:         {;sm_MenuConfiguration_MC50.c: 1241:        
      +                               SetSegmentValueLearn(Rigth);
  8438  0094F0  0E01               	movlw	1
  8439  0094F2  ECDD  F039         	call	_SetSegmentValueLearn
  8440  0094F6                     l3494:
  8441  0094F6  0012               	return		;funcret
  8442  0094F8                     __end_of_controlLearnDigit:
  8443                           	callstack 0
  8444                           
  8445 ;; *************** function _SetSegmentValueLearn *****************
  8446 ;; Defined at:
  8447 ;;		line 124 in file "outputs_MC50.c"
  8448 ;; Parameters:    Size  Location     Type
  8449 ;;  direction       1    wreg     enum E10602
  8450 ;; Auto vars:     Size  Location     Type
  8451 ;;  direction       1   17[COMRAM] enum E10602
  8452 ;; Return value:  Size  Location     Type
  8453 ;;                  1    wreg      void 
  8454 ;; Registers used:
  8455 ;;		wreg, status,2, status,0
  8456 ;; Tracked objects:
  8457 ;;		On entry : 3F/1
  8458 ;;		On exit  : 3F/0
  8459 ;;		Unchanged: 0/0
  8460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8462 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8463 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8464 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8465 ;;Total ram usage:        3 bytes
  8466 ;; Hardware stack levels used: 1
  8467 ;; Hardware stack levels required when called: 4
  8468 ;; This function calls:
  8469 ;;		Nothing
  8470 ;; This function is called by:
  8471 ;;		_controlLearnDigit
  8472 ;; This function uses a non-reentrant model
  8473 ;;
  8474                           
  8475                           	psect	text15
  8476  0073BA                     __ptext15:
  8477                           	callstack 0
  8478  0073BA                     _SetSegmentValueLearn:
  8479                           	callstack 23
  8480                           
  8481                           ;incstack = 0
  8482                           ;SetSegmentValueLearn@direction stored from wreg
  8483  0073BA  6E12               	movwf	SetSegmentValueLearn@direction^0,c
  8484                           
  8485                           ;outputs_MC50.c: 124: void SetSegmentValueLearn(Direction_en direction);outputs_MC50.c: 
      +                          125: {;outputs_MC50.c: 126:     dispStruct.intermitentFreq=0;
  8486  0073BC  0E00               	movlw	0
  8487  0073BE  0100               	movlb	0	; () banked
  8488  0073C0  6F76               	movwf	(_dispStruct+4)& (0+255),b	;volatile
  8489  0073C2  0E00               	movlw	0
  8490  0073C4  6F75               	movwf	(_dispStruct+3)& (0+255),b	;volatile
  8491                           
  8492                           ;outputs_MC50.c: 127:     dispStruct.upFase=0;
  8493  0073C6  0E00               	movlw	0
  8494  0073C8  6F77               	movwf	(_dispStruct+5)& (0+255),b	;volatile
  8495                           
  8496                           ;outputs_MC50.c: 128:     switch (direction)
  8497  0073CA  D066               	goto	l20871
  8498  0073CC                     l20817:
  8499                           
  8500                           ; BSR set to: 0
  8501                           ;outputs_MC50.c: 131:             if(dispStruct.display_grp.value_display1==sA && dispSt
      +                          ruct.display_grp.value_display2==dBlank)
  8502  0073CC  0E1A               	movlw	26
  8503  0073CE  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8504  0073D0  A4D8               	btfss	status,2,c
  8505  0073D2  D009               	goto	l20823
  8506                           
  8507                           ; BSR set to: 0
  8508  0073D4  0E20               	movlw	32
  8509  0073D6  1973               	xorwf	(_dispStruct+1)& (0+255),w,b	;volatile
  8510  0073D8  A4D8               	btfss	status,2,c
  8511  0073DA  D005               	goto	l20823
  8512                           
  8513                           ; BSR set to: 0
  8514                           ;outputs_MC50.c: 132:             {;outputs_MC50.c: 133:                dispStruct.displ
      +                          ay_grp.value_display1=dBlank;
  8515  0073DC  0E20               	movlw	32
  8516  0073DE  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8517                           
  8518                           ;outputs_MC50.c: 134:                dispStruct.display_grp.value_display2=sA;
  8519  0073E0  0E1A               	movlw	26
  8520  0073E2  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8521                           
  8522                           ;outputs_MC50.c: 135:             }
  8523  0073E4  0012               	return	
  8524  0073E6                     l20823:
  8525                           
  8526                           ; BSR set to: 0
  8527  0073E6  0E20               	movlw	32
  8528  0073E8  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8529  0073EA  A4D8               	btfss	status,2,c
  8530  0073EC  D009               	goto	l20829
  8531                           
  8532                           ; BSR set to: 0
  8533  0073EE  0E1D               	movlw	29
  8534  0073F0  1973               	xorwf	(_dispStruct+1)& (0+255),w,b	;volatile
  8535  0073F2  A4D8               	btfss	status,2,c
  8536  0073F4  D005               	goto	l20829
  8537                           
  8538                           ; BSR set to: 0
  8539                           ;outputs_MC50.c: 137:             {;outputs_MC50.c: 138:                dispStruct.displ
      +                          ay_grp.value_display1=sD;
  8540  0073F6  0E1D               	movlw	29
  8541  0073F8  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8542                           
  8543                           ;outputs_MC50.c: 139:                dispStruct.display_grp.value_display2=dBlank;
  8544  0073FA  0E20               	movlw	32
  8545  0073FC  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8546                           
  8547                           ;outputs_MC50.c: 140:             }
  8548  0073FE  0012               	return	
  8549  007400                     l20829:
  8550                           
  8551                           ; BSR set to: 0
  8552  007400  0E1F               	movlw	31
  8553  007402  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8554  007404  A4D8               	btfss	status,2,c
  8555  007406  D005               	goto	l20833
  8556                           
  8557                           ; BSR set to: 0
  8558                           ;outputs_MC50.c: 142:             {;outputs_MC50.c: 143:                dispStruct.displ
      +                          ay_grp.value_display1=sA;
  8559  007408  0E1A               	movlw	26
  8560  00740A  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8561                           
  8562                           ;outputs_MC50.c: 144:                dispStruct.display_grp.value_display2=dBlank;
  8563  00740C  0E20               	movlw	32
  8564  00740E  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8565                           
  8566                           ;outputs_MC50.c: 145:             }
  8567  007410  0012               	return	
  8568  007412                     l20833:
  8569                           
  8570                           ; BSR set to: 0
  8571  007412  0E20               	movlw	32
  8572  007414  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8573  007416  A4D8               	btfss	status,2,c
  8574  007418  D002               	goto	l20837
  8575                           
  8576                           ; BSR set to: 0
  8577                           ;outputs_MC50.c: 147:             {;outputs_MC50.c: 148:                dispStruct.displ
      +                          ay_grp.value_display2++;
  8578  00741A  2B73               	incf	(_dispStruct+1)& (0+255),f,b	;volatile
  8579                           
  8580                           ;outputs_MC50.c: 149:             }
  8581  00741C  0012               	return	
  8582  00741E                     l20837:
  8583                           
  8584                           ; BSR set to: 0
  8585  00741E  0E20               	movlw	32
  8586  007420  1973               	xorwf	(_dispStruct+1)& (0+255),w,b	;volatile
  8587  007422  A4D8               	btfss	status,2,c
  8588  007424  D002               	goto	l20841
  8589                           
  8590                           ; BSR set to: 0
  8591                           ;outputs_MC50.c: 151:             {;outputs_MC50.c: 152:                dispStruct.displ
      +                          ay_grp.value_display1++;
  8592  007426  2B72               	incf	_dispStruct& (0+255),f,b	;volatile
  8593                           
  8594                           ;outputs_MC50.c: 153:             }
  8595  007428  0012               	return	
  8596  00742A                     l20841:
  8597                           
  8598                           ; BSR set to: 0
  8599                           ;outputs_MC50.c: 155:             {;outputs_MC50.c: 156:                dispStruct.displ
      +                          ay_grp.value_display1=sA;
  8600  00742A  0E1A               	movlw	26
  8601  00742C  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8602                           
  8603                           ;outputs_MC50.c: 157:                dispStruct.display_grp.value_display2=dBlank;
  8604  00742E  0E20               	movlw	32
  8605  007430  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8606  007432  0012               	return	
  8607  007434                     l20843:
  8608                           
  8609                           ; BSR set to: 0
  8610                           ;outputs_MC50.c: 161:             if(dispStruct.display_grp.value_display2==sA && dispSt
      +                          ruct.display_grp.value_display1==dBlank)
  8611  007434  0E1A               	movlw	26
  8612  007436  1973               	xorwf	(_dispStruct+1)& (0+255),w,b	;volatile
  8613  007438  A4D8               	btfss	status,2,c
  8614  00743A  D009               	goto	l20849
  8615                           
  8616                           ; BSR set to: 0
  8617  00743C  0E20               	movlw	32
  8618  00743E  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8619  007440  A4D8               	btfss	status,2,c
  8620  007442  D005               	goto	l20849
  8621                           
  8622                           ; BSR set to: 0
  8623                           ;outputs_MC50.c: 162:             {;outputs_MC50.c: 163:                dispStruct.displ
      +                          ay_grp.value_display1=sA;
  8624  007444  0E1A               	movlw	26
  8625  007446  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8626                           
  8627                           ;outputs_MC50.c: 164:                dispStruct.display_grp.value_display2=dBlank;
  8628  007448  0E20               	movlw	32
  8629  00744A  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8630                           
  8631                           ;outputs_MC50.c: 165:             }
  8632  00744C  0012               	return	
  8633  00744E                     l20849:
  8634                           
  8635                           ; BSR set to: 0
  8636  00744E  0E20               	movlw	32
  8637  007450  1973               	xorwf	(_dispStruct+1)& (0+255),w,b	;volatile
  8638  007452  A4D8               	btfss	status,2,c
  8639  007454  D009               	goto	l20855
  8640                           
  8641                           ; BSR set to: 0
  8642  007456  0E1D               	movlw	29
  8643  007458  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8644  00745A  A4D8               	btfss	status,2,c
  8645  00745C  D005               	goto	l20855
  8646                           
  8647                           ; BSR set to: 0
  8648                           ;outputs_MC50.c: 167:             {;outputs_MC50.c: 168:                dispStruct.displ
      +                          ay_grp.value_display1=dBlank;
  8649  00745E  0E20               	movlw	32
  8650  007460  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8651                           
  8652                           ;outputs_MC50.c: 169:                dispStruct.display_grp.value_display2=sD;
  8653  007462  0E1D               	movlw	29
  8654  007464  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8655                           
  8656                           ;outputs_MC50.c: 170:             }
  8657  007466  0012               	return	
  8658  007468                     l20855:
  8659                           
  8660                           ; BSR set to: 0
  8661  007468  0E1A               	movlw	26
  8662  00746A  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8663  00746C  A4D8               	btfss	status,2,c
  8664  00746E  D003               	goto	l20859
  8665                           
  8666                           ; BSR set to: 0
  8667                           ;outputs_MC50.c: 172:             {;outputs_MC50.c: 173:                dispStruct.displ
      +                          ay_grp.value_display1=sF;
  8668  007470  0E1F               	movlw	31
  8669  007472  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8670                           
  8671                           ;outputs_MC50.c: 174:             }
  8672  007474  0012               	return	
  8673  007476                     l20859:
  8674                           
  8675                           ; BSR set to: 0
  8676  007476  0E20               	movlw	32
  8677  007478  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8678  00747A  A4D8               	btfss	status,2,c
  8679  00747C  D002               	goto	l20863
  8680                           
  8681                           ; BSR set to: 0
  8682                           ;outputs_MC50.c: 176:             {;outputs_MC50.c: 177:                dispStruct.displ
      +                          ay_grp.value_display2--;
  8683  00747E  0773               	decf	(_dispStruct+1)& (0+255),f,b	;volatile
  8684                           
  8685                           ;outputs_MC50.c: 178:             }
  8686  007480  0012               	return	
  8687  007482                     l20863:
  8688                           
  8689                           ; BSR set to: 0
  8690  007482  0E20               	movlw	32
  8691  007484  1973               	xorwf	(_dispStruct+1)& (0+255),w,b	;volatile
  8692  007486  A4D8               	btfss	status,2,c
  8693  007488  D002               	goto	l20867
  8694                           
  8695                           ; BSR set to: 0
  8696                           ;outputs_MC50.c: 180:             {;outputs_MC50.c: 181:                dispStruct.displ
      +                          ay_grp.value_display1--;
  8697  00748A  0772               	decf	_dispStruct& (0+255),f,b	;volatile
  8698                           
  8699                           ;outputs_MC50.c: 182:             }
  8700  00748C  0012               	return	
  8701  00748E                     l20867:
  8702                           
  8703                           ; BSR set to: 0
  8704                           ;outputs_MC50.c: 184:             {;outputs_MC50.c: 185:                dispStruct.displ
      +                          ay_grp.value_display1=sA;
  8705  00748E  0E1A               	movlw	26
  8706  007490  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8707                           
  8708                           ;outputs_MC50.c: 186:                dispStruct.display_grp.value_display2=dBlank;
  8709  007492  0E20               	movlw	32
  8710  007494  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8711  007496  0012               	return	
  8712  007498                     l20871:
  8713                           
  8714                           ; BSR set to: 0
  8715  007498  5012               	movf	SetSegmentValueLearn@direction^0,w,c
  8716  00749A  6E10               	movwf	??_SetSegmentValueLearn^0,c
  8717  00749C  6A11               	clrf	(??_SetSegmentValueLearn+1)^0,c
  8718                           
  8719                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8720                           ; Switch size 1, requested type "simple"
  8721                           ; Number of cases is 1, Range of values is 0 to 0
  8722                           ; switch strategies available:
  8723                           ; Name         Instructions Cycles
  8724                           ; simple_byte            4     3 (average)
  8725                           ;	Chosen strategy is simple_byte
  8726  00749E  5011               	movf	(??_SetSegmentValueLearn+1)^0,w,c
  8727  0074A0  0A00               	xorlw	0	; case 0
  8728  0074A2  A4D8               	btfss	status,2,c
  8729  0074A4  0012               	return	
  8730                           
  8731                           ; BSR set to: 0
  8732                           ; Switch size 1, requested type "simple"
  8733                           ; Number of cases is 2, Range of values is 0 to 1
  8734                           ; switch strategies available:
  8735                           ; Name         Instructions Cycles
  8736                           ; simple_byte            7     4 (average)
  8737                           ;	Chosen strategy is simple_byte
  8738  0074A6  5010               	movf	??_SetSegmentValueLearn^0,w,c
  8739  0074A8  0A00               	xorlw	0	; case 0
  8740  0074AA  B4D8               	btfsc	status,2,c
  8741  0074AC  D7C3               	goto	l20843
  8742  0074AE  0A01               	xorlw	1	; case 1
  8743  0074B0  A4D8               	btfss	status,2,c
  8744  0074B2  0012               	return	
  8745  0074B4  D78B               	goto	l20817
  8746  0074B6                     __end_of_SetSegmentValueLearn:
  8747                           	callstack 0
  8748                           
  8749 ;; *************** function ___lldiv *****************
  8750 ;; Defined at:
  8751 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\__lldiv.c"
  8752 ;; Parameters:    Size  Location     Type
  8753 ;;  dividend        4   15[COMRAM] unsigned long 
  8754 ;;  divisor         4   19[COMRAM] unsigned long 
  8755 ;; Auto vars:     Size  Location     Type
  8756 ;;  quotient        4   23[COMRAM] unsigned long 
  8757 ;;  counter         1   27[COMRAM] unsigned char 
  8758 ;; Return value:  Size  Location     Type
  8759 ;;                  4   15[COMRAM] unsigned long 
  8760 ;; Registers used:
  8761 ;;		wreg, status,2, status,0
  8762 ;; Tracked objects:
  8763 ;;		On entry : 0/1
  8764 ;;		On exit  : 0/0
  8765 ;;		Unchanged: 0/0
  8766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8767 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8768 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8770 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8771 ;;Total ram usage:       13 bytes
  8772 ;; Hardware stack levels used: 1
  8773 ;; Hardware stack levels required when called: 4
  8774 ;; This function calls:
  8775 ;;		Nothing
  8776 ;; This function is called by:
  8777 ;;		_sm_execute_menuConfiguration
  8778 ;; This function uses a non-reentrant model
  8779 ;;
  8780                           
  8781                           	psect	text16
  8782  008334                     __ptext16:
  8783                           	callstack 0
  8784  008334                     ___lldiv:
  8785                           	callstack 24
  8786                           
  8787                           ; BSR set to: 0
  8788                           ;incstack = 0
  8789  008334  0E00               	movlw	0
  8790  008336  6E18               	movwf	___lldiv@quotient^0,c
  8791  008338  0E00               	movlw	0
  8792  00833A  6E19               	movwf	(___lldiv@quotient+1)^0,c
  8793  00833C  0E00               	movlw	0
  8794  00833E  6E1A               	movwf	(___lldiv@quotient+2)^0,c
  8795  008340  0E00               	movlw	0
  8796  008342  6E1B               	movwf	(___lldiv@quotient+3)^0,c
  8797  008344  5014               	movf	___lldiv@divisor^0,w,c
  8798  008346  1015               	iorwf	(___lldiv@divisor+1)^0,w,c
  8799  008348  1016               	iorwf	(___lldiv@divisor+2)^0,w,c
  8800  00834A  1017               	iorwf	(___lldiv@divisor+3)^0,w,c
  8801  00834C  B4D8               	btfsc	status,2,c
  8802  00834E  D02A               	goto	l3807
  8803  008350  0E01               	movlw	1
  8804  008352  6E1C               	movwf	___lldiv@counter^0,c
  8805  008354  D006               	goto	l22389
  8806  008356                     l22387:
  8807  008356  90D8               	bcf	status,0,c
  8808  008358  3614               	rlcf	___lldiv@divisor^0,f,c
  8809  00835A  3615               	rlcf	(___lldiv@divisor+1)^0,f,c
  8810  00835C  3616               	rlcf	(___lldiv@divisor+2)^0,f,c
  8811  00835E  3617               	rlcf	(___lldiv@divisor+3)^0,f,c
  8812  008360  2A1C               	incf	___lldiv@counter^0,f,c
  8813  008362                     l22389:
  8814  008362  AE17               	btfss	(___lldiv@divisor+3)^0,7,c
  8815  008364  D7F8               	goto	l22387
  8816  008366                     u25770:
  8817  008366  90D8               	bcf	status,0,c
  8818  008368  3618               	rlcf	___lldiv@quotient^0,f,c
  8819  00836A  3619               	rlcf	(___lldiv@quotient+1)^0,f,c
  8820  00836C  361A               	rlcf	(___lldiv@quotient+2)^0,f,c
  8821  00836E  361B               	rlcf	(___lldiv@quotient+3)^0,f,c
  8822  008370  5014               	movf	___lldiv@divisor^0,w,c
  8823  008372  5C10               	subwf	___lldiv@dividend^0,w,c
  8824  008374  5015               	movf	(___lldiv@divisor+1)^0,w,c
  8825  008376  5811               	subwfb	(___lldiv@dividend+1)^0,w,c
  8826  008378  5016               	movf	(___lldiv@divisor+2)^0,w,c
  8827  00837A  5812               	subwfb	(___lldiv@dividend+2)^0,w,c
  8828  00837C  5017               	movf	(___lldiv@divisor+3)^0,w,c
  8829  00837E  5813               	subwfb	(___lldiv@dividend+3)^0,w,c
  8830  008380  A0D8               	btfss	status,0,c
  8831  008382  D009               	goto	l22399
  8832  008384  5014               	movf	___lldiv@divisor^0,w,c
  8833  008386  5E10               	subwf	___lldiv@dividend^0,f,c
  8834  008388  5015               	movf	(___lldiv@divisor+1)^0,w,c
  8835  00838A  5A11               	subwfb	(___lldiv@dividend+1)^0,f,c
  8836  00838C  5016               	movf	(___lldiv@divisor+2)^0,w,c
  8837  00838E  5A12               	subwfb	(___lldiv@dividend+2)^0,f,c
  8838  008390  5017               	movf	(___lldiv@divisor+3)^0,w,c
  8839  008392  5A13               	subwfb	(___lldiv@dividend+3)^0,f,c
  8840  008394  8018               	bsf	___lldiv@quotient^0,0,c
  8841  008396                     l22399:
  8842  008396  90D8               	bcf	status,0,c
  8843  008398  3217               	rrcf	(___lldiv@divisor+3)^0,f,c
  8844  00839A  3216               	rrcf	(___lldiv@divisor+2)^0,f,c
  8845  00839C  3215               	rrcf	(___lldiv@divisor+1)^0,f,c
  8846  00839E  3214               	rrcf	___lldiv@divisor^0,f,c
  8847  0083A0  2E1C               	decfsz	___lldiv@counter^0,f,c
  8848  0083A2  D7E1               	goto	u25770
  8849  0083A4                     l3807:
  8850  0083A4  C018  F010         	movff	___lldiv@quotient,?___lldiv
  8851  0083A8  C019  F011         	movff	___lldiv@quotient+1,?___lldiv+1
  8852  0083AC  C01A  F012         	movff	___lldiv@quotient+2,?___lldiv+2
  8853  0083B0  C01B  F013         	movff	___lldiv@quotient+3,?___lldiv+3
  8854  0083B4  0012               	return		;funcret
  8855  0083B6                     __end_of___lldiv:
  8856                           	callstack 0
  8857                           
  8858 ;; *************** function _sm_execute_ControlGate *****************
  8859 ;; Defined at:
  8860 ;;		line 128 in file "sm_ControlGate_MC50.c"
  8861 ;; Parameters:    Size  Location     Type
  8862 ;;  psm             2   15[BANK0 ] PTR struct .
  8863 ;;		 -> controlGate_stateMachine(11), 
  8864 ;; Auto vars:     Size  Location     Type
  8865 ;;  typeOpenOrde    1   19[BANK0 ] enum E10372
  8866 ;; Return value:  Size  Location     Type
  8867 ;;                  1    wreg      void 
  8868 ;; Registers used:
  8869 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  8870 ;; Tracked objects:
  8871 ;;		On entry : 3F/0
  8872 ;;		On exit  : 0/0
  8873 ;;		Unchanged: 0/0
  8874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8875 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8876 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8877 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8878 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8879 ;;Total ram usage:        5 bytes
  8880 ;; Hardware stack levels used: 1
  8881 ;; Hardware stack levels required when called: 15
  8882 ;; This function calls:
  8883 ;;		_GetOpenOrder
  8884 ;;		_SetSegmentValueIntermitent
  8885 ;;		_WaitPreFlash
  8886 ;;		_actionZone_Closed
  8887 ;;		_actionZone_Closing
  8888 ;;		_actionZone_Opened
  8889 ;;		_actionZone_Opening
  8890 ;;		_sm_execute_ControlLearning
  8891 ;;		_sm_send_event
  8892 ;; This function is called by:
  8893 ;;		_main
  8894 ;; This function uses a non-reentrant model
  8895 ;;
  8896                           
  8897                           	psect	text17
  8898  004048                     __ptext17:
  8899                           	callstack 0
  8900  004048                     _sm_execute_ControlGate:
  8901                           	callstack 15
  8902                           
  8903                           ; BSR set to: 0
  8904                           ;sm_ControlGate_MC50.c: 129:     TypeCMD typeOpenOrder;;sm_ControlGate_MC50.c: 133:     
      +                          if ( (main_stateMachine.current_state == st_MenuConfiguration) && (menuConfiguration_sta
      +                          teMachine.current_state != st_LearningMode) )
  8905                           
  8906                           ;incstack = 0
  8907  004048  0101               	movlb	1	; () banked
  8908  00404A  05F2               	decf	_main_stateMachine& (0+255),w,b
  8909  00404C  11F3               	iorwf	(_main_stateMachine+1)& (0+255),w,b
  8910  00404E  A4D8               	btfss	status,2,c
  8911  004050  D006               	goto	l25873
  8912                           
  8913                           ; BSR set to: 1
  8914  004052  0E06               	movlw	6
  8915  004054  0102               	movlb	2	; () banked
  8916  004056  19BB               	xorwf	_menuConfiguration_stateMachine& (0+255),w,b
  8917  004058  11BC               	iorwf	(_menuConfiguration_stateMachine+1)& (0+255),w,b
  8918  00405A  A4D8               	btfss	status,2,c
  8919  00405C  0012               	return	
  8920  00405E                     l25873:
  8921                           
  8922                           ;sm_ControlGate_MC50.c: 137:         if (var_sys.preflashingcontrol == YES){
  8923  00405E  0101               	movlb	1	; () banked
  8924  004060  051D               	decf	(_var_sys+29)& (0+255),w,b	;volatile
  8925  004062  A4D8               	btfss	status,2,c
  8926  004064  D0CE               	goto	l25947
  8927                           
  8928                           ; BSR set to: 1
  8929                           ;sm_ControlGate_MC50.c: 139:         WaitPreFlash();
  8930  004066  ECC2  F043         	call	_WaitPreFlash	;wreg free
  8931  00406A  D0CB               	goto	l25947
  8932  00406C                     l25877:
  8933                           
  8934                           ; BSR set to: 0
  8935                           ;sm_ControlGate_MC50.c: 145:         {;sm_ControlGate_MC50.c: 148:             if (psm->
      +                          last_event == ev_GateClosed) {
  8936  00406C  EE20 F004          	lfsr	2,4
  8937  004070  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  8938  004072  26D9               	addwf	fsr2l,f,c
  8939  004074  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  8940  004076  22DA               	addwfc	fsr2h,f,c
  8941  004078  0E0A               	movlw	10
  8942  00407A  18DE               	xorwf	postinc2,w,c
  8943  00407C  10DE               	iorwf	postinc2,w,c
  8944  00407E  A4D8               	btfss	status,2,c
  8945  004080  D006               	goto	l25881
  8946  004082                     u32800:
  8947                           
  8948                           ; BSR set to: 0
  8949                           ;sm_ControlGate_MC50.c: 149:                 psm->current_state = st_Closed;
  8950  004082  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  8951  004086  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  8952  00408A  0E01               	movlw	1
  8953  00408C  D0B5               	goto	L55
  8954  00408E                     l25881:
  8955                           
  8956                           ; BSR set to: 0
  8957  00408E  EE20 F004          	lfsr	2,4
  8958  004092  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  8959  004094  26D9               	addwf	fsr2l,f,c
  8960  004096  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  8961  004098  22DA               	addwfc	fsr2h,f,c
  8962  00409A  0E0B               	movlw	11
  8963  00409C  18DE               	xorwf	postinc2,w,c
  8964  00409E  10DE               	iorwf	postinc2,w,c
  8965  0040A0  A4D8               	btfss	status,2,c
  8966  0040A2  D0CF               	goto	l25949
  8967  0040A4  D038               	goto	u32870
  8968  0040A6                     l25885:
  8969                           
  8970                           ; BSR set to: 0
  8971                           ;sm_ControlGate_MC50.c: 160:         {;sm_ControlGate_MC50.c: 161:             if (psm->
      +                          last_event == ev_OpenGate) {
  8972  0040A6  EE20 F004          	lfsr	2,4
  8973  0040AA  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  8974  0040AC  26D9               	addwf	fsr2l,f,c
  8975  0040AE  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  8976  0040B0  22DA               	addwfc	fsr2h,f,c
  8977  0040B2  0E0C               	movlw	12
  8978  0040B4  18DE               	xorwf	postinc2,w,c
  8979  0040B6  10DE               	iorwf	postinc2,w,c
  8980  0040B8  A4D8               	btfss	status,2,c
  8981  0040BA  D072               	goto	l25933
  8982  0040BC                     u32820:
  8983                           
  8984                           ; BSR set to: 0
  8985                           ;sm_ControlGate_MC50.c: 162:                 psm->current_state = st_Opening;
  8986  0040BC  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  8987  0040C0  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  8988  0040C4  0E02               	movlw	2
  8989  0040C6  D098               	goto	L55
  8990  0040C8                     l25893:
  8991                           
  8992                           ; BSR set to: 0
  8993                           ;sm_ControlGate_MC50.c: 169:         {;sm_ControlGate_MC50.c: 170:             if (psm->
      +                          last_event == ev_StopGate) {
  8994  0040C8  EE20 F004          	lfsr	2,4
  8995  0040CC  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  8996  0040CE  26D9               	addwf	fsr2l,f,c
  8997  0040D0  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  8998  0040D2  22DA               	addwfc	fsr2h,f,c
  8999  0040D4  0E0D               	movlw	13
  9000  0040D6  18DE               	xorwf	postinc2,w,c
  9001  0040D8  10DE               	iorwf	postinc2,w,c
  9002  0040DA  B4D8               	btfsc	status,2,c
  9003  0040DC  D01C               	goto	u32870
  9004                           
  9005                           ; BSR set to: 0
  9006                           
  9007                           ;sm_ControlGate_MC50.c: 172:             } else if (psm->last_event == ev_CloseGate) {
  9008                           
  9009                           ; BSR set to: 0
  9010                           ;sm_ControlGate_MC50.c: 171:                 psm->current_state = st_Opened;
  9011  0040DE  EE20 F004          	lfsr	2,4
  9012  0040E2  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9013  0040E4  26D9               	addwf	fsr2l,f,c
  9014  0040E6  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9015  0040E8  22DA               	addwfc	fsr2h,f,c
  9016  0040EA  0E0E               	movlw	14
  9017  0040EC  18DE               	xorwf	postinc2,w,c
  9018  0040EE  10DE               	iorwf	postinc2,w,c
  9019  0040F0  A4D8               	btfss	status,2,c
  9020  0040F2  D02D               	goto	L129
  9021  0040F4                     u32850:
  9022                           
  9023                           ; BSR set to: 0
  9024                           ;sm_ControlGate_MC50.c: 173:                 psm->current_state = st_Closing;
  9025  0040F4  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9026  0040F8  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9027  0040FC  0E03               	movlw	3
  9028  0040FE  D07C               	goto	L55
  9029  004100                     l25905:
  9030                           
  9031                           ; BSR set to: 0
  9032                           ;sm_ControlGate_MC50.c: 180:         {;sm_ControlGate_MC50.c: 181:             if (psm->
      +                          last_event == ev_StopGate) {
  9033  004100  EE20 F004          	lfsr	2,4
  9034  004104  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9035  004106  26D9               	addwf	fsr2l,f,c
  9036  004108  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9037  00410A  22DA               	addwfc	fsr2h,f,c
  9038  00410C  0E0D               	movlw	13
  9039  00410E  18DE               	xorwf	postinc2,w,c
  9040  004110  10DE               	iorwf	postinc2,w,c
  9041  004112  A4D8               	btfss	status,2,c
  9042  004114  D006               	goto	l25909
  9043  004116                     u32870:
  9044                           
  9045                           ; BSR set to: 0
  9046                           ;sm_ControlGate_MC50.c: 182:                 psm->current_state = st_Opened;
  9047  004116  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9048  00411A  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9049  00411E  0E04               	movlw	4
  9050  004120  D06B               	goto	L55
  9051  004122                     l25909:
  9052                           
  9053                           ; BSR set to: 0
  9054  004122  EE20 F004          	lfsr	2,4
  9055  004126  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9056  004128  26D9               	addwf	fsr2l,f,c
  9057  00412A  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9058  00412C  22DA               	addwfc	fsr2h,f,c
  9059  00412E  0E0F               	movlw	15
  9060  004130  18DE               	xorwf	postinc2,w,c
  9061  004132  10DE               	iorwf	postinc2,w,c
  9062  004134  B4D8               	btfsc	status,2,c
  9063  004136  D7A5               	goto	u32800
  9064                           
  9065                           ; BSR set to: 0
  9066                           
  9067                           ;sm_ControlGate_MC50.c: 185:             } else if (psm->last_event == ev_OpenGate) {
  9068                           
  9069                           ; BSR set to: 0
  9070                           ;sm_ControlGate_MC50.c: 184:                 psm->current_state = st_Closed;
  9071  004138  EE20 F004          	lfsr	2,4
  9072  00413C  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9073  00413E  26D9               	addwf	fsr2l,f,c
  9074  004140  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9075  004142  22DA               	addwfc	fsr2h,f,c
  9076  004144  0E0C               	movlw	12
  9077  004146  18DE               	xorwf	postinc2,w,c
  9078  004148  10DE               	iorwf	postinc2,w,c
  9079  00414A  B4D8               	btfsc	status,2,c
  9080  00414C  D7B7               	goto	u32820
  9081  00414E                     L129:
  9082                           
  9083                           ; BSR set to: 0
  9084                           
  9085                           ;sm_ControlGate_MC50.c: 187:             } else if (psm->last_event == ev_ErrorGate) {
  9086                           
  9087                           ; BSR set to: 0
  9088                           ;sm_ControlGate_MC50.c: 186:                 psm->current_state = st_Opening;
  9089  00414E  EE20 F004          	lfsr	2,4
  9090  004152  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9091  004154  26D9               	addwf	fsr2l,f,c
  9092  004156  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9093  004158  22DA               	addwfc	fsr2h,f,c
  9094  00415A  0E10               	movlw	16
  9095  00415C  D044               	goto	L126
  9096  00415E                     l25921:
  9097                           
  9098                           ; BSR set to: 0
  9099                           ;sm_ControlGate_MC50.c: 193:         {;sm_ControlGate_MC50.c: 194:             if (psm->
      +                          last_event == ev_CloseGate) {
  9100  00415E  EE20 F004          	lfsr	2,4
  9101  004162  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9102  004164  26D9               	addwf	fsr2l,f,c
  9103  004166  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9104  004168  22DA               	addwfc	fsr2h,f,c
  9105  00416A  0E0E               	movlw	14
  9106  00416C  18DE               	xorwf	postinc2,w,c
  9107  00416E  10DE               	iorwf	postinc2,w,c
  9108  004170  B4D8               	btfsc	status,2,c
  9109  004172  D7C0               	goto	u32850
  9110                           
  9111                           ; BSR set to: 0
  9112                           
  9113                           ;sm_ControlGate_MC50.c: 196:             } else if (psm->last_event == ev_OpenGate) {
  9114                           
  9115                           ; BSR set to: 0
  9116                           ;sm_ControlGate_MC50.c: 195:                 psm->current_state = st_Closing;
  9117  004174  EE20 F004          	lfsr	2,4
  9118  004178  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9119  00417A  26D9               	addwf	fsr2l,f,c
  9120  00417C  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9121  00417E  22DA               	addwfc	fsr2h,f,c
  9122  004180  0E0C               	movlw	12
  9123  004182  18DE               	xorwf	postinc2,w,c
  9124  004184  10DE               	iorwf	postinc2,w,c
  9125  004186  B4D8               	btfsc	status,2,c
  9126  004188  D799               	goto	u32820
  9127                           
  9128                           ; BSR set to: 0
  9129                           
  9130                           ;sm_ControlGate_MC50.c: 198:             } else if (psm->last_event == ev_ErrorGate) {
  9131                           
  9132                           ; BSR set to: 0
  9133                           ;sm_ControlGate_MC50.c: 197:                 psm->current_state = st_Opening;
  9134  00418A  EE20 F004          	lfsr	2,4
  9135  00418E  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9136  004190  26D9               	addwf	fsr2l,f,c
  9137  004192  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9138  004194  22DA               	addwfc	fsr2h,f,c
  9139  004196  0E10               	movlw	16
  9140  004198  18DE               	xorwf	postinc2,w,c
  9141  00419A  10DE               	iorwf	postinc2,w,c
  9142  00419C  B4D8               	btfsc	status,2,c
  9143  00419E  D027               	goto	L127
  9144  0041A0                     l25933:
  9145                           
  9146                           ; BSR set to: 0
  9147  0041A0  EE20 F004          	lfsr	2,4
  9148  0041A4  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9149  0041A6  26D9               	addwf	fsr2l,f,c
  9150  0041A8  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9151  0041AA  22DA               	addwfc	fsr2h,f,c
  9152  0041AC  0E14               	movlw	20
  9153  0041AE  18DE               	xorwf	postinc2,w,c
  9154  0041B0  10DE               	iorwf	postinc2,w,c
  9155  0041B2  A4D8               	btfss	status,2,c
  9156  0041B4  D046               	goto	l25949
  9157                           
  9158                           ; BSR set to: 0
  9159                           ;sm_ControlGate_MC50.c: 205:                 psm->current_state = st_Learning;
  9160  0041B6  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9161  0041BA  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9162  0041BE  0E05               	movlw	5
  9163  0041C0  D01B               	goto	L55
  9164  0041C2                     l25937:
  9165                           
  9166                           ; BSR set to: 0
  9167                           ;sm_ControlGate_MC50.c: 217:         {;sm_ControlGate_MC50.c: 218:             if (psm->
      +                          last_event == ev_LearningComplete) {
  9168  0041C2  EE20 F004          	lfsr	2,4
  9169  0041C6  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9170  0041C8  26D9               	addwf	fsr2l,f,c
  9171  0041CA  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9172  0041CC  22DA               	addwfc	fsr2h,f,c
  9173  0041CE  0E13               	movlw	19
  9174  0041D0  18DE               	xorwf	postinc2,w,c
  9175  0041D2  10DE               	iorwf	postinc2,w,c
  9176  0041D4  B4D8               	btfsc	status,2,c
  9177  0041D6  D755               	goto	u32800
  9178                           
  9179                           ; BSR set to: 0
  9180                           
  9181                           ;sm_ControlGate_MC50.c: 220:             } else if (psm->last_event == ev_ErrorLearning)
      +                           {
  9182                           
  9183                           ; BSR set to: 0
  9184                           ;sm_ControlGate_MC50.c: 219:                 psm->current_state = st_Closed;
  9185  0041D8  EE20 F004          	lfsr	2,4
  9186  0041DC  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9187  0041DE  26D9               	addwf	fsr2l,f,c
  9188  0041E0  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9189  0041E2  22DA               	addwfc	fsr2h,f,c
  9190  0041E4  0E12               	movlw	18
  9191  0041E6                     L126:
  9192  0041E6  18DE               	xorwf	postinc2,w,c
  9193  0041E8  10DE               	iorwf	postinc2,w,c
  9194  0041EA  A4D8               	btfss	status,2,c
  9195  0041EC  D02A               	goto	l25949
  9196  0041EE                     L127:
  9197                           
  9198                           ; BSR set to: 0
  9199                           ;sm_ControlGate_MC50.c: 221:                 psm->current_state = st_Idle;
  9200  0041EE  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9201  0041F2  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9202  0041F6  0E00               	movlw	0
  9203  0041F8                     L55:
  9204  0041F8  6EDE               	movwf	postinc2,c
  9205  0041FA  0E00               	movlw	0
  9206  0041FC  6EDD               	movwf	postdec2,c
  9207  0041FE  D021               	goto	l25949
  9208  004200                     l2653:
  9209                           
  9210                           ; BSR set to: 0
  9211  004200  D7FF               	goto	l2653
  9212  004202                     l25947:
  9213                           
  9214                           ; BSR set to: 1
  9215  004202  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9216  004206  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9217  00420A  50DF               	movf	indf2,w,c
  9218  00420C  0100               	movlb	0	; () banked
  9219  00420E  6FE9               	movwf	??_sm_execute_ControlGate& (0+255),b
  9220  004210  6BEA               	clrf	(??_sm_execute_ControlGate+1)& (0+255),b
  9221                           
  9222                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9223                           ; Switch size 1, requested type "simple"
  9224                           ; Number of cases is 1, Range of values is 0 to 0
  9225                           ; switch strategies available:
  9226                           ; Name         Instructions Cycles
  9227                           ; simple_byte            4     3 (average)
  9228                           ;	Chosen strategy is simple_byte
  9229  004212  51EA               	movf	(??_sm_execute_ControlGate+1)& (0+255),w,b
  9230  004214  0A00               	xorlw	0	; case 0
  9231  004216  A4D8               	btfss	status,2,c
  9232  004218  D7F3               	goto	l2653
  9233                           
  9234                           ; BSR set to: 0
  9235                           ; Switch size 1, requested type "simple"
  9236                           ; Number of cases is 6, Range of values is 0 to 5
  9237                           ; switch strategies available:
  9238                           ; Name         Instructions Cycles
  9239                           ; simple_byte           19    10 (average)
  9240                           ;	Chosen strategy is simple_byte
  9241  00421A  51E9               	movf	??_sm_execute_ControlGate& (0+255),w,b
  9242  00421C  0A00               	xorlw	0	; case 0
  9243  00421E  B4D8               	btfsc	status,2,c
  9244  004220  D725               	goto	l25877
  9245  004222  0A01               	xorlw	1	; case 1
  9246  004224  B4D8               	btfsc	status,2,c
  9247  004226  D73F               	goto	l25885
  9248  004228  0A03               	xorlw	3	; case 2
  9249  00422A  B4D8               	btfsc	status,2,c
  9250  00422C  D74D               	goto	l25893
  9251  00422E  0A01               	xorlw	1	; case 3
  9252  004230  B4D8               	btfsc	status,2,c
  9253  004232  D766               	goto	l25905
  9254  004234  0A07               	xorlw	7	; case 4
  9255  004236  B4D8               	btfsc	status,2,c
  9256  004238  D792               	goto	l25921
  9257  00423A  0A01               	xorlw	1	; case 5
  9258  00423C  B4D8               	btfsc	status,2,c
  9259  00423E  D7C1               	goto	l25937
  9260  004240  D7DF               	goto	l2653
  9261  004242                     l25949:
  9262                           
  9263                           ; BSR set to: 0
  9264                           ;sm_ControlGate_MC50.c: 234:     sm_send_event(&controlGate_stateMachine, ev_NULL);
  9265  004242  0EE7               	movlw	low _controlGate_stateMachine
  9266  004244  6E12               	movwf	sm_send_event@psm^0,c
  9267  004246  0E01               	movlw	high _controlGate_stateMachine
  9268  004248  6E13               	movwf	(sm_send_event@psm+1)^0,c
  9269  00424A  0E00               	movlw	0
  9270  00424C  6E15               	movwf	(sm_send_event@event+1)^0,c
  9271  00424E  0E00               	movlw	0
  9272  004250  6E14               	movwf	sm_send_event@event^0,c
  9273  004252  ECD5  F045         	call	_sm_send_event	;wreg free
  9274                           
  9275                           ;sm_ControlGate_MC50.c: 239:     switch ((sm_state_ControlGate_t) psm->current_state) {
  9276  004256  D07D               	goto	l26013
  9277  004258                     l25951:
  9278                           
  9279                           ; BSR set to: 0
  9280                           ;sm_ControlGate_MC50.c: 241:         {;sm_ControlGate_MC50.c: 244:             ts_system
      +                          .TimeStopADCZeroOffsetCalc = (5 * (1000/50));
  9281  004258  0E00               	movlw	0
  9282  00425A  0101               	movlb	1	; () banked
  9283  00425C  6FDE               	movwf	(_ts_system+63)& (0+255),b	;volatile
  9284  00425E  0E64               	movlw	100
  9285  004260  6FDD               	movwf	(_ts_system+62)& (0+255),b	;volatile
  9286                           
  9287                           ;sm_ControlGate_MC50.c: 247:             var_sys.PositionIsLost = YES;
  9288  004262  0E01               	movlw	1
  9289  004264  6F48               	movwf	(_var_sys+72)& (0+255),b	;volatile
  9290                           
  9291                           ; BSR set to: 1
  9292                           ;sm_ControlGate_MC50.c: 248:             if (var_sys.WorkTimeMaxAlarmState == EmAlarme |
      +                          | var_sys.NumberOffErrors > 3)
  9293  004266  0E02               	movlw	2
  9294  004268  1942               	xorwf	(_var_sys+66)& (0+255),w,b	;volatile
  9295  00426A  B4D8               	btfsc	status,2,c
  9296  00426C  D003               	goto	u32980
  9297                           
  9298                           ; BSR set to: 1
  9299  00426E  0E03               	movlw	3
  9300  004270  6543               	cpfsgt	(_var_sys+67)& (0+255),b	;volatile
  9301  004272  D027               	goto	l25973
  9302  004274                     u32980:
  9303                           
  9304                           ; BSR set to: 1
  9305                           ;sm_ControlGate_MC50.c: 249:             {;sm_ControlGate_MC50.c: 252:                 t
      +                          ypeOpenOrder = GetOpenOrder();
  9306  004274  ECA6  F02D         	call	_GetOpenOrder	;wreg free
  9307  004278  0100               	movlb	0	; () banked
  9308  00427A  6FEB               	movwf	sm_execute_ControlGate@typeOpenOrder& (0+255),b
  9309                           
  9310                           ; BSR set to: 0
  9311                           ;sm_ControlGate_MC50.c: 253:                 SetSegmentValueIntermitent(dE,dr, (1000/50)
      +                          );
  9312  00427C  0E14               	movlw	20
  9313  00427E  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
  9314  004280  0E00               	movlw	0
  9315  004282  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
  9316  004284  0E14               	movlw	20
  9317  004286  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
  9318  004288  0E0E               	movlw	14
  9319  00428A  EC93  F04A         	call	_SetSegmentValueIntermitent
  9320                           
  9321                           ; BSR set to: 1
  9322                           ;sm_ControlGate_MC50.c: 254:                 ts_system.timeSinalizationDigit = ( 500/50)
      +                          ;
  9323  00428E  0E00               	movlw	0
  9324  004290  6FAC               	movwf	(_ts_system+13)& (0+255),b	;volatile
  9325  004292  0E0A               	movlw	10
  9326  004294  6FAB               	movwf	(_ts_system+12)& (0+255),b	;volatile
  9327                           
  9328                           ; BSR set to: 1
  9329                           ;sm_ControlGate_MC50.c: 255:                 if ((typeOpenOrder != NoCMD) ||(button_stru
      +                          ct.current==0 || button_struct.current==0x00 ||button_struct.current==0x17 ))
  9330  004296  0100               	movlb	0	; () banked
  9331  004298  51EB               	movf	sm_execute_ControlGate@typeOpenOrder& (0+255),w,b
  9332  00429A  A4D8               	btfss	status,2,c
  9333  00429C  D00A               	goto	u33020
  9334                           
  9335                           ; BSR set to: 0
  9336  00429E  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  9337  0042A0  B4D8               	btfsc	status,2,c
  9338  0042A2  D007               	goto	u33020
  9339                           
  9340                           ; BSR set to: 0
  9341  0042A4  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  9342  0042A6  B4D8               	btfsc	status,2,c
  9343  0042A8  D004               	goto	u33020
  9344                           
  9345                           ; BSR set to: 0
  9346  0042AA  0E17               	movlw	23
  9347  0042AC  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  9348  0042AE  A4D8               	btfss	status,2,c
  9349  0042B0  0012               	return	
  9350  0042B2                     u33020:
  9351                           
  9352                           ; BSR set to: 0
  9353                           ;sm_ControlGate_MC50.c: 256:                 {;sm_ControlGate_MC50.c: 257:              
      +                                 var_sys.WorkTimeMaxAlarmState = Clear;
  9354  0042B2  0E00               	movlw	0
  9355  0042B4  0101               	movlb	1	; () banked
  9356  0042B6  6F42               	movwf	(_var_sys+66)& (0+255),b	;volatile
  9357                           
  9358                           ;sm_ControlGate_MC50.c: 258:                     var_sys.NumberOffErrors = 0;
  9359  0042B8  0E00               	movlw	0
  9360  0042BA  6F43               	movwf	(_var_sys+67)& (0+255),b	;volatile
  9361                           
  9362                           ;sm_ControlGate_MC50.c: 259:                     button_struct.processed=1;
  9363  0042BC  0E01               	movlw	1
  9364  0042BE  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  9365  0042C0  0012               	return	
  9366  0042C2                     l25973:
  9367                           
  9368                           ; BSR set to: 1
  9369                           ;sm_ControlGate_MC50.c: 264:             {;sm_ControlGate_MC50.c: 267:                  
      +                             var_sys.Statedoorcontrol = st_Closed;
  9370  0042C2  0E01               	movlw	1
  9371  0042C4  6F1C               	movwf	(_var_sys+28)& (0+255),b	;volatile
  9372                           
  9373                           ; BSR set to: 1
  9374                           ;sm_ControlGate_MC50.c: 268:                     var_sys.actualCounterMoves++;
  9375  0042C6  0E01               	movlw	1
  9376  0042C8  273C               	addwf	(_var_sys+60)& (0+255),f,b	;volatile
  9377  0042CA  0E00               	movlw	0
  9378  0042CC  233D               	addwfc	(_var_sys+61)& (0+255),f,b	;volatile
  9379  0042CE  233E               	addwfc	(_var_sys+62)& (0+255),f,b	;volatile
  9380  0042D0  233F               	addwfc	(_var_sys+63)& (0+255),f,b	;volatile
  9381                           
  9382                           ; BSR set to: 1
  9383                           ;sm_ControlGate_MC50.c: 269:                     var_sys.Timewalkisactived = 0;
  9384  0042D2  0E00               	movlw	0
  9385  0042D4  6F4A               	movwf	(_var_sys+74)& (0+255),b	;volatile
  9386                           
  9387                           ; BSR set to: 1
  9388                           ;sm_ControlGate_MC50.c: 270:                     var_sys.PositionActual = 0;
  9389  0042D6  0E00               	movlw	0
  9390  0042D8  6F1E               	movwf	(_var_sys+30)& (0+255),b	;volatile
  9391  0042DA  0E00               	movlw	0
  9392  0042DC  6F1F               	movwf	(_var_sys+31)& (0+255),b	;volatile
  9393  0042DE  0E00               	movlw	0
  9394  0042E0  6F20               	movwf	(_var_sys+32)& (0+255),b	;volatile
  9395  0042E2  0E00               	movlw	0
  9396  0042E4  6F21               	movwf	(_var_sys+33)& (0+255),b	;volatile
  9397                           
  9398                           ; BSR set to: 1
  9399                           ;sm_ControlGate_MC50.c: 272:                     var_sys.PositionIsLost = NO;
  9400  0042E6  0E00               	movlw	0
  9401  0042E8  6F48               	movwf	(_var_sys+72)& (0+255),b	;volatile
  9402                           
  9403                           ; BSR set to: 1
  9404                           ;sm_ControlGate_MC50.c: 273:                     var_sys.NumberOffErrors = 0;
  9405  0042EA  0E00               	movlw	0
  9406  0042EC  6F43               	movwf	(_var_sys+67)& (0+255),b	;volatile
  9407                           
  9408                           ; BSR set to: 1
  9409                           ;sm_ControlGate_MC50.c: 274:                     var_sys.StateMotor = Stopped;
  9410  0042EE  0E00               	movlw	0
  9411  0042F0  6F00               	movwf	_var_sys& (0+255),b	;volatile
  9412                           
  9413                           ; BSR set to: 1
  9414                           ;sm_ControlGate_MC50.c: 276:                     ts_system.timeSinalizationDigit = (1000
      +                          /50) * 2;
  9415  0042F2  0E00               	movlw	0
  9416  0042F4  6FAC               	movwf	(_ts_system+13)& (0+255),b	;volatile
  9417  0042F6  0E28               	movlw	40
  9418  0042F8  6FAB               	movwf	(_ts_system+12)& (0+255),b	;volatile
  9419                           
  9420                           ; BSR set to: 1
  9421                           ;sm_ControlGate_MC50.c: 277:                     SetSegmentValueIntermitent(dF, dC, ( 20
      +                          0/50));
  9422  0042FA  0E0C               	movlw	12
  9423  0042FC  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
  9424  0042FE  0E00               	movlw	0
  9425  004300  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
  9426  004302  0E04               	movlw	4
  9427  004304  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
  9428  004306  0E0F               	movlw	15
  9429  004308  EC93  F04A         	call	_SetSegmentValueIntermitent
  9430                           
  9431                           ; BSR set to: 1
  9432                           ;sm_ControlGate_MC50.c: 278:                     sm_send_event(&controlGate_stateMachine
      +                          , ev_GateClosed);
  9433  00430C  0EE7               	movlw	low _controlGate_stateMachine
  9434  00430E  6E12               	movwf	sm_send_event@psm^0,c
  9435  004310  0E01               	movlw	high _controlGate_stateMachine
  9436  004312  6E13               	movwf	(sm_send_event@psm+1)^0,c
  9437  004314  0E00               	movlw	0
  9438  004316  6E15               	movwf	(sm_send_event@event+1)^0,c
  9439  004318  0E0A               	movlw	10
  9440  00431A  6E14               	movwf	sm_send_event@event^0,c
  9441  00431C  ECD5  F045         	call	_sm_send_event	;wreg free
  9442  004320  0012               	return	
  9443  004322                     l25993:
  9444                           
  9445                           ; BSR set to: 0
  9446                           ;sm_ControlGate_MC50.c: 285:         {;sm_ControlGate_MC50.c: 287:             actionZon
      +                          e_Closed();
  9447  004322  EC98  F03D         	call	_actionZone_Closed	;wreg free
  9448                           
  9449                           ;sm_ControlGate_MC50.c: 288:         };sm_ControlGate_MC50.c: 289:             break;
  9450  004326  0012               	return	
  9451  004328                     l25995:
  9452                           
  9453                           ; BSR set to: 0
  9454                           ;sm_ControlGate_MC50.c: 291:         {;sm_ControlGate_MC50.c: 293:             actionZon
      +                          e_Opening();
  9455  004328  EC57  F027         	call	_actionZone_Opening	;wreg free
  9456  00432C                     l25997:
  9457                           
  9458                           ;sm_ControlGate_MC50.c: 295:             ts_system.TimeStopADCZeroOffsetCalc = (5 * (100
      +                          0/50));
  9459  00432C  0E00               	movlw	0
  9460  00432E  0101               	movlb	1	; () banked
  9461  004330  6FDE               	movwf	(_ts_system+63)& (0+255),b	;volatile
  9462  004332  0E64               	movlw	100
  9463  004334  6FDD               	movwf	(_ts_system+62)& (0+255),b	;volatile
  9464                           
  9465                           ;sm_ControlGate_MC50.c: 296:         };sm_ControlGate_MC50.c: 297:             break;
  9466  004336  0012               	return	
  9467  004338                     l25999:
  9468                           
  9469                           ; BSR set to: 0
  9470                           ;sm_ControlGate_MC50.c: 299:         {;sm_ControlGate_MC50.c: 301:             actionZon
      +                          e_Opened();
  9471  004338  ECC6  F02B         	call	_actionZone_Opened	;wreg free
  9472  00433C  D7F7               	goto	l25997
  9473  00433E                     l26003:
  9474                           
  9475                           ; BSR set to: 0
  9476                           ;sm_ControlGate_MC50.c: 307:         {;sm_ControlGate_MC50.c: 309:             actionZon
      +                          e_Closing();
  9477  00433E  ECD6  F024         	call	_actionZone_Closing	;wreg free
  9478  004342  D7F4               	goto	l25997
  9479  004344                     l26007:
  9480                           
  9481                           ; BSR set to: 0
  9482                           ;sm_ControlGate_MC50.c: 315:         {;sm_ControlGate_MC50.c: 316:             sm_execut
      +                          e_ControlLearning(&controlLearning_stateMachine);
  9483  004344  0EB0               	movlw	low _controlLearning_stateMachine
  9484  004346  6FDC               	movwf	sm_execute_ControlLearning@psm& (0+255),b
  9485  004348  0E02               	movlw	high _controlLearning_stateMachine
  9486  00434A  6FDD               	movwf	(sm_execute_ControlLearning@psm+1)& (0+255),b
  9487  00434C  ECE5  F010         	call	_sm_execute_ControlLearning	;wreg free
  9488  004350  D7ED               	goto	l25997
  9489  004352                     l26013:
  9490  004352  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9491  004356  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9492  00435A  50DF               	movf	indf2,w,c
  9493  00435C  0100               	movlb	0	; () banked
  9494  00435E  6FE9               	movwf	??_sm_execute_ControlGate& (0+255),b
  9495  004360  6BEA               	clrf	(??_sm_execute_ControlGate+1)& (0+255),b
  9496                           
  9497                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9498                           ; Switch size 1, requested type "simple"
  9499                           ; Number of cases is 1, Range of values is 0 to 0
  9500                           ; switch strategies available:
  9501                           ; Name         Instructions Cycles
  9502                           ; simple_byte            4     3 (average)
  9503                           ;	Chosen strategy is simple_byte
  9504  004362  51EA               	movf	(??_sm_execute_ControlGate+1)& (0+255),w,b
  9505  004364  0A00               	xorlw	0	; case 0
  9506  004366  A4D8               	btfss	status,2,c
  9507  004368  0012               	return	
  9508                           
  9509                           ; BSR set to: 0
  9510                           ; Switch size 1, requested type "simple"
  9511                           ; Number of cases is 6, Range of values is 0 to 5
  9512                           ; switch strategies available:
  9513                           ; Name         Instructions Cycles
  9514                           ; simple_byte           19    10 (average)
  9515                           ;	Chosen strategy is simple_byte
  9516  00436A  51E9               	movf	??_sm_execute_ControlGate& (0+255),w,b
  9517  00436C  0A00               	xorlw	0	; case 0
  9518  00436E  B4D8               	btfsc	status,2,c
  9519  004370  D773               	goto	l25951
  9520  004372  0A01               	xorlw	1	; case 1
  9521  004374  B4D8               	btfsc	status,2,c
  9522  004376  D7D5               	goto	l25993
  9523  004378  0A03               	xorlw	3	; case 2
  9524  00437A  B4D8               	btfsc	status,2,c
  9525  00437C  D7D5               	goto	l25995
  9526  00437E  0A01               	xorlw	1	; case 3
  9527  004380  B4D8               	btfsc	status,2,c
  9528  004382  D7DD               	goto	l26003
  9529  004384  0A07               	xorlw	7	; case 4
  9530  004386  B4D8               	btfsc	status,2,c
  9531  004388  D7D7               	goto	l25999
  9532  00438A  0A01               	xorlw	1	; case 5
  9533  00438C  A4D8               	btfss	status,2,c
  9534  00438E  0012               	return	
  9535  004390  D7D9               	goto	l26007
  9536  004392                     __end_of_sm_execute_ControlGate:
  9537                           	callstack 0
  9538                           
  9539 ;; *************** function _sm_execute_ControlLearning *****************
  9540 ;; Defined at:
  9541 ;;		line 29 in file "sm_ControlLearning_MC50.c"
  9542 ;; Parameters:    Size  Location     Type
  9543 ;;  psm             2    4[BANK0 ] PTR struct .
  9544 ;;		 -> controlLearning_stateMachine(11), 
  9545 ;; Auto vars:     Size  Location     Type
  9546 ;;  typeOpenOrde    1   57[COMRAM] enum E10372
  9547 ;; Return value:  Size  Location     Type
  9548 ;;                  1    wreg      void 
  9549 ;; Registers used:
  9550 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  9551 ;; Tracked objects:
  9552 ;;		On entry : 3F/0
  9553 ;;		On exit  : 0/0
  9554 ;;		Unchanged: 0/0
  9555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9556 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9557 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9558 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9559 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9560 ;;Total ram usage:        5 bytes
  9561 ;; Hardware stack levels used: 1
  9562 ;; Hardware stack levels required when called: 14
  9563 ;; This function calls:
  9564 ;;		_GetOpenOrder
  9565 ;;		_SaveNVM_VarSystem
  9566 ;;		_calculateMean
  9567 ;;		_clearLearningValue
  9568 ;;		_generateErrorLearnig
  9569 ;;		_sm_send_event
  9570 ;; This function is called by:
  9571 ;;		_sm_execute_ControlGate
  9572 ;; This function uses a non-reentrant model
  9573 ;;
  9574                           
  9575                           	psect	text18
  9576  0021CA                     __ptext18:
  9577                           	callstack 0
  9578  0021CA                     _sm_execute_ControlLearning:
  9579                           	callstack 15
  9580                           
  9581                           ; BSR set to: 0
  9582                           ;sm_ControlLearning_MC50.c: 31:    TypeCMD typeOpenOrder = GetOpenOrder();
  9583                           
  9584                           ;incstack = 0
  9585  0021CA  ECA6  F02D         	call	_GetOpenOrder	;wreg free
  9586  0021CE  6E3A               	movwf	sm_execute_ControlLearning@typeOpenOrder^0,c
  9587                           
  9588                           ;sm_ControlLearning_MC50.c: 33:     switch((sm_state_ControlLearning_t) psm->current_sta
      +                          te)
  9589  0021D0  D0B8               	goto	l23541
  9590  0021D2                     l23467:
  9591                           
  9592                           ; BSR set to: 0
  9593                           ;sm_ControlLearning_MC50.c: 36:         {;sm_ControlLearning_MC50.c: 37:              if
      +                          ((psm->last_event==ev_GateClosed)&&(var_sys_NVM.decelarationSensivity != 0)&& (var_sys.p
      +                          rograminAutomatic == 0))
  9594  0021D2  EE20 F004          	lfsr	2,4
  9595  0021D6  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9596  0021D8  26D9               	addwf	fsr2l,f,c
  9597  0021DA  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9598  0021DC  22DA               	addwfc	fsr2h,f,c
  9599  0021DE  0E0A               	movlw	10
  9600  0021E0  18DE               	xorwf	postinc2,w,c
  9601  0021E2  10DE               	iorwf	postinc2,w,c
  9602  0021E4  A4D8               	btfss	status,2,c
  9603  0021E6  D00D               	goto	l23475
  9604                           
  9605                           ; BSR set to: 0
  9606  0021E8  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
  9607  0021EA  B4D8               	btfsc	status,2,c
  9608  0021EC  D00A               	goto	l23475
  9609                           
  9610                           ; BSR set to: 0
  9611  0021EE  0101               	movlb	1	; () banked
  9612  0021F0  512A               	movf	(_var_sys+42)& (0+255),w,b	;volatile
  9613  0021F2  A4D8               	btfss	status,2,c
  9614  0021F4  D006               	goto	l23475
  9615  0021F6                     u27820:
  9616                           
  9617                           ; BSR set to: 1
  9618                           ;sm_ControlLearning_MC50.c: 38:             {;sm_ControlLearning_MC50.c: 39:            
      +                               psm->current_state = st_WaitLearnigOpen;
  9619  0021F6  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
  9620  0021FA  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
  9621  0021FE  0E02               	movlw	2
  9622  002200  D08A               	goto	L66
  9623  002202                     l23475:
  9624  002202  0100               	movlb	0	; () banked
  9625  002204  EE20 F004          	lfsr	2,4
  9626  002208  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9627  00220A  26D9               	addwf	fsr2l,f,c
  9628  00220C  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9629  00220E  22DA               	addwfc	fsr2h,f,c
  9630  002210  0E0A               	movlw	10
  9631  002212  18DE               	xorwf	postinc2,w,c
  9632  002214  10DE               	iorwf	postinc2,w,c
  9633  002216  A4D8               	btfss	status,2,c
  9634  002218  D00D               	goto	l23483
  9635                           
  9636                           ; BSR set to: 0
  9637  00221A  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
  9638  00221C  B4D8               	btfsc	status,2,c
  9639  00221E  D004               	goto	u27850
  9640                           
  9641                           ; BSR set to: 0
  9642  002220  0101               	movlb	1	; () banked
  9643  002222  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
  9644  002224  A4D8               	btfss	status,2,c
  9645  002226  D006               	goto	l23483
  9646  002228                     u27850:
  9647                           
  9648                           ;sm_ControlLearning_MC50.c: 43:             {;sm_ControlLearning_MC50.c: 44:            
      +                               psm->current_state = st_WaitForOpened;
  9649  002228  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
  9650  00222C  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
  9651  002230  0E04               	movlw	4
  9652  002232  D071               	goto	L66
  9653  002234                     l23483:
  9654  002234  0100               	movlb	0	; () banked
  9655  002236  EE20 F004          	lfsr	2,4
  9656  00223A  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9657  00223C  26D9               	addwf	fsr2l,f,c
  9658  00223E  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9659  002240  22DA               	addwfc	fsr2h,f,c
  9660  002242  0E0B               	movlw	11
  9661  002244  18DE               	xorwf	postinc2,w,c
  9662  002246  10DE               	iorwf	postinc2,w,c
  9663  002248  A4D8               	btfss	status,2,c
  9664  00224A  D09B               	goto	l23543
  9665                           
  9666                           ; BSR set to: 0
  9667                           ;sm_ControlLearning_MC50.c: 47:             {;sm_ControlLearning_MC50.c: 48:            
      +                               psm->current_state = st_WaitForClosed;
  9668  00224C  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
  9669  002250  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
  9670  002254  0E01               	movlw	1
  9671  002256  D05F               	goto	L66
  9672  002258                     l23487:
  9673                           
  9674                           ; BSR set to: 0
  9675                           ;sm_ControlLearning_MC50.c: 53:         {;sm_ControlLearning_MC50.c: 54:             if(
      +                          (psm->last_event==ev_GateClosed)&&(var_sys_NVM.decelarationSensivity != 0) && (var_sys.p
      +                          rograminAutomatic == 0))
  9676  002258  EE20 F004          	lfsr	2,4
  9677  00225C  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9678  00225E  26D9               	addwf	fsr2l,f,c
  9679  002260  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9680  002262  22DA               	addwfc	fsr2h,f,c
  9681  002264  0E0A               	movlw	10
  9682  002266  18DE               	xorwf	postinc2,w,c
  9683  002268  10DE               	iorwf	postinc2,w,c
  9684  00226A  A4D8               	btfss	status,2,c
  9685  00226C  D007               	goto	l23495
  9686                           
  9687                           ; BSR set to: 0
  9688  00226E  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
  9689  002270  B4D8               	btfsc	status,2,c
  9690  002272  D004               	goto	l23495
  9691                           
  9692                           ; BSR set to: 0
  9693  002274  0101               	movlb	1	; () banked
  9694  002276  512A               	movf	(_var_sys+42)& (0+255),w,b	;volatile
  9695  002278  B4D8               	btfsc	status,2,c
  9696  00227A  D7BD               	goto	u27820
  9697  00227C                     l23495:
  9698  00227C  0100               	movlb	0	; () banked
  9699  00227E  EE20 F004          	lfsr	2,4
  9700  002282  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9701  002284  26D9               	addwf	fsr2l,f,c
  9702  002286  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9703  002288  22DA               	addwfc	fsr2h,f,c
  9704  00228A  0E0A               	movlw	10
  9705  00228C  18DE               	xorwf	postinc2,w,c
  9706  00228E  10DE               	iorwf	postinc2,w,c
  9707  002290  A4D8               	btfss	status,2,c
  9708  002292  D007               	goto	l23503
  9709                           
  9710                           ; BSR set to: 0
  9711  002294  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
  9712  002296  B4D8               	btfsc	status,2,c
  9713  002298  D7C7               	goto	u27850
  9714                           
  9715                           ; BSR set to: 0
  9716  00229A  0101               	movlb	1	; () banked
  9717  00229C  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
  9718  00229E  B4D8               	btfsc	status,2,c
  9719  0022A0  D7C3               	goto	u27850
  9720  0022A2                     l23503:
  9721  0022A2  0100               	movlb	0	; () banked
  9722  0022A4                     L68:
  9723  0022A4  EE20 F004          	lfsr	2,4
  9724  0022A8  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9725  0022AA  26D9               	addwf	fsr2l,f,c
  9726  0022AC  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9727  0022AE  22DA               	addwfc	fsr2h,f,c
  9728  0022B0  0E10               	movlw	16
  9729  0022B2  18DE               	xorwf	postinc2,w,c
  9730  0022B4  10DE               	iorwf	postinc2,w,c
  9731  0022B6  A4D8               	btfss	status,2,c
  9732  0022B8  D064               	goto	l23543
  9733  0022BA  D03C               	goto	L128
  9734  0022BC                     l23507:
  9735                           
  9736                           ; BSR set to: 0
  9737                           ;sm_ControlLearning_MC50.c: 70:         {;sm_ControlLearning_MC50.c: 71:             if(
      +                          psm->last_event==ev_GateOpened)
  9738  0022BC  EE20 F004          	lfsr	2,4
  9739  0022C0  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9740  0022C2  26D9               	addwf	fsr2l,f,c
  9741  0022C4  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9742  0022C6  22DA               	addwfc	fsr2h,f,c
  9743  0022C8  0E0B               	movlw	11
  9744  0022CA  18DE               	xorwf	postinc2,w,c
  9745  0022CC  10DE               	iorwf	postinc2,w,c
  9746  0022CE  A4D8               	btfss	status,2,c
  9747  0022D0  D7E9               	goto	L68
  9748                           
  9749                           ; BSR set to: 0
  9750                           ;sm_ControlLearning_MC50.c: 72:             {;sm_ControlLearning_MC50.c: 73:            
      +                               psm->current_state = st_WaitLearnigClose;
  9751  0022D2  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
  9752  0022D6  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
  9753  0022DA  0E03               	movlw	3
  9754  0022DC  D01C               	goto	L66
  9755  0022DE                     l23515:
  9756                           
  9757                           ; BSR set to: 0
  9758                           ;sm_ControlLearning_MC50.c: 82:         {;sm_ControlLearning_MC50.c: 83:             if(
      +                          psm->last_event==ev_GateClosed)
  9759  0022DE  EE20 F004          	lfsr	2,4
  9760  0022E2  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9761  0022E4  26D9               	addwf	fsr2l,f,c
  9762  0022E6  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9763  0022E8  22DA               	addwfc	fsr2h,f,c
  9764  0022EA  0E0A               	movlw	10
  9765  0022EC  18DE               	xorwf	postinc2,w,c
  9766  0022EE  10DE               	iorwf	postinc2,w,c
  9767  0022F0  A4D8               	btfss	status,2,c
  9768  0022F2  D7D8               	goto	L68
  9769  0022F4  D799               	goto	u27850
  9770  0022F6                     l23523:
  9771                           
  9772                           ; BSR set to: 0
  9773                           ;sm_ControlLearning_MC50.c: 94:         {;sm_ControlLearning_MC50.c: 95:             if(
      +                          psm->last_event==ev_GateOpened)
  9774  0022F6  EE20 F004          	lfsr	2,4
  9775  0022FA  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9776  0022FC  26D9               	addwf	fsr2l,f,c
  9777  0022FE  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9778  002300  22DA               	addwfc	fsr2h,f,c
  9779  002302  0E0B               	movlw	11
  9780  002304  18DE               	xorwf	postinc2,w,c
  9781  002306  10DE               	iorwf	postinc2,w,c
  9782  002308  A4D8               	btfss	status,2,c
  9783  00230A  D7CC               	goto	L68
  9784                           
  9785                           ; BSR set to: 0
  9786                           ;sm_ControlLearning_MC50.c: 96:             {;sm_ControlLearning_MC50.c: 97:            
      +                               psm->current_state = st_WaitForEndLearn;
  9787  00230C  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
  9788  002310  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
  9789  002314  0E05               	movlw	5
  9790  002316                     L66:
  9791  002316  6EDE               	movwf	postinc2,c
  9792  002318  0E00               	movlw	0
  9793  00231A  6EDD               	movwf	postdec2,c
  9794  00231C  D032               	goto	l23543
  9795  00231E                     l23531:
  9796                           
  9797                           ; BSR set to: 0
  9798                           ;sm_ControlLearning_MC50.c: 106:         {;sm_ControlLearning_MC50.c: 107:             i
      +                          f(psm->last_event==ev_GateClosed)
  9799  00231E  EE20 F004          	lfsr	2,4
  9800  002322  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9801  002324  26D9               	addwf	fsr2l,f,c
  9802  002326  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9803  002328  22DA               	addwfc	fsr2h,f,c
  9804  00232A  0E0A               	movlw	10
  9805  00232C  18DE               	xorwf	postinc2,w,c
  9806  00232E  10DE               	iorwf	postinc2,w,c
  9807  002330  A4D8               	btfss	status,2,c
  9808  002332  D7B8               	goto	L68
  9809  002334                     L128:
  9810                           
  9811                           ; BSR set to: 0
  9812                           ;sm_ControlLearning_MC50.c: 112:             {;sm_ControlLearning_MC50.c: 113:          
      +                                 psm->current_state = st_InitLearning;
  9813  002334  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
  9814  002338  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
  9815  00233C  0E00               	movlw	0
  9816  00233E  D7EB               	goto	L66
  9817  002340                     l2912:
  9818                           
  9819                           ; BSR set to: 0
  9820  002340  D7FF               	goto	l2912
  9821  002342                     l23541:
  9822  002342  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
  9823  002346  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
  9824  00234A  50DF               	movf	indf2,w,c
  9825  00234C  0100               	movlb	0	; () banked
  9826  00234E  6FDE               	movwf	??_sm_execute_ControlLearning& (0+255),b
  9827  002350  6BDF               	clrf	(??_sm_execute_ControlLearning+1)& (0+255),b
  9828                           
  9829                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9830                           ; Switch size 1, requested type "simple"
  9831                           ; Number of cases is 1, Range of values is 0 to 0
  9832                           ; switch strategies available:
  9833                           ; Name         Instructions Cycles
  9834                           ; simple_byte            4     3 (average)
  9835                           ;	Chosen strategy is simple_byte
  9836  002352  51DF               	movf	(??_sm_execute_ControlLearning+1)& (0+255),w,b
  9837  002354  0A00               	xorlw	0	; case 0
  9838  002356  A4D8               	btfss	status,2,c
  9839  002358  D7F3               	goto	l2912
  9840                           
  9841                           ; BSR set to: 0
  9842                           ; Switch size 1, requested type "simple"
  9843                           ; Number of cases is 6, Range of values is 0 to 5
  9844                           ; switch strategies available:
  9845                           ; Name         Instructions Cycles
  9846                           ; simple_byte           19    10 (average)
  9847                           ;	Chosen strategy is simple_byte
  9848  00235A  51DE               	movf	??_sm_execute_ControlLearning& (0+255),w,b
  9849  00235C  0A00               	xorlw	0	; case 0
  9850  00235E  B4D8               	btfsc	status,2,c
  9851  002360  D738               	goto	l23467
  9852  002362  0A01               	xorlw	1	; case 1
  9853  002364  B4D8               	btfsc	status,2,c
  9854  002366  D778               	goto	l23487
  9855  002368  0A03               	xorlw	3	; case 2
  9856  00236A  B4D8               	btfsc	status,2,c
  9857  00236C  D7A7               	goto	l23507
  9858  00236E  0A01               	xorlw	1	; case 3
  9859  002370  B4D8               	btfsc	status,2,c
  9860  002372  D7B5               	goto	l23515
  9861  002374  0A07               	xorlw	7	; case 4
  9862  002376  B4D8               	btfsc	status,2,c
  9863  002378  D7BE               	goto	l23523
  9864  00237A  0A01               	xorlw	1	; case 5
  9865  00237C  B4D8               	btfsc	status,2,c
  9866  00237E  D7CF               	goto	l23531
  9867  002380  D7DF               	goto	l2912
  9868  002382                     l23543:
  9869                           
  9870                           ;sm_ControlLearning_MC50.c: 126:     sm_send_event(&controlLearning_stateMachine, ev_NUL
      +                          L);
  9871  002382  0EB0               	movlw	low _controlLearning_stateMachine
  9872  002384  6E12               	movwf	sm_send_event@psm^0,c
  9873  002386  0E02               	movlw	high _controlLearning_stateMachine
  9874  002388  6E13               	movwf	(sm_send_event@psm+1)^0,c
  9875  00238A  0E00               	movlw	0
  9876  00238C  6E15               	movwf	(sm_send_event@event+1)^0,c
  9877  00238E  0E00               	movlw	0
  9878  002390  6E14               	movwf	sm_send_event@event^0,c
  9879  002392  ECD5  F045         	call	_sm_send_event	;wreg free
  9880                           
  9881                           ;sm_ControlLearning_MC50.c: 131:     switch((sm_state_ControlGate_t) psm->current_state)
  9882  002396  D280               	goto	l23799
  9883  002398                     l23545:
  9884                           
  9885                           ; BSR set to: 0
  9886                           ;sm_ControlLearning_MC50.c: 134:         {;sm_ControlLearning_MC50.c: 135:             i
      +                          f(var_sys.FimCurso_CloseIsEnabled==YES)
  9887  002398  0101               	movlb	1	; () banked
  9888  00239A  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
  9889  00239C  A4D8               	btfss	status,2,c
  9890  00239E  D03A               	goto	l23563
  9891                           
  9892                           ; BSR set to: 1
  9893                           ;sm_ControlLearning_MC50.c: 136:             {;sm_ControlLearning_MC50.c: 137:          
      +                                 control_limit_switch = 1;
  9894  0023A0  0E01               	movlw	1
  9895  0023A2  0100               	movlb	0	; () banked
  9896  0023A4  6F81               	movwf	_control_limit_switch& (0+255),b
  9897                           
  9898                           ; BSR set to: 0
  9899                           ;sm_ControlLearning_MC50.c: 138:                 sm_send_event(&controlLearning_stateMac
      +                          hine, ev_GateClosed);
  9900  0023A6  0EB0               	movlw	low _controlLearning_stateMachine
  9901  0023A8  6E12               	movwf	sm_send_event@psm^0,c
  9902  0023AA  0E02               	movlw	high _controlLearning_stateMachine
  9903  0023AC  6E13               	movwf	(sm_send_event@psm+1)^0,c
  9904  0023AE  0E00               	movlw	0
  9905  0023B0  6E15               	movwf	(sm_send_event@event+1)^0,c
  9906  0023B2  0E0A               	movlw	10
  9907  0023B4  6E14               	movwf	sm_send_event@event^0,c
  9908  0023B6  ECD5  F045         	call	_sm_send_event	;wreg free
  9909                           
  9910                           ;sm_ControlLearning_MC50.c: 139:                 var_sys.StateMotor=InOpenFull;
  9911  0023BA  0E01               	movlw	1
  9912  0023BC  0101               	movlb	1	; () banked
  9913  0023BE  6F00               	movwf	_var_sys& (0+255),b	;volatile
  9914                           
  9915                           ; BSR set to: 1
  9916                           ;sm_ControlLearning_MC50.c: 140:                 clearLearningValue();
  9917  0023C0  EC5A  F042         	call	_clearLearningValue	;wreg free
  9918                           
  9919                           ; BSR set to: 0
  9920                           ;sm_ControlLearning_MC50.c: 141:                  if ((var_sys_NVM.decelarationSensivity
      +                           != 0) && (var_sys.programinAutomatic == 0))
  9921  0023C4  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
  9922  0023C6  B4D8               	btfsc	status,2,c
  9923  0023C8  D016               	goto	l23561
  9924                           
  9925                           ; BSR set to: 0
  9926  0023CA  0101               	movlb	1	; () banked
  9927  0023CC  512A               	movf	(_var_sys+42)& (0+255),w,b	;volatile
  9928  0023CE  A4D8               	btfss	status,2,c
  9929  0023D0  D012               	goto	l23561
  9930  0023D2                     u28040:
  9931                           
  9932                           ; BSR set to: 1
  9933                           ;sm_ControlLearning_MC50.c: 142:                          {;sm_ControlLearning_MC50.c: 1
      +                          43:                 ts_system.TimeLearningDecelaration=(1000/50)*15;
  9934  0023D2  0E01               	movlw	1
  9935  0023D4  6FD6               	movwf	(_ts_system+55)& (0+255),b	;volatile
  9936  0023D6  0E2C               	movlw	44
  9937  0023D8  6FD5               	movwf	(_ts_system+54)& (0+255),b	;volatile
  9938                           
  9939                           ;sm_ControlLearning_MC50.c: 144:                 ts_system.TimeWaitToGetCurrent=(1000/50
      +                          )*6;
  9940  0023DA  0E00               	movlw	0
  9941  0023DC  6FD4               	movwf	(_ts_system+53)& (0+255),b	;volatile
  9942  0023DE  0E78               	movlw	120
  9943  0023E0  6FD3               	movwf	(_ts_system+52)& (0+255),b	;volatile
  9944                           
  9945                           ;sm_ControlLearning_MC50.c: 145:                 ts_system.TimeWaitReleCapacitor = (1000
      +                          /50);
  9946  0023E2  0E00               	movlw	0
  9947  0023E4  6FE4               	movwf	(_ts_system+69)& (0+255),b	;volatile
  9948  0023E6  0E14               	movlw	20
  9949  0023E8  6FE3               	movwf	(_ts_system+68)& (0+255),b	;volatile
  9950                           
  9951                           ;sm_ControlLearning_MC50.c: 146:                 var_sys.LearningDecelaration=YES;
  9952  0023EA  0E01               	movlw	1
  9953  0023EC  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
  9954                           
  9955                           ;sm_ControlLearning_MC50.c: 147:                 control_limit_switch = 0;
  9956  0023EE  0E00               	movlw	0
  9957  0023F0  0100               	movlb	0	; () banked
  9958  0023F2  6F81               	movwf	_control_limit_switch& (0+255),b
  9959                           
  9960                           ;sm_ControlLearning_MC50.c: 148:                  }
  9961  0023F4  0012               	return	
  9962  0023F6                     l23561:
  9963                           
  9964                           ;sm_ControlLearning_MC50.c: 150:                 {;sm_ControlLearning_MC50.c: 151:      
      +                                     var_sys.LearningDecelaration=NO;
  9965  0023F6  0E00               	movlw	0
  9966  0023F8  0101               	movlb	1	; () banked
  9967  0023FA  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
  9968                           
  9969                           ;sm_ControlLearning_MC50.c: 152:                 ts_system.TimeWaitToGetCurrent=(1000/50
      +                          )*4;
  9970  0023FC  0E00               	movlw	0
  9971  0023FE  6FD4               	movwf	(_ts_system+53)& (0+255),b	;volatile
  9972  002400  0E50               	movlw	80
  9973  002402  6FD3               	movwf	(_ts_system+52)& (0+255),b	;volatile
  9974                           
  9975                           ;sm_ControlLearning_MC50.c: 153:                 ts_system.TimeWaitReleCapacitor = (1000
      +                          /50);
  9976  002404  0E00               	movlw	0
  9977  002406  6FE4               	movwf	(_ts_system+69)& (0+255),b	;volatile
  9978  002408  0E14               	movlw	20
  9979  00240A  6FE3               	movwf	(_ts_system+68)& (0+255),b	;volatile
  9980                           
  9981                           ;sm_ControlLearning_MC50.c: 154:                 control_limit_switch = 0;
  9982  00240C  0E00               	movlw	0
  9983  00240E  0100               	movlb	0	; () banked
  9984  002410  6F81               	movwf	_control_limit_switch& (0+255),b
  9985  002412  0012               	return	
  9986  002414                     l23563:
  9987                           
  9988                           ; BSR set to: 1
  9989                           ;sm_ControlLearning_MC50.c: 159:             {;sm_ControlLearning_MC50.c: 160:          
      +                                 sm_send_event(&controlLearning_stateMachine, ev_GateOpened);
  9990  002414  0EB0               	movlw	low _controlLearning_stateMachine
  9991  002416  6E12               	movwf	sm_send_event@psm^0,c
  9992  002418  0E02               	movlw	high _controlLearning_stateMachine
  9993  00241A  6E13               	movwf	(sm_send_event@psm+1)^0,c
  9994  00241C  0E00               	movlw	0
  9995  00241E  6E15               	movwf	(sm_send_event@event+1)^0,c
  9996  002420  0E0B               	movlw	11
  9997  002422  6E14               	movwf	sm_send_event@event^0,c
  9998  002424  ECD5  F045         	call	_sm_send_event	;wreg free
  9999                           
 10000                           ;sm_ControlLearning_MC50.c: 161:                 var_sys.StateMotor = InClose;
 10001  002428  0E03               	movlw	3
 10002  00242A  0101               	movlb	1	; () banked
 10003  00242C  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10004                           
 10005                           ; BSR set to: 1
 10006                           ;sm_ControlLearning_MC50.c: 162:                 var_sys.LearningDecelaration= YES;
 10007  00242E  0E01               	movlw	1
 10008  002430  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
 10009                           
 10010                           ; BSR set to: 1
 10011                           ;sm_ControlLearning_MC50.c: 164:         };sm_ControlLearning_MC50.c: 165:         break
      +                          ;
 10012                           
 10013                           ;sm_ControlLearning_MC50.c: 163:             }
 10014  002432  0012               	return	
 10015  002434                     l23569:
 10016                           
 10017                           ; BSR set to: 0
 10018                           ;sm_ControlLearning_MC50.c: 167:         {;sm_ControlLearning_MC50.c: 168:             i
      +                          f(((var_sys.FimCurso_CloseIsEnabled==YES)||(control_limit_switch == 1)) || ((button_stru
      +                          ct.current == 0 ||typeOpenOrder == TypeFull) && var_sys.programinAutomatic == 1))
 10019  002434  0101               	movlb	1	; () banked
 10020  002436  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
 10021  002438  B4D8               	btfsc	status,2,c
 10022  00243A  D00E               	goto	u28090
 10023                           
 10024                           ; BSR set to: 1
 10025  00243C  0100               	movlb	0	; () banked
 10026  00243E  0581               	decf	_control_limit_switch& (0+255),w,b
 10027  002440  B4D8               	btfsc	status,2,c
 10028  002442  D00A               	goto	u28090
 10029                           
 10030                           ; BSR set to: 0
 10031  002444  504D               	movf	(_button_struct+1)^0,w,c	;volatile
 10032  002446  B4D8               	btfsc	status,2,c
 10033  002448  D003               	goto	u28080
 10034                           
 10035                           ; BSR set to: 0
 10036  00244A  043A               	decf	sm_execute_ControlLearning@typeOpenOrder^0,w,c
 10037  00244C  A4D8               	btfss	status,2,c
 10038  00244E  D028               	goto	l23597
 10039  002450                     u28080:
 10040                           
 10041                           ; BSR set to: 0
 10042  002450  0101               	movlb	1	; () banked
 10043  002452  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 10044  002454  A4D8               	btfss	status,2,c
 10045  002456  D024               	goto	l23597
 10046  002458                     u28090:
 10047                           
 10048                           ;sm_ControlLearning_MC50.c: 169:             {;sm_ControlLearning_MC50.c: 171:          
      +                                 control_limit_switch = 1;
 10049  002458  0E01               	movlw	1
 10050  00245A  0100               	movlb	0	; () banked
 10051  00245C  6F81               	movwf	_control_limit_switch& (0+255),b
 10052                           
 10053                           ;sm_ControlLearning_MC50.c: 172:                 var_sys.StateMotor=Stopped;
 10054  00245E  0E00               	movlw	0
 10055  002460  0101               	movlb	1	; () banked
 10056  002462  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10057                           
 10058                           ; BSR set to: 1
 10059                           ;sm_ControlLearning_MC50.c: 173:                 if(ts_system.TimeWaitToNextState<=0)
 10060  002464  BFC4               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 10061  002466  D005               	goto	u28100
 10062  002468  51C4               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 10063  00246A  E102               	bnz	u28101
 10064  00246C  05C3               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 10065  00246E  B0D8               	btfsc	status,0,c
 10066  002470                     u28101:
 10067  002470  0012               	return	
 10068  002472                     u28100:
 10069                           
 10070                           ; BSR set to: 1
 10071                           ;sm_ControlLearning_MC50.c: 174:                 {;sm_ControlLearning_MC50.c: 175:      
      +                                         sm_send_event(&controlLearning_stateMachine, ev_GateClosed);
 10072  002472  0EB0               	movlw	low _controlLearning_stateMachine
 10073  002474  6E12               	movwf	sm_send_event@psm^0,c
 10074  002476  0E02               	movlw	high _controlLearning_stateMachine
 10075  002478  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10076  00247A  0E00               	movlw	0
 10077  00247C  6E15               	movwf	(sm_send_event@event+1)^0,c
 10078  00247E  0E0A               	movlw	10
 10079  002480  6E14               	movwf	sm_send_event@event^0,c
 10080  002482  ECD5  F045         	call	_sm_send_event	;wreg free
 10081                           
 10082                           ;sm_ControlLearning_MC50.c: 176:                     var_sys.StateMotor=InOpenFull;
 10083  002486  0E01               	movlw	1
 10084  002488  0101               	movlb	1	; () banked
 10085  00248A  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10086                           
 10087                           ; BSR set to: 1
 10088                           ;sm_ControlLearning_MC50.c: 177:                     clearLearningValue();
 10089  00248C  EC5A  F042         	call	_clearLearningValue	;wreg free
 10090                           
 10091                           ; BSR set to: 0
 10092                           ;sm_ControlLearning_MC50.c: 178:                         if ((var_sys_NVM.decelarationSe
      +                          nsivity != 0) && (var_sys.programinAutomatic == 0))
 10093  002490  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
 10094  002492  B4D8               	btfsc	status,2,c
 10095  002494  D7B0               	goto	l23561
 10096                           
 10097                           ; BSR set to: 0
 10098  002496  0101               	movlb	1	; () banked
 10099  002498  512A               	movf	(_var_sys+42)& (0+255),w,b	;volatile
 10100  00249A  B4D8               	btfsc	status,2,c
 10101  00249C  D79A               	goto	u28040
 10102  00249E  D7AB               	goto	l23561
 10103  0024A0                     l23597:
 10104  0024A0  0101               	movlb	1	; () banked
 10105  0024A2  5100               	movf	_var_sys& (0+255),w,b	;volatile
 10106  0024A4  A4D8               	btfss	status,2,c
 10107  0024A6  D003               	goto	l23601
 10108  0024A8                     u28130:
 10109                           
 10110                           ; BSR set to: 1
 10111                           ;sm_ControlLearning_MC50.c: 196:             {;sm_ControlLearning_MC50.c: 197:          
      +                                 generateErrorLearnig();
 10112  0024A8  EC0E  F045         	call	_generateErrorLearnig	;wreg free
 10113                           
 10114                           ;sm_ControlLearning_MC50.c: 198:             }
 10115  0024AC  0012               	return	
 10116  0024AE                     l23601:
 10117                           
 10118                           ; BSR set to: 1
 10119                           ;sm_ControlLearning_MC50.c: 200:             {;sm_ControlLearning_MC50.c: 201:          
      +                                 ts_system.TimeWaitToNextState=(2*(1000/50));
 10120  0024AE  0E00               	movlw	0
 10121  0024B0  6FC4               	movwf	(_ts_system+37)& (0+255),b	;volatile
 10122  0024B2  0E28               	movlw	40
 10123  0024B4  6FC3               	movwf	(_ts_system+36)& (0+255),b	;volatile
 10124  0024B6  0012               	return	
 10125  0024B8                     l23603:
 10126                           
 10127                           ; BSR set to: 0
 10128                           ;sm_ControlLearning_MC50.c: 206:         {;sm_ControlLearning_MC50.c: 207:             i
      +                          f((var_sys.FimCurso_OpenIsEnabled==YES) || (ts_system.TimeLearningDecelaration<=0)||(con
      +                          trol_limit_switch == 1))
 10129  0024B8  0101               	movlb	1	; () banked
 10130  0024BA  0504               	decf	(_var_sys+4)& (0+255),w,b	;volatile
 10131  0024BC  A4D8               	btfss	status,2,c
 10132                           
 10133                           ; BSR set to: 1
 10134  0024BE  BFD6               	btfsc	(_ts_system+55)& (0+255),7,b	;volatile
 10135  0024C0  D009               	goto	u28160
 10136  0024C2  51D6               	movf	(_ts_system+55)& (0+255),w,b	;volatile
 10137  0024C4  E103               	bnz	u28150
 10138  0024C6  05D5               	decf	(_ts_system+54)& (0+255),w,b	;volatile
 10139  0024C8  A0D8               	btfss	status,0,c
 10140  0024CA  D004               	goto	u28160
 10141  0024CC                     u28150:
 10142                           
 10143                           ; BSR set to: 1
 10144  0024CC  0100               	movlb	0	; () banked
 10145  0024CE  0581               	decf	_control_limit_switch& (0+255),w,b
 10146  0024D0  A4D8               	btfss	status,2,c
 10147  0024D2  D02A               	goto	l23625
 10148  0024D4                     u28160:
 10149                           
 10150                           ;sm_ControlLearning_MC50.c: 209:             {;sm_ControlLearning_MC50.c: 210:          
      +                                  control_limit_switch = 1;
 10151  0024D4  0E01               	movlw	1
 10152  0024D6  0100               	movlb	0	; () banked
 10153  0024D8  6F81               	movwf	_control_limit_switch& (0+255),b
 10154                           
 10155                           ;sm_ControlLearning_MC50.c: 211:                 var_sys.StateMotor=Stopped;
 10156  0024DA  0E00               	movlw	0
 10157  0024DC  0101               	movlb	1	; () banked
 10158  0024DE  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10159                           
 10160                           ; BSR set to: 1
 10161                           ;sm_ControlLearning_MC50.c: 212:             if(ts_system.TimeWaitToNextState<=0)
 10162  0024E0  BFC4               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 10163  0024E2  D005               	goto	u28170
 10164  0024E4  51C4               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 10165  0024E6  E102               	bnz	u28171
 10166  0024E8  05C3               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 10167  0024EA  B0D8               	btfsc	status,0,c
 10168  0024EC                     u28171:
 10169  0024EC  0012               	return	
 10170  0024EE                     u28170:
 10171                           
 10172                           ; BSR set to: 1
 10173                           ;sm_ControlLearning_MC50.c: 213:             {;sm_ControlLearning_MC50.c: 215:          
      +                                 sm_send_event(&controlLearning_stateMachine, ev_GateOpened);
 10174  0024EE  0EB0               	movlw	low _controlLearning_stateMachine
 10175  0024F0  6E12               	movwf	sm_send_event@psm^0,c
 10176  0024F2  0E02               	movlw	high _controlLearning_stateMachine
 10177  0024F4  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10178  0024F6  0E00               	movlw	0
 10179  0024F8  6E15               	movwf	(sm_send_event@event+1)^0,c
 10180  0024FA  0E0B               	movlw	11
 10181  0024FC  6E14               	movwf	sm_send_event@event^0,c
 10182  0024FE  ECD5  F045         	call	_sm_send_event	;wreg free
 10183                           
 10184                           ;sm_ControlLearning_MC50.c: 216:                 var_sys.StateMotor=InClose;
 10185  002502  0E03               	movlw	3
 10186  002504  0101               	movlb	1	; () banked
 10187  002506  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10188                           
 10189                           ; BSR set to: 1
 10190                           ;sm_ControlLearning_MC50.c: 217:                 ts_system.TimeLearningDecelaration=(100
      +                          0/50)*5;
 10191  002508  0E00               	movlw	0
 10192  00250A  6FD6               	movwf	(_ts_system+55)& (0+255),b	;volatile
 10193  00250C  0E64               	movlw	100
 10194  00250E  6FD5               	movwf	(_ts_system+54)& (0+255),b	;volatile
 10195                           
 10196                           ; BSR set to: 1
 10197                           ;sm_ControlLearning_MC50.c: 218:                 ts_system.TimeWaitToGetCurrent=(1000/50
      +                          )*5;
 10198  002510  0E00               	movlw	0
 10199  002512  6FD4               	movwf	(_ts_system+53)& (0+255),b	;volatile
 10200  002514  0E64               	movlw	100
 10201  002516                     L67:
 10202  002516  6FD3               	movwf	(_ts_system+52)& (0+255),b	;volatile
 10203                           
 10204                           ; BSR set to: 1
 10205                           ;sm_ControlLearning_MC50.c: 219:                 ts_system.TimeWaitReleCapacitor = (1000
      +                          /50);
 10206  002518  0E00               	movlw	0
 10207  00251A  6FE4               	movwf	(_ts_system+69)& (0+255),b	;volatile
 10208  00251C  0E14               	movlw	20
 10209  00251E  6FE3               	movwf	(_ts_system+68)& (0+255),b	;volatile
 10210                           
 10211                           ; BSR set to: 1
 10212                           ;sm_ControlLearning_MC50.c: 220:                 control_limit_switch = 0;
 10213  002520  0E00               	movlw	0
 10214  002522  0100               	movlb	0	; () banked
 10215  002524  6F81               	movwf	_control_limit_switch& (0+255),b
 10216  002526  0012               	return	
 10217  002528                     l23625:
 10218                           
 10219                           ; BSR set to: 0
 10220  002528  0101               	movlb	1	; () banked
 10221  00252A  5100               	movf	_var_sys& (0+255),w,b	;volatile
 10222  00252C  B4D8               	btfsc	status,2,c
 10223  00252E  D7BC               	goto	u28130
 10224                           
 10225                           ; BSR set to: 1
 10226                           ;sm_ControlLearning_MC50.c: 230:             {;sm_ControlLearning_MC50.c: 231:          
      +                                 ts_system.TimeWaitToNextState=(2*(1000/50));
 10227  002530  0E00               	movlw	0
 10228  002532  6FC4               	movwf	(_ts_system+37)& (0+255),b	;volatile
 10229  002534  0E28               	movlw	40
 10230  002536  6FC3               	movwf	(_ts_system+36)& (0+255),b	;volatile
 10231                           
 10232                           ; BSR set to: 1
 10233                           ;sm_ControlLearning_MC50.c: 232:                 if (ts_system.TimeWaitReleCapacitor <=0
      +                          )
 10234  002538  BFE4               	btfsc	(_ts_system+69)& (0+255),7,b	;volatile
 10235  00253A  D005               	goto	u28190
 10236  00253C  51E4               	movf	(_ts_system+69)& (0+255),w,b	;volatile
 10237  00253E  E102               	bnz	u28191
 10238  002540  05E3               	decf	(_ts_system+68)& (0+255),w,b	;volatile
 10239  002542  B0D8               	btfsc	status,0,c
 10240  002544                     u28191:
 10241  002544  0012               	return	
 10242  002546                     u28190:
 10243                           
 10244                           ; BSR set to: 1
 10245                           ;sm_ControlLearning_MC50.c: 233:                 {;sm_ControlLearning_MC50.c: 234:      
      +                                     if(ts_system.TimeWaitToGetCurrent>0)
 10246  002546  BFD4               	btfsc	(_ts_system+53)& (0+255),7,b	;volatile
 10247  002548  0012               	return	
 10248  00254A  51D4               	movf	(_ts_system+53)& (0+255),w,b	;volatile
 10249  00254C  E103               	bnz	u28200
 10250  00254E  05D3               	decf	(_ts_system+52)& (0+255),w,b	;volatile
 10251  002550  A0D8               	btfss	status,0,c
 10252  002552  0012               	return	
 10253  002554                     u28200:
 10254                           
 10255                           ; BSR set to: 1
 10256                           ;sm_ControlLearning_MC50.c: 235:                 {;sm_ControlLearning_MC50.c: 236:      
      +                                         learn_st.openHistCurrent=calculateMean(learn_st.openHistCurrent,var_sys.A
      +                          ctualHistCurrent);
 10257  002554  C06E  F010         	movff	_learn_st+14,calculateMean@meanValue	;volatile
 10258  002558  C06F  F011         	movff	_learn_st+15,calculateMean@meanValue+1	;volatile
 10259  00255C  6A12               	clrf	(calculateMean@meanValue+2)^0,c
 10260  00255E  6A13               	clrf	(calculateMean@meanValue+3)^0,c
 10261  002560  C130  F014         	movff	_var_sys+48,calculateMean@newValue	;volatile
 10262  002564  C131  F015         	movff	_var_sys+49,calculateMean@newValue+1	;volatile
 10263  002568  C132  F016         	movff	_var_sys+50,calculateMean@newValue+2	;volatile
 10264  00256C  C133  F017         	movff	_var_sys+51,calculateMean@newValue+3	;volatile
 10265  002570  EC75  F045         	call	_calculateMean	;wreg free
 10266  002574  C010  F06E         	movff	?_calculateMean,_learn_st+14	;volatile
 10267  002578  C011  F06F         	movff	?_calculateMean+1,_learn_st+15	;volatile
 10268  00257C  0012               	return	
 10269  00257E                     l23637:
 10270                           
 10271                           ; BSR set to: 0
 10272                           ;sm_ControlLearning_MC50.c: 243:         {;sm_ControlLearning_MC50.c: 244:             i
      +                          f((var_sys.FimCurso_CloseIsEnabled==YES)||(control_limit_switch == 1))
 10273  00257E  0101               	movlb	1	; () banked
 10274  002580  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
 10275  002582  B4D8               	btfsc	status,2,c
 10276  002584  D004               	goto	u28220
 10277                           
 10278                           ; BSR set to: 1
 10279  002586  0100               	movlb	0	; () banked
 10280  002588  0581               	decf	_control_limit_switch& (0+255),w,b
 10281  00258A  A4D8               	btfss	status,2,c
 10282  00258C  D020               	goto	l23657
 10283  00258E                     u28220:
 10284                           
 10285                           ;sm_ControlLearning_MC50.c: 245:             {;sm_ControlLearning_MC50.c: 246:          
      +                                 control_limit_switch = 1;
 10286  00258E  0E01               	movlw	1
 10287  002590  0100               	movlb	0	; () banked
 10288  002592  6F81               	movwf	_control_limit_switch& (0+255),b
 10289                           
 10290                           ;sm_ControlLearning_MC50.c: 247:                 var_sys.StateMotor=Stopped;
 10291  002594  0E00               	movlw	0
 10292  002596  0101               	movlb	1	; () banked
 10293  002598  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10294                           
 10295                           ; BSR set to: 1
 10296                           ;sm_ControlLearning_MC50.c: 248:                 if(ts_system.TimeWaitToNextState<=0)
 10297  00259A  BFC4               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 10298  00259C  D005               	goto	u28230
 10299  00259E  51C4               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 10300  0025A0  E102               	bnz	u28231
 10301  0025A2  05C3               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 10302  0025A4  B0D8               	btfsc	status,0,c
 10303  0025A6                     u28231:
 10304  0025A6  0012               	return	
 10305  0025A8                     u28230:
 10306                           
 10307                           ; BSR set to: 1
 10308                           ;sm_ControlLearning_MC50.c: 249:                 {;sm_ControlLearning_MC50.c: 250:      
      +                                         sm_send_event(&controlLearning_stateMachine, ev_GateClosed);
 10309  0025A8  0EB0               	movlw	low _controlLearning_stateMachine
 10310  0025AA  6E12               	movwf	sm_send_event@psm^0,c
 10311  0025AC  0E02               	movlw	high _controlLearning_stateMachine
 10312  0025AE  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10313  0025B0  0E00               	movlw	0
 10314  0025B2  6E15               	movwf	(sm_send_event@event+1)^0,c
 10315  0025B4  0E0A               	movlw	10
 10316  0025B6  6E14               	movwf	sm_send_event@event^0,c
 10317  0025B8  ECD5  F045         	call	_sm_send_event	;wreg free
 10318                           
 10319                           ;sm_ControlLearning_MC50.c: 251:                     var_sys.StateMotor=InOpenFull;
 10320  0025BC  0E01               	movlw	1
 10321  0025BE  0101               	movlb	1	; () banked
 10322  0025C0  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10323                           
 10324                           ; BSR set to: 1
 10325                           ;sm_ControlLearning_MC50.c: 252:                     var_sys.LearningDecelaration=NO;
 10326  0025C2  0E00               	movlw	0
 10327  0025C4  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
 10328                           
 10329                           ; BSR set to: 1
 10330                           ;sm_ControlLearning_MC50.c: 253:                     ts_system.TimeWaitToGetCurrent=(100
      +                          0/50)*3;
 10331  0025C6  0E00               	movlw	0
 10332  0025C8  6FD4               	movwf	(_ts_system+53)& (0+255),b	;volatile
 10333  0025CA  0E3C               	movlw	60
 10334  0025CC  D7A4               	goto	L67
 10335  0025CE                     l23657:
 10336                           
 10337                           ; BSR set to: 0
 10338  0025CE  0101               	movlb	1	; () banked
 10339  0025D0  5100               	movf	_var_sys& (0+255),w,b	;volatile
 10340  0025D2  B4D8               	btfsc	status,2,c
 10341  0025D4  D769               	goto	u28130
 10342                           
 10343                           ; BSR set to: 1
 10344                           ;sm_ControlLearning_MC50.c: 265:             {;sm_ControlLearning_MC50.c: 266:          
      +                                 ts_system.TimeWaitToNextState=(2*(1000/50));
 10345  0025D6  0E00               	movlw	0
 10346  0025D8  6FC4               	movwf	(_ts_system+37)& (0+255),b	;volatile
 10347  0025DA  0E28               	movlw	40
 10348  0025DC  6FC3               	movwf	(_ts_system+36)& (0+255),b	;volatile
 10349                           
 10350                           ; BSR set to: 1
 10351                           ;sm_ControlLearning_MC50.c: 267:                 if (ts_system.TimeWaitReleCapacitor <=0
      +                          )
 10352  0025DE  BFE4               	btfsc	(_ts_system+69)& (0+255),7,b	;volatile
 10353  0025E0  D005               	goto	u28250
 10354  0025E2  51E4               	movf	(_ts_system+69)& (0+255),w,b	;volatile
 10355  0025E4  E102               	bnz	u28251
 10356  0025E6  05E3               	decf	(_ts_system+68)& (0+255),w,b	;volatile
 10357  0025E8  B0D8               	btfsc	status,0,c
 10358  0025EA                     u28251:
 10359  0025EA  0012               	return	
 10360  0025EC                     u28250:
 10361                           
 10362                           ; BSR set to: 1
 10363                           ;sm_ControlLearning_MC50.c: 268:                 {;sm_ControlLearning_MC50.c: 269:      
      +                                     if(ts_system.TimeWaitToGetCurrent>0)
 10364  0025EC  BFD4               	btfsc	(_ts_system+53)& (0+255),7,b	;volatile
 10365  0025EE  0012               	return	
 10366  0025F0  51D4               	movf	(_ts_system+53)& (0+255),w,b	;volatile
 10367  0025F2  E103               	bnz	u28260
 10368  0025F4  05D3               	decf	(_ts_system+52)& (0+255),w,b	;volatile
 10369  0025F6  A0D8               	btfss	status,0,c
 10370  0025F8  0012               	return	
 10371  0025FA                     u28260:
 10372                           
 10373                           ; BSR set to: 1
 10374                           ;sm_ControlLearning_MC50.c: 270:                 {;sm_ControlLearning_MC50.c: 271:      
      +                                         learn_st.closeHistCurrent=calculateMean(learn_st.closeHistCurrent,var_sys
      +                          .ActualHistCurrent);
 10375  0025FA  C070  F010         	movff	_learn_st+16,calculateMean@meanValue	;volatile
 10376  0025FE  C071  F011         	movff	_learn_st+17,calculateMean@meanValue+1	;volatile
 10377  002602  6A12               	clrf	(calculateMean@meanValue+2)^0,c
 10378  002604  6A13               	clrf	(calculateMean@meanValue+3)^0,c
 10379  002606  C130  F014         	movff	_var_sys+48,calculateMean@newValue	;volatile
 10380  00260A  C131  F015         	movff	_var_sys+49,calculateMean@newValue+1	;volatile
 10381  00260E  C132  F016         	movff	_var_sys+50,calculateMean@newValue+2	;volatile
 10382  002612  C133  F017         	movff	_var_sys+51,calculateMean@newValue+3	;volatile
 10383  002616  EC75  F045         	call	_calculateMean	;wreg free
 10384  00261A  C010  F070         	movff	?_calculateMean,_learn_st+16	;volatile
 10385  00261E  C011  F071         	movff	?_calculateMean+1,_learn_st+17	;volatile
 10386  002622  0012               	return	
 10387  002624                     l23669:
 10388                           
 10389                           ; BSR set to: 0
 10390                           ;sm_ControlLearning_MC50.c: 278:         {;sm_ControlLearning_MC50.c: 279:             i
      +                          f(((var_sys.FimCurso_OpenIsEnabled==YES)||control_limit_switch == 1)||(var_sys.LearningD
      +                          ecelaration==YES && (button_struct.current == 0 ||typeOpenOrder == TypeFull) && var_sys.
      +                          programinAutomatic == 1))
 10391  002624  0101               	movlb	1	; () banked
 10392  002626  0504               	decf	(_var_sys+4)& (0+255),w,b	;volatile
 10393  002628  B4D8               	btfsc	status,2,c
 10394  00262A  D011               	goto	u28320
 10395                           
 10396                           ; BSR set to: 1
 10397  00262C  0100               	movlb	0	; () banked
 10398  00262E  0581               	decf	_control_limit_switch& (0+255),w,b
 10399  002630  B4D8               	btfsc	status,2,c
 10400  002632  D00D               	goto	u28320
 10401                           
 10402                           ; BSR set to: 0
 10403  002634  0101               	movlb	1	; () banked
 10404  002636  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 10405  002638  A4D8               	btfss	status,2,c
 10406  00263A  D02C               	goto	l23695
 10407                           
 10408                           ; BSR set to: 1
 10409  00263C  504D               	movf	(_button_struct+1)^0,w,c	;volatile
 10410  00263E  B4D8               	btfsc	status,2,c
 10411  002640  D003               	goto	u28310
 10412                           
 10413                           ; BSR set to: 1
 10414  002642  043A               	decf	sm_execute_ControlLearning@typeOpenOrder^0,w,c
 10415  002644  A4D8               	btfss	status,2,c
 10416  002646  D026               	goto	l23695
 10417  002648                     u28310:
 10418                           
 10419                           ; BSR set to: 1
 10420  002648  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 10421  00264A  A4D8               	btfss	status,2,c
 10422  00264C  D023               	goto	l23695
 10423  00264E                     u28320:
 10424                           
 10425                           ;sm_ControlLearning_MC50.c: 280:             {;sm_ControlLearning_MC50.c: 282:          
      +                                 var_sys.Counter_Learning = 0;
 10426  00264E  0E00               	movlw	0
 10427  002650  0101               	movlb	1	; () banked
 10428  002652  6F17               	movwf	(_var_sys+23)& (0+255),b	;volatile
 10429                           
 10430                           ;sm_ControlLearning_MC50.c: 283:                 var_sys.LearningDecelaration = NO;
 10431  002654  0E00               	movlw	0
 10432  002656  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
 10433                           
 10434                           ;sm_ControlLearning_MC50.c: 284:                 control_limit_switch = 1;
 10435  002658  0E01               	movlw	1
 10436  00265A  0100               	movlb	0	; () banked
 10437  00265C  6F81               	movwf	_control_limit_switch& (0+255),b
 10438                           
 10439                           ;sm_ControlLearning_MC50.c: 285:                 var_sys.StateMotor=Stopped;
 10440  00265E  0E00               	movlw	0
 10441  002660  0101               	movlb	1	; () banked
 10442  002662  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10443                           
 10444                           ; BSR set to: 1
 10445                           ;sm_ControlLearning_MC50.c: 286:                 if(ts_system.TimeWaitToNextState<=0)
 10446  002664  BFC4               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 10447  002666  D005               	goto	u28330
 10448  002668  51C4               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 10449  00266A  E102               	bnz	u28331
 10450  00266C  05C3               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 10451  00266E  B0D8               	btfsc	status,0,c
 10452  002670                     u28331:
 10453  002670  0012               	return	
 10454  002672                     u28330:
 10455                           
 10456                           ; BSR set to: 1
 10457                           ;sm_ControlLearning_MC50.c: 287:                 {;sm_ControlLearning_MC50.c: 288:      
      +                                         sm_send_event(&controlLearning_stateMachine, ev_GateOpened);
 10458  002672  0EB0               	movlw	low _controlLearning_stateMachine
 10459  002674  6E12               	movwf	sm_send_event@psm^0,c
 10460  002676  0E02               	movlw	high _controlLearning_stateMachine
 10461  002678  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10462  00267A  0E00               	movlw	0
 10463  00267C  6E15               	movwf	(sm_send_event@event+1)^0,c
 10464  00267E  0E0B               	movlw	11
 10465  002680  6E14               	movwf	sm_send_event@event^0,c
 10466  002682  ECD5  F045         	call	_sm_send_event	;wreg free
 10467                           
 10468                           ;sm_ControlLearning_MC50.c: 289:                     var_sys.StateMotor=InClose;
 10469  002686  0E03               	movlw	3
 10470  002688  0101               	movlb	1	; () banked
 10471  00268A  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10472                           
 10473                           ; BSR set to: 1
 10474                           ;sm_ControlLearning_MC50.c: 290:                     ts_system.TimeWaitToGetCurrent=(100
      +                          0/50)*4;
 10475  00268C  0E00               	movlw	0
 10476  00268E  6FD4               	movwf	(_ts_system+53)& (0+255),b	;volatile
 10477  002690  0E50               	movlw	80
 10478  002692  D741               	goto	L67
 10479  002694                     l23695:
 10480                           
 10481                           ; BSR set to: 1
 10482  002694  5100               	movf	_var_sys& (0+255),w,b	;volatile
 10483  002696  B4D8               	btfsc	status,2,c
 10484  002698  D707               	goto	u28130
 10485                           
 10486                           ; BSR set to: 1
 10487  00269A  504D               	movf	(_button_struct+1)^0,w,c	;volatile
 10488  00269C  B4D8               	btfsc	status,2,c
 10489  00269E  D003               	goto	u28360
 10490                           
 10491                           ; BSR set to: 1
 10492  0026A0  043A               	decf	sm_execute_ControlLearning@typeOpenOrder^0,w,c
 10493  0026A2  A4D8               	btfss	status,2,c
 10494  0026A4  D00F               	goto	l23709
 10495  0026A6                     u28360:
 10496                           
 10497                           ; BSR set to: 1
 10498  0026A6  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 10499  0026A8  A4D8               	btfss	status,2,c
 10500  0026AA  D00C               	goto	l23709
 10501                           
 10502                           ; BSR set to: 1
 10503  0026AC  5147               	movf	(_var_sys+71)& (0+255),w,b	;volatile
 10504  0026AE  A4D8               	btfss	status,2,c
 10505  0026B0  D009               	goto	l23709
 10506  0026B2                     u28380:
 10507                           
 10508                           ; BSR set to: 1
 10509                           ;sm_ControlLearning_MC50.c: 303:                 var_sys.LearningDecelaration=YES;
 10510  0026B2  0E01               	movlw	1
 10511  0026B4  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
 10512                           
 10513                           ;sm_ControlLearning_MC50.c: 306:                 button_struct.processed = 1;
 10514  0026B6  0E01               	movlw	1
 10515  0026B8  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 10516                           
 10517                           ;sm_ControlLearning_MC50.c: 307:                 ts_system.TimeWaitToGetCurrent=(1000/50
      +                          )*4;
 10518  0026BA  0E00               	movlw	0
 10519  0026BC  6FD4               	movwf	(_ts_system+53)& (0+255),b	;volatile
 10520  0026BE  0E50               	movlw	80
 10521  0026C0  6FD3               	movwf	(_ts_system+52)& (0+255),b	;volatile
 10522                           
 10523                           ;sm_ControlLearning_MC50.c: 309:             }
 10524  0026C2  0012               	return	
 10525  0026C4                     l23709:
 10526                           
 10527                           ; BSR set to: 1
 10528  0026C4  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 10529  0026C6  A4D8               	btfss	status,2,c
 10530  0026C8  D00C               	goto	l23717
 10531                           
 10532                           ; BSR set to: 1
 10533                           ;sm_ControlLearning_MC50.c: 313:                 ts_system.TimeWaitToNextState=(2*(1000/
      +                          50));
 10534  0026CA  0E00               	movlw	0
 10535  0026CC  6FC4               	movwf	(_ts_system+37)& (0+255),b	;volatile
 10536  0026CE  0E28               	movlw	40
 10537  0026D0  6FC3               	movwf	(_ts_system+36)& (0+255),b	;volatile
 10538                           
 10539                           ; BSR set to: 1
 10540                           ;sm_ControlLearning_MC50.c: 315:                 if(ts_system.TimeWaitToGetCurrent>0)
 10541  0026D2  BFD4               	btfsc	(_ts_system+53)& (0+255),7,b	;volatile
 10542  0026D4  0012               	return	
 10543  0026D6  51D4               	movf	(_ts_system+53)& (0+255),w,b	;volatile
 10544  0026D8  E103               	bnz	u28400
 10545  0026DA  05D3               	decf	(_ts_system+52)& (0+255),w,b	;volatile
 10546  0026DC  A0D8               	btfss	status,0,c
 10547  0026DE  0012               	return	
 10548  0026E0                     u28400:
 10549  0026E0  D739               	goto	u28200
 10550  0026E2                     l23717:
 10551                           
 10552                           ; BSR set to: 1
 10553                           ;sm_ControlLearning_MC50.c: 322:             {;sm_ControlLearning_MC50.c: 323:          
      +                                 var_sys.Counter_Learning = 1;
 10554  0026E2  0E01               	movlw	1
 10555  0026E4  6F17               	movwf	(_var_sys+23)& (0+255),b	;volatile
 10556                           
 10557                           ;sm_ControlLearning_MC50.c: 324:                 ts_system.TimeWaitToNextState=(2*(1000/
      +                          50));
 10558  0026E6  0E00               	movlw	0
 10559  0026E8  6FC4               	movwf	(_ts_system+37)& (0+255),b	;volatile
 10560  0026EA  0E28               	movlw	40
 10561  0026EC  6FC3               	movwf	(_ts_system+36)& (0+255),b	;volatile
 10562                           
 10563                           ; BSR set to: 1
 10564                           ;sm_ControlLearning_MC50.c: 326:                 if (ts_system.TimeWaitReleCapacitor <=0
      +                          )
 10565  0026EE  BFE4               	btfsc	(_ts_system+69)& (0+255),7,b	;volatile
 10566  0026F0  D005               	goto	u28410
 10567  0026F2  51E4               	movf	(_ts_system+69)& (0+255),w,b	;volatile
 10568  0026F4  E102               	bnz	u28411
 10569  0026F6  05E3               	decf	(_ts_system+68)& (0+255),w,b	;volatile
 10570  0026F8  B0D8               	btfsc	status,0,c
 10571  0026FA                     u28411:
 10572  0026FA  0012               	return	
 10573  0026FC                     u28410:
 10574                           
 10575                           ; BSR set to: 1
 10576                           ;sm_ControlLearning_MC50.c: 327:                 {;sm_ControlLearning_MC50.c: 328:      
      +                                     if(ts_system.TimeWaitToGetCurrent>0)
 10577  0026FC  BFD4               	btfsc	(_ts_system+53)& (0+255),7,b	;volatile
 10578  0026FE  0012               	return	
 10579  002700  51D4               	movf	(_ts_system+53)& (0+255),w,b	;volatile
 10580  002702  E103               	bnz	u28420
 10581  002704  05D3               	decf	(_ts_system+52)& (0+255),w,b	;volatile
 10582  002706  A0D8               	btfss	status,0,c
 10583  002708  0012               	return	
 10584  00270A                     u28420:
 10585                           
 10586                           ; BSR set to: 1
 10587                           ;sm_ControlLearning_MC50.c: 329:                 {;sm_ControlLearning_MC50.c: 330:      
      +                                         learn_st.openCurrent=calculateMean(learn_st.openCurrent,var_sys.ActualCur
      +                          rent);
 10588  00270A  C06A  F010         	movff	_learn_st+10,calculateMean@meanValue	;volatile
 10589  00270E  C06B  F011         	movff	_learn_st+11,calculateMean@meanValue+1	;volatile
 10590  002712  6A12               	clrf	(calculateMean@meanValue+2)^0,c
 10591  002714  6A13               	clrf	(calculateMean@meanValue+3)^0,c
 10592  002716  C12E  F014         	movff	_var_sys+46,calculateMean@newValue	;volatile
 10593  00271A  C12F  F015         	movff	_var_sys+47,calculateMean@newValue+1	;volatile
 10594  00271E  6A16               	clrf	(calculateMean@newValue+2)^0,c
 10595  002720  6A17               	clrf	(calculateMean@newValue+3)^0,c
 10596  002722  EC75  F045         	call	_calculateMean	;wreg free
 10597  002726  C010  F06A         	movff	?_calculateMean,_learn_st+10	;volatile
 10598  00272A  C011  F06B         	movff	?_calculateMean+1,_learn_st+11	;volatile
 10599  00272E  0012               	return	
 10600  002730                     l23725:
 10601                           
 10602                           ; BSR set to: 0
 10603                           ;sm_ControlLearning_MC50.c: 337:         {;sm_ControlLearning_MC50.c: 338:             i
      +                          f((var_sys.FimCurso_CloseIsEnabled==YES)||( var_sys.LearningDecelaration==YES && (button
      +                          _struct.current == 0 || typeOpenOrder == TypeFull) && var_sys.programinAutomatic == 1))
 10604  002730  0101               	movlb	1	; () banked
 10605  002732  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
 10606  002734  B4D8               	btfsc	status,2,c
 10607  002736  D00C               	goto	u28470
 10608                           
 10609                           ; BSR set to: 1
 10610  002738  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 10611  00273A  A4D8               	btfss	status,2,c
 10612  00273C  D06F               	goto	l23771
 10613                           
 10614                           ; BSR set to: 1
 10615  00273E  504D               	movf	(_button_struct+1)^0,w,c	;volatile
 10616  002740  B4D8               	btfsc	status,2,c
 10617  002742  D003               	goto	u28460
 10618                           
 10619                           ; BSR set to: 1
 10620  002744  043A               	decf	sm_execute_ControlLearning@typeOpenOrder^0,w,c
 10621  002746  A4D8               	btfss	status,2,c
 10622  002748  D069               	goto	l23771
 10623  00274A                     u28460:
 10624                           
 10625                           ; BSR set to: 1
 10626  00274A  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 10627  00274C  A4D8               	btfss	status,2,c
 10628  00274E  D066               	goto	l23771
 10629  002750                     u28470:
 10630                           
 10631                           ; BSR set to: 1
 10632                           ;sm_ControlLearning_MC50.c: 339:             {;sm_ControlLearning_MC50.c: 342:          
      +                                 var_sys.Statedoorcontrol = st_Closed;
 10633  002750  0E01               	movlw	1
 10634  002752  6F1C               	movwf	(_var_sys+28)& (0+255),b	;volatile
 10635                           
 10636                           ;sm_ControlLearning_MC50.c: 343:                 var_sys.Counter_Learning = 0;
 10637  002754  0E00               	movlw	0
 10638  002756  6F17               	movwf	(_var_sys+23)& (0+255),b	;volatile
 10639                           
 10640                           ;sm_ControlLearning_MC50.c: 344:                 var_sys.LearningDecelaration = NO;
 10641  002758  0E00               	movlw	0
 10642  00275A  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
 10643                           
 10644                           ;sm_ControlLearning_MC50.c: 345:                 var_sys.StateMotor=Stopped;
 10645  00275C  0E00               	movlw	0
 10646  00275E  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10647                           
 10648                           ; BSR set to: 1
 10649                           ;sm_ControlLearning_MC50.c: 346:                 sm_send_event(&controlLearning_stateMac
      +                          hine, ev_GateClosed);
 10650  002760  0EB0               	movlw	low _controlLearning_stateMachine
 10651  002762  6E12               	movwf	sm_send_event@psm^0,c
 10652  002764  0E02               	movlw	high _controlLearning_stateMachine
 10653  002766  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10654  002768  0E00               	movlw	0
 10655  00276A  6E15               	movwf	(sm_send_event@event+1)^0,c
 10656  00276C  0E0A               	movlw	10
 10657  00276E  6E14               	movwf	sm_send_event@event^0,c
 10658  002770  ECD5  F045         	call	_sm_send_event	;wreg free
 10659                           
 10660                           ;sm_ControlLearning_MC50.c: 347:                 sm_send_event(&controlGate_stateMachine
      +                          , ev_LearningComplete);
 10661  002774  0EE7               	movlw	low _controlGate_stateMachine
 10662  002776  6E12               	movwf	sm_send_event@psm^0,c
 10663  002778  0E01               	movlw	high _controlGate_stateMachine
 10664  00277A  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10665  00277C  0E00               	movlw	0
 10666  00277E  6E15               	movwf	(sm_send_event@event+1)^0,c
 10667  002780  0E13               	movlw	19
 10668  002782  6E14               	movwf	sm_send_event@event^0,c
 10669  002784  ECD5  F045         	call	_sm_send_event	;wreg free
 10670                           
 10671                           ;sm_ControlLearning_MC50.c: 348:                 var_sys_NVM.learningTimeToClose=learn_s
      +                          t.timeClose;
 10672  002788  C060  F0D0         	movff	_learn_st,_var_sys_NVM+56	;volatile
 10673  00278C  C061  F0D1         	movff	_learn_st+1,_var_sys_NVM+57	;volatile
 10674  002790  C062  F0D2         	movff	_learn_st+2,_var_sys_NVM+58	;volatile
 10675  002794  C063  F0D3         	movff	_learn_st+3,_var_sys_NVM+59	;volatile
 10676                           
 10677                           ;sm_ControlLearning_MC50.c: 349:                 var_sys_NVM.learningTimeToOpen=learn_st
      +                          .timeOpen;
 10678  002798  C064  F0CC         	movff	_learn_st+4,_var_sys_NVM+52	;volatile
 10679  00279C  C065  F0CD         	movff	_learn_st+5,_var_sys_NVM+53	;volatile
 10680  0027A0  C066  F0CE         	movff	_learn_st+6,_var_sys_NVM+54	;volatile
 10681  0027A4  C067  F0CF         	movff	_learn_st+7,_var_sys_NVM+55	;volatile
 10682                           
 10683                           ;sm_ControlLearning_MC50.c: 350:                 if (var_sys.programinAutomatic == 1){
 10684  0027A8  0101               	movlb	1	; () banked
 10685  0027AA  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 10686  0027AC  A4D8               	btfss	status,2,c
 10687  0027AE  D005               	goto	l23749
 10688                           
 10689                           ; BSR set to: 1
 10690                           ;sm_ControlLearning_MC50.c: 351:                     var_sys_NVM.decelarationClose=learn
      +                          _st.timeDecelerationClose ;
 10691  0027B0  C068  F099         	movff	_learn_st+8,_var_sys_NVM+1	;volatile
 10692                           
 10693                           ;sm_ControlLearning_MC50.c: 352:                     var_sys_NVM.decelarationOpen=learn_
      +                          st.timeDecelerationOpen ;
 10694  0027B4  C069  F098         	movff	_learn_st+9,_var_sys_NVM	;volatile
 10695                           
 10696                           ;sm_ControlLearning_MC50.c: 353:                                 }
 10697  0027B8  D005               	goto	l23751
 10698  0027BA                     l23749:
 10699                           
 10700                           ; BSR set to: 1
 10701                           ;sm_ControlLearning_MC50.c: 355:                     var_sys_NVM.decelarationClose=4 ;
 10702  0027BA  0E04               	movlw	4
 10703  0027BC  0100               	movlb	0	; () banked
 10704  0027BE  6F99               	movwf	(_var_sys_NVM+1)& (0+255),b	;volatile
 10705                           
 10706                           ;sm_ControlLearning_MC50.c: 356:                     var_sys_NVM.decelarationOpen=4 ;
 10707  0027C0  0E04               	movlw	4
 10708  0027C2  6F98               	movwf	_var_sys_NVM& (0+255),b	;volatile
 10709  0027C4                     l23751:
 10710                           
 10711                           ;sm_ControlLearning_MC50.c: 358:                 var_sys_NVM.learningCurrentNormalClose=
      +                          learn_st.closeCurrent;
 10712  0027C4  C06C  F0C8         	movff	_learn_st+12,_var_sys_NVM+48	;volatile
 10713  0027C8  C06D  F0C9         	movff	_learn_st+13,_var_sys_NVM+49	;volatile
 10714                           
 10715                           ;sm_ControlLearning_MC50.c: 359:                 var_sys_NVM.learningCurrentNormalOpen=l
      +                          earn_st.openCurrent;
 10716  0027CC  C06A  F0CA         	movff	_learn_st+10,_var_sys_NVM+50	;volatile
 10717  0027D0  C06B  F0CB         	movff	_learn_st+11,_var_sys_NVM+51	;volatile
 10718                           
 10719                           ;sm_ControlLearning_MC50.c: 360:                 var_sys_NVM.learningCurrentDecelaration
      +                          Open=learn_st.openHistCurrent;
 10720  0027D4  C06E  F0C4         	movff	_learn_st+14,_var_sys_NVM+44	;volatile
 10721  0027D8  C06F  F0C5         	movff	_learn_st+15,_var_sys_NVM+45	;volatile
 10722  0027DC  0100               	movlb	0	; () banked
 10723  0027DE  6BC6               	clrf	(_var_sys_NVM+46)& (0+255),b	;volatile
 10724  0027E0  6BC7               	clrf	(_var_sys_NVM+47)& (0+255),b	;volatile
 10725                           
 10726                           ; BSR set to: 0
 10727                           ;sm_ControlLearning_MC50.c: 361:                 var_sys_NVM.learningCurrentDecelaration
      +                          Close=learn_st.closeHistCurrent;
 10728  0027E2  C070  F0C0         	movff	_learn_st+16,_var_sys_NVM+40	;volatile
 10729  0027E6  C071  F0C1         	movff	_learn_st+17,_var_sys_NVM+41	;volatile
 10730  0027EA  6BC2               	clrf	(_var_sys_NVM+42)& (0+255),b	;volatile
 10731  0027EC  6BC3               	clrf	(_var_sys_NVM+43)& (0+255),b	;volatile
 10732                           
 10733                           ; BSR set to: 0
 10734                           ;sm_ControlLearning_MC50.c: 362:                 SaveNVM_VarSystem(pageMemoryP);
 10735  0027EE  0E00               	movlw	0
 10736  0027F0  ECE3  F049         	call	_SaveNVM_VarSystem
 10737                           
 10738                           ;sm_ControlLearning_MC50.c: 363:                 SaveNVM_VarSystem(pageMemoryLearningVar
      +                          s);
 10739  0027F4  0E03               	movlw	3
 10740  0027F6  ECE3  F049         	call	_SaveNVM_VarSystem
 10741                           
 10742                           ;sm_ControlLearning_MC50.c: 364:                 SaveNVM_VarSystem(pageMemoryCounters);
 10743  0027FA  0E02               	movlw	2
 10744  0027FC  ECE3  F049         	call	_SaveNVM_VarSystem
 10745                           
 10746                           ;sm_ControlLearning_MC50.c: 365:                 var_sys.LearningIsEnabled=NO;
 10747  002800  0E00               	movlw	0
 10748  002802  0101               	movlb	1	; () banked
 10749  002804  6F26               	movwf	(_var_sys+38)& (0+255),b	;volatile
 10750                           
 10751                           ; BSR set to: 1
 10752                           ;sm_ControlLearning_MC50.c: 366:                 var_sys.PositionActual=0;
 10753  002806  0E00               	movlw	0
 10754  002808  6F1E               	movwf	(_var_sys+30)& (0+255),b	;volatile
 10755  00280A  0E00               	movlw	0
 10756  00280C  6F1F               	movwf	(_var_sys+31)& (0+255),b	;volatile
 10757  00280E  0E00               	movlw	0
 10758  002810  6F20               	movwf	(_var_sys+32)& (0+255),b	;volatile
 10759  002812  0E00               	movlw	0
 10760  002814  6F21               	movwf	(_var_sys+33)& (0+255),b	;volatile
 10761                           
 10762                           ; BSR set to: 1
 10763                           ;sm_ControlLearning_MC50.c: 367:                 var_sys.PositionIsLost = NO;
 10764  002816  0E00               	movlw	0
 10765  002818  6F48               	movwf	(_var_sys+72)& (0+255),b	;volatile
 10766                           
 10767                           ;sm_ControlLearning_MC50.c: 369:             }
 10768  00281A  0012               	return	
 10769  00281C                     l23771:
 10770                           
 10771                           ; BSR set to: 1
 10772  00281C  5100               	movf	_var_sys& (0+255),w,b	;volatile
 10773  00281E  B4D8               	btfsc	status,2,c
 10774  002820  D643               	goto	u28130
 10775                           
 10776                           ; BSR set to: 1
 10777  002822  504D               	movf	(_button_struct+1)^0,w,c	;volatile
 10778  002824  B4D8               	btfsc	status,2,c
 10779  002826  D003               	goto	u28510
 10780                           
 10781                           ; BSR set to: 1
 10782  002828  043A               	decf	sm_execute_ControlLearning@typeOpenOrder^0,w,c
 10783  00282A  A4D8               	btfss	status,2,c
 10784  00282C  D003               	goto	l23783
 10785  00282E                     u28510:
 10786                           
 10787                           ; BSR set to: 1
 10788  00282E  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 10789  002830  B4D8               	btfsc	status,2,c
 10790  002832  D73F               	goto	u28380
 10791  002834                     l23783:
 10792                           
 10793                           ; BSR set to: 1
 10794  002834  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 10795  002836  A4D8               	btfss	status,2,c
 10796  002838  D008               	goto	l23789
 10797                           
 10798                           ; BSR set to: 1
 10799                           ;sm_ControlLearning_MC50.c: 384:                  if(ts_system.TimeWaitToGetCurrent>0)
 10800  00283A  BFD4               	btfsc	(_ts_system+53)& (0+255),7,b	;volatile
 10801  00283C  0012               	return	
 10802  00283E  51D4               	movf	(_ts_system+53)& (0+255),w,b	;volatile
 10803  002840  E103               	bnz	u28540
 10804  002842  05D3               	decf	(_ts_system+52)& (0+255),w,b	;volatile
 10805  002844  A0D8               	btfss	status,0,c
 10806  002846  0012               	return	
 10807  002848                     u28540:
 10808  002848  D6D8               	goto	u28260
 10809  00284A                     l23789:
 10810                           
 10811                           ; BSR set to: 1
 10812                           ;sm_ControlLearning_MC50.c: 390:             {;sm_ControlLearning_MC50.c: 391:          
      +                                 var_sys.Counter_Learning = 1;
 10813  00284A  0E01               	movlw	1
 10814  00284C  6F17               	movwf	(_var_sys+23)& (0+255),b	;volatile
 10815                           
 10816                           ;sm_ControlLearning_MC50.c: 392:                 ts_system.TimeWaitToNextState=(2*(1000/
      +                          50));
 10817  00284E  0E00               	movlw	0
 10818  002850  6FC4               	movwf	(_ts_system+37)& (0+255),b	;volatile
 10819  002852  0E28               	movlw	40
 10820  002854  6FC3               	movwf	(_ts_system+36)& (0+255),b	;volatile
 10821                           
 10822                           ; BSR set to: 1
 10823                           ;sm_ControlLearning_MC50.c: 395:                 if (ts_system.TimeWaitReleCapacitor <=0
      +                          )
 10824  002856  BFE4               	btfsc	(_ts_system+69)& (0+255),7,b	;volatile
 10825  002858  D005               	goto	u28550
 10826  00285A  51E4               	movf	(_ts_system+69)& (0+255),w,b	;volatile
 10827  00285C  E102               	bnz	u28551
 10828  00285E  05E3               	decf	(_ts_system+68)& (0+255),w,b	;volatile
 10829  002860  B0D8               	btfsc	status,0,c
 10830  002862                     u28551:
 10831  002862  0012               	return	
 10832  002864                     u28550:
 10833                           
 10834                           ; BSR set to: 1
 10835                           ;sm_ControlLearning_MC50.c: 396:                 {;sm_ControlLearning_MC50.c: 397:      
      +                                     if(ts_system.TimeWaitToGetCurrent>0)
 10836  002864  BFD4               	btfsc	(_ts_system+53)& (0+255),7,b	;volatile
 10837  002866  0012               	return	
 10838  002868  51D4               	movf	(_ts_system+53)& (0+255),w,b	;volatile
 10839  00286A  E103               	bnz	u28560
 10840  00286C  05D3               	decf	(_ts_system+52)& (0+255),w,b	;volatile
 10841  00286E  A0D8               	btfss	status,0,c
 10842  002870  0012               	return	
 10843  002872                     u28560:
 10844                           
 10845                           ; BSR set to: 1
 10846                           ;sm_ControlLearning_MC50.c: 398:                 {;sm_ControlLearning_MC50.c: 399:      
      +                                         learn_st.closeCurrent=calculateMean(learn_st.closeCurrent,var_sys.ActualC
      +                          urrent);
 10847  002872  C06C  F010         	movff	_learn_st+12,calculateMean@meanValue	;volatile
 10848  002876  C06D  F011         	movff	_learn_st+13,calculateMean@meanValue+1	;volatile
 10849  00287A  6A12               	clrf	(calculateMean@meanValue+2)^0,c
 10850  00287C  6A13               	clrf	(calculateMean@meanValue+3)^0,c
 10851  00287E  C12E  F014         	movff	_var_sys+46,calculateMean@newValue	;volatile
 10852  002882  C12F  F015         	movff	_var_sys+47,calculateMean@newValue+1	;volatile
 10853  002886  6A16               	clrf	(calculateMean@newValue+2)^0,c
 10854  002888  6A17               	clrf	(calculateMean@newValue+3)^0,c
 10855  00288A  EC75  F045         	call	_calculateMean	;wreg free
 10856  00288E  C010  F06C         	movff	?_calculateMean,_learn_st+12	;volatile
 10857  002892  C011  F06D         	movff	?_calculateMean+1,_learn_st+13	;volatile
 10858  002896  0012               	return	
 10859  002898                     l23799:
 10860  002898  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
 10861  00289C  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
 10862  0028A0  50DF               	movf	indf2,w,c
 10863  0028A2  0100               	movlb	0	; () banked
 10864  0028A4  6FDE               	movwf	??_sm_execute_ControlLearning& (0+255),b
 10865  0028A6  6BDF               	clrf	(??_sm_execute_ControlLearning+1)& (0+255),b
 10866                           
 10867                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10868                           ; Switch size 1, requested type "simple"
 10869                           ; Number of cases is 1, Range of values is 0 to 0
 10870                           ; switch strategies available:
 10871                           ; Name         Instructions Cycles
 10872                           ; simple_byte            4     3 (average)
 10873                           ;	Chosen strategy is simple_byte
 10874  0028A8  51DF               	movf	(??_sm_execute_ControlLearning+1)& (0+255),w,b
 10875  0028AA  0A00               	xorlw	0	; case 0
 10876  0028AC  A4D8               	btfss	status,2,c
 10877  0028AE  0012               	return	
 10878                           
 10879                           ; BSR set to: 0
 10880                           ; Switch size 1, requested type "simple"
 10881                           ; Number of cases is 6, Range of values is 0 to 5
 10882                           ; switch strategies available:
 10883                           ; Name         Instructions Cycles
 10884                           ; simple_byte           19    10 (average)
 10885                           ;	Chosen strategy is simple_byte
 10886  0028B0  51DE               	movf	??_sm_execute_ControlLearning& (0+255),w,b
 10887  0028B2  0A00               	xorlw	0	; case 0
 10888  0028B4  B4D8               	btfsc	status,2,c
 10889  0028B6  D570               	goto	l23545
 10890  0028B8  0A01               	xorlw	1	; case 1
 10891  0028BA  B4D8               	btfsc	status,2,c
 10892  0028BC  D5BB               	goto	l23569
 10893  0028BE  0A03               	xorlw	3	; case 2
 10894  0028C0  B4D8               	btfsc	status,2,c
 10895  0028C2  D5FA               	goto	l23603
 10896  0028C4  0A01               	xorlw	1	; case 3
 10897  0028C6  B4D8               	btfsc	status,2,c
 10898  0028C8  D65A               	goto	l23637
 10899  0028CA  0A07               	xorlw	7	; case 4
 10900  0028CC  B4D8               	btfsc	status,2,c
 10901  0028CE  D6AA               	goto	l23669
 10902  0028D0  0A01               	xorlw	1	; case 5
 10903  0028D2  A4D8               	btfss	status,2,c
 10904  0028D4  0012               	return	
 10905  0028D6  D72C               	goto	l23725
 10906  0028D8                     __end_of_sm_execute_ControlLearning:
 10907                           	callstack 0
 10908                           
 10909 ;; *************** function _generateErrorLearnig *****************
 10910 ;; Defined at:
 10911 ;;		line 424 in file "sm_ControlLearning_MC50.c"
 10912 ;; Parameters:    Size  Location     Type
 10913 ;;		None
 10914 ;; Auto vars:     Size  Location     Type
 10915 ;;		None
 10916 ;; Return value:  Size  Location     Type
 10917 ;;                  1    wreg      void 
 10918 ;; Registers used:
 10919 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10920 ;; Tracked objects:
 10921 ;;		On entry : 3E/1
 10922 ;;		On exit  : 0/0
 10923 ;;		Unchanged: 0/0
 10924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10928 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10929 ;;Total ram usage:        0 bytes
 10930 ;; Hardware stack levels used: 1
 10931 ;; Hardware stack levels required when called: 6
 10932 ;; This function calls:
 10933 ;;		_sm_init
 10934 ;; This function is called by:
 10935 ;;		_sm_execute_ControlLearning
 10936 ;; This function uses a non-reentrant model
 10937 ;;
 10938                           
 10939                           	psect	text19
 10940  008A1C                     __ptext19:
 10941                           	callstack 0
 10942  008A1C                     _generateErrorLearnig:
 10943                           	callstack 22
 10944                           
 10945                           ;sm_ControlLearning_MC50.c: 428:     var_sys.LearningIsEnabled=NO;
 10946                           
 10947                           ;incstack = 0
 10948  008A1C  0E00               	movlw	0
 10949  008A1E  0101               	movlb	1	; () banked
 10950  008A20  6F26               	movwf	(_var_sys+38)& (0+255),b	;volatile
 10951                           
 10952                           ; BSR set to: 1
 10953                           ;sm_ControlLearning_MC50.c: 430:     sm_init(&menuConfiguration_stateMachine,st_MainMenu
      +                          ,HIST_NONE);
 10954  008A22  0EBB               	movlw	low _menuConfiguration_stateMachine
 10955  008A24  6E12               	movwf	sm_init@psm^0,c
 10956  008A26  0E02               	movlw	high _menuConfiguration_stateMachine
 10957  008A28  6E13               	movwf	(sm_init@psm+1)^0,c
 10958  008A2A  0E00               	movlw	0
 10959  008A2C  6E15               	movwf	(sm_init@initial_state+1)^0,c
 10960  008A2E  0E00               	movlw	0
 10961  008A30  6E14               	movwf	sm_init@initial_state^0,c
 10962  008A32  0E00               	movlw	0
 10963  008A34  6E16               	movwf	sm_init@hist_mode^0,c
 10964  008A36  ECE5  F046         	call	_sm_init	;wreg free
 10965                           
 10966                           ;sm_ControlLearning_MC50.c: 431:     sm_init(&main_stateMachine,st_standBy,HIST_NONE);
 10967  008A3A  0EF2               	movlw	low _main_stateMachine
 10968  008A3C  6E12               	movwf	sm_init@psm^0,c
 10969  008A3E  0E01               	movlw	high _main_stateMachine
 10970  008A40  6E13               	movwf	(sm_init@psm+1)^0,c
 10971  008A42  0E00               	movlw	0
 10972  008A44  6E15               	movwf	(sm_init@initial_state+1)^0,c
 10973  008A46  0E00               	movlw	0
 10974  008A48  6E14               	movwf	sm_init@initial_state^0,c
 10975  008A4A  0E00               	movlw	0
 10976  008A4C  6E16               	movwf	sm_init@hist_mode^0,c
 10977  008A4E  ECE5  F046         	call	_sm_init	;wreg free
 10978                           
 10979                           ;sm_ControlLearning_MC50.c: 432:     sm_init(&controlGate_stateMachine,st_Idle,HIST_NONE
      +                          );
 10980  008A52  0EE7               	movlw	low _controlGate_stateMachine
 10981  008A54  6E12               	movwf	sm_init@psm^0,c
 10982  008A56  0E01               	movlw	high _controlGate_stateMachine
 10983  008A58  6E13               	movwf	(sm_init@psm+1)^0,c
 10984  008A5A  0E00               	movlw	0
 10985  008A5C  6E15               	movwf	(sm_init@initial_state+1)^0,c
 10986  008A5E  0E00               	movlw	0
 10987  008A60  6E14               	movwf	sm_init@initial_state^0,c
 10988  008A62  0E00               	movlw	0
 10989  008A64  6E16               	movwf	sm_init@hist_mode^0,c
 10990  008A66  ECE5  F046         	call	_sm_init	;wreg free
 10991                           
 10992                           ;sm_ControlLearning_MC50.c: 433:     sm_init(&controlLearning_stateMachine,st_InitLearni
      +                          ng,HIST_NONE);
 10993  008A6A  0EB0               	movlw	low _controlLearning_stateMachine
 10994  008A6C  6E12               	movwf	sm_init@psm^0,c
 10995  008A6E  0E02               	movlw	high _controlLearning_stateMachine
 10996  008A70  6E13               	movwf	(sm_init@psm+1)^0,c
 10997  008A72  0E00               	movlw	0
 10998  008A74  6E15               	movwf	(sm_init@initial_state+1)^0,c
 10999  008A76  0E00               	movlw	0
 11000  008A78  6E14               	movwf	sm_init@initial_state^0,c
 11001  008A7A  0E00               	movlw	0
 11002  008A7C  6E16               	movwf	sm_init@hist_mode^0,c
 11003  008A7E  ECE5  F046         	call	_sm_init	;wreg free
 11004  008A82  0012               	return		;funcret
 11005  008A84                     __end_of_generateErrorLearnig:
 11006                           	callstack 0
 11007                           
 11008 ;; *************** function _sm_init *****************
 11009 ;; Defined at:
 11010 ;;		line 12 in file "sm_common_MC50.c"
 11011 ;; Parameters:    Size  Location     Type
 11012 ;;  psm             2   17[COMRAM] PTR struct .
 11013 ;;		 -> controlLearning_stateMachine(11), controlGate_stateMachine(11), main_stateMachine(11), menuConfiguration_stateMa
      +chine(11), 
 11014 ;;  initial_stat    2   19[COMRAM] int 
 11015 ;;  hist_mode       1   21[COMRAM] enum E348
 11016 ;; Auto vars:     Size  Location     Type
 11017 ;;		None
 11018 ;; Return value:  Size  Location     Type
 11019 ;;                  1    wreg      void 
 11020 ;; Registers used:
 11021 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11022 ;; Tracked objects:
 11023 ;;		On entry : 0/1
 11024 ;;		On exit  : 0/0
 11025 ;;		Unchanged: 0/0
 11026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11027 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11030 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11031 ;;Total ram usage:        5 bytes
 11032 ;; Hardware stack levels used: 1
 11033 ;; Hardware stack levels required when called: 5
 11034 ;; This function calls:
 11035 ;;		_sm_restart
 11036 ;; This function is called by:
 11037 ;;		_main
 11038 ;;		_generateErrorLearnig
 11039 ;; This function uses a non-reentrant model
 11040 ;;
 11041                           
 11042                           	psect	text20
 11043  008DCA                     __ptext20:
 11044                           	callstack 0
 11045  008DCA                     _sm_init:
 11046                           	callstack 25
 11047                           
 11048                           ;sm_common_MC50.c: 12: void sm_init(sm_t *psm, int initial_state, sm_history_t hist_mode
      +                          );sm_common_MC50.c: 13: {;sm_common_MC50.c: 14:  psm->initial_state = initial_state;
 11049                           
 11050                           ;incstack = 0
 11051  008DCA  EE20 F002          	lfsr	2,2
 11052  008DCE  5012               	movf	sm_init@psm^0,w,c
 11053  008DD0  26D9               	addwf	fsr2l,f,c
 11054  008DD2  5013               	movf	(sm_init@psm+1)^0,w,c
 11055  008DD4  22DA               	addwfc	fsr2h,f,c
 11056  008DD6  C014  FFDE         	movff	sm_init@initial_state,postinc2
 11057  008DDA  C015  FFDD         	movff	sm_init@initial_state+1,postdec2
 11058                           
 11059                           ;sm_common_MC50.c: 15:  psm->history = hist_mode;
 11060  008DDE  EE20 F006          	lfsr	2,6
 11061  008DE2  5012               	movf	sm_init@psm^0,w,c
 11062  008DE4  26D9               	addwf	fsr2l,f,c
 11063  008DE6  5013               	movf	(sm_init@psm+1)^0,w,c
 11064  008DE8  22DA               	addwfc	fsr2h,f,c
 11065  008DEA  C016  FFDF         	movff	sm_init@hist_mode,indf2
 11066                           
 11067                           ;sm_common_MC50.c: 16:  psm->current_state = initial_state;
 11068  008DEE  C012  FFD9         	movff	sm_init@psm,fsr2l
 11069  008DF2  C013  FFDA         	movff	sm_init@psm+1,fsr2h
 11070  008DF6  C014  FFDE         	movff	sm_init@initial_state,postinc2
 11071  008DFA  C015  FFDD         	movff	sm_init@initial_state+1,postdec2
 11072                           
 11073                           ;sm_common_MC50.c: 19:  psm->parent_machine = ((void*)0);
 11074  008DFE  EE20 F007          	lfsr	2,7
 11075  008E02  5012               	movf	sm_init@psm^0,w,c
 11076  008E04  26D9               	addwf	fsr2l,f,c
 11077  008E06  5013               	movf	(sm_init@psm+1)^0,w,c
 11078  008E08  22DA               	addwfc	fsr2h,f,c
 11079  008E0A  0E00               	movlw	0
 11080  008E0C  6EDE               	movwf	postinc2,c
 11081  008E0E  0E00               	movlw	0
 11082  008E10  6EDD               	movwf	postdec2,c
 11083                           
 11084                           ;sm_common_MC50.c: 20:  sm_restart(psm);
 11085  008E12  C012  F010         	movff	sm_init@psm,sm_restart@psm
 11086  008E16  C013  F011         	movff	sm_init@psm+1,sm_restart@psm+1
 11087  008E1A  ECC3  F048         	call	_sm_restart	;wreg free
 11088  008E1E  0012               	return		;funcret
 11089  008E20                     __end_of_sm_init:
 11090                           	callstack 0
 11091                           
 11092 ;; *************** function _sm_restart *****************
 11093 ;; Defined at:
 11094 ;;		line 23 in file "sm_common_MC50.c"
 11095 ;; Parameters:    Size  Location     Type
 11096 ;;  psm             2   15[COMRAM] PTR struct .
 11097 ;;		 -> controlLearning_stateMachine(11), controlGate_stateMachine(11), main_stateMachine(11), menuConfiguration_stateMa
      +chine(11), 
 11098 ;; Auto vars:     Size  Location     Type
 11099 ;;		None
 11100 ;; Return value:  Size  Location     Type
 11101 ;;                  1    wreg      void 
 11102 ;; Registers used:
 11103 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 11104 ;; Tracked objects:
 11105 ;;		On entry : 0/1
 11106 ;;		On exit  : 0/0
 11107 ;;		Unchanged: 0/0
 11108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11109 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11112 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11113 ;;Total ram usage:        2 bytes
 11114 ;; Hardware stack levels used: 1
 11115 ;; Hardware stack levels required when called: 4
 11116 ;; This function calls:
 11117 ;;		Nothing
 11118 ;; This function is called by:
 11119 ;;		_sm_init
 11120 ;; This function uses a non-reentrant model
 11121 ;;
 11122                           
 11123                           	psect	text21
 11124  009186                     __ptext21:
 11125                           	callstack 0
 11126  009186                     _sm_restart:
 11127                           	callstack 25
 11128                           
 11129                           ;sm_common_MC50.c: 24:  if(psm->history == HIST_NONE){
 11130                           
 11131                           ;incstack = 0
 11132  009186  EE20 F006          	lfsr	2,6
 11133  00918A  5010               	movf	sm_restart@psm^0,w,c
 11134  00918C  26D9               	addwf	fsr2l,f,c
 11135  00918E  5011               	movf	(sm_restart@psm+1)^0,w,c
 11136  009190  22DA               	addwfc	fsr2h,f,c
 11137  009192  50DF               	movf	indf2,w,c
 11138  009194  A4D8               	btfss	status,2,c
 11139  009196  D00E               	goto	l20579
 11140                           
 11141                           ;sm_common_MC50.c: 25:   psm->current_state = psm->initial_state;
 11142  009198  EE20 F002          	lfsr	2,2
 11143  00919C  5010               	movf	sm_restart@psm^0,w,c
 11144  00919E  26D9               	addwf	fsr2l,f,c
 11145  0091A0  5011               	movf	(sm_restart@psm+1)^0,w,c
 11146  0091A2  22DA               	addwfc	fsr2h,f,c
 11147  0091A4  C010  FFE1         	movff	sm_restart@psm,fsr1l
 11148  0091A8  C011  FFE2         	movff	sm_restart@psm+1,fsr1h
 11149  0091AC  CFDE FFE6          	movff	postinc2,postinc1
 11150  0091B0  CFDD FFE5          	movff	postdec2,postdec1
 11151  0091B4                     l20579:
 11152                           
 11153                           ;sm_common_MC50.c: 27:  psm->last_event = 0;
 11154  0091B4  EE20 F004          	lfsr	2,4
 11155  0091B8  5010               	movf	sm_restart@psm^0,w,c
 11156  0091BA  26D9               	addwf	fsr2l,f,c
 11157  0091BC  5011               	movf	(sm_restart@psm+1)^0,w,c
 11158  0091BE  22DA               	addwfc	fsr2h,f,c
 11159  0091C0  0E00               	movlw	0
 11160  0091C2  6EDE               	movwf	postinc2,c
 11161  0091C4  0E00               	movlw	0
 11162  0091C6  6EDD               	movwf	postdec2,c
 11163  0091C8  0012               	return		;funcret
 11164  0091CA                     __end_of_sm_restart:
 11165                           	callstack 0
 11166                           
 11167 ;; *************** function _clearLearningValue *****************
 11168 ;; Defined at:
 11169 ;;		line 436 in file "sm_ControlLearning_MC50.c"
 11170 ;; Parameters:    Size  Location     Type
 11171 ;;		None
 11172 ;; Auto vars:     Size  Location     Type
 11173 ;;		None
 11174 ;; Return value:  Size  Location     Type
 11175 ;;                  1    wreg      void 
 11176 ;; Registers used:
 11177 ;;		wreg, status,2
 11178 ;; Tracked objects:
 11179 ;;		On entry : 3F/1
 11180 ;;		On exit  : 3F/0
 11181 ;;		Unchanged: 0/0
 11182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11186 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11187 ;;Total ram usage:        0 bytes
 11188 ;; Hardware stack levels used: 1
 11189 ;; Hardware stack levels required when called: 4
 11190 ;; This function calls:
 11191 ;;		Nothing
 11192 ;; This function is called by:
 11193 ;;		_sm_execute_ControlLearning
 11194 ;; This function uses a non-reentrant model
 11195 ;;
 11196                           
 11197                           	psect	text22
 11198  0084B4                     __ptext22:
 11199                           	callstack 0
 11200  0084B4                     _clearLearningValue:
 11201                           	callstack 24
 11202                           
 11203                           ; BSR set to: 1
 11204                           ;sm_ControlLearning_MC50.c: 438:     learn_st.timeOpen=0;
 11205                           
 11206                           ;incstack = 0
 11207  0084B4  0E00               	movlw	0
 11208  0084B6  0100               	movlb	0	; () banked
 11209  0084B8  6F64               	movwf	(_learn_st+4)& (0+255),b	;volatile
 11210  0084BA  0E00               	movlw	0
 11211  0084BC  6F65               	movwf	(_learn_st+5)& (0+255),b	;volatile
 11212  0084BE  0E00               	movlw	0
 11213  0084C0  6F66               	movwf	(_learn_st+6)& (0+255),b	;volatile
 11214  0084C2  0E00               	movlw	0
 11215  0084C4  6F67               	movwf	(_learn_st+7)& (0+255),b	;volatile
 11216                           
 11217                           ;sm_ControlLearning_MC50.c: 439:     learn_st.timeClose=0;
 11218  0084C6  0E00               	movlw	0
 11219  0084C8  6F60               	movwf	_learn_st& (0+255),b	;volatile
 11220  0084CA  0E00               	movlw	0
 11221  0084CC  6F61               	movwf	(_learn_st+1)& (0+255),b	;volatile
 11222  0084CE  0E00               	movlw	0
 11223  0084D0  6F62               	movwf	(_learn_st+2)& (0+255),b	;volatile
 11224  0084D2  0E00               	movlw	0
 11225  0084D4  6F63               	movwf	(_learn_st+3)& (0+255),b	;volatile
 11226                           
 11227                           ;sm_ControlLearning_MC50.c: 440:     learn_st.timeDecelerationOpen=0;
 11228  0084D6  0E00               	movlw	0
 11229  0084D8  6F69               	movwf	(_learn_st+9)& (0+255),b	;volatile
 11230                           
 11231                           ;sm_ControlLearning_MC50.c: 441:     learn_st.timeDecelerationClose=0;
 11232  0084DA  0E00               	movlw	0
 11233  0084DC  6F68               	movwf	(_learn_st+8)& (0+255),b	;volatile
 11234                           
 11235                           ;sm_ControlLearning_MC50.c: 442:     learn_st.openCurrent=0;
 11236  0084DE  0E00               	movlw	0
 11237  0084E0  6F6B               	movwf	(_learn_st+11)& (0+255),b	;volatile
 11238  0084E2  0E00               	movlw	0
 11239  0084E4  6F6A               	movwf	(_learn_st+10)& (0+255),b	;volatile
 11240                           
 11241                           ;sm_ControlLearning_MC50.c: 443:     learn_st.closeCurrent=0;
 11242  0084E6  0E00               	movlw	0
 11243  0084E8  6F6D               	movwf	(_learn_st+13)& (0+255),b	;volatile
 11244  0084EA  0E00               	movlw	0
 11245  0084EC  6F6C               	movwf	(_learn_st+12)& (0+255),b	;volatile
 11246                           
 11247                           ;sm_ControlLearning_MC50.c: 444:     learn_st.openHistCurrent=0;
 11248  0084EE  0E00               	movlw	0
 11249  0084F0  6F6F               	movwf	(_learn_st+15)& (0+255),b	;volatile
 11250  0084F2  0E00               	movlw	0
 11251  0084F4  6F6E               	movwf	(_learn_st+14)& (0+255),b	;volatile
 11252                           
 11253                           ;sm_ControlLearning_MC50.c: 445:     learn_st.closeHistCurrent=0;
 11254  0084F6  0E00               	movlw	0
 11255  0084F8  6F71               	movwf	(_learn_st+17)& (0+255),b	;volatile
 11256  0084FA  0E00               	movlw	0
 11257  0084FC  6F70               	movwf	(_learn_st+16)& (0+255),b	;volatile
 11258                           
 11259                           ;sm_ControlLearning_MC50.c: 446:     var_sys_NVM.learningCurrentNormalClose=0;
 11260  0084FE  0E00               	movlw	0
 11261  008500  6FC9               	movwf	(_var_sys_NVM+49)& (0+255),b	;volatile
 11262  008502  0E00               	movlw	0
 11263  008504  6FC8               	movwf	(_var_sys_NVM+48)& (0+255),b	;volatile
 11264                           
 11265                           ;sm_ControlLearning_MC50.c: 447:     var_sys_NVM.learningCurrentNormalOpen=0;
 11266  008506  0E00               	movlw	0
 11267  008508  6FCB               	movwf	(_var_sys_NVM+51)& (0+255),b	;volatile
 11268  00850A  0E00               	movlw	0
 11269  00850C  6FCA               	movwf	(_var_sys_NVM+50)& (0+255),b	;volatile
 11270                           
 11271                           ;sm_ControlLearning_MC50.c: 448:     var_sys_NVM.learningCurrentDecelarationClose=0;
 11272  00850E  0E00               	movlw	0
 11273  008510  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 11274  008512  0E00               	movlw	0
 11275  008514  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 11276  008516  0E00               	movlw	0
 11277  008518  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 11278  00851A  0E00               	movlw	0
 11279  00851C  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 11280                           
 11281                           ;sm_ControlLearning_MC50.c: 449:     var_sys_NVM.learningCurrentDecelarationOpen=0;
 11282  00851E  0E00               	movlw	0
 11283  008520  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 11284  008522  0E00               	movlw	0
 11285  008524  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 11286  008526  0E00               	movlw	0
 11287  008528  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 11288  00852A  0E00               	movlw	0
 11289  00852C  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 11290                           
 11291                           ; BSR set to: 0
 11292  00852E  0012               	return		;funcret
 11293  008530                     __end_of_clearLearningValue:
 11294                           	callstack 0
 11295                           
 11296 ;; *************** function _calculateMean *****************
 11297 ;; Defined at:
 11298 ;;		line 411 in file "sm_ControlLearning_MC50.c"
 11299 ;; Parameters:    Size  Location     Type
 11300 ;;  meanValue       4   15[COMRAM] unsigned long 
 11301 ;;  newValue        4   19[COMRAM] unsigned long 
 11302 ;; Auto vars:     Size  Location     Type
 11303 ;;		None
 11304 ;; Return value:  Size  Location     Type
 11305 ;;                  4   15[COMRAM] unsigned long 
 11306 ;; Registers used:
 11307 ;;		wreg, status,2, status,0
 11308 ;; Tracked objects:
 11309 ;;		On entry : 3E/1
 11310 ;;		On exit  : 3E/0
 11311 ;;		Unchanged: 3E/0
 11312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11313 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11315 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11316 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11317 ;;Total ram usage:       12 bytes
 11318 ;; Hardware stack levels used: 1
 11319 ;; Hardware stack levels required when called: 4
 11320 ;; This function calls:
 11321 ;;		Nothing
 11322 ;; This function is called by:
 11323 ;;		_sm_execute_ControlLearning
 11324 ;; This function uses a non-reentrant model
 11325 ;;
 11326                           
 11327                           	psect	text23
 11328  008AEA                     __ptext23:
 11329                           	callstack 0
 11330  008AEA                     _calculateMean:
 11331                           	callstack 24
 11332                           
 11333                           ;sm_ControlLearning_MC50.c: 411: unsigned long calculateMean(unsigned long meanValue,uns
      +                          igned long newValue);sm_ControlLearning_MC50.c: 412: {;sm_ControlLearning_MC50.c: 413:  
      +                             if(meanValue==0)
 11334                           
 11335                           ; BSR set to: 0
 11336                           ;incstack = 0
 11337  008AEA  5010               	movf	calculateMean@meanValue^0,w,c
 11338  008AEC  1011               	iorwf	(calculateMean@meanValue+1)^0,w,c
 11339  008AEE  1012               	iorwf	(calculateMean@meanValue+2)^0,w,c
 11340  008AF0  1013               	iorwf	(calculateMean@meanValue+3)^0,w,c
 11341  008AF2  A4D8               	btfss	status,2,c
 11342  008AF4  D009               	goto	l21773
 11343                           
 11344                           ;sm_ControlLearning_MC50.c: 414:     {;sm_ControlLearning_MC50.c: 415:         meanValue
      +                          =newValue;
 11345  008AF6  C014  F010         	movff	calculateMean@newValue,calculateMean@meanValue
 11346  008AFA  C015  F011         	movff	calculateMean@newValue+1,calculateMean@meanValue+1
 11347  008AFE  C016  F012         	movff	calculateMean@newValue+2,calculateMean@meanValue+2
 11348  008B02  C017  F013         	movff	calculateMean@newValue+3,calculateMean@meanValue+3
 11349                           
 11350                           ;sm_ControlLearning_MC50.c: 416:     }
 11351  008B06  D019               	goto	l21775
 11352  008B08                     l21773:
 11353                           
 11354                           ;sm_ControlLearning_MC50.c: 418:     {;sm_ControlLearning_MC50.c: 419:         meanValue
      +                          =(meanValue+newValue)/2;
 11355  008B08  5014               	movf	calculateMean@newValue^0,w,c
 11356  008B0A  2410               	addwf	calculateMean@meanValue^0,w,c
 11357  008B0C  6E18               	movwf	??_calculateMean^0,c
 11358  008B0E  5015               	movf	(calculateMean@newValue+1)^0,w,c
 11359  008B10  2011               	addwfc	(calculateMean@meanValue+1)^0,w,c
 11360  008B12  6E19               	movwf	(??_calculateMean+1)^0,c
 11361  008B14  5016               	movf	(calculateMean@newValue+2)^0,w,c
 11362  008B16  2012               	addwfc	(calculateMean@meanValue+2)^0,w,c
 11363  008B18  6E1A               	movwf	(??_calculateMean+2)^0,c
 11364  008B1A  5017               	movf	(calculateMean@newValue+3)^0,w,c
 11365  008B1C  2013               	addwfc	(calculateMean@meanValue+3)^0,w,c
 11366  008B1E  6E1B               	movwf	(??_calculateMean+3)^0,c
 11367  008B20  90D8               	bcf	status,0,c
 11368  008B22  321B               	rrcf	(??_calculateMean+3)^0,f,c
 11369  008B24  321A               	rrcf	(??_calculateMean+2)^0,f,c
 11370  008B26  3219               	rrcf	(??_calculateMean+1)^0,f,c
 11371  008B28  3218               	rrcf	??_calculateMean^0,f,c
 11372  008B2A  C018  F010         	movff	??_calculateMean,calculateMean@meanValue
 11373  008B2E  C019  F011         	movff	??_calculateMean+1,calculateMean@meanValue+1
 11374  008B32  C01A  F012         	movff	??_calculateMean+2,calculateMean@meanValue+2
 11375  008B36  C01B  F013         	movff	??_calculateMean+3,calculateMean@meanValue+3
 11376  008B3A                     l21775:
 11377                           
 11378                           ;sm_ControlLearning_MC50.c: 421:     return meanValue;
 11379  008B3A  C010  F010         	movff	calculateMean@meanValue,?_calculateMean
 11380  008B3E  C011  F011         	movff	calculateMean@meanValue+1,?_calculateMean+1
 11381  008B42  C012  F012         	movff	calculateMean@meanValue+2,?_calculateMean+2
 11382  008B46  C013  F013         	movff	calculateMean@meanValue+3,?_calculateMean+3
 11383  008B4A  0012               	return		;funcret
 11384  008B4C                     __end_of_calculateMean:
 11385                           	callstack 0
 11386                           
 11387 ;; *************** function _actionZone_Opening *****************
 11388 ;; Defined at:
 11389 ;;		line 374 in file "sm_ControlGate_MC50.c"
 11390 ;; Parameters:    Size  Location     Type
 11391 ;;		None
 11392 ;; Auto vars:     Size  Location     Type
 11393 ;;  typeOpenOrde    1   14[BANK0 ] enum E10372
 11394 ;;  securityOpen    1   13[BANK0 ] enum E10397
 11395 ;;  securityClos    1   12[BANK0 ] enum E10397
 11396 ;; Return value:  Size  Location     Type
 11397 ;;                  1    wreg      void 
 11398 ;; Registers used:
 11399 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11400 ;; Tracked objects:
 11401 ;;		On entry : 3F/0
 11402 ;;		On exit  : 0/0
 11403 ;;		Unchanged: 0/0
 11404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11406 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11408 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11409 ;;Total ram usage:        3 bytes
 11410 ;; Hardware stack levels used: 1
 11411 ;; Hardware stack levels required when called: 8
 11412 ;; This function calls:
 11413 ;;		_CloseOrder
 11414 ;;		_GetOpenOrder
 11415 ;;		_GetSecurityStateInClosing
 11416 ;;		_GetSecurityStateInOpening
 11417 ;;		_InitFullAutoTime
 11418 ;;		_InitWalkAutoTime
 11419 ;;		_SetSegmentValueIntermitent
 11420 ;;		_StopOrder
 11421 ;;		_VerifyFollowMe
 11422 ;;		_controlVelocity
 11423 ;;		_setPositionInvertionInClosing
 11424 ;;		_setPositionInvertionInOpening
 11425 ;;		_sm_send_event
 11426 ;; This function is called by:
 11427 ;;		_sm_execute_ControlGate
 11428 ;; This function uses a non-reentrant model
 11429 ;;
 11430                           
 11431                           	psect	text24
 11432  004EAE                     __ptext24:
 11433                           	callstack 0
 11434  004EAE                     _actionZone_Opening:
 11435                           	callstack 21
 11436                           
 11437                           ; BSR set to: 0
 11438                           ;sm_ControlGate_MC50.c: 375:     StateEnum securityClosing = GetSecurityStateInClosing()
      +                          ;
 11439                           
 11440                           ;incstack = 0
 11441  004EAE  ECED  F03D         	call	_GetSecurityStateInClosing	;wreg free
 11442  004EB2  0100               	movlb	0	; () banked
 11443  004EB4  6FE4               	movwf	actionZone_Opening@securityClosing& (0+255),b
 11444                           
 11445                           ;sm_ControlGate_MC50.c: 376:     StateEnum securityOpening = GetSecurityStateInOpening()
      +                          ;
 11446  004EB6  EC40  F03E         	call	_GetSecurityStateInOpening	;wreg free
 11447  004EBA  0100               	movlb	0	; () banked
 11448  004EBC  6FE5               	movwf	actionZone_Opening@securityOpening& (0+255),b
 11449                           
 11450                           ; BSR set to: 0
 11451                           ;sm_ControlGate_MC50.c: 377:     TypeCMD typeOpenOrder = GetOpenOrder();
 11452  004EBE  ECA6  F02D         	call	_GetOpenOrder	;wreg free
 11453  004EC2  0100               	movlb	0	; () banked
 11454  004EC4  6FE6               	movwf	actionZone_Opening@typeOpenOrder& (0+255),b
 11455                           
 11456                           ; BSR set to: 0
 11457                           ;sm_ControlGate_MC50.c: 380:     controlVelocity();
 11458  004EC6  ECB7  F02A         	call	_controlVelocity	;wreg free
 11459                           
 11460                           ;sm_ControlGate_MC50.c: 381:     InitFullAutoTime();
 11461  004ECA  ECE0  F04C         	call	_InitFullAutoTime	;wreg free
 11462                           
 11463                           ; BSR set to: 0
 11464                           ;sm_ControlGate_MC50.c: 383:     var_sys.passoAPassoAutoClose = NO;
 11465  004ECE  0E00               	movlw	0
 11466  004ED0  0101               	movlb	1	; () banked
 11467  004ED2  6F50               	movwf	(_var_sys+80)& (0+255),b	;volatile
 11468                           
 11469                           ; BSR set to: 1
 11470                           ;sm_ControlGate_MC50.c: 385:     VerifyFollowMe(securityClosing);
 11471  004ED4  0100               	movlb	0	; () banked
 11472  004ED6  51E4               	movf	actionZone_Opening@securityClosing& (0+255),w,b
 11473  004ED8  EC38  F04C         	call	_VerifyFollowMe
 11474                           
 11475                           ;sm_ControlGate_MC50.c: 386:     if (var_sys.NumberOffErrors > 3) {
 11476  004EDC  0E03               	movlw	3
 11477  004EDE  0101               	movlb	1	; () banked
 11478  004EE0  6543               	cpfsgt	(_var_sys+67)& (0+255),b	;volatile
 11479  004EE2  D00D               	goto	l23001
 11480                           
 11481                           ; BSR set to: 1
 11482                           ;sm_ControlGate_MC50.c: 388:         var_sys.StateMotor = Stopped;
 11483  004EE4  0E00               	movlw	0
 11484  004EE6  6F00               	movwf	_var_sys& (0+255),b	;volatile
 11485  004EE8                     l22999:
 11486                           
 11487                           ; BSR set to: 1
 11488                           ;sm_ControlGate_MC50.c: 389:         sm_send_event(&controlGate_stateMachine, ev_ErrorGa
      +                          te);
 11489  004EE8  0EE7               	movlw	low _controlGate_stateMachine
 11490  004EEA  6E12               	movwf	sm_send_event@psm^0,c
 11491  004EEC  0E01               	movlw	high _controlGate_stateMachine
 11492  004EEE  6E13               	movwf	(sm_send_event@psm+1)^0,c
 11493  004EF0  0E00               	movlw	0
 11494  004EF2  6E15               	movwf	(sm_send_event@event+1)^0,c
 11495  004EF4  0E10               	movlw	16
 11496  004EF6  6E14               	movwf	sm_send_event@event^0,c
 11497  004EF8  ECD5  F045         	call	_sm_send_event	;wreg free
 11498                           
 11499                           ;sm_ControlGate_MC50.c: 390:     } else if (var_sys.StateMotor == InOpenWalk && ts_syste
      +                          m.timeOpenWalk <= 0)
 11500  004EFC  0012               	return	
 11501  004EFE                     l23001:
 11502                           
 11503                           ; BSR set to: 1
 11504  004EFE  0E02               	movlw	2
 11505  004F00  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 11506  004F02  A4D8               	btfss	status,2,c
 11507  004F04  D013               	goto	l23015
 11508                           
 11509                           ; BSR set to: 1
 11510  004F06  BFB0               	btfsc	(_ts_system+17)& (0+255),7,b	;volatile
 11511  004F08  D005               	goto	u26750
 11512  004F0A  51B0               	movf	(_ts_system+17)& (0+255),w,b	;volatile
 11513  004F0C  E10F               	bnz	l23015
 11514  004F0E  05AF               	decf	(_ts_system+16)& (0+255),w,b	;volatile
 11515  004F10  B0D8               	btfsc	status,0,c
 11516  004F12  D00C               	goto	l23015
 11517  004F14                     u26750:
 11518                           
 11519                           ; BSR set to: 1
 11520                           ;sm_ControlGate_MC50.c: 391:     {;sm_ControlGate_MC50.c: 396:         setPositionInvert
      +                          ionInOpening();
 11521  004F14  EC4C  F03B         	call	_setPositionInvertionInOpening	;wreg free
 11522                           
 11523                           ; BSR set to: 1
 11524                           ;sm_ControlGate_MC50.c: 397:         StopOrder();
 11525  004F18  EC8E  F04C         	call	_StopOrder	;wreg free
 11526                           
 11527                           ;sm_ControlGate_MC50.c: 398:         InitWalkAutoTime();
 11528  004F1C  EC64  F04D         	call	_InitWalkAutoTime	;wreg free
 11529                           
 11530                           ; BSR set to: 0
 11531                           ;sm_ControlGate_MC50.c: 399:         var_sys.passoAPassoAutoClose = YES;
 11532  004F20  0E01               	movlw	1
 11533  004F22  0101               	movlb	1	; () banked
 11534  004F24  6F50               	movwf	(_var_sys+80)& (0+255),b	;volatile
 11535                           
 11536                           ; BSR set to: 1
 11537                           ;sm_ControlGate_MC50.c: 400:         Abertura_pedonal = 1;
 11538  004F26  0E01               	movlw	1
 11539  004F28  6F92               	movwf	_Abertura_pedonal& (0+255),b
 11540                           
 11541                           ;sm_ControlGate_MC50.c: 402:     } else if ((var_sys.FimCurso_OpenIsEnabled == YES)||(va
      +                          r_sys.TimeMaxMotorIsON<=0) && (var_sys.LearningIsEnabled==NO) && (var_sys.PositionIsLost
      +                          ==NO) && (var_sys.Statedoorcontrol == st_Opening))
 11542  004F2A  0012               	return	
 11543  004F2C                     l23015:
 11544                           
 11545                           ; BSR set to: 1
 11546  004F2C  0504               	decf	(_var_sys+4)& (0+255),w,b	;volatile
 11547  004F2E  B4D8               	btfsc	status,2,c
 11548  004F30  D010               	goto	u26800
 11549                           
 11550                           ; BSR set to: 1
 11551  004F32  5118               	movf	(_var_sys+24)& (0+255),w,b	;volatile
 11552  004F34  1119               	iorwf	(_var_sys+25)& (0+255),w,b	;volatile
 11553  004F36  111A               	iorwf	(_var_sys+26)& (0+255),w,b	;volatile
 11554  004F38  111B               	iorwf	(_var_sys+27)& (0+255),w,b	;volatile
 11555  004F3A  A4D8               	btfss	status,2,c
 11556  004F3C  D02F               	goto	l23035
 11557                           
 11558                           ; BSR set to: 1
 11559  004F3E  5126               	movf	(_var_sys+38)& (0+255),w,b	;volatile
 11560  004F40  A4D8               	btfss	status,2,c
 11561  004F42  D02C               	goto	l23035
 11562                           
 11563                           ; BSR set to: 1
 11564  004F44  5148               	movf	(_var_sys+72)& (0+255),w,b	;volatile
 11565  004F46  A4D8               	btfss	status,2,c
 11566  004F48  D029               	goto	l23035
 11567                           
 11568                           ; BSR set to: 1
 11569  004F4A  0E02               	movlw	2
 11570  004F4C  191C               	xorwf	(_var_sys+28)& (0+255),w,b	;volatile
 11571  004F4E  A4D8               	btfss	status,2,c
 11572  004F50  D025               	goto	l23035
 11573  004F52                     u26800:
 11574                           
 11575                           ; BSR set to: 1
 11576                           ;sm_ControlGate_MC50.c: 403:     {;sm_ControlGate_MC50.c: 408:         var_sys.Statedoor
      +                          control = st_Opened;
 11577  004F52  0E04               	movlw	4
 11578  004F54  6F1C               	movwf	(_var_sys+28)& (0+255),b	;volatile
 11579                           
 11580                           ; BSR set to: 1
 11581                           ;sm_ControlGate_MC50.c: 409:         var_sys.PositionActual = var_sys_NVM.learningTimeTo
      +                          Close;
 11582  004F56  C0D0  F11E         	movff	_var_sys_NVM+56,_var_sys+30	;volatile
 11583  004F5A  C0D1  F11F         	movff	_var_sys_NVM+57,_var_sys+31	;volatile
 11584  004F5E  C0D2  F120         	movff	_var_sys_NVM+58,_var_sys+32	;volatile
 11585  004F62  C0D3  F121         	movff	_var_sys_NVM+59,_var_sys+33	;volatile
 11586                           
 11587                           ;sm_ControlGate_MC50.c: 410:         var_sys.AutoInversionActiveStop = NO;
 11588  004F66  0E00               	movlw	0
 11589  004F68  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 11590                           
 11591                           ;sm_ControlGate_MC50.c: 411:         var_sys.PositionIsLost = NO;
 11592  004F6A  0E00               	movlw	0
 11593  004F6C  6F48               	movwf	(_var_sys+72)& (0+255),b	;volatile
 11594                           
 11595                           ;sm_ControlGate_MC50.c: 412:         var_sys.DigitSinalizedTemp = 1;
 11596  004F6E  0E01               	movlw	1
 11597  004F70  6F22               	movwf	(_var_sys+34)& (0+255),b	;volatile
 11598                           
 11599                           ;sm_ControlGate_MC50.c: 413:         var_sys.NumberOffErrors = 0;
 11600  004F72  0E00               	movlw	0
 11601  004F74  6F43               	movwf	(_var_sys+67)& (0+255),b	;volatile
 11602                           
 11603                           ;sm_ControlGate_MC50.c: 414:         ts_system.timeSinalizationDigit = (1000/50) * 2;
 11604  004F76  0E00               	movlw	0
 11605  004F78  6FAC               	movwf	(_ts_system+13)& (0+255),b	;volatile
 11606  004F7A  0E28               	movlw	40
 11607  004F7C  6FAB               	movwf	(_ts_system+12)& (0+255),b	;volatile
 11608                           
 11609                           ; BSR set to: 1
 11610                           ;sm_ControlGate_MC50.c: 415:         SetSegmentValueIntermitent(dF, d0, ( 200/50));
 11611  004F7E  0E00               	movlw	0
 11612  004F80  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 11613  004F82  0E00               	movlw	0
 11614  004F84  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 11615  004F86  0E04               	movlw	4
 11616  004F88  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 11617  004F8A  0E0F               	movlw	15
 11618  004F8C  EC93  F04A         	call	_SetSegmentValueIntermitent
 11619                           
 11620                           ; BSR set to: 1
 11621                           ;sm_ControlGate_MC50.c: 416:         StopOrder();
 11622  004F90  EC8E  F04C         	call	_StopOrder	;wreg free
 11623                           
 11624                           ;sm_ControlGate_MC50.c: 417:         var_sys.passoAPassoAutoClose = YES;
 11625  004F94  0E01               	movlw	1
 11626  004F96  0101               	movlb	1	; () banked
 11627  004F98  6F50               	movwf	(_var_sys+80)& (0+255),b	;volatile
 11628                           
 11629                           ;sm_ControlGate_MC50.c: 419:     }
 11630  004F9A  0012               	return	
 11631  004F9C                     l23035:
 11632                           
 11633                           ; BSR set to: 1
 11634  004F9C  0100               	movlb	0	; () banked
 11635  004F9E  05E5               	decf	actionZone_Opening@securityOpening& (0+255),w,b
 11636  004FA0  B4D8               	btfsc	status,2,c
 11637  004FA2  D012               	goto	u26840
 11638                           
 11639                           ; BSR set to: 0
 11640  004FA4  0101               	movlb	1	; () banked
 11641  004FA6  BFCA               	btfsc	(_ts_system+43)& (0+255),7,b	;volatile
 11642  004FA8  D025               	goto	l23055
 11643  004FAA  51CA               	movf	(_ts_system+43)& (0+255),w,b	;volatile
 11644  004FAC  E103               	bnz	u26820
 11645  004FAE  05C9               	decf	(_ts_system+42)& (0+255),w,b	;volatile
 11646  004FB0  A0D8               	btfss	status,0,c
 11647  004FB2  D020               	goto	l23055
 11648  004FB4                     u26820:
 11649                           
 11650                           ; BSR set to: 1
 11651  004FB4  0541               	decf	(_var_sys+65)& (0+255),w,b	;volatile
 11652  004FB6  A4D8               	btfss	status,2,c
 11653  004FB8  D01D               	goto	l23055
 11654                           
 11655                           ; BSR set to: 1
 11656  004FBA  BFD0               	btfsc	(_ts_system+49)& (0+255),7,b	;volatile
 11657  004FBC  D005               	goto	u26840
 11658  004FBE  51D0               	movf	(_ts_system+49)& (0+255),w,b	;volatile
 11659  004FC0  E119               	bnz	l23055
 11660  004FC2  05CF               	decf	(_ts_system+48)& (0+255),w,b	;volatile
 11661  004FC4  B0D8               	btfsc	status,0,c
 11662  004FC6  D016               	goto	l23055
 11663  004FC8                     u26840:
 11664  004FC8  0101               	movlb	1	; () banked
 11665  004FCA  5127               	movf	(_var_sys+39)& (0+255),w,b	;volatile
 11666  004FCC  A4D8               	btfss	status,2,c
 11667  004FCE  D012               	goto	l23055
 11668                           
 11669                           ; BSR set to: 1
 11670                           ;sm_ControlGate_MC50.c: 422:         if (securityOpening != YES){
 11671  004FD0  0100               	movlb	0	; () banked
 11672  004FD2  05E5               	decf	actionZone_Opening@securityOpening& (0+255),w,b
 11673  004FD4  B4D8               	btfsc	status,2,c
 11674  004FD6  D002               	goto	l23049
 11675                           
 11676                           ; BSR set to: 0
 11677                           ;sm_ControlGate_MC50.c: 423:              var_sys.NumberOffErrors++;
 11678  004FD8  0101               	movlb	1	; () banked
 11679  004FDA  2B43               	incf	(_var_sys+67)& (0+255),f,b	;volatile
 11680  004FDC                     l23049:
 11681                           
 11682                           ;sm_ControlGate_MC50.c: 426:         var_sys.AutoInversionActive = YES;
 11683  004FDC  0E01               	movlw	1
 11684  004FDE  0101               	movlb	1	; () banked
 11685  004FE0  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 11686                           
 11687                           ; BSR set to: 1
 11688                           ;sm_ControlGate_MC50.c: 427:         ts_system.TimeWaitToNextState = ( 500/50);
 11689  004FE2  0E00               	movlw	0
 11690  004FE4  6FC4               	movwf	(_ts_system+37)& (0+255),b	;volatile
 11691  004FE6  0E0A               	movlw	10
 11692  004FE8  6FC3               	movwf	(_ts_system+36)& (0+255),b	;volatile
 11693                           
 11694                           ; BSR set to: 1
 11695                           ;sm_ControlGate_MC50.c: 428:         ts_system.TimeStopElectricBrake = ((1000/50)+( 500/
      +                          50));
 11696  004FEA  0E00               	movlw	0
 11697  004FEC  6FE0               	movwf	(_ts_system+65)& (0+255),b	;volatile
 11698  004FEE  0E1E               	movlw	30
 11699  004FF0  6FDF               	movwf	(_ts_system+64)& (0+255),b	;volatile
 11700                           
 11701                           ;sm_ControlGate_MC50.c: 430:     }
 11702  004FF2  0012               	return	
 11703  004FF4                     l23055:
 11704                           
 11705                           ; BSR set to: 1
 11706  004FF4  BFCA               	btfsc	(_ts_system+43)& (0+255),7,b	;volatile
 11707  004FF6  D02D               	goto	l23085
 11708  004FF8  51CA               	movf	(_ts_system+43)& (0+255),w,b	;volatile
 11709  004FFA  E103               	bnz	u26870
 11710  004FFC  05C9               	decf	(_ts_system+42)& (0+255),w,b	;volatile
 11711  004FFE  A0D8               	btfss	status,0,c
 11712  005000  D028               	goto	l23085
 11713  005002                     u26870:
 11714                           
 11715                           ; BSR set to: 1
 11716  005002  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 11717  005004  A4D8               	btfss	status,2,c
 11718  005006  D025               	goto	l23085
 11719                           
 11720                           ; BSR set to: 1
 11721                           ;sm_ControlGate_MC50.c: 432:         if (var_sys.InvertionCurrentClosing == YES) {
 11722  005008  0544               	decf	(_var_sys+68)& (0+255),w,b	;volatile
 11723  00500A  A4D8               	btfss	status,2,c
 11724  00500C  D005               	goto	l23067
 11725                           
 11726                           ; BSR set to: 1
 11727                           ;sm_ControlGate_MC50.c: 434:             var_sys.StateMotor = Stopped;
 11728  00500E  0E00               	movlw	0
 11729  005010  6F00               	movwf	_var_sys& (0+255),b	;volatile
 11730                           
 11731                           ; BSR set to: 1
 11732                           ;sm_ControlGate_MC50.c: 435:             setPositionInvertionInClosing();
 11733  005012  ECA5  F036         	call	_setPositionInvertionInClosing	;wreg free
 11734  005016  D768               	goto	l22999
 11735  005018                     l23067:
 11736                           
 11737                           ; BSR set to: 1
 11738  005018  BFC4               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 11739  00501A  D005               	goto	u26900
 11740  00501C  51C4               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 11741  00501E  E116               	bnz	l23083
 11742  005020  05C3               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 11743  005022  B0D8               	btfsc	status,0,c
 11744  005024  D013               	goto	l23083
 11745  005026                     u26900:
 11746                           
 11747                           ; BSR set to: 1
 11748                           ;sm_ControlGate_MC50.c: 438:             CloseOrder();
 11749  005026  ECD9  F04B         	call	_CloseOrder	;wreg free
 11750                           
 11751                           ;sm_ControlGate_MC50.c: 440:             setPositionInvertionInOpening();
 11752  00502A  EC4C  F03B         	call	_setPositionInvertionInOpening	;wreg free
 11753                           
 11754                           ; BSR set to: 1
 11755                           ;sm_ControlGate_MC50.c: 441:             var_sys.AutoInversionActive = NO;
 11756  00502E  0E00               	movlw	0
 11757  005030  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 11758                           
 11759                           ; BSR set to: 1
 11760                           ;sm_ControlGate_MC50.c: 442:             var_sys.InvertionCurrentOpening = YES;
 11761  005032  0E01               	movlw	1
 11762  005034  6F45               	movwf	(_var_sys+69)& (0+255),b	;volatile
 11763                           
 11764                           ; BSR set to: 1
 11765                           ;sm_ControlGate_MC50.c: 443:             ts_system.TimeInversionStart = (1000/50);
 11766  005036  0E00               	movlw	0
 11767  005038  6FD0               	movwf	(_ts_system+49)& (0+255),b	;volatile
 11768  00503A  0E14               	movlw	20
 11769  00503C  6FCF               	movwf	(_ts_system+48)& (0+255),b	;volatile
 11770                           
 11771                           ; BSR set to: 1
 11772                           ;sm_ControlGate_MC50.c: 444:             ts_system.InvertionTimeClosingFromOpen = (1000/
      +                          50) * 2;
 11773  00503E  0E00               	movlw	0
 11774  005040  6FD2               	movwf	(_ts_system+51)& (0+255),b	;volatile
 11775  005042  0E28               	movlw	40
 11776  005044  6FD1               	movwf	(_ts_system+50)& (0+255),b	;volatile
 11777                           
 11778                           ; BSR set to: 1
 11779                           ;sm_ControlGate_MC50.c: 445:             var_sys.InvertionClosingFromOpen = YES;
 11780  005046  0E01               	movlw	1
 11781  005048  6F46               	movwf	(_var_sys+70)& (0+255),b	;volatile
 11782                           
 11783                           ;sm_ControlGate_MC50.c: 449:         } else
 11784  00504A  0012               	return	
 11785  00504C                     l23083:
 11786                           
 11787                           ; BSR set to: 1
 11788                           ;sm_ControlGate_MC50.c: 450:         {;sm_ControlGate_MC50.c: 451:             var_sys.S
      +                          tateMotor = Stopped;
 11789  00504C  0E00               	movlw	0
 11790  00504E  6F00               	movwf	_var_sys& (0+255),b	;volatile
 11791  005050  0012               	return	
 11792  005052                     l23085:
 11793                           
 11794                           ; BSR set to: 1
 11795  005052  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 11796  005054  A4D8               	btfss	status,2,c
 11797  005056  D00A               	goto	l23105
 11798                           
 11799                           ; BSR set to: 1
 11800                           ;sm_ControlGate_MC50.c: 457:                 var_sys.StateMotor = Stopped;
 11801  005058  0E00               	movlw	0
 11802  00505A  6F00               	movwf	_var_sys& (0+255),b	;volatile
 11803                           
 11804                           ; BSR set to: 1
 11805                           ;sm_ControlGate_MC50.c: 460:         if (ts_system.TimeWaitToNextState <= 0) {
 11806  00505C  BFC4               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 11807  00505E  D7E3               	goto	u26900
 11808  005060  51C4               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 11809  005062  E14E               	bnz	l2723
 11810  005064  05C3               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 11811  005066  B0D8               	btfsc	status,0,c
 11812  005068  0012               	return	
 11813  00506A  D7DD               	goto	u26900
 11814  00506C                     l23105:
 11815                           
 11816                           ; BSR set to: 1
 11817  00506C  5100               	movf	_var_sys& (0+255),w,b	;volatile
 11818  00506E  A4D8               	btfss	status,2,c
 11819  005070  D018               	goto	l23123
 11820                           
 11821                           ; BSR set to: 1
 11822  005072  BFC4               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 11823  005074  D005               	goto	u26940
 11824  005076  51C4               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 11825  005078  E114               	bnz	l23123
 11826  00507A  05C3               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 11827  00507C  B0D8               	btfsc	status,0,c
 11828  00507E  D011               	goto	l23123
 11829  005080                     u26940:
 11830                           
 11831                           ; BSR set to: 1
 11832                           ;sm_ControlGate_MC50.c: 479:       if(securityOpening != ST){
 11833  005080  0E02               	movlw	2
 11834  005082  0100               	movlb	0	; () banked
 11835  005084  19E5               	xorwf	actionZone_Opening@securityOpening& (0+255),w,b
 11836  005086  B4D8               	btfsc	status,2,c
 11837  005088  D007               	goto	l23119
 11838                           
 11839                           ; BSR set to: 0
 11840                           ;sm_ControlGate_MC50.c: 480:         var_sys.NumberOffErrors++;
 11841  00508A  0101               	movlb	1	; () banked
 11842  00508C  2B43               	incf	(_var_sys+67)& (0+255),f,b	;volatile
 11843                           
 11844                           ; BSR set to: 1
 11845                           ;sm_ControlGate_MC50.c: 482:         var_sys.StateMotor = Stopped;
 11846  00508E  0E00               	movlw	0
 11847  005090  6F00               	movwf	_var_sys& (0+255),b	;volatile
 11848                           
 11849                           ; BSR set to: 1
 11850                           ;sm_ControlGate_MC50.c: 483:         setPositionInvertionInOpening();
 11851  005092  EC4C  F03B         	call	_setPositionInvertionInOpening	;wreg free
 11852  005096  D728               	goto	l22999
 11853  005098                     l23119:
 11854                           
 11855                           ; BSR set to: 0
 11856                           ;sm_ControlGate_MC50.c: 486:           setPositionInvertionInOpening();
 11857  005098  EC4C  F03B         	call	_setPositionInvertionInOpening	;wreg free
 11858  00509C                     l23121:
 11859                           
 11860                           ;sm_ControlGate_MC50.c: 487:           StopOrder();
 11861  00509C  EC8E  F04C         	call	_StopOrder	;wreg free
 11862  0050A0  0012               	return	
 11863  0050A2                     l23123:
 11864                           
 11865                           ; BSR set to: 1
 11866  0050A2  0100               	movlb	0	; () banked
 11867  0050A4  05A8               	decf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 11868  0050A6  A4D8               	btfss	status,2,c
 11869  0050A8  D005               	goto	l23129
 11870                           
 11871                           ; BSR set to: 0
 11872                           ;sm_ControlGate_MC50.c: 492:         if (typeOpenOrder != TypeFullOpen) {
 11873  0050AA  0E03               	movlw	3
 11874  0050AC  19E6               	xorwf	actionZone_Opening@typeOpenOrder& (0+255),w,b
 11875  0050AE  B4D8               	btfsc	status,2,c
 11876  0050B0  0012               	return	
 11877  0050B2  D7F4               	goto	l23121
 11878  0050B4                     l23129:
 11879                           
 11880                           ; BSR set to: 0
 11881  0050B4  0E02               	movlw	2
 11882  0050B6  19E6               	xorwf	actionZone_Opening@typeOpenOrder& (0+255),w,b
 11883  0050B8  A4D8               	btfss	status,2,c
 11884  0050BA  D011               	goto	l23141
 11885                           
 11886                           ; BSR set to: 0
 11887  0050BC  0E02               	movlw	2
 11888  0050BE  0101               	movlb	1	; () banked
 11889  0050C0  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 11890  0050C2  A4D8               	btfss	status,2,c
 11891  0050C4  D00C               	goto	l23141
 11892                           
 11893                           ; BSR set to: 1
 11894  0050C6  0E02               	movlw	2
 11895  0050C8  0100               	movlb	0	; () banked
 11896  0050CA  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 11897  0050CC  B4D8               	btfsc	status,2,c
 11898  0050CE  D007               	goto	l23141
 11899                           
 11900                           ; BSR set to: 0
 11901                           ;sm_ControlGate_MC50.c: 502:         setPositionInvertionInOpening();
 11902  0050D0  EC4C  F03B         	call	_setPositionInvertionInOpening	;wreg free
 11903                           
 11904                           ; BSR set to: 1
 11905                           ;sm_ControlGate_MC50.c: 503:         StopOrder();
 11906  0050D4  EC8E  F04C         	call	_StopOrder	;wreg free
 11907                           
 11908                           ;sm_ControlGate_MC50.c: 504:         InitWalkAutoTime();
 11909  0050D8  EC64  F04D         	call	_InitWalkAutoTime	;wreg free
 11910                           
 11911                           ;sm_ControlGate_MC50.c: 505:     } else if ((typeOpenOrder == TypeFull || typeOpenOrder 
      +                          == TypeFullOpen || typeOpenOrder == TypeFullClose) && var_sys_NVM.operationMode != ModoC
      +                          ondominio) {
 11912  0050DC  0012               	return	
 11913  0050DE                     l23141:
 11914  0050DE  0100               	movlb	0	; () banked
 11915  0050E0  05E6               	decf	actionZone_Opening@typeOpenOrder& (0+255),w,b
 11916  0050E2  B4D8               	btfsc	status,2,c
 11917  0050E4  D008               	goto	u27030
 11918                           
 11919                           ; BSR set to: 0
 11920  0050E6  0E03               	movlw	3
 11921  0050E8  19E6               	xorwf	actionZone_Opening@typeOpenOrder& (0+255),w,b
 11922  0050EA  B4D8               	btfsc	status,2,c
 11923  0050EC  D004               	goto	u27030
 11924                           
 11925                           ; BSR set to: 0
 11926  0050EE  0E04               	movlw	4
 11927  0050F0  19E6               	xorwf	actionZone_Opening@typeOpenOrder& (0+255),w,b
 11928  0050F2  A4D8               	btfss	status,2,c
 11929  0050F4  0012               	return	
 11930  0050F6                     u27030:
 11931                           
 11932                           ; BSR set to: 0
 11933  0050F6  0E02               	movlw	2
 11934  0050F8  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 11935  0050FA  B4D8               	btfsc	status,2,c
 11936  0050FC  0012               	return	
 11937  0050FE  D7CC               	goto	l23119
 11938  005100                     l2723:
 11939  005100  0012               	return		;funcret
 11940  005102                     __end_of_actionZone_Opening:
 11941                           	callstack 0
 11942                           
 11943 ;; *************** function _setPositionInvertionInOpening *****************
 11944 ;; Defined at:
 11945 ;;		line 894 in file "sm_ControlGate_MC50.c"
 11946 ;; Parameters:    Size  Location     Type
 11947 ;;		None
 11948 ;; Auto vars:     Size  Location     Type
 11949 ;;		None
 11950 ;; Return value:  Size  Location     Type
 11951 ;;                  1    wreg      void 
 11952 ;; Registers used:
 11953 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11954 ;; Tracked objects:
 11955 ;;		On entry : 3E/1
 11956 ;;		On exit  : 3F/1
 11957 ;;		Unchanged: 0/0
 11958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11961 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11962 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11963 ;;Total ram usage:        8 bytes
 11964 ;; Hardware stack levels used: 1
 11965 ;; Hardware stack levels required when called: 6
 11966 ;; This function calls:
 11967 ;;		_getTimeDecelaration
 11968 ;; This function is called by:
 11969 ;;		_actionZone_Opening
 11970 ;; This function uses a non-reentrant model
 11971 ;;
 11972                           
 11973                           	psect	text25
 11974  007698                     __ptext25:
 11975                           	callstack 0
 11976  007698                     _setPositionInvertionInOpening:
 11977                           	callstack 22
 11978                           
 11979                           ;sm_ControlGate_MC50.c: 896:     if(var_sys_NVM.TypeofMotor != 2){
 11980                           
 11981                           ;incstack = 0
 11982  007698  0E02               	movlw	2
 11983  00769A  0100               	movlb	0	; () banked
 11984  00769C  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 11985  00769E  B4D8               	btfsc	status,2,c
 11986  0076A0  D009               	goto	l21725
 11987                           
 11988                           ; BSR set to: 0
 11989                           ;sm_ControlGate_MC50.c: 897:        var_sys.PositionActual -= ( 100/50);
 11990  0076A2  0EFE               	movlw	254
 11991  0076A4  0101               	movlb	1	; () banked
 11992  0076A6  271E               	addwf	(_var_sys+30)& (0+255),f,b	;volatile
 11993  0076A8  0EFF               	movlw	255
 11994  0076AA  231F               	addwfc	(_var_sys+31)& (0+255),f,b	;volatile
 11995  0076AC  0EFF               	movlw	255
 11996  0076AE  2320               	addwfc	(_var_sys+32)& (0+255),f,b	;volatile
 11997  0076B0  0EFF               	movlw	255
 11998  0076B2  D006               	goto	L69
 11999  0076B4                     l21725:
 12000                           
 12001                           ; BSR set to: 0
 12002                           ;sm_ControlGate_MC50.c: 901:          var_sys.PositionActual += ( 50/50);
 12003  0076B4  0E01               	movlw	1
 12004  0076B6  0101               	movlb	1	; () banked
 12005  0076B8  271E               	addwf	(_var_sys+30)& (0+255),f,b	;volatile
 12006  0076BA  0E00               	movlw	0
 12007  0076BC  231F               	addwfc	(_var_sys+31)& (0+255),f,b	;volatile
 12008  0076BE  2320               	addwfc	(_var_sys+32)& (0+255),f,b	;volatile
 12009  0076C0                     L69:
 12010  0076C0  2321               	addwfc	(_var_sys+33)& (0+255),f,b	;volatile
 12011                           
 12012                           ; BSR set to: 1
 12013                           ;sm_ControlGate_MC50.c: 906:     if (var_sys.PositionActual < getTimeDecelaration(InClos
      +                          e)) {
 12014  0076C2  0E03               	movlw	3
 12015  0076C4  ECD8  F03A         	call	_getTimeDecelaration
 12016  0076C8  5029               	movf	?_getTimeDecelaration^0,w,c
 12017  0076CA  0101               	movlb	1	; () banked
 12018  0076CC  5D1E               	subwf	(_var_sys+30)& (0+255),w,b	;volatile
 12019  0076CE  502A               	movf	(?_getTimeDecelaration+1)^0,w,c
 12020  0076D0  591F               	subwfb	(_var_sys+31)& (0+255),w,b	;volatile
 12021  0076D2  502B               	movf	(?_getTimeDecelaration+2)^0,w,c
 12022  0076D4  5920               	subwfb	(_var_sys+32)& (0+255),w,b	;volatile
 12023  0076D6  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 12024  0076D8  0A80               	xorlw	128
 12025  0076DA  6E32               	movwf	??_setPositionInvertionInOpening^0,c
 12026  0076DC  502C               	movf	(?_getTimeDecelaration+3)^0,w,c
 12027  0076DE  0A80               	xorlw	128
 12028  0076E0  5832               	subwfb	??_setPositionInvertionInOpening^0,w,c
 12029  0076E2  B0D8               	btfsc	status,0,c
 12030  0076E4  D004               	goto	l21731
 12031                           
 12032                           ; BSR set to: 1
 12033                           ;sm_ControlGate_MC50.c: 907:         var_sys.PositionActual = getTimeDecelaration(InClos
      +                          e);
 12034  0076E6  0E03               	movlw	3
 12035  0076E8  ECD8  F03A         	call	_getTimeDecelaration
 12036  0076EC  D015               	goto	L70
 12037  0076EE                     l21731:
 12038                           
 12039                           ; BSR set to: 1
 12040  0076EE  0E01               	movlw	1
 12041  0076F0  ECD8  F03A         	call	_getTimeDecelaration
 12042  0076F4  0101               	movlb	1	; () banked
 12043  0076F6  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 12044  0076F8  5C29               	subwf	?_getTimeDecelaration^0,w,c
 12045  0076FA  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 12046  0076FC  582A               	subwfb	(?_getTimeDecelaration+1)^0,w,c
 12047  0076FE  5120               	movf	(_var_sys+32)& (0+255),w,b	;volatile
 12048  007700  582B               	subwfb	(?_getTimeDecelaration+2)^0,w,c
 12049  007702  502C               	movf	(?_getTimeDecelaration+3)^0,w,c
 12050  007704  0A80               	xorlw	128
 12051  007706  6E32               	movwf	??_setPositionInvertionInOpening^0,c
 12052  007708  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 12053  00770A  0A80               	xorlw	128
 12054  00770C  5832               	subwfb	??_setPositionInvertionInOpening^0,w,c
 12055  00770E  B0D8               	btfsc	status,0,c
 12056  007710  D00B               	goto	l21735
 12057                           
 12058                           ; BSR set to: 1
 12059                           ;sm_ControlGate_MC50.c: 909:         var_sys.PositionActual = getTimeDecelaration(InOpen
      +                          Full);
 12060  007712  0E01               	movlw	1
 12061  007714  ECD8  F03A         	call	_getTimeDecelaration
 12062  007718                     L70:
 12063  007718  C029  F11E         	movff	?_getTimeDecelaration,_var_sys+30	;volatile
 12064  00771C  C02A  F11F         	movff	?_getTimeDecelaration+1,_var_sys+31	;volatile
 12065  007720  C02B  F120         	movff	?_getTimeDecelaration+2,_var_sys+32	;volatile
 12066  007724  C02C  F121         	movff	?_getTimeDecelaration+3,_var_sys+33	;volatile
 12067  007728                     l21735:
 12068                           
 12069                           ;sm_ControlGate_MC50.c: 911:     var_sys.TimeMaxMotorIsON = var_sys.PositionActual + var
      +                          _sys_NVM.decelarationClose*( 500/50) + (1000/50)*10;
 12070  007728  0100               	movlb	0	; () banked
 12071  00772A  5199               	movf	(_var_sys_NVM+1)& (0+255),w,b	;volatile
 12072  00772C  0D0A               	mullw	10
 12073  00772E  CFF3 F032          	movff	prodl,??_setPositionInvertionInOpening
 12074  007732  CFF4 F033          	movff	prodh,??_setPositionInvertionInOpening+1
 12075  007736  0E00               	movlw	0
 12076  007738  BE33               	btfsc	(??_setPositionInvertionInOpening+1)^0,7,c
 12077  00773A  0EFF               	movlw	255
 12078  00773C  6E34               	movwf	(??_setPositionInvertionInOpening+2)^0,c
 12079  00773E  6E35               	movwf	(??_setPositionInvertionInOpening+3)^0,c
 12080  007740  0101               	movlb	1	; () banked
 12081  007742  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 12082  007744  2432               	addwf	??_setPositionInvertionInOpening^0,w,c
 12083  007746  6E36               	movwf	(??_setPositionInvertionInOpening+4)^0,c
 12084  007748  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 12085  00774A  2033               	addwfc	(??_setPositionInvertionInOpening+1)^0,w,c
 12086  00774C  6E37               	movwf	(??_setPositionInvertionInOpening+5)^0,c
 12087  00774E  5120               	movf	(_var_sys+32)& (0+255),w,b	;volatile
 12088  007750  2034               	addwfc	(??_setPositionInvertionInOpening+2)^0,w,c
 12089  007752  6E38               	movwf	(??_setPositionInvertionInOpening+6)^0,c
 12090  007754  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 12091  007756  2035               	addwfc	(??_setPositionInvertionInOpening+3)^0,w,c
 12092  007758  6E39               	movwf	(??_setPositionInvertionInOpening+7)^0,c
 12093  00775A  0EC8               	movlw	200
 12094  00775C  2436               	addwf	(??_setPositionInvertionInOpening+4)^0,w,c
 12095  00775E  6F18               	movwf	(_var_sys+24)& (0+255),b	;volatile
 12096  007760  0E00               	movlw	0
 12097  007762  2037               	addwfc	(??_setPositionInvertionInOpening+5)^0,w,c
 12098  007764  6F19               	movwf	(_var_sys+25)& (0+255),b	;volatile
 12099  007766  0E00               	movlw	0
 12100  007768  2038               	addwfc	(??_setPositionInvertionInOpening+6)^0,w,c
 12101  00776A  6F1A               	movwf	(_var_sys+26)& (0+255),b	;volatile
 12102  00776C  0E00               	movlw	0
 12103  00776E  2039               	addwfc	(??_setPositionInvertionInOpening+7)^0,w,c
 12104  007770  6F1B               	movwf	(_var_sys+27)& (0+255),b	;volatile
 12105                           
 12106                           ; BSR set to: 1
 12107  007772  0012               	return		;funcret
 12108  007774                     __end_of_setPositionInvertionInOpening:
 12109                           	callstack 0
 12110                           
 12111 ;; *************** function _controlVelocity *****************
 12112 ;; Defined at:
 12113 ;;		line 527 in file "outputs_MC50.c"
 12114 ;; Parameters:    Size  Location     Type
 12115 ;;		None
 12116 ;; Auto vars:     Size  Location     Type
 12117 ;;		None
 12118 ;; Return value:  Size  Location     Type
 12119 ;;                  1    wreg      void 
 12120 ;; Registers used:
 12121 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12122 ;; Tracked objects:
 12123 ;;		On entry : 3E/1
 12124 ;;		On exit  : 3E/0
 12125 ;;		Unchanged: 0/0
 12126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12129 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12130 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12131 ;;Total ram usage:        1 bytes
 12132 ;; Hardware stack levels used: 1
 12133 ;; Hardware stack levels required when called: 7
 12134 ;; This function calls:
 12135 ;;		_ControlDecelarationFactor
 12136 ;;		_InitSoftStop
 12137 ;;		_getStateOpenPosition
 12138 ;;		_getTimeDecelaration
 12139 ;; This function is called by:
 12140 ;;		_main
 12141 ;;		_actionZone_Opening
 12142 ;; This function uses a non-reentrant model
 12143 ;;
 12144                           
 12145                           	psect	text26
 12146  00556E                     __ptext26:
 12147                           	callstack 0
 12148  00556E                     _controlVelocity:
 12149                           	callstack 21
 12150                           
 12151                           ;outputs_MC50.c: 531:     if(var_sys.LearningIsEnabled==YES && var_sys.LearningDecelarat
      +                          ion==YES)
 12152                           
 12153                           ; BSR set to: 1
 12154                           ;incstack = 0
 12155  00556E  0101               	movlb	1	; () banked
 12156  005570  0526               	decf	(_var_sys+38)& (0+255),w,b	;volatile
 12157  005572  A4D8               	btfss	status,2,c
 12158  005574  D017               	goto	l21533
 12159                           
 12160                           ; BSR set to: 1
 12161  005576  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 12162  005578  A4D8               	btfss	status,2,c
 12163  00557A  D014               	goto	l21533
 12164                           
 12165                           ; BSR set to: 1
 12166                           ;outputs_MC50.c: 532:     {;outputs_MC50.c: 533:         if(powerControl_st.decelaration
      +                          Active==NO)
 12167  00557C  517B               	movf	_powerControl_st& (0+255),w,b
 12168  00557E  A4D8               	btfss	status,2,c
 12169  005580  D008               	goto	l21527
 12170                           
 12171                           ; BSR set to: 1
 12172                           ;outputs_MC50.c: 534:         {;outputs_MC50.c: 535:             ts_system.TimeStopedBef
      +                          oreDecelaration=( 500/50);
 12173  005582  0E00               	movlw	0
 12174  005584  6FCC               	movwf	(_ts_system+45)& (0+255),b	;volatile
 12175  005586  0E0A               	movlw	10
 12176  005588  6FCB               	movwf	(_ts_system+44)& (0+255),b	;volatile
 12177                           
 12178                           ;outputs_MC50.c: 536:             ts_system.TimeCurrentWaitForAlarm=(1000/50);
 12179  00558A  0E00               	movlw	0
 12180  00558C  6FCE               	movwf	(_ts_system+47)& (0+255),b	;volatile
 12181  00558E  0E14               	movlw	20
 12182  005590  6FCD               	movwf	(_ts_system+46)& (0+255),b	;volatile
 12183  005592                     l21527:
 12184                           
 12185                           ; BSR set to: 1
 12186                           ;outputs_MC50.c: 538:         ControlDecelarationFactor();
 12187  005592  EC07  F04D         	call	_ControlDecelarationFactor	;wreg free
 12188                           
 12189                           ; BSR set to: 1
 12190                           ;outputs_MC50.c: 539:         powerControl_st.decelarationActive=YES;
 12191  005596  0E01               	movlw	1
 12192  005598  6F7B               	movwf	_powerControl_st& (0+255),b
 12193                           
 12194                           ; BSR set to: 1
 12195                           ;outputs_MC50.c: 540:         var_sys.velocityFactor=0;
 12196  00559A  0E00               	movlw	0
 12197  00559C  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12198  00559E  0E00               	movlw	0
 12199  0055A0  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12200                           
 12201                           ;outputs_MC50.c: 541:     }
 12202  0055A2  0012               	return	
 12203  0055A4                     l21533:
 12204                           
 12205                           ; BSR set to: 1
 12206  0055A4  0526               	decf	(_var_sys+38)& (0+255),w,b	;volatile
 12207  0055A6  B4D8               	btfsc	status,2,c
 12208  0055A8  D003               	goto	u24840
 12209                           
 12210                           ; BSR set to: 1
 12211  0055AA  0509               	decf	(_var_sys+9)& (0+255),w,b	;volatile
 12212  0055AC  A4D8               	btfss	status,2,c
 12213  0055AE  D007               	goto	l21539
 12214  0055B0                     u24840:
 12215                           
 12216                           ; BSR set to: 1
 12217                           ;outputs_MC50.c: 544:     {;outputs_MC50.c: 545:         var_sys.velocityFactor=0;
 12218  0055B0  0E00               	movlw	0
 12219  0055B2  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12220  0055B4  0E00               	movlw	0
 12221  0055B6  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12222                           
 12223                           ;outputs_MC50.c: 546:         powerControl_st.decelarationActive=NO;
 12224  0055B8  0E00               	movlw	0
 12225  0055BA  6F7B               	movwf	_powerControl_st& (0+255),b
 12226                           
 12227                           ;outputs_MC50.c: 547:     }
 12228  0055BC  0012               	return	
 12229  0055BE                     l21539:
 12230                           
 12231                           ; BSR set to: 1
 12232  0055BE  0E03               	movlw	3
 12233  0055C0  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 12234  0055C2  A4D8               	btfss	status,2,c
 12235  0055C4  D068               	goto	l21587
 12236                           
 12237                           ; BSR set to: 1
 12238  0055C6  0E03               	movlw	3
 12239  0055C8  ECD8  F03A         	call	_getTimeDecelaration
 12240  0055CC  5029               	movf	?_getTimeDecelaration^0,w,c
 12241  0055CE  0101               	movlb	1	; () banked
 12242  0055D0  5D1E               	subwf	(_var_sys+30)& (0+255),w,b	;volatile
 12243  0055D2  502A               	movf	(?_getTimeDecelaration+1)^0,w,c
 12244  0055D4  591F               	subwfb	(_var_sys+31)& (0+255),w,b	;volatile
 12245  0055D6  502B               	movf	(?_getTimeDecelaration+2)^0,w,c
 12246  0055D8  5920               	subwfb	(_var_sys+32)& (0+255),w,b	;volatile
 12247  0055DA  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 12248  0055DC  0A80               	xorlw	128
 12249  0055DE  0100               	movlb	0	; () banked
 12250  0055E0  6FDA               	movwf	??_controlVelocity& (0+255),b
 12251  0055E2  502C               	movf	(?_getTimeDecelaration+3)^0,w,c
 12252  0055E4  0A80               	xorlw	128
 12253  0055E6  59DA               	subwfb	??_controlVelocity& (0+255),w,b
 12254  0055E8  A0D8               	btfss	status,0,c
 12255  0055EA  D004               	goto	u24870
 12256                           
 12257                           ; BSR set to: 0
 12258  0055EC  0101               	movlb	1	; () banked
 12259  0055EE  0548               	decf	(_var_sys+72)& (0+255),w,b	;volatile
 12260  0055F0  A4D8               	btfss	status,2,c
 12261  0055F2  D051               	goto	l21587
 12262  0055F4                     u24870:
 12263  0055F4  0100               	movlb	0	; () banked
 12264  0055F6  5199               	movf	(_var_sys_NVM+1)& (0+255),w,b	;volatile
 12265  0055F8  B4D8               	btfsc	status,2,c
 12266  0055FA  D004               	goto	u24890
 12267                           
 12268                           ; BSR set to: 0
 12269  0055FC  0101               	movlb	1	; () banked
 12270  0055FE  5112               	movf	(_var_sys+18)& (0+255),w,b	;volatile
 12271  005600  B4D8               	btfsc	status,2,c
 12272  005602  D00C               	goto	u24910
 12273  005604                     u24890:
 12274  005604  0101               	movlb	1	; () banked
 12275  005606  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 12276  005608  D005               	goto	u24900
 12277  00560A  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 12278  00560C  E144               	bnz	l21587
 12279  00560E  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 12280  005610  B0D8               	btfsc	status,0,c
 12281  005612  D041               	goto	l21587
 12282  005614                     u24900:
 12283                           
 12284                           ; BSR set to: 1
 12285  005614  0100               	movlb	0	; () banked
 12286  005616  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 12287  005618  B4D8               	btfsc	status,2,c
 12288  00561A  D03D               	goto	l21587
 12289  00561C                     u24910:
 12290                           
 12291                           ;outputs_MC50.c: 550:     {;outputs_MC50.c: 552:             if ((powerControl_st.decela
      +                          rationActive==NO) && (var_sys.AutoInversionActiveStop==NO ))
 12292  00561C  0101               	movlb	1	; () banked
 12293  00561E  517B               	movf	_powerControl_st& (0+255),w,b
 12294  005620  A4D8               	btfss	status,2,c
 12295  005622  D022               	goto	l21573
 12296                           
 12297                           ; BSR set to: 1
 12298  005624  5112               	movf	(_var_sys+18)& (0+255),w,b	;volatile
 12299  005626  A4D8               	btfss	status,2,c
 12300  005628  D01F               	goto	l21573
 12301                           
 12302                           ; BSR set to: 1
 12303                           ;outputs_MC50.c: 553:                 {;outputs_MC50.c: 556:                     ts_syst
      +                          em.TimeCurrentWaitForAlarm=(1000/50);
 12304  00562A  0E00               	movlw	0
 12305  00562C  6FCE               	movwf	(_ts_system+47)& (0+255),b	;volatile
 12306  00562E  0E14               	movlw	20
 12307  005630  6FCD               	movwf	(_ts_system+46)& (0+255),b	;volatile
 12308                           
 12309                           ;outputs_MC50.c: 558:                     if (var_sys_NVM.softstop > 0){
 12310  005632  0100               	movlb	0	; () banked
 12311  005634  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 12312  005636  B4D8               	btfsc	status,2,c
 12313  005638  D008               	goto	l21563
 12314                           
 12315                           ; BSR set to: 0
 12316                           ;outputs_MC50.c: 559:                         var_sys.AutoInversionActive = NO;
 12317  00563A  0E00               	movlw	0
 12318  00563C  0101               	movlb	1	; () banked
 12319  00563E  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 12320                           
 12321                           ;outputs_MC50.c: 560:                         var_sys.AutoInversionActiveStop = YES;
 12322  005640  0E01               	movlw	1
 12323  005642  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 12324                           
 12325                           ; BSR set to: 1
 12326                           ;outputs_MC50.c: 561:                         InitSoftStop();
 12327  005644  EC57  F048         	call	_InitSoftStop	;wreg free
 12328                           
 12329                           ;outputs_MC50.c: 563:                     }
 12330  005648  D00F               	goto	l21573
 12331  00564A                     l21563:
 12332                           
 12333                           ; BSR set to: 0
 12334                           ;outputs_MC50.c: 565:                     {;outputs_MC50.c: 566:                        
      +                           ts_system.TimeStopedBeforeDecelaration=( 500/50);
 12335  00564A  0E00               	movlw	0
 12336  00564C  0101               	movlb	1	; () banked
 12337  00564E  6FCC               	movwf	(_ts_system+45)& (0+255),b	;volatile
 12338  005650  0E0A               	movlw	10
 12339  005652  6FCB               	movwf	(_ts_system+44)& (0+255),b	;volatile
 12340                           
 12341                           ; BSR set to: 1
 12342                           ;outputs_MC50.c: 567:                         ControlDecelarationFactor();
 12343  005654  EC07  F04D         	call	_ControlDecelarationFactor	;wreg free
 12344                           
 12345                           ; BSR set to: 1
 12346                           ;outputs_MC50.c: 568:                         powerControl_st.decelarationActive=YES;
 12347  005658  0E01               	movlw	1
 12348  00565A  6F7B               	movwf	_powerControl_st& (0+255),b
 12349                           
 12350                           ; BSR set to: 1
 12351                           ;outputs_MC50.c: 569:                         var_sys.velocityFactor=0;
 12352  00565C  0E00               	movlw	0
 12353  00565E  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12354  005660  0E00               	movlw	0
 12355  005662  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12356                           
 12357                           ; BSR set to: 1
 12358                           ;outputs_MC50.c: 570:                          var_sys.AutoInversionActiveStop = NO;
 12359  005664  0E00               	movlw	0
 12360  005666  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 12361  005668                     l21573:
 12362                           
 12363                           ;outputs_MC50.c: 574:                 if ((var_sys.velocityFactorstop <= 0)&&(var_sys.Au
      +                          toInversionActiveStop == YES) && (var_sys_NVM.softstop > 0))
 12364  005668  0101               	movlb	1	; () banked
 12365  00566A  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 12366  00566C  D005               	goto	u24950
 12367  00566E  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 12368  005670  E102               	bnz	u24951
 12369  005672  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 12370  005674  B0D8               	btfsc	status,0,c
 12371  005676                     u24951:
 12372  005676  0012               	return	
 12373  005678                     u24950:
 12374                           
 12375                           ; BSR set to: 1
 12376  005678  0512               	decf	(_var_sys+18)& (0+255),w,b	;volatile
 12377  00567A  A4D8               	btfss	status,2,c
 12378  00567C  0012               	return	
 12379                           
 12380                           ; BSR set to: 1
 12381  00567E  0100               	movlb	0	; () banked
 12382  005680  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 12383  005682  B4D8               	btfsc	status,2,c
 12384  005684  0012               	return	
 12385                           
 12386                           ; BSR set to: 0
 12387                           ;outputs_MC50.c: 575:                 {;outputs_MC50.c: 576:                 ts_system.T
      +                          imeStopedBeforeDecelaration=( 100/50);
 12388  005686  0E00               	movlw	0
 12389  005688  0101               	movlb	1	; () banked
 12390  00568A  6FCC               	movwf	(_ts_system+45)& (0+255),b	;volatile
 12391  00568C  0E02               	movlw	2
 12392  00568E  6FCB               	movwf	(_ts_system+44)& (0+255),b	;volatile
 12393                           
 12394                           ;outputs_MC50.c: 577:                 var_sys.AutoInversionActiveStop = NO;
 12395  005690  0E00               	movlw	0
 12396  005692  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 12397  005694  D77E               	goto	l21527
 12398  005696                     l21587:
 12399  005696  0101               	movlb	1	; () banked
 12400  005698  5100               	movf	_var_sys& (0+255),w,b	;volatile
 12401  00569A  ECCB  F037         	call	_getStateOpenPosition
 12402  00569E  06E8               	decf	wreg,f,c
 12403  0056A0  A4D8               	btfss	status,2,c
 12404  0056A2  D042               	goto	l21629
 12405                           
 12406                           ; BSR set to: 0
 12407  0056A4  5198               	movf	_var_sys_NVM& (0+255),w,b	;volatile
 12408  0056A6  B4D8               	btfsc	status,2,c
 12409  0056A8  D004               	goto	u25000
 12410                           
 12411                           ; BSR set to: 0
 12412  0056AA  0101               	movlb	1	; () banked
 12413  0056AC  5112               	movf	(_var_sys+18)& (0+255),w,b	;volatile
 12414  0056AE  B4D8               	btfsc	status,2,c
 12415  0056B0  D00C               	goto	u25020
 12416  0056B2                     u25000:
 12417  0056B2  0101               	movlb	1	; () banked
 12418  0056B4  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 12419  0056B6  D005               	goto	u25010
 12420  0056B8  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 12421  0056BA  E136               	bnz	l21629
 12422  0056BC  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 12423  0056BE  B0D8               	btfsc	status,0,c
 12424  0056C0  D033               	goto	l21629
 12425  0056C2                     u25010:
 12426                           
 12427                           ; BSR set to: 1
 12428  0056C2  0100               	movlb	0	; () banked
 12429  0056C4  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 12430  0056C6  B4D8               	btfsc	status,2,c
 12431  0056C8  D02F               	goto	l21629
 12432  0056CA                     u25020:
 12433                           
 12434                           ;outputs_MC50.c: 586:     {;outputs_MC50.c: 588:             if ((powerControl_st.decela
      +                          rationActive==NO) && (var_sys.AutoInversionActiveStop==NO ))
 12435  0056CA  0101               	movlb	1	; () banked
 12436  0056CC  517B               	movf	_powerControl_st& (0+255),w,b
 12437  0056CE  A4D8               	btfss	status,2,c
 12438  0056D0  D022               	goto	l21615
 12439                           
 12440                           ; BSR set to: 1
 12441  0056D2  5112               	movf	(_var_sys+18)& (0+255),w,b	;volatile
 12442  0056D4  A4D8               	btfss	status,2,c
 12443  0056D6  D01F               	goto	l21615
 12444                           
 12445                           ; BSR set to: 1
 12446                           ;outputs_MC50.c: 589:         {;outputs_MC50.c: 592:             ts_system.TimeCurrentWa
      +                          itForAlarm=(1000/50);
 12447  0056D8  0E00               	movlw	0
 12448  0056DA  6FCE               	movwf	(_ts_system+47)& (0+255),b	;volatile
 12449  0056DC  0E14               	movlw	20
 12450  0056DE  6FCD               	movwf	(_ts_system+46)& (0+255),b	;volatile
 12451                           
 12452                           ;outputs_MC50.c: 594:             if (var_sys_NVM.softstop > 0){
 12453  0056E0  0100               	movlb	0	; () banked
 12454  0056E2  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 12455  0056E4  B4D8               	btfsc	status,2,c
 12456  0056E6  D008               	goto	l21607
 12457                           
 12458                           ; BSR set to: 0
 12459                           ;outputs_MC50.c: 595:                 var_sys.AutoInversionActive = NO;
 12460  0056E8  0E00               	movlw	0
 12461  0056EA  0101               	movlb	1	; () banked
 12462  0056EC  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 12463                           
 12464                           ;outputs_MC50.c: 596:                 var_sys.AutoInversionActiveStop = YES;
 12465  0056EE  0E01               	movlw	1
 12466  0056F0  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 12467                           
 12468                           ; BSR set to: 1
 12469                           ;outputs_MC50.c: 597:                 InitSoftStop();
 12470  0056F2  EC57  F048         	call	_InitSoftStop	;wreg free
 12471                           
 12472                           ;outputs_MC50.c: 598:             }else{
 12473  0056F6  D00F               	goto	l21615
 12474  0056F8                     l21607:
 12475                           
 12476                           ; BSR set to: 0
 12477                           ;outputs_MC50.c: 599:                 ts_system.TimeStopedBeforeDecelaration=( 500/50);
 12478  0056F8  0E00               	movlw	0
 12479  0056FA  0101               	movlb	1	; () banked
 12480  0056FC  6FCC               	movwf	(_ts_system+45)& (0+255),b	;volatile
 12481  0056FE  0E0A               	movlw	10
 12482  005700  6FCB               	movwf	(_ts_system+44)& (0+255),b	;volatile
 12483                           
 12484                           ;outputs_MC50.c: 600:                  var_sys.AutoInversionActiveStop = NO;
 12485  005702  0E00               	movlw	0
 12486  005704  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 12487                           
 12488                           ; BSR set to: 1
 12489                           ;outputs_MC50.c: 601:                 ControlDecelarationFactor();
 12490  005706  EC07  F04D         	call	_ControlDecelarationFactor	;wreg free
 12491                           
 12492                           ; BSR set to: 1
 12493                           ;outputs_MC50.c: 602:                 powerControl_st.decelarationActive=YES;
 12494  00570A  0E01               	movlw	1
 12495  00570C  6F7B               	movwf	_powerControl_st& (0+255),b
 12496                           
 12497                           ; BSR set to: 1
 12498                           ;outputs_MC50.c: 603:                 var_sys.velocityFactor=0;
 12499  00570E  0E00               	movlw	0
 12500  005710  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12501  005712  0E00               	movlw	0
 12502  005714  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12503  005716                     l21615:
 12504                           
 12505                           ;outputs_MC50.c: 607:         if ((var_sys.velocityFactorstop <= 0)&&(var_sys.AutoInvers
      +                          ionActiveStop == YES) && (var_sys_NVM.softstop > 0))
 12506  005716  0101               	movlb	1	; () banked
 12507  005718  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 12508  00571A  D7AE               	goto	u24950
 12509  00571C  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 12510  00571E  E135               	bnz	l2311
 12511  005720  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 12512  005722  B0D8               	btfsc	status,0,c
 12513  005724  0012               	return	
 12514  005726  D7A8               	goto	u24950
 12515  005728                     l21629:
 12516  005728  0101               	movlb	1	; () banked
 12517  00572A  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 12518  00572C  D012               	goto	l21637
 12519  00572E  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 12520  005730  E103               	bnz	u25090
 12521  005732  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 12522  005734  A0D8               	btfss	status,0,c
 12523  005736  D00D               	goto	l21637
 12524  005738                     u25090:
 12525                           
 12526                           ; BSR set to: 1
 12527  005738  5100               	movf	_var_sys& (0+255),w,b	;volatile
 12528  00573A  B4D8               	btfsc	status,2,c
 12529  00573C  D00A               	goto	l21637
 12530                           
 12531                           ; BSR set to: 1
 12532                           ;outputs_MC50.c: 618:     {;outputs_MC50.c: 619:         var_sys.velocityFactorstop=(var
      +                          _sys.velocityFactorstop)- var_sys.SoftStopDecrementControl;
 12533  00573E  5113               	movf	(_var_sys+19)& (0+255),w,b	;volatile
 12534  005740  5D10               	subwf	(_var_sys+16)& (0+255),w,b	;volatile
 12535  005742  6F10               	movwf	(_var_sys+16)& (0+255),b	;volatile
 12536  005744  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 12537  005746  A0D8               	btfss	status,0,c
 12538  005748  0511               	decf	(_var_sys+17)& (0+255),w,b	;volatile
 12539  00574A  6F11               	movwf	(_var_sys+17)& (0+255),b	;volatile
 12540  00574C                     l21635:
 12541                           
 12542                           ; BSR set to: 1
 12543                           ;outputs_MC50.c: 620:         powerControl_st.decelarationActive=NO;
 12544  00574C  0E00               	movlw	0
 12545  00574E  6F7B               	movwf	_powerControl_st& (0+255),b
 12546                           
 12547                           ;outputs_MC50.c: 623:     }
 12548  005750  0012               	return	
 12549  005752                     l21637:
 12550                           
 12551                           ; BSR set to: 1
 12552  005752  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 12553  005754  D010               	goto	l21645
 12554  005756  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 12555  005758  E103               	bnz	u25110
 12556  00575A  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 12557  00575C  A0D8               	btfss	status,0,c
 12558  00575E  D00B               	goto	l21645
 12559  005760                     u25110:
 12560                           
 12561                           ; BSR set to: 1
 12562  005760  5100               	movf	_var_sys& (0+255),w,b	;volatile
 12563  005762  B4D8               	btfsc	status,2,c
 12564  005764  D008               	goto	l21645
 12565                           
 12566                           ; BSR set to: 1
 12567                           ;outputs_MC50.c: 626:     {;outputs_MC50.c: 627:         var_sys.velocityFactor=(var_sys
      +                          .velocityFactor)-var_sys.SoftStartDecrementControl;
 12568  005766  5114               	movf	(_var_sys+20)& (0+255),w,b	;volatile
 12569  005768  5D0E               	subwf	(_var_sys+14)& (0+255),w,b	;volatile
 12570  00576A  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12571  00576C  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 12572  00576E  A0D8               	btfss	status,0,c
 12573  005770  050F               	decf	(_var_sys+15)& (0+255),w,b	;volatile
 12574  005772  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12575  005774  D7EB               	goto	l21635
 12576  005776                     l21645:
 12577                           
 12578                           ; BSR set to: 1
 12579                           ;outputs_MC50.c: 634:     {;outputs_MC50.c: 635:          var_sys.velocityFactorstop = 0
      +                          ;
 12580  005776  0E00               	movlw	0
 12581  005778  6F11               	movwf	(_var_sys+17)& (0+255),b	;volatile
 12582  00577A  0E00               	movlw	0
 12583  00577C  6F10               	movwf	(_var_sys+16)& (0+255),b	;volatile
 12584                           
 12585                           ;outputs_MC50.c: 636:          var_sys.velocityFactor=0;
 12586  00577E  0E00               	movlw	0
 12587  005780  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12588  005782  0E00               	movlw	0
 12589  005784  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12590                           
 12591                           ;outputs_MC50.c: 637:          powerControl_st.decelarationActive=NO;
 12592  005786  0E00               	movlw	0
 12593  005788  6F7B               	movwf	_powerControl_st& (0+255),b
 12594  00578A                     l2311:
 12595  00578A  0012               	return		;funcret
 12596  00578C                     __end_of_controlVelocity:
 12597                           	callstack 0
 12598                           
 12599 ;; *************** function _getStateOpenPosition *****************
 12600 ;; Defined at:
 12601 ;;		line 470 in file "outputs_MC50.c"
 12602 ;; Parameters:    Size  Location     Type
 12603 ;;  stateMotor      1    wreg     enum E10381
 12604 ;; Auto vars:     Size  Location     Type
 12605 ;;  stateMotor      1    1[BANK0 ] enum E10381
 12606 ;;  state           1    0[BANK0 ] _Bool 
 12607 ;; Return value:  Size  Location     Type
 12608 ;;                  1    wreg      _Bool 
 12609 ;; Registers used:
 12610 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12611 ;; Tracked objects:
 12612 ;;		On entry : 3F/1
 12613 ;;		On exit  : 3F/0
 12614 ;;		Unchanged: 0/0
 12615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12617 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12618 ;;      Temps:          9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12619 ;;      Totals:         9       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12620 ;;Total ram usage:       11 bytes
 12621 ;; Hardware stack levels used: 1
 12622 ;; Hardware stack levels required when called: 6
 12623 ;; This function calls:
 12624 ;;		___lmul
 12625 ;;		_getTimeDecelaration
 12626 ;; This function is called by:
 12627 ;;		_controlVelocity
 12628 ;; This function uses a non-reentrant model
 12629 ;;
 12630                           
 12631                           	psect	text27
 12632  006F96                     __ptext27:
 12633                           	callstack 0
 12634  006F96                     _getStateOpenPosition:
 12635                           	callstack 21
 12636                           
 12637                           ;incstack = 0
 12638                           ;getStateOpenPosition@stateMotor stored from wreg
 12639  006F96  0100               	movlb	0	; () banked
 12640  006F98  6FD9               	movwf	getStateOpenPosition@stateMotor& (0+255),b
 12641                           
 12642                           ;outputs_MC50.c: 470: _Bool getStateOpenPosition(stateMotor_enum stateMotor);outputs_MC5
      +                          0.c: 471: {;outputs_MC50.c: 472:     _Bool state=0;
 12643  006F9A  0E00               	movlw	0
 12644  006F9C  0100               	movlb	0	; () banked
 12645  006F9E  6FD8               	movwf	getStateOpenPosition@state& (0+255),b
 12646                           
 12647                           ; BSR set to: 0
 12648                           ;outputs_MC50.c: 473:     if(var_sys.PositionIsLost==YES)
 12649  006FA0  0101               	movlb	1	; () banked
 12650  006FA2  0548               	decf	(_var_sys+72)& (0+255),w,b	;volatile
 12651  006FA4  A4D8               	btfss	status,2,c
 12652  006FA6  D002               	goto	l20887
 12653  006FA8                     u23960:
 12654                           
 12655                           ;outputs_MC50.c: 474:     {;outputs_MC50.c: 475:         state=1;
 12656  006FA8  0E01               	movlw	1
 12657  006FAA  D046               	goto	L71
 12658  006FAC                     l20887:
 12659                           
 12660                           ; BSR set to: 1
 12661  006FAC  0100               	movlb	0	; () banked
 12662  006FAE  519C               	movf	(_var_sys_NVM+4)& (0+255),w,b	;volatile
 12663  006FB0  0D14               	mullw	20
 12664  006FB2  CFF3 F032          	movff	prodl,??_getStateOpenPosition
 12665  006FB6  CFF4 F033          	movff	prodh,??_getStateOpenPosition+1
 12666  006FBA  0E00               	movlw	0
 12667  006FBC  BE33               	btfsc	(??_getStateOpenPosition+1)^0,7,c
 12668  006FBE  0EFF               	movlw	255
 12669  006FC0  6E34               	movwf	(??_getStateOpenPosition+2)^0,c
 12670  006FC2  6E35               	movwf	(??_getStateOpenPosition+3)^0,c
 12671  006FC4  51CC               	movf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 12672  006FC6  5C32               	subwf	??_getStateOpenPosition^0,w,c
 12673  006FC8  51CD               	movf	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 12674  006FCA  5833               	subwfb	(??_getStateOpenPosition+1)^0,w,c
 12675  006FCC  51CE               	movf	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 12676  006FCE  5834               	subwfb	(??_getStateOpenPosition+2)^0,w,c
 12677  006FD0  51CF               	movf	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 12678  006FD2  5835               	subwfb	(??_getStateOpenPosition+3)^0,w,c
 12679  006FD4  B0D8               	btfsc	status,0,c
 12680  006FD6  D033               	goto	l20901
 12681                           
 12682                           ; BSR set to: 0
 12683  006FD8  0E02               	movlw	2
 12684  006FDA  19D9               	xorwf	getStateOpenPosition@stateMotor& (0+255),w,b
 12685  006FDC  A4D8               	btfss	status,2,c
 12686  006FDE  D02F               	goto	l20901
 12687                           
 12688                           ; BSR set to: 0
 12689                           ;outputs_MC50.c: 478:     {;outputs_MC50.c: 479:         if(var_sys_NVM.walkTime<(var_sy
      +                          s_NVM.decelarationOpen/2))
 12690  006FE0  90D8               	bcf	status,0,c
 12691  006FE2  3198               	rrcf	_var_sys_NVM& (0+255),w,b	;volatile
 12692  006FE4  619C               	cpfslt	(_var_sys_NVM+4)& (0+255),b	;volatile
 12693  006FE6  D001               	goto	l20895
 12694  006FE8  D7DF               	goto	u23960
 12695  006FEA                     l20895:
 12696                           
 12697                           ; BSR set to: 0
 12698  006FEA  519C               	movf	(_var_sys_NVM+4)& (0+255),w,b	;volatile
 12699  006FEC  0D14               	mullw	20
 12700  006FEE  CFF3 F032          	movff	prodl,??_getStateOpenPosition
 12701  006FF2  CFF4 F033          	movff	prodh,??_getStateOpenPosition+1
 12702  006FF6  0E00               	movlw	0
 12703  006FF8  BE33               	btfsc	(??_getStateOpenPosition+1)^0,7,c
 12704  006FFA  0EFF               	movlw	255
 12705  006FFC  6E34               	movwf	(??_getStateOpenPosition+2)^0,c
 12706  006FFE  6E35               	movwf	(??_getStateOpenPosition+3)^0,c
 12707  007000  0ED8               	movlw	216
 12708  007002  2432               	addwf	??_getStateOpenPosition^0,w,c
 12709  007004  6E36               	movwf	(??_getStateOpenPosition+4)^0,c
 12710  007006  0EFF               	movlw	255
 12711  007008  2033               	addwfc	(??_getStateOpenPosition+1)^0,w,c
 12712  00700A  6E37               	movwf	(??_getStateOpenPosition+5)^0,c
 12713  00700C  0EFF               	movlw	255
 12714  00700E  2034               	addwfc	(??_getStateOpenPosition+2)^0,w,c
 12715  007010  6E38               	movwf	(??_getStateOpenPosition+6)^0,c
 12716  007012  0EFF               	movlw	255
 12717  007014  2035               	addwfc	(??_getStateOpenPosition+3)^0,w,c
 12718  007016  6E39               	movwf	(??_getStateOpenPosition+7)^0,c
 12719  007018  0101               	movlb	1	; () banked
 12720  00701A  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 12721  00701C  5C36               	subwf	(??_getStateOpenPosition+4)^0,w,c
 12722  00701E  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 12723  007020  5837               	subwfb	(??_getStateOpenPosition+5)^0,w,c
 12724  007022  5120               	movf	(_var_sys+32)& (0+255),w,b	;volatile
 12725  007024  5838               	subwfb	(??_getStateOpenPosition+6)^0,w,c
 12726  007026  5039               	movf	(??_getStateOpenPosition+7)^0,w,c
 12727  007028  0A80               	xorlw	128
 12728  00702A  6E3A               	movwf	(??_getStateOpenPosition+8)^0,c
 12729  00702C  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 12730  00702E  0A80               	xorlw	128
 12731  007030  583A               	subwfb	(??_getStateOpenPosition+8)^0,w,c
 12732  007032  A0D8               	btfss	status,0,c
 12733  007034  D7B9               	goto	u23960
 12734                           
 12735                           ; BSR set to: 1
 12736                           ;outputs_MC50.c: 488:         {;outputs_MC50.c: 489:             state= 0;
 12737  007036  0E00               	movlw	0
 12738  007038                     L71:
 12739  007038  0100               	movlb	0	; () banked
 12740  00703A  6FD8               	movwf	getStateOpenPosition@state& (0+255),b
 12741  00703C  D032               	goto	l2254
 12742  00703E                     l20901:
 12743                           
 12744                           ; BSR set to: 0
 12745  00703E  0E02               	movlw	2
 12746  007040  19D9               	xorwf	getStateOpenPosition@stateMotor& (0+255),w,b
 12747  007042  B4D8               	btfsc	status,2,c
 12748  007044  D003               	goto	u24020
 12749                           
 12750                           ; BSR set to: 0
 12751  007046  05D9               	decf	getStateOpenPosition@stateMotor& (0+255),w,b
 12752  007048  A4D8               	btfss	status,2,c
 12753  00704A  D02B               	goto	l2254
 12754  00704C                     u24020:
 12755                           
 12756                           ; BSR set to: 0
 12757                           ;outputs_MC50.c: 493:     {;outputs_MC50.c: 494:          if((var_sys_NVM.learningTimeTo
      +                          Open)<(((unsigned long)var_sys_NVM.decelarationOpen*( 500/50))))
 12758  00704C  5198               	movf	_var_sys_NVM& (0+255),w,b	;volatile
 12759  00704E  6E1D               	movwf	___lmul@multiplier^0,c
 12760  007050  6A1E               	clrf	(___lmul@multiplier+1)^0,c
 12761  007052  6A1F               	clrf	(___lmul@multiplier+2)^0,c
 12762  007054  6A20               	clrf	(___lmul@multiplier+3)^0,c
 12763  007056  0E0A               	movlw	10
 12764  007058  6E21               	movwf	___lmul@multiplicand^0,c
 12765  00705A  0E00               	movlw	0
 12766  00705C  6E22               	movwf	(___lmul@multiplicand+1)^0,c
 12767  00705E  0E00               	movlw	0
 12768  007060  6E23               	movwf	(___lmul@multiplicand+2)^0,c
 12769  007062  0E00               	movlw	0
 12770  007064  6E24               	movwf	(___lmul@multiplicand+3)^0,c
 12771  007066  EC10  F047         	call	___lmul	;wreg free
 12772  00706A  501D               	movf	?___lmul^0,w,c
 12773  00706C  0100               	movlb	0	; () banked
 12774  00706E  5DCC               	subwf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 12775  007070  501E               	movf	(?___lmul+1)^0,w,c
 12776  007072  59CD               	subwfb	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 12777  007074  501F               	movf	(?___lmul+2)^0,w,c
 12778  007076  59CE               	subwfb	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 12779  007078  5020               	movf	(?___lmul+3)^0,w,c
 12780  00707A  59CF               	subwfb	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 12781  00707C  A0D8               	btfss	status,0,c
 12782  00707E  D794               	goto	u23960
 12783                           
 12784                           ; BSR set to: 0
 12785  007080  51D9               	movf	getStateOpenPosition@stateMotor& (0+255),w,b
 12786  007082  ECD8  F03A         	call	_getTimeDecelaration
 12787  007086  0101               	movlb	1	; () banked
 12788  007088  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 12789  00708A  5C29               	subwf	?_getTimeDecelaration^0,w,c
 12790  00708C  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 12791  00708E  582A               	subwfb	(?_getTimeDecelaration+1)^0,w,c
 12792  007090  5120               	movf	(_var_sys+32)& (0+255),w,b	;volatile
 12793  007092  582B               	subwfb	(?_getTimeDecelaration+2)^0,w,c
 12794  007094  502C               	movf	(?_getTimeDecelaration+3)^0,w,c
 12795  007096  0A80               	xorlw	128
 12796  007098  6E32               	movwf	??_getStateOpenPosition^0,c
 12797  00709A  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 12798  00709C  0A80               	xorlw	128
 12799  00709E  5832               	subwfb	??_getStateOpenPosition^0,w,c
 12800  0070A0  D7C8               	goto	L72
 12801  0070A2                     l2254:
 12802                           
 12803                           ; BSR set to: 0
 12804                           ;outputs_MC50.c: 507:     return state;
 12805  0070A2  51D8               	movf	getStateOpenPosition@state& (0+255),w,b
 12806                           
 12807                           ; BSR set to: 0
 12808  0070A4  0012               	return		;funcret
 12809  0070A6                     __end_of_getStateOpenPosition:
 12810                           	callstack 0
 12811                           
 12812 ;; *************** function _InitSoftStop *****************
 12813 ;; Defined at:
 12814 ;;		line 849 in file "sm_ControlGate_MC50.c"
 12815 ;; Parameters:    Size  Location     Type
 12816 ;;		None
 12817 ;; Auto vars:     Size  Location     Type
 12818 ;;		None
 12819 ;; Return value:  Size  Location     Type
 12820 ;;                  1    wreg      void 
 12821 ;; Registers used:
 12822 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12823 ;; Tracked objects:
 12824 ;;		On entry : 3F/1
 12825 ;;		On exit  : 3E/0
 12826 ;;		Unchanged: 0/0
 12827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12830 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12831 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12832 ;;Total ram usage:        1 bytes
 12833 ;; Hardware stack levels used: 1
 12834 ;; Hardware stack levels required when called: 5
 12835 ;; This function calls:
 12836 ;;		_GetMotorPower
 12837 ;; This function is called by:
 12838 ;;		_controlVelocity
 12839 ;; This function uses a non-reentrant model
 12840 ;;
 12841                           
 12842                           	psect	text28
 12843  0090AE                     __ptext28:
 12844                           	callstack 0
 12845  0090AE                     _InitSoftStop:
 12846                           	callstack 22
 12847                           
 12848                           ; BSR set to: 1
 12849                           ;sm_ControlGate_MC50.c: 850:     if (((var_sys.AutoInversionActiveStop == YES)|| (var_sy
      +                          s.AutoInversionActive == YES))&&(var_sys_NVM.softstop >0)) {
 12850                           
 12851                           ; BSR set to: 0
 12852                           ;incstack = 0
 12853  0090AE  0512               	decf	(_var_sys+18)& (0+255),w,b	;volatile
 12854  0090B0  B4D8               	btfsc	status,2,c
 12855  0090B2  D003               	goto	u24060
 12856                           
 12857                           ; BSR set to: 1
 12858  0090B4  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 12859  0090B6  A4D8               	btfss	status,2,c
 12860  0090B8  0012               	return	
 12861  0090BA                     u24060:
 12862                           
 12863                           ; BSR set to: 1
 12864  0090BA  0100               	movlb	0	; () banked
 12865  0090BC  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 12866  0090BE  B4D8               	btfsc	status,2,c
 12867  0090C0  0012               	return	
 12868                           
 12869                           ; BSR set to: 0
 12870                           ;sm_ControlGate_MC50.c: 853:         var_sys.velocityFactor = 0;
 12871  0090C2  0E00               	movlw	0
 12872  0090C4  0101               	movlb	1	; () banked
 12873  0090C6  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12874  0090C8  0E00               	movlw	0
 12875  0090CA  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12876                           
 12877                           ;sm_ControlGate_MC50.c: 854:         var_sys.velocityFactorstop = 0;
 12878  0090CC  0E00               	movlw	0
 12879  0090CE  6F11               	movwf	(_var_sys+17)& (0+255),b	;volatile
 12880  0090D0  0E00               	movlw	0
 12881  0090D2  6F10               	movwf	(_var_sys+16)& (0+255),b	;volatile
 12882                           
 12883                           ; BSR set to: 1
 12884                           ;sm_ControlGate_MC50.c: 855:         var_sys.velocityFactorstop = GetMotorPower();
 12885  0090D4  EC20  F03C         	call	_GetMotorPower	;wreg free
 12886  0090D8  6E14               	movwf	??_InitSoftStop^0,c
 12887  0090DA  5014               	movf	??_InitSoftStop^0,w,c
 12888  0090DC  6F10               	movwf	(_var_sys+16)& (0+255),b	;volatile
 12889  0090DE  6B11               	clrf	(_var_sys+17)& (0+255),b	;volatile
 12890                           
 12891                           ; BSR set to: 1
 12892                           ;sm_ControlGate_MC50.c: 859:         ts_system.timeSoftStop = var_sys.velocityFactorstop
      +                           + 1;
 12893  0090E0  0E01               	movlw	1
 12894  0090E2  2510               	addwf	(_var_sys+16)& (0+255),w,b	;volatile
 12895  0090E4  6FB7               	movwf	(_ts_system+24)& (0+255),b	;volatile
 12896  0090E6  0E00               	movlw	0
 12897  0090E8  2111               	addwfc	(_var_sys+17)& (0+255),w,b	;volatile
 12898  0090EA  6FB8               	movwf	(_ts_system+25)& (0+255),b	;volatile
 12899                           
 12900                           ; BSR set to: 1
 12901                           ;sm_ControlGate_MC50.c: 861:         var_sys.SoftStopDecrementControl = 10 - var_sys_NVM
      +                          .softstop;
 12902  0090EC  0100               	movlb	0	; () banked
 12903  0090EE  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 12904  0090F0  080A               	sublw	10
 12905  0090F2  0101               	movlb	1	; () banked
 12906  0090F4  6F13               	movwf	(_var_sys+19)& (0+255),b	;volatile
 12907  0090F6  0012               	return		;funcret
 12908  0090F8                     __end_of_InitSoftStop:
 12909                           	callstack 0
 12910                           
 12911 ;; *************** function _ControlDecelarationFactor *****************
 12912 ;; Defined at:
 12913 ;;		line 463 in file "outputs_MC50.c"
 12914 ;; Parameters:    Size  Location     Type
 12915 ;;		None
 12916 ;; Auto vars:     Size  Location     Type
 12917 ;;		None
 12918 ;; Return value:  Size  Location     Type
 12919 ;;                  1    wreg      void 
 12920 ;; Registers used:
 12921 ;;		wreg, status,2, status,0, prodl, prodh
 12922 ;; Tracked objects:
 12923 ;;		On entry : 3E/1
 12924 ;;		On exit  : 3F/1
 12925 ;;		Unchanged: 0/0
 12926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12930 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12931 ;;Total ram usage:        0 bytes
 12932 ;; Hardware stack levels used: 1
 12933 ;; Hardware stack levels required when called: 4
 12934 ;; This function calls:
 12935 ;;		Nothing
 12936 ;; This function is called by:
 12937 ;;		_controlVelocity
 12938 ;; This function uses a non-reentrant model
 12939 ;;
 12940                           
 12941                           	psect	text29
 12942  009A0E                     __ptext29:
 12943                           	callstack 0
 12944  009A0E                     _ControlDecelarationFactor:
 12945                           	callstack 23
 12946                           
 12947                           ;outputs_MC50.c: 465:     powerControl_st.decelarationCyclesOn=1;
 12948                           
 12949                           ;incstack = 0
 12950  009A0E  0E01               	movlw	1
 12951  009A10  0101               	movlb	1	; () banked
 12952  009A12  6F7C               	movwf	(_powerControl_st+1)& (0+255),b
 12953                           
 12954                           ;outputs_MC50.c: 466:     powerControl_st.decelarationCyclesOff=2;
 12955  009A14  0E02               	movlw	2
 12956  009A16  6F7D               	movwf	(_powerControl_st+2)& (0+255),b
 12957                           
 12958                           ; BSR set to: 1
 12959                           ;outputs_MC50.c: 467:     powerControl_st.decelarationPower=var_sys_NVM.velocityDecelara
      +                          tion*var_sys.Torquerelanty;
 12960  009A18  0100               	movlb	0	; () banked
 12961  009A1A  51B0               	movf	(_var_sys_NVM+24)& (0+255),w,b	;volatile
 12962  009A1C  0101               	movlb	1	; () banked
 12963  009A1E  0315               	mulwf	(_var_sys+21)& (0+255),b	;volatile
 12964  009A20  CFF3 F17E          	movff	prodl,_powerControl_st+3
 12965                           
 12966                           ; BSR set to: 1
 12967  009A24  0012               	return		;funcret
 12968  009A26                     __end_of_ControlDecelarationFactor:
 12969                           	callstack 0
 12970                           
 12971 ;; *************** function _actionZone_Opened *****************
 12972 ;; Defined at:
 12973 ;;		line 514 in file "sm_ControlGate_MC50.c"
 12974 ;; Parameters:    Size  Location     Type
 12975 ;;		None
 12976 ;; Auto vars:     Size  Location     Type
 12977 ;;  typeOpenOrde    1   32[COMRAM] enum E10372
 12978 ;;  securityClos    1   31[COMRAM] enum E10397
 12979 ;; Return value:  Size  Location     Type
 12980 ;;                  1    wreg      void 
 12981 ;; Registers used:
 12982 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12983 ;; Tracked objects:
 12984 ;;		On entry : 3F/0
 12985 ;;		On exit  : 3E/0
 12986 ;;		Unchanged: 0/0
 12987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12989 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12991 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12992 ;;Total ram usage:        2 bytes
 12993 ;; Hardware stack levels used: 1
 12994 ;; Hardware stack levels required when called: 7
 12995 ;; This function calls:
 12996 ;;		_CloseOrder
 12997 ;;		_GetOpenOrder
 12998 ;;		_GetSecurityStateInClosing
 12999 ;;		_InitFullAutoTime
 13000 ;;		_InitWalkAutoTime
 13001 ;;		_OpenFullOrder
 13002 ;;		_OpenWalkOrder
 13003 ;;		_VerifyFollowMe
 13004 ;; This function is called by:
 13005 ;;		_sm_execute_ControlGate
 13006 ;; This function uses a non-reentrant model
 13007 ;;
 13008                           
 13009                           	psect	text30
 13010  00578C                     __ptext30:
 13011                           	callstack 0
 13012  00578C                     _actionZone_Opened:
 13013                           	callstack 22
 13014                           
 13015                           ; BSR set to: 0
 13016                           ;sm_ControlGate_MC50.c: 515:     StateEnum securityClosing = GetSecurityStateInClosing()
      +                          ;
 13017                           
 13018                           ; BSR set to: 1
 13019                           ;incstack = 0
 13020  00578C  ECED  F03D         	call	_GetSecurityStateInClosing	;wreg free
 13021  005790  6E20               	movwf	actionZone_Opened@securityClosing^0,c
 13022                           
 13023                           ;sm_ControlGate_MC50.c: 517:     if ((securityClosing != NO) && (Abertura_pedonal == 0))
      +                           {
 13024  005792  5020               	movf	actionZone_Opened@securityClosing^0,w,c
 13025  005794  B4D8               	btfsc	status,2,c
 13026  005796  D007               	goto	l23161
 13027  005798  0101               	movlb	1	; () banked
 13028  00579A  5192               	movf	_Abertura_pedonal& (0+255),w,b
 13029  00579C  A4D8               	btfss	status,2,c
 13030  00579E  D003               	goto	l23161
 13031                           
 13032                           ; BSR set to: 1
 13033                           ;sm_ControlGate_MC50.c: 518:         InitFullAutoTime();
 13034  0057A0  ECE0  F04C         	call	_InitFullAutoTime	;wreg free
 13035                           
 13036                           ;sm_ControlGate_MC50.c: 519:     }
 13037  0057A4  D008               	goto	l2727
 13038  0057A6                     l23161:
 13039  0057A6  5020               	movf	actionZone_Opened@securityClosing^0,w,c
 13040  0057A8  B4D8               	btfsc	status,2,c
 13041  0057AA  D005               	goto	l2727
 13042  0057AC  0101               	movlb	1	; () banked
 13043  0057AE  0592               	decf	_Abertura_pedonal& (0+255),w,b
 13044  0057B0  B4D8               	btfsc	status,2,c
 13045                           
 13046                           ; BSR set to: 1
 13047                           ;sm_ControlGate_MC50.c: 521:          InitWalkAutoTime();
 13048  0057B2  EC64  F04D         	call	_InitWalkAutoTime	;wreg free
 13049  0057B6                     l2727:
 13050                           
 13051                           ;sm_ControlGate_MC50.c: 524:     TypeCMD typeOpenOrder = GetOpenOrder();
 13052  0057B6  ECA6  F02D         	call	_GetOpenOrder	;wreg free
 13053  0057BA  6E21               	movwf	actionZone_Opened@typeOpenOrder^0,c
 13054                           
 13055                           ;sm_ControlGate_MC50.c: 526:     VerifyFollowMe(securityClosing);
 13056  0057BC  5020               	movf	actionZone_Opened@securityClosing^0,w,c
 13057  0057BE  EC38  F04C         	call	_VerifyFollowMe
 13058                           
 13059                           ;sm_ControlGate_MC50.c: 530:     if ((PORTBbits.RB1==0) && (var_sys_NVM.autoTimeFullClos
      +                          e != 0)&&(var_sys.AutoCloseActive != 0) && (button_struct.current != 0x35)&& (var_sys_NV
      +                          M.operationMode == ModoCondominio)){
 13060  0057C2  B28E               	btfsc	142,1,c	;volatile
 13061  0057C4  D013               	goto	l2729
 13062  0057C6  0100               	movlb	0	; () banked
 13063  0057C8  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 13064  0057CA  B4D8               	btfsc	status,2,c
 13065  0057CC  D00F               	goto	l2729
 13066                           
 13067                           ; BSR set to: 0
 13068  0057CE  0101               	movlb	1	; () banked
 13069  0057D0  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
 13070  0057D2  B4D8               	btfsc	status,2,c
 13071  0057D4  D00B               	goto	l2729
 13072                           
 13073                           ; BSR set to: 1
 13074  0057D6  0E35               	movlw	53
 13075  0057D8  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 13076  0057DA  B4D8               	btfsc	status,2,c
 13077  0057DC  D007               	goto	l2729
 13078                           
 13079                           ; BSR set to: 1
 13080  0057DE  0E02               	movlw	2
 13081  0057E0  0100               	movlb	0	; () banked
 13082  0057E2  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 13083  0057E4  A4D8               	btfss	status,2,c
 13084  0057E6  D002               	goto	l2729
 13085                           
 13086                           ; BSR set to: 0
 13087                           ;sm_ControlGate_MC50.c: 531:       typeOpenOrder = NoCMD;
 13088  0057E8  0E00               	movlw	0
 13089  0057EA  6E21               	movwf	actionZone_Opened@typeOpenOrder^0,c
 13090  0057EC                     l2729:
 13091                           
 13092                           ;sm_ControlGate_MC50.c: 535:      if (typeOpenOrder != NoCMD)
 13093  0057EC  5021               	movf	actionZone_Opened@typeOpenOrder^0,w,c
 13094  0057EE  B4D8               	btfsc	status,2,c
 13095  0057F0  D05D               	goto	l2730
 13096                           
 13097                           ;sm_ControlGate_MC50.c: 536:      {;sm_ControlGate_MC50.c: 539:         ts_system.timeSi
      +                          nalizationDigit = (1000/50) * 3;
 13098  0057F2  0E00               	movlw	0
 13099  0057F4  0101               	movlb	1	; () banked
 13100  0057F6  6FAC               	movwf	(_ts_system+13)& (0+255),b	;volatile
 13101  0057F8  0E3C               	movlw	60
 13102  0057FA  6FAB               	movwf	(_ts_system+12)& (0+255),b	;volatile
 13103                           
 13104                           ; BSR set to: 1
 13105                           ;sm_ControlGate_MC50.c: 541:        if ( var_sys_NVM.operationMode == ModoCondominio && 
      +                          var_sys_NVM.autoTimeFullClose == 0 && (typeOpenOrder == TypeFull|| typeOpenOrder == Type
      +                          FullClose ))
 13106  0057FC  0E02               	movlw	2
 13107  0057FE  0100               	movlb	0	; () banked
 13108  005800  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 13109  005802  A4D8               	btfss	status,2,c
 13110  005804  D00D               	goto	l23193
 13111                           
 13112                           ; BSR set to: 0
 13113  005806  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 13114  005808  A4D8               	btfss	status,2,c
 13115  00580A  D00A               	goto	l23193
 13116                           
 13117                           ; BSR set to: 0
 13118  00580C  0421               	decf	actionZone_Opened@typeOpenOrder^0,w,c
 13119  00580E  B4D8               	btfsc	status,2,c
 13120  005810  D004               	goto	u27180
 13121                           
 13122                           ; BSR set to: 0
 13123  005812  0E04               	movlw	4
 13124  005814  1821               	xorwf	actionZone_Opened@typeOpenOrder^0,w,c
 13125  005816  A4D8               	btfss	status,2,c
 13126  005818  D003               	goto	l23193
 13127  00581A                     u27180:
 13128                           
 13129                           ;sm_ControlGate_MC50.c: 542:         {;sm_ControlGate_MC50.c: 544:             CloseOrde
      +                          r();
 13130  00581A  ECD9  F04B         	call	_CloseOrder	;wreg free
 13131                           
 13132                           ;sm_ControlGate_MC50.c: 546:         }
 13133  00581E  0012               	return	
 13134  005820                     l23193:
 13135                           
 13136                           ; BSR set to: 0
 13137  005820  51A8               	movf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 13138  005822  B4D8               	btfsc	status,2,c
 13139  005824  D014               	goto	l23207
 13140                           
 13141                           ; BSR set to: 0
 13142                           ;sm_ControlGate_MC50.c: 553:             if (typeOpenOrder == TypeFullOpen && var_sys.Fi
      +                          mCurso_OpenIsEnabled == NO && var_sys.Statedoorcontrol != st_Opened) {
 13143  005826  0E03               	movlw	3
 13144  005828  1821               	xorwf	actionZone_Opened@typeOpenOrder^0,w,c
 13145  00582A  A4D8               	btfss	status,2,c
 13146  00582C  D00B               	goto	l23203
 13147                           
 13148                           ; BSR set to: 0
 13149  00582E  0101               	movlb	1	; () banked
 13150  005830  5104               	movf	(_var_sys+4)& (0+255),w,b	;volatile
 13151  005832  A4D8               	btfss	status,2,c
 13152  005834  D007               	goto	l23203
 13153                           
 13154                           ; BSR set to: 1
 13155  005836  0E04               	movlw	4
 13156  005838  191C               	xorwf	(_var_sys+28)& (0+255),w,b	;volatile
 13157  00583A  B4D8               	btfsc	status,2,c
 13158  00583C  D003               	goto	l23203
 13159  00583E                     u27220:
 13160                           
 13161                           ; BSR set to: 1
 13162                           ;sm_ControlGate_MC50.c: 555:                 OpenFullOrder();
 13163  00583E  ECEC  F04B         	call	_OpenFullOrder	;wreg free
 13164                           
 13165                           ;sm_ControlGate_MC50.c: 556:             } else if (typeOpenOrder == TypeFullClose) {
 13166  005842  0012               	return	
 13167  005844                     l23203:
 13168  005844  0E04               	movlw	4
 13169  005846  1821               	xorwf	actionZone_Opened@typeOpenOrder^0,w,c
 13170  005848  A4D8               	btfss	status,2,c
 13171  00584A  0012               	return	
 13172  00584C  D7E6               	goto	u27180
 13173  00584E                     l23207:
 13174                           
 13175                           ; BSR set to: 0
 13176  00584E  0E03               	movlw	3
 13177  005850  0101               	movlb	1	; () banked
 13178  005852  190B               	xorwf	(_var_sys+11)& (0+255),w,b	;volatile
 13179  005854  A4D8               	btfss	status,2,c
 13180  005856  D009               	goto	l23215
 13181                           
 13182                           ; BSR set to: 1
 13183  005858  0421               	decf	actionZone_Opened@typeOpenOrder^0,w,c
 13184  00585A  A4D8               	btfss	status,2,c
 13185  00585C  D006               	goto	l23215
 13186  00585E                     u27250:
 13187                           
 13188                           ; BSR set to: 1
 13189                           ;sm_ControlGate_MC50.c: 563:             OpenFullOrder();
 13190  00585E  ECEC  F04B         	call	_OpenFullOrder	;wreg free
 13191  005862                     l23213:
 13192                           
 13193                           ;sm_ControlGate_MC50.c: 565:             var_sys.AutoInversionActive = NO;
 13194  005862  0E00               	movlw	0
 13195  005864  0101               	movlb	1	; () banked
 13196  005866  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 13197                           
 13198                           ;sm_ControlGate_MC50.c: 567:         } else if (var_sys.LastState == InClose && typeOpen
      +                          Order == TypeWalk) {
 13199  005868  0012               	return	
 13200  00586A                     l23215:
 13201                           
 13202                           ; BSR set to: 1
 13203  00586A  0E03               	movlw	3
 13204  00586C  190B               	xorwf	(_var_sys+11)& (0+255),w,b	;volatile
 13205  00586E  A4D8               	btfss	status,2,c
 13206  005870  D007               	goto	l23223
 13207                           
 13208                           ; BSR set to: 1
 13209  005872  0E02               	movlw	2
 13210  005874  1821               	xorwf	actionZone_Opened@typeOpenOrder^0,w,c
 13211  005876  A4D8               	btfss	status,2,c
 13212  005878  D003               	goto	l23223
 13213                           
 13214                           ; BSR set to: 1
 13215                           ;sm_ControlGate_MC50.c: 569:             OpenWalkOrder();
 13216  00587A  EC6A  F044         	call	_OpenWalkOrder	;wreg free
 13217  00587E  D7F1               	goto	l23213
 13218  005880                     l23223:
 13219                           
 13220                           ; BSR set to: 1
 13221  005880  0E03               	movlw	3
 13222  005882  1821               	xorwf	actionZone_Opened@typeOpenOrder^0,w,c
 13223  005884  A4D8               	btfss	status,2,c
 13224  005886  D005               	goto	l23233
 13225                           
 13226                           ; BSR set to: 1
 13227                           ;sm_ControlGate_MC50.c: 574:             if (var_sys.Statedoorcontrol == st_Opened){
 13228  005888  0E04               	movlw	4
 13229  00588A  191C               	xorwf	(_var_sys+28)& (0+255),w,b	;volatile
 13230  00588C  B4D8               	btfsc	status,2,c
 13231  00588E  0012               	return	
 13232  005890  D7E6               	goto	u27250
 13233  005892                     l23233:
 13234                           
 13235                           ; BSR set to: 1
 13236  005892  0100               	movlb	0	; () banked
 13237  005894  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 13238  005896  B4D8               	btfsc	status,2,c
 13239  005898  D007               	goto	l23239
 13240                           
 13241                           ; BSR set to: 0
 13242  00589A  0E02               	movlw	2
 13243  00589C  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 13244  00589E  A4D8               	btfss	status,2,c
 13245  0058A0  D003               	goto	l23239
 13246                           
 13247                           ; BSR set to: 0
 13248                           ;sm_ControlGate_MC50.c: 582:         {;sm_ControlGate_MC50.c: 584:             InitFullA
      +                          utoTime();
 13249  0058A2  ECE0  F04C         	call	_InitFullAutoTime	;wreg free
 13250                           
 13251                           ;sm_ControlGate_MC50.c: 586:         }
 13252  0058A6  0012               	return	
 13253  0058A8                     l23239:
 13254                           
 13255                           ; BSR set to: 0
 13256  0058A8  5020               	movf	actionZone_Opened@securityClosing^0,w,c
 13257  0058AA  D7CE               	goto	L73
 13258  0058AC                     l2730:
 13259  0058AC  B28E               	btfsc	142,1,c	;volatile
 13260  0058AE  D00B               	goto	l23247
 13261  0058B0  0100               	movlb	0	; () banked
 13262  0058B2  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 13263  0058B4  B4D8               	btfsc	status,2,c
 13264  0058B6  D007               	goto	l23247
 13265                           
 13266                           ; BSR set to: 0
 13267                           ;sm_ControlGate_MC50.c: 597:         ts_system.timeWaitToClose = ((int) var_sys_NVM.auto
      +                          TimeFullClose * (1000/50));
 13268  0058B8  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 13269  0058BA  0D14               	mullw	20
 13270  0058BC  CFF3 F1B1          	movff	prodl,_ts_system+18	;volatile
 13271  0058C0  CFF4 F1B2          	movff	prodh,_ts_system+19	;volatile
 13272                           
 13273                           ;sm_ControlGate_MC50.c: 599:     }
 13274  0058C4  0012               	return	
 13275  0058C6                     l23247:
 13276  0058C6  0101               	movlb	1	; () banked
 13277  0058C8  053A               	decf	(_var_sys+58)& (0+255),w,b	;volatile
 13278  0058CA  A4D8               	btfss	status,2,c
 13279  0058CC  D00F               	goto	l23257
 13280                           
 13281                           ; BSR set to: 1
 13282  0058CE  5020               	movf	actionZone_Opened@securityClosing^0,w,c
 13283  0058D0  A4D8               	btfss	status,2,c
 13284  0058D2  D00C               	goto	l23257
 13285                           
 13286                           ; BSR set to: 1
 13287                           ;sm_ControlGate_MC50.c: 603:         var_sys.StateFollowIsOn = NO;
 13288  0058D4  0E00               	movlw	0
 13289  0058D6  6F3A               	movwf	(_var_sys+58)& (0+255),b	;volatile
 13290                           
 13291                           ; BSR set to: 1
 13292                           ;sm_ControlGate_MC50.c: 610:         var_sys.AutoCloseActive = var_sys_NVM.folow_me;
 13293  0058D8  C0AD  F123         	movff	_var_sys_NVM+21,_var_sys+35	;volatile
 13294                           
 13295                           ; BSR set to: 1
 13296                           ;sm_ControlGate_MC50.c: 611:         ts_system.timeWaitToClose = var_sys_NVM.folow_me * 
      +                          (1000/50);
 13297  0058DC  0100               	movlb	0	; () banked
 13298  0058DE  51AD               	movf	(_var_sys_NVM+21)& (0+255),w,b	;volatile
 13299  0058E0  0D14               	mullw	20
 13300  0058E2  CFF3 F1B1          	movff	prodl,_ts_system+18	;volatile
 13301  0058E6  CFF4 F1B2          	movff	prodh,_ts_system+19	;volatile
 13302                           
 13303                           ;sm_ControlGate_MC50.c: 613:     }else if (ts_system.timeWaitToClose <= 0 && var_sys_NVM
      +                          .operationMode == ModoPassoPasso && var_sys.passoAPassoAutoClose == YES && var_sys.AutoC
      +                          loseActive != 0) {
 13304  0058EA  0012               	return	
 13305  0058EC                     l23257:
 13306                           
 13307                           ; BSR set to: 1
 13308  0058EC  BFB2               	btfsc	(_ts_system+19)& (0+255),7,b	;volatile
 13309  0058EE  D005               	goto	u27370
 13310  0058F0  51B2               	movf	(_ts_system+19)& (0+255),w,b	;volatile
 13311  0058F2  E113               	bnz	l23269
 13312  0058F4  05B1               	decf	(_ts_system+18)& (0+255),w,b	;volatile
 13313  0058F6  B0D8               	btfsc	status,0,c
 13314  0058F8  D010               	goto	l23269
 13315  0058FA                     u27370:
 13316                           
 13317                           ; BSR set to: 1
 13318  0058FA  0100               	movlb	0	; () banked
 13319  0058FC  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 13320  0058FE  A4D8               	btfss	status,2,c
 13321  005900  D00C               	goto	l23269
 13322                           
 13323                           ; BSR set to: 0
 13324  005902  0101               	movlb	1	; () banked
 13325  005904  0550               	decf	(_var_sys+80)& (0+255),w,b	;volatile
 13326  005906  A4D8               	btfss	status,2,c
 13327  005908  D008               	goto	l23269
 13328                           
 13329                           ; BSR set to: 1
 13330  00590A  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
 13331  00590C  B4D8               	btfsc	status,2,c
 13332  00590E  D005               	goto	l23269
 13333                           
 13334                           ; BSR set to: 1
 13335                           ;sm_ControlGate_MC50.c: 615:         var_sys.AutoCloseActive = 0;
 13336  005910  0E00               	movlw	0
 13337  005912  6F23               	movwf	(_var_sys+35)& (0+255),b	;volatile
 13338                           
 13339                           ;sm_ControlGate_MC50.c: 617:         var_sys.passoAPassoAutoClose = NO;
 13340  005914  0E00               	movlw	0
 13341  005916  6F50               	movwf	(_var_sys+80)& (0+255),b	;volatile
 13342  005918  D780               	goto	u27180
 13343  00591A                     l23269:
 13344  00591A  0101               	movlb	1	; () banked
 13345  00591C  BFB2               	btfsc	(_ts_system+19)& (0+255),7,b	;volatile
 13346  00591E  D005               	goto	u27410
 13347  005920  51B2               	movf	(_ts_system+19)& (0+255),w,b	;volatile
 13348  005922  E119               	bnz	l23287
 13349  005924  05B1               	decf	(_ts_system+18)& (0+255),w,b	;volatile
 13350  005926  B0D8               	btfsc	status,0,c
 13351  005928  D016               	goto	l23287
 13352  00592A                     u27410:
 13353                           
 13354                           ; BSR set to: 1
 13355  00592A  0100               	movlb	0	; () banked
 13356  00592C  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 13357  00592E  B4D8               	btfsc	status,2,c
 13358  005930  D012               	goto	l23287
 13359                           
 13360                           ; BSR set to: 0
 13361  005932  0101               	movlb	1	; () banked
 13362  005934  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
 13363  005936  B4D8               	btfsc	status,2,c
 13364  005938  D00E               	goto	l23287
 13365                           
 13366                           ; BSR set to: 1
 13367                           ;sm_ControlGate_MC50.c: 621:         var_sys.AutoCloseActive = 0;
 13368  00593A  0E00               	movlw	0
 13369  00593C  6F23               	movwf	(_var_sys+35)& (0+255),b	;volatile
 13370                           
 13371                           ; BSR set to: 1
 13372                           ;sm_ControlGate_MC50.c: 627:         if ( var_sys.AutoInversionActive == YES )
 13373  00593E  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 13374  005940  A4D8               	btfss	status,2,c
 13375  005942  D003               	goto	l23283
 13376                           
 13377                           ; BSR set to: 1
 13378                           ;sm_ControlGate_MC50.c: 628:         {;sm_ControlGate_MC50.c: 629:             var_sys.A
      +                          utoInversionActive = NO;
 13379  005944  0E00               	movlw	0
 13380  005946  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 13381  005948  D77A               	goto	u27220
 13382  00594A                     l23283:
 13383                           
 13384                           ; BSR set to: 1
 13385                           ;sm_ControlGate_MC50.c: 633:         {;sm_ControlGate_MC50.c: 634:             CloseOrde
      +                          r();
 13386  00594A  ECD9  F04B         	call	_CloseOrder	;wreg free
 13387                           
 13388                           ;sm_ControlGate_MC50.c: 635:             var_sys.PositionIsLost = 0;
 13389  00594E  0E00               	movlw	0
 13390  005950  0101               	movlb	1	; () banked
 13391  005952  6F48               	movwf	(_var_sys+72)& (0+255),b	;volatile
 13392  005954  0012               	return	
 13393  005956                     l23287:
 13394  005956  0101               	movlb	1	; () banked
 13395  005958  0522               	decf	(_var_sys+34)& (0+255),w,b	;volatile
 13396  00595A  A4D8               	btfss	status,2,c
 13397  00595C  0012               	return	
 13398                           
 13399                           ; BSR set to: 1
 13400  00595E  5020               	movf	actionZone_Opened@securityClosing^0,w,c
 13401  005960  A4D8               	btfss	status,2,c
 13402  005962  0012               	return	
 13403                           
 13404                           ; BSR set to: 1
 13405                           ;sm_ControlGate_MC50.c: 638:     {;sm_ControlGate_MC50.c: 639:         if (ts_system.tim
      +                          eSinalizationDigit <= 1) {
 13406  005964  BFAC               	btfsc	(_ts_system+13)& (0+255),7,b	;volatile
 13407  005966  D006               	goto	u27470
 13408  005968  51AC               	movf	(_ts_system+13)& (0+255),w,b	;volatile
 13409  00596A  E103               	bnz	u27471
 13410  00596C  0E02               	movlw	2
 13411  00596E  5DAB               	subwf	(_ts_system+12)& (0+255),w,b	;volatile
 13412  005970  B0D8               	btfsc	status,0,c
 13413  005972                     u27471:
 13414  005972  0012               	return	
 13415  005974                     u27470:
 13416                           
 13417                           ; BSR set to: 1
 13418                           ;sm_ControlGate_MC50.c: 640:             var_sys.DigitSinalizedTemp = NO;
 13419  005974  0E00               	movlw	0
 13420  005976  6F22               	movwf	(_var_sys+34)& (0+255),b	;volatile
 13421  005978  0012               	return		;funcret
 13422  00597A                     __end_of_actionZone_Opened:
 13423                           	callstack 0
 13424                           
 13425 ;; *************** function _VerifyFollowMe *****************
 13426 ;; Defined at:
 13427 ;;		line 117 in file "sm_ControlGate_MC50.c"
 13428 ;; Parameters:    Size  Location     Type
 13429 ;;  securityClos    1    wreg     enum E10397
 13430 ;; Auto vars:     Size  Location     Type
 13431 ;;  securityClos    1   15[COMRAM] enum E10397
 13432 ;; Return value:  Size  Location     Type
 13433 ;;                  1    wreg      void 
 13434 ;; Registers used:
 13435 ;;		wreg, status,2, status,0
 13436 ;; Tracked objects:
 13437 ;;		On entry : 0/0
 13438 ;;		On exit  : 3E/0
 13439 ;;		Unchanged: 0/0
 13440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13442 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13444 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13445 ;;Total ram usage:        1 bytes
 13446 ;; Hardware stack levels used: 1
 13447 ;; Hardware stack levels required when called: 4
 13448 ;; This function calls:
 13449 ;;		Nothing
 13450 ;; This function is called by:
 13451 ;;		_actionZone_Opening
 13452 ;;		_actionZone_Opened
 13453 ;; This function uses a non-reentrant model
 13454 ;;
 13455                           
 13456                           	psect	text31
 13457  009870                     __ptext31:
 13458                           	callstack 0
 13459  009870                     _VerifyFollowMe:
 13460                           	callstack 24
 13461                           
 13462                           ;incstack = 0
 13463                           ;VerifyFollowMe@securityClose stored from wreg
 13464  009870  6E10               	movwf	VerifyFollowMe@securityClose^0,c
 13465                           
 13466                           ;sm_ControlGate_MC50.c: 120:     if (var_sys_NVM.folow_me != 0 && var_sys_NVM.photoCellI
      +                          nOpen == 0)
 13467  009872  0100               	movlb	0	; () banked
 13468  009874  51AD               	movf	(_var_sys_NVM+21)& (0+255),w,b	;volatile
 13469  009876  B4D8               	btfsc	status,2,c
 13470  009878  0012               	return	
 13471                           
 13472                           ; BSR set to: 0
 13473  00987A  51A0               	movf	(_var_sys_NVM+8)& (0+255),w,b	;volatile
 13474  00987C  A4D8               	btfss	status,2,c
 13475  00987E  0012               	return	
 13476                           
 13477                           ; BSR set to: 0
 13478                           ;sm_ControlGate_MC50.c: 121:     {;sm_ControlGate_MC50.c: 122:         if (securityClose
      +                           == YES && var_sys.StateFollowIsOn == NO) {
 13479  009880  0410               	decf	VerifyFollowMe@securityClose^0,w,c
 13480  009882  A4D8               	btfss	status,2,c
 13481  009884  0012               	return	
 13482                           
 13483                           ; BSR set to: 0
 13484  009886  0101               	movlb	1	; () banked
 13485  009888  513A               	movf	(_var_sys+58)& (0+255),w,b	;volatile
 13486  00988A  A4D8               	btfss	status,2,c
 13487  00988C  0012               	return	
 13488                           
 13489                           ; BSR set to: 1
 13490                           ;sm_ControlGate_MC50.c: 123:             var_sys.StateFollowIsOn = YES;
 13491  00988E  0E01               	movlw	1
 13492  009890  6F3A               	movwf	(_var_sys+58)& (0+255),b	;volatile
 13493  009892  0012               	return		;funcret
 13494  009894                     __end_of_VerifyFollowMe:
 13495                           	callstack 0
 13496                           
 13497 ;; *************** function _CloseOrder *****************
 13498 ;; Defined at:
 13499 ;;		line 63 in file "sm_ControlGate_MC50.c"
 13500 ;; Parameters:    Size  Location     Type
 13501 ;;		None
 13502 ;; Auto vars:     Size  Location     Type
 13503 ;;		None
 13504 ;; Return value:  Size  Location     Type
 13505 ;;                  1    wreg      void 
 13506 ;; Registers used:
 13507 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13508 ;; Tracked objects:
 13509 ;;		On entry : 3E/1
 13510 ;;		On exit  : 3E/0
 13511 ;;		Unchanged: 0/0
 13512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13516 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13517 ;;Total ram usage:        0 bytes
 13518 ;; Hardware stack levels used: 1
 13519 ;; Hardware stack levels required when called: 6
 13520 ;; This function calls:
 13521 ;;		_InitSoftStart
 13522 ;;		_sm_send_event
 13523 ;; This function is called by:
 13524 ;;		_actionZone_Opening
 13525 ;;		_actionZone_Opened
 13526 ;; This function uses a non-reentrant model
 13527 ;;
 13528                           
 13529                           	psect	text32
 13530  0097B2                     __ptext32:
 13531                           	callstack 0
 13532  0097B2                     _CloseOrder:
 13533                           	callstack 22
 13534                           
 13535                           ;sm_ControlGate_MC50.c: 65:     var_sys.StateMotor = InClose;
 13536                           
 13537                           ;incstack = 0
 13538  0097B2  0E03               	movlw	3
 13539  0097B4  0101               	movlb	1	; () banked
 13540  0097B6  6F00               	movwf	_var_sys& (0+255),b	;volatile
 13541                           
 13542                           ; BSR set to: 1
 13543                           ;sm_ControlGate_MC50.c: 66:     sm_send_event(&controlGate_stateMachine, ev_CloseGate);
 13544  0097B8  0EE7               	movlw	low _controlGate_stateMachine
 13545  0097BA  6E12               	movwf	sm_send_event@psm^0,c
 13546  0097BC  0E01               	movlw	high _controlGate_stateMachine
 13547  0097BE  6E13               	movwf	(sm_send_event@psm+1)^0,c
 13548  0097C0  0E00               	movlw	0
 13549  0097C2  6E15               	movwf	(sm_send_event@event+1)^0,c
 13550  0097C4  0E0E               	movlw	14
 13551  0097C6  6E14               	movwf	sm_send_event@event^0,c
 13552  0097C8  ECD5  F045         	call	_sm_send_event	;wreg free
 13553                           
 13554                           ;sm_ControlGate_MC50.c: 67:     var_sys.LastState = InClose;
 13555  0097CC  0E03               	movlw	3
 13556  0097CE  0101               	movlb	1	; () banked
 13557  0097D0  6F0B               	movwf	(_var_sys+11)& (0+255),b	;volatile
 13558                           
 13559                           ; BSR set to: 1
 13560                           ;sm_ControlGate_MC50.c: 68:     InitSoftStart();
 13561  0097D2  EC03  F046         	call	_InitSoftStart	;wreg free
 13562  0097D6  0012               	return		;funcret
 13563  0097D8                     __end_of_CloseOrder:
 13564                           	callstack 0
 13565                           
 13566 ;; *************** function _actionZone_Closing *****************
 13567 ;; Defined at:
 13568 ;;		line 649 in file "sm_ControlGate_MC50.c"
 13569 ;; Parameters:    Size  Location     Type
 13570 ;;		None
 13571 ;; Auto vars:     Size  Location     Type
 13572 ;;  typeOpenOrde    1   50[COMRAM] enum E10372
 13573 ;;  securityClos    1   49[COMRAM] enum E10397
 13574 ;; Return value:  Size  Location     Type
 13575 ;;                  1    wreg      void 
 13576 ;; Registers used:
 13577 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13578 ;; Tracked objects:
 13579 ;;		On entry : 3F/0
 13580 ;;		On exit  : 0/0
 13581 ;;		Unchanged: 0/0
 13582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13584 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13586 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13587 ;;Total ram usage:        2 bytes
 13588 ;; Hardware stack levels used: 1
 13589 ;; Hardware stack levels required when called: 7
 13590 ;; This function calls:
 13591 ;;		_GetOpenOrder
 13592 ;;		_GetSecurityStateInClosing
 13593 ;;		_InitFullAutoTime
 13594 ;;		_InitWalkAutoTime
 13595 ;;		_OpenFullOrder
 13596 ;;		_OpenWalkOrder
 13597 ;;		_SetSegmentValueIntermitent
 13598 ;;		_StopOrder
 13599 ;;		___lmul
 13600 ;;		_setPositionInvertionInClosing
 13601 ;;		_sm_send_event
 13602 ;; This function is called by:
 13603 ;;		_sm_execute_ControlGate
 13604 ;; This function uses a non-reentrant model
 13605 ;;
 13606                           
 13607                           	psect	text33
 13608  0049AC                     __ptext33:
 13609                           	callstack 0
 13610  0049AC                     _actionZone_Closing:
 13611                           	callstack 22
 13612                           
 13613                           ; BSR set to: 0
 13614                           ;sm_ControlGate_MC50.c: 651:     TypeCMD typeOpenOrder = GetOpenOrder();
 13615                           
 13616                           ;incstack = 0
 13617  0049AC  ECA6  F02D         	call	_GetOpenOrder	;wreg free
 13618  0049B0  6E33               	movwf	actionZone_Closing@typeOpenOrder^0,c
 13619                           
 13620                           ;sm_ControlGate_MC50.c: 653:     StateEnum securityClosing = GetSecurityStateInClosing()
      +                          ;
 13621  0049B2  ECED  F03D         	call	_GetSecurityStateInClosing	;wreg free
 13622  0049B6  6E32               	movwf	actionZone_Closing@securityClosing^0,c
 13623                           
 13624                           ;sm_ControlGate_MC50.c: 654:     Abertura_pedonal = 0;
 13625  0049B8  0E00               	movlw	0
 13626  0049BA  0101               	movlb	1	; () banked
 13627  0049BC  6F92               	movwf	_Abertura_pedonal& (0+255),b
 13628                           
 13629                           ; BSR set to: 1
 13630                           ;sm_ControlGate_MC50.c: 656:     InitFullAutoTime();
 13631  0049BE  ECE0  F04C         	call	_InitFullAutoTime	;wreg free
 13632                           
 13633                           ; BSR set to: 0
 13634                           ;sm_ControlGate_MC50.c: 658:     var_sys.passoAPassoAutoClose = NO;
 13635  0049C2  0E00               	movlw	0
 13636  0049C4  0101               	movlb	1	; () banked
 13637  0049C6  6F50               	movwf	(_var_sys+80)& (0+255),b	;volatile
 13638                           
 13639                           ; BSR set to: 1
 13640                           ;sm_ControlGate_MC50.c: 660:     if (var_sys.NumberOffErrors > 3) {
 13641  0049C8  0E03               	movlw	3
 13642  0049CA  6543               	cpfsgt	(_var_sys+67)& (0+255),b	;volatile
 13643  0049CC  D00D               	goto	l23311
 13644                           
 13645                           ; BSR set to: 1
 13646                           ;sm_ControlGate_MC50.c: 662:         var_sys.StateMotor = Stopped;
 13647  0049CE  0E00               	movlw	0
 13648  0049D0  6F00               	movwf	_var_sys& (0+255),b	;volatile
 13649  0049D2                     l23309:
 13650                           
 13651                           ; BSR set to: 1
 13652                           ;sm_ControlGate_MC50.c: 663:         sm_send_event(&controlGate_stateMachine, ev_ErrorGa
      +                          te);
 13653  0049D2  0EE7               	movlw	low _controlGate_stateMachine
 13654  0049D4  6E12               	movwf	sm_send_event@psm^0,c
 13655  0049D6  0E01               	movlw	high _controlGate_stateMachine
 13656  0049D8  6E13               	movwf	(sm_send_event@psm+1)^0,c
 13657  0049DA  0E00               	movlw	0
 13658  0049DC  6E15               	movwf	(sm_send_event@event+1)^0,c
 13659  0049DE  0E10               	movlw	16
 13660  0049E0  6E14               	movwf	sm_send_event@event^0,c
 13661  0049E2  ECD5  F045         	call	_sm_send_event	;wreg free
 13662                           
 13663                           ;sm_ControlGate_MC50.c: 664:     } else if ((var_sys.FimCurso_CloseIsEnabled == YES)||(v
      +                          ar_sys.TimeMaxMotorIsON<=0) && (var_sys.LearningIsEnabled==NO) && (var_sys.PositionIsLos
      +                          t==NO)) {
 13664  0049E6  0012               	return	
 13665  0049E8                     l23311:
 13666                           
 13667                           ; BSR set to: 1
 13668  0049E8  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
 13669  0049EA  B4D8               	btfsc	status,2,c
 13670  0049EC  D00C               	goto	u27520
 13671                           
 13672                           ; BSR set to: 1
 13673  0049EE  5118               	movf	(_var_sys+24)& (0+255),w,b	;volatile
 13674  0049F0  1119               	iorwf	(_var_sys+25)& (0+255),w,b	;volatile
 13675  0049F2  111A               	iorwf	(_var_sys+26)& (0+255),w,b	;volatile
 13676  0049F4  111B               	iorwf	(_var_sys+27)& (0+255),w,b	;volatile
 13677  0049F6  A4D8               	btfss	status,2,c
 13678  0049F8  D05F               	goto	l23343
 13679                           
 13680                           ; BSR set to: 1
 13681  0049FA  5126               	movf	(_var_sys+38)& (0+255),w,b	;volatile
 13682  0049FC  A4D8               	btfss	status,2,c
 13683  0049FE  D05C               	goto	l23343
 13684                           
 13685                           ; BSR set to: 1
 13686  004A00  5148               	movf	(_var_sys+72)& (0+255),w,b	;volatile
 13687  004A02  A4D8               	btfss	status,2,c
 13688  004A04  D059               	goto	l23343
 13689  004A06                     u27520:
 13690                           
 13691                           ; BSR set to: 1
 13692                           ;sm_ControlGate_MC50.c: 666:         if (var_sys_NVM.flashLightMode == 2) {
 13693  004A06  0E02               	movlw	2
 13694  004A08  0100               	movlb	0	; () banked
 13695  004A0A  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 13696  004A0C  A4D8               	btfss	status,2,c
 13697  004A0E  D018               	goto	l23323
 13698                           
 13699                           ; BSR set to: 0
 13700                           ;sm_ControlGate_MC50.c: 667:             ts_system.TimeOnFlashLigth = (long) ((long) var
      +                          _sys_NVM.ligthTime * ((1000/50)*60));
 13701  004A10  51AC               	movf	(_var_sys_NVM+20)& (0+255),w,b	;volatile
 13702  004A12  6E1D               	movwf	___lmul@multiplier^0,c
 13703  004A14  6A1E               	clrf	(___lmul@multiplier+1)^0,c
 13704  004A16  6A1F               	clrf	(___lmul@multiplier+2)^0,c
 13705  004A18  6A20               	clrf	(___lmul@multiplier+3)^0,c
 13706  004A1A  0EB0               	movlw	176
 13707  004A1C  6E21               	movwf	___lmul@multiplicand^0,c
 13708  004A1E  0E04               	movlw	4
 13709  004A20  6E22               	movwf	(___lmul@multiplicand+1)^0,c
 13710  004A22  0E00               	movlw	0
 13711  004A24  6E23               	movwf	(___lmul@multiplicand+2)^0,c
 13712  004A26  0E00               	movlw	0
 13713  004A28  6E24               	movwf	(___lmul@multiplicand+3)^0,c
 13714  004A2A  EC10  F047         	call	___lmul	;wreg free
 13715  004A2E  C01D  F1BF         	movff	?___lmul,_ts_system+32	;volatile
 13716  004A32  C01E  F1C0         	movff	?___lmul+1,_ts_system+33	;volatile
 13717  004A36  C01F  F1C1         	movff	?___lmul+2,_ts_system+34	;volatile
 13718  004A3A  C020  F1C2         	movff	?___lmul+3,_ts_system+35	;volatile
 13719                           
 13720                           ;sm_ControlGate_MC50.c: 668:         }
 13721  004A3E  D009               	goto	l2773
 13722  004A40                     l23323:
 13723                           
 13724                           ; BSR set to: 0
 13725                           ;sm_ControlGate_MC50.c: 670:             ts_system.TimeOnFlashLigth = 0;
 13726  004A40  0E00               	movlw	0
 13727  004A42  0101               	movlb	1	; () banked
 13728  004A44  6FBF               	movwf	(_ts_system+32)& (0+255),b	;volatile
 13729  004A46  0E00               	movlw	0
 13730  004A48  6FC0               	movwf	(_ts_system+33)& (0+255),b	;volatile
 13731  004A4A  0E00               	movlw	0
 13732  004A4C  6FC1               	movwf	(_ts_system+34)& (0+255),b	;volatile
 13733  004A4E  0E00               	movlw	0
 13734  004A50  6FC2               	movwf	(_ts_system+35)& (0+255),b	;volatile
 13735  004A52                     l2773:
 13736                           
 13737                           ;sm_ControlGate_MC50.c: 672:         var_sys.AutoInversionActiveStop = NO;
 13738  004A52  0E00               	movlw	0
 13739  004A54  0101               	movlb	1	; () banked
 13740  004A56  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 13741                           
 13742                           ;sm_ControlGate_MC50.c: 674:         var_sys.Statedoorcontrol = st_Closed;
 13743  004A58  0E01               	movlw	1
 13744  004A5A  6F1C               	movwf	(_var_sys+28)& (0+255),b	;volatile
 13745                           
 13746                           ; BSR set to: 1
 13747                           ;sm_ControlGate_MC50.c: 675:         var_sys.actualCounterMoves++;
 13748  004A5C  0E01               	movlw	1
 13749  004A5E  273C               	addwf	(_var_sys+60)& (0+255),f,b	;volatile
 13750  004A60  0E00               	movlw	0
 13751  004A62  233D               	addwfc	(_var_sys+61)& (0+255),f,b	;volatile
 13752  004A64  233E               	addwfc	(_var_sys+62)& (0+255),f,b	;volatile
 13753  004A66  233F               	addwfc	(_var_sys+63)& (0+255),f,b	;volatile
 13754                           
 13755                           ; BSR set to: 1
 13756                           ;sm_ControlGate_MC50.c: 676:         var_sys.Timewalkisactived = 0;
 13757  004A68  0E00               	movlw	0
 13758  004A6A  6F4A               	movwf	(_var_sys+74)& (0+255),b	;volatile
 13759                           
 13760                           ; BSR set to: 1
 13761                           ;sm_ControlGate_MC50.c: 677:         var_sys.PositionActual = 0;
 13762  004A6C  0E00               	movlw	0
 13763  004A6E  6F1E               	movwf	(_var_sys+30)& (0+255),b	;volatile
 13764  004A70  0E00               	movlw	0
 13765  004A72  6F1F               	movwf	(_var_sys+31)& (0+255),b	;volatile
 13766  004A74  0E00               	movlw	0
 13767  004A76  6F20               	movwf	(_var_sys+32)& (0+255),b	;volatile
 13768  004A78  0E00               	movlw	0
 13769  004A7A  6F21               	movwf	(_var_sys+33)& (0+255),b	;volatile
 13770                           
 13771                           ; BSR set to: 1
 13772                           ;sm_ControlGate_MC50.c: 679:         var_sys.PositionIsLost = NO;
 13773  004A7C  0E00               	movlw	0
 13774  004A7E  6F48               	movwf	(_var_sys+72)& (0+255),b	;volatile
 13775                           
 13776                           ; BSR set to: 1
 13777                           ;sm_ControlGate_MC50.c: 680:         var_sys.NumberOffErrors = 0;
 13778  004A80  0E00               	movlw	0
 13779  004A82  6F43               	movwf	(_var_sys+67)& (0+255),b	;volatile
 13780                           
 13781                           ; BSR set to: 1
 13782                           ;sm_ControlGate_MC50.c: 681:         var_sys.StateMotor = Stopped;
 13783  004A84  0E00               	movlw	0
 13784  004A86  6F00               	movwf	_var_sys& (0+255),b	;volatile
 13785                           
 13786                           ; BSR set to: 1
 13787                           ;sm_ControlGate_MC50.c: 683:         ts_system.timeSinalizationDigit = (1000/50) * 2;
 13788  004A88  0E00               	movlw	0
 13789  004A8A  6FAC               	movwf	(_ts_system+13)& (0+255),b	;volatile
 13790  004A8C  0E28               	movlw	40
 13791  004A8E  6FAB               	movwf	(_ts_system+12)& (0+255),b	;volatile
 13792                           
 13793                           ; BSR set to: 1
 13794                           ;sm_ControlGate_MC50.c: 684:         SetSegmentValueIntermitent(dF, dC, ( 200/50));
 13795  004A90  0E0C               	movlw	12
 13796  004A92  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 13797  004A94  0E00               	movlw	0
 13798  004A96  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 13799  004A98  0E04               	movlw	4
 13800  004A9A  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 13801  004A9C  0E0F               	movlw	15
 13802  004A9E  EC93  F04A         	call	_SetSegmentValueIntermitent
 13803                           
 13804                           ; BSR set to: 1
 13805                           ;sm_ControlGate_MC50.c: 687:          sm_send_event(&controlGate_stateMachine, ev_Closed
      +                          Gate);
 13806  004AA2  0EE7               	movlw	low _controlGate_stateMachine
 13807  004AA4  6E12               	movwf	sm_send_event@psm^0,c
 13808  004AA6  0E01               	movlw	high _controlGate_stateMachine
 13809  004AA8  6E13               	movwf	(sm_send_event@psm+1)^0,c
 13810  004AAA  0E00               	movlw	0
 13811  004AAC  6E15               	movwf	(sm_send_event@event+1)^0,c
 13812  004AAE  0E0F               	movlw	15
 13813  004AB0  6E14               	movwf	sm_send_event@event^0,c
 13814  004AB2  ECD5  F045         	call	_sm_send_event	;wreg free
 13815                           
 13816                           ;sm_ControlGate_MC50.c: 691:     }
 13817  004AB6  0012               	return	
 13818  004AB8                     l23343:
 13819                           
 13820                           ; BSR set to: 1
 13821  004AB8  0432               	decf	actionZone_Closing@securityClosing^0,w,c
 13822  004ABA  B4D8               	btfsc	status,2,c
 13823  004ABC  D011               	goto	u27570
 13824                           
 13825                           ; BSR set to: 1
 13826  004ABE  BFCA               	btfsc	(_ts_system+43)& (0+255),7,b	;volatile
 13827  004AC0  D021               	goto	l23363
 13828  004AC2  51CA               	movf	(_ts_system+43)& (0+255),w,b	;volatile
 13829  004AC4  E103               	bnz	u27550
 13830  004AC6  05C9               	decf	(_ts_system+42)& (0+255),w,b	;volatile
 13831  004AC8  A0D8               	btfss	status,0,c
 13832  004ACA  D01C               	goto	l23363
 13833  004ACC                     u27550:
 13834                           
 13835                           ; BSR set to: 1
 13836  004ACC  0541               	decf	(_var_sys+65)& (0+255),w,b	;volatile
 13837  004ACE  A4D8               	btfss	status,2,c
 13838  004AD0  D019               	goto	l23363
 13839                           
 13840                           ; BSR set to: 1
 13841  004AD2  BFD0               	btfsc	(_ts_system+49)& (0+255),7,b	;volatile
 13842  004AD4  D005               	goto	u27570
 13843  004AD6  51D0               	movf	(_ts_system+49)& (0+255),w,b	;volatile
 13844  004AD8  E115               	bnz	l23363
 13845  004ADA  05CF               	decf	(_ts_system+48)& (0+255),w,b	;volatile
 13846  004ADC  B0D8               	btfsc	status,0,c
 13847  004ADE  D012               	goto	l23363
 13848  004AE0                     u27570:
 13849                           
 13850                           ; BSR set to: 1
 13851  004AE0  5127               	movf	(_var_sys+39)& (0+255),w,b	;volatile
 13852  004AE2  A4D8               	btfss	status,2,c
 13853  004AE4  D00F               	goto	l23363
 13854                           
 13855                           ; BSR set to: 1
 13856                           ;sm_ControlGate_MC50.c: 694:          if (securityClosing != YES){
 13857  004AE6  0432               	decf	actionZone_Closing@securityClosing^0,w,c
 13858  004AE8  A4D8               	btfss	status,2,c
 13859                           
 13860                           ; BSR set to: 1
 13861                           ;sm_ControlGate_MC50.c: 695:             var_sys.NumberOffErrors++;
 13862  004AEA  2B43               	incf	(_var_sys+67)& (0+255),f,b	;volatile
 13863                           
 13864                           ; BSR set to: 1
 13865                           ;sm_ControlGate_MC50.c: 697:         var_sys.NumberOffErrors++;
 13866                           
 13867                           ;sm_ControlGate_MC50.c: 696:         }
 13868  004AEC  2B43               	incf	(_var_sys+67)& (0+255),f,b	;volatile
 13869                           
 13870                           ; BSR set to: 1
 13871                           ;sm_ControlGate_MC50.c: 698:         var_sys.AutoInversionActive = YES;
 13872  004AEE  0E01               	movlw	1
 13873  004AF0  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 13874                           
 13875                           ; BSR set to: 1
 13876                           ;sm_ControlGate_MC50.c: 699:         ts_system.TimeWaitToNextState = ( 500/50);
 13877  004AF2  0E00               	movlw	0
 13878  004AF4  6FC4               	movwf	(_ts_system+37)& (0+255),b	;volatile
 13879  004AF6  0E0A               	movlw	10
 13880  004AF8  6FC3               	movwf	(_ts_system+36)& (0+255),b	;volatile
 13881                           
 13882                           ; BSR set to: 1
 13883                           ;sm_ControlGate_MC50.c: 700:         ts_system.TimeStopElectricBrake = ((1000/50)+( 500/
      +                          50));
 13884  004AFA  0E00               	movlw	0
 13885  004AFC  6FE0               	movwf	(_ts_system+65)& (0+255),b	;volatile
 13886  004AFE  0E1E               	movlw	30
 13887  004B00  6FDF               	movwf	(_ts_system+64)& (0+255),b	;volatile
 13888                           
 13889                           ;sm_ControlGate_MC50.c: 702:     }
 13890  004B02  0012               	return	
 13891  004B04                     l23363:
 13892                           
 13893                           ; BSR set to: 1
 13894  004B04  BFCA               	btfsc	(_ts_system+43)& (0+255),7,b	;volatile
 13895  004B06  D02E               	goto	l23393
 13896  004B08  51CA               	movf	(_ts_system+43)& (0+255),w,b	;volatile
 13897  004B0A  E103               	bnz	u27600
 13898  004B0C  05C9               	decf	(_ts_system+42)& (0+255),w,b	;volatile
 13899  004B0E  A0D8               	btfss	status,0,c
 13900  004B10  D029               	goto	l23393
 13901  004B12                     u27600:
 13902                           
 13903                           ; BSR set to: 1
 13904  004B12  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 13905  004B14  A4D8               	btfss	status,2,c
 13906  004B16  D026               	goto	l23393
 13907                           
 13908                           ; BSR set to: 1
 13909                           ;sm_ControlGate_MC50.c: 704:         if (var_sys.InvertionCurrentOpening == YES) {
 13910  004B18  0545               	decf	(_var_sys+69)& (0+255),w,b	;volatile
 13911  004B1A  A4D8               	btfss	status,2,c
 13912  004B1C  D005               	goto	l23375
 13913  004B1E                     u27620:
 13914                           
 13915                           ; BSR set to: 1
 13916                           ;sm_ControlGate_MC50.c: 706:             var_sys.StateMotor = Stopped;
 13917  004B1E  0E00               	movlw	0
 13918  004B20  6F00               	movwf	_var_sys& (0+255),b	;volatile
 13919                           
 13920                           ; BSR set to: 1
 13921                           ;sm_ControlGate_MC50.c: 707:             setPositionInvertionInClosing();
 13922  004B22  ECA5  F036         	call	_setPositionInvertionInClosing	;wreg free
 13923  004B26  D755               	goto	l23309
 13924  004B28                     l23375:
 13925                           
 13926                           ; BSR set to: 1
 13927  004B28  BFC4               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 13928  004B2A  D005               	goto	u27630
 13929  004B2C  51C4               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 13930  004B2E  E117               	bnz	l23391
 13931  004B30  05C3               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 13932  004B32  B0D8               	btfsc	status,0,c
 13933  004B34  D014               	goto	l23391
 13934  004B36                     u27630:
 13935                           
 13936                           ; BSR set to: 1
 13937                           ;sm_ControlGate_MC50.c: 710:          if(var_sys.Timewalkisactived == YES){
 13938  004B36  054A               	decf	(_var_sys+74)& (0+255),w,b	;volatile
 13939  004B38  A4D8               	btfss	status,2,c
 13940  004B3A  D003               	goto	l23381
 13941                           
 13942                           ; BSR set to: 1
 13943                           ;sm_ControlGate_MC50.c: 711:                 OpenWalkOrder();
 13944  004B3C  EC6A  F044         	call	_OpenWalkOrder	;wreg free
 13945                           
 13946                           ;sm_ControlGate_MC50.c: 713:             }
 13947  004B40  D004               	goto	l23385
 13948  004B42                     l23381:
 13949                           
 13950                           ; BSR set to: 1
 13951                           ;sm_ControlGate_MC50.c: 716:             OpenFullOrder();
 13952  004B42  ECEC  F04B         	call	_OpenFullOrder	;wreg free
 13953                           
 13954                           ;sm_ControlGate_MC50.c: 718:             setPositionInvertionInClosing();
 13955  004B46  ECA5  F036         	call	_setPositionInvertionInClosing	;wreg free
 13956  004B4A                     l23385:
 13957                           
 13958                           ;sm_ControlGate_MC50.c: 720:             var_sys.AutoInversionActive = NO;
 13959  004B4A  0E00               	movlw	0
 13960  004B4C  0101               	movlb	1	; () banked
 13961  004B4E  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 13962                           
 13963                           ; BSR set to: 1
 13964                           ;sm_ControlGate_MC50.c: 721:             var_sys.InvertionCurrentClosing = YES;
 13965  004B50  0E01               	movlw	1
 13966  004B52  6F44               	movwf	(_var_sys+68)& (0+255),b	;volatile
 13967                           
 13968                           ; BSR set to: 1
 13969                           ;sm_ControlGate_MC50.c: 722:             ts_system.TimeInversionStart = (1000/50);
 13970  004B54  0E00               	movlw	0
 13971  004B56  6FD0               	movwf	(_ts_system+49)& (0+255),b	;volatile
 13972  004B58  0E14               	movlw	20
 13973  004B5A  6FCF               	movwf	(_ts_system+48)& (0+255),b	;volatile
 13974                           
 13975                           ;sm_ControlGate_MC50.c: 726:         } else
 13976  004B5C  0012               	return	
 13977  004B5E                     l23391:
 13978                           
 13979                           ; BSR set to: 1
 13980                           ;sm_ControlGate_MC50.c: 727:         {;sm_ControlGate_MC50.c: 728:             var_sys.S
      +                          tateMotor = Stopped;
 13981  004B5E  0E00               	movlw	0
 13982  004B60  6F00               	movwf	_var_sys& (0+255),b	;volatile
 13983  004B62  0012               	return	
 13984  004B64                     l23393:
 13985                           
 13986                           ; BSR set to: 1
 13987  004B64  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 13988  004B66  A4D8               	btfss	status,2,c
 13989  004B68  D017               	goto	l23409
 13990                           
 13991                           ; BSR set to: 1
 13992                           ;sm_ControlGate_MC50.c: 732:                 var_sys.StateMotor = Stopped;
 13993  004B6A  0E00               	movlw	0
 13994  004B6C  6F00               	movwf	_var_sys& (0+255),b	;volatile
 13995                           
 13996                           ; BSR set to: 1
 13997                           ;sm_ControlGate_MC50.c: 737:         if (ts_system.TimeWaitToNextState <= 0) {
 13998  004B6E  BFC4               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 13999  004B70  D005               	goto	u27660
 14000  004B72  51C4               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 14001  004B74  E160               	bnz	l2810
 14002  004B76  05C3               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 14003  004B78  B0D8               	btfsc	status,0,c
 14004  004B7A  0012               	return	
 14005  004B7C                     u27660:
 14006                           
 14007                           ; BSR set to: 1
 14008                           ;sm_ControlGate_MC50.c: 738:             if(var_sys.Timewalkisactived == YES){
 14009  004B7C  054A               	decf	(_var_sys+74)& (0+255),w,b	;volatile
 14010  004B7E  A4D8               	btfss	status,2,c
 14011  004B80  D003               	goto	l23403
 14012                           
 14013                           ; BSR set to: 1
 14014                           ;sm_ControlGate_MC50.c: 739:                 OpenWalkOrder();
 14015  004B82  EC6A  F044         	call	_OpenWalkOrder	;wreg free
 14016                           
 14017                           ;sm_ControlGate_MC50.c: 741:             }
 14018  004B86  D004               	goto	l23407
 14019  004B88                     l23403:
 14020                           
 14021                           ; BSR set to: 1
 14022                           ;sm_ControlGate_MC50.c: 744:                  OpenFullOrder();
 14023  004B88  ECEC  F04B         	call	_OpenFullOrder	;wreg free
 14024                           
 14025                           ;sm_ControlGate_MC50.c: 746:             setPositionInvertionInClosing();
 14026  004B8C  ECA5  F036         	call	_setPositionInvertionInClosing	;wreg free
 14027  004B90                     l23407:
 14028                           
 14029                           ;sm_ControlGate_MC50.c: 748:             var_sys.AutoInversionActive = NO;
 14030  004B90  0E00               	movlw	0
 14031  004B92  0101               	movlb	1	; () banked
 14032  004B94  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 14033  004B96  0012               	return	
 14034  004B98                     l23409:
 14035                           
 14036                           ; BSR set to: 1
 14037  004B98  5100               	movf	_var_sys& (0+255),w,b	;volatile
 14038  004B9A  A4D8               	btfss	status,2,c
 14039  004B9C  D00B               	goto	l23425
 14040                           
 14041                           ; BSR set to: 1
 14042                           ;sm_ControlGate_MC50.c: 755:         if(securityClosing != ST){
 14043  004B9E  0E02               	movlw	2
 14044  004BA0  1832               	xorwf	actionZone_Closing@securityClosing^0,w,c
 14045  004BA2  B4D8               	btfsc	status,2,c
 14046  004BA4  D002               	goto	l23421
 14047                           
 14048                           ; BSR set to: 1
 14049                           ;sm_ControlGate_MC50.c: 756:            var_sys.NumberOffErrors++;
 14050  004BA6  2B43               	incf	(_var_sys+67)& (0+255),f,b	;volatile
 14051  004BA8  D7BA               	goto	u27620
 14052  004BAA                     l23421:
 14053                           
 14054                           ; BSR set to: 1
 14055                           ;sm_ControlGate_MC50.c: 761:         {;sm_ControlGate_MC50.c: 762:             setPositi
      +                          onInvertionInClosing();
 14056  004BAA  ECA5  F036         	call	_setPositionInvertionInClosing	;wreg free
 14057  004BAE                     l23423:
 14058                           
 14059                           ;sm_ControlGate_MC50.c: 763:             StopOrder();
 14060  004BAE  EC8E  F04C         	call	_StopOrder	;wreg free
 14061  004BB2  0012               	return	
 14062  004BB4                     l23425:
 14063                           
 14064                           ; BSR set to: 1
 14065  004BB4  BFD2               	btfsc	(_ts_system+51)& (0+255),7,b	;volatile
 14066  004BB6  D005               	goto	u27700
 14067  004BB8  51D2               	movf	(_ts_system+51)& (0+255),w,b	;volatile
 14068  004BBA  E10B               	bnz	l23435
 14069  004BBC  05D1               	decf	(_ts_system+50)& (0+255),w,b	;volatile
 14070  004BBE  B0D8               	btfsc	status,0,c
 14071  004BC0  D008               	goto	l23435
 14072  004BC2                     u27700:
 14073                           
 14074                           ; BSR set to: 1
 14075  004BC2  0546               	decf	(_var_sys+70)& (0+255),w,b	;volatile
 14076  004BC4  A4D8               	btfss	status,2,c
 14077  004BC6  D005               	goto	l23435
 14078                           
 14079                           ; BSR set to: 1
 14080                           ;sm_ControlGate_MC50.c: 768:         setPositionInvertionInClosing();
 14081  004BC8  ECA5  F036         	call	_setPositionInvertionInClosing	;wreg free
 14082                           
 14083                           ; BSR set to: 1
 14084                           ;sm_ControlGate_MC50.c: 769:         var_sys.InvertionClosingFromOpen = NO;
 14085  004BCC  0E00               	movlw	0
 14086  004BCE  6F46               	movwf	(_var_sys+70)& (0+255),b	;volatile
 14087  004BD0  D7EE               	goto	l23423
 14088  004BD2                     l23435:
 14089                           
 14090                           ; BSR set to: 1
 14091  004BD2  0100               	movlb	0	; () banked
 14092  004BD4  05A8               	decf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 14093  004BD6  B4D8               	btfsc	status,2,c
 14094  004BD8  D004               	goto	u27730
 14095                           
 14096                           ; BSR set to: 0
 14097  004BDA  0E02               	movlw	2
 14098  004BDC  19A8               	xorwf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 14099  004BDE  A4D8               	btfss	status,2,c
 14100  004BE0  D005               	goto	l23443
 14101  004BE2                     u27730:
 14102                           
 14103                           ; BSR set to: 0
 14104                           ;sm_ControlGate_MC50.c: 773:         if (typeOpenOrder != TypeFullClose) {
 14105  004BE2  0E04               	movlw	4
 14106  004BE4  1833               	xorwf	actionZone_Closing@typeOpenOrder^0,w,c
 14107  004BE6  B4D8               	btfsc	status,2,c
 14108  004BE8  0012               	return	
 14109  004BEA  D7E1               	goto	l23423
 14110  004BEC                     l23443:
 14111                           
 14112                           ; BSR set to: 0
 14113  004BEC  5033               	movf	actionZone_Closing@typeOpenOrder^0,w,c
 14114  004BEE  B4D8               	btfsc	status,2,c
 14115  004BF0  0012               	return	
 14116                           
 14117                           ; BSR set to: 0
 14118                           ;sm_ControlGate_MC50.c: 788:         if ( var_sys_NVM.operationMode == ModoPassoPasso )
 14119  004BF2  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 14120  004BF4  A4D8               	btfss	status,2,c
 14121  004BF6  D013               	goto	l23459
 14122                           
 14123                           ; BSR set to: 0
 14124                           ;sm_ControlGate_MC50.c: 789:         {;sm_ControlGate_MC50.c: 790:             setPositi
      +                          onInvertionInClosing();
 14125  004BF8  ECA5  F036         	call	_setPositionInvertionInClosing	;wreg free
 14126                           
 14127                           ; BSR set to: 1
 14128                           ;sm_ControlGate_MC50.c: 791:             StopOrder();
 14129  004BFC  EC8E  F04C         	call	_StopOrder	;wreg free
 14130                           
 14131                           ;sm_ControlGate_MC50.c: 793:             if (typeOpenOrder == TypeWalk && var_sys_NVM.op
      +                          erationMode != ModoCondominio)
 14132  004C00  0E02               	movlw	2
 14133  004C02  1833               	xorwf	actionZone_Closing@typeOpenOrder^0,w,c
 14134  004C04  A4D8               	btfss	status,2,c
 14135  004C06  0012               	return	
 14136  004C08  0E02               	movlw	2
 14137  004C0A  0100               	movlb	0	; () banked
 14138  004C0C  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 14139  004C0E  B4D8               	btfsc	status,2,c
 14140  004C10  0012               	return	
 14141                           
 14142                           ; BSR set to: 0
 14143                           ;sm_ControlGate_MC50.c: 794:             {;sm_ControlGate_MC50.c: 795:                 I
      +                          nitWalkAutoTime();
 14144  004C12  EC64  F04D         	call	_InitWalkAutoTime	;wreg free
 14145                           
 14146                           ; BSR set to: 0
 14147                           ;sm_ControlGate_MC50.c: 796:                 var_sys.showAP = YES;
 14148  004C16  0E01               	movlw	1
 14149  004C18  0101               	movlb	1	; () banked
 14150  004C1A  6F4F               	movwf	(_var_sys+79)& (0+255),b	;volatile
 14151  004C1C  0012               	return	
 14152  004C1E                     l23459:
 14153                           
 14154                           ; BSR set to: 0
 14155                           ;sm_ControlGate_MC50.c: 801:         {;sm_ControlGate_MC50.c: 802:             if (typeO
      +                          penOrder != TypeFullClose){
 14156  004C1E  0E04               	movlw	4
 14157  004C20  1833               	xorwf	actionZone_Closing@typeOpenOrder^0,w,c
 14158  004C22  B4D8               	btfsc	status,2,c
 14159  004C24  D7C4               	goto	l23423
 14160                           
 14161                           ; BSR set to: 0
 14162                           ;sm_ControlGate_MC50.c: 803:                 var_sys.AutoInversionActive = YES;
 14163  004C26  0E01               	movlw	1
 14164  004C28  0101               	movlb	1	; () banked
 14165  004C2A  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 14166                           
 14167                           ;sm_ControlGate_MC50.c: 804:                 ts_system.TimeWaitToNextState = ( 500/50);
 14168  004C2C  0E00               	movlw	0
 14169  004C2E  6FC4               	movwf	(_ts_system+37)& (0+255),b	;volatile
 14170  004C30  0E0A               	movlw	10
 14171  004C32  6FC3               	movwf	(_ts_system+36)& (0+255),b	;volatile
 14172                           
 14173                           ;sm_ControlGate_MC50.c: 806:             }
 14174  004C34  0012               	return	
 14175  004C36                     l2810:
 14176  004C36  0012               	return		;funcret
 14177  004C38                     __end_of_actionZone_Closing:
 14178                           	callstack 0
 14179                           
 14180 ;; *************** function _setPositionInvertionInClosing *****************
 14181 ;; Defined at:
 14182 ;;		line 867 in file "sm_ControlGate_MC50.c"
 14183 ;; Parameters:    Size  Location     Type
 14184 ;;		None
 14185 ;; Auto vars:     Size  Location     Type
 14186 ;;		None
 14187 ;; Return value:  Size  Location     Type
 14188 ;;                  1    wreg      void 
 14189 ;; Registers used:
 14190 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14191 ;; Tracked objects:
 14192 ;;		On entry : 3E/1
 14193 ;;		On exit  : 3F/1
 14194 ;;		Unchanged: 0/0
 14195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14196 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14197 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14198 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14199 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14200 ;;Total ram usage:       12 bytes
 14201 ;; Hardware stack levels used: 1
 14202 ;; Hardware stack levels required when called: 6
 14203 ;; This function calls:
 14204 ;;		_getTimeDecelaration
 14205 ;; This function is called by:
 14206 ;;		_actionZone_Opening
 14207 ;;		_actionZone_Closing
 14208 ;; This function uses a non-reentrant model
 14209 ;;
 14210                           
 14211                           	psect	text34
 14212  006D4A                     __ptext34:
 14213                           	callstack 0
 14214  006D4A                     _setPositionInvertionInClosing:
 14215                           	callstack 22
 14216                           
 14217                           ;sm_ControlGate_MC50.c: 872:     if(var_sys_NVM.TypeofMotor != 2){
 14218                           
 14219                           ;incstack = 0
 14220  006D4A  0E02               	movlw	2
 14221  006D4C  0100               	movlb	0	; () banked
 14222  006D4E  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 14223  006D50  B4D8               	btfsc	status,2,c
 14224  006D52  D007               	goto	l21741
 14225                           
 14226                           ; BSR set to: 0
 14227                           ;sm_ControlGate_MC50.c: 874:        var_sys.PositionActual += ( 100/50);
 14228  006D54  0E02               	movlw	2
 14229  006D56  0101               	movlb	1	; () banked
 14230  006D58  271E               	addwf	(_var_sys+30)& (0+255),f,b	;volatile
 14231  006D5A  0E00               	movlw	0
 14232  006D5C  231F               	addwfc	(_var_sys+31)& (0+255),f,b	;volatile
 14233  006D5E  2320               	addwfc	(_var_sys+32)& (0+255),f,b	;volatile
 14234  006D60  D008               	goto	L74
 14235  006D62                     l21741:
 14236                           
 14237                           ; BSR set to: 0
 14238                           ;sm_ControlGate_MC50.c: 878:     {;sm_ControlGate_MC50.c: 879:        var_sys.PositionAc
      +                          tual -= ( 50/50);
 14239  006D62  0EFF               	movlw	255
 14240  006D64  0101               	movlb	1	; () banked
 14241  006D66  271E               	addwf	(_var_sys+30)& (0+255),f,b	;volatile
 14242  006D68  0EFF               	movlw	255
 14243  006D6A  231F               	addwfc	(_var_sys+31)& (0+255),f,b	;volatile
 14244  006D6C  0EFF               	movlw	255
 14245  006D6E  2320               	addwfc	(_var_sys+32)& (0+255),f,b	;volatile
 14246  006D70  0EFF               	movlw	255
 14247  006D72                     L74:
 14248  006D72  2321               	addwfc	(_var_sys+33)& (0+255),f,b	;volatile
 14249                           
 14250                           ; BSR set to: 1
 14251                           ;sm_ControlGate_MC50.c: 882:     if (var_sys.PositionActual > getTimeDecelaration(InOpen
      +                          Full)&& var_sys_NVM.TypeofMotor != 2) {
 14252  006D74  0E01               	movlw	1
 14253  006D76  ECD8  F03A         	call	_getTimeDecelaration
 14254  006D7A  0101               	movlb	1	; () banked
 14255  006D7C  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 14256  006D7E  5C29               	subwf	?_getTimeDecelaration^0,w,c
 14257  006D80  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 14258  006D82  582A               	subwfb	(?_getTimeDecelaration+1)^0,w,c
 14259  006D84  5120               	movf	(_var_sys+32)& (0+255),w,b	;volatile
 14260  006D86  582B               	subwfb	(?_getTimeDecelaration+2)^0,w,c
 14261  006D88  502C               	movf	(?_getTimeDecelaration+3)^0,w,c
 14262  006D8A  0A80               	xorlw	128
 14263  006D8C  0100               	movlb	0	; () banked
 14264  006D8E  6FD8               	movwf	??_setPositionInvertionInClosing& (0+255),b
 14265  006D90  0101               	movlb	1	; () banked
 14266  006D92  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 14267  006D94  0A80               	xorlw	128
 14268  006D96  0100               	movlb	0	; () banked
 14269  006D98  59D8               	subwfb	??_setPositionInvertionInClosing& (0+255),w,b
 14270  006D9A  B0D8               	btfsc	status,0,c
 14271  006D9C  D008               	goto	l21749
 14272                           
 14273                           ; BSR set to: 0
 14274  006D9E  0E02               	movlw	2
 14275  006DA0  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 14276  006DA2  B4D8               	btfsc	status,2,c
 14277  006DA4  D004               	goto	l21749
 14278                           
 14279                           ; BSR set to: 0
 14280                           ;sm_ControlGate_MC50.c: 883:         var_sys.PositionActual = getTimeDecelaration(InOpen
      +                          Full);
 14281  006DA6  0E01               	movlw	1
 14282  006DA8  ECD8  F03A         	call	_getTimeDecelaration
 14283  006DAC  D01A               	goto	L75
 14284  006DAE                     l21749:
 14285                           
 14286                           ; BSR set to: 0
 14287  006DAE  0E03               	movlw	3
 14288  006DB0  ECD8  F03A         	call	_getTimeDecelaration
 14289  006DB4  5029               	movf	?_getTimeDecelaration^0,w,c
 14290  006DB6  0101               	movlb	1	; () banked
 14291  006DB8  5D1E               	subwf	(_var_sys+30)& (0+255),w,b	;volatile
 14292  006DBA  502A               	movf	(?_getTimeDecelaration+1)^0,w,c
 14293  006DBC  591F               	subwfb	(_var_sys+31)& (0+255),w,b	;volatile
 14294  006DBE  502B               	movf	(?_getTimeDecelaration+2)^0,w,c
 14295  006DC0  5920               	subwfb	(_var_sys+32)& (0+255),w,b	;volatile
 14296  006DC2  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 14297  006DC4  0A80               	xorlw	128
 14298  006DC6  0100               	movlb	0	; () banked
 14299  006DC8  6FD8               	movwf	??_setPositionInvertionInClosing& (0+255),b
 14300  006DCA  502C               	movf	(?_getTimeDecelaration+3)^0,w,c
 14301  006DCC  0A80               	xorlw	128
 14302  006DCE  59D8               	subwfb	??_setPositionInvertionInClosing& (0+255),w,b
 14303  006DD0  B0D8               	btfsc	status,0,c
 14304  006DD2  D00F               	goto	l21755
 14305                           
 14306                           ; BSR set to: 0
 14307  006DD4  0E02               	movlw	2
 14308  006DD6  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 14309  006DD8  B4D8               	btfsc	status,2,c
 14310  006DDA  D00B               	goto	l21755
 14311                           
 14312                           ; BSR set to: 0
 14313                           ;sm_ControlGate_MC50.c: 887:         var_sys.PositionActual = getTimeDecelaration(InClos
      +                          e);
 14314  006DDC  0E03               	movlw	3
 14315  006DDE  ECD8  F03A         	call	_getTimeDecelaration
 14316  006DE2                     L75:
 14317  006DE2  C029  F11E         	movff	?_getTimeDecelaration,_var_sys+30	;volatile
 14318  006DE6  C02A  F11F         	movff	?_getTimeDecelaration+1,_var_sys+31	;volatile
 14319  006DEA  C02B  F120         	movff	?_getTimeDecelaration+2,_var_sys+32	;volatile
 14320  006DEE  C02C  F121         	movff	?_getTimeDecelaration+3,_var_sys+33	;volatile
 14321  006DF2                     l21755:
 14322                           
 14323                           ;sm_ControlGate_MC50.c: 890:     var_sys.TimeMaxMotorIsON = ((signed long)var_sys_NVM.le
      +                          arningTimeToOpen - var_sys.PositionActual) + (var_sys_NVM.decelarationOpen*( 500/50))+ (
      +                          1000/50)*10;
 14324  006DF2  0100               	movlb	0	; () banked
 14325  006DF4  5198               	movf	_var_sys_NVM& (0+255),w,b	;volatile
 14326  006DF6  0D0A               	mullw	10
 14327  006DF8  CFF3 F0D8          	movff	prodl,??_setPositionInvertionInClosing
 14328  006DFC  CFF4 F0D9          	movff	prodh,??_setPositionInvertionInClosing+1
 14329  006E00  0E00               	movlw	0
 14330  006E02  BFD9               	btfsc	(??_setPositionInvertionInClosing+1)& (0+255),7,b
 14331  006E04  0EFF               	movlw	255
 14332  006E06  6FDA               	movwf	(??_setPositionInvertionInClosing+2)& (0+255),b
 14333  006E08  6FDB               	movwf	(??_setPositionInvertionInClosing+3)& (0+255),b
 14334  006E0A  0101               	movlb	1	; () banked
 14335  006E0C  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 14336  006E0E  0100               	movlb	0	; () banked
 14337  006E10  5DD8               	subwf	??_setPositionInvertionInClosing& (0+255),w,b
 14338  006E12  6FDC               	movwf	(??_setPositionInvertionInClosing+4)& (0+255),b
 14339  006E14  0101               	movlb	1	; () banked
 14340  006E16  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 14341  006E18  0100               	movlb	0	; () banked
 14342  006E1A  59D9               	subwfb	(??_setPositionInvertionInClosing+1)& (0+255),w,b
 14343  006E1C  6FDD               	movwf	(??_setPositionInvertionInClosing+5)& (0+255),b
 14344  006E1E  0101               	movlb	1	; () banked
 14345  006E20  5120               	movf	(_var_sys+32)& (0+255),w,b	;volatile
 14346  006E22  0100               	movlb	0	; () banked
 14347  006E24  59DA               	subwfb	(??_setPositionInvertionInClosing+2)& (0+255),w,b
 14348  006E26  6FDE               	movwf	(??_setPositionInvertionInClosing+6)& (0+255),b
 14349  006E28  0101               	movlb	1	; () banked
 14350  006E2A  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 14351  006E2C  0100               	movlb	0	; () banked
 14352  006E2E  59DB               	subwfb	(??_setPositionInvertionInClosing+3)& (0+255),w,b
 14353  006E30  6FDF               	movwf	(??_setPositionInvertionInClosing+7)& (0+255),b
 14354  006E32  51CC               	movf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 14355  006E34  25DC               	addwf	(??_setPositionInvertionInClosing+4)& (0+255),w,b
 14356  006E36  6FE0               	movwf	(??_setPositionInvertionInClosing+8)& (0+255),b
 14357  006E38  51CD               	movf	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 14358  006E3A  21DD               	addwfc	(??_setPositionInvertionInClosing+5)& (0+255),w,b
 14359  006E3C  6FE1               	movwf	(??_setPositionInvertionInClosing+9)& (0+255),b
 14360  006E3E  51CE               	movf	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 14361  006E40  21DE               	addwfc	(??_setPositionInvertionInClosing+6)& (0+255),w,b
 14362  006E42  6FE2               	movwf	(??_setPositionInvertionInClosing+10)& (0+255),b
 14363  006E44  51CF               	movf	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 14364  006E46  21DF               	addwfc	(??_setPositionInvertionInClosing+7)& (0+255),w,b
 14365  006E48  6FE3               	movwf	(??_setPositionInvertionInClosing+11)& (0+255),b
 14366  006E4A  0EC8               	movlw	200
 14367  006E4C  25E0               	addwf	(??_setPositionInvertionInClosing+8)& (0+255),w,b
 14368  006E4E  0101               	movlb	1	; () banked
 14369  006E50  6F18               	movwf	(_var_sys+24)& (0+255),b	;volatile
 14370  006E52  0E00               	movlw	0
 14371  006E54  0100               	movlb	0	; () banked
 14372  006E56  21E1               	addwfc	(??_setPositionInvertionInClosing+9)& (0+255),w,b
 14373  006E58  0101               	movlb	1	; () banked
 14374  006E5A  6F19               	movwf	(_var_sys+25)& (0+255),b	;volatile
 14375  006E5C  0E00               	movlw	0
 14376  006E5E  0100               	movlb	0	; () banked
 14377  006E60  21E2               	addwfc	(??_setPositionInvertionInClosing+10)& (0+255),w,b
 14378  006E62  0101               	movlb	1	; () banked
 14379  006E64  6F1A               	movwf	(_var_sys+26)& (0+255),b	;volatile
 14380  006E66  0E00               	movlw	0
 14381  006E68  0100               	movlb	0	; () banked
 14382  006E6A  21E3               	addwfc	(??_setPositionInvertionInClosing+11)& (0+255),w,b
 14383  006E6C  0101               	movlb	1	; () banked
 14384  006E6E  6F1B               	movwf	(_var_sys+27)& (0+255),b	;volatile
 14385                           
 14386                           ; BSR set to: 1
 14387  006E70  0012               	return		;funcret
 14388  006E72                     __end_of_setPositionInvertionInClosing:
 14389                           	callstack 0
 14390                           
 14391 ;; *************** function _getTimeDecelaration *****************
 14392 ;; Defined at:
 14393 ;;		line 641 in file "outputs_MC50.c"
 14394 ;; Parameters:    Size  Location     Type
 14395 ;;  state           1    wreg     enum E10381
 14396 ;; Auto vars:     Size  Location     Type
 14397 ;;  state           1   48[COMRAM] enum E10381
 14398 ;; Return value:  Size  Location     Type
 14399 ;;                  4   40[COMRAM] long 
 14400 ;; Registers used:
 14401 ;;		wreg, status,2, status,0, cstack
 14402 ;; Tracked objects:
 14403 ;;		On entry : 3E/1
 14404 ;;		On exit  : 0/0
 14405 ;;		Unchanged: 0/0
 14406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14407 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14408 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14409 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14410 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14411 ;;Total ram usage:        9 bytes
 14412 ;; Hardware stack levels used: 1
 14413 ;; Hardware stack levels required when called: 5
 14414 ;; This function calls:
 14415 ;;		___lmul
 14416 ;; This function is called by:
 14417 ;;		_getStateOpenPosition
 14418 ;;		_controlVelocity
 14419 ;;		_setPositionInvertionInClosing
 14420 ;;		_setPositionInvertionInOpening
 14421 ;; This function uses a non-reentrant model
 14422 ;;
 14423                           
 14424                           	psect	text35
 14425  0075B0                     __ptext35:
 14426                           	callstack 0
 14427  0075B0                     _getTimeDecelaration:
 14428                           	callstack 22
 14429                           
 14430                           ; BSR set to: 1
 14431                           ;incstack = 0
 14432                           ;getTimeDecelaration@state stored from wreg
 14433  0075B0  6E31               	movwf	getTimeDecelaration@state^0,c
 14434                           
 14435                           ;outputs_MC50.c: 641: signed long getTimeDecelaration(stateMotor_enum state);outputs_MC5
      +                          0.c: 642: {;outputs_MC50.c: 644:     if(state==InClose)
 14436  0075B2  0E03               	movlw	3
 14437  0075B4  1831               	xorwf	getTimeDecelaration@state^0,w,c
 14438  0075B6  A4D8               	btfss	status,2,c
 14439  0075B8  D033               	goto	l20543
 14440                           
 14441                           ;outputs_MC50.c: 645:     {;outputs_MC50.c: 646:         if (var_sys_NVM.TypeofMotor != 
      +                          2)
 14442  0075BA  0E02               	movlw	2
 14443  0075BC  0100               	movlb	0	; () banked
 14444  0075BE  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 14445  0075C0  B4D8               	btfsc	status,2,c
 14446  0075C2  D018               	goto	l20539
 14447                           
 14448                           ; BSR set to: 0
 14449                           ;outputs_MC50.c: 647:         {return (signed long)((signed long)var_sys_NVM.decelaratio
      +                          nClose*( 500/50));}
 14450  0075C4  5199               	movf	(_var_sys_NVM+1)& (0+255),w,b	;volatile
 14451  0075C6  6E1D               	movwf	___lmul@multiplier^0,c
 14452  0075C8  6A1E               	clrf	(___lmul@multiplier+1)^0,c
 14453  0075CA  6A1F               	clrf	(___lmul@multiplier+2)^0,c
 14454  0075CC  6A20               	clrf	(___lmul@multiplier+3)^0,c
 14455  0075CE  0E0A               	movlw	10
 14456  0075D0  6E21               	movwf	___lmul@multiplicand^0,c
 14457  0075D2  0E00               	movlw	0
 14458  0075D4  6E22               	movwf	(___lmul@multiplicand+1)^0,c
 14459  0075D6  0E00               	movlw	0
 14460  0075D8  6E23               	movwf	(___lmul@multiplicand+2)^0,c
 14461  0075DA  0E00               	movlw	0
 14462  0075DC  6E24               	movwf	(___lmul@multiplicand+3)^0,c
 14463  0075DE  EC10  F047         	call	___lmul	;wreg free
 14464  0075E2  C01D  F029         	movff	?___lmul,?_getTimeDecelaration
 14465  0075E6  C01E  F02A         	movff	?___lmul+1,?_getTimeDecelaration+1
 14466  0075EA  C01F  F02B         	movff	?___lmul+2,?_getTimeDecelaration+2
 14467  0075EE  C020  F02C         	movff	?___lmul+3,?_getTimeDecelaration+3
 14468  0075F2  0012               	return	
 14469  0075F4                     l20539:
 14470                           
 14471                           ; BSR set to: 0
 14472  0075F4  C099  F02D         	movff	_var_sys_NVM+1,??_getTimeDecelaration	;volatile
 14473  0075F8  6A2E               	clrf	(??_getTimeDecelaration+1)^0,c
 14474  0075FA  6A2F               	clrf	(??_getTimeDecelaration+2)^0,c
 14475  0075FC  6A30               	clrf	(??_getTimeDecelaration+3)^0,c
 14476  0075FE  0E02               	movlw	2
 14477  007600                     u23505:
 14478  007600  90D8               	bcf	status,0,c
 14479  007602  362D               	rlcf	??_getTimeDecelaration^0,f,c
 14480  007604  362E               	rlcf	(??_getTimeDecelaration+1)^0,f,c
 14481  007606  362F               	rlcf	(??_getTimeDecelaration+2)^0,f,c
 14482  007608  3630               	rlcf	(??_getTimeDecelaration+3)^0,f,c
 14483  00760A  2EE8               	decfsz	wreg,f,c
 14484  00760C  D7F9               	goto	u23505
 14485  00760E  C02D  F029         	movff	??_getTimeDecelaration,?_getTimeDecelaration
 14486  007612  C02E  F02A         	movff	??_getTimeDecelaration+1,?_getTimeDecelaration+1
 14487  007616  C02F  F02B         	movff	??_getTimeDecelaration+2,?_getTimeDecelaration+2
 14488  00761A  C030  F02C         	movff	??_getTimeDecelaration+3,?_getTimeDecelaration+3
 14489  00761E  0012               	return	
 14490  007620                     l20543:
 14491                           
 14492                           ;outputs_MC50.c: 651:     {;outputs_MC50.c: 652:         if (var_sys_NVM.TypeofMotor != 
      +                          2)
 14493  007620  0E02               	movlw	2
 14494  007622  0100               	movlb	0	; () banked
 14495  007624  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 14496  007626  B4D8               	btfsc	status,2,c
 14497  007628  D01D               	goto	l20551
 14498                           
 14499                           ; BSR set to: 0
 14500                           ;outputs_MC50.c: 653:         {return (signed long)((signed long)var_sys_NVM.learningTim
      +                          eToOpen-(((signed long)var_sys_NVM.decelarationOpen*( 500/50))));}
 14501  00762A  5198               	movf	_var_sys_NVM& (0+255),w,b	;volatile
 14502  00762C  6E1D               	movwf	___lmul@multiplier^0,c
 14503  00762E  6A1E               	clrf	(___lmul@multiplier+1)^0,c
 14504  007630  6A1F               	clrf	(___lmul@multiplier+2)^0,c
 14505  007632  6A20               	clrf	(___lmul@multiplier+3)^0,c
 14506  007634  0EF6               	movlw	246
 14507  007636  6E21               	movwf	___lmul@multiplicand^0,c
 14508  007638  0EFF               	movlw	255
 14509  00763A  6E22               	movwf	(___lmul@multiplicand+1)^0,c
 14510  00763C  0EFF               	movlw	255
 14511  00763E  6E23               	movwf	(___lmul@multiplicand+2)^0,c
 14512  007640  0EFF               	movlw	255
 14513  007642  6E24               	movwf	(___lmul@multiplicand+3)^0,c
 14514  007644  EC10  F047         	call	___lmul	;wreg free
 14515  007648  0100               	movlb	0	; () banked
 14516  00764A  51CC               	movf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 14517  00764C  241D               	addwf	?___lmul^0,w,c
 14518  00764E  6E29               	movwf	?_getTimeDecelaration^0,c
 14519  007650  51CD               	movf	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 14520  007652  201E               	addwfc	(?___lmul+1)^0,w,c
 14521  007654  6E2A               	movwf	(?_getTimeDecelaration+1)^0,c
 14522  007656  51CE               	movf	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 14523  007658  201F               	addwfc	(?___lmul+2)^0,w,c
 14524  00765A  6E2B               	movwf	(?_getTimeDecelaration+2)^0,c
 14525  00765C  51CF               	movf	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 14526  00765E  2020               	addwfc	(?___lmul+3)^0,w,c
 14527  007660  6E2C               	movwf	(?_getTimeDecelaration+3)^0,c
 14528  007662  0012               	return	
 14529  007664                     l20551:
 14530                           
 14531                           ; BSR set to: 0
 14532  007664  C098  F02D         	movff	_var_sys_NVM,??_getTimeDecelaration	;volatile
 14533  007668  6A2E               	clrf	(??_getTimeDecelaration+1)^0,c
 14534  00766A  6A2F               	clrf	(??_getTimeDecelaration+2)^0,c
 14535  00766C  6A30               	clrf	(??_getTimeDecelaration+3)^0,c
 14536  00766E  0E02               	movlw	2
 14537  007670                     u23525:
 14538  007670  90D8               	bcf	status,0,c
 14539  007672  362D               	rlcf	??_getTimeDecelaration^0,f,c
 14540  007674  362E               	rlcf	(??_getTimeDecelaration+1)^0,f,c
 14541  007676  362F               	rlcf	(??_getTimeDecelaration+2)^0,f,c
 14542  007678  3630               	rlcf	(??_getTimeDecelaration+3)^0,f,c
 14543  00767A  2EE8               	decfsz	wreg,f,c
 14544  00767C  D7F9               	goto	u23525
 14545  00767E  502D               	movf	??_getTimeDecelaration^0,w,c
 14546  007680  5DCC               	subwf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 14547  007682  6E29               	movwf	?_getTimeDecelaration^0,c
 14548  007684  502E               	movf	(??_getTimeDecelaration+1)^0,w,c
 14549  007686  59CD               	subwfb	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 14550  007688  6E2A               	movwf	(?_getTimeDecelaration+1)^0,c
 14551  00768A  502F               	movf	(??_getTimeDecelaration+2)^0,w,c
 14552  00768C  59CE               	subwfb	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 14553  00768E  6E2B               	movwf	(?_getTimeDecelaration+2)^0,c
 14554  007690  5030               	movf	(??_getTimeDecelaration+3)^0,w,c
 14555  007692  59CF               	subwfb	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 14556  007694  6E2C               	movwf	(?_getTimeDecelaration+3)^0,c
 14557  007696  0012               	return		;funcret
 14558  007698                     __end_of_getTimeDecelaration:
 14559                           	callstack 0
 14560                           
 14561 ;; *************** function ___lmul *****************
 14562 ;; Defined at:
 14563 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul32.c"
 14564 ;; Parameters:    Size  Location     Type
 14565 ;;  multiplier      4   28[COMRAM] unsigned long 
 14566 ;;  multiplicand    4   32[COMRAM] unsigned long 
 14567 ;; Auto vars:     Size  Location     Type
 14568 ;;  product         4   36[COMRAM] unsigned long 
 14569 ;; Return value:  Size  Location     Type
 14570 ;;                  4   28[COMRAM] unsigned long 
 14571 ;; Registers used:
 14572 ;;		wreg, status,2, status,0
 14573 ;; Tracked objects:
 14574 ;;		On entry : 0/1
 14575 ;;		On exit  : 0/0
 14576 ;;		Unchanged: 0/0
 14577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14578 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14579 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14581 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14582 ;;Total ram usage:       12 bytes
 14583 ;; Hardware stack levels used: 1
 14584 ;; Hardware stack levels required when called: 4
 14585 ;; This function calls:
 14586 ;;		Nothing
 14587 ;; This function is called by:
 14588 ;;		_getStateOpenPosition
 14589 ;;		_getTimeDecelaration
 14590 ;;		_actionZone_Closing
 14591 ;;		_sm_execute_menuConfiguration
 14592 ;; This function uses a non-reentrant model
 14593 ;;
 14594                           
 14595                           	psect	text36
 14596  008E20                     __ptext36:
 14597                           	callstack 0
 14598  008E20                     ___lmul:
 14599                           	callstack 24
 14600                           
 14601                           ;incstack = 0
 14602  008E20  0E00               	movlw	0
 14603  008E22  6E25               	movwf	___lmul@product^0,c
 14604  008E24  0E00               	movlw	0
 14605  008E26  6E26               	movwf	(___lmul@product+1)^0,c
 14606  008E28  0E00               	movlw	0
 14607  008E2A  6E27               	movwf	(___lmul@product+2)^0,c
 14608  008E2C  0E00               	movlw	0
 14609  008E2E  6E28               	movwf	(___lmul@product+3)^0,c
 14610  008E30                     l20409:
 14611  008E30  A01D               	btfss	___lmul@multiplier^0,0,c
 14612  008E32  D008               	goto	l20413
 14613  008E34  5021               	movf	___lmul@multiplicand^0,w,c
 14614  008E36  2625               	addwf	___lmul@product^0,f,c
 14615  008E38  5022               	movf	(___lmul@multiplicand+1)^0,w,c
 14616  008E3A  2226               	addwfc	(___lmul@product+1)^0,f,c
 14617  008E3C  5023               	movf	(___lmul@multiplicand+2)^0,w,c
 14618  008E3E  2227               	addwfc	(___lmul@product+2)^0,f,c
 14619  008E40  5024               	movf	(___lmul@multiplicand+3)^0,w,c
 14620  008E42  2228               	addwfc	(___lmul@product+3)^0,f,c
 14621  008E44                     l20413:
 14622  008E44  90D8               	bcf	status,0,c
 14623  008E46  3621               	rlcf	___lmul@multiplicand^0,f,c
 14624  008E48  3622               	rlcf	(___lmul@multiplicand+1)^0,f,c
 14625  008E4A  3623               	rlcf	(___lmul@multiplicand+2)^0,f,c
 14626  008E4C  3624               	rlcf	(___lmul@multiplicand+3)^0,f,c
 14627  008E4E  90D8               	bcf	status,0,c
 14628  008E50  3220               	rrcf	(___lmul@multiplier+3)^0,f,c
 14629  008E52  321F               	rrcf	(___lmul@multiplier+2)^0,f,c
 14630  008E54  321E               	rrcf	(___lmul@multiplier+1)^0,f,c
 14631  008E56  321D               	rrcf	___lmul@multiplier^0,f,c
 14632  008E58  501D               	movf	___lmul@multiplier^0,w,c
 14633  008E5A  101E               	iorwf	(___lmul@multiplier+1)^0,w,c
 14634  008E5C  101F               	iorwf	(___lmul@multiplier+2)^0,w,c
 14635  008E5E  1020               	iorwf	(___lmul@multiplier+3)^0,w,c
 14636  008E60  A4D8               	btfss	status,2,c
 14637  008E62  D7E6               	goto	l20409
 14638  008E64  C025  F01D         	movff	___lmul@product,?___lmul
 14639  008E68  C026  F01E         	movff	___lmul@product+1,?___lmul+1
 14640  008E6C  C027  F01F         	movff	___lmul@product+2,?___lmul+2
 14641  008E70  C028  F020         	movff	___lmul@product+3,?___lmul+3
 14642  008E74  0012               	return		;funcret
 14643  008E76                     __end_of___lmul:
 14644                           	callstack 0
 14645                           
 14646 ;; *************** function _StopOrder *****************
 14647 ;; Defined at:
 14648 ;;		line 96 in file "sm_ControlGate_MC50.c"
 14649 ;; Parameters:    Size  Location     Type
 14650 ;;		None
 14651 ;; Auto vars:     Size  Location     Type
 14652 ;;		None
 14653 ;; Return value:  Size  Location     Type
 14654 ;;                  1    wreg      void 
 14655 ;; Registers used:
 14656 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14657 ;; Tracked objects:
 14658 ;;		On entry : 3E/1
 14659 ;;		On exit  : 0/0
 14660 ;;		Unchanged: 0/0
 14661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14665 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14666 ;;Total ram usage:        0 bytes
 14667 ;; Hardware stack levels used: 1
 14668 ;; Hardware stack levels required when called: 6
 14669 ;; This function calls:
 14670 ;;		_sm_send_event
 14671 ;; This function is called by:
 14672 ;;		_actionZone_Opening
 14673 ;;		_actionZone_Closing
 14674 ;; This function uses a non-reentrant model
 14675 ;;
 14676                           
 14677                           	psect	text37
 14678  00991C                     __ptext37:
 14679                           	callstack 0
 14680  00991C                     _StopOrder:
 14681                           	callstack 22
 14682                           
 14683                           ;sm_ControlGate_MC50.c: 99:    var_sys.StateMotor = Stopped;
 14684                           
 14685                           ;incstack = 0
 14686  00991C  0E00               	movlw	0
 14687  00991E  0101               	movlb	1	; () banked
 14688  009920  6F00               	movwf	_var_sys& (0+255),b	;volatile
 14689                           
 14690                           ; BSR set to: 1
 14691                           ;sm_ControlGate_MC50.c: 100:    sm_send_event(&controlGate_stateMachine, ev_StopGate);
 14692  009922  0EE7               	movlw	low _controlGate_stateMachine
 14693  009924  6E12               	movwf	sm_send_event@psm^0,c
 14694  009926  0E01               	movlw	high _controlGate_stateMachine
 14695  009928  6E13               	movwf	(sm_send_event@psm+1)^0,c
 14696  00992A  0E00               	movlw	0
 14697  00992C  6E15               	movwf	(sm_send_event@event+1)^0,c
 14698  00992E  0E0D               	movlw	13
 14699  009930  6E14               	movwf	sm_send_event@event^0,c
 14700  009932  ECD5  F045         	call	_sm_send_event	;wreg free
 14701  009936  0012               	return		;funcret
 14702  009938                     __end_of_StopOrder:
 14703                           	callstack 0
 14704                           
 14705 ;; *************** function _GetSecurityStateInClosing *****************
 14706 ;; Defined at:
 14707 ;;		line 776 in file "inputs_MC50.c"
 14708 ;; Parameters:    Size  Location     Type
 14709 ;;		None
 14710 ;; Auto vars:     Size  Location     Type
 14711 ;;		None
 14712 ;; Return value:  Size  Location     Type
 14713 ;;                  1    wreg      enum E10564
 14714 ;; Registers used:
 14715 ;;		wreg, status,2, status,0, cstack
 14716 ;; Tracked objects:
 14717 ;;		On entry : 0/0
 14718 ;;		On exit  : 3E/0
 14719 ;;		Unchanged: 0/0
 14720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14724 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14725 ;;Total ram usage:        0 bytes
 14726 ;; Hardware stack levels used: 1
 14727 ;; Hardware stack levels required when called: 5
 14728 ;; This function calls:
 14729 ;;		_SetSegmentValueIntermitent
 14730 ;; This function is called by:
 14731 ;;		_actionZone_Opening
 14732 ;;		_actionZone_Opened
 14733 ;;		_actionZone_Closing
 14734 ;; This function uses a non-reentrant model
 14735 ;;
 14736                           
 14737                           	psect	text38
 14738  007BDA                     __ptext38:
 14739                           	callstack 0
 14740  007BDA                     _GetSecurityStateInClosing:
 14741                           	callstack 23
 14742                           
 14743                           ;inputs_MC50.c: 786:      if((var_sys_NVM.securityBandIsON == 1) && (var_sys.SecurityBar
      +                          IsObstructed == YES)&&(var_sys_NVM.securityBandInOpen == 0)&& (var_sys_NVM.Stopboton == 
      +                          0))
 14744                           
 14745                           ;incstack = 0
 14746  007BDA  0100               	movlb	0	; () banked
 14747  007BDC  05A1               	decf	(_var_sys_NVM+9)& (0+255),w,b	;volatile
 14748  007BDE  A4D8               	btfss	status,2,c
 14749  007BE0  D01B               	goto	l21417
 14750                           
 14751                           ; BSR set to: 0
 14752  007BE2  0101               	movlb	1	; () banked
 14753  007BE4  0502               	decf	(_var_sys+2)& (0+255),w,b	;volatile
 14754  007BE6  A4D8               	btfss	status,2,c
 14755  007BE8  D017               	goto	l21417
 14756                           
 14757                           ; BSR set to: 1
 14758  007BEA  0100               	movlb	0	; () banked
 14759  007BEC  51A3               	movf	(_var_sys_NVM+11)& (0+255),w,b	;volatile
 14760  007BEE  A4D8               	btfss	status,2,c
 14761  007BF0  D013               	goto	l21417
 14762                           
 14763                           ; BSR set to: 0
 14764  007BF2  51AE               	movf	(_var_sys_NVM+22)& (0+255),w,b	;volatile
 14765  007BF4  A4D8               	btfss	status,2,c
 14766  007BF6  D010               	goto	l21417
 14767                           
 14768                           ; BSR set to: 0
 14769                           ;inputs_MC50.c: 787:     {;inputs_MC50.c: 790:         ts_system.timeSinalizationDigit=(
      +                           200/50);
 14770  007BF8  0E00               	movlw	0
 14771  007BFA  0101               	movlb	1	; () banked
 14772  007BFC  6FAC               	movwf	(_ts_system+13)& (0+255),b	;volatile
 14773  007BFE  0E04               	movlw	4
 14774  007C00  6FAB               	movwf	(_ts_system+12)& (0+255),b	;volatile
 14775                           
 14776                           ; BSR set to: 1
 14777                           ;inputs_MC50.c: 791:         SetSegmentValueIntermitent(dL,dA,(1000/50));
 14778  007C02  0E0A               	movlw	10
 14779  007C04  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 14780  007C06  0E00               	movlw	0
 14781  007C08  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 14782  007C0A  0E14               	movlw	20
 14783  007C0C  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 14784  007C0E  0E12               	movlw	18
 14785  007C10  EC93  F04A         	call	_SetSegmentValueIntermitent
 14786  007C14                     l21411:
 14787                           
 14788                           ; BSR set to: 1
 14789                           ;inputs_MC50.c: 792:         return YES;
 14790  007C14  0E01               	movlw	1
 14791  007C16  0012               	return	
 14792  007C18                     l21417:
 14793  007C18  0100               	movlb	0	; () banked
 14794  007C1A  05AE               	decf	(_var_sys_NVM+22)& (0+255),w,b	;volatile
 14795  007C1C  A4D8               	btfss	status,2,c
 14796  007C1E  D013               	goto	l21431
 14797                           
 14798                           ; BSR set to: 0
 14799  007C20  0101               	movlb	1	; () banked
 14800  007C22  0502               	decf	(_var_sys+2)& (0+255),w,b	;volatile
 14801  007C24  A4D8               	btfss	status,2,c
 14802  007C26  D00F               	goto	l21431
 14803                           
 14804                           ; BSR set to: 1
 14805                           ;inputs_MC50.c: 795:     {;inputs_MC50.c: 797:         ts_system.timeSinalizationDigit=(
      +                           200/50);
 14806  007C28  0E00               	movlw	0
 14807  007C2A  6FAC               	movwf	(_ts_system+13)& (0+255),b	;volatile
 14808  007C2C  0E04               	movlw	4
 14809  007C2E  6FAB               	movwf	(_ts_system+12)& (0+255),b	;volatile
 14810                           
 14811                           ; BSR set to: 1
 14812                           ;inputs_MC50.c: 798:         SetSegmentValueIntermitent(d5,dt,(1000/50));
 14813  007C30  0E15               	movlw	21
 14814  007C32  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 14815  007C34  0E00               	movlw	0
 14816  007C36  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 14817  007C38  0E14               	movlw	20
 14818  007C3A  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 14819  007C3C  0E05               	movlw	5
 14820  007C3E  EC93  F04A         	call	_SetSegmentValueIntermitent
 14821                           
 14822                           ; BSR set to: 1
 14823                           ;inputs_MC50.c: 799:         return ST;
 14824  007C42  0E02               	movlw	2
 14825  007C44  0012               	return	
 14826  007C46                     l21431:
 14827  007C46  0100               	movlb	0	; () banked
 14828  007C48  059F               	decf	(_var_sys_NVM+7)& (0+255),w,b	;volatile
 14829  007C4A  A4D8               	btfss	status,2,c
 14830  007C4C  D017               	goto	l21447
 14831                           
 14832                           ; BSR set to: 0
 14833  007C4E  0101               	movlb	1	; () banked
 14834  007C50  0501               	decf	(_var_sys+1)& (0+255),w,b	;volatile
 14835  007C52  A4D8               	btfss	status,2,c
 14836  007C54  D013               	goto	l21447
 14837                           
 14838                           ; BSR set to: 1
 14839  007C56  0100               	movlb	0	; () banked
 14840  007C58  51A0               	movf	(_var_sys_NVM+8)& (0+255),w,b	;volatile
 14841  007C5A  A4D8               	btfss	status,2,c
 14842  007C5C  D00F               	goto	l21447
 14843                           
 14844                           ; BSR set to: 0
 14845                           ;inputs_MC50.c: 803:     {;inputs_MC50.c: 805:         ts_system.timeSinalizationDigit=(
      +                           200/50);
 14846  007C5E  0E00               	movlw	0
 14847  007C60  0101               	movlb	1	; () banked
 14848  007C62  6FAC               	movwf	(_ts_system+13)& (0+255),b	;volatile
 14849  007C64  0E04               	movlw	4
 14850  007C66  6FAB               	movwf	(_ts_system+12)& (0+255),b	;volatile
 14851                           
 14852                           ; BSR set to: 1
 14853                           ;inputs_MC50.c: 806:         SetSegmentValueIntermitent(dL,dE,(1000/50));
 14854  007C68  0E0E               	movlw	14
 14855  007C6A  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 14856  007C6C  0E00               	movlw	0
 14857  007C6E  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 14858  007C70  0E14               	movlw	20
 14859  007C72  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 14860  007C74  0E12               	movlw	18
 14861  007C76  EC93  F04A         	call	_SetSegmentValueIntermitent
 14862  007C7A  D7CC               	goto	l21411
 14863  007C7C                     l21447:
 14864                           
 14865                           ;inputs_MC50.c: 811:     {;inputs_MC50.c: 812:         return NO;
 14866  007C7C  0E00               	movlw	0
 14867  007C7E  0012               	return		;funcret
 14868  007C80                     __end_of_GetSecurityStateInClosing:
 14869                           	callstack 0
 14870                           
 14871 ;; *************** function _actionZone_Closed *****************
 14872 ;; Defined at:
 14873 ;;		line 327 in file "sm_ControlGate_MC50.c"
 14874 ;; Parameters:    Size  Location     Type
 14875 ;;		None
 14876 ;; Auto vars:     Size  Location     Type
 14877 ;;  typeOpenOrde    1   32[COMRAM] enum E10372
 14878 ;;  securityOpen    1   31[COMRAM] enum E10397
 14879 ;; Return value:  Size  Location     Type
 14880 ;;                  1    wreg      void 
 14881 ;; Registers used:
 14882 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14883 ;; Tracked objects:
 14884 ;;		On entry : 3F/0
 14885 ;;		On exit  : 0/0
 14886 ;;		Unchanged: 0/0
 14887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14888 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14889 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14891 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14892 ;;Total ram usage:        2 bytes
 14893 ;; Hardware stack levels used: 1
 14894 ;; Hardware stack levels required when called: 8
 14895 ;; This function calls:
 14896 ;;		_GetOpenOrder
 14897 ;;		_GetSecurityStateInOpening
 14898 ;;		_InitFullAutoTime
 14899 ;;		_InitWalkAutoTime
 14900 ;;		_OpenFullOrder
 14901 ;;		_OpenWalkOrder
 14902 ;;		_WaitPreFlash
 14903 ;;		_sm_send_event
 14904 ;; This function is called by:
 14905 ;;		_sm_execute_ControlGate
 14906 ;; This function uses a non-reentrant model
 14907 ;;
 14908                           
 14909                           	psect	text39
 14910  007B30                     __ptext39:
 14911                           	callstack 0
 14912  007B30                     _actionZone_Closed:
 14913                           	callstack 21
 14914                           
 14915                           ; BSR set to: 0
 14916                           ;sm_ControlGate_MC50.c: 331:     if (main_stateMachine.current_state != st_MenuConfigura
      +                          tion) {
 14917                           
 14918                           ;incstack = 0
 14919  007B30  0101               	movlb	1	; () banked
 14920  007B32  05F2               	decf	_main_stateMachine& (0+255),w,b
 14921  007B34  11F3               	iorwf	(_main_stateMachine+1)& (0+255),w,b
 14922  007B36  B4D8               	btfsc	status,2,c
 14923  007B38  0012               	return	
 14924                           
 14925                           ; BSR set to: 1
 14926                           ;sm_ControlGate_MC50.c: 334:         TypeCMD typeOpenOrder = GetOpenOrder();
 14927  007B3A  ECA6  F02D         	call	_GetOpenOrder	;wreg free
 14928  007B3E  6E21               	movwf	actionZone_Closed@typeOpenOrder^0,c
 14929                           
 14930                           ;sm_ControlGate_MC50.c: 336:         StateEnum securityOpening = GetSecurityStateInOpeni
      +                          ng();
 14931  007B40  EC40  F03E         	call	_GetSecurityStateInOpening	;wreg free
 14932  007B44  6E20               	movwf	actionZone_Closed@securityOpening^0,c
 14933                           
 14934                           ;sm_ControlGate_MC50.c: 338:         if (var_sys_NVM.homemPresente == 1) {
 14935  007B46  0100               	movlb	0	; () banked
 14936  007B48  05A8               	decf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 14937  007B4A  A4D8               	btfss	status,2,c
 14938  007B4C  D018               	goto	l22951
 14939                           
 14940                           ; BSR set to: 0
 14941                           ;sm_ControlGate_MC50.c: 344:             if (typeOpenOrder == TypeFullOpen && var_sys.Fi
      +                          mCurso_OpenIsEnabled == NO && securityOpening == NO) {
 14942  007B4E  0E03               	movlw	3
 14943  007B50  1821               	xorwf	actionZone_Closed@typeOpenOrder^0,w,c
 14944  007B52  A4D8               	btfss	status,2,c
 14945  007B54  0012               	return	
 14946                           
 14947                           ; BSR set to: 0
 14948  007B56  0101               	movlb	1	; () banked
 14949  007B58  5104               	movf	(_var_sys+4)& (0+255),w,b	;volatile
 14950  007B5A  A4D8               	btfss	status,2,c
 14951  007B5C  0012               	return	
 14952                           
 14953                           ; BSR set to: 1
 14954  007B5E  5020               	movf	actionZone_Closed@securityOpening^0,w,c
 14955  007B60  A4D8               	btfss	status,2,c
 14956  007B62  0012               	return	
 14957                           
 14958                           ; BSR set to: 1
 14959                           ;sm_ControlGate_MC50.c: 346:                 OpenFullOrder();
 14960  007B64  ECEC  F04B         	call	_OpenFullOrder	;wreg free
 14961  007B68                     l22949:
 14962                           
 14963                           ;sm_ControlGate_MC50.c: 347:                 sm_send_event(&main_stateMachine, ev_MotorI
      +                          sOpen);
 14964  007B68  0EF2               	movlw	low _main_stateMachine
 14965  007B6A  6E12               	movwf	sm_send_event@psm^0,c
 14966  007B6C  0E01               	movlw	high _main_stateMachine
 14967  007B6E  6E13               	movwf	(sm_send_event@psm+1)^0,c
 14968  007B70  0E00               	movlw	0
 14969  007B72  6E15               	movwf	(sm_send_event@event+1)^0,c
 14970  007B74  0E11               	movlw	17
 14971  007B76  6E14               	movwf	sm_send_event@event^0,c
 14972  007B78  ECD5  F045         	call	_sm_send_event	;wreg free
 14973  007B7C  0012               	return	
 14974  007B7E                     l22951:
 14975                           
 14976                           ; BSR set to: 0
 14977  007B7E  0421               	decf	actionZone_Closed@typeOpenOrder^0,w,c
 14978  007B80  B4D8               	btfsc	status,2,c
 14979  007B82  D004               	goto	u26660
 14980                           
 14981                           ; BSR set to: 0
 14982  007B84  0E03               	movlw	3
 14983  007B86  1821               	xorwf	actionZone_Closed@typeOpenOrder^0,w,c
 14984  007B88  A4D8               	btfss	status,2,c
 14985  007B8A  D017               	goto	l22971
 14986  007B8C                     u26660:
 14987                           
 14988                           ; BSR set to: 0
 14989  007B8C  5020               	movf	actionZone_Closed@securityOpening^0,w,c
 14990  007B8E  A4D8               	btfss	status,2,c
 14991  007B90  D014               	goto	l22971
 14992                           
 14993                           ; BSR set to: 0
 14994  007B92  0101               	movlb	1	; () banked
 14995  007B94  511D               	movf	(_var_sys+29)& (0+255),w,b	;volatile
 14996  007B96  A4D8               	btfss	status,2,c
 14997  007B98  D010               	goto	l22971
 14998                           
 14999                           ; BSR set to: 1
 15000                           ;sm_ControlGate_MC50.c: 353:             if (var_sys_NVM.flashRGBMode == rgb_pre){
 15001  007B9A  0E02               	movlw	2
 15002  007B9C  0100               	movlb	0	; () banked
 15003  007B9E  19B1               	xorwf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 15004  007BA0  A4D8               	btfss	status,2,c
 15005  007BA2  D006               	goto	l22965
 15006                           
 15007                           ; BSR set to: 0
 15008                           ;sm_ControlGate_MC50.c: 354:                 var_sys.preflashingcontrol = YES;
 15009  007BA4  0E01               	movlw	1
 15010  007BA6  0101               	movlb	1	; () banked
 15011  007BA8  6F1D               	movwf	(_var_sys+29)& (0+255),b	;volatile
 15012                           
 15013                           ; BSR set to: 1
 15014                           ;sm_ControlGate_MC50.c: 355:                 WaitPreFlash();
 15015  007BAA  ECC2  F043         	call	_WaitPreFlash	;wreg free
 15016                           
 15017                           ;sm_ControlGate_MC50.c: 356:             }
 15018  007BAE  0012               	return	
 15019  007BB0                     l22965:
 15020                           
 15021                           ; BSR set to: 0
 15022                           ;sm_ControlGate_MC50.c: 358:                 OpenFullOrder();
 15023  007BB0  ECEC  F04B         	call	_OpenFullOrder	;wreg free
 15024                           
 15025                           ;sm_ControlGate_MC50.c: 359:                InitFullAutoTime();
 15026  007BB4  ECE0  F04C         	call	_InitFullAutoTime	;wreg free
 15027  007BB8  D7D7               	goto	l22949
 15028  007BBA                     l22971:
 15029  007BBA  0E02               	movlw	2
 15030  007BBC  1821               	xorwf	actionZone_Closed@typeOpenOrder^0,w,c
 15031  007BBE  A4D8               	btfss	status,2,c
 15032  007BC0  0012               	return	
 15033  007BC2  5020               	movf	actionZone_Closed@securityOpening^0,w,c
 15034  007BC4  A4D8               	btfss	status,2,c
 15035  007BC6  0012               	return	
 15036  007BC8  0100               	movlb	0	; () banked
 15037  007BCA  519C               	movf	(_var_sys_NVM+4)& (0+255),w,b	;volatile
 15038  007BCC  B4D8               	btfsc	status,2,c
 15039  007BCE  0012               	return	
 15040                           
 15041                           ; BSR set to: 0
 15042                           ;sm_ControlGate_MC50.c: 367:             OpenWalkOrder();
 15043  007BD0  EC6A  F044         	call	_OpenWalkOrder	;wreg free
 15044                           
 15045                           ;sm_ControlGate_MC50.c: 368:             InitWalkAutoTime();
 15046  007BD4  EC64  F04D         	call	_InitWalkAutoTime	;wreg free
 15047  007BD8  D7C7               	goto	l22949
 15048  007BDA                     __end_of_actionZone_Closed:
 15049                           	callstack 0
 15050                           
 15051 ;; *************** function _WaitPreFlash *****************
 15052 ;; Defined at:
 15053 ;;		line 41 in file "sm_ControlGate_MC50.c"
 15054 ;; Parameters:    Size  Location     Type
 15055 ;;		None
 15056 ;; Auto vars:     Size  Location     Type
 15057 ;;		None
 15058 ;; Return value:  Size  Location     Type
 15059 ;;                  1    wreg      void 
 15060 ;; Registers used:
 15061 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15062 ;; Tracked objects:
 15063 ;;		On entry : 3F/1
 15064 ;;		On exit  : 3F/1
 15065 ;;		Unchanged: 0/0
 15066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15068 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15070 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15071 ;;Total ram usage:        0 bytes
 15072 ;; Hardware stack levels used: 1
 15073 ;; Hardware stack levels required when called: 7
 15074 ;; This function calls:
 15075 ;;		_InitFullAutoTime
 15076 ;;		_OpenFullOrder
 15077 ;;		_sm_send_event
 15078 ;; This function is called by:
 15079 ;;		_sm_execute_ControlGate
 15080 ;;		_actionZone_Closed
 15081 ;; This function uses a non-reentrant model
 15082 ;;
 15083                           
 15084                           	psect	text40
 15085  008784                     __ptext40:
 15086                           	callstack 0
 15087  008784                     _WaitPreFlash:
 15088                           	callstack 21
 15089                           
 15090                           ; BSR set to: 1
 15091                           ;sm_ControlGate_MC50.c: 44:     if ((var_sys_NVM.flashRGBMode == rgb_pre) && (var_sys.pr
      +                          eflashingcontrol == YES) && (ts_system.timewaitFlashRGB <=0) && (aux_i == 0))
 15092                           
 15093                           ;incstack = 0
 15094  008784  0E02               	movlw	2
 15095  008786  0100               	movlb	0	; () banked
 15096  008788  19B1               	xorwf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 15097  00878A  A4D8               	btfss	status,2,c
 15098  00878C  D014               	goto	l21661
 15099                           
 15100                           ; BSR set to: 0
 15101  00878E  0101               	movlb	1	; () banked
 15102  008790  051D               	decf	(_var_sys+29)& (0+255),w,b	;volatile
 15103  008792  A4D8               	btfss	status,2,c
 15104  008794  D010               	goto	l21661
 15105                           
 15106                           ; BSR set to: 1
 15107  008796  BFE6               	btfsc	(_ts_system+71)& (0+255),7,b	;volatile
 15108  008798  D005               	goto	u25150
 15109  00879A  51E6               	movf	(_ts_system+71)& (0+255),w,b	;volatile
 15110  00879C  E10C               	bnz	l21661
 15111  00879E  05E5               	decf	(_ts_system+70)& (0+255),w,b	;volatile
 15112  0087A0  B0D8               	btfsc	status,0,c
 15113  0087A2  D009               	goto	l21661
 15114  0087A4                     u25150:
 15115                           
 15116                           ; BSR set to: 1
 15117  0087A4  5191               	movf	_aux_i& (0+255),w,b
 15118  0087A6  A4D8               	btfss	status,2,c
 15119  0087A8  D006               	goto	l21661
 15120                           
 15121                           ; BSR set to: 1
 15122                           ;sm_ControlGate_MC50.c: 45:         {;sm_ControlGate_MC50.c: 46:             ts_system.t
      +                          imewaitFlashRGB = (1000/50) *3;
 15123  0087AA  0E00               	movlw	0
 15124  0087AC  6FE6               	movwf	(_ts_system+71)& (0+255),b	;volatile
 15125  0087AE  0E3C               	movlw	60
 15126  0087B0  6FE5               	movwf	(_ts_system+70)& (0+255),b	;volatile
 15127                           
 15128                           ;sm_ControlGate_MC50.c: 47:             aux_i=1;
 15129  0087B2  0E01               	movlw	1
 15130  0087B4  6F91               	movwf	_aux_i& (0+255),b
 15131  0087B6                     l21661:
 15132                           
 15133                           ;sm_ControlGate_MC50.c: 50:     if ((ts_system.timewaitFlashRGB <= 0) && (aux_i==1 ))
 15134  0087B6  0101               	movlb	1	; () banked
 15135  0087B8  BFE6               	btfsc	(_ts_system+71)& (0+255),7,b	;volatile
 15136  0087BA  D005               	goto	u25170
 15137  0087BC  51E6               	movf	(_ts_system+71)& (0+255),w,b	;volatile
 15138  0087BE  E119               	bnz	l2585
 15139  0087C0  05E5               	decf	(_ts_system+70)& (0+255),w,b	;volatile
 15140  0087C2  B0D8               	btfsc	status,0,c
 15141  0087C4  0012               	return	
 15142  0087C6                     u25170:
 15143                           
 15144                           ; BSR set to: 1
 15145  0087C6  0591               	decf	_aux_i& (0+255),w,b
 15146  0087C8  A4D8               	btfss	status,2,c
 15147  0087CA  0012               	return	
 15148                           
 15149                           ; BSR set to: 1
 15150                           ;sm_ControlGate_MC50.c: 51:         {;sm_ControlGate_MC50.c: 54:                 var_sys
      +                          .preflashingcontrol = NO;
 15151  0087CC  0E00               	movlw	0
 15152  0087CE  6F1D               	movwf	(_var_sys+29)& (0+255),b	;volatile
 15153                           
 15154                           ; BSR set to: 1
 15155                           ;sm_ControlGate_MC50.c: 55:                 OpenFullOrder();
 15156  0087D0  ECEC  F04B         	call	_OpenFullOrder	;wreg free
 15157                           
 15158                           ;sm_ControlGate_MC50.c: 56:                 InitFullAutoTime();
 15159  0087D4  ECE0  F04C         	call	_InitFullAutoTime	;wreg free
 15160                           
 15161                           ; BSR set to: 0
 15162                           ;sm_ControlGate_MC50.c: 57:                 sm_send_event(&main_stateMachine, ev_MotorIs
      +                          Open);
 15163  0087D8  0EF2               	movlw	low _main_stateMachine
 15164  0087DA  6E12               	movwf	sm_send_event@psm^0,c
 15165  0087DC  0E01               	movlw	high _main_stateMachine
 15166  0087DE  6E13               	movwf	(sm_send_event@psm+1)^0,c
 15167  0087E0  0E00               	movlw	0
 15168  0087E2  6E15               	movwf	(sm_send_event@event+1)^0,c
 15169  0087E4  0E11               	movlw	17
 15170  0087E6  6E14               	movwf	sm_send_event@event^0,c
 15171  0087E8  ECD5  F045         	call	_sm_send_event	;wreg free
 15172                           
 15173                           ;sm_ControlGate_MC50.c: 58:                 aux_i=0;
 15174  0087EC  0E00               	movlw	0
 15175  0087EE  0101               	movlb	1	; () banked
 15176  0087F0  6F91               	movwf	_aux_i& (0+255),b
 15177  0087F2                     l2585:
 15178                           
 15179                           ; BSR set to: 1
 15180  0087F2  0012               	return		;funcret
 15181  0087F4                     __end_of_WaitPreFlash:
 15182                           	callstack 0
 15183                           
 15184 ;; *************** function _OpenFullOrder *****************
 15185 ;; Defined at:
 15186 ;;		line 29 in file "sm_ControlGate_MC50.c"
 15187 ;; Parameters:    Size  Location     Type
 15188 ;;		None
 15189 ;; Auto vars:     Size  Location     Type
 15190 ;;		None
 15191 ;; Return value:  Size  Location     Type
 15192 ;;                  1    wreg      void 
 15193 ;; Registers used:
 15194 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15195 ;; Tracked objects:
 15196 ;;		On entry : 3E/1
 15197 ;;		On exit  : 3E/0
 15198 ;;		Unchanged: 0/0
 15199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15201 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15203 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15204 ;;Total ram usage:        0 bytes
 15205 ;; Hardware stack levels used: 1
 15206 ;; Hardware stack levels required when called: 6
 15207 ;; This function calls:
 15208 ;;		_InitSoftStart
 15209 ;;		_sm_send_event
 15210 ;; This function is called by:
 15211 ;;		_WaitPreFlash
 15212 ;;		_actionZone_Closed
 15213 ;;		_actionZone_Opened
 15214 ;;		_actionZone_Closing
 15215 ;; This function uses a non-reentrant model
 15216 ;;
 15217                           
 15218                           	psect	text41
 15219  0097D8                     __ptext41:
 15220                           	callstack 0
 15221  0097D8                     _OpenFullOrder:
 15222                           	callstack 22
 15223                           
 15224                           ;sm_ControlGate_MC50.c: 32:     var_sys.StateMotor = InOpenFull;
 15225                           
 15226                           ; BSR set to: 1
 15227                           ;incstack = 0
 15228  0097D8  0E01               	movlw	1
 15229  0097DA  0101               	movlb	1	; () banked
 15230  0097DC  6F00               	movwf	_var_sys& (0+255),b	;volatile
 15231                           
 15232                           ; BSR set to: 1
 15233                           ;sm_ControlGate_MC50.c: 33:     sm_send_event(&controlGate_stateMachine, ev_OpenGate);
 15234  0097DE  0EE7               	movlw	low _controlGate_stateMachine
 15235  0097E0  6E12               	movwf	sm_send_event@psm^0,c
 15236  0097E2  0E01               	movlw	high _controlGate_stateMachine
 15237  0097E4  6E13               	movwf	(sm_send_event@psm+1)^0,c
 15238  0097E6  0E00               	movlw	0
 15239  0097E8  6E15               	movwf	(sm_send_event@event+1)^0,c
 15240  0097EA  0E0C               	movlw	12
 15241  0097EC  6E14               	movwf	sm_send_event@event^0,c
 15242  0097EE  ECD5  F045         	call	_sm_send_event	;wreg free
 15243                           
 15244                           ;sm_ControlGate_MC50.c: 34:     var_sys.LastState = InOpenFull;
 15245  0097F2  0E01               	movlw	1
 15246  0097F4  0101               	movlb	1	; () banked
 15247  0097F6  6F0B               	movwf	(_var_sys+11)& (0+255),b	;volatile
 15248                           
 15249                           ; BSR set to: 1
 15250                           ;sm_ControlGate_MC50.c: 35:     InitSoftStart();
 15251  0097F8  EC03  F046         	call	_InitSoftStart	;wreg free
 15252  0097FC  0012               	return		;funcret
 15253  0097FE                     __end_of_OpenFullOrder:
 15254                           	callstack 0
 15255                           
 15256 ;; *************** function _InitFullAutoTime *****************
 15257 ;; Defined at:
 15258 ;;		line 109 in file "sm_ControlGate_MC50.c"
 15259 ;; Parameters:    Size  Location     Type
 15260 ;;		None
 15261 ;; Auto vars:     Size  Location     Type
 15262 ;;		None
 15263 ;; Return value:  Size  Location     Type
 15264 ;;                  1    wreg      void 
 15265 ;; Registers used:
 15266 ;;		wreg, status,2, status,0, prodl, prodh
 15267 ;; Tracked objects:
 15268 ;;		On entry : 3E/0
 15269 ;;		On exit  : 3F/0
 15270 ;;		Unchanged: 0/0
 15271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15275 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15276 ;;Total ram usage:        0 bytes
 15277 ;; Hardware stack levels used: 1
 15278 ;; Hardware stack levels required when called: 4
 15279 ;; This function calls:
 15280 ;;		Nothing
 15281 ;; This function is called by:
 15282 ;;		_WaitPreFlash
 15283 ;;		_actionZone_Closed
 15284 ;;		_actionZone_Opening
 15285 ;;		_actionZone_Opened
 15286 ;;		_actionZone_Closing
 15287 ;; This function uses a non-reentrant model
 15288 ;;
 15289                           
 15290                           	psect	text42
 15291  0099C0                     __ptext42:
 15292                           	callstack 0
 15293  0099C0                     _InitFullAutoTime:
 15294                           	callstack 24
 15295                           
 15296                           ;sm_ControlGate_MC50.c: 111:     if (var_sys_NVM.homemPresente == 0) {
 15297                           
 15298                           ;incstack = 0
 15299  0099C0  0100               	movlb	0	; () banked
 15300  0099C2  51A8               	movf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 15301  0099C4  A4D8               	btfss	status,2,c
 15302  0099C6  0012               	return	
 15303                           
 15304                           ; BSR set to: 0
 15305                           ;sm_ControlGate_MC50.c: 112:         ts_system.timeWaitToClose = ((int) var_sys_NVM.auto
      +                          TimeFullClose * (1000/50));
 15306  0099C8  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 15307  0099CA  0D14               	mullw	20
 15308  0099CC  CFF3 F1B1          	movff	prodl,_ts_system+18	;volatile
 15309  0099D0  CFF4 F1B2          	movff	prodh,_ts_system+19	;volatile
 15310                           
 15311                           ; BSR set to: 0
 15312                           ;sm_ControlGate_MC50.c: 113:         var_sys.AutoCloseActive = var_sys_NVM.autoTimeFullC
      +                          lose;
 15313  0099D4  C09D  F123         	movff	_var_sys_NVM+5,_var_sys+35	;volatile
 15314                           
 15315                           ; BSR set to: 0
 15316  0099D8  0012               	return		;funcret
 15317  0099DA                     __end_of_InitFullAutoTime:
 15318                           	callstack 0
 15319                           
 15320 ;; *************** function _OpenWalkOrder *****************
 15321 ;; Defined at:
 15322 ;;		line 71 in file "sm_ControlGate_MC50.c"
 15323 ;; Parameters:    Size  Location     Type
 15324 ;;		None
 15325 ;; Auto vars:     Size  Location     Type
 15326 ;;  diffTime        2   25[COMRAM] int 
 15327 ;; Return value:  Size  Location     Type
 15328 ;;                  1    wreg      void 
 15329 ;; Registers used:
 15330 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15331 ;; Tracked objects:
 15332 ;;		On entry : 3E/1
 15333 ;;		On exit  : 3E/0
 15334 ;;		Unchanged: 0/0
 15335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15337 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15338 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15339 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15340 ;;Total ram usage:        4 bytes
 15341 ;; Hardware stack levels used: 1
 15342 ;; Hardware stack levels required when called: 6
 15343 ;; This function calls:
 15344 ;;		_InitSoftStart
 15345 ;;		_sm_send_event
 15346 ;; This function is called by:
 15347 ;;		_actionZone_Closed
 15348 ;;		_actionZone_Opened
 15349 ;;		_actionZone_Closing
 15350 ;; This function uses a non-reentrant model
 15351 ;;
 15352                           
 15353                           	psect	text43
 15354  0088D4                     __ptext43:
 15355                           	callstack 0
 15356  0088D4                     _OpenWalkOrder:
 15357                           	callstack 22
 15358                           
 15359                           ;sm_ControlGate_MC50.c: 72:     int diffTime = ((int) var_sys_NVM.walkTime * (1000/50)) 
      +                          - var_sys.PositionActual ;
 15360                           
 15361                           ; BSR set to: 0
 15362                           ;incstack = 0
 15363  0088D4  0100               	movlb	0	; () banked
 15364  0088D6  519C               	movf	(_var_sys_NVM+4)& (0+255),w,b	;volatile
 15365  0088D8  0D14               	mullw	20
 15366  0088DA  CFF3 F018          	movff	prodl,??_OpenWalkOrder
 15367  0088DE  CFF4 F019          	movff	prodh,??_OpenWalkOrder+1
 15368  0088E2  0101               	movlb	1	; () banked
 15369  0088E4  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 15370  0088E6  5C18               	subwf	??_OpenWalkOrder^0,w,c
 15371  0088E8  6E1A               	movwf	OpenWalkOrder@diffTime^0,c
 15372  0088EA  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 15373  0088EC  5819               	subwfb	(??_OpenWalkOrder+1)^0,w,c
 15374  0088EE  6E1B               	movwf	(OpenWalkOrder@diffTime+1)^0,c
 15375                           
 15376                           ; BSR set to: 1
 15377                           ;sm_ControlGate_MC50.c: 74:     if (diffTime > 0) {
 15378  0088F0  BE1B               	btfsc	(OpenWalkOrder@diffTime+1)^0,7,c
 15379  0088F2  D022               	goto	l21699
 15380  0088F4  501B               	movf	(OpenWalkOrder@diffTime+1)^0,w,c
 15381  0088F6  E103               	bnz	u25190
 15382  0088F8  041A               	decf	OpenWalkOrder@diffTime^0,w,c
 15383  0088FA  A0D8               	btfss	status,0,c
 15384  0088FC  D01D               	goto	l21699
 15385  0088FE                     u25190:
 15386                           
 15387                           ; BSR set to: 1
 15388                           ;sm_ControlGate_MC50.c: 76:         sm_send_event(&controlGate_stateMachine, ev_OpenGate
      +                          );
 15389  0088FE  0EE7               	movlw	low _controlGate_stateMachine
 15390  008900  6E12               	movwf	sm_send_event@psm^0,c
 15391  008902  0E01               	movlw	high _controlGate_stateMachine
 15392  008904  6E13               	movwf	(sm_send_event@psm+1)^0,c
 15393  008906  0E00               	movlw	0
 15394  008908  6E15               	movwf	(sm_send_event@event+1)^0,c
 15395  00890A  0E0C               	movlw	12
 15396  00890C  6E14               	movwf	sm_send_event@event^0,c
 15397  00890E  ECD5  F045         	call	_sm_send_event	;wreg free
 15398                           
 15399                           ;sm_ControlGate_MC50.c: 77:         if (var_sys.Statedoorcontrol == st_Closed){
 15400  008912  0101               	movlb	1	; () banked
 15401  008914  051C               	decf	(_var_sys+28)& (0+255),w,b	;volatile
 15402  008916  A4D8               	btfss	status,2,c
 15403  008918  D005               	goto	l21693
 15404                           
 15405                           ; BSR set to: 1
 15406                           ;sm_ControlGate_MC50.c: 78:            ts_system.timeOpenWalk = diffTime;
 15407  00891A  C01A  F1AF         	movff	OpenWalkOrder@diffTime,_ts_system+16	;volatile
 15408  00891E  C01B  F1B0         	movff	OpenWalkOrder@diffTime+1,_ts_system+17	;volatile
 15409                           
 15410                           ;sm_ControlGate_MC50.c: 79:         }
 15411  008922  D006               	goto	l21695
 15412  008924                     l21693:
 15413                           
 15414                           ; BSR set to: 1
 15415                           ;sm_ControlGate_MC50.c: 81:             ts_system.timeOpenWalk = diffTime + (1000/50);
 15416  008924  0E14               	movlw	20
 15417  008926  241A               	addwf	OpenWalkOrder@diffTime^0,w,c
 15418  008928  6FAF               	movwf	(_ts_system+16)& (0+255),b	;volatile
 15419  00892A  0E00               	movlw	0
 15420  00892C  201B               	addwfc	(OpenWalkOrder@diffTime+1)^0,w,c
 15421  00892E  6FB0               	movwf	(_ts_system+17)& (0+255),b	;volatile
 15422  008930                     l21695:
 15423                           
 15424                           ; BSR set to: 1
 15425                           ;sm_ControlGate_MC50.c: 83:         var_sys.StateMotor = InOpenWalk;
 15426  008930  0E02               	movlw	2
 15427  008932  6F00               	movwf	_var_sys& (0+255),b	;volatile
 15428                           
 15429                           ; BSR set to: 1
 15430                           ;sm_ControlGate_MC50.c: 84:         var_sys.Timewalkisactived = YES;
 15431  008934  0E01               	movlw	1
 15432  008936  6F4A               	movwf	(_var_sys+74)& (0+255),b	;volatile
 15433  008938                     l21699:
 15434                           
 15435                           ; BSR set to: 1
 15436                           ;sm_ControlGate_MC50.c: 92:     var_sys.LastState = InOpenWalk;
 15437  008938  0E02               	movlw	2
 15438  00893A  6F0B               	movwf	(_var_sys+11)& (0+255),b	;volatile
 15439                           
 15440                           ; BSR set to: 1
 15441                           ;sm_ControlGate_MC50.c: 93:     InitSoftStart();
 15442  00893C  EC03  F046         	call	_InitSoftStart	;wreg free
 15443  008940  0012               	return		;funcret
 15444  008942                     __end_of_OpenWalkOrder:
 15445                           	callstack 0
 15446                           
 15447 ;; *************** function _sm_send_event *****************
 15448 ;; Defined at:
 15449 ;;		line 34 in file "sm_common_MC50.c"
 15450 ;; Parameters:    Size  Location     Type
 15451 ;;  psm             2   17[COMRAM] PTR struct .
 15452 ;;		 -> controlLearning_stateMachine(11), controlGate_stateMachine(11), main_stateMachine(11), menuConfiguration_stateMa
      +chine(11), 
 15453 ;;  event           2   19[COMRAM] int 
 15454 ;; Auto vars:     Size  Location     Type
 15455 ;;		None
 15456 ;; Return value:  Size  Location     Type
 15457 ;;                  1    wreg      void 
 15458 ;; Registers used:
 15459 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15460 ;; Tracked objects:
 15461 ;;		On entry : 0/0
 15462 ;;		On exit  : 0/0
 15463 ;;		Unchanged: 0/0
 15464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15465 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15467 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15468 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15469 ;;Total ram usage:        6 bytes
 15470 ;; Hardware stack levels used: 1
 15471 ;; Hardware stack levels required when called: 5
 15472 ;; This function calls:
 15473 ;;		_sm_get_current_state
 15474 ;; This function is called by:
 15475 ;;		_OpenFullOrder
 15476 ;;		_WaitPreFlash
 15477 ;;		_CloseOrder
 15478 ;;		_OpenWalkOrder
 15479 ;;		_StopOrder
 15480 ;;		_sm_execute_ControlGate
 15481 ;;		_actionZone_Closed
 15482 ;;		_actionZone_Opening
 15483 ;;		_actionZone_Closing
 15484 ;;		_sm_execute_ControlLearning
 15485 ;;		_sm_execute_main
 15486 ;;		_sm_execute_menuConfiguration
 15487 ;;		_setValueToEdit
 15488 ;;		_controlSelectRemote
 15489 ;;		_controlSaveRemote
 15490 ;; This function uses a non-reentrant model
 15491 ;;
 15492                           
 15493                           	psect	text44
 15494  008BAA                     __ptext44:
 15495                           	callstack 0
 15496  008BAA                     _sm_send_event:
 15497                           	callstack 24
 15498                           
 15499                           ;sm_common_MC50.c: 34: void sm_send_event(sm_t *psm, int event);sm_common_MC50.c: 35: {;
      +                          sm_common_MC50.c: 36:  if(( psm->parent_machine == ((void*)0)) || (sm_get_current_state(
      +                          psm->parent_machine)==psm->parent_state))
 15500                           
 15501                           ;incstack = 0
 15502  008BAA  EE20 F007          	lfsr	2,7
 15503  008BAE  5012               	movf	sm_send_event@psm^0,w,c
 15504  008BB0  26D9               	addwf	fsr2l,f,c
 15505  008BB2  5013               	movf	(sm_send_event@psm+1)^0,w,c
 15506  008BB4  22DA               	addwfc	fsr2h,f,c
 15507  008BB6  50DE               	movf	postinc2,w,c
 15508  008BB8  10DE               	iorwf	postinc2,w,c
 15509  008BBA  B4D8               	btfsc	status,2,c
 15510  008BBC  D019               	goto	u23540
 15511  008BBE  EE20 F007          	lfsr	2,7
 15512  008BC2  5012               	movf	sm_send_event@psm^0,w,c
 15513  008BC4  26D9               	addwf	fsr2l,f,c
 15514  008BC6  5013               	movf	(sm_send_event@psm+1)^0,w,c
 15515  008BC8  22DA               	addwfc	fsr2h,f,c
 15516  008BCA  CFDE F010          	movff	postinc2,sm_get_current_state@psm
 15517  008BCE  CFDD F011          	movff	postdec2,sm_get_current_state@psm+1
 15518  008BD2  EC82  F04D         	call	_sm_get_current_state	;wreg free
 15519  008BD6  EE20 F009          	lfsr	2,9
 15520  008BDA  5012               	movf	sm_send_event@psm^0,w,c
 15521  008BDC  26D9               	addwf	fsr2l,f,c
 15522  008BDE  5013               	movf	(sm_send_event@psm+1)^0,w,c
 15523  008BE0  22DA               	addwfc	fsr2h,f,c
 15524  008BE2  50DE               	movf	postinc2,w,c
 15525  008BE4  1810               	xorwf	?_sm_get_current_state^0,w,c
 15526  008BE6  E10E               	bnz	l3512
 15527  008BE8  50DE               	movf	postinc2,w,c
 15528  008BEA  1811               	xorwf	(?_sm_get_current_state+1)^0,w,c
 15529  008BEC  A4D8               	btfss	status,2,c
 15530  008BEE  0012               	return	
 15531  008BF0                     u23540:
 15532                           
 15533                           ;sm_common_MC50.c: 38:  {;sm_common_MC50.c: 39:   psm->last_event = event;
 15534  008BF0  EE20 F004          	lfsr	2,4
 15535  008BF4  5012               	movf	sm_send_event@psm^0,w,c
 15536  008BF6  26D9               	addwf	fsr2l,f,c
 15537  008BF8  5013               	movf	(sm_send_event@psm+1)^0,w,c
 15538  008BFA  22DA               	addwfc	fsr2h,f,c
 15539  008BFC  C014  FFDE         	movff	sm_send_event@event,postinc2
 15540  008C00  C015  FFDD         	movff	sm_send_event@event+1,postdec2
 15541  008C04                     l3512:
 15542  008C04  0012               	return		;funcret
 15543  008C06                     __end_of_sm_send_event:
 15544                           	callstack 0
 15545                           
 15546 ;; *************** function _sm_get_current_state *****************
 15547 ;; Defined at:
 15548 ;;		line 30 in file "sm_common_MC50.c"
 15549 ;; Parameters:    Size  Location     Type
 15550 ;;  psm             2   15[COMRAM] PTR struct .
 15551 ;;		 -> NULL(0), 
 15552 ;; Auto vars:     Size  Location     Type
 15553 ;;		None
 15554 ;; Return value:  Size  Location     Type
 15555 ;;                  2   15[COMRAM] int 
 15556 ;; Registers used:
 15557 ;;		fsr2l, fsr2h
 15558 ;; Tracked objects:
 15559 ;;		On entry : 0/0
 15560 ;;		On exit  : 0/0
 15561 ;;		Unchanged: 0/0
 15562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15563 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15566 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15567 ;;Total ram usage:        2 bytes
 15568 ;; Hardware stack levels used: 1
 15569 ;; Hardware stack levels required when called: 4
 15570 ;; This function calls:
 15571 ;;		Nothing
 15572 ;; This function is called by:
 15573 ;;		_sm_send_event
 15574 ;; This function uses a non-reentrant model
 15575 ;;
 15576                           
 15577                           	psect	text45
 15578  009B04                     __ptext45:
 15579                           	callstack 0
 15580  009B04                     _sm_get_current_state:
 15581                           	callstack 24
 15582                           
 15583                           ;sm_common_MC50.c: 31:  return psm->current_state;
 15584                           
 15585                           ;incstack = 0
 15586  009B04  C010  FFD9         	movff	sm_get_current_state@psm,fsr2l
 15587  009B08  C011  FFDA         	movff	sm_get_current_state@psm+1,fsr2h
 15588  009B0C  CFDE F010          	movff	postinc2,?_sm_get_current_state
 15589  009B10  CFDD F011          	movff	postdec2,?_sm_get_current_state+1
 15590  009B14  0012               	return		;funcret
 15591  009B16                     __end_of_sm_get_current_state:
 15592                           	callstack 0
 15593                           
 15594 ;; *************** function _InitSoftStart *****************
 15595 ;; Defined at:
 15596 ;;		line 816 in file "sm_ControlGate_MC50.c"
 15597 ;; Parameters:    Size  Location     Type
 15598 ;;		None
 15599 ;; Auto vars:     Size  Location     Type
 15600 ;;		None
 15601 ;; Return value:  Size  Location     Type
 15602 ;;                  1    wreg      void 
 15603 ;; Registers used:
 15604 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15605 ;; Tracked objects:
 15606 ;;		On entry : 3F/1
 15607 ;;		On exit  : 3E/0
 15608 ;;		Unchanged: 0/0
 15609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15612 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15613 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15614 ;;Total ram usage:        1 bytes
 15615 ;; Hardware stack levels used: 1
 15616 ;; Hardware stack levels required when called: 5
 15617 ;; This function calls:
 15618 ;;		_GetMotorPower
 15619 ;; This function is called by:
 15620 ;;		_OpenFullOrder
 15621 ;;		_CloseOrder
 15622 ;;		_OpenWalkOrder
 15623 ;; This function uses a non-reentrant model
 15624 ;;
 15625                           
 15626                           	psect	text46
 15627  008C06                     __ptext46:
 15628                           	callstack 0
 15629  008C06                     _InitSoftStart:
 15630                           	callstack 22
 15631                           
 15632                           ; BSR set to: 1
 15633                           ;sm_ControlGate_MC50.c: 817:     if (var_sys_NVM.softStart != 0 && var_sys.AutoInversion
      +                          Active == NO) {
 15634                           
 15635                           ;incstack = 0
 15636  008C06  0100               	movlb	0	; () banked
 15637  008C08  51AA               	movf	(_var_sys_NVM+18)& (0+255),w,b	;volatile
 15638  008C0A  B4D8               	btfsc	status,2,c
 15639  008C0C  0012               	return	
 15640                           
 15641                           ; BSR set to: 0
 15642  008C0E  0101               	movlb	1	; () banked
 15643  008C10  5127               	movf	(_var_sys+39)& (0+255),w,b	;volatile
 15644  008C12  A4D8               	btfss	status,2,c
 15645  008C14  0012               	return	
 15646                           
 15647                           ; BSR set to: 1
 15648                           ;sm_ControlGate_MC50.c: 824:         var_sys.velocityFactorstop = 0;
 15649  008C16  0E00               	movlw	0
 15650  008C18  6F11               	movwf	(_var_sys+17)& (0+255),b	;volatile
 15651  008C1A  0E00               	movlw	0
 15652  008C1C  6F10               	movwf	(_var_sys+16)& (0+255),b	;volatile
 15653                           
 15654                           ;sm_ControlGate_MC50.c: 825:         var_sys.velocityFactor = 0;
 15655  008C1E  0E00               	movlw	0
 15656  008C20  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 15657  008C22  0E00               	movlw	0
 15658  008C24  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 15659                           
 15660                           ; BSR set to: 1
 15661                           ;sm_ControlGate_MC50.c: 826:         var_sys.velocityFactor = GetMotorPower();
 15662  008C26  EC20  F03C         	call	_GetMotorPower	;wreg free
 15663  008C2A  6E14               	movwf	??_InitSoftStart^0,c
 15664  008C2C  5014               	movf	??_InitSoftStart^0,w,c
 15665  008C2E  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 15666  008C30  6B0F               	clrf	(_var_sys+15)& (0+255),b	;volatile
 15667                           
 15668                           ; BSR set to: 1
 15669                           ;sm_ControlGate_MC50.c: 827:         if ( var_sys.velocityFactor > (81) )
 15670  008C32  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 15671  008C34  D00A               	goto	l20573
 15672  008C36  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 15673  008C38  E104               	bnz	u23570
 15674  008C3A  0E52               	movlw	82
 15675  008C3C  5D0E               	subwf	(_var_sys+14)& (0+255),w,b	;volatile
 15676  008C3E  A0D8               	btfss	status,0,c
 15677  008C40  D004               	goto	l20573
 15678  008C42                     u23570:
 15679                           
 15680                           ; BSR set to: 1
 15681                           ;sm_ControlGate_MC50.c: 828:         {;sm_ControlGate_MC50.c: 829:             var_sys.v
      +                          elocityFactor = (81);
 15682  008C42  0E00               	movlw	0
 15683  008C44  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 15684  008C46  0E51               	movlw	81
 15685  008C48  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 15686  008C4A                     l20573:
 15687                           
 15688                           ; BSR set to: 1
 15689                           ;sm_ControlGate_MC50.c: 840:         ts_system.timeSoftStart = var_sys.velocityFactor + 
      +                          1;
 15690  008C4A  0E01               	movlw	1
 15691  008C4C  250E               	addwf	(_var_sys+14)& (0+255),w,b	;volatile
 15692  008C4E  6FB5               	movwf	(_ts_system+22)& (0+255),b	;volatile
 15693  008C50  0E00               	movlw	0
 15694  008C52  210F               	addwfc	(_var_sys+15)& (0+255),w,b	;volatile
 15695  008C54  6FB6               	movwf	(_ts_system+23)& (0+255),b	;volatile
 15696                           
 15697                           ;sm_ControlGate_MC50.c: 842:         var_sys.SoftStartDecrementControl = 10 - var_sys_NV
      +                          M.softStart;
 15698  008C56  0100               	movlb	0	; () banked
 15699  008C58  51AA               	movf	(_var_sys_NVM+18)& (0+255),w,b	;volatile
 15700  008C5A  080A               	sublw	10
 15701  008C5C  0101               	movlb	1	; () banked
 15702  008C5E  6F14               	movwf	(_var_sys+20)& (0+255),b	;volatile
 15703  008C60  0012               	return		;funcret
 15704  008C62                     __end_of_InitSoftStart:
 15705                           	callstack 0
 15706                           
 15707 ;; *************** function _InitWalkAutoTime *****************
 15708 ;; Defined at:
 15709 ;;		line 103 in file "sm_ControlGate_MC50.c"
 15710 ;; Parameters:    Size  Location     Type
 15711 ;;		None
 15712 ;; Auto vars:     Size  Location     Type
 15713 ;;		None
 15714 ;; Return value:  Size  Location     Type
 15715 ;;                  1    wreg      void 
 15716 ;; Registers used:
 15717 ;;		wreg, status,2, status,0, prodl, prodh
 15718 ;; Tracked objects:
 15719 ;;		On entry : 0/1
 15720 ;;		On exit  : 3F/0
 15721 ;;		Unchanged: 0/0
 15722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15724 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15726 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15727 ;;Total ram usage:        0 bytes
 15728 ;; Hardware stack levels used: 1
 15729 ;; Hardware stack levels required when called: 4
 15730 ;; This function calls:
 15731 ;;		Nothing
 15732 ;; This function is called by:
 15733 ;;		_actionZone_Closed
 15734 ;;		_actionZone_Opening
 15735 ;;		_actionZone_Opened
 15736 ;;		_actionZone_Closing
 15737 ;; This function uses a non-reentrant model
 15738 ;;
 15739                           
 15740                           	psect	text47
 15741  009AC8                     __ptext47:
 15742                           	callstack 0
 15743  009AC8                     _InitWalkAutoTime:
 15744                           	callstack 24
 15745                           
 15746                           ;sm_ControlGate_MC50.c: 105:     ts_system.timeWaitToClose = ((int) var_sys_NVM.autoTime
      +                          WalkClose * (1000/50));
 15747                           
 15748                           ;incstack = 0
 15749  009AC8  0100               	movlb	0	; () banked
 15750  009ACA  519E               	movf	(_var_sys_NVM+6)& (0+255),w,b	;volatile
 15751  009ACC  0D14               	mullw	20
 15752  009ACE  CFF3 F1B1          	movff	prodl,_ts_system+18	;volatile
 15753  009AD2  CFF4 F1B2          	movff	prodh,_ts_system+19	;volatile
 15754                           
 15755                           ; BSR set to: 0
 15756                           ;sm_ControlGate_MC50.c: 106:     var_sys.AutoCloseActive = var_sys_NVM.autoTimeWalkClose
      +                          ;
 15757  009AD6  C09E  F123         	movff	_var_sys_NVM+6,_var_sys+35	;volatile
 15758                           
 15759                           ; BSR set to: 0
 15760  009ADA  0012               	return		;funcret
 15761  009ADC                     __end_of_InitWalkAutoTime:
 15762                           	callstack 0
 15763                           
 15764 ;; *************** function _GetSecurityStateInOpening *****************
 15765 ;; Defined at:
 15766 ;;		line 738 in file "inputs_MC50.c"
 15767 ;; Parameters:    Size  Location     Type
 15768 ;;		None
 15769 ;; Auto vars:     Size  Location     Type
 15770 ;;		None
 15771 ;; Return value:  Size  Location     Type
 15772 ;;                  1    wreg      enum E10564
 15773 ;; Registers used:
 15774 ;;		wreg, status,2, status,0, cstack
 15775 ;; Tracked objects:
 15776 ;;		On entry : 0/0
 15777 ;;		On exit  : 3E/0
 15778 ;;		Unchanged: 0/0
 15779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15783 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15784 ;;Total ram usage:        0 bytes
 15785 ;; Hardware stack levels used: 1
 15786 ;; Hardware stack levels required when called: 5
 15787 ;; This function calls:
 15788 ;;		_SetSegmentValueIntermitent
 15789 ;; This function is called by:
 15790 ;;		_actionZone_Closed
 15791 ;;		_actionZone_Opening
 15792 ;; This function uses a non-reentrant model
 15793 ;;
 15794                           
 15795                           	psect	text48
 15796  007C80                     __ptext48:
 15797                           	callstack 0
 15798  007C80                     _GetSecurityStateInOpening:
 15799                           	callstack 23
 15800                           
 15801                           ;inputs_MC50.c: 747:     if((var_sys_NVM.securityBandIsON == 1) && (var_sys.SecurityBarI
      +                          sObstructed == YES)&&(var_sys_NVM.securityBandInOpen == 1)&& (var_sys_NVM.Stopboton == 0
      +                          ))
 15802                           
 15803                           ; BSR set to: 0
 15804                           ;incstack = 0
 15805  007C80  0100               	movlb	0	; () banked
 15806  007C82  05A1               	decf	(_var_sys_NVM+9)& (0+255),w,b	;volatile
 15807  007C84  A4D8               	btfss	status,2,c
 15808  007C86  D01B               	goto	l21365
 15809                           
 15810                           ; BSR set to: 0
 15811  007C88  0101               	movlb	1	; () banked
 15812  007C8A  0502               	decf	(_var_sys+2)& (0+255),w,b	;volatile
 15813  007C8C  A4D8               	btfss	status,2,c
 15814  007C8E  D017               	goto	l21365
 15815                           
 15816                           ; BSR set to: 1
 15817  007C90  0100               	movlb	0	; () banked
 15818  007C92  05A3               	decf	(_var_sys_NVM+11)& (0+255),w,b	;volatile
 15819  007C94  A4D8               	btfss	status,2,c
 15820  007C96  D013               	goto	l21365
 15821                           
 15822                           ; BSR set to: 0
 15823  007C98  51AE               	movf	(_var_sys_NVM+22)& (0+255),w,b	;volatile
 15824  007C9A  A4D8               	btfss	status,2,c
 15825  007C9C  D010               	goto	l21365
 15826                           
 15827                           ; BSR set to: 0
 15828                           ;inputs_MC50.c: 748:     {;inputs_MC50.c: 750:         ts_system.timeSinalizationDigit=(
      +                           200/50);
 15829  007C9E  0E00               	movlw	0
 15830  007CA0  0101               	movlb	1	; () banked
 15831  007CA2  6FAC               	movwf	(_ts_system+13)& (0+255),b	;volatile
 15832  007CA4  0E04               	movlw	4
 15833  007CA6  6FAB               	movwf	(_ts_system+12)& (0+255),b	;volatile
 15834                           
 15835                           ; BSR set to: 1
 15836                           ;inputs_MC50.c: 751:         SetSegmentValueIntermitent(dL,dA,(1000/50));
 15837  007CA8  0E0A               	movlw	10
 15838  007CAA  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 15839  007CAC  0E00               	movlw	0
 15840  007CAE  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 15841  007CB0  0E14               	movlw	20
 15842  007CB2  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 15843  007CB4  0E12               	movlw	18
 15844  007CB6  EC93  F04A         	call	_SetSegmentValueIntermitent
 15845  007CBA                     l21359:
 15846                           
 15847                           ; BSR set to: 1
 15848                           ;inputs_MC50.c: 752:         return YES;
 15849  007CBA  0E01               	movlw	1
 15850  007CBC  0012               	return	
 15851  007CBE                     l21365:
 15852  007CBE  0100               	movlb	0	; () banked
 15853  007CC0  05AE               	decf	(_var_sys_NVM+22)& (0+255),w,b	;volatile
 15854  007CC2  A4D8               	btfss	status,2,c
 15855  007CC4  D013               	goto	l21379
 15856                           
 15857                           ; BSR set to: 0
 15858  007CC6  0101               	movlb	1	; () banked
 15859  007CC8  0502               	decf	(_var_sys+2)& (0+255),w,b	;volatile
 15860  007CCA  A4D8               	btfss	status,2,c
 15861  007CCC  D00F               	goto	l21379
 15862                           
 15863                           ; BSR set to: 1
 15864                           ;inputs_MC50.c: 756:     {;inputs_MC50.c: 758:         ts_system.timeSinalizationDigit=(
      +                           200/50);
 15865  007CCE  0E00               	movlw	0
 15866  007CD0  6FAC               	movwf	(_ts_system+13)& (0+255),b	;volatile
 15867  007CD2  0E04               	movlw	4
 15868  007CD4  6FAB               	movwf	(_ts_system+12)& (0+255),b	;volatile
 15869                           
 15870                           ; BSR set to: 1
 15871                           ;inputs_MC50.c: 759:         SetSegmentValueIntermitent(d5,dt,(1000/50));
 15872  007CD6  0E15               	movlw	21
 15873  007CD8  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 15874  007CDA  0E00               	movlw	0
 15875  007CDC  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 15876  007CDE  0E14               	movlw	20
 15877  007CE0  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 15878  007CE2  0E05               	movlw	5
 15879  007CE4  EC93  F04A         	call	_SetSegmentValueIntermitent
 15880                           
 15881                           ; BSR set to: 1
 15882                           ;inputs_MC50.c: 760:         return ST;
 15883  007CE8  0E02               	movlw	2
 15884  007CEA  0012               	return	
 15885  007CEC                     l21379:
 15886  007CEC  0100               	movlb	0	; () banked
 15887  007CEE  059F               	decf	(_var_sys_NVM+7)& (0+255),w,b	;volatile
 15888  007CF0  A4D8               	btfss	status,2,c
 15889  007CF2  D017               	goto	l21395
 15890                           
 15891                           ; BSR set to: 0
 15892  007CF4  0101               	movlb	1	; () banked
 15893  007CF6  0501               	decf	(_var_sys+1)& (0+255),w,b	;volatile
 15894  007CF8  A4D8               	btfss	status,2,c
 15895  007CFA  D013               	goto	l21395
 15896                           
 15897                           ; BSR set to: 1
 15898  007CFC  0100               	movlb	0	; () banked
 15899  007CFE  05A0               	decf	(_var_sys_NVM+8)& (0+255),w,b	;volatile
 15900  007D00  A4D8               	btfss	status,2,c
 15901  007D02  D00F               	goto	l21395
 15902                           
 15903                           ; BSR set to: 0
 15904                           ;inputs_MC50.c: 764:     {;inputs_MC50.c: 766:         ts_system.timeSinalizationDigit=(
      +                           200/50);
 15905  007D04  0E00               	movlw	0
 15906  007D06  0101               	movlb	1	; () banked
 15907  007D08  6FAC               	movwf	(_ts_system+13)& (0+255),b	;volatile
 15908  007D0A  0E04               	movlw	4
 15909  007D0C  6FAB               	movwf	(_ts_system+12)& (0+255),b	;volatile
 15910                           
 15911                           ; BSR set to: 1
 15912                           ;inputs_MC50.c: 767:         SetSegmentValueIntermitent(dL,dE,(1000/50));
 15913  007D0E  0E0E               	movlw	14
 15914  007D10  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 15915  007D12  0E00               	movlw	0
 15916  007D14  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 15917  007D16  0E14               	movlw	20
 15918  007D18  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 15919  007D1A  0E12               	movlw	18
 15920  007D1C  EC93  F04A         	call	_SetSegmentValueIntermitent
 15921  007D20  D7CC               	goto	l21359
 15922  007D22                     l21395:
 15923                           
 15924                           ;inputs_MC50.c: 771:     {;inputs_MC50.c: 772:         return NO;
 15925  007D22  0E00               	movlw	0
 15926  007D24  0012               	return		;funcret
 15927  007D26                     __end_of_GetSecurityStateInOpening:
 15928                           	callstack 0
 15929                           
 15930 ;; *************** function _SetSegmentValueIntermitent *****************
 15931 ;; Defined at:
 15932 ;;		line 201 in file "outputs_MC50.c"
 15933 ;; Parameters:    Size  Location     Type
 15934 ;;  d1              1    wreg     unsigned char 
 15935 ;;  d2              1   15[COMRAM] unsigned char 
 15936 ;;  time            2   16[COMRAM] int 
 15937 ;; Auto vars:     Size  Location     Type
 15938 ;;  d1              1   18[COMRAM] unsigned char 
 15939 ;; Return value:  Size  Location     Type
 15940 ;;                  1    wreg      void 
 15941 ;; Registers used:
 15942 ;;		wreg, status,2, status,0
 15943 ;; Tracked objects:
 15944 ;;		On entry : 3E/0
 15945 ;;		On exit  : 3F/1
 15946 ;;		Unchanged: 0/0
 15947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15948 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15949 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15951 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15952 ;;Total ram usage:        4 bytes
 15953 ;; Hardware stack levels used: 1
 15954 ;; Hardware stack levels required when called: 4
 15955 ;; This function calls:
 15956 ;;		Nothing
 15957 ;; This function is called by:
 15958 ;;		_GetSecurityStateInOpening
 15959 ;;		_GetSecurityStateInClosing
 15960 ;;		_sm_execute_ControlGate
 15961 ;;		_actionZone_Opening
 15962 ;;		_actionZone_Closing
 15963 ;; This function uses a non-reentrant model
 15964 ;;
 15965                           
 15966                           	psect	text49
 15967  009526                     __ptext49:
 15968                           	callstack 0
 15969  009526                     _SetSegmentValueIntermitent:
 15970                           	callstack 24
 15971                           
 15972                           ;incstack = 0
 15973                           ;SetSegmentValueIntermitent@d1 stored from wreg
 15974  009526  6E13               	movwf	SetSegmentValueIntermitent@d1^0,c
 15975                           
 15976                           ;outputs_MC50.c: 201: void SetSegmentValueIntermitent(char d1, char d2,int time);outputs
      +                          _MC50.c: 202: {;outputs_MC50.c: 204:     if ( main_stateMachine.current_state != st_Menu
      +                          Configuration && (ts_system.timeoutMenu == 0 && button_struct.timer < (1000/50)))
 15977  009528  0101               	movlb	1	; () banked
 15978  00952A  05F2               	decf	_main_stateMachine& (0+255),w,b
 15979  00952C  11F3               	iorwf	(_main_stateMachine+1)& (0+255),w,b
 15980  00952E  B4D8               	btfsc	status,2,c
 15981  009530  0012               	return	
 15982                           
 15983                           ; BSR set to: 1
 15984  009532  51AD               	movf	(_ts_system+14)& (0+255),w,b	;volatile
 15985  009534  11AE               	iorwf	(_ts_system+15)& (0+255),w,b	;volatile
 15986  009536  A4D8               	btfss	status,2,c
 15987  009538  0012               	return	
 15988                           
 15989                           ; BSR set to: 1
 15990  00953A  0E14               	movlw	20
 15991  00953C  604E               	cpfslt	(_button_struct+2)^0,c	;volatile
 15992  00953E  0012               	return	
 15993                           
 15994                           ; BSR set to: 1
 15995                           ;outputs_MC50.c: 205:     {;outputs_MC50.c: 206:         dispStruct.display_grp.value_di
      +                          splay1=d1;
 15996  009540  C013  F072         	movff	SetSegmentValueIntermitent@d1,_dispStruct	;volatile
 15997                           
 15998                           ;outputs_MC50.c: 207:         dispStruct.display_grp.value_display2=d2;
 15999  009544  C010  F073         	movff	SetSegmentValueIntermitent@d2,_dispStruct+1	;volatile
 16000                           
 16001                           ;outputs_MC50.c: 208:         dispStruct.intermitentFreq=time;
 16002  009548  C011  F075         	movff	SetSegmentValueIntermitent@time,_dispStruct+3	;volatile
 16003  00954C  C012  F076         	movff	SetSegmentValueIntermitent@time+1,_dispStruct+4	;volatile
 16004                           
 16005                           ; BSR set to: 1
 16006  009550  0012               	return		;funcret
 16007  009552                     __end_of_SetSegmentValueIntermitent:
 16008                           	callstack 0
 16009                           
 16010 ;; *************** function _GetOpenOrder *****************
 16011 ;; Defined at:
 16012 ;;		line 330 in file "inputs_MC50.c"
 16013 ;; Parameters:    Size  Location     Type
 16014 ;;		None
 16015 ;; Auto vars:     Size  Location     Type
 16016 ;;		None
 16017 ;; Return value:  Size  Location     Type
 16018 ;;                  1    wreg      enum E10539
 16019 ;; Registers used:
 16020 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16021 ;; Tracked objects:
 16022 ;;		On entry : 3E/1
 16023 ;;		On exit  : 0/0
 16024 ;;		Unchanged: 0/0
 16025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16029 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16030 ;;Total ram usage:        0 bytes
 16031 ;; Hardware stack levels used: 1
 16032 ;; Hardware stack levels required when called: 5
 16033 ;; This function calls:
 16034 ;;		_SetSegmentValueIntermitentMain
 16035 ;;		___lbdiv
 16036 ;; This function is called by:
 16037 ;;		_sm_execute_ControlGate
 16038 ;;		_actionZone_Closed
 16039 ;;		_actionZone_Opening
 16040 ;;		_actionZone_Opened
 16041 ;;		_actionZone_Closing
 16042 ;;		_sm_execute_ControlLearning
 16043 ;; This function uses a non-reentrant model
 16044 ;;
 16045                           
 16046                           	psect	text50
 16047  005B4C                     __ptext50:
 16048                           	callstack 0
 16049  005B4C                     _GetOpenOrder:
 16050                           	callstack 23
 16051                           
 16052                           ;inputs_MC50.c: 332:    if (var_sys.LearningIsEnabled == NO){
 16053                           
 16054                           ; BSR set to: 1
 16055                           ;incstack = 0
 16056  005B4C  0101               	movlb	1	; () banked
 16057  005B4E  5126               	movf	(_var_sys+38)& (0+255),w,b	;volatile
 16058  005B50  A4D8               	btfss	status,2,c
 16059  005B52  D0C0               	goto	l21335
 16060                           
 16061                           ; BSR set to: 1
 16062                           ;inputs_MC50.c: 334:        if(ts_system.TimeCurrentAlarm>0)
 16063  005B54  BFCA               	btfsc	(_ts_system+43)& (0+255),7,b	;volatile
 16064  005B56  D019               	goto	l21227
 16065  005B58  51CA               	movf	(_ts_system+43)& (0+255),w,b	;volatile
 16066  005B5A  E103               	bnz	u24400
 16067  005B5C  05C9               	decf	(_ts_system+42)& (0+255),w,b	;volatile
 16068  005B5E  A0D8               	btfss	status,0,c
 16069  005B60  D014               	goto	l21227
 16070  005B62                     u24400:
 16071                           
 16072                           ; BSR set to: 1
 16073                           ;inputs_MC50.c: 336:         {;inputs_MC50.c: 337:             SetSegmentValueIntermiten
      +                          tMain(dL,d1,(1000/50));
 16074  005B62  0E01               	movlw	1
 16075  005B64  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16076  005B66  0E00               	movlw	0
 16077  005B68  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16078  005B6A  0E14               	movlw	20
 16079  005B6C  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16080  005B6E  0E12               	movlw	18
 16081  005B70  EC6E  F04D         	call	_SetSegmentValueIntermitentMain
 16082                           
 16083                           ;inputs_MC50.c: 338:             ts_system.timeSinalizationDigit=( 500/50);
 16084  005B74  0E00               	movlw	0
 16085  005B76  0101               	movlb	1	; () banked
 16086  005B78  6FAC               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16087  005B7A  0E0A               	movlw	10
 16088  005B7C  6FAB               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16089                           
 16090                           ; BSR set to: 1
 16091                           ;inputs_MC50.c: 339:             rfCMD.processed=1;
 16092  005B7E  0E01               	movlw	1
 16093  005B80  6E45               	movwf	(_rfCMD+10)^0,c	;volatile
 16094                           
 16095                           ; BSR set to: 1
 16096                           ;inputs_MC50.c: 340:             button_struct.processed=1;
 16097  005B82  0E01               	movlw	1
 16098  005B84  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 16099  005B86                     l21221:
 16100                           
 16101                           ;inputs_MC50.c: 341:             return NoCMD;
 16102  005B86  0E00               	movlw	0
 16103  005B88  0012               	return	
 16104  005B8A                     l21227:
 16105                           
 16106                           ; BSR set to: 1
 16107  005B8A  0100               	movlb	0	; () banked
 16108  005B8C  51A8               	movf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 16109  005B8E  B4D8               	btfsc	status,2,c
 16110  005B90  D02F               	goto	l21261
 16111                           
 16112                           ; BSR set to: 0
 16113                           ;inputs_MC50.c: 344:         {;inputs_MC50.c: 345:             if(button_struct.current=
      +                          =0x35)
 16114  005B92  0E35               	movlw	53
 16115  005B94  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16116  005B96  A4D8               	btfss	status,2,c
 16117  005B98  D017               	goto	l21245
 16118                           
 16119                           ; BSR set to: 0
 16120                           ;inputs_MC50.c: 346:             {;inputs_MC50.c: 347:                 ts_system.timeSin
      +                          alizationDigit=( 500/50);
 16121  005B9A  0E00               	movlw	0
 16122  005B9C  0101               	movlb	1	; () banked
 16123  005B9E  6FAC               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16124  005BA0  0E0A               	movlw	10
 16125  005BA2  6FAB               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16126                           
 16127                           ; BSR set to: 1
 16128                           ;inputs_MC50.c: 348:                 SetSegmentValueIntermitentMain(dL,d0,( 200/50));
 16129  005BA4  0E00               	movlw	0
 16130  005BA6  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16131  005BA8  0E00               	movlw	0
 16132  005BAA  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16133  005BAC  0E04               	movlw	4
 16134  005BAE  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16135  005BB0  0E12               	movlw	18
 16136  005BB2  EC6E  F04D         	call	_SetSegmentValueIntermitentMain
 16137                           
 16138                           ;inputs_MC50.c: 349:                 if (var_sys_NVM.homemPresente == 2){
 16139  005BB6  0E02               	movlw	2
 16140  005BB8  0100               	movlb	0	; () banked
 16141  005BBA  19A8               	xorwf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 16142  005BBC  A4D8               	btfss	status,2,c
 16143  005BBE  D002               	goto	l21239
 16144  005BC0                     u24430:
 16145                           
 16146                           ; BSR set to: 0
 16147                           ;inputs_MC50.c: 350:                    button_struct.processed=1;
 16148  005BC0  0E01               	movlw	1
 16149  005BC2  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 16150  005BC4                     l21239:
 16151                           
 16152                           ; BSR set to: 0
 16153                           ;inputs_MC50.c: 352:                 return TypeFullOpen;
 16154  005BC4  0E03               	movlw	3
 16155  005BC6  0012               	return	
 16156  005BC8                     l21245:
 16157                           
 16158                           ; BSR set to: 0
 16159  005BC8  0E33               	movlw	51
 16160  005BCA  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16161  005BCC  A4D8               	btfss	status,2,c
 16162  005BCE  D7DB               	goto	l21221
 16163                           
 16164                           ; BSR set to: 0
 16165                           ;inputs_MC50.c: 355:             {;inputs_MC50.c: 356:                 ts_system.timeSin
      +                          alizationDigit=( 500/50);
 16166  005BD0  0E00               	movlw	0
 16167  005BD2  0101               	movlb	1	; () banked
 16168  005BD4  6FAC               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16169  005BD6  0E0A               	movlw	10
 16170  005BD8  6FAB               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16171                           
 16172                           ; BSR set to: 1
 16173                           ;inputs_MC50.c: 357:                 SetSegmentValueIntermitentMain(dL,d5,( 200/50));
 16174  005BDA  0E05               	movlw	5
 16175  005BDC  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16176  005BDE  0E00               	movlw	0
 16177  005BE0  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16178  005BE2  0E04               	movlw	4
 16179  005BE4  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16180  005BE6  0E12               	movlw	18
 16181  005BE8  EC6E  F04D         	call	_SetSegmentValueIntermitentMain
 16182  005BEC                     l21251:
 16183                           
 16184                           ;inputs_MC50.c: 359:                 return TypeFullClose;
 16185  005BEC  0E04               	movlw	4
 16186  005BEE  0012               	return	
 16187  005BF0                     l21261:
 16188                           
 16189                           ; BSR set to: 0
 16190  005BF0  0E35               	movlw	53
 16191  005BF2  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16192  005BF4  A4D8               	btfss	status,2,c
 16193  005BF6  D016               	goto	l21283
 16194                           
 16195                           ; BSR set to: 0
 16196                           ;inputs_MC50.c: 371:         {;inputs_MC50.c: 372:             ts_system.timeSinalizatio
      +                          nDigit=(1000/50)*2;
 16197  005BF8  0E00               	movlw	0
 16198  005BFA  0101               	movlb	1	; () banked
 16199  005BFC  6FAC               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16200  005BFE  0E28               	movlw	40
 16201  005C00  6FAB               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16202                           
 16203                           ; BSR set to: 1
 16204                           ;inputs_MC50.c: 373:             SetSegmentValueIntermitentMain(dL,d0,( 200/50));
 16205  005C02  0E00               	movlw	0
 16206  005C04  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16207  005C06  0E00               	movlw	0
 16208  005C08  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16209  005C0A  0E04               	movlw	4
 16210  005C0C  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16211  005C0E  0E12               	movlw	18
 16212  005C10  EC6E  F04D         	call	_SetSegmentValueIntermitentMain
 16213                           
 16214                           ;inputs_MC50.c: 374:             if(var_sys_NVM.logicDigital==1)
 16215  005C14  0100               	movlb	0	; () banked
 16216  005C16  05A9               	decf	(_var_sys_NVM+17)& (0+255),w,b	;volatile
 16217  005C18  B4D8               	btfsc	status,2,c
 16218  005C1A  D7D2               	goto	u24430
 16219  005C1C                     l21277:
 16220                           
 16221                           ;inputs_MC50.c: 380:             {;inputs_MC50.c: 381:                 button_struct.pro
      +                          cessed=1;
 16222  005C1C  0E01               	movlw	1
 16223  005C1E  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 16224                           
 16225                           ;inputs_MC50.c: 382:                 return TypeFull;
 16226  005C20  0E01               	movlw	1
 16227  005C22  0012               	return	
 16228  005C24                     l21283:
 16229                           
 16230                           ; BSR set to: 0
 16231  005C24  0E33               	movlw	51
 16232  005C26  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16233  005C28  A4D8               	btfss	status,2,c
 16234  005C2A  D019               	goto	l21305
 16235                           
 16236                           ; BSR set to: 0
 16237                           ;inputs_MC50.c: 387:         {;inputs_MC50.c: 389:             ts_system.timeSinalizatio
      +                          nDigit=(1000/50)*2;
 16238  005C2C  0E00               	movlw	0
 16239  005C2E  0101               	movlb	1	; () banked
 16240  005C30  6FAC               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16241  005C32  0E28               	movlw	40
 16242  005C34  6FAB               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16243                           
 16244                           ; BSR set to: 1
 16245                           ;inputs_MC50.c: 390:             SetSegmentValueIntermitentMain(dL,d5,( 200/50));
 16246  005C36  0E05               	movlw	5
 16247  005C38  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16248  005C3A  0E00               	movlw	0
 16249  005C3C  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16250  005C3E  0E04               	movlw	4
 16251  005C40  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16252  005C42  0E12               	movlw	18
 16253  005C44  EC6E  F04D         	call	_SetSegmentValueIntermitentMain
 16254                           
 16255                           ;inputs_MC50.c: 391:             if(var_sys_NVM.logicDigital==1)
 16256  005C48  0100               	movlb	0	; () banked
 16257  005C4A  05A9               	decf	(_var_sys_NVM+17)& (0+255),w,b	;volatile
 16258  005C4C  A4D8               	btfss	status,2,c
 16259  005C4E  D003               	goto	l21299
 16260                           
 16261                           ; BSR set to: 0
 16262                           ;inputs_MC50.c: 392:             {;inputs_MC50.c: 393:                  button_struct.pr
      +                          ocessed=1;
 16263  005C50  0E01               	movlw	1
 16264  005C52  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 16265  005C54  D7CB               	goto	l21251
 16266  005C56                     l21299:
 16267                           
 16268                           ; BSR set to: 0
 16269                           ;inputs_MC50.c: 399:             {;inputs_MC50.c: 400:                  button_struct.pr
      +                          ocessed=1;
 16270  005C56  0E01               	movlw	1
 16271  005C58  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 16272                           
 16273                           ; BSR set to: 0
 16274                           ;inputs_MC50.c: 402:                 return TypeWalk;
 16275  005C5A  0E02               	movlw	2
 16276  005C5C  0012               	return	
 16277  005C5E                     l21305:
 16278                           
 16279                           ; BSR set to: 0
 16280  005C5E  0E36               	movlw	54
 16281  005C60  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16282  005C62  A4D8               	btfss	status,2,c
 16283  005C64  D00F               	goto	l21319
 16284                           
 16285                           ; BSR set to: 0
 16286                           ;inputs_MC50.c: 408:         {;inputs_MC50.c: 409:             ts_system.timeSinalizatio
      +                          nDigit=(1000/50)*2;
 16287  005C66  0E00               	movlw	0
 16288  005C68  0101               	movlb	1	; () banked
 16289  005C6A  6FAC               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16290  005C6C  0E28               	movlw	40
 16291  005C6E  6FAB               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16292                           
 16293                           ; BSR set to: 1
 16294                           ;inputs_MC50.c: 410:             SetSegmentValueIntermitentMain(dP,dU,( 200/50));
 16295  005C70  0E13               	movlw	19
 16296  005C72  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16297  005C74  0E00               	movlw	0
 16298  005C76  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16299  005C78  0E04               	movlw	4
 16300  005C7A  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16301  005C7C  0E10               	movlw	16
 16302  005C7E  EC6E  F04D         	call	_SetSegmentValueIntermitentMain
 16303  005C82  D7CC               	goto	l21277
 16304  005C84                     l21319:
 16305                           
 16306                           ; BSR set to: 0
 16307                           ;inputs_MC50.c: 417:         {;inputs_MC50.c: 418:             if(rfCMD.currentType!=NoC
      +                          MD && rfCMD.currentType!=TypeProgrammingModeFull && rfCMD.currentType!=TypeProgrammingMo
      +                          deWalk )
 16308  005C84  503B               	movf	_rfCMD^0,w,c	;volatile
 16309  005C86  B4D8               	btfsc	status,2,c
 16310  005C88  D023               	goto	l21331
 16311                           
 16312                           ; BSR set to: 0
 16313  005C8A  0E06               	movlw	6
 16314  005C8C  183B               	xorwf	_rfCMD^0,w,c	;volatile
 16315  005C8E  B4D8               	btfsc	status,2,c
 16316  005C90  D01F               	goto	l21331
 16317                           
 16318                           ; BSR set to: 0
 16319  005C92  0E05               	movlw	5
 16320  005C94  183B               	xorwf	_rfCMD^0,w,c	;volatile
 16321  005C96  B4D8               	btfsc	status,2,c
 16322  005C98  D01B               	goto	l21331
 16323                           
 16324                           ; BSR set to: 0
 16325                           ;inputs_MC50.c: 419:             {;inputs_MC50.c: 420:                 SetSegmentValueIn
      +                          termitentMain(rfCMD.currentPosMem/10, rfCMD.currentPosMem-((rfCMD.currentPosMem/10)*10),
      +                          ( 200/50));
 16326  005C9A  0E0A               	movlw	10
 16327  005C9C  6E10               	movwf	___lbdiv@divisor^0,c
 16328  005C9E  5043               	movf	(_rfCMD+8)^0,w,c	;volatile
 16329  005CA0  ECC6  F049         	call	___lbdiv
 16330  005CA4  0DF6               	mullw	246
 16331  005CA6  50F3               	movf	243,w,c
 16332  005CA8  2443               	addwf	(_rfCMD+8)^0,w,c	;volatile
 16333  005CAA  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16334  005CAC  0E00               	movlw	0
 16335  005CAE  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16336  005CB0  0E04               	movlw	4
 16337  005CB2  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16338  005CB4  0E0A               	movlw	10
 16339  005CB6  6E10               	movwf	___lbdiv@divisor^0,c
 16340  005CB8  5043               	movf	(_rfCMD+8)^0,w,c	;volatile
 16341  005CBA  ECC6  F049         	call	___lbdiv
 16342  005CBE  EC6E  F04D         	call	_SetSegmentValueIntermitentMain
 16343                           
 16344                           ;inputs_MC50.c: 421:                 ts_system.timeSinalizationDigit=(1000/50)*2;
 16345  005CC2  0E00               	movlw	0
 16346  005CC4  0101               	movlb	1	; () banked
 16347  005CC6  6FAC               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16348  005CC8  0E28               	movlw	40
 16349  005CCA  6FAB               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16350                           
 16351                           ; BSR set to: 1
 16352                           ;inputs_MC50.c: 422:                 rfCMD.processed=1;
 16353  005CCC  0E01               	movlw	1
 16354  005CCE  6E45               	movwf	(_rfCMD+10)^0,c	;volatile
 16355  005CD0                     l21331:
 16356                           
 16357                           ;inputs_MC50.c: 425:             return rfCMD.currentType;
 16358  005CD0  503B               	movf	_rfCMD^0,w,c	;volatile
 16359  005CD2  0012               	return	
 16360  005CD4                     l21335:
 16361                           
 16362                           ; BSR set to: 1
 16363                           ;inputs_MC50.c: 428:     {;inputs_MC50.c: 429:        if(rfCMD.currentType!=NoCMD ){
 16364  005CD4  503B               	movf	_rfCMD^0,w,c	;volatile
 16365  005CD6  B4D8               	btfsc	status,2,c
 16366  005CD8  D01B               	goto	l21343
 16367                           
 16368                           ; BSR set to: 1
 16369                           ;inputs_MC50.c: 430:                   SetSegmentValueIntermitentMain(rfCMD.currentPosMe
      +                          m/10, rfCMD.currentPosMem-((rfCMD.currentPosMem/10)*10),( 200/50));
 16370  005CDA  0E0A               	movlw	10
 16371  005CDC  6E10               	movwf	___lbdiv@divisor^0,c
 16372  005CDE  5043               	movf	(_rfCMD+8)^0,w,c	;volatile
 16373  005CE0  ECC6  F049         	call	___lbdiv
 16374  005CE4  0DF6               	mullw	246
 16375  005CE6  50F3               	movf	243,w,c
 16376  005CE8  2443               	addwf	(_rfCMD+8)^0,w,c	;volatile
 16377  005CEA  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16378  005CEC  0E00               	movlw	0
 16379  005CEE  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16380  005CF0  0E04               	movlw	4
 16381  005CF2  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16382  005CF4  0E0A               	movlw	10
 16383  005CF6  6E10               	movwf	___lbdiv@divisor^0,c
 16384  005CF8  5043               	movf	(_rfCMD+8)^0,w,c	;volatile
 16385  005CFA  ECC6  F049         	call	___lbdiv
 16386  005CFE  EC6E  F04D         	call	_SetSegmentValueIntermitentMain
 16387                           
 16388                           ;inputs_MC50.c: 431:                 ts_system.timeSinalizationDigit=(1000/50)*1;
 16389  005D02  0E00               	movlw	0
 16390  005D04  0101               	movlb	1	; () banked
 16391  005D06  6FAC               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16392  005D08  0E14               	movlw	20
 16393  005D0A  6FAB               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16394                           
 16395                           ; BSR set to: 1
 16396                           ;inputs_MC50.c: 432:                 rfCMD.processed=1;
 16397  005D0C  0E01               	movlw	1
 16398  005D0E  6E45               	movwf	(_rfCMD+10)^0,c	;volatile
 16399  005D10                     l21343:
 16400                           
 16401                           ; BSR set to: 1
 16402                           ;inputs_MC50.c: 434:        return rfCMD.currentType;
 16403  005D10  503B               	movf	_rfCMD^0,w,c	;volatile
 16404  005D12  0012               	return		;funcret
 16405  005D14                     __end_of_GetOpenOrder:
 16406                           	callstack 0
 16407                           
 16408 ;; *************** function ___lbdiv *****************
 16409 ;; Defined at:
 16410 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\lbdiv.c"
 16411 ;; Parameters:    Size  Location     Type
 16412 ;;  dividend        1    wreg     unsigned char 
 16413 ;;  divisor         1   15[COMRAM] unsigned char 
 16414 ;; Auto vars:     Size  Location     Type
 16415 ;;  dividend        1   16[COMRAM] unsigned char 
 16416 ;;  quotient        1   18[COMRAM] unsigned char 
 16417 ;;  counter         1   17[COMRAM] unsigned char 
 16418 ;; Return value:  Size  Location     Type
 16419 ;;                  1    wreg      unsigned char 
 16420 ;; Registers used:
 16421 ;;		wreg, status,2, status,0
 16422 ;; Tracked objects:
 16423 ;;		On entry : 0/0
 16424 ;;		On exit  : 0/0
 16425 ;;		Unchanged: 0/0
 16426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16427 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16428 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16430 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16431 ;;Total ram usage:        4 bytes
 16432 ;; Hardware stack levels used: 1
 16433 ;; Hardware stack levels required when called: 4
 16434 ;; This function calls:
 16435 ;;		Nothing
 16436 ;; This function is called by:
 16437 ;;		_GetOpenOrder
 16438 ;;		_sm_execute_menuConfiguration
 16439 ;; This function uses a non-reentrant model
 16440 ;;
 16441                           
 16442                           	psect	text51
 16443  00938C                     __ptext51:
 16444                           	callstack 0
 16445  00938C                     ___lbdiv:
 16446                           	callstack 24
 16447                           
 16448                           ;incstack = 0
 16449                           ;___lbdiv@dividend stored from wreg
 16450  00938C  6E11               	movwf	___lbdiv@dividend^0,c
 16451  00938E  0E00               	movlw	0
 16452  009390  6E13               	movwf	___lbdiv@quotient^0,c
 16453  009392  5010               	movf	___lbdiv@divisor^0,w,c
 16454  009394  B4D8               	btfsc	status,2,c
 16455  009396  D015               	goto	l21091
 16456  009398  0E01               	movlw	1
 16457  00939A  6E12               	movwf	___lbdiv@counter^0,c
 16458  00939C  D003               	goto	l21079
 16459  00939E                     l21075:
 16460  00939E  90D8               	bcf	status,0,c
 16461  0093A0  3610               	rlcf	___lbdiv@divisor^0,f,c
 16462  0093A2  2A12               	incf	___lbdiv@counter^0,f,c
 16463  0093A4                     l21079:
 16464  0093A4  AE10               	btfss	___lbdiv@divisor^0,7,c
 16465  0093A6  D7FB               	goto	l21075
 16466  0093A8                     u24230:
 16467  0093A8  90D8               	bcf	status,0,c
 16468  0093AA  3613               	rlcf	___lbdiv@quotient^0,f,c
 16469  0093AC  5010               	movf	___lbdiv@divisor^0,w,c
 16470  0093AE  5C11               	subwf	___lbdiv@dividend^0,w,c
 16471  0093B0  A0D8               	btfss	status,0,c
 16472  0093B2  D003               	goto	l21087
 16473  0093B4  5010               	movf	___lbdiv@divisor^0,w,c
 16474  0093B6  5E11               	subwf	___lbdiv@dividend^0,f,c
 16475  0093B8  8013               	bsf	___lbdiv@quotient^0,0,c
 16476  0093BA                     l21087:
 16477  0093BA  90D8               	bcf	status,0,c
 16478  0093BC  3210               	rrcf	___lbdiv@divisor^0,f,c
 16479  0093BE  2E12               	decfsz	___lbdiv@counter^0,f,c
 16480  0093C0  D7F3               	goto	u24230
 16481  0093C2                     l21091:
 16482  0093C2  5013               	movf	___lbdiv@quotient^0,w,c
 16483  0093C4  0012               	return		;funcret
 16484  0093C6                     __end_of___lbdiv:
 16485                           	callstack 0
 16486                           
 16487 ;; *************** function _SetSegmentValueIntermitentMain *****************
 16488 ;; Defined at:
 16489 ;;		line 193 in file "outputs_MC50.c"
 16490 ;; Parameters:    Size  Location     Type
 16491 ;;  d1              1    wreg     unsigned char 
 16492 ;;  d2              1   27[COMRAM] unsigned char 
 16493 ;;  time            2   28[COMRAM] int 
 16494 ;; Auto vars:     Size  Location     Type
 16495 ;;  d1              1   30[COMRAM] unsigned char 
 16496 ;; Return value:  Size  Location     Type
 16497 ;;                  1    wreg      void 
 16498 ;; Registers used:
 16499 ;;		wreg
 16500 ;; Tracked objects:
 16501 ;;		On entry : 0/1
 16502 ;;		On exit  : 0/0
 16503 ;;		Unchanged: 0/0
 16504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16505 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16506 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16508 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16509 ;;Total ram usage:        4 bytes
 16510 ;; Hardware stack levels used: 1
 16511 ;; Hardware stack levels required when called: 4
 16512 ;; This function calls:
 16513 ;;		Nothing
 16514 ;; This function is called by:
 16515 ;;		_GetOpenOrder
 16516 ;;		_sm_execute_main
 16517 ;;		_sm_execute_menuConfiguration
 16518 ;;		_load_New_Menu
 16519 ;;		_controlSelectRemote
 16520 ;;		_controlSaveRemote
 16521 ;; This function uses a non-reentrant model
 16522 ;;
 16523                           
 16524                           	psect	text52
 16525  009ADC                     __ptext52:
 16526                           	callstack 0
 16527  009ADC                     _SetSegmentValueIntermitentMain:
 16528                           	callstack 22
 16529                           
 16530                           ;incstack = 0
 16531                           ;SetSegmentValueIntermitentMain@d1 stored from wreg
 16532  009ADC  6E1F               	movwf	SetSegmentValueIntermitentMain@d1^0,c
 16533                           
 16534                           ;outputs_MC50.c: 193: void SetSegmentValueIntermitentMain(char d1, char d2,int time);out
      +                          puts_MC50.c: 194: {;outputs_MC50.c: 195:     dispStruct.display_grp.value_display1=d1;
 16535  009ADE  C01F  F072         	movff	SetSegmentValueIntermitentMain@d1,_dispStruct	;volatile
 16536                           
 16537                           ;outputs_MC50.c: 196:     dispStruct.display_grp.value_display2=d2;
 16538  009AE2  C01C  F073         	movff	SetSegmentValueIntermitentMain@d2,_dispStruct+1	;volatile
 16539                           
 16540                           ;outputs_MC50.c: 197:     dispStruct.intermitentFreq=time;
 16541  009AE6  C01D  F075         	movff	SetSegmentValueIntermitentMain@time,_dispStruct+3	;volatile
 16542  009AEA  C01E  F076         	movff	SetSegmentValueIntermitentMain@time+1,_dispStruct+4	;volatile
 16543  009AEE  0012               	return		;funcret
 16544  009AF0                     __end_of_SetSegmentValueIntermitentMain:
 16545                           	callstack 0
 16546                           
 16547 ;; *************** function _readbutton *****************
 16548 ;; Defined at:
 16549 ;;		line 471 in file "inputs_MC50.c"
 16550 ;; Parameters:    Size  Location     Type
 16551 ;;		None
 16552 ;; Auto vars:     Size  Location     Type
 16553 ;;		None
 16554 ;; Return value:  Size  Location     Type
 16555 ;;                  1    wreg      void 
 16556 ;; Registers used:
 16557 ;;		wreg, status,2, status,0
 16558 ;; Tracked objects:
 16559 ;;		On entry : 3F/1
 16560 ;;		On exit  : 3F/1
 16561 ;;		Unchanged: 0/0
 16562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16566 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16567 ;;Total ram usage:        0 bytes
 16568 ;; Hardware stack levels used: 1
 16569 ;; Hardware stack levels required when called: 4
 16570 ;; This function calls:
 16571 ;;		Nothing
 16572 ;; This function is called by:
 16573 ;;		_main
 16574 ;; This function uses a non-reentrant model
 16575 ;;
 16576                           
 16577                           	psect	text53
 16578  0089B0                     __ptext53:
 16579                           	callstack 0
 16580  0089B0                     _readbutton:
 16581                           	callstack 26
 16582                           
 16583                           ; BSR set to: 1
 16584                           ;inputs_MC50.c: 474:  static unsigned char key1=0, key2=0;;inputs_MC50.c: 479:  key2 = (
      +                           PORTB & 0x37 );
 16585                           
 16586                           ;incstack = 0
 16587  0089B0  508E               	movf	142,w,c	;volatile
 16588  0089B2  0B37               	andlw	55
 16589  0089B4  6F9B               	movwf	readbutton@key2& (0+255),b
 16590  0089B6  F000               	nop		;# 
 16591  0089B8  F000               	nop		;# 
 16592  0089BA  F000               	nop		;# 
 16593                           
 16594                           ;inputs_MC50.c: 483:  key1 = ( PORTB & 0x37 );
 16595  0089BC  508E               	movf	142,w,c	;volatile
 16596  0089BE  0B37               	andlw	55
 16597  0089C0  0100               	movlb	0	; () banked
 16598  0089C2  6F86               	movwf	readbutton@key1& (0+255),b
 16599                           
 16600                           ;inputs_MC50.c: 485:  if ( key2 == key1 )
 16601  0089C4  5186               	movf	readbutton@key1& (0+255),w,b
 16602  0089C6  0101               	movlb	1	; () banked
 16603  0089C8  199B               	xorwf	readbutton@key2& (0+255),w,b
 16604  0089CA  A4D8               	btfss	status,2,c
 16605  0089CC  D003               	goto	l24621
 16606                           
 16607                           ; BSR set to: 1
 16608                           ;inputs_MC50.c: 486:  {;inputs_MC50.c: 487:         button_struct.current = key1;
 16609  0089CE  C086  F04D         	movff	readbutton@key1,_button_struct+1	;volatile
 16610                           
 16611                           ;inputs_MC50.c: 488:  }
 16612  0089D2  D002               	goto	l24623
 16613  0089D4                     l24621:
 16614                           
 16615                           ; BSR set to: 1
 16616                           ;inputs_MC50.c: 490:     {;inputs_MC50.c: 491:         button_struct.current = 0x37;
 16617  0089D4  0E37               	movlw	55
 16618  0089D6  6E4D               	movwf	(_button_struct+1)^0,c	;volatile
 16619  0089D8                     l24623:
 16620                           
 16621                           ; BSR set to: 1
 16622                           ;inputs_MC50.c: 494:     if ( button_struct.current == 0x37 || ( button_struct.current !
      +                          = button_struct.old && button_struct.current == 0x00))
 16623  0089D8  0E37               	movlw	55
 16624  0089DA  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16625  0089DC  B4D8               	btfsc	status,2,c
 16626  0089DE  D007               	goto	u29880
 16627                           
 16628                           ; BSR set to: 1
 16629  0089E0  504C               	movf	_button_struct^0,w,c	;volatile
 16630  0089E2  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16631  0089E4  B4D8               	btfsc	status,2,c
 16632  0089E6  D007               	goto	l24631
 16633                           
 16634                           ; BSR set to: 1
 16635  0089E8  504D               	movf	(_button_struct+1)^0,w,c	;volatile
 16636  0089EA  A4D8               	btfss	status,2,c
 16637  0089EC  D004               	goto	l24631
 16638  0089EE                     u29880:
 16639                           
 16640                           ; BSR set to: 1
 16641                           ;inputs_MC50.c: 495:  {;inputs_MC50.c: 496:   button_struct.processed=0;
 16642  0089EE  0E00               	movlw	0
 16643  0089F0  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 16644                           
 16645                           ;inputs_MC50.c: 497:         button_struct.timer=0;
 16646  0089F2  0E00               	movlw	0
 16647  0089F4  6E4E               	movwf	(_button_struct+2)^0,c	;volatile
 16648  0089F6                     l24631:
 16649                           
 16650                           ; BSR set to: 1
 16651                           ;inputs_MC50.c: 500:  if ( button_struct.current != 0x37 )
 16652  0089F6  0E37               	movlw	55
 16653  0089F8  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16654  0089FA  B4D8               	btfsc	status,2,c
 16655  0089FC  D007               	goto	l24639
 16656                           
 16657                           ; BSR set to: 1
 16658                           ;inputs_MC50.c: 501:  {;inputs_MC50.c: 502:   button_struct.old = button_struct.current;
 16659  0089FE  C04D  F04C         	movff	_button_struct+1,_button_struct	;volatile
 16660                           
 16661                           ; BSR set to: 1
 16662                           ;inputs_MC50.c: 504:         if ( button_struct.timer < 250 )
 16663  008A02  0EFA               	movlw	250
 16664  008A04  604E               	cpfslt	(_button_struct+2)^0,c	;volatile
 16665  008A06  D004               	goto	l24641
 16666                           
 16667                           ; BSR set to: 1
 16668                           ;inputs_MC50.c: 505:         {;inputs_MC50.c: 506:             button_struct.timer++;
 16669  008A08  2A4E               	incf	(_button_struct+2)^0,f,c	;volatile
 16670  008A0A  D002               	goto	l24641
 16671  008A0C                     l24639:
 16672                           
 16673                           ; BSR set to: 1
 16674                           ;inputs_MC50.c: 515:  {;inputs_MC50.c: 516:   button_struct.timer=0;
 16675  008A0C  0E00               	movlw	0
 16676  008A0E  6E4E               	movwf	(_button_struct+2)^0,c	;volatile
 16677  008A10                     l24641:
 16678                           
 16679                           ; BSR set to: 1
 16680                           ;inputs_MC50.c: 520:  if ( button_struct.processed == 1 )
 16681  008A10  044F               	decf	(_button_struct+3)^0,w,c	;volatile
 16682  008A12  A4D8               	btfss	status,2,c
 16683  008A14  0012               	return	
 16684                           
 16685                           ; BSR set to: 1
 16686                           ;inputs_MC50.c: 521:  {;inputs_MC50.c: 522:   button_struct.current = 0x37;
 16687  008A16  0E37               	movlw	55
 16688  008A18  6E4D               	movwf	(_button_struct+1)^0,c	;volatile
 16689                           
 16690                           ; BSR set to: 1
 16691  008A1A  0012               	return		;funcret
 16692  008A1C                     __end_of_readbutton:
 16693                           	callstack 0
 16694                           
 16695 ;; *************** function _read_package *****************
 16696 ;; Defined at:
 16697 ;;		line 21 in file "eusartpackage.c"
 16698 ;; Parameters:    Size  Location     Type
 16699 ;;		None
 16700 ;; Auto vars:     Size  Location     Type
 16701 ;;  package         7   23[COMRAM] struct package_t
 16702 ;; Return value:  Size  Location     Type
 16703 ;;                  7   16[COMRAM] struct package_t
 16704 ;; Registers used:
 16705 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
 16706 ;; Tracked objects:
 16707 ;;		On entry : 3F/0
 16708 ;;		On exit  : 3F/E
 16709 ;;		Unchanged: 0/0
 16710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16711 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16712 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16714 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16715 ;;Total ram usage:       14 bytes
 16716 ;; Hardware stack levels used: 1
 16717 ;; Hardware stack levels required when called: 5
 16718 ;; This function calls:
 16719 ;;		_EUSART1_Read
 16720 ;; This function is called by:
 16721 ;;		_main
 16722 ;; This function uses a non-reentrant model
 16723 ;;
 16724                           
 16725                           	psect	text54
 16726  008F72                     __ptext54:
 16727                           	callstack 0
 16728  008F72                     _read_package:
 16729                           	callstack 25
 16730                           
 16731                           ; BSR set to: 0
 16732                           ;eusartpackage.c: 22:         struct package_t package;;eusartpackage.c: 24:         if(
      +                          EUSART1_Read()!=0x0A){
 16733                           
 16734                           ; BSR set to: 1
 16735                           ;incstack = 0
 16736  008F72  EC7C  F048         	call	_EUSART1_Read	;wreg free
 16737  008F76  0A0A               	xorlw	10
 16738  008F78  B4D8               	btfsc	status,2,c
 16739  008F7A  D00C               	goto	l24799
 16740  008F7C                     u30410:
 16741                           
 16742                           ; BSR set to: 14
 16743                           ;eusartpackage.c: 25:             package.valid=0;
 16744  008F7C  0E00               	movlw	0
 16745  008F7E  6E1E               	movwf	(read_package@package+6)^0,c
 16746                           
 16747                           ; BSR set to: 14
 16748                           ;eusartpackage.c: 26:             return package;
 16749  008F80  EE20  F018         	lfsr	2,read_package@package
 16750  008F84  EE00  F011         	lfsr	0,?_read_package
 16751  008F88  0E06               	movlw	6
 16752  008F8A                     u30421:
 16753  008F8A  CFDB FFEB          	movff	plusw2,plusw0
 16754  008F8E  06E8               	decf	wreg,f,c
 16755  008F90  E2FC               	bc	u30421
 16756  008F92  0012               	return	
 16757  008F94                     l24799:
 16758                           
 16759                           ; BSR set to: 14
 16760                           ;eusartpackage.c: 29:             package.startbyte=0x0A;
 16761  008F94  0E0A               	movlw	10
 16762  008F96  6E1C               	movwf	(read_package@package+4)^0,c
 16763                           
 16764                           ; BSR set to: 14
 16765                           ;eusartpackage.c: 32:         package.functioncode=EUSART1_Read();
 16766  008F98  EC7C  F048         	call	_EUSART1_Read	;wreg free
 16767  008F9C  6E18               	movwf	read_package@package^0,c
 16768                           
 16769                           ; BSR set to: 14
 16770                           ;eusartpackage.c: 33:         package.address=EUSART1_Read();
 16771  008F9E  EC7C  F048         	call	_EUSART1_Read	;wreg free
 16772  008FA2  6E19               	movwf	(read_package@package+1)^0,c
 16773                           
 16774                           ; BSR set to: 14
 16775                           ;eusartpackage.c: 34:         package.data.data8[0]=EUSART1_Read();
 16776  008FA4  EC7C  F048         	call	_EUSART1_Read	;wreg free
 16777  008FA8  6E1A               	movwf	(read_package@package+2)^0,c
 16778                           
 16779                           ; BSR set to: 14
 16780                           ;eusartpackage.c: 35:         package.data.data8[1]=EUSART1_Read();
 16781  008FAA  EC7C  F048         	call	_EUSART1_Read	;wreg free
 16782  008FAE  6E1B               	movwf	(read_package@package+3)^0,c
 16783                           
 16784                           ; BSR set to: 14
 16785                           ;eusartpackage.c: 38:         if(EUSART1_Read()!=0x0D){
 16786  008FB0  EC7C  F048         	call	_EUSART1_Read	;wreg free
 16787  008FB4  0A0D               	xorlw	13
 16788  008FB6  A4D8               	btfss	status,2,c
 16789  008FB8  D7E1               	goto	u30410
 16790                           
 16791                           ; BSR set to: 14
 16792                           ;eusartpackage.c: 43:             package.endbyte=0x0D;
 16793  008FBA  0E0D               	movlw	13
 16794  008FBC  6E1D               	movwf	(read_package@package+5)^0,c
 16795                           
 16796                           ; BSR set to: 14
 16797                           ;eusartpackage.c: 46:         package.valid=1;
 16798  008FBE  0E01               	movlw	1
 16799  008FC0  D7DE               	goto	L76
 16800  008FC2                     __end_of_read_package:
 16801                           	callstack 0
 16802                           
 16803 ;; *************** function _EUSART1_Read *****************
 16804 ;; Defined at:
 16805 ;;		line 151 in file "mcc_generated_files/eusart1.c"
 16806 ;; Parameters:    Size  Location     Type
 16807 ;;		None
 16808 ;; Auto vars:     Size  Location     Type
 16809 ;;  readValue       1   15[COMRAM] unsigned char 
 16810 ;; Return value:  Size  Location     Type
 16811 ;;                  1    wreg      unsigned char 
 16812 ;; Registers used:
 16813 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16814 ;; Tracked objects:
 16815 ;;		On entry : 31/0
 16816 ;;		On exit  : 3F/E
 16817 ;;		Unchanged: 0/0
 16818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16820 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16822 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16823 ;;Total ram usage:        1 bytes
 16824 ;; Hardware stack levels used: 1
 16825 ;; Hardware stack levels required when called: 4
 16826 ;; This function calls:
 16827 ;;		Nothing
 16828 ;; This function is called by:
 16829 ;;		_read_package
 16830 ;; This function uses a non-reentrant model
 16831 ;;
 16832                           
 16833                           	psect	text55
 16834  0090F8                     __ptext55:
 16835                           	callstack 0
 16836  0090F8                     _EUSART1_Read:
 16837                           	callstack 25
 16838                           
 16839                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
 16840                           
 16841                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
 16842                           
 16843                           ; BSR set to: 14
 16844                           ;incstack = 0
 16845  0090F8  0100               	movlb	0	; () banked
 16846  0090FA  5193               	movf	_eusart1RxCount& (0+255),w,b	;volatile
 16847  0090FC  B4D8               	btfsc	status,2,c
 16848  0090FE  D7FC               	goto	__ptext55
 16849                           
 16850                           ; BSR set to: 0
 16851                           ;mcc_generated_files/eusart1.c: 159:     eusart1RxLastError = eusart1RxStatusBuffer[eusa
      +                          rt1RxTail];
 16852  009100  0E74               	movlw	low _eusart1RxStatusBuffer
 16853  009102  2594               	addwf	_eusart1RxTail& (0+255),w,b	;volatile
 16854  009104  6ED9               	movwf	fsr2l,c
 16855  009106  6ADA               	clrf	fsr2h,c
 16856  009108  0E02               	movlw	high _eusart1RxStatusBuffer
 16857  00910A  22DA               	addwfc	fsr2h,f,c
 16858  00910C  50DF               	movf	indf2,w,c
 16859  00910E  0101               	movlb	1	; () banked
 16860  009110  6F9E               	movwf	_eusart1RxLastError& (0+255),b	;volatile
 16861                           
 16862                           ;mcc_generated_files/eusart1.c: 161:     readValue = eusart1RxBuffer[eusart1RxTail++];
 16863  009112  0E7C               	movlw	low _eusart1RxBuffer
 16864  009114  0100               	movlb	0	; () banked
 16865  009116  2594               	addwf	_eusart1RxTail& (0+255),w,b	;volatile
 16866  009118  6ED9               	movwf	fsr2l,c
 16867  00911A  6ADA               	clrf	fsr2h,c
 16868  00911C  0E02               	movlw	high _eusart1RxBuffer
 16869  00911E  22DA               	addwfc	fsr2h,f,c
 16870  009120  50DF               	movf	indf2,w,c
 16871  009122  6E10               	movwf	EUSART1_Read@readValue^0,c
 16872                           
 16873                           ; BSR set to: 0
 16874  009124  2B94               	incf	_eusart1RxTail& (0+255),f,b	;volatile
 16875                           
 16876                           ; BSR set to: 0
 16877                           ;mcc_generated_files/eusart1.c: 162:     if(sizeof(eusart1RxBuffer) <= eusart1RxTail)
 16878  009126  0E07               	movlw	7
 16879  009128  6594               	cpfsgt	_eusart1RxTail& (0+255),b
 16880  00912A  D002               	goto	l22461
 16881                           
 16882                           ; BSR set to: 0
 16883                           ;mcc_generated_files/eusart1.c: 163:     {;mcc_generated_files/eusart1.c: 164:         e
      +                          usart1RxTail = 0;
 16884  00912C  0E00               	movlw	0
 16885  00912E  6F94               	movwf	_eusart1RxTail& (0+255),b	;volatile
 16886  009130                     l22461:
 16887                           
 16888                           ; BSR set to: 0
 16889                           ;mcc_generated_files/eusart1.c: 166:     PIE3bits.RC1IE = 0;
 16890  009130  010E               	movlb	14	; () banked
 16891  009132  9BC5               	bcf	197,5,b	;volatile
 16892                           
 16893                           ; BSR set to: 14
 16894                           ;mcc_generated_files/eusart1.c: 167:     eusart1RxCount--;
 16895  009134  0100               	movlb	0	; () banked
 16896  009136  0793               	decf	_eusart1RxCount& (0+255),f,b	;volatile
 16897                           
 16898                           ; BSR set to: 0
 16899                           ;mcc_generated_files/eusart1.c: 168:     PIE3bits.RC1IE = 1;
 16900  009138  010E               	movlb	14	; () banked
 16901  00913A  8BC5               	bsf	197,5,b	;volatile
 16902                           
 16903                           ; BSR set to: 14
 16904                           ;mcc_generated_files/eusart1.c: 170:     return readValue;
 16905  00913C  5010               	movf	EUSART1_Read@readValue^0,w,c
 16906                           
 16907                           ; BSR set to: 14
 16908  00913E  0012               	return		;funcret
 16909  009140                     __end_of_EUSART1_Read:
 16910                           	callstack 0
 16911                           
 16912 ;; *************** function _readRFButtons *****************
 16913 ;; Defined at:
 16914 ;;		line 231 in file "inputs_MC50.c"
 16915 ;; Parameters:    Size  Location     Type
 16916 ;;		None
 16917 ;; Auto vars:     Size  Location     Type
 16918 ;;		None
 16919 ;; Return value:  Size  Location     Type
 16920 ;;                  1    wreg      void 
 16921 ;; Registers used:
 16922 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 16923 ;; Tracked objects:
 16924 ;;		On entry : 3F/1
 16925 ;;		On exit  : 3E/0
 16926 ;;		Unchanged: 0/0
 16927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16931 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16932 ;;Total ram usage:        0 bytes
 16933 ;; Hardware stack levels used: 1
 16934 ;; Hardware stack levels required when called: 15
 16935 ;; This function calls:
 16936 ;;		_DecryptPacket_12BIT
 16937 ;;		_keeloqDecryptPacket
 16938 ;; This function is called by:
 16939 ;;		_main
 16940 ;; This function uses a non-reentrant model
 16941 ;;
 16942                           
 16943                           	psect	text56
 16944  006384                     __ptext56:
 16945                           	callstack 0
 16946  006384                     _readRFButtons:
 16947                           	callstack 15
 16948                           
 16949                           ; BSR set to: 1
 16950                           ;inputs_MC50.c: 232:     static unsigned char key1 = 0;;inputs_MC50.c: 233:     static u
      +                          int32_t serial = 0;;inputs_MC50.c: 234:     static uint16_t rollingCode= 0;;inputs_MC50.
      +                          c: 235:     static TypeCMD keyType = 0;;inputs_MC50.c: 236:     static TypeRemote_st typ
      +                          eRemote;;inputs_MC50.c: 241:     if(RFFull)
 16951                           
 16952                           ; BSR set to: 14
 16953                           ;incstack = 0
 16954  006384  0100               	movlb	0	; () banked
 16955  006386  518B               	movf	_RFFull& (0+255),w,b	;volatile
 16956  006388  B4D8               	btfsc	status,2,c
 16957  00638A  D0B9               	goto	l24607
 16958                           
 16959                           ; BSR set to: 0
 16960                           ;inputs_MC50.c: 242:     {;inputs_MC50.c: 244:          if(RFFull_12BIT==0)
 16961  00638C  518A               	movf	_RFFull_12BIT& (0+255),w,b	;volatile
 16962  00638E  A4D8               	btfss	status,2,c
 16963  006390  D00B               	goto	l24553
 16964                           
 16965                           ; BSR set to: 0
 16966                           ;inputs_MC50.c: 245:          {;inputs_MC50.c: 246:             keyType = keeloqDecryptP
      +                          acket(BufferRF,&classic_data);
 16967  006392  0EC6               	movlw	low _BufferRF
 16968  006394  6FE0               	movwf	keeloqDecryptPacket@data& (0+255),b
 16969  006396  0E02               	movlw	high _BufferRF
 16970  006398  6FE1               	movwf	(keeloqDecryptPacket@data+1)& (0+255),b
 16971  00639A  0E90               	movlw	low _classic_data
 16972  00639C  6FE2               	movwf	keeloqDecryptPacket@classic_data& (0+255),b
 16973  00639E  0E02               	movlw	high _classic_data
 16974  0063A0  6FE3               	movwf	(keeloqDecryptPacket@classic_data+1)& (0+255),b
 16975  0063A2  ECBD  F02C         	call	_keeloqDecryptPacket	;wreg free
 16976  0063A6  D00A               	goto	L77
 16977  0063A8                     l24553:
 16978                           
 16979                           ; BSR set to: 0
 16980                           ;inputs_MC50.c: 249:          {;inputs_MC50.c: 250:             keyType = DecryptPacket_
      +                          12BIT(BufferRF,&classic_data);
 16981  0063A8  0EC6               	movlw	low _BufferRF
 16982  0063AA  6FE0               	movwf	DecryptPacket_12BIT@data& (0+255),b
 16983  0063AC  0E02               	movlw	high _BufferRF
 16984  0063AE  6FE1               	movwf	(DecryptPacket_12BIT@data+1)& (0+255),b
 16985  0063B0  0E90               	movlw	low _classic_data
 16986  0063B2  6FE2               	movwf	DecryptPacket_12BIT@classic_data& (0+255),b
 16987  0063B4  0E02               	movlw	high _classic_data
 16988  0063B6  6FE3               	movwf	(DecryptPacket_12BIT@classic_data+1)& (0+255),b
 16989  0063B8  ECBD  F03F         	call	_DecryptPacket_12BIT	;wreg free
 16990  0063BC                     L77:
 16991  0063BC  6F87               	movwf	readRFButtons@keyType& (0+255),b
 16992                           
 16993                           ; BSR set to: 0
 16994                           ;inputs_MC50.c: 254:         key1 = classic_data.fcode1;
 16995  0063BE  C29C  F088         	movff	_classic_data+12,readRFButtons@key1
 16996                           
 16997                           ; BSR set to: 0
 16998                           ;inputs_MC50.c: 255:         serial = classic_data.serialnumber;
 16999  0063C2  C294  F181         	movff	_classic_data+4,readRFButtons@serial
 17000  0063C6  C295  F182         	movff	_classic_data+5,readRFButtons@serial+1
 17001  0063CA  C296  F183         	movff	_classic_data+6,readRFButtons@serial+2
 17002  0063CE  C297  F184         	movff	_classic_data+7,readRFButtons@serial+3
 17003                           
 17004                           ; BSR set to: 0
 17005                           ;inputs_MC50.c: 256:         rollingCode = classic_data.sync;
 17006  0063D2  C298  F189         	movff	_classic_data+8,readRFButtons@rollingCode
 17007  0063D6  C299  F18A         	movff	_classic_data+9,readRFButtons@rollingCode+1
 17008                           
 17009                           ; BSR set to: 0
 17010                           ;inputs_MC50.c: 257:         typeRemote = classic_data.type;
 17011  0063DA  C29E  F19C         	movff	_classic_data+14,readRFButtons@typeRemote
 17012                           
 17013                           ; BSR set to: 0
 17014                           ;inputs_MC50.c: 270:         if (var_sys.LearningIsEnabled == YES){
 17015  0063DE  0101               	movlb	1	; () banked
 17016  0063E0  0526               	decf	(_var_sys+38)& (0+255),w,b	;volatile
 17017  0063E2  A4D8               	btfss	status,2,c
 17018  0063E4  D01E               	goto	l24575
 17019                           
 17020                           ; BSR set to: 1
 17021                           ;inputs_MC50.c: 272:              if (keyType==NoCMD || rfCMD.currentKey!=key1 || rfCMD.
      +                          currentSerial!=serial || keyType!=rfCMD.currentType)
 17022  0063E6  0100               	movlb	0	; () banked
 17023  0063E8  5187               	movf	readRFButtons@keyType& (0+255),w,b
 17024  0063EA  B4D8               	btfsc	status,2,c
 17025  0063EC  D044               	goto	u29750
 17026                           
 17027                           ; BSR set to: 0
 17028  0063EE  5188               	movf	readRFButtons@key1& (0+255),w,b
 17029  0063F0  183C               	xorwf	(_rfCMD+1)^0,w,c	;volatile
 17030  0063F2  A4D8               	btfss	status,2,c
 17031  0063F4  D040               	goto	u29750
 17032                           
 17033                           ; BSR set to: 0
 17034  0063F6  0101               	movlb	1	; () banked
 17035  0063F8  5181               	movf	readRFButtons@serial& (0+255),w,b
 17036  0063FA  183D               	xorwf	(_rfCMD+2)^0,w,c	;volatile
 17037  0063FC  E13C               	bnz	l24587
 17038  0063FE  5182               	movf	(readRFButtons@serial+1)& (0+255),w,b
 17039  006400  183E               	xorwf	(_rfCMD+3)^0,w,c	;volatile
 17040  006402  E139               	bnz	l24587
 17041  006404  5183               	movf	(readRFButtons@serial+2)& (0+255),w,b
 17042  006406  183F               	xorwf	(_rfCMD+4)^0,w,c	;volatile
 17043  006408  E136               	bnz	l24587
 17044  00640A  5184               	movf	(readRFButtons@serial+3)& (0+255),w,b
 17045  00640C  1840               	xorwf	(_rfCMD+5)^0,w,c	;volatile
 17046  00640E  A4D8               	btfss	status,2,c
 17047  006410  D032               	goto	u29750
 17048                           
 17049                           ; BSR set to: 1
 17050  006412  0100               	movlb	0	; () banked
 17051  006414  5187               	movf	readRFButtons@keyType& (0+255),w,b
 17052  006416  183B               	xorwf	_rfCMD^0,w,c	;volatile
 17053  006418  A4D8               	btfss	status,2,c
 17054  00641A  D02D               	goto	u29750
 17055  00641C                     l1654:
 17056                           
 17057                           ;inputs_MC50.c: 274:                 rfCMD.timer=0;
 17058  00641C  0E00               	movlw	0
 17059  00641E  6E44               	movwf	(_rfCMD+9)^0,c	;volatile
 17060                           
 17061                           ;inputs_MC50.c: 275:         }
 17062  006420  D038               	goto	l1657
 17063  006422                     l24575:
 17064                           
 17065                           ; BSR set to: 1
 17066  006422  0100               	movlb	0	; () banked
 17067  006424  5187               	movf	readRFButtons@keyType& (0+255),w,b
 17068  006426  B4D8               	btfsc	status,2,c
 17069  006428  D026               	goto	u29750
 17070                           
 17071                           ; BSR set to: 0
 17072  00642A  5187               	movf	readRFButtons@keyType& (0+255),w,b
 17073  00642C  183B               	xorwf	_rfCMD^0,w,c	;volatile
 17074  00642E  B4D8               	btfsc	status,2,c
 17075  006430  D00F               	goto	u29730
 17076                           
 17077                           ; BSR set to: 0
 17078  006432  0101               	movlb	1	; () banked
 17079  006434  BFB4               	btfsc	(_ts_system+21)& (0+255),7,b	;volatile
 17080  006436  D005               	goto	u29720
 17081  006438  51B4               	movf	(_ts_system+21)& (0+255),w,b	;volatile
 17082  00643A  E10A               	bnz	l24583
 17083  00643C  05B3               	decf	(_ts_system+20)& (0+255),w,b	;volatile
 17084  00643E  B0D8               	btfsc	status,0,c
 17085  006440  D007               	goto	u29730
 17086  006442                     u29720:
 17087                           
 17088                           ; BSR set to: 1
 17089  006442  5189               	movf	readRFButtons@rollingCode& (0+255),w,b
 17090  006444  1841               	xorwf	(_rfCMD+6)^0,w,c	;volatile
 17091  006446  E117               	bnz	l24587
 17092  006448  518A               	movf	(readRFButtons@rollingCode+1)& (0+255),w,b
 17093  00644A  1842               	xorwf	(_rfCMD+7)^0,w,c	;volatile
 17094  00644C  A4D8               	btfss	status,2,c
 17095  00644E  D013               	goto	u29750
 17096  006450                     u29730:
 17097  006450                     l24583:
 17098  006450  0100               	movlb	0	; () banked
 17099  006452  5188               	movf	readRFButtons@key1& (0+255),w,b
 17100  006454  183C               	xorwf	(_rfCMD+1)^0,w,c	;volatile
 17101  006456  A4D8               	btfss	status,2,c
 17102  006458  D00E               	goto	u29750
 17103                           
 17104                           ; BSR set to: 0
 17105  00645A  0101               	movlb	1	; () banked
 17106  00645C  5181               	movf	readRFButtons@serial& (0+255),w,b
 17107  00645E  183D               	xorwf	(_rfCMD+2)^0,w,c	;volatile
 17108  006460  E10A               	bnz	u29750
 17109  006462  5182               	movf	(readRFButtons@serial+1)& (0+255),w,b
 17110  006464  183E               	xorwf	(_rfCMD+3)^0,w,c	;volatile
 17111  006466  E107               	bnz	u29750
 17112  006468  5183               	movf	(readRFButtons@serial+2)& (0+255),w,b
 17113  00646A  183F               	xorwf	(_rfCMD+4)^0,w,c	;volatile
 17114  00646C  E104               	bnz	u29750
 17115  00646E  5184               	movf	(readRFButtons@serial+3)& (0+255),w,b
 17116  006470  1840               	xorwf	(_rfCMD+5)^0,w,c	;volatile
 17117  006472  B4D8               	btfsc	status,2,c
 17118  006474  D003               	goto	l24589
 17119  006476                     u29750:
 17120  006476                     l24587:
 17121                           
 17122                           ;inputs_MC50.c: 278:         {;inputs_MC50.c: 279:            rfCMD.processed=0;
 17123  006476  0E00               	movlw	0
 17124  006478  6E45               	movwf	(_rfCMD+10)^0,c	;volatile
 17125  00647A  D7D0               	goto	l1654
 17126  00647C                     l24589:
 17127                           
 17128                           ; BSR set to: 1
 17129  00647C  BFB4               	btfsc	(_ts_system+21)& (0+255),7,b	;volatile
 17130  00647E  D005               	goto	u29760
 17131  006480  51B4               	movf	(_ts_system+21)& (0+255),w,b	;volatile
 17132  006482  E107               	bnz	l1657
 17133  006484  05B3               	decf	(_ts_system+20)& (0+255),w,b	;volatile
 17134  006486  B0D8               	btfsc	status,0,c
 17135  006488  D004               	goto	l1657
 17136  00648A                     u29760:
 17137                           
 17138                           ; BSR set to: 1
 17139  00648A  0E02               	movlw	2
 17140  00648C  199C               	xorwf	readRFButtons@typeRemote& (0+255),w,b
 17141  00648E  B4D8               	btfsc	status,2,c
 17142  006490  D7F2               	goto	u29750
 17143  006492                     l1657:
 17144                           
 17145                           ;inputs_MC50.c: 289:         ts_system.TimeLastCommand=( 500/50);
 17146  006492  0E00               	movlw	0
 17147  006494  0101               	movlb	1	; () banked
 17148  006496  6FB4               	movwf	(_ts_system+21)& (0+255),b	;volatile
 17149  006498  0E0A               	movlw	10
 17150  00649A  6FB3               	movwf	(_ts_system+20)& (0+255),b	;volatile
 17151                           
 17152                           ; BSR set to: 1
 17153                           ;inputs_MC50.c: 291:         rfCMD.currentType=keyType;
 17154  00649C  C087  F03B         	movff	readRFButtons@keyType,_rfCMD	;volatile
 17155                           
 17156                           ;inputs_MC50.c: 292:         if
 17157  0064A0  503B               	movf	_rfCMD^0,w,c	;volatile
 17158  0064A2  B4D8               	btfsc	status,2,c
 17159  0064A4  D01A               	goto	u29810
 17160                           
 17161                           ; BSR set to: 1
 17162  0064A6  0100               	movlb	0	; () banked
 17163  0064A8  5188               	movf	readRFButtons@key1& (0+255),w,b
 17164  0064AA  183C               	xorwf	(_rfCMD+1)^0,w,c	;volatile
 17165  0064AC  A4D8               	btfss	status,2,c
 17166  0064AE  D015               	goto	u29810
 17167                           
 17168                           ; BSR set to: 0
 17169  0064B0  0101               	movlb	1	; () banked
 17170  0064B2  5181               	movf	readRFButtons@serial& (0+255),w,b
 17171  0064B4  183D               	xorwf	(_rfCMD+2)^0,w,c	;volatile
 17172  0064B6  E111               	bnz	l1667
 17173  0064B8  5182               	movf	(readRFButtons@serial+1)& (0+255),w,b
 17174  0064BA  183E               	xorwf	(_rfCMD+3)^0,w,c	;volatile
 17175  0064BC  E10E               	bnz	l1667
 17176  0064BE  5183               	movf	(readRFButtons@serial+2)& (0+255),w,b
 17177  0064C0  183F               	xorwf	(_rfCMD+4)^0,w,c	;volatile
 17178  0064C2  E10B               	bnz	l1667
 17179  0064C4  5184               	movf	(readRFButtons@serial+3)& (0+255),w,b
 17180  0064C6  1840               	xorwf	(_rfCMD+5)^0,w,c	;volatile
 17181  0064C8  A4D8               	btfss	status,2,c
 17182  0064CA  D007               	goto	u29810
 17183                           
 17184                           ; BSR set to: 1
 17185  0064CC  5189               	movf	readRFButtons@rollingCode& (0+255),w,b
 17186  0064CE  1841               	xorwf	(_rfCMD+6)^0,w,c	;volatile
 17187  0064D0  E104               	bnz	u29810
 17188  0064D2  518A               	movf	(readRFButtons@rollingCode+1)& (0+255),w,b
 17189  0064D4  1842               	xorwf	(_rfCMD+7)^0,w,c	;volatile
 17190  0064D6  B4D8               	btfsc	status,2,c
 17191  0064D8  D00E               	goto	l24605
 17192  0064DA                     u29810:
 17193  0064DA                     l1667:
 17194                           
 17195                           ;inputs_MC50.c: 299:         {;inputs_MC50.c: 300:             rfCMD.currentKey=key1;
 17196  0064DA  C088  F03C         	movff	readRFButtons@key1,_rfCMD+1	;volatile
 17197                           
 17198                           ;inputs_MC50.c: 301:             rfCMD.currentSerial=serial;
 17199  0064DE  C181  F03D         	movff	readRFButtons@serial,_rfCMD+2	;volatile
 17200  0064E2  C182  F03E         	movff	readRFButtons@serial+1,_rfCMD+3	;volatile
 17201  0064E6  C183  F03F         	movff	readRFButtons@serial+2,_rfCMD+4	;volatile
 17202  0064EA  C184  F040         	movff	readRFButtons@serial+3,_rfCMD+5	;volatile
 17203                           
 17204                           ;inputs_MC50.c: 302:             rfCMD.currentPosMem=classic_data.positionMem;
 17205  0064EE  C29F  F043         	movff	_classic_data+15,_rfCMD+8	;volatile
 17206                           
 17207                           ;inputs_MC50.c: 303:             rfCMD.timer=0;
 17208  0064F2  0E00               	movlw	0
 17209  0064F4  6E44               	movwf	(_rfCMD+9)^0,c	;volatile
 17210  0064F6                     l24605:
 17211                           
 17212                           ;inputs_MC50.c: 305:         rfCMD.currentRolling=rollingCode;
 17213  0064F6  C189  F041         	movff	readRFButtons@rollingCode,_rfCMD+6	;volatile
 17214  0064FA  C18A  F042         	movff	readRFButtons@rollingCode+1,_rfCMD+7	;volatile
 17215  0064FE                     l24607:
 17216                           
 17217                           ;inputs_MC50.c: 310:     if(rfCMD.processed == 1)
 17218  0064FE  0445               	decf	(_rfCMD+10)^0,w,c	;volatile
 17219  006500  A4D8               	btfss	status,2,c
 17220  006502  D003               	goto	l24611
 17221                           
 17222                           ;inputs_MC50.c: 311:     {;inputs_MC50.c: 312:        rfCMD.currentType = NoCMD;
 17223  006504  0E00               	movlw	0
 17224  006506  6E3B               	movwf	_rfCMD^0,c	;volatile
 17225                           
 17226                           ;inputs_MC50.c: 313:     }
 17227  006508  0012               	return	
 17228  00650A                     l24611:
 17229  00650A  503B               	movf	_rfCMD^0,w,c	;volatile
 17230  00650C  B4D8               	btfsc	status,2,c
 17231  00650E  0012               	return	
 17232                           
 17233                           ;inputs_MC50.c: 315:     {;inputs_MC50.c: 317:         if ( rfCMD.timer < 250 )
 17234  006510  0EFA               	movlw	250
 17235  006512  6044               	cpfslt	(_rfCMD+9)^0,c	;volatile
 17236  006514  0012               	return	
 17237                           
 17238                           ;inputs_MC50.c: 318:         {;inputs_MC50.c: 319:             rfCMD.timer++;
 17239  006516  2A44               	incf	(_rfCMD+9)^0,f,c	;volatile
 17240  006518  0012               	return		;funcret
 17241  00651A                     __end_of_readRFButtons:
 17242                           	callstack 0
 17243                           
 17244 ;; *************** function _keeloqDecryptPacket *****************
 17245 ;; Defined at:
 17246 ;;		line 299 in file "keeloqDecrypt_MC50.c"
 17247 ;; Parameters:    Size  Location     Type
 17248 ;;  data            2    8[BANK0 ] PTR unsigned char 
 17249 ;;		 -> BufferRF(9), 
 17250 ;;  classic_data    2   10[BANK0 ] PTR struct .
 17251 ;;		 -> classic_data(16), 
 17252 ;; Auto vars:     Size  Location     Type
 17253 ;;  commandType     1   17[BANK0 ] enum E10539
 17254 ;;  hop_error       1   16[BANK0 ] enum E10730
 17255 ;; Return value:  Size  Location     Type
 17256 ;;                  1    wreg      enum E10539
 17257 ;; Registers used:
 17258 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 17259 ;; Tracked objects:
 17260 ;;		On entry : 3F/0
 17261 ;;		On exit  : 3F/0
 17262 ;;		Unchanged: 0/0
 17263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17264 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17265 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17266 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17267 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17268 ;;Total ram usage:       10 bytes
 17269 ;; Hardware stack levels used: 1
 17270 ;; Hardware stack levels required when called: 14
 17271 ;; This function calls:
 17272 ;;		_DecCHK
 17273 ;;		_HopCHK
 17274 ;;		_keeloq_classic_decrypt_packet
 17275 ;;		_memcpy
 17276 ;;		_validateRemoteSerialNumber
 17277 ;;		_verifyProgramingMode
 17278 ;; This function is called by:
 17279 ;;		_readRFButtons
 17280 ;; This function uses a non-reentrant model
 17281 ;;
 17282                           
 17283                           	psect	text57
 17284  00597A                     __ptext57:
 17285                           	callstack 0
 17286  00597A                     _keeloqDecryptPacket:
 17287                           	callstack 15
 17288                           
 17289                           ; BSR set to: 0
 17290                           ;keeloqDecrypt_MC50.c: 299: TypeCMD keeloqDecryptPacket (char* data,classic_encoder_t* c
      +                          lassic_data);keeloqDecrypt_MC50.c: 300: {;keeloqDecrypt_MC50.c: 301:     result_code_t h
      +                          op_error;;keeloqDecrypt_MC50.c: 302:     TypeCMD commandType;;keeloqDecrypt_MC50.c: 303:
      +                               memcpy(classic_data, data, 8);
 17291                           
 17292                           ;incstack = 0
 17293  00597A  C0E2  F010         	movff	keeloqDecryptPacket@classic_data,memcpy@d1
 17294  00597E  C0E3  F011         	movff	keeloqDecryptPacket@classic_data+1,memcpy@d1+1
 17295  005982  C0E0  F012         	movff	keeloqDecryptPacket@data,memcpy@s1
 17296  005986  C0E1  F013         	movff	keeloqDecryptPacket@data+1,memcpy@s1+1
 17297  00598A  0E00               	movlw	0
 17298  00598C  6E15               	movwf	(memcpy@n+1)^0,c
 17299  00598E  0E08               	movlw	8
 17300  005990  6E14               	movwf	memcpy@n^0,c
 17301  005992  ECE5  F048         	call	_memcpy	;wreg free
 17302                           
 17303                           ;keeloqDecrypt_MC50.c: 304:     memcpy(&classic_data->sync, &classic_data->raw_data, 4);
 17304  005996  0E08               	movlw	8
 17305  005998  0100               	movlb	0	; () banked
 17306  00599A  25E2               	addwf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17307  00599C  6E10               	movwf	memcpy@d1^0,c
 17308  00599E  0E00               	movlw	0
 17309  0059A0  21E3               	addwfc	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17310  0059A2  6E11               	movwf	(memcpy@d1+1)^0,c
 17311  0059A4  C0E2  F012         	movff	keeloqDecryptPacket@classic_data,memcpy@s1
 17312  0059A8  C0E3  F013         	movff	keeloqDecryptPacket@classic_data+1,memcpy@s1+1
 17313  0059AC  0E00               	movlw	0
 17314  0059AE  6E15               	movwf	(memcpy@n+1)^0,c
 17315  0059B0  0E04               	movlw	4
 17316  0059B2  6E14               	movwf	memcpy@n^0,c
 17317  0059B4  ECE5  F048         	call	_memcpy	;wreg free
 17318                           
 17319                           ;keeloqDecrypt_MC50.c: 305:     classic_data->fcode1 = *((uint8_t *) (&classic_data->ser
      +                          ialnumber) + 3) >> 4;
 17320  0059B8  0100               	movlb	0	; () banked
 17321  0059BA  EE20 F00C          	lfsr	2,12
 17322  0059BE  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17323  0059C0  26D9               	addwf	fsr2l,f,c
 17324  0059C2  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17325  0059C4  22DA               	addwfc	fsr2h,f,c
 17326  0059C6  EE10 F007          	lfsr	1,7
 17327  0059CA  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17328  0059CC  26E1               	addwf	fsr1l,f,c
 17329  0059CE  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17330  0059D0  22E2               	addwfc	fsr1h,f,c
 17331  0059D2  50E7               	movf	indf1,w,c
 17332  0059D4  6FE4               	movwf	??_keeloqDecryptPacket& (0+255),b
 17333  0059D6  39E4               	swapf	??_keeloqDecryptPacket& (0+255),w,b
 17334  0059D8  0B0F               	andlw	15
 17335  0059DA  6EDF               	movwf	indf2,c
 17336                           
 17337                           ; BSR set to: 0
 17338                           ;keeloqDecrypt_MC50.c: 306:     commandType=verifyProgramingMode(classic_data);
 17339  0059DC  C0E2  F010         	movff	keeloqDecryptPacket@classic_data,verifyProgramingMode@classic_data
 17340  0059E0  C0E3  F011         	movff	keeloqDecryptPacket@classic_data+1,verifyProgramingMode@classic_data+1
 17341  0059E4  ECFF  F049         	call	_verifyProgramingMode	;wreg free
 17342  0059E8  6FE9               	movwf	keeloqDecryptPacket@commandType& (0+255),b
 17343                           
 17344                           ; BSR set to: 0
 17345                           ;keeloqDecrypt_MC50.c: 308:     if(commandType==NoCMD)
 17346  0059EA  51E9               	movf	keeloqDecryptPacket@commandType& (0+255),w,b
 17347  0059EC  A4D8               	btfss	status,2,c
 17348  0059EE  D019               	goto	l22785
 17349                           
 17350                           ; BSR set to: 0
 17351                           ;keeloqDecrypt_MC50.c: 309:     {;keeloqDecrypt_MC50.c: 310:         commandType=validat
      +                          eRemoteSerialNumber(classic_data->serialnumber,NO,&classic_data->positionMem);
 17352  0059F0  EE20 F004          	lfsr	2,4
 17353  0059F4  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17354  0059F6  26D9               	addwf	fsr2l,f,c
 17355  0059F8  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17356  0059FA  22DA               	addwfc	fsr2h,f,c
 17357  0059FC  CFDE F02E          	movff	postinc2,validateRemoteSerialNumber@serial
 17358  005A00  CFDE F02F          	movff	postinc2,validateRemoteSerialNumber@serial+1
 17359  005A04  CFDE F030          	movff	postinc2,validateRemoteSerialNumber@serial+2
 17360  005A08  CFDE F031          	movff	postinc2,validateRemoteSerialNumber@serial+3
 17361  005A0C  0E00               	movlw	0
 17362  005A0E  6E32               	movwf	validateRemoteSerialNumber@VerifyOnlySerial^0,c
 17363  005A10  0E0F               	movlw	15
 17364  005A12  25E2               	addwf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17365  005A14  6E33               	movwf	validateRemoteSerialNumber@position^0,c
 17366  005A16  0E00               	movlw	0
 17367  005A18  21E3               	addwfc	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17368  005A1A  6E34               	movwf	(validateRemoteSerialNumber@position+1)^0,c
 17369  005A1C  EC5A  F02F         	call	_validateRemoteSerialNumber	;wreg free
 17370  005A20  D004               	goto	L78
 17371  005A22                     l22785:
 17372                           
 17373                           ; BSR set to: 0
 17374  005A22  51A6               	movf	(_var_sys_NVM+14)& (0+255),w,b	;volatile
 17375  005A24  A4D8               	btfss	status,2,c
 17376  005A26  D002               	goto	l22789
 17377                           
 17378                           ; BSR set to: 0
 17379                           ;keeloqDecrypt_MC50.c: 313:     {;keeloqDecrypt_MC50.c: 314:         commandType=NoCMD;
 17380  005A28  0E00               	movlw	0
 17381  005A2A                     L78:
 17382  005A2A  6FE9               	movwf	keeloqDecryptPacket@commandType& (0+255),b
 17383  005A2C                     l22789:
 17384                           
 17385                           ; BSR set to: 0
 17386                           ;keeloqDecrypt_MC50.c: 316:     classic_data->serialnumber = classic_data->serialnumber 
      +                          & 0x0FFFFFFF;
 17387  005A2C  EE20 F004          	lfsr	2,4
 17388  005A30  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17389  005A32  26D9               	addwf	fsr2l,f,c
 17390  005A34  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17391  005A36  22DA               	addwfc	fsr2h,f,c
 17392  005A38  0EFF               	movlw	255
 17393  005A3A  14DE               	andwf	postinc2,w,c
 17394  005A3C  6FE4               	movwf	??_keeloqDecryptPacket& (0+255),b
 17395  005A3E  0EFF               	movlw	255
 17396  005A40  14DE               	andwf	postinc2,w,c
 17397  005A42  6FE5               	movwf	(??_keeloqDecryptPacket+1)& (0+255),b
 17398  005A44  0EFF               	movlw	255
 17399  005A46  14DE               	andwf	postinc2,w,c
 17400  005A48  6FE6               	movwf	(??_keeloqDecryptPacket+2)& (0+255),b
 17401  005A4A  0E0F               	movlw	15
 17402  005A4C  14DE               	andwf	postinc2,w,c
 17403  005A4E  6FE7               	movwf	(??_keeloqDecryptPacket+3)& (0+255),b
 17404  005A50  EE20 F004          	lfsr	2,4
 17405  005A54  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17406  005A56  26D9               	addwf	fsr2l,f,c
 17407  005A58  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17408  005A5A  22DA               	addwfc	fsr2h,f,c
 17409  005A5C  C0E4  FFDE         	movff	??_keeloqDecryptPacket,postinc2
 17410  005A60  C0E5  FFDE         	movff	??_keeloqDecryptPacket+1,postinc2
 17411  005A64  C0E6  FFDE         	movff	??_keeloqDecryptPacket+2,postinc2
 17412  005A68  C0E7  FFDE         	movff	??_keeloqDecryptPacket+3,postinc2
 17413                           
 17414                           ; BSR set to: 0
 17415                           ;keeloqDecrypt_MC50.c: 318:     keeloq_classic_decrypt_packet(classic_data);
 17416  005A6C  C0E2  F038         	movff	keeloqDecryptPacket@classic_data,keeloq_classic_decrypt_packet@data
 17417  005A70  C0E3  F039         	movff	keeloqDecryptPacket@classic_data+1,keeloq_classic_decrypt_packet@data+1
 17418  005A74  ECB9  F046         	call	_keeloq_classic_decrypt_packet	;wreg free
 17419                           
 17420                           ; BSR set to: 0
 17421                           ;keeloqDecrypt_MC50.c: 320:     if(commandType==NoCMD )
 17422  005A78  51E9               	movf	keeloqDecryptPacket@commandType& (0+255),w,b
 17423  005A7A  A4D8               	btfss	status,2,c
 17424  005A7C  D01B               	goto	l22807
 17425                           
 17426                           ; BSR set to: 0
 17427                           ;keeloqDecrypt_MC50.c: 321:     {;keeloqDecrypt_MC50.c: 323:         if (DecCHK(classic_
      +                          data) == 0) {
 17428  005A7E  C0E2  F010         	movff	keeloqDecryptPacket@classic_data,DecCHK@data
 17429  005A82  C0E3  F011         	movff	keeloqDecryptPacket@classic_data+1,DecCHK@data+1
 17430  005A86  EC19  F04A         	call	_DecCHK	;wreg free
 17431  005A8A  0900               	iorlw	0
 17432  005A8C  A4D8               	btfss	status,2,c
 17433  005A8E  D008               	goto	l22799
 17434                           
 17435                           ; BSR set to: 0
 17436                           ;keeloqDecrypt_MC50.c: 324:             classic_data->type=Keeloq_NoRollingCode;
 17437  005A90  EE20 F00E          	lfsr	2,14
 17438  005A94  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17439  005A96  26D9               	addwf	fsr2l,f,c
 17440  005A98  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17441  005A9A  22DA               	addwfc	fsr2h,f,c
 17442  005A9C  0E01               	movlw	1
 17443  005A9E  D007               	goto	L79
 17444  005AA0                     l22799:
 17445                           
 17446                           ; BSR set to: 0
 17447                           ;keeloqDecrypt_MC50.c: 328:         {;keeloqDecrypt_MC50.c: 329:             classic_dat
      +                          a->type=Keeloq_RollingCode;
 17448  005AA0  EE20 F00E          	lfsr	2,14
 17449  005AA4  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17450  005AA6  26D9               	addwf	fsr2l,f,c
 17451  005AA8  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17452  005AAA  22DA               	addwfc	fsr2h,f,c
 17453  005AAC  0E00               	movlw	0
 17454  005AAE                     L79:
 17455  005AAE  6EDF               	movwf	indf2,c
 17456  005AB0                     l22801:
 17457                           
 17458                           ; BSR set to: 0
 17459                           ;keeloqDecrypt_MC50.c: 331:         return NoCMD;
 17460  005AB0  0E00               	movlw	0
 17461  005AB2  0012               	return	
 17462  005AB4                     l22807:
 17463                           
 17464                           ; BSR set to: 0
 17465  005AB4  0E06               	movlw	6
 17466  005AB6  19E9               	xorwf	keeloqDecryptPacket@commandType& (0+255),w,b
 17467  005AB8  B4D8               	btfsc	status,2,c
 17468  005ABA  D004               	goto	u26390
 17469                           
 17470                           ; BSR set to: 0
 17471  005ABC  0E05               	movlw	5
 17472  005ABE  19E9               	xorwf	keeloqDecryptPacket@commandType& (0+255),w,b
 17473  005AC0  A4D8               	btfss	status,2,c
 17474  005AC2  D01B               	goto	l22817
 17475  005AC4                     u26390:
 17476                           
 17477                           ; BSR set to: 0
 17478                           ;keeloqDecrypt_MC50.c: 334:     {;keeloqDecrypt_MC50.c: 335:         if(validateRemoteSe
      +                          rialNumber(classic_data->serialnumber,YES,&classic_data->positionMem)==NoCMD)
 17479  005AC4  EE20 F004          	lfsr	2,4
 17480  005AC8  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17481  005ACA  26D9               	addwf	fsr2l,f,c
 17482  005ACC  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17483  005ACE  22DA               	addwfc	fsr2h,f,c
 17484  005AD0  CFDE F02E          	movff	postinc2,validateRemoteSerialNumber@serial
 17485  005AD4  CFDE F02F          	movff	postinc2,validateRemoteSerialNumber@serial+1
 17486  005AD8  CFDE F030          	movff	postinc2,validateRemoteSerialNumber@serial+2
 17487  005ADC  CFDE F031          	movff	postinc2,validateRemoteSerialNumber@serial+3
 17488  005AE0  0E01               	movlw	1
 17489  005AE2  6E32               	movwf	validateRemoteSerialNumber@VerifyOnlySerial^0,c
 17490  005AE4  0E0F               	movlw	15
 17491  005AE6  25E2               	addwf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17492  005AE8  6E33               	movwf	validateRemoteSerialNumber@position^0,c
 17493  005AEA  0E00               	movlw	0
 17494  005AEC  21E3               	addwfc	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17495  005AEE  6E34               	movwf	(validateRemoteSerialNumber@position+1)^0,c
 17496  005AF0  EC5A  F02F         	call	_validateRemoteSerialNumber	;wreg free
 17497  005AF4  0900               	iorlw	0
 17498  005AF6  B4D8               	btfsc	status,2,c
 17499  005AF8  D7DB               	goto	l22801
 17500  005AFA                     l22817:
 17501                           
 17502                           ; BSR set to: 0
 17503                           ;keeloqDecrypt_MC50.c: 344:     if (DecCHK(classic_data) == 0)
 17504  005AFA  C0E2  F010         	movff	keeloqDecryptPacket@classic_data,DecCHK@data
 17505  005AFE  C0E3  F011         	movff	keeloqDecryptPacket@classic_data+1,DecCHK@data+1
 17506  005B02  EC19  F04A         	call	_DecCHK	;wreg free
 17507  005B06  0900               	iorlw	0
 17508  005B08  A4D8               	btfss	status,2,c
 17509  005B0A  D00D               	goto	l22833
 17510                           
 17511                           ; BSR set to: 0
 17512                           ;keeloqDecrypt_MC50.c: 345:     {;keeloqDecrypt_MC50.c: 346:         if(var_sys_NVM.Only
      +                          RollingCode==YES) {
 17513  005B0C  05BE               	decf	(_var_sys_NVM+38)& (0+255),w,b	;volatile
 17514  005B0E  B4D8               	btfsc	status,2,c
 17515  005B10  D7CF               	goto	l22801
 17516                           
 17517                           ; BSR set to: 0
 17518                           ;keeloqDecrypt_MC50.c: 352:         {;keeloqDecrypt_MC50.c: 353:             classic_dat
      +                          a->type=Keeloq_NoRollingCode;
 17519  005B12  EE20 F00E          	lfsr	2,14
 17520  005B16  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17521  005B18  26D9               	addwf	fsr2l,f,c
 17522  005B1A  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17523  005B1C  22DA               	addwfc	fsr2h,f,c
 17524  005B1E  0E01               	movlw	1
 17525  005B20  6EDF               	movwf	indf2,c
 17526                           
 17527                           ; BSR set to: 0
 17528                           ;keeloqDecrypt_MC50.c: 354:             return commandType;
 17529  005B22  51E9               	movf	keeloqDecryptPacket@commandType& (0+255),w,b
 17530  005B24  0012               	return	
 17531  005B26                     l22833:
 17532                           
 17533                           ; BSR set to: 0
 17534                           ;keeloqDecrypt_MC50.c: 359:     hop_error = HopCHK(classic_data);
 17535  005B26  C0E2  F024         	movff	keeloqDecryptPacket@classic_data,HopCHK@data
 17536  005B2A  C0E3  F025         	movff	keeloqDecryptPacket@classic_data+1,HopCHK@data+1
 17537  005B2E  EC8F  F040         	call	_HopCHK	;wreg free
 17538  005B32  0100               	movlb	0	; () banked
 17539  005B34  6FE8               	movwf	keeloqDecryptPacket@hop_error& (0+255),b
 17540                           
 17541                           ; BSR set to: 0
 17542                           ;keeloqDecrypt_MC50.c: 360:     if (hop_error != VALID_PACKET) {
 17543  005B36  05E8               	decf	keeloqDecryptPacket@hop_error& (0+255),w,b
 17544  005B38  A4D8               	btfss	status,2,c
 17545  005B3A  D7BA               	goto	l22801
 17546                           
 17547                           ; BSR set to: 0
 17548                           ;keeloqDecrypt_MC50.c: 364:     classic_data->type=Keeloq_RollingCode;
 17549  005B3C  EE20 F00E          	lfsr	2,14
 17550  005B40  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17551  005B42  26D9               	addwf	fsr2l,f,c
 17552  005B44  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17553  005B46  22DA               	addwfc	fsr2h,f,c
 17554  005B48  0E00               	movlw	0
 17555  005B4A  D7EA               	goto	L80
 17556  005B4C                     __end_of_keeloqDecryptPacket:
 17557                           	callstack 0
 17558                           
 17559 ;; *************** function _verifyProgramingMode *****************
 17560 ;; Defined at:
 17561 ;;		line 401 in file "keeloqDecrypt_MC50.c"
 17562 ;; Parameters:    Size  Location     Type
 17563 ;;  classic_data    2   15[COMRAM] PTR struct .
 17564 ;;		 -> classic_data(16), 
 17565 ;; Auto vars:     Size  Location     Type
 17566 ;;		None
 17567 ;; Return value:  Size  Location     Type
 17568 ;;                  1    wreg      enum E10539
 17569 ;; Registers used:
 17570 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17571 ;; Tracked objects:
 17572 ;;		On entry : 3F/0
 17573 ;;		On exit  : 3F/0
 17574 ;;		Unchanged: 3F/0
 17575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17576 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17578 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17579 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17580 ;;Total ram usage:        3 bytes
 17581 ;; Hardware stack levels used: 1
 17582 ;; Hardware stack levels required when called: 4
 17583 ;; This function calls:
 17584 ;;		Nothing
 17585 ;; This function is called by:
 17586 ;;		_keeloqDecryptPacket
 17587 ;; This function uses a non-reentrant model
 17588 ;;
 17589                           
 17590                           	psect	text58
 17591  0093FE                     __ptext58:
 17592                           	callstack 0
 17593  0093FE                     _verifyProgramingMode:
 17594                           	callstack 24
 17595                           
 17596                           ; BSR set to: 0
 17597                           ;keeloqDecrypt_MC50.c: 401: TypeCMD verifyProgramingMode(classic_encoder_t* classic_data
      +                          );keeloqDecrypt_MC50.c: 402: {;keeloqDecrypt_MC50.c: 403:     if (classic_data->fcode1==
      +                          0x0A)
 17598                           
 17599                           ; BSR set to: 0
 17600                           ;incstack = 0
 17601  0093FE  EE20 F00C          	lfsr	2,12
 17602  009402  5010               	movf	verifyProgramingMode@classic_data^0,w,c
 17603  009404  26D9               	addwf	fsr2l,f,c
 17604  009406  5011               	movf	(verifyProgramingMode@classic_data+1)^0,w,c
 17605  009408  22DA               	addwfc	fsr2h,f,c
 17606  00940A  0E0A               	movlw	10
 17607  00940C  18DE               	xorwf	postinc2,w,c
 17608  00940E  A4D8               	btfss	status,2,c
 17609  009410  D002               	goto	l21503
 17610                           
 17611                           ; BSR set to: 0
 17612                           ;keeloqDecrypt_MC50.c: 404:     {;keeloqDecrypt_MC50.c: 405:         return TypeProgramm
      +                          ingModeFull;
 17613  009412  0E06               	movlw	6
 17614  009414  0012               	return	
 17615  009416                     l21503:
 17616                           
 17617                           ; BSR set to: 0
 17618  009416  EE20 F00C          	lfsr	2,12
 17619  00941A  5010               	movf	verifyProgramingMode@classic_data^0,w,c
 17620  00941C  26D9               	addwf	fsr2l,f,c
 17621  00941E  5011               	movf	(verifyProgramingMode@classic_data+1)^0,w,c
 17622  009420  22DA               	addwfc	fsr2h,f,c
 17623  009422  0E05               	movlw	5
 17624  009424  18DE               	xorwf	postinc2,w,c
 17625  009426  A4D8               	btfss	status,2,c
 17626  009428  D002               	goto	l21511
 17627                           
 17628                           ; BSR set to: 0
 17629                           ;keeloqDecrypt_MC50.c: 408:     {;keeloqDecrypt_MC50.c: 409:         return TypeProgramm
      +                          ingModeWalk;
 17630  00942A  0E05               	movlw	5
 17631  00942C  0012               	return	
 17632  00942E                     l21511:
 17633                           
 17634                           ; BSR set to: 0
 17635                           ;keeloqDecrypt_MC50.c: 412:     {;keeloqDecrypt_MC50.c: 413:         return NoCMD;
 17636  00942E  0E00               	movlw	0
 17637                           
 17638                           ; BSR set to: 0
 17639  009430  0012               	return		;funcret
 17640  009432                     __end_of_verifyProgramingMode:
 17641                           	callstack 0
 17642                           
 17643 ;; *************** function _keeloq_classic_decrypt_packet *****************
 17644 ;; Defined at:
 17645 ;;		line 390 in file "keeloqDecrypt_MC50.c"
 17646 ;; Parameters:    Size  Location     Type
 17647 ;;  data            2   55[COMRAM] PTR struct .
 17648 ;;		 -> classic_data(16), 
 17649 ;; Auto vars:     Size  Location     Type
 17650 ;;		None
 17651 ;; Return value:  Size  Location     Type
 17652 ;;                  1    wreg      void 
 17653 ;; Registers used:
 17654 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 17655 ;; Tracked objects:
 17656 ;;		On entry : 3F/0
 17657 ;;		On exit  : 3F/0
 17658 ;;		Unchanged: 0/0
 17659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17660 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17662 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17663 ;;      Totals:         2       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17664 ;;Total ram usage:        5 bytes
 17665 ;; Hardware stack levels used: 1
 17666 ;; Hardware stack levels required when called: 7
 17667 ;; This function calls:
 17668 ;;		_Decrypt
 17669 ;;		_NormalKeyGen
 17670 ;; This function is called by:
 17671 ;;		_keeloqDecryptPacket
 17672 ;; This function uses a non-reentrant model
 17673 ;;
 17674                           
 17675                           	psect	text59
 17676  008D72                     __ptext59:
 17677                           	callstack 0
 17678  008D72                     _keeloq_classic_decrypt_packet:
 17679                           	callstack 21
 17680                           
 17681                           ; BSR set to: 0
 17682                           ;keeloqDecrypt_MC50.c: 393:     NormalKeyGen(&data->serialnumber);
 17683                           
 17684                           ; BSR set to: 0
 17685                           ;incstack = 0
 17686  008D72  0E04               	movlw	4
 17687  008D74  2438               	addwf	keeloq_classic_decrypt_packet@data^0,w,c
 17688  008D76  6E26               	movwf	NormalKeyGen@serial^0,c
 17689  008D78  0E00               	movlw	0
 17690  008D7A  2039               	addwfc	(keeloq_classic_decrypt_packet@data+1)^0,w,c
 17691  008D7C  6E27               	movwf	(NormalKeyGen@serial+1)^0,c
 17692  008D7E  EC53  F038         	call	_NormalKeyGen	;wreg free
 17693                           
 17694                           ;keeloqDecrypt_MC50.c: 395:     Decrypt((uint8_t*) & data->sync);
 17695  008D82  0E08               	movlw	8
 17696  008D84  2438               	addwf	keeloq_classic_decrypt_packet@data^0,w,c
 17697  008D86  6E1B               	movwf	Decrypt@packet^0,c
 17698  008D88  0E00               	movlw	0
 17699  008D8A  2039               	addwfc	(keeloq_classic_decrypt_packet@data+1)^0,w,c
 17700  008D8C  6E1C               	movwf	(Decrypt@packet+1)^0,c
 17701  008D8E  ECBA  F03B         	call	_Decrypt	;wreg free
 17702                           
 17703                           ;keeloqDecrypt_MC50.c: 398:     data->fcode2 = (data->disc >> 12) & 0x0F;
 17704  008D92  EE20 F00D          	lfsr	2,13
 17705  008D96  5038               	movf	keeloq_classic_decrypt_packet@data^0,w,c
 17706  008D98  26D9               	addwf	fsr2l,f,c
 17707  008D9A  5039               	movf	(keeloq_classic_decrypt_packet@data+1)^0,w,c
 17708  008D9C  22DA               	addwfc	fsr2h,f,c
 17709  008D9E  EE10 F00A          	lfsr	1,10
 17710  008DA2  5038               	movf	keeloq_classic_decrypt_packet@data^0,w,c
 17711  008DA4  26E1               	addwf	fsr1l,f,c
 17712  008DA6  5039               	movf	(keeloq_classic_decrypt_packet@data+1)^0,w,c
 17713  008DA8  22E2               	addwfc	fsr1h,f,c
 17714  008DAA  CFE6 F0D8          	movff	postinc1,??_keeloq_classic_decrypt_packet
 17715  008DAE  CFE5 F0D9          	movff	postdec1,??_keeloq_classic_decrypt_packet+1
 17716  008DB2  0E0C               	movlw	12
 17717  008DB4  0100               	movlb	0	; () banked
 17718  008DB6  6FDA               	movwf	(??_keeloq_classic_decrypt_packet+2)& (0+255),b
 17719  008DB8                     u24795:
 17720  008DB8  90D8               	bcf	status,0,c
 17721  008DBA  33D9               	rrcf	(??_keeloq_classic_decrypt_packet+1)& (0+255),f,b
 17722  008DBC  33D8               	rrcf	??_keeloq_classic_decrypt_packet& (0+255),f,b
 17723  008DBE  2FDA               	decfsz	(??_keeloq_classic_decrypt_packet+2)& (0+255),f,b
 17724  008DC0  D7FB               	goto	u24795
 17725  008DC2  51D8               	movf	??_keeloq_classic_decrypt_packet& (0+255),w,b
 17726  008DC4  0B0F               	andlw	15
 17727  008DC6  6EDF               	movwf	indf2,c
 17728                           
 17729                           ; BSR set to: 0
 17730  008DC8  0012               	return		;funcret
 17731  008DCA                     __end_of_keeloq_classic_decrypt_packet:
 17732                           	callstack 0
 17733                           
 17734 ;; *************** function _NormalKeyGen *****************
 17735 ;; Defined at:
 17736 ;;		line 87 in file "keeloqDecrypt_MC50.c"
 17737 ;; Parameters:    Size  Location     Type
 17738 ;;  serial          2   37[COMRAM] PTR unsigned long 
 17739 ;;		 -> classic_data(16), 
 17740 ;; Auto vars:     Size  Location     Type
 17741 ;;  Buffer          8   47[COMRAM] unsigned char [8]
 17742 ;;  SKEYtemp        4   43[COMRAM] unsigned char [4]
 17743 ;;  HOPtemp         4   39[COMRAM] unsigned char [4]
 17744 ;; Return value:  Size  Location     Type
 17745 ;;                  1    wreg      void 
 17746 ;; Registers used:
 17747 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17748 ;; Tracked objects:
 17749 ;;		On entry : 3F/0
 17750 ;;		On exit  : 0/0
 17751 ;;		Unchanged: 0/0
 17752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17753 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17754 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17756 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17757 ;;Total ram usage:       18 bytes
 17758 ;; Hardware stack levels used: 1
 17759 ;; Hardware stack levels required when called: 6
 17760 ;; This function calls:
 17761 ;;		_Decrypt
 17762 ;;		_LoadManufCode
 17763 ;;		_memcpy
 17764 ;; This function is called by:
 17765 ;;		_keeloq_classic_decrypt_packet
 17766 ;; This function uses a non-reentrant model
 17767 ;;
 17768                           
 17769                           	psect	text60
 17770  0070A6                     __ptext60:
 17771                           	callstack 0
 17772  0070A6                     _NormalKeyGen:
 17773                           	callstack 21
 17774                           
 17775                           ; BSR set to: 0
 17776                           ;keeloqDecrypt_MC50.c: 88:     static uint8_t SEED[4];;keeloqDecrypt_MC50.c: 89:     uin
      +                          t8_t Buffer[8];;keeloqDecrypt_MC50.c: 90:     uint8_t HOPtemp[4];;keeloqDecrypt_MC50.c: 
      +                          91:     uint8_t SKEYtemp[4];;keeloqDecrypt_MC50.c: 93:     memcpy(&Buffer[4], serial, 4)
      +                          ;
 17777                           
 17778                           ; BSR set to: 0
 17779                           ;incstack = 0
 17780  0070A6  0E34               	movlw	low (NormalKeyGen@Buffer+4)
 17781  0070A8  6E10               	movwf	memcpy@d1^0,c
 17782  0070AA  6A11               	clrf	(memcpy@d1+1)^0,c
 17783  0070AC  C026  F012         	movff	NormalKeyGen@serial,memcpy@s1
 17784  0070B0  C027  F013         	movff	NormalKeyGen@serial+1,memcpy@s1+1
 17785  0070B4  0E00               	movlw	0
 17786  0070B6  6E15               	movwf	(memcpy@n+1)^0,c
 17787  0070B8  0E04               	movlw	4
 17788  0070BA  6E14               	movwf	memcpy@n^0,c
 17789  0070BC  ECE5  F048         	call	_memcpy	;wreg free
 17790                           
 17791                           ;keeloqDecrypt_MC50.c: 95:     memcpy(HOPtemp, Buffer, 4);
 17792  0070C0  0E28               	movlw	low NormalKeyGen@HOPtemp
 17793  0070C2  6E10               	movwf	memcpy@d1^0,c
 17794  0070C4  6A11               	clrf	(memcpy@d1+1)^0,c
 17795  0070C6  0E30               	movlw	low NormalKeyGen@Buffer
 17796  0070C8  6E12               	movwf	memcpy@s1^0,c
 17797  0070CA  6A13               	clrf	(memcpy@s1+1)^0,c
 17798  0070CC  0E00               	movlw	0
 17799  0070CE  6E15               	movwf	(memcpy@n+1)^0,c
 17800  0070D0  0E04               	movlw	4
 17801  0070D2  6E14               	movwf	memcpy@n^0,c
 17802  0070D4  ECE5  F048         	call	_memcpy	;wreg free
 17803                           
 17804                           ;keeloqDecrypt_MC50.c: 97:     memcpy(SEED, &Buffer[4], 4);
 17805  0070D8  0ED7               	movlw	low NormalKeyGen@SEED
 17806  0070DA  6E10               	movwf	memcpy@d1^0,c
 17807  0070DC  0E02               	movlw	high NormalKeyGen@SEED
 17808  0070DE  6E11               	movwf	(memcpy@d1+1)^0,c
 17809  0070E0  0E34               	movlw	low (NormalKeyGen@Buffer+4)
 17810  0070E2  6E12               	movwf	memcpy@s1^0,c
 17811  0070E4  6A13               	clrf	(memcpy@s1+1)^0,c
 17812  0070E6  0E00               	movlw	0
 17813  0070E8  6E15               	movwf	(memcpy@n+1)^0,c
 17814  0070EA  0E04               	movlw	4
 17815  0070EC  6E14               	movwf	memcpy@n^0,c
 17816  0070EE  ECE5  F048         	call	_memcpy	;wreg free
 17817                           
 17818                           ;keeloqDecrypt_MC50.c: 98:     SEED[3] &= 0x0f;
 17819  0070F2  0E0F               	movlw	15
 17820  0070F4  0102               	movlb	2	; () banked
 17821  0070F6  17DA               	andwf	(NormalKeyGen@SEED+3)& (0+255),f,b
 17822                           
 17823                           ; BSR set to: 2
 17824                           ;keeloqDecrypt_MC50.c: 101:     memcpy(Buffer, SEED, 4);
 17825  0070F8  0E30               	movlw	low NormalKeyGen@Buffer
 17826  0070FA  6E10               	movwf	memcpy@d1^0,c
 17827  0070FC  6A11               	clrf	(memcpy@d1+1)^0,c
 17828  0070FE  0ED7               	movlw	low NormalKeyGen@SEED
 17829  007100  6E12               	movwf	memcpy@s1^0,c
 17830  007102  0E02               	movlw	high NormalKeyGen@SEED
 17831  007104  6E13               	movwf	(memcpy@s1+1)^0,c
 17832  007106  0E00               	movlw	0
 17833  007108  6E15               	movwf	(memcpy@n+1)^0,c
 17834  00710A  0E04               	movlw	4
 17835  00710C  6E14               	movwf	memcpy@n^0,c
 17836  00710E  ECE5  F048         	call	_memcpy	;wreg free
 17837                           
 17838                           ;keeloqDecrypt_MC50.c: 102:     Buffer[3] |= 0x20;
 17839  007112  8A33               	bsf	(NormalKeyGen@Buffer+3)^0,5,c
 17840                           
 17841                           ;keeloqDecrypt_MC50.c: 103:     LoadManufCode();
 17842  007114  EC4A  F04C         	call	_LoadManufCode	;wreg free
 17843                           
 17844                           ; BSR set to: 2
 17845                           ;keeloqDecrypt_MC50.c: 104:     Decrypt(Buffer);
 17846  007118  0E30               	movlw	low NormalKeyGen@Buffer
 17847  00711A  6E1B               	movwf	Decrypt@packet^0,c
 17848  00711C  6A1C               	clrf	(Decrypt@packet+1)^0,c
 17849  00711E  ECBA  F03B         	call	_Decrypt	;wreg free
 17850                           
 17851                           ;keeloqDecrypt_MC50.c: 105:     memcpy(SKEYtemp, Buffer, 4);
 17852  007122  0E2C               	movlw	low NormalKeyGen@SKEYtemp
 17853  007124  6E10               	movwf	memcpy@d1^0,c
 17854  007126  6A11               	clrf	(memcpy@d1+1)^0,c
 17855  007128  0E30               	movlw	low NormalKeyGen@Buffer
 17856  00712A  6E12               	movwf	memcpy@s1^0,c
 17857  00712C  6A13               	clrf	(memcpy@s1+1)^0,c
 17858  00712E  0E00               	movlw	0
 17859  007130  6E15               	movwf	(memcpy@n+1)^0,c
 17860  007132  0E04               	movlw	4
 17861  007134  6E14               	movwf	memcpy@n^0,c
 17862  007136  ECE5  F048         	call	_memcpy	;wreg free
 17863                           
 17864                           ;keeloqDecrypt_MC50.c: 108:     memcpy(Buffer, SEED, 4);
 17865  00713A  0E30               	movlw	low NormalKeyGen@Buffer
 17866  00713C  6E10               	movwf	memcpy@d1^0,c
 17867  00713E  6A11               	clrf	(memcpy@d1+1)^0,c
 17868  007140  0ED7               	movlw	low NormalKeyGen@SEED
 17869  007142  6E12               	movwf	memcpy@s1^0,c
 17870  007144  0E02               	movlw	high NormalKeyGen@SEED
 17871  007146  6E13               	movwf	(memcpy@s1+1)^0,c
 17872  007148  0E00               	movlw	0
 17873  00714A  6E15               	movwf	(memcpy@n+1)^0,c
 17874  00714C  0E04               	movlw	4
 17875  00714E  6E14               	movwf	memcpy@n^0,c
 17876  007150  ECE5  F048         	call	_memcpy	;wreg free
 17877                           
 17878                           ;keeloqDecrypt_MC50.c: 109:     Buffer[3] |= 0x60;
 17879  007154  0E60               	movlw	96
 17880  007156  1233               	iorwf	(NormalKeyGen@Buffer+3)^0,f,c
 17881                           
 17882                           ;keeloqDecrypt_MC50.c: 110:     LoadManufCode();
 17883  007158  EC4A  F04C         	call	_LoadManufCode	;wreg free
 17884                           
 17885                           ; BSR set to: 2
 17886                           ;keeloqDecrypt_MC50.c: 111:     Decrypt(Buffer);
 17887  00715C  0E30               	movlw	low NormalKeyGen@Buffer
 17888  00715E  6E1B               	movwf	Decrypt@packet^0,c
 17889  007160  6A1C               	clrf	(Decrypt@packet+1)^0,c
 17890  007162  ECBA  F03B         	call	_Decrypt	;wreg free
 17891                           
 17892                           ;keeloqDecrypt_MC50.c: 112:     memcpy(&DKEY[4], Buffer, 4);
 17893  007166  0ED3               	movlw	low (_DKEY+4)
 17894  007168  6E10               	movwf	memcpy@d1^0,c
 17895  00716A  0E02               	movlw	high (_DKEY+4)
 17896  00716C  6E11               	movwf	(memcpy@d1+1)^0,c
 17897  00716E  0E30               	movlw	low NormalKeyGen@Buffer
 17898  007170  6E12               	movwf	memcpy@s1^0,c
 17899  007172  6A13               	clrf	(memcpy@s1+1)^0,c
 17900  007174  0E00               	movlw	0
 17901  007176  6E15               	movwf	(memcpy@n+1)^0,c
 17902  007178  0E04               	movlw	4
 17903  00717A  6E14               	movwf	memcpy@n^0,c
 17904  00717C  ECE5  F048         	call	_memcpy	;wreg free
 17905                           
 17906                           ;keeloqDecrypt_MC50.c: 113:     memcpy(DKEY, SKEYtemp, 4);
 17907  007180  0ECF               	movlw	low _DKEY
 17908  007182  6E10               	movwf	memcpy@d1^0,c
 17909  007184  0E02               	movlw	high _DKEY
 17910  007186  6E11               	movwf	(memcpy@d1+1)^0,c
 17911  007188  0E2C               	movlw	low NormalKeyGen@SKEYtemp
 17912  00718A  6E12               	movwf	memcpy@s1^0,c
 17913  00718C  6A13               	clrf	(memcpy@s1+1)^0,c
 17914  00718E  0E00               	movlw	0
 17915  007190  6E15               	movwf	(memcpy@n+1)^0,c
 17916  007192  0E04               	movlw	4
 17917  007194  6E14               	movwf	memcpy@n^0,c
 17918  007196  ECE5  F048         	call	_memcpy	;wreg free
 17919                           
 17920                           ;keeloqDecrypt_MC50.c: 116:     memcpy(Buffer, HOPtemp, 4);
 17921  00719A  0E30               	movlw	low NormalKeyGen@Buffer
 17922  00719C  6E10               	movwf	memcpy@d1^0,c
 17923  00719E  6A11               	clrf	(memcpy@d1+1)^0,c
 17924  0071A0  0E28               	movlw	low NormalKeyGen@HOPtemp
 17925  0071A2  6E12               	movwf	memcpy@s1^0,c
 17926  0071A4  6A13               	clrf	(memcpy@s1+1)^0,c
 17927  0071A6  0E00               	movlw	0
 17928  0071A8  6E15               	movwf	(memcpy@n+1)^0,c
 17929  0071AA  0E04               	movlw	4
 17930  0071AC  6E14               	movwf	memcpy@n^0,c
 17931  0071AE  ECE5  F048         	call	_memcpy	;wreg free
 17932  0071B2  0012               	return		;funcret
 17933  0071B4                     __end_of_NormalKeyGen:
 17934                           	callstack 0
 17935                           
 17936 ;; *************** function _LoadManufCode *****************
 17937 ;; Defined at:
 17938 ;;		line 63 in file "keeloqDecrypt_MC50.c"
 17939 ;; Parameters:    Size  Location     Type
 17940 ;;		None
 17941 ;; Auto vars:     Size  Location     Type
 17942 ;;		None
 17943 ;; Return value:  Size  Location     Type
 17944 ;;                  1    wreg      void 
 17945 ;; Registers used:
 17946 ;;		wreg, status,2
 17947 ;; Tracked objects:
 17948 ;;		On entry : 0/2
 17949 ;;		On exit  : 3F/2
 17950 ;;		Unchanged: 0/0
 17951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17955 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17956 ;;Total ram usage:        0 bytes
 17957 ;; Hardware stack levels used: 1
 17958 ;; Hardware stack levels required when called: 4
 17959 ;; This function calls:
 17960 ;;		Nothing
 17961 ;; This function is called by:
 17962 ;;		_NormalKeyGen
 17963 ;; This function uses a non-reentrant model
 17964 ;;
 17965                           
 17966                           	psect	text61
 17967  009894                     __ptext61:
 17968                           	callstack 0
 17969  009894                     _LoadManufCode:
 17970                           	callstack 22
 17971                           
 17972                           ;keeloqDecrypt_MC50.c: 64:     DKEY[0] = 0xFF;
 17973                           
 17974                           ;incstack = 0
 17975  009894  0102               	movlb	2	; () banked
 17976  009896  69CF               	setf	_DKEY& (0+255),b
 17977                           
 17978                           ; BSR set to: 2
 17979                           ;keeloqDecrypt_MC50.c: 65:     DKEY[1] = 0xCA;
 17980  009898  0ECA               	movlw	202
 17981  00989A  6FD0               	movwf	(_DKEY+1)& (0+255),b
 17982                           
 17983                           ;keeloqDecrypt_MC50.c: 66:     DKEY[2] = 0x76;
 17984  00989C  0E76               	movlw	118
 17985  00989E  6FD1               	movwf	(_DKEY+2)& (0+255),b
 17986                           
 17987                           ;keeloqDecrypt_MC50.c: 67:     DKEY[3] = 0x94;
 17988  0098A0  0E94               	movlw	148
 17989  0098A2  6FD2               	movwf	(_DKEY+3)& (0+255),b
 17990                           
 17991                           ;keeloqDecrypt_MC50.c: 68:     DKEY[4] = 0x22;
 17992  0098A4  0E22               	movlw	34
 17993  0098A6  6FD3               	movwf	(_DKEY+4)& (0+255),b
 17994                           
 17995                           ;keeloqDecrypt_MC50.c: 69:     DKEY[5] = 0x68;
 17996  0098A8  0E68               	movlw	104
 17997  0098AA  6FD4               	movwf	(_DKEY+5)& (0+255),b
 17998                           
 17999                           ;keeloqDecrypt_MC50.c: 70:     DKEY[6] = 0x27;
 18000  0098AC  0E27               	movlw	39
 18001  0098AE  6FD5               	movwf	(_DKEY+6)& (0+255),b
 18002                           
 18003                           ;keeloqDecrypt_MC50.c: 71:     DKEY[7] = 0x57;
 18004  0098B0  0E57               	movlw	87
 18005  0098B2  6FD6               	movwf	(_DKEY+7)& (0+255),b
 18006                           
 18007                           ; BSR set to: 2
 18008  0098B4  0012               	return		;funcret
 18009  0098B6                     __end_of_LoadManufCode:
 18010                           	callstack 0
 18011                           
 18012 ;; *************** function _Decrypt *****************
 18013 ;; Defined at:
 18014 ;;		line 142 in file "keeloqDecrypt_MC50.c"
 18015 ;; Parameters:    Size  Location     Type
 18016 ;;  packet          2   26[COMRAM] PTR unsigned char 
 18017 ;;		 -> SecureKeyGen@HOPtemp(4), NormalKeyGen@Buffer(8), classic_data(16), 
 18018 ;; Auto vars:     Size  Location     Type
 18019 ;;  Buffer          4   33[COMRAM] unsigned char [4]
 18020 ;;  aux             1   32[COMRAM] unsigned char 
 18021 ;;  p               1   31[COMRAM] char 
 18022 ;;  j               1   30[COMRAM] unsigned char 
 18023 ;;  i               1   29[COMRAM] unsigned char 
 18024 ;;  key             1   28[COMRAM] unsigned char 
 18025 ;; Return value:  Size  Location     Type
 18026 ;;                  1    wreg      void 
 18027 ;; Registers used:
 18028 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18029 ;; Tracked objects:
 18030 ;;		On entry : 0/0
 18031 ;;		On exit  : 0/0
 18032 ;;		Unchanged: 0/0
 18033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18034 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18035 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18037 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18038 ;;Total ram usage:       11 bytes
 18039 ;; Hardware stack levels used: 1
 18040 ;; Hardware stack levels required when called: 5
 18041 ;; This function calls:
 18042 ;;		_memcpy
 18043 ;; This function is called by:
 18044 ;;		_NormalKeyGen
 18045 ;;		_keeloq_classic_decrypt_packet
 18046 ;; This function uses a non-reentrant model
 18047 ;;
 18048                           
 18049                           	psect	text62
 18050  007774                     __ptext62:
 18051                           	callstack 0
 18052  007774                     _Decrypt:
 18053                           	callstack 21
 18054                           
 18055                           ;keeloqDecrypt_MC50.c: 143:     uint_fast8_t i, j;;keeloqDecrypt_MC50.c: 144:     uint8_
      +                          t key, aux;;keeloqDecrypt_MC50.c: 146:     int8_t p;;keeloqDecrypt_MC50.c: 147:     uint
      +                          8_t Buffer[4];;keeloqDecrypt_MC50.c: 149:     memcpy(Buffer, packet, 4);
 18056                           
 18057                           ; BSR set to: 2
 18058                           ;incstack = 0
 18059  007774  0E22               	movlw	low Decrypt@Buffer
 18060  007776  6E10               	movwf	memcpy@d1^0,c
 18061  007778  6A11               	clrf	(memcpy@d1+1)^0,c
 18062  00777A  C01B  F012         	movff	Decrypt@packet,memcpy@s1
 18063  00777E  C01C  F013         	movff	Decrypt@packet+1,memcpy@s1+1
 18064  007782  0E00               	movlw	0
 18065  007784  6E15               	movwf	(memcpy@n+1)^0,c
 18066  007786  0E04               	movlw	4
 18067  007788  6E14               	movwf	memcpy@n^0,c
 18068  00778A  ECE5  F048         	call	_memcpy	;wreg free
 18069                           
 18070                           ;keeloqDecrypt_MC50.c: 151:     p = 1;
 18071  00778E  0E01               	movlw	1
 18072  007790  6E20               	movwf	Decrypt@p^0,c
 18073                           
 18074                           ;keeloqDecrypt_MC50.c: 153:     for (j = 66; j > 0; j--) {
 18075  007792  0E42               	movlw	66
 18076  007794  6E1F               	movwf	Decrypt@j^0,c
 18077  007796                     l20469:
 18078                           
 18079                           ;keeloqDecrypt_MC50.c: 154:         key = DKEY[p--];
 18080  007796  0ECF               	movlw	low _DKEY
 18081  007798  2420               	addwf	Decrypt@p^0,w,c
 18082  00779A  6ED9               	movwf	fsr2l,c
 18083  00779C  6ADA               	clrf	fsr2h,c
 18084  00779E  0E02               	movlw	high _DKEY
 18085  0077A0  22DA               	addwfc	fsr2h,f,c
 18086  0077A2  50DF               	movf	indf2,w,c
 18087  0077A4  6E1D               	movwf	Decrypt@key^0,c
 18088  0077A6  0620               	decf	Decrypt@p^0,f,c
 18089                           
 18090                           ;keeloqDecrypt_MC50.c: 155:         if (p < 0)
 18091  0077A8  AE20               	btfss	Decrypt@p^0,7,c
 18092  0077AA  D002               	goto	l20477
 18093                           
 18094                           ;keeloqDecrypt_MC50.c: 156:             p += 8;
 18095  0077AC  0E08               	movlw	8
 18096  0077AE  2620               	addwf	Decrypt@p^0,f,c
 18097  0077B0                     l20477:
 18098                           
 18099                           ;keeloqDecrypt_MC50.c: 157:         for (i = 8; i > 0; i--) {
 18100  0077B0  0E08               	movlw	8
 18101  0077B2  6E1E               	movwf	Decrypt@i^0,c
 18102  0077B4                     l1859:
 18103                           
 18104                           ;keeloqDecrypt_MC50.c: 159:             if ((( (Buffer[3]) & (1<<(6))) != 0)) {
 18105  0077B4  AC25               	btfss	(Decrypt@Buffer+3)^0,6,c
 18106  0077B6  D006               	goto	l1861
 18107                           
 18108                           ;keeloqDecrypt_MC50.c: 160:                 if (!(( (Buffer[3]) & (1<<(1))) != 0))
 18109  0077B8  B225               	btfsc	(Decrypt@Buffer+3)^0,1,c
 18110  0077BA  D002               	goto	l20487
 18111                           
 18112                           ;keeloqDecrypt_MC50.c: 161:                     aux = 0b00111010;
 18113  0077BC  0E3A               	movlw	58
 18114  0077BE  D007               	goto	L81
 18115  0077C0                     l20487:
 18116                           
 18117                           ;keeloqDecrypt_MC50.c: 163:                     aux = 0b01011100;
 18118  0077C0  0E5C               	movlw	92
 18119  0077C2  D005               	goto	L81
 18120  0077C4                     l1861:
 18121                           
 18122                           ;keeloqDecrypt_MC50.c: 165:                 if (!(( (Buffer[3]) & (1<<(1))) != 0))
 18123  0077C4  B225               	btfsc	(Decrypt@Buffer+3)^0,1,c
 18124  0077C6  D002               	goto	l20491
 18125                           
 18126                           ;keeloqDecrypt_MC50.c: 166:                     aux = 0b01110100;
 18127  0077C8  0E74               	movlw	116
 18128  0077CA  D001               	goto	L81
 18129  0077CC                     l20491:
 18130                           
 18131                           ;keeloqDecrypt_MC50.c: 168:                     aux = 0b00101110;
 18132  0077CC  0E2E               	movlw	46
 18133  0077CE                     L81:
 18134  0077CE  6E21               	movwf	Decrypt@aux^0,c
 18135                           
 18136                           ;keeloqDecrypt_MC50.c: 172:             if ((( (Buffer[2]) & (1<<(3))) != 0))
 18137  0077D0  B624               	btfsc	(Decrypt@Buffer+2)^0,3,c
 18138                           
 18139                           ;keeloqDecrypt_MC50.c: 173:                 aux = (aux << 4) | (aux >> 4);
 18140  0077D2  3A21               	swapf	Decrypt@aux^0,f,c
 18141                           
 18142                           ;keeloqDecrypt_MC50.c: 174:             if ((( (Buffer[1]) & (1<<(0))) != 0))
 18143  0077D4  A023               	btfss	(Decrypt@Buffer+1)^0,0,c
 18144  0077D6  D004               	goto	l20499
 18145                           
 18146                           ;keeloqDecrypt_MC50.c: 175:                 aux <<= 2;
 18147  0077D8  90D8               	bcf	status,0,c
 18148  0077DA  3621               	rlcf	Decrypt@aux^0,f,c
 18149  0077DC  90D8               	bcf	status,0,c
 18150  0077DE  3621               	rlcf	Decrypt@aux^0,f,c
 18151  0077E0                     l20499:
 18152                           
 18153                           ;keeloqDecrypt_MC50.c: 176:             if ((( (Buffer[0]) & (1<<(0))) != 0))
 18154  0077E0  A022               	btfss	Decrypt@Buffer^0,0,c
 18155  0077E2  D002               	goto	l1869
 18156                           
 18157                           ;keeloqDecrypt_MC50.c: 177:                 aux <<= 1;
 18158  0077E4  90D8               	bcf	status,0,c
 18159  0077E6  3621               	rlcf	Decrypt@aux^0,f,c
 18160  0077E8                     l1869:
 18161                           
 18162                           ;keeloqDecrypt_MC50.c: 180:             aux ^= Buffer[1] ^ Buffer[3] ^ key;
 18163  0077E8  5023               	movf	(Decrypt@Buffer+1)^0,w,c
 18164  0077EA  1825               	xorwf	(Decrypt@Buffer+3)^0,w,c
 18165  0077EC  181D               	xorwf	Decrypt@key^0,w,c
 18166  0077EE  1A21               	xorwf	Decrypt@aux^0,f,c
 18167                           
 18168                           ;keeloqDecrypt_MC50.c: 182:             Buffer[3] = (Buffer[3] << 1) | (Buffer[2] >> 7);
 18169  0077F0  90D8               	bcf	status,0,c
 18170  0077F2  3424               	rlcf	(Decrypt@Buffer+2)^0,w,c
 18171  0077F4  3425               	rlcf	(Decrypt@Buffer+3)^0,w,c
 18172  0077F6  6E25               	movwf	(Decrypt@Buffer+3)^0,c
 18173                           
 18174                           ;keeloqDecrypt_MC50.c: 183:             Buffer[2] = (Buffer[2] << 1) | (Buffer[1] >> 7);
 18175  0077F8  90D8               	bcf	status,0,c
 18176  0077FA  3423               	rlcf	(Decrypt@Buffer+1)^0,w,c
 18177  0077FC  3424               	rlcf	(Decrypt@Buffer+2)^0,w,c
 18178  0077FE  6E24               	movwf	(Decrypt@Buffer+2)^0,c
 18179                           
 18180                           ;keeloqDecrypt_MC50.c: 184:             Buffer[1] = (Buffer[1] << 1) | (Buffer[0] >> 7);
 18181  007800  90D8               	bcf	status,0,c
 18182  007802  3422               	rlcf	Decrypt@Buffer^0,w,c
 18183  007804  3423               	rlcf	(Decrypt@Buffer+1)^0,w,c
 18184  007806  6E23               	movwf	(Decrypt@Buffer+1)^0,c
 18185                           
 18186                           ;keeloqDecrypt_MC50.c: 185:             Buffer[0] = (Buffer[0] << 1) | (aux >> 7);
 18187  007808  90D8               	bcf	status,0,c
 18188  00780A  3421               	rlcf	Decrypt@aux^0,w,c
 18189  00780C  3422               	rlcf	Decrypt@Buffer^0,w,c
 18190  00780E  6E22               	movwf	Decrypt@Buffer^0,c
 18191                           
 18192                           ;keeloqDecrypt_MC50.c: 188:             key <<= 1;
 18193  007810  90D8               	bcf	status,0,c
 18194  007812  361D               	rlcf	Decrypt@key^0,f,c
 18195                           
 18196                           ;keeloqDecrypt_MC50.c: 189:         }
 18197  007814  061E               	decf	Decrypt@i^0,f,c
 18198  007816  501E               	movf	Decrypt@i^0,w,c
 18199  007818  A4D8               	btfss	status,2,c
 18200  00781A  D7CC               	goto	l1859
 18201                           
 18202                           ;keeloqDecrypt_MC50.c: 190:     }
 18203  00781C  061F               	decf	Decrypt@j^0,f,c
 18204  00781E  501F               	movf	Decrypt@j^0,w,c
 18205  007820  A4D8               	btfss	status,2,c
 18206  007822  D7B9               	goto	l20469
 18207                           
 18208                           ;keeloqDecrypt_MC50.c: 192:     memcpy(packet, Buffer, 4);
 18209  007824  C01B  F010         	movff	Decrypt@packet,memcpy@d1
 18210  007828  C01C  F011         	movff	Decrypt@packet+1,memcpy@d1+1
 18211  00782C  0E22               	movlw	low Decrypt@Buffer
 18212  00782E  6E12               	movwf	memcpy@s1^0,c
 18213  007830  6A13               	clrf	(memcpy@s1+1)^0,c
 18214  007832  0E00               	movlw	0
 18215  007834  6E15               	movwf	(memcpy@n+1)^0,c
 18216  007836  0E04               	movlw	4
 18217  007838  6E14               	movwf	memcpy@n^0,c
 18218  00783A  ECE5  F048         	call	_memcpy	;wreg free
 18219  00783E  0012               	return		;funcret
 18220  007840                     __end_of_Decrypt:
 18221                           	callstack 0
 18222                           
 18223 ;; *************** function _HopCHK *****************
 18224 ;; Defined at:
 18225 ;;		line 236 in file "keeloqDecrypt_MC50.c"
 18226 ;; Parameters:    Size  Location     Type
 18227 ;;  data            2   35[COMRAM] PTR struct .
 18228 ;;		 -> classic_data(16), 
 18229 ;; Auto vars:     Size  Location     Type
 18230 ;;  hopDiff         2   37[COMRAM] short 
 18231 ;; Return value:  Size  Location     Type
 18232 ;;                  1    wreg      enum E10730
 18233 ;; Registers used:
 18234 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18235 ;; Tracked objects:
 18236 ;;		On entry : 3F/0
 18237 ;;		On exit  : 3E/0
 18238 ;;		Unchanged: 0/0
 18239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18240 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18241 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18243 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18244 ;;Total ram usage:        4 bytes
 18245 ;; Hardware stack levels used: 1
 18246 ;; Hardware stack levels required when called: 6
 18247 ;; This function calls:
 18248 ;;		_ReqResync
 18249 ;;		_getHopCode
 18250 ;; This function is called by:
 18251 ;;		_keeloqDecryptPacket
 18252 ;; This function uses a non-reentrant model
 18253 ;;
 18254                           
 18255                           	psect	text63
 18256  00811E                     __ptext63:
 18257                           	callstack 0
 18258  00811E                     _HopCHK:
 18259                           	callstack 22
 18260                           
 18261                           ; BSR set to: 0
 18262                           ;keeloqDecrypt_MC50.c: 237:     int16_t hopDiff;;keeloqDecrypt_MC50.c: 238:     Hop = da
      +                          ta->sync;
 18263                           
 18264                           ;incstack = 0
 18265  00811E  EE20 F008          	lfsr	2,8
 18266  008122  5024               	movf	HopCHK@data^0,w,c
 18267  008124  26D9               	addwf	fsr2l,f,c
 18268  008126  5025               	movf	(HopCHK@data+1)^0,w,c
 18269  008128  22DA               	addwfc	fsr2h,f,c
 18270  00812A  CFDE F07C          	movff	postinc2,_Hop
 18271  00812E  CFDD F07D          	movff	postdec2,_Hop+1
 18272                           
 18273                           ; BSR set to: 0
 18274                           ;keeloqDecrypt_MC50.c: 239:     EHop=getHopCode(data);
 18275  008132  C024  F016         	movff	HopCHK@data,getHopCode@data
 18276  008136  C025  F017         	movff	HopCHK@data+1,getHopCode@data+1
 18277  00813A  EC77  F035         	call	_getHopCode	;wreg free
 18278  00813E  C016  F28C         	movff	?_getHopCode,_EHop
 18279  008142  C017  F28D         	movff	?_getHopCode+1,_EHop+1
 18280                           
 18281                           ;keeloqDecrypt_MC50.c: 241:     if (F2Chance)
 18282  008146  0101               	movlb	1	; () banked
 18283  008148  519A               	movf	_F2Chance& (0+255),w,b
 18284  00814A  B4D8               	btfsc	status,2,c
 18285  00814C  D00F               	goto	l21475
 18286                           
 18287                           ; BSR set to: 1
 18288                           ;keeloqDecrypt_MC50.c: 242:         if (NextHop == Hop) {
 18289  00814E  0100               	movlb	0	; () banked
 18290  008150  517C               	movf	_Hop& (0+255),w,b
 18291  008152  0101               	movlb	1	; () banked
 18292  008154  1987               	xorwf	_NextHop& (0+255),w,b
 18293  008156  E10A               	bnz	l21475
 18294  008158  0100               	movlb	0	; () banked
 18295  00815A  517D               	movf	(_Hop+1)& (0+255),w,b
 18296  00815C  0101               	movlb	1	; () banked
 18297  00815E  1988               	xorwf	(_NextHop+1)& (0+255),w,b
 18298  008160  A4D8               	btfss	status,2,c
 18299  008162  D004               	goto	l21475
 18300                           
 18301                           ; BSR set to: 1
 18302                           ;keeloqDecrypt_MC50.c: 243:             F2Chance = 0;
 18303  008164  0E00               	movlw	0
 18304  008166  6F9A               	movwf	_F2Chance& (0+255),b
 18305  008168                     l21471:
 18306                           
 18307                           ;keeloqDecrypt_MC50.c: 245:             return VALID_PACKET;
 18308  008168  0E01               	movlw	1
 18309  00816A  0012               	return	
 18310  00816C                     l21475:
 18311                           
 18312                           ; BSR set to: 1
 18313                           ;keeloqDecrypt_MC50.c: 249:     hopDiff = Hop - EHop;
 18314  00816C  0102               	movlb	2	; () banked
 18315  00816E  518C               	movf	_EHop& (0+255),w,b
 18316  008170  0100               	movlb	0	; () banked
 18317  008172  5D7C               	subwf	_Hop& (0+255),w,b
 18318  008174  6E26               	movwf	HopCHK@hopDiff^0,c
 18319  008176  0102               	movlb	2	; () banked
 18320  008178  518D               	movf	(_EHop+1)& (0+255),w,b
 18321  00817A  0100               	movlb	0	; () banked
 18322  00817C  597D               	subwfb	(_Hop+1)& (0+255),w,b
 18323  00817E  6E27               	movwf	(HopCHK@hopDiff+1)^0,c
 18324                           
 18325                           ;keeloqDecrypt_MC50.c: 251:     if (hopDiff < 0) {
 18326  008180  AE27               	btfss	(HopCHK@hopDiff+1)^0,7,c
 18327  008182  D002               	goto	l21483
 18328                           
 18329                           ; BSR set to: 0
 18330                           ;keeloqDecrypt_MC50.c: 254:         return HOP_CHECK_FAIL;
 18331  008184  0E0A               	movlw	10
 18332  008186  0012               	return	
 18333  008188                     l21483:
 18334                           
 18335                           ; BSR set to: 0
 18336  008188  BE27               	btfsc	(HopCHK@hopDiff+1)^0,7,c
 18337  00818A  D7EE               	goto	l21471
 18338  00818C  5027               	movf	(HopCHK@hopDiff+1)^0,w,c
 18339  00818E  E104               	bnz	u24760
 18340  008190  0E11               	movlw	17
 18341  008192  5C26               	subwf	HopCHK@hopDiff^0,w,c
 18342  008194  A0D8               	btfss	status,0,c
 18343  008196  D7E8               	goto	l21471
 18344  008198                     u24760:
 18345                           
 18346                           ; BSR set to: 0
 18347                           ;keeloqDecrypt_MC50.c: 257:         return ReqResync(Hop);
 18348  008198  C07C  F010         	movff	_Hop,ReqResync@CurrentHop
 18349  00819C  C07D  F011         	movff	_Hop+1,ReqResync@CurrentHop+1
 18350  0081A0  EC43  F04D         	call	_ReqResync	;wreg free
 18351  0081A4  0012               	return		;funcret
 18352  0081A6                     __end_of_HopCHK:
 18353                           	callstack 0
 18354                           
 18355 ;; *************** function _getHopCode *****************
 18356 ;; Defined at:
 18357 ;;		line 266 in file "keeloqDecrypt_MC50.c"
 18358 ;; Parameters:    Size  Location     Type
 18359 ;;  data            2   21[COMRAM] PTR struct .
 18360 ;;		 -> classic_data(16), 
 18361 ;; Auto vars:     Size  Location     Type
 18362 ;;  tempHop         2   31[COMRAM] unsigned short 
 18363 ;;  i               1   34[COMRAM] unsigned char 
 18364 ;;  tempPos         1   33[COMRAM] char 
 18365 ;; Return value:  Size  Location     Type
 18366 ;;                  2   21[COMRAM] unsigned short 
 18367 ;; Registers used:
 18368 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18369 ;; Tracked objects:
 18370 ;;		On entry : 3F/0
 18371 ;;		On exit  : 3E/0
 18372 ;;		Unchanged: 0/0
 18373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18374 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18375 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18376 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18377 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18378 ;;Total ram usage:       14 bytes
 18379 ;; Hardware stack levels used: 1
 18380 ;; Hardware stack levels required when called: 5
 18381 ;; This function calls:
 18382 ;;		_ReqResync
 18383 ;;		___wmul
 18384 ;; This function is called by:
 18385 ;;		_HopCHK
 18386 ;; This function uses a non-reentrant model
 18387 ;;
 18388                           
 18389                           	psect	text64
 18390  006AEE                     __ptext64:
 18391                           	callstack 0
 18392  006AEE                     _getHopCode:
 18393                           	callstack 22
 18394                           
 18395                           ; BSR set to: 0
 18396                           ;keeloqDecrypt_MC50.c: 268:     uint16_t tempHop=0;
 18397                           
 18398                           ;incstack = 0
 18399  006AEE  0E00               	movlw	0
 18400  006AF0  6E21               	movwf	(getHopCode@tempHop+1)^0,c
 18401  006AF2  0E00               	movlw	0
 18402  006AF4  6E20               	movwf	getHopCode@tempHop^0,c
 18403                           
 18404                           ; BSR set to: 0
 18405                           ;keeloqDecrypt_MC50.c: 269:     int8_t tempPos=-1;
 18406  006AF6  6822               	setf	getHopCode@tempPos^0,c
 18407                           
 18408                           ;keeloqDecrypt_MC50.c: 270:     for(i=0;i<25;i++)
 18409  006AF8  0E00               	movlw	0
 18410  006AFA  6E23               	movwf	getHopCode@i^0,c
 18411  006AFC                     l20767:
 18412                           
 18413                           ; BSR set to: 0
 18414                           ;keeloqDecrypt_MC50.c: 271:     {;keeloqDecrypt_MC50.c: 272:         if(listSyncValues[i
      +                          ].serial==data->serialnumber)
 18415  006AFC  EE20 F004          	lfsr	2,4
 18416  006B00  5016               	movf	getHopCode@data^0,w,c
 18417  006B02  26D9               	addwf	fsr2l,f,c
 18418  006B04  5017               	movf	(getHopCode@data+1)^0,w,c
 18419  006B06  22DA               	addwfc	fsr2h,f,c
 18420  006B08  5023               	movf	getHopCode@i^0,w,c
 18421  006B0A  0D06               	mullw	6
 18422  006B0C  0E00               	movlw	low _listSyncValues
 18423  006B0E  24F3               	addwf	243,w,c
 18424  006B10  6EE1               	movwf	fsr1l,c
 18425  006B12  0E03               	movlw	high _listSyncValues
 18426  006B14  20F4               	addwfc	prodh,w,c
 18427  006B16  6EE2               	movwf	fsr1h,c
 18428  006B18  50DE               	movf	postinc2,w,c
 18429  006B1A  18E6               	xorwf	postinc1,w,c
 18430  006B1C  E118               	bnz	l20773
 18431  006B1E  50DE               	movf	postinc2,w,c
 18432  006B20  18E6               	xorwf	postinc1,w,c
 18433  006B22  E115               	bnz	l20773
 18434  006B24  50DE               	movf	postinc2,w,c
 18435  006B26  18E6               	xorwf	postinc1,w,c
 18436  006B28  E112               	bnz	l20773
 18437  006B2A  50DE               	movf	postinc2,w,c
 18438  006B2C  18E6               	xorwf	postinc1,w,c
 18439  006B2E  A4D8               	btfss	status,2,c
 18440  006B30  D00E               	goto	l20773
 18441                           
 18442                           ; BSR set to: 0
 18443                           ;keeloqDecrypt_MC50.c: 273:         {;keeloqDecrypt_MC50.c: 274:             tempHop=lis
      +                          tSyncValues[i].sync;
 18444  006B32  5023               	movf	getHopCode@i^0,w,c
 18445  006B34  0D06               	mullw	6
 18446  006B36  0E04               	movlw	low (_listSyncValues+4)
 18447  006B38  24F3               	addwf	243,w,c
 18448  006B3A  6ED9               	movwf	fsr2l,c
 18449  006B3C  0E03               	movlw	high (_listSyncValues+4)
 18450  006B3E  20F4               	addwfc	prodh,w,c
 18451  006B40  6EDA               	movwf	fsr2h,c
 18452  006B42  CFDE F020          	movff	postinc2,getHopCode@tempHop
 18453  006B46  CFDD F021          	movff	postdec2,getHopCode@tempHop+1
 18454                           
 18455                           ; BSR set to: 0
 18456                           ;keeloqDecrypt_MC50.c: 275:             tempPos=i;
 18457  006B4A  C023  F022         	movff	getHopCode@i,getHopCode@tempPos
 18458  006B4E                     l20773:
 18459                           
 18460                           ; BSR set to: 0
 18461                           ;keeloqDecrypt_MC50.c: 278:     }
 18462  006B4E  2A23               	incf	getHopCode@i^0,f,c
 18463                           
 18464                           ; BSR set to: 0
 18465  006B50  0E18               	movlw	24
 18466  006B52  6423               	cpfsgt	getHopCode@i^0,c
 18467  006B54  D7D3               	goto	l20767
 18468                           
 18469                           ; BSR set to: 0
 18470                           ;keeloqDecrypt_MC50.c: 280:     if(tempPos<0)
 18471  006B56  AE22               	btfss	getHopCode@tempPos^0,7,c
 18472  006B58  D050               	goto	l20793
 18473                           
 18474                           ; BSR set to: 0
 18475                           ;keeloqDecrypt_MC50.c: 281:     {;keeloqDecrypt_MC50.c: 282:         listSyncValues[poin
      +                          tSync].serial=data->serialnumber;
 18476  006B5A  EE20 F004          	lfsr	2,4
 18477  006B5E  5016               	movf	getHopCode@data^0,w,c
 18478  006B60  26D9               	addwf	fsr2l,f,c
 18479  006B62  5017               	movf	(getHopCode@data+1)^0,w,c
 18480  006B64  22DA               	addwfc	fsr2h,f,c
 18481  006B66  C07A  F010         	movff	_pointSync,___wmul@multiplier	;volatile
 18482  006B6A  C07B  F011         	movff	_pointSync+1,___wmul@multiplier+1	;volatile
 18483  006B6E  0E00               	movlw	0
 18484  006B70  6E13               	movwf	(___wmul@multiplicand+1)^0,c
 18485  006B72  0E06               	movlw	6
 18486  006B74  6E12               	movwf	___wmul@multiplicand^0,c
 18487  006B76  ECFF  F04B         	call	___wmul	;wreg free
 18488  006B7A  0E00               	movlw	low _listSyncValues
 18489  006B7C  2410               	addwf	?___wmul^0,w,c
 18490  006B7E  6EE1               	movwf	fsr1l,c
 18491  006B80  0E03               	movlw	high _listSyncValues
 18492  006B82  2011               	addwfc	(?___wmul+1)^0,w,c
 18493  006B84  6EE2               	movwf	fsr1h,c
 18494  006B86  CFDE FFE6          	movff	postinc2,postinc1
 18495  006B8A  CFDE FFE6          	movff	postinc2,postinc1
 18496  006B8E  CFDE FFE6          	movff	postinc2,postinc1
 18497  006B92  CFDE FFE6          	movff	postinc2,postinc1
 18498                           
 18499                           ;keeloqDecrypt_MC50.c: 283:         listSyncValues[pointSync].sync=data->sync;
 18500  006B96  EE20 F008          	lfsr	2,8
 18501  006B9A  5016               	movf	getHopCode@data^0,w,c
 18502  006B9C  26D9               	addwf	fsr2l,f,c
 18503  006B9E  5017               	movf	(getHopCode@data+1)^0,w,c
 18504  006BA0  22DA               	addwfc	fsr2h,f,c
 18505  006BA2  C07A  F010         	movff	_pointSync,___wmul@multiplier	;volatile
 18506  006BA6  C07B  F011         	movff	_pointSync+1,___wmul@multiplier+1	;volatile
 18507  006BAA  0E00               	movlw	0
 18508  006BAC  6E13               	movwf	(___wmul@multiplicand+1)^0,c
 18509  006BAE  0E06               	movlw	6
 18510  006BB0  6E12               	movwf	___wmul@multiplicand^0,c
 18511  006BB2  ECFF  F04B         	call	___wmul	;wreg free
 18512  006BB6  0E04               	movlw	low (_listSyncValues+4)
 18513  006BB8  2410               	addwf	?___wmul^0,w,c
 18514  006BBA  6EE1               	movwf	fsr1l,c
 18515  006BBC  0E03               	movlw	high (_listSyncValues+4)
 18516  006BBE  2011               	addwfc	(?___wmul+1)^0,w,c
 18517  006BC0  6EE2               	movwf	fsr1h,c
 18518  006BC2  CFDE FFE6          	movff	postinc2,postinc1
 18519  006BC6  CFDD FFE5          	movff	postdec2,postdec1
 18520                           
 18521                           ;keeloqDecrypt_MC50.c: 284:         pointSync++;
 18522  006BCA  0100               	movlb	0	; () banked
 18523  006BCC  4B7A               	infsnz	_pointSync& (0+255),f,b	;volatile
 18524  006BCE  2B7B               	incf	(_pointSync+1)& (0+255),f,b	;volatile
 18525                           
 18526                           ; BSR set to: 0
 18527                           ;keeloqDecrypt_MC50.c: 285:         if(pointSync>=25)
 18528  006BD0  517B               	movf	(_pointSync+1)& (0+255),w,b	;volatile
 18529  006BD2  E104               	bnz	u23810
 18530  006BD4  0E19               	movlw	25
 18531  006BD6  5D7A               	subwf	_pointSync& (0+255),w,b	;volatile
 18532  006BD8  A0D8               	btfss	status,0,c
 18533  006BDA  D004               	goto	l20787
 18534  006BDC                     u23810:
 18535                           
 18536                           ; BSR set to: 0
 18537                           ;keeloqDecrypt_MC50.c: 286:         {;keeloqDecrypt_MC50.c: 287:             pointSync=0
      +                          ;
 18538  006BDC  0E00               	movlw	0
 18539  006BDE  6F7B               	movwf	(_pointSync+1)& (0+255),b	;volatile
 18540  006BE0  0E00               	movlw	0
 18541  006BE2  6F7A               	movwf	_pointSync& (0+255),b	;volatile
 18542  006BE4                     l20787:
 18543                           
 18544                           ; BSR set to: 0
 18545                           ;keeloqDecrypt_MC50.c: 289:         return ReqResync(Hop);
 18546  006BE4  C07C  F010         	movff	_Hop,ReqResync@CurrentHop
 18547  006BE8  C07D  F011         	movff	_Hop+1,ReqResync@CurrentHop+1
 18548  006BEC  EC43  F04D         	call	_ReqResync	;wreg free
 18549  006BF0  6E18               	movwf	??_getHopCode^0,c
 18550  006BF2  5018               	movf	??_getHopCode^0,w,c
 18551  006BF4  6E16               	movwf	?_getHopCode^0,c
 18552  006BF6  6A17               	clrf	(?_getHopCode+1)^0,c
 18553  006BF8  0012               	return	
 18554  006BFA                     l20793:
 18555                           
 18556                           ; BSR set to: 0
 18557                           ;keeloqDecrypt_MC50.c: 292:     {;keeloqDecrypt_MC50.c: 293:         listSyncValues[temp
      +                          Pos].sync=Hop;
 18558  006BFA  5022               	movf	getHopCode@tempPos^0,w,c
 18559  006BFC  0D06               	mullw	6
 18560  006BFE  0E04               	movlw	low (_listSyncValues+4)
 18561  006C00  24F3               	addwf	243,w,c
 18562  006C02  6ED9               	movwf	fsr2l,c
 18563  006C04  0E03               	movlw	high (_listSyncValues+4)
 18564  006C06  20F4               	addwfc	prodh,w,c
 18565  006C08  6EDA               	movwf	fsr2h,c
 18566  006C0A  C07C  FFDE         	movff	_Hop,postinc2
 18567  006C0E  C07D  FFDD         	movff	_Hop+1,postdec2
 18568                           
 18569                           ; BSR set to: 0
 18570                           ;keeloqDecrypt_MC50.c: 296:     return tempHop;
 18571  006C12  C020  F016         	movff	getHopCode@tempHop,?_getHopCode
 18572  006C16  C021  F017         	movff	getHopCode@tempHop+1,?_getHopCode+1
 18573  006C1A  0012               	return		;funcret
 18574  006C1C                     __end_of_getHopCode:
 18575                           	callstack 0
 18576                           
 18577 ;; *************** function _ReqResync *****************
 18578 ;; Defined at:
 18579 ;;		line 224 in file "keeloqDecrypt_MC50.c"
 18580 ;; Parameters:    Size  Location     Type
 18581 ;;  CurrentHop      2   15[COMRAM] unsigned short 
 18582 ;; Auto vars:     Size  Location     Type
 18583 ;;		None
 18584 ;; Return value:  Size  Location     Type
 18585 ;;                  1    wreg      enum E10730
 18586 ;; Registers used:
 18587 ;;		wreg, status,2, status,0
 18588 ;; Tracked objects:
 18589 ;;		On entry : 3F/0
 18590 ;;		On exit  : 3F/1
 18591 ;;		Unchanged: 0/0
 18592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18593 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18596 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18597 ;;Total ram usage:        2 bytes
 18598 ;; Hardware stack levels used: 1
 18599 ;; Hardware stack levels required when called: 4
 18600 ;; This function calls:
 18601 ;;		Nothing
 18602 ;; This function is called by:
 18603 ;;		_HopCHK
 18604 ;;		_getHopCode
 18605 ;; This function uses a non-reentrant model
 18606 ;;
 18607                           
 18608                           	psect	text65
 18609  009A86                     __ptext65:
 18610                           	callstack 0
 18611  009A86                     _ReqResync:
 18612                           	callstack 22
 18613                           
 18614                           ; BSR set to: 0
 18615                           ;keeloqDecrypt_MC50.c: 225:     F2Chance = 1;
 18616                           
 18617                           ;incstack = 0
 18618  009A86  0E01               	movlw	1
 18619  009A88  0101               	movlb	1	; () banked
 18620  009A8A  6F9A               	movwf	_F2Chance& (0+255),b
 18621                           
 18622                           ; BSR set to: 1
 18623                           ;keeloqDecrypt_MC50.c: 226:     NextHop = CurrentHop + 1;
 18624  009A8C  0E01               	movlw	1
 18625  009A8E  2410               	addwf	ReqResync@CurrentHop^0,w,c
 18626  009A90  6F87               	movwf	_NextHop& (0+255),b
 18627  009A92  0E00               	movlw	0
 18628  009A94  2011               	addwfc	(ReqResync@CurrentHop+1)^0,w,c
 18629  009A96  6F88               	movwf	(_NextHop+1)& (0+255),b
 18630                           
 18631                           ; BSR set to: 1
 18632                           ;keeloqDecrypt_MC50.c: 228:     return RESYNC_REQ;
 18633  009A98  0E09               	movlw	9
 18634                           
 18635                           ; BSR set to: 1
 18636  009A9A  0012               	return		;funcret
 18637  009A9C                     __end_of_ReqResync:
 18638                           	callstack 0
 18639                           
 18640 ;; *************** function _DecCHK *****************
 18641 ;; Defined at:
 18642 ;;		line 206 in file "keeloqDecrypt_MC50.c"
 18643 ;; Parameters:    Size  Location     Type
 18644 ;;  data            2   15[COMRAM] PTR struct .
 18645 ;;		 -> classic_data(16), 
 18646 ;; Auto vars:     Size  Location     Type
 18647 ;;		None
 18648 ;; Return value:  Size  Location     Type
 18649 ;;                  1    wreg      _Bool 
 18650 ;; Registers used:
 18651 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18652 ;; Tracked objects:
 18653 ;;		On entry : 3F/0
 18654 ;;		On exit  : 3F/0
 18655 ;;		Unchanged: 3F/0
 18656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18657 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18659 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18660 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18661 ;;Total ram usage:        4 bytes
 18662 ;; Hardware stack levels used: 1
 18663 ;; Hardware stack levels required when called: 4
 18664 ;; This function calls:
 18665 ;;		Nothing
 18666 ;; This function is called by:
 18667 ;;		_keeloqDecryptPacket
 18668 ;; This function uses a non-reentrant model
 18669 ;;
 18670                           
 18671                           	psect	text66
 18672  009432                     __ptext66:
 18673                           	callstack 0
 18674  009432                     _DecCHK:
 18675                           	callstack 24
 18676                           
 18677                           ; BSR set to: 0
 18678                           ;keeloqDecrypt_MC50.c: 208:     if (((data->fcode1 ^ data->fcode2) & 0x0f) != 0)
 18679                           
 18680                           ; BSR set to: 1
 18681                           ;incstack = 0
 18682  009432  EE20 F00D          	lfsr	2,13
 18683  009436  5010               	movf	DecCHK@data^0,w,c
 18684  009438  26D9               	addwf	fsr2l,f,c
 18685  00943A  5011               	movf	(DecCHK@data+1)^0,w,c
 18686  00943C  22DA               	addwfc	fsr2h,f,c
 18687  00943E  50DF               	movf	indf2,w,c
 18688  009440  6E12               	movwf	??_DecCHK^0,c
 18689  009442  EE20 F00C          	lfsr	2,12
 18690  009446  5010               	movf	DecCHK@data^0,w,c
 18691  009448  26D9               	addwf	fsr2l,f,c
 18692  00944A  5011               	movf	(DecCHK@data+1)^0,w,c
 18693  00944C  22DA               	addwfc	fsr2h,f,c
 18694  00944E  50DF               	movf	indf2,w,c
 18695  009450  1812               	xorwf	??_DecCHK^0,w,c
 18696  009452  6E13               	movwf	(??_DecCHK+1)^0,c
 18697  009454  0E0F               	movlw	15
 18698  009456  1613               	andwf	(??_DecCHK+1)^0,f,c
 18699  009458  B4D8               	btfsc	status,2,c
 18700  00945A  D002               	goto	l21457
 18701                           
 18702                           ; BSR set to: 0
 18703                           ;keeloqDecrypt_MC50.c: 209:         return 0;
 18704  00945C  0E00               	movlw	0
 18705  00945E  0012               	return	
 18706  009460                     l21457:
 18707                           
 18708                           ; BSR set to: 0
 18709                           ;keeloqDecrypt_MC50.c: 211:     return 1;
 18710  009460  0E01               	movlw	1
 18711                           
 18712                           ; BSR set to: 0
 18713  009462  0012               	return		;funcret
 18714  009464                     __end_of_DecCHK:
 18715                           	callstack 0
 18716                           
 18717 ;; *************** function _DecryptPacket_12BIT *****************
 18718 ;; Defined at:
 18719 ;;		line 370 in file "keeloqDecrypt_MC50.c"
 18720 ;; Parameters:    Size  Location     Type
 18721 ;;  data            2    8[BANK0 ] PTR unsigned char 
 18722 ;;		 -> BufferRF(9), 
 18723 ;;  classic_data    2   10[BANK0 ] PTR struct .
 18724 ;;		 -> classic_data(16), 
 18725 ;; Auto vars:     Size  Location     Type
 18726 ;;  commandType     1   12[BANK0 ] enum E10539
 18727 ;; Return value:  Size  Location     Type
 18728 ;;                  1    wreg      enum E10539
 18729 ;; Registers used:
 18730 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18731 ;; Tracked objects:
 18732 ;;		On entry : 3F/0
 18733 ;;		On exit  : 3F/0
 18734 ;;		Unchanged: 0/0
 18735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18736 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18737 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18739 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18740 ;;Total ram usage:        5 bytes
 18741 ;; Hardware stack levels used: 1
 18742 ;; Hardware stack levels required when called: 14
 18743 ;; This function calls:
 18744 ;;		_memcpy
 18745 ;;		_validateRemoteSerialNumber
 18746 ;; This function is called by:
 18747 ;;		_readRFButtons
 18748 ;; This function uses a non-reentrant model
 18749 ;;
 18750                           
 18751                           	psect	text67
 18752  007F7A                     __ptext67:
 18753                           	callstack 0
 18754  007F7A                     _DecryptPacket_12BIT:
 18755                           	callstack 15
 18756                           
 18757                           ; BSR set to: 0
 18758                           ;keeloqDecrypt_MC50.c: 370: TypeCMD DecryptPacket_12BIT (char* data,classic_encoder_t* c
      +                          lassic_data);keeloqDecrypt_MC50.c: 371: {;keeloqDecrypt_MC50.c: 372:     TypeCMD command
      +                          Type;;keeloqDecrypt_MC50.c: 373:     memcpy(&classic_data->serialnumber, data, 4);
 18759                           
 18760                           ; BSR set to: 0
 18761                           ;incstack = 0
 18762  007F7A  0E04               	movlw	4
 18763  007F7C  25E2               	addwf	DecryptPacket_12BIT@classic_data& (0+255),w,b
 18764  007F7E  6E10               	movwf	memcpy@d1^0,c
 18765  007F80  0E00               	movlw	0
 18766  007F82  21E3               	addwfc	(DecryptPacket_12BIT@classic_data+1)& (0+255),w,b
 18767  007F84  6E11               	movwf	(memcpy@d1+1)^0,c
 18768  007F86  C0E0  F012         	movff	DecryptPacket_12BIT@data,memcpy@s1
 18769  007F8A  C0E1  F013         	movff	DecryptPacket_12BIT@data+1,memcpy@s1+1
 18770  007F8E  0E00               	movlw	0
 18771  007F90  6E15               	movwf	(memcpy@n+1)^0,c
 18772  007F92  0E04               	movlw	4
 18773  007F94  6E14               	movwf	memcpy@n^0,c
 18774  007F96  ECE5  F048         	call	_memcpy	;wreg free
 18775                           
 18776                           ;keeloqDecrypt_MC50.c: 374:     commandType=validateRemoteSerialNumber(classic_data->ser
      +                          ialnumber,NO,&classic_data->positionMem);
 18777  007F9A  0100               	movlb	0	; () banked
 18778  007F9C  EE20 F004          	lfsr	2,4
 18779  007FA0  51E2               	movf	DecryptPacket_12BIT@classic_data& (0+255),w,b
 18780  007FA2  26D9               	addwf	fsr2l,f,c
 18781  007FA4  51E3               	movf	(DecryptPacket_12BIT@classic_data+1)& (0+255),w,b
 18782  007FA6  22DA               	addwfc	fsr2h,f,c
 18783  007FA8  CFDE F02E          	movff	postinc2,validateRemoteSerialNumber@serial
 18784  007FAC  CFDE F02F          	movff	postinc2,validateRemoteSerialNumber@serial+1
 18785  007FB0  CFDE F030          	movff	postinc2,validateRemoteSerialNumber@serial+2
 18786  007FB4  CFDE F031          	movff	postinc2,validateRemoteSerialNumber@serial+3
 18787  007FB8  0E00               	movlw	0
 18788  007FBA  6E32               	movwf	validateRemoteSerialNumber@VerifyOnlySerial^0,c
 18789  007FBC  0E0F               	movlw	15
 18790  007FBE  25E2               	addwf	DecryptPacket_12BIT@classic_data& (0+255),w,b
 18791  007FC0  6E33               	movwf	validateRemoteSerialNumber@position^0,c
 18792  007FC2  0E00               	movlw	0
 18793  007FC4  21E3               	addwfc	(DecryptPacket_12BIT@classic_data+1)& (0+255),w,b
 18794  007FC6  6E34               	movwf	(validateRemoteSerialNumber@position+1)^0,c
 18795  007FC8  EC5A  F02F         	call	_validateRemoteSerialNumber	;wreg free
 18796  007FCC  6FE4               	movwf	DecryptPacket_12BIT@commandType& (0+255),b
 18797                           
 18798                           ; BSR set to: 0
 18799                           ;keeloqDecrypt_MC50.c: 375:     classic_data->fcode1 = 0;
 18800  007FCE  EE20 F00C          	lfsr	2,12
 18801  007FD2  51E2               	movf	DecryptPacket_12BIT@classic_data& (0+255),w,b
 18802  007FD4  26D9               	addwf	fsr2l,f,c
 18803  007FD6  51E3               	movf	(DecryptPacket_12BIT@classic_data+1)& (0+255),w,b
 18804  007FD8  22DA               	addwfc	fsr2h,f,c
 18805  007FDA  0E00               	movlw	0
 18806  007FDC  6EDF               	movwf	indf2,c
 18807                           
 18808                           ; BSR set to: 0
 18809                           ;keeloqDecrypt_MC50.c: 376:     classic_data->sync = 0;
 18810  007FDE  EE20 F008          	lfsr	2,8
 18811  007FE2  51E2               	movf	DecryptPacket_12BIT@classic_data& (0+255),w,b
 18812  007FE4  26D9               	addwf	fsr2l,f,c
 18813  007FE6  51E3               	movf	(DecryptPacket_12BIT@classic_data+1)& (0+255),w,b
 18814  007FE8  22DA               	addwfc	fsr2h,f,c
 18815  007FEA  0E00               	movlw	0
 18816  007FEC  6EDE               	movwf	postinc2,c
 18817  007FEE  0E00               	movlw	0
 18818  007FF0  6EDD               	movwf	postdec2,c
 18819                           
 18820                           ; BSR set to: 0
 18821                           ;keeloqDecrypt_MC50.c: 377:     classic_data->type=DIP_12BIT;
 18822  007FF2  EE20 F00E          	lfsr	2,14
 18823  007FF6  51E2               	movf	DecryptPacket_12BIT@classic_data& (0+255),w,b
 18824  007FF8  26D9               	addwf	fsr2l,f,c
 18825  007FFA  51E3               	movf	(DecryptPacket_12BIT@classic_data+1)& (0+255),w,b
 18826  007FFC  22DA               	addwfc	fsr2h,f,c
 18827  007FFE  0E02               	movlw	2
 18828  008000  6EDF               	movwf	indf2,c
 18829                           
 18830                           ; BSR set to: 0
 18831                           ;keeloqDecrypt_MC50.c: 386:     return commandType;
 18832  008002  51E4               	movf	DecryptPacket_12BIT@commandType& (0+255),w,b
 18833                           
 18834                           ; BSR set to: 0
 18835  008004  0012               	return		;funcret
 18836  008006                     __end_of_DecryptPacket_12BIT:
 18837                           	callstack 0
 18838                           
 18839 ;; *************** function _readInputs *****************
 18840 ;; Defined at:
 18841 ;;		line 528 in file "inputs_MC50.c"
 18842 ;; Parameters:    Size  Location     Type
 18843 ;;		None
 18844 ;; Auto vars:     Size  Location     Type
 18845 ;;		None
 18846 ;; Return value:  Size  Location     Type
 18847 ;;                  1    wreg      void 
 18848 ;; Registers used:
 18849 ;;		wreg, status,2, status,0
 18850 ;; Tracked objects:
 18851 ;;		On entry : 3F/1
 18852 ;;		On exit  : 3E/0
 18853 ;;		Unchanged: 0/0
 18854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18858 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18859 ;;Total ram usage:        0 bytes
 18860 ;; Hardware stack levels used: 1
 18861 ;; Hardware stack levels required when called: 4
 18862 ;; This function calls:
 18863 ;;		Nothing
 18864 ;; This function is called by:
 18865 ;;		_main
 18866 ;; This function uses a non-reentrant model
 18867 ;;
 18868                           
 18869                           	psect	text68
 18870  0071B4                     __ptext68:
 18871                           	callstack 0
 18872  0071B4                     _readInputs:
 18873                           	callstack 26
 18874                           
 18875                           ; BSR set to: 1
 18876                           ;inputs_MC50.c: 533:     if(var_sys_NVM.Direction_motor == 0){fimdecurso.FimdeCursoClose
      +                          AUX=PORTAbits.RA1;}
 18877                           
 18878                           ; BSR set to: 0
 18879                           ;incstack = 0
 18880  0071B4  0100               	movlb	0	; () banked
 18881  0071B6  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 18882  0071B8  A4D8               	btfss	status,2,c
 18883  0071BA  D006               	goto	l24649
 18884                           
 18885                           ; BSR set to: 0
 18886  0071BC  0E00               	movlw	0
 18887  0071BE  B28D               	btfsc	141,1,c	;volatile
 18888  0071C0  0E01               	movlw	1
 18889  0071C2  0101               	movlb	1	; () banked
 18890  0071C4  6F78               	movwf	(_fimdecurso+3)& (0+255),b	;volatile
 18891  0071C6  D005               	goto	l24651
 18892  0071C8                     l24649:
 18893                           
 18894                           ; BSR set to: 0
 18895  0071C8  0E00               	movlw	0
 18896  0071CA  B48D               	btfsc	141,2,c	;volatile
 18897  0071CC  0E01               	movlw	1
 18898  0071CE  0101               	movlb	1	; () banked
 18899  0071D0  6F78               	movwf	(_fimdecurso+3)& (0+255),b	;volatile
 18900  0071D2                     l24651:
 18901                           
 18902                           ; BSR set to: 1
 18903                           ;inputs_MC50.c: 541:     if (fimdecurso.FimdeCursoCloseAUX==fimdecurso.FimdeCursoCloseOL
      +                          D)
 18904  0071D2  5179               	movf	(_fimdecurso+4)& (0+255),w,b	;volatile
 18905  0071D4  1978               	xorwf	(_fimdecurso+3)& (0+255),w,b	;volatile
 18906  0071D6  A4D8               	btfss	status,2,c
 18907  0071D8  D002               	goto	l1731
 18908                           
 18909                           ; BSR set to: 1
 18910                           ;inputs_MC50.c: 542:     {;inputs_MC50.c: 543:            fimdecurso.FimdeCursoCloseTime
      +                          r++;
 18911  0071DA  2B7A               	incf	(_fimdecurso+5)& (0+255),f,b	;volatile
 18912                           
 18913                           ;inputs_MC50.c: 544:     }
 18914  0071DC  D004               	goto	l1732
 18915  0071DE                     l1731:
 18916                           
 18917                           ; BSR set to: 1
 18918                           ;inputs_MC50.c: 547:     {;inputs_MC50.c: 548:             fimdecurso.FimdeCursoCloseOLD
      +                           = fimdecurso.FimdeCursoCloseAUX;
 18919  0071DE  C178  F179         	movff	_fimdecurso+3,_fimdecurso+4	;volatile
 18920                           
 18921                           ; BSR set to: 1
 18922                           ;inputs_MC50.c: 549:             fimdecurso.FimdeCursoCloseTimer=0;
 18923  0071E2  0E00               	movlw	0
 18924  0071E4  6F7A               	movwf	(_fimdecurso+5)& (0+255),b	;volatile
 18925  0071E6                     l1732:
 18926                           
 18927                           ; BSR set to: 1
 18928                           ;inputs_MC50.c: 553:     if (fimdecurso.FimdeCursoCloseTimer>=( 50/50))
 18929  0071E6  517A               	movf	(_fimdecurso+5)& (0+255),w,b	;volatile
 18930  0071E8  A4D8               	btfss	status,2,c
 18931                           
 18932                           ; BSR set to: 1
 18933                           ;inputs_MC50.c: 554:     {;inputs_MC50.c: 555:         var_sys.FimCurso_CloseIsEnabled=f
      +                          imdecurso.FimdeCursoCloseAUX;
 18934  0071EA  C178  F103         	movff	_fimdecurso+3,_var_sys+3	;volatile
 18935                           
 18936                           ; BSR set to: 1
 18937                           ;inputs_MC50.c: 564:     if(var_sys_NVM.Direction_motor == 0){fimdecurso.FimdeCursoOpenA
      +                          UX=PORTAbits.RA2;}
 18938  0071EE  0100               	movlb	0	; () banked
 18939  0071F0  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 18940  0071F2  A4D8               	btfss	status,2,c
 18941  0071F4  D006               	goto	l24663
 18942                           
 18943                           ; BSR set to: 0
 18944  0071F6  0E00               	movlw	0
 18945  0071F8  B48D               	btfsc	141,2,c	;volatile
 18946  0071FA  0E01               	movlw	1
 18947  0071FC  0101               	movlb	1	; () banked
 18948  0071FE  6F75               	movwf	_fimdecurso& (0+255),b	;volatile
 18949  007200  D005               	goto	l24665
 18950  007202                     l24663:
 18951                           
 18952                           ; BSR set to: 0
 18953  007202  0E00               	movlw	0
 18954  007204  B28D               	btfsc	141,1,c	;volatile
 18955  007206  0E01               	movlw	1
 18956  007208  0101               	movlb	1	; () banked
 18957  00720A  6F75               	movwf	_fimdecurso& (0+255),b	;volatile
 18958  00720C                     l24665:
 18959                           
 18960                           ; BSR set to: 1
 18961                           ;inputs_MC50.c: 570:     if (fimdecurso.FimdeCursoOpenAUX==fimdecurso.FimdeCursoOpenOLD)
 18962  00720C  5175               	movf	_fimdecurso& (0+255),w,b	;volatile
 18963  00720E  1976               	xorwf	(_fimdecurso+1)& (0+255),w,b	;volatile
 18964  007210  A4D8               	btfss	status,2,c
 18965  007212  D002               	goto	l1736
 18966                           
 18967                           ; BSR set to: 1
 18968                           ;inputs_MC50.c: 571:     {;inputs_MC50.c: 572:            fimdecurso.FimdeCursoOpenTimer
      +                          ++;
 18969  007214  2B77               	incf	(_fimdecurso+2)& (0+255),f,b	;volatile
 18970                           
 18971                           ;inputs_MC50.c: 573:     }
 18972  007216  D004               	goto	l1737
 18973  007218                     l1736:
 18974                           
 18975                           ; BSR set to: 1
 18976                           ;inputs_MC50.c: 576:     {;inputs_MC50.c: 577:             fimdecurso.FimdeCursoOpenOLD 
      +                          = fimdecurso.FimdeCursoOpenAUX;
 18977  007218  C175  F176         	movff	_fimdecurso,_fimdecurso+1	;volatile
 18978                           
 18979                           ; BSR set to: 1
 18980                           ;inputs_MC50.c: 578:             fimdecurso.FimdeCursoOpenTimer=0;
 18981  00721C  0E00               	movlw	0
 18982  00721E  6F77               	movwf	(_fimdecurso+2)& (0+255),b	;volatile
 18983  007220                     l1737:
 18984                           
 18985                           ; BSR set to: 1
 18986                           ;inputs_MC50.c: 582:     if (fimdecurso.FimdeCursoOpenTimer>=( 50/50))
 18987  007220  5177               	movf	(_fimdecurso+2)& (0+255),w,b	;volatile
 18988  007222  A4D8               	btfss	status,2,c
 18989                           
 18990                           ; BSR set to: 1
 18991                           ;inputs_MC50.c: 583:     {;inputs_MC50.c: 584:         var_sys.FimCurso_OpenIsEnabled=fi
      +                          mdecurso.FimdeCursoOpenAUX;
 18992  007224  C175  F104         	movff	_fimdecurso,_var_sys+4	;volatile
 18993                           
 18994                           ; BSR set to: 1
 18995                           ;inputs_MC50.c: 589:     security.PhotoCellAUX=PORTAbits.RA4;
 18996  007228  0E00               	movlw	0
 18997  00722A  B88D               	btfsc	141,4,c	;volatile
 18998  00722C  0E01               	movlw	1
 18999  00722E  6F6A               	movwf	_security& (0+255),b	;volatile
 19000                           
 19001                           ; BSR set to: 1
 19002                           ;inputs_MC50.c: 594:     if (security.PhotoCellAUX==security.PhotoCellOLD)
 19003  007230  516A               	movf	_security& (0+255),w,b	;volatile
 19004  007232  196B               	xorwf	(_security+1)& (0+255),w,b	;volatile
 19005  007234  A4D8               	btfss	status,2,c
 19006  007236  D002               	goto	l1739
 19007                           
 19008                           ; BSR set to: 1
 19009                           ;inputs_MC50.c: 595:     {;inputs_MC50.c: 596:            security.PhotoCellTimer++;
 19010  007238  2B6C               	incf	(_security+2)& (0+255),f,b	;volatile
 19011                           
 19012                           ;inputs_MC50.c: 597:     }
 19013  00723A  D004               	goto	l1740
 19014  00723C                     l1739:
 19015                           
 19016                           ; BSR set to: 1
 19017                           ;inputs_MC50.c: 600:     {;inputs_MC50.c: 601:             security.PhotoCellOLD = secur
      +                          ity.PhotoCellAUX;
 19018  00723C  C16A  F16B         	movff	_security,_security+1	;volatile
 19019                           
 19020                           ; BSR set to: 1
 19021                           ;inputs_MC50.c: 602:             security.PhotoCellTimer=0;
 19022  007240  0E00               	movlw	0
 19023  007242  6F6C               	movwf	(_security+2)& (0+255),b	;volatile
 19024  007244                     l1740:
 19025                           
 19026                           ; BSR set to: 1
 19027                           ;inputs_MC50.c: 606:     if (security.PhotoCellTimer>=( 50/50))
 19028  007244  516C               	movf	(_security+2)& (0+255),w,b	;volatile
 19029  007246  A4D8               	btfss	status,2,c
 19030                           
 19031                           ; BSR set to: 1
 19032                           ;inputs_MC50.c: 607:     {;inputs_MC50.c: 608:         var_sys.photoCellIsObstructed=sec
      +                          urity.PhotoCellAUX;
 19033  007248  C16A  F101         	movff	_security,_var_sys+1	;volatile
 19034                           
 19035                           ; BSR set to: 1
 19036                           ;inputs_MC50.c: 612:     security.SecurityBarAUX=PORTAbits.RA5;
 19037  00724C  0E00               	movlw	0
 19038  00724E  BA8D               	btfsc	141,5,c	;volatile
 19039  007250  0E01               	movlw	1
 19040  007252  6F6D               	movwf	(_security+3)& (0+255),b	;volatile
 19041                           
 19042                           ; BSR set to: 1
 19043                           ;inputs_MC50.c: 616:     if (security.SecurityBarAUX==security.SecurityBarOLD)
 19044  007254  516E               	movf	(_security+4)& (0+255),w,b	;volatile
 19045  007256  196D               	xorwf	(_security+3)& (0+255),w,b	;volatile
 19046  007258  A4D8               	btfss	status,2,c
 19047  00725A  D002               	goto	l1742
 19048                           
 19049                           ; BSR set to: 1
 19050                           ;inputs_MC50.c: 617:     {;inputs_MC50.c: 618:            security.SecurityBarTimer++;
 19051  00725C  2B6F               	incf	(_security+5)& (0+255),f,b	;volatile
 19052                           
 19053                           ;inputs_MC50.c: 619:     }
 19054  00725E  D004               	goto	l1743
 19055  007260                     l1742:
 19056                           
 19057                           ; BSR set to: 1
 19058                           ;inputs_MC50.c: 622:     {;inputs_MC50.c: 623:             security.SecurityBarOLD = sec
      +                          urity.SecurityBarAUX;
 19059  007260  C16D  F16E         	movff	_security+3,_security+4	;volatile
 19060                           
 19061                           ; BSR set to: 1
 19062                           ;inputs_MC50.c: 624:             security.SecurityBarTimer=0;
 19063  007264  0E00               	movlw	0
 19064  007266  6F6F               	movwf	(_security+5)& (0+255),b	;volatile
 19065  007268                     l1743:
 19066                           
 19067                           ; BSR set to: 1
 19068                           ;inputs_MC50.c: 628:     if (security.SecurityBarTimer>=( 50/50))
 19069  007268  516F               	movf	(_security+5)& (0+255),w,b	;volatile
 19070  00726A  A4D8               	btfss	status,2,c
 19071                           
 19072                           ; BSR set to: 1
 19073                           ;inputs_MC50.c: 629:     {;inputs_MC50.c: 630:         security.SecurityBarSTATE=securit
      +                          y.SecurityBarAUX;
 19074  00726C  C16D  F170         	movff	_security+3,_security+6	;volatile
 19075                           
 19076                           ; BSR set to: 1
 19077                           ;inputs_MC50.c: 633:     security.SecurityBar8K2AUX=PORTAbits.RA6;
 19078  007270  0E00               	movlw	0
 19079  007272  BC8D               	btfsc	141,6,c	;volatile
 19080  007274  0E01               	movlw	1
 19081  007276  6F71               	movwf	(_security+7)& (0+255),b	;volatile
 19082                           
 19083                           ; BSR set to: 1
 19084                           ;inputs_MC50.c: 637:     if (security.SecurityBar8K2AUX==security.SecurityBar8K2OLD)
 19085  007278  5172               	movf	(_security+8)& (0+255),w,b	;volatile
 19086  00727A  1971               	xorwf	(_security+7)& (0+255),w,b	;volatile
 19087  00727C  A4D8               	btfss	status,2,c
 19088  00727E  D002               	goto	l1745
 19089                           
 19090                           ; BSR set to: 1
 19091                           ;inputs_MC50.c: 638:     {;inputs_MC50.c: 639:            security.SecurityBar8K2Timer++
      +                          ;
 19092  007280  2B73               	incf	(_security+9)& (0+255),f,b	;volatile
 19093                           
 19094                           ;inputs_MC50.c: 640:     }
 19095  007282  D004               	goto	l1746
 19096  007284                     l1745:
 19097                           
 19098                           ; BSR set to: 1
 19099                           ;inputs_MC50.c: 643:     {;inputs_MC50.c: 644:             security.SecurityBar8K2OLD = 
      +                          security.SecurityBar8K2AUX;
 19100  007284  C171  F172         	movff	_security+7,_security+8	;volatile
 19101                           
 19102                           ; BSR set to: 1
 19103                           ;inputs_MC50.c: 645:             security.SecurityBar8K2Timer=0;
 19104  007288  0E00               	movlw	0
 19105  00728A  6F73               	movwf	(_security+9)& (0+255),b	;volatile
 19106  00728C                     l1746:
 19107                           
 19108                           ; BSR set to: 1
 19109                           ;inputs_MC50.c: 649:     if (security.SecurityBar8K2Timer>=( 50/50))
 19110  00728C  5173               	movf	(_security+9)& (0+255),w,b	;volatile
 19111  00728E  A4D8               	btfss	status,2,c
 19112                           
 19113                           ; BSR set to: 1
 19114                           ;inputs_MC50.c: 650:     {;inputs_MC50.c: 651:         security.SecurityBar8K2STATE=secu
      +                          rity.SecurityBar8K2AUX;
 19115  007290  C171  F174         	movff	_security+7,_security+10	;volatile
 19116                           
 19117                           ; BSR set to: 1
 19118                           ;inputs_MC50.c: 655:     if (var_sys_NVM.securityBandType == 0)
 19119  007294  0100               	movlb	0	; () banked
 19120  007296  51A2               	movf	(_var_sys_NVM+10)& (0+255),w,b	;volatile
 19121  007298  A4D8               	btfss	status,2,c
 19122  00729A  D00D               	goto	l1748
 19123                           
 19124                           ; BSR set to: 0
 19125                           ;inputs_MC50.c: 656:     {;inputs_MC50.c: 657:         if(security.SecurityBarSTATE==0 &
      +                          & security.SecurityBar8K2STATE==1)
 19126  00729C  0101               	movlb	1	; () banked
 19127  00729E  5170               	movf	(_security+6)& (0+255),w,b	;volatile
 19128  0072A0  A4D8               	btfss	status,2,c
 19129  0072A2  D006               	goto	l24711
 19130                           
 19131                           ; BSR set to: 1
 19132  0072A4  0574               	decf	(_security+10)& (0+255),w,b	;volatile
 19133  0072A6  A4D8               	btfss	status,2,c
 19134  0072A8  D003               	goto	l24711
 19135                           
 19136                           ; BSR set to: 1
 19137                           ;inputs_MC50.c: 658:         {;inputs_MC50.c: 659:             var_sys.SecurityBarIsObst
      +                          ructed = NO;
 19138  0072AA  0E00               	movlw	0
 19139  0072AC  6F02               	movwf	(_var_sys+2)& (0+255),b	;volatile
 19140                           
 19141                           ;inputs_MC50.c: 660:         }
 19142  0072AE  0012               	return	
 19143  0072B0                     l24711:
 19144                           
 19145                           ; BSR set to: 1
 19146                           ;inputs_MC50.c: 662:         {;inputs_MC50.c: 663:             var_sys.SecurityBarIsObst
      +                          ructed = YES;
 19147  0072B0  0E01               	movlw	1
 19148  0072B2  6F02               	movwf	(_var_sys+2)& (0+255),b	;volatile
 19149  0072B4  0012               	return	
 19150  0072B6                     l1748:
 19151                           
 19152                           ; BSR set to: 0
 19153                           ;inputs_MC50.c: 667:     {;inputs_MC50.c: 668:         var_sys.SecurityBarIsObstructed =
      +                           security.SecurityBarSTATE;
 19154  0072B6  C170  F102         	movff	_security+6,_var_sys+2	;volatile
 19155  0072BA  0012               	return		;funcret
 19156  0072BC                     __end_of_readInputs:
 19157                           	callstack 0
 19158                           
 19159 ;; *************** function _loadNVM_VarSystem *****************
 19160 ;; Defined at:
 19161 ;;		line 151 in file "controlMemory_MC50.c"
 19162 ;; Parameters:    Size  Location     Type
 19163 ;;		None
 19164 ;; Auto vars:     Size  Location     Type
 19165 ;;		None
 19166 ;; Return value:  Size  Location     Type
 19167 ;;                  1    wreg      void 
 19168 ;; Registers used:
 19169 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19170 ;; Tracked objects:
 19171 ;;		On entry : 3F/0
 19172 ;;		On exit  : 0/0
 19173 ;;		Unchanged: 0/0
 19174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19178 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19179 ;;Total ram usage:        0 bytes
 19180 ;; Hardware stack levels used: 1
 19181 ;; Hardware stack levels required when called: 15
 19182 ;; This function calls:
 19183 ;;		_I2C1_Read1ByteRegister
 19184 ;;		_ResetDefaultMemory
 19185 ;;		_SaveNVM_VarSystem
 19186 ;;		_checkNVM_VarSystem
 19187 ;;		_i2c_readDataBlock
 19188 ;; This function is called by:
 19189 ;;		_main
 19190 ;; This function uses a non-reentrant model
 19191 ;;
 19192                           
 19193                           	psect	text69
 19194  006C1C                     __ptext69:
 19195                           	callstack 0
 19196  006C1C                     _loadNVM_VarSystem:
 19197                           	callstack 15
 19198                           
 19199                           ; BSR set to: 0
 19200                           ;controlMemory_MC50.c: 153:     if((I2C1_Read1ByteRegister(0x50, 0) == 0xFF) && (I2C1_Re
      +                          ad1ByteRegister(0x50, 16) == 0xFF))
 19201                           
 19202                           ;incstack = 0
 19203  006C1C  0E00               	movlw	0
 19204  006C1E  6E22               	movwf	I2C1_Read1ByteRegister@reg^0,c
 19205  006C20  0E50               	movlw	80
 19206  006C22  EC31  F046         	call	_I2C1_Read1ByteRegister
 19207  006C26  0AFF               	xorlw	255
 19208  006C28  A4D8               	btfss	status,2,c
 19209  006C2A  D04C               	goto	l24515
 19210  006C2C  0E10               	movlw	16
 19211  006C2E  6E22               	movwf	I2C1_Read1ByteRegister@reg^0,c
 19212  006C30  0E50               	movlw	80
 19213  006C32  EC31  F046         	call	_I2C1_Read1ByteRegister
 19214  006C36  0AFF               	xorlw	255
 19215  006C38  A4D8               	btfss	status,2,c
 19216  006C3A  D044               	goto	l24515
 19217                           
 19218                           ;controlMemory_MC50.c: 154:     {;controlMemory_MC50.c: 155:         ResetDefaultMemory(
      +                          SC);
 19219  006C3C  0E00               	movlw	0
 19220  006C3E  EC8D  F032         	call	_ResetDefaultMemory
 19221                           
 19222                           ;controlMemory_MC50.c: 156:         var_sys_NVM.learningTimeToClose = 0;
 19223  006C42  0E00               	movlw	0
 19224  006C44  0100               	movlb	0	; () banked
 19225  006C46  6FD0               	movwf	(_var_sys_NVM+56)& (0+255),b	;volatile
 19226  006C48  0E00               	movlw	0
 19227  006C4A  6FD1               	movwf	(_var_sys_NVM+57)& (0+255),b	;volatile
 19228  006C4C  0E00               	movlw	0
 19229  006C4E  6FD2               	movwf	(_var_sys_NVM+58)& (0+255),b	;volatile
 19230  006C50  0E00               	movlw	0
 19231  006C52  6FD3               	movwf	(_var_sys_NVM+59)& (0+255),b	;volatile
 19232                           
 19233                           ; BSR set to: 0
 19234                           ;controlMemory_MC50.c: 157:         var_sys_NVM.learningTimeToOpen = 0;
 19235  006C54  0E00               	movlw	0
 19236  006C56  6FCC               	movwf	(_var_sys_NVM+52)& (0+255),b	;volatile
 19237  006C58  0E00               	movlw	0
 19238  006C5A  6FCD               	movwf	(_var_sys_NVM+53)& (0+255),b	;volatile
 19239  006C5C  0E00               	movlw	0
 19240  006C5E  6FCE               	movwf	(_var_sys_NVM+54)& (0+255),b	;volatile
 19241  006C60  0E00               	movlw	0
 19242  006C62  6FCF               	movwf	(_var_sys_NVM+55)& (0+255),b	;volatile
 19243                           
 19244                           ; BSR set to: 0
 19245                           ;controlMemory_MC50.c: 158:         var_sys_NVM.learningCurrentNormalClose = 0;
 19246  006C64  0E00               	movlw	0
 19247  006C66  6FC9               	movwf	(_var_sys_NVM+49)& (0+255),b	;volatile
 19248  006C68  0E00               	movlw	0
 19249  006C6A  6FC8               	movwf	(_var_sys_NVM+48)& (0+255),b	;volatile
 19250                           
 19251                           ; BSR set to: 0
 19252                           ;controlMemory_MC50.c: 159:         var_sys_NVM.learningCurrentNormalOpen = 0;
 19253  006C6C  0E00               	movlw	0
 19254  006C6E  6FCB               	movwf	(_var_sys_NVM+51)& (0+255),b	;volatile
 19255  006C70  0E00               	movlw	0
 19256  006C72  6FCA               	movwf	(_var_sys_NVM+50)& (0+255),b	;volatile
 19257                           
 19258                           ; BSR set to: 0
 19259                           ;controlMemory_MC50.c: 160:         var_sys_NVM.learningCurrentDecelarationClose = 0;
 19260  006C74  0E00               	movlw	0
 19261  006C76  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 19262  006C78  0E00               	movlw	0
 19263  006C7A  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 19264  006C7C  0E00               	movlw	0
 19265  006C7E  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 19266  006C80  0E00               	movlw	0
 19267  006C82  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 19268                           
 19269                           ; BSR set to: 0
 19270                           ;controlMemory_MC50.c: 161:         var_sys_NVM.learningCurrentDecelarationOpen = 0;
 19271  006C84  0E00               	movlw	0
 19272  006C86  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 19273  006C88  0E00               	movlw	0
 19274  006C8A  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 19275  006C8C  0E00               	movlw	0
 19276  006C8E  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 19277  006C90  0E00               	movlw	0
 19278  006C92  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 19279                           
 19280                           ;controlMemory_MC50.c: 162:         SaveNVM_VarSystem(pageMemoryLearningVars);
 19281  006C94  0E03               	movlw	3
 19282  006C96  ECE3  F049         	call	_SaveNVM_VarSystem
 19283                           
 19284                           ;controlMemory_MC50.c: 163:         var_sys_NVM.positionRemotesFull = 0;
 19285  006C9A  0E00               	movlw	0
 19286  006C9C  0100               	movlb	0	; () banked
 19287  006C9E  6FB8               	movwf	(_var_sys_NVM+32)& (0+255),b	;volatile
 19288                           
 19289                           ; BSR set to: 0
 19290                           ;controlMemory_MC50.c: 164:         var_sys_NVM.positionRemotesWalk = 0;
 19291  006CA0  0E00               	movlw	0
 19292  006CA2  6FB9               	movwf	(_var_sys_NVM+33)& (0+255),b	;volatile
 19293                           
 19294                           ; BSR set to: 0
 19295                           ;controlMemory_MC50.c: 165:         var_sys_NVM.OnlyRollingCode = NO;
 19296  006CA4  0E00               	movlw	0
 19297  006CA6  6FBE               	movwf	(_var_sys_NVM+38)& (0+255),b	;volatile
 19298                           
 19299                           ; BSR set to: 0
 19300                           ;controlMemory_MC50.c: 166:         var_sys_NVM.counterMoves = 0;
 19301  006CA8  0E00               	movlw	0
 19302  006CAA  6FBA               	movwf	(_var_sys_NVM+34)& (0+255),b	;volatile
 19303  006CAC  0E00               	movlw	0
 19304  006CAE  6FBB               	movwf	(_var_sys_NVM+35)& (0+255),b	;volatile
 19305  006CB0  0E00               	movlw	0
 19306  006CB2  6FBC               	movwf	(_var_sys_NVM+36)& (0+255),b	;volatile
 19307  006CB4  0E00               	movlw	0
 19308  006CB6  6FBD               	movwf	(_var_sys_NVM+37)& (0+255),b	;volatile
 19309                           
 19310                           ;controlMemory_MC50.c: 167:        SaveNVM_VarSystem(pageMemoryCounters);
 19311  006CB8  0E02               	movlw	2
 19312  006CBA  ECE3  F049         	call	_SaveNVM_VarSystem
 19313                           
 19314                           ;controlMemory_MC50.c: 169:          var_sys_NVM.TypeofMotor = 0;
 19315  006CBE  0E00               	movlw	0
 19316  006CC0  0100               	movlb	0	; () banked
 19317  006CC2  6FB4               	movwf	(_var_sys_NVM+28)& (0+255),b	;volatile
 19318  006CC4                     l24515:
 19319                           
 19320                           ;controlMemory_MC50.c: 172:     i2c_readDataBlock(0x50, (uint16_t)(pageMemoryP * 16),(ch
      +                          ar*)&var_sys_NVM,16);
 19321  006CC4  0E00               	movlw	0
 19322  006CC6  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 19323  006CC8  0E00               	movlw	0
 19324  006CCA  6E22               	movwf	i2c_readDataBlock@reg^0,c
 19325  006CCC  0E98               	movlw	low _var_sys_NVM
 19326  006CCE  6E24               	movwf	i2c_readDataBlock@data^0,c
 19327  006CD0  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
 19328  006CD2  0E00               	movlw	0
 19329  006CD4  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 19330  006CD6  0E10               	movlw	16
 19331  006CD8  6E26               	movwf	i2c_readDataBlock@len^0,c
 19332  006CDA  0E50               	movlw	80
 19333  006CDC  EC4D  F043         	call	_i2c_readDataBlock
 19334                           
 19335                           ;controlMemory_MC50.c: 173:     i2c_readDataBlock(0x50, (uint16_t)(pageMemoryE * 16),(ch
      +                          ar*)&var_sys_NVM.homemPresente, 16);
 19336  006CE0  0E00               	movlw	0
 19337  006CE2  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 19338  006CE4  0E10               	movlw	16
 19339  006CE6  6E22               	movwf	i2c_readDataBlock@reg^0,c
 19340  006CE8  0EA8               	movlw	low (_var_sys_NVM+16)
 19341  006CEA  6E24               	movwf	i2c_readDataBlock@data^0,c
 19342  006CEC  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
 19343  006CEE  0E00               	movlw	0
 19344  006CF0  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 19345  006CF2  0E10               	movlw	16
 19346  006CF4  6E26               	movwf	i2c_readDataBlock@len^0,c
 19347  006CF6  0E50               	movlw	80
 19348  006CF8  EC4D  F043         	call	_i2c_readDataBlock
 19349                           
 19350                           ;controlMemory_MC50.c: 174:     i2c_readDataBlock(0x50, (uint16_t)(pageMemoryCounters * 
      +                          16),(char*)&var_sys_NVM.positionRemotesFull,16);
 19351  006CFC  0E00               	movlw	0
 19352  006CFE  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 19353  006D00  0E20               	movlw	32
 19354  006D02  6E22               	movwf	i2c_readDataBlock@reg^0,c
 19355  006D04  0EB8               	movlw	low (_var_sys_NVM+32)
 19356  006D06  6E24               	movwf	i2c_readDataBlock@data^0,c
 19357  006D08  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
 19358  006D0A  0E00               	movlw	0
 19359  006D0C  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 19360  006D0E  0E10               	movlw	16
 19361  006D10  6E26               	movwf	i2c_readDataBlock@len^0,c
 19362  006D12  0E50               	movlw	80
 19363  006D14  EC4D  F043         	call	_i2c_readDataBlock
 19364                           
 19365                           ;controlMemory_MC50.c: 175:     i2c_readDataBlock(0x50, (uint16_t)(pageMemoryLearningVar
      +                          s * 16),(char*)&var_sys_NVM.learningCurrentNormalClose, 16);
 19366  006D18  0E00               	movlw	0
 19367  006D1A  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 19368  006D1C  0E30               	movlw	48
 19369  006D1E  6E22               	movwf	i2c_readDataBlock@reg^0,c
 19370  006D20  0EC8               	movlw	low (_var_sys_NVM+48)
 19371  006D22  6E24               	movwf	i2c_readDataBlock@data^0,c
 19372  006D24  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
 19373  006D26  0E00               	movlw	0
 19374  006D28  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 19375  006D2A  0E10               	movlw	16
 19376  006D2C  6E26               	movwf	i2c_readDataBlock@len^0,c
 19377  006D2E  0E50               	movlw	80
 19378  006D30  EC4D  F043         	call	_i2c_readDataBlock
 19379                           
 19380                           ;controlMemory_MC50.c: 178:     checkNVM_VarSystem();
 19381  006D34  EC8A  F02E         	call	_checkNVM_VarSystem	;wreg free
 19382                           
 19383                           ;controlMemory_MC50.c: 180:     var_sys.actualCounterMoves=var_sys_NVM.counterMoves;
 19384  006D38  C0BA  F13C         	movff	_var_sys_NVM+34,_var_sys+60	;volatile
 19385  006D3C  C0BB  F13D         	movff	_var_sys_NVM+35,_var_sys+61	;volatile
 19386  006D40  C0BC  F13E         	movff	_var_sys_NVM+36,_var_sys+62	;volatile
 19387  006D44  C0BD  F13F         	movff	_var_sys_NVM+37,_var_sys+63	;volatile
 19388  006D48  0012               	return		;funcret
 19389  006D4A                     __end_of_loadNVM_VarSystem:
 19390                           	callstack 0
 19391                           
 19392 ;; *************** function _checkNVM_VarSystem *****************
 19393 ;; Defined at:
 19394 ;;		line 326 in file "controlMemory_MC50.c"
 19395 ;; Parameters:    Size  Location     Type
 19396 ;;		None
 19397 ;; Auto vars:     Size  Location     Type
 19398 ;;  saveParam       1   57[COMRAM] unsigned char 
 19399 ;; Return value:  Size  Location     Type
 19400 ;;                  1    wreg      void 
 19401 ;; Registers used:
 19402 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19403 ;; Tracked objects:
 19404 ;;		On entry : 0/2
 19405 ;;		On exit  : 0/0
 19406 ;;		Unchanged: 0/0
 19407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19408 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19409 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19411 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19412 ;;Total ram usage:        1 bytes
 19413 ;; Hardware stack levels used: 1
 19414 ;; Hardware stack levels required when called: 14
 19415 ;; This function calls:
 19416 ;;		_SaveNVM_VarSystem
 19417 ;; This function is called by:
 19418 ;;		_loadNVM_VarSystem
 19419 ;; This function uses a non-reentrant model
 19420 ;;
 19421                           
 19422                           	psect	text70
 19423  005D14                     __ptext70:
 19424                           	callstack 0
 19425  005D14                     _checkNVM_VarSystem:
 19426                           	callstack 15
 19427                           
 19428                           ;controlMemory_MC50.c: 328:     char saveParam;;controlMemory_MC50.c: 331:     saveParam
      +                           = 0;
 19429                           
 19430                           ;incstack = 0
 19431  005D14  0E00               	movlw	0
 19432  005D16  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19433                           
 19434                           ;controlMemory_MC50.c: 339:     if ( var_sys_NVM.decelarationOpen>45 )
 19435  005D18  0E2D               	movlw	45
 19436  005D1A  0100               	movlb	0	; () banked
 19437  005D1C  6598               	cpfsgt	_var_sys_NVM& (0+255),b	;volatile
 19438  005D1E  D004               	goto	l22669
 19439                           
 19440                           ; BSR set to: 0
 19441                           ;controlMemory_MC50.c: 340:     {;controlMemory_MC50.c: 342:         var_sys_NVM.decelar
      +                          ationOpen = 3;
 19442  005D20  0E03               	movlw	3
 19443  005D22  6F98               	movwf	_var_sys_NVM& (0+255),b	;volatile
 19444                           
 19445                           ;controlMemory_MC50.c: 343:         saveParam=1;
 19446  005D24  0E01               	movlw	1
 19447  005D26  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19448  005D28                     l22669:
 19449                           
 19450                           ; BSR set to: 0
 19451                           ;controlMemory_MC50.c: 346:     if ( var_sys_NVM.decelarationClose>45 )
 19452  005D28  0E2D               	movlw	45
 19453  005D2A  6599               	cpfsgt	(_var_sys_NVM+1)& (0+255),b	;volatile
 19454  005D2C  D004               	goto	l1495
 19455                           
 19456                           ; BSR set to: 0
 19457                           ;controlMemory_MC50.c: 347:     {;controlMemory_MC50.c: 349:         var_sys_NVM.decelar
      +                          ationClose = 3;
 19458  005D2E  0E03               	movlw	3
 19459  005D30  6F99               	movwf	(_var_sys_NVM+1)& (0+255),b	;volatile
 19460                           
 19461                           ;controlMemory_MC50.c: 350:         saveParam=1;
 19462  005D32  0E01               	movlw	1
 19463  005D34  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19464  005D36                     l1495:
 19465                           
 19466                           ; BSR set to: 0
 19467                           ;controlMemory_MC50.c: 353:     if ( (var_sys_NVM.motorPower<1) || (var_sys_NVM.motorPow
      +                          er>9) )
 19468  005D36  519A               	movf	(_var_sys_NVM+2)& (0+255),w,b	;volatile
 19469  005D38  B4D8               	btfsc	status,2,c
 19470  005D3A  D003               	goto	u26070
 19471                           
 19472                           ; BSR set to: 0
 19473  005D3C  0E09               	movlw	9
 19474  005D3E  659A               	cpfsgt	(_var_sys_NVM+2)& (0+255),b	;volatile
 19475  005D40  D004               	goto	l22677
 19476  005D42                     u26070:
 19477                           
 19478                           ; BSR set to: 0
 19479                           ;controlMemory_MC50.c: 354:     {;controlMemory_MC50.c: 356:         var_sys_NVM.motorPo
      +                          wer = 9;
 19480  005D42  0E09               	movlw	9
 19481  005D44  6F9A               	movwf	(_var_sys_NVM+2)& (0+255),b	;volatile
 19482                           
 19483                           ;controlMemory_MC50.c: 357:         saveParam=1;
 19484  005D46  0E01               	movlw	1
 19485  005D48  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19486  005D4A                     l22677:
 19487                           
 19488                           ; BSR set to: 0
 19489                           ;controlMemory_MC50.c: 360:     if ( var_sys_NVM.motorSensitivity>9 )
 19490  005D4A  0E09               	movlw	9
 19491  005D4C  659B               	cpfsgt	(_var_sys_NVM+3)& (0+255),b	;volatile
 19492  005D4E  D004               	goto	l22681
 19493                           
 19494                           ; BSR set to: 0
 19495                           ;controlMemory_MC50.c: 361:     {;controlMemory_MC50.c: 363:         var_sys_NVM.motorSe
      +                          nsitivity = 0;
 19496  005D50  0E00               	movlw	0
 19497  005D52  6F9B               	movwf	(_var_sys_NVM+3)& (0+255),b	;volatile
 19498                           
 19499                           ;controlMemory_MC50.c: 364:         saveParam=1;
 19500  005D54  0E01               	movlw	1
 19501  005D56  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19502  005D58                     l22681:
 19503                           
 19504                           ; BSR set to: 0
 19505                           ;controlMemory_MC50.c: 367:     if ( var_sys_NVM.walkTime>99 )
 19506  005D58  0E63               	movlw	99
 19507  005D5A  659C               	cpfsgt	(_var_sys_NVM+4)& (0+255),b	;volatile
 19508  005D5C  D004               	goto	l22685
 19509                           
 19510                           ; BSR set to: 0
 19511                           ;controlMemory_MC50.c: 368:     {;controlMemory_MC50.c: 370:         var_sys_NVM.walkTim
      +                          e = 10;
 19512  005D5E  0E0A               	movlw	10
 19513  005D60  6F9C               	movwf	(_var_sys_NVM+4)& (0+255),b	;volatile
 19514                           
 19515                           ;controlMemory_MC50.c: 371:         saveParam=1;
 19516  005D62  0E01               	movlw	1
 19517  005D64  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19518  005D66                     l22685:
 19519                           
 19520                           ; BSR set to: 0
 19521                           ;controlMemory_MC50.c: 374:     if ( var_sys_NVM.autoTimeFullClose>99 )
 19522  005D66  0E63               	movlw	99
 19523  005D68  659D               	cpfsgt	(_var_sys_NVM+5)& (0+255),b	;volatile
 19524  005D6A  D004               	goto	l22689
 19525                           
 19526                           ; BSR set to: 0
 19527                           ;controlMemory_MC50.c: 375:     {;controlMemory_MC50.c: 377:         var_sys_NVM.autoTim
      +                          eFullClose = 0;
 19528  005D6C  0E00               	movlw	0
 19529  005D6E  6F9D               	movwf	(_var_sys_NVM+5)& (0+255),b	;volatile
 19530                           
 19531                           ;controlMemory_MC50.c: 378:         saveParam=1;
 19532  005D70  0E01               	movlw	1
 19533  005D72  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19534  005D74                     l22689:
 19535                           
 19536                           ; BSR set to: 0
 19537                           ;controlMemory_MC50.c: 381:     if ( var_sys_NVM.autoTimeWalkClose>99 )
 19538  005D74  0E63               	movlw	99
 19539  005D76  659E               	cpfsgt	(_var_sys_NVM+6)& (0+255),b	;volatile
 19540  005D78  D004               	goto	l22693
 19541                           
 19542                           ; BSR set to: 0
 19543                           ;controlMemory_MC50.c: 382:     {;controlMemory_MC50.c: 384:         var_sys_NVM.autoTim
      +                          eWalkClose = 0;
 19544  005D7A  0E00               	movlw	0
 19545  005D7C  6F9E               	movwf	(_var_sys_NVM+6)& (0+255),b	;volatile
 19546                           
 19547                           ;controlMemory_MC50.c: 385:         saveParam=1;
 19548  005D7E  0E01               	movlw	1
 19549  005D80  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19550  005D82                     l22693:
 19551                           
 19552                           ; BSR set to: 0
 19553                           ;controlMemory_MC50.c: 388:     if ( var_sys_NVM.photoCellIsON>1 )
 19554  005D82  0E01               	movlw	1
 19555  005D84  659F               	cpfsgt	(_var_sys_NVM+7)& (0+255),b	;volatile
 19556  005D86  D004               	goto	l22697
 19557                           
 19558                           ; BSR set to: 0
 19559                           ;controlMemory_MC50.c: 389:     {;controlMemory_MC50.c: 391:         var_sys_NVM.photoCe
      +                          llIsON = 0;
 19560  005D88  0E00               	movlw	0
 19561  005D8A  6F9F               	movwf	(_var_sys_NVM+7)& (0+255),b	;volatile
 19562                           
 19563                           ;controlMemory_MC50.c: 392:         saveParam=1;
 19564  005D8C  0E01               	movlw	1
 19565  005D8E  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19566  005D90                     l22697:
 19567                           
 19568                           ; BSR set to: 0
 19569                           ;controlMemory_MC50.c: 395:     if ( var_sys_NVM.photoCellInOpen>1 )
 19570  005D90  0E01               	movlw	1
 19571  005D92  65A0               	cpfsgt	(_var_sys_NVM+8)& (0+255),b	;volatile
 19572  005D94  D004               	goto	l22701
 19573                           
 19574                           ; BSR set to: 0
 19575                           ;controlMemory_MC50.c: 396:     {;controlMemory_MC50.c: 398:         var_sys_NVM.photoCe
      +                          llInOpen = 0;
 19576  005D96  0E00               	movlw	0
 19577  005D98  6FA0               	movwf	(_var_sys_NVM+8)& (0+255),b	;volatile
 19578                           
 19579                           ;controlMemory_MC50.c: 399:         saveParam=1;
 19580  005D9A  0E01               	movlw	1
 19581  005D9C  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19582  005D9E                     l22701:
 19583                           
 19584                           ; BSR set to: 0
 19585                           ;controlMemory_MC50.c: 402:     if ( var_sys_NVM.securityBandIsON>1 )
 19586  005D9E  0E01               	movlw	1
 19587  005DA0  65A1               	cpfsgt	(_var_sys_NVM+9)& (0+255),b	;volatile
 19588  005DA2  D004               	goto	l22705
 19589                           
 19590                           ; BSR set to: 0
 19591                           ;controlMemory_MC50.c: 403:     {;controlMemory_MC50.c: 405:         var_sys_NVM.securit
      +                          yBandIsON = 0 ;
 19592  005DA4  0E00               	movlw	0
 19593  005DA6  6FA1               	movwf	(_var_sys_NVM+9)& (0+255),b	;volatile
 19594                           
 19595                           ;controlMemory_MC50.c: 406:         saveParam=1;
 19596  005DA8  0E01               	movlw	1
 19597  005DAA  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19598  005DAC                     l22705:
 19599                           
 19600                           ; BSR set to: 0
 19601                           ;controlMemory_MC50.c: 409:     if ( var_sys_NVM.securityBandType>1 )
 19602  005DAC  0E01               	movlw	1
 19603  005DAE  65A2               	cpfsgt	(_var_sys_NVM+10)& (0+255),b	;volatile
 19604  005DB0  D004               	goto	l22709
 19605                           
 19606                           ; BSR set to: 0
 19607                           ;controlMemory_MC50.c: 410:     {;controlMemory_MC50.c: 412:         var_sys_NVM.securit
      +                          yBandType = 1;
 19608  005DB2  0E01               	movlw	1
 19609  005DB4  6FA2               	movwf	(_var_sys_NVM+10)& (0+255),b	;volatile
 19610                           
 19611                           ;controlMemory_MC50.c: 413:         saveParam=1;
 19612  005DB6  0E01               	movlw	1
 19613  005DB8  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19614  005DBA                     l22709:
 19615                           
 19616                           ; BSR set to: 0
 19617                           ;controlMemory_MC50.c: 416:     if ( var_sys_NVM.securityBandInOpen>1 )
 19618  005DBA  0E01               	movlw	1
 19619  005DBC  65A3               	cpfsgt	(_var_sys_NVM+11)& (0+255),b	;volatile
 19620  005DBE  D004               	goto	l22713
 19621                           
 19622                           ; BSR set to: 0
 19623                           ;controlMemory_MC50.c: 417:     {;controlMemory_MC50.c: 419:         var_sys_NVM.securit
      +                          yBandInOpen = 0;
 19624  005DC0  0E00               	movlw	0
 19625  005DC2  6FA3               	movwf	(_var_sys_NVM+11)& (0+255),b	;volatile
 19626                           
 19627                           ;controlMemory_MC50.c: 420:         saveParam=1;
 19628  005DC4  0E01               	movlw	1
 19629  005DC6  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19630  005DC8                     l22713:
 19631                           
 19632                           ; BSR set to: 0
 19633                           ;controlMemory_MC50.c: 423:     if ( var_sys_NVM.operationMode>2 )
 19634  005DC8  0E02               	movlw	2
 19635  005DCA  65A4               	cpfsgt	(_var_sys_NVM+12)& (0+255),b	;volatile
 19636  005DCC  D004               	goto	l22717
 19637                           
 19638                           ; BSR set to: 0
 19639                           ;controlMemory_MC50.c: 424:     {;controlMemory_MC50.c: 426:         var_sys_NVM.operati
      +                          onMode = 0;
 19640  005DCE  0E00               	movlw	0
 19641  005DD0  6FA4               	movwf	(_var_sys_NVM+12)& (0+255),b	;volatile
 19642                           
 19643                           ;controlMemory_MC50.c: 427:         saveParam=1;
 19644  005DD2  0E01               	movlw	1
 19645  005DD4  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19646  005DD6                     l22717:
 19647                           
 19648                           ; BSR set to: 0
 19649                           ;controlMemory_MC50.c: 430:     if ( var_sys_NVM.flashLightMode>3 )
 19650  005DD6  0E03               	movlw	3
 19651  005DD8  65A5               	cpfsgt	(_var_sys_NVM+13)& (0+255),b	;volatile
 19652  005DDA  D004               	goto	l22721
 19653                           
 19654                           ; BSR set to: 0
 19655                           ;controlMemory_MC50.c: 431:     {;controlMemory_MC50.c: 433:         var_sys_NVM.flashLi
      +                          ghtMode = 0;
 19656  005DDC  0E00               	movlw	0
 19657  005DDE  6FA5               	movwf	(_var_sys_NVM+13)& (0+255),b	;volatile
 19658                           
 19659                           ;controlMemory_MC50.c: 434:         saveParam=1;
 19660  005DE0  0E01               	movlw	1
 19661  005DE2  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19662  005DE4                     l22721:
 19663                           
 19664                           ; BSR set to: 0
 19665                           ;controlMemory_MC50.c: 437:     if ( var_sys_NVM.programmingDistance>1 )
 19666  005DE4  0E01               	movlw	1
 19667  005DE6  65A6               	cpfsgt	(_var_sys_NVM+14)& (0+255),b	;volatile
 19668  005DE8  D004               	goto	l22725
 19669                           
 19670                           ; BSR set to: 0
 19671                           ;controlMemory_MC50.c: 438:     {;controlMemory_MC50.c: 440:         var_sys_NVM.program
      +                          mingDistance = 0;
 19672  005DEA  0E00               	movlw	0
 19673  005DEC  6FA6               	movwf	(_var_sys_NVM+14)& (0+255),b	;volatile
 19674                           
 19675                           ;controlMemory_MC50.c: 441:         saveParam=1;
 19676  005DEE  0E01               	movlw	1
 19677  005DF0  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19678  005DF2                     l22725:
 19679                           
 19680                           ; BSR set to: 0
 19681                           ;controlMemory_MC50.c: 444:     if ( var_sys_NVM.decelarationSensivity>9 )
 19682  005DF2  0E09               	movlw	9
 19683  005DF4  65A7               	cpfsgt	(_var_sys_NVM+15)& (0+255),b	;volatile
 19684  005DF6  D004               	goto	l22729
 19685                           
 19686                           ; BSR set to: 0
 19687                           ;controlMemory_MC50.c: 445:     {;controlMemory_MC50.c: 447:         var_sys_NVM.decelar
      +                          ationSensivity = 0;
 19688  005DF8  0E00               	movlw	0
 19689  005DFA  6FA7               	movwf	(_var_sys_NVM+15)& (0+255),b	;volatile
 19690                           
 19691                           ;controlMemory_MC50.c: 448:         saveParam=1;
 19692  005DFC  0E01               	movlw	1
 19693  005DFE  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19694  005E00                     l22729:
 19695                           
 19696                           ; BSR set to: 0
 19697                           ;controlMemory_MC50.c: 453:     if ( var_sys_NVM.homemPresente>2 )
 19698  005E00  0E02               	movlw	2
 19699  005E02  65A8               	cpfsgt	(_var_sys_NVM+16)& (0+255),b	;volatile
 19700  005E04  D004               	goto	l22733
 19701                           
 19702                           ; BSR set to: 0
 19703                           ;controlMemory_MC50.c: 454:     {;controlMemory_MC50.c: 456:         var_sys_NVM.homemPr
      +                          esente = 0;
 19704  005E06  0E00               	movlw	0
 19705  005E08  6FA8               	movwf	(_var_sys_NVM+16)& (0+255),b	;volatile
 19706                           
 19707                           ;controlMemory_MC50.c: 457:         saveParam=1;
 19708  005E0A  0E01               	movlw	1
 19709  005E0C  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19710  005E0E                     l22733:
 19711                           
 19712                           ; BSR set to: 0
 19713                           ;controlMemory_MC50.c: 460:     if ( var_sys_NVM.logicDigital>1 )
 19714  005E0E  0E01               	movlw	1
 19715  005E10  65A9               	cpfsgt	(_var_sys_NVM+17)& (0+255),b	;volatile
 19716  005E12  D004               	goto	l22737
 19717                           
 19718                           ; BSR set to: 0
 19719                           ;controlMemory_MC50.c: 461:     {;controlMemory_MC50.c: 463:         var_sys_NVM.logicDi
      +                          gital = 0;
 19720  005E14  0E00               	movlw	0
 19721  005E16  6FA9               	movwf	(_var_sys_NVM+17)& (0+255),b	;volatile
 19722                           
 19723                           ;controlMemory_MC50.c: 464:         saveParam=1;
 19724  005E18  0E01               	movlw	1
 19725  005E1A  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19726  005E1C                     l22737:
 19727                           
 19728                           ; BSR set to: 0
 19729                           ;controlMemory_MC50.c: 467:     if ( var_sys_NVM.softStart>9 )
 19730  005E1C  0E09               	movlw	9
 19731  005E1E  65AA               	cpfsgt	(_var_sys_NVM+18)& (0+255),b	;volatile
 19732  005E20  D004               	goto	l22741
 19733                           
 19734                           ; BSR set to: 0
 19735                           ;controlMemory_MC50.c: 468:     {;controlMemory_MC50.c: 470:         var_sys_NVM.softSta
      +                          rt = 0;
 19736  005E22  0E00               	movlw	0
 19737  005E24  6FAA               	movwf	(_var_sys_NVM+18)& (0+255),b	;volatile
 19738                           
 19739                           ;controlMemory_MC50.c: 471:         saveParam=1;
 19740  005E26  0E01               	movlw	1
 19741  005E28  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19742  005E2A                     l22741:
 19743                           
 19744                           ; BSR set to: 0
 19745                           ;controlMemory_MC50.c: 475:     if ( var_sys_NVM.ligthTime>99 )
 19746  005E2A  0E63               	movlw	99
 19747  005E2C  65AC               	cpfsgt	(_var_sys_NVM+20)& (0+255),b	;volatile
 19748  005E2E  D004               	goto	l22745
 19749                           
 19750                           ; BSR set to: 0
 19751                           ;controlMemory_MC50.c: 476:     {;controlMemory_MC50.c: 478:         var_sys_NVM.ligthTi
      +                          me = 3;
 19752  005E30  0E03               	movlw	3
 19753  005E32  6FAC               	movwf	(_var_sys_NVM+20)& (0+255),b	;volatile
 19754                           
 19755                           ;controlMemory_MC50.c: 479:         saveParam=1;
 19756  005E34  0E01               	movlw	1
 19757  005E36  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19758  005E38                     l22745:
 19759                           
 19760                           ; BSR set to: 0
 19761                           ;controlMemory_MC50.c: 482:     if ( var_sys_NVM.folow_me>9 )
 19762  005E38  0E09               	movlw	9
 19763  005E3A  65AD               	cpfsgt	(_var_sys_NVM+21)& (0+255),b	;volatile
 19764  005E3C  D004               	goto	l22749
 19765                           
 19766                           ; BSR set to: 0
 19767                           ;controlMemory_MC50.c: 483:     {;controlMemory_MC50.c: 485:         var_sys_NVM.folow_m
      +                          e = 0;
 19768  005E3E  0E00               	movlw	0
 19769  005E40  6FAD               	movwf	(_var_sys_NVM+21)& (0+255),b	;volatile
 19770                           
 19771                           ;controlMemory_MC50.c: 486:         saveParam=1;
 19772  005E42  0E01               	movlw	1
 19773  005E44  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19774  005E46                     l22749:
 19775                           
 19776                           ; BSR set to: 0
 19777                           ;controlMemory_MC50.c: 491:     if ( var_sys_NVM.electricBrake>1 )
 19778  005E46  0E01               	movlw	1
 19779  005E48  65AF               	cpfsgt	(_var_sys_NVM+23)& (0+255),b	;volatile
 19780  005E4A  D004               	goto	l1517
 19781                           
 19782                           ; BSR set to: 0
 19783                           ;controlMemory_MC50.c: 492:     {;controlMemory_MC50.c: 494:         var_sys_NVM.electri
      +                          cBrake = 0;
 19784  005E4C  0E00               	movlw	0
 19785  005E4E  6FAF               	movwf	(_var_sys_NVM+23)& (0+255),b	;volatile
 19786                           
 19787                           ;controlMemory_MC50.c: 495:         saveParam=1;
 19788  005E50  0E01               	movlw	1
 19789  005E52  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19790  005E54                     l1517:
 19791                           
 19792                           ; BSR set to: 0
 19793                           ;controlMemory_MC50.c: 498:     if ( (var_sys_NVM.velocityDecelaration<1) || (var_sys_NV
      +                          M.velocityDecelaration>9) )
 19794  005E54  51B0               	movf	(_var_sys_NVM+24)& (0+255),w,b	;volatile
 19795  005E56  B4D8               	btfsc	status,2,c
 19796  005E58  D003               	goto	u26280
 19797                           
 19798                           ; BSR set to: 0
 19799  005E5A  0E09               	movlw	9
 19800  005E5C  65B0               	cpfsgt	(_var_sys_NVM+24)& (0+255),b	;volatile
 19801  005E5E  D004               	goto	l22757
 19802  005E60                     u26280:
 19803                           
 19804                           ; BSR set to: 0
 19805                           ;controlMemory_MC50.c: 499:     {;controlMemory_MC50.c: 501:         var_sys_NVM.velocit
      +                          yDecelaration = 5;
 19806  005E60  0E05               	movlw	5
 19807  005E62  6FB0               	movwf	(_var_sys_NVM+24)& (0+255),b	;volatile
 19808                           
 19809                           ;controlMemory_MC50.c: 502:         saveParam=1;
 19810  005E64  0E01               	movlw	1
 19811  005E66  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19812  005E68                     l22757:
 19813                           
 19814                           ; BSR set to: 0
 19815                           ;controlMemory_MC50.c: 505:     if ( var_sys_NVM.flashRGBMode>3 )
 19816  005E68  0E03               	movlw	3
 19817  005E6A  65B1               	cpfsgt	(_var_sys_NVM+25)& (0+255),b	;volatile
 19818  005E6C  D004               	goto	l22761
 19819                           
 19820                           ; BSR set to: 0
 19821                           ;controlMemory_MC50.c: 506:     {;controlMemory_MC50.c: 508:         var_sys_NVM.flashRG
      +                          BMode = 3;
 19822  005E6E  0E03               	movlw	3
 19823  005E70  6FB1               	movwf	(_var_sys_NVM+25)& (0+255),b	;volatile
 19824                           
 19825                           ;controlMemory_MC50.c: 509:         saveParam=1;
 19826  005E72  0E01               	movlw	1
 19827  005E74  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19828  005E76                     l22761:
 19829                           
 19830                           ; BSR set to: 0
 19831                           ;controlMemory_MC50.c: 511:         if ( var_sys_NVM.Stopboton > 1 )
 19832  005E76  0E01               	movlw	1
 19833  005E78  65AE               	cpfsgt	(_var_sys_NVM+22)& (0+255),b	;volatile
 19834  005E7A  D004               	goto	l22765
 19835                           
 19836                           ; BSR set to: 0
 19837                           ;controlMemory_MC50.c: 512:     {;controlMemory_MC50.c: 514:         var_sys_NVM.Stopbot
      +                          on = 0 ;
 19838  005E7C  0E00               	movlw	0
 19839  005E7E  6FAE               	movwf	(_var_sys_NVM+22)& (0+255),b	;volatile
 19840                           
 19841                           ;controlMemory_MC50.c: 515:         saveParam=1;
 19842  005E80  0E01               	movlw	1
 19843  005E82  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19844  005E84                     l22765:
 19845                           
 19846                           ; BSR set to: 0
 19847                           ;controlMemory_MC50.c: 517:         if ( var_sys_NVM.Direction_motor>1 )
 19848  005E84  0E01               	movlw	1
 19849  005E86  65B3               	cpfsgt	(_var_sys_NVM+27)& (0+255),b	;volatile
 19850  005E88  D004               	goto	l22769
 19851                           
 19852                           ; BSR set to: 0
 19853                           ;controlMemory_MC50.c: 518:     {;controlMemory_MC50.c: 520:         var_sys_NVM.Directi
      +                          on_motor = 1;
 19854  005E8A  0E01               	movlw	1
 19855  005E8C  6FB3               	movwf	(_var_sys_NVM+27)& (0+255),b	;volatile
 19856                           
 19857                           ;controlMemory_MC50.c: 521:         saveParam=1;
 19858  005E8E  0E01               	movlw	1
 19859  005E90  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19860  005E92                     l22769:
 19861                           
 19862                           ; BSR set to: 0
 19863                           ;controlMemory_MC50.c: 523:         if ( var_sys_NVM.softstop>9 )
 19864  005E92  0E09               	movlw	9
 19865  005E94  65AB               	cpfsgt	(_var_sys_NVM+19)& (0+255),b	;volatile
 19866  005E96  D004               	goto	l1524
 19867                           
 19868                           ; BSR set to: 0
 19869                           ;controlMemory_MC50.c: 524:     {;controlMemory_MC50.c: 526:         var_sys_NVM.softsto
      +                          p = 0;
 19870  005E98  0E00               	movlw	0
 19871  005E9A  6FAB               	movwf	(_var_sys_NVM+19)& (0+255),b	;volatile
 19872                           
 19873                           ;controlMemory_MC50.c: 527:         saveParam=1;
 19874  005E9C  0E01               	movlw	1
 19875  005E9E  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19876  005EA0                     l1524:
 19877                           
 19878                           ; BSR set to: 0
 19879                           ;controlMemory_MC50.c: 552:     if ( saveParam != 0 )
 19880  005EA0  503A               	movf	checkNVM_VarSystem@saveParam^0,w,c
 19881  005EA2  B4D8               	btfsc	status,2,c
 19882  005EA4  0012               	return	
 19883                           
 19884                           ; BSR set to: 0
 19885                           ;controlMemory_MC50.c: 553:     {;controlMemory_MC50.c: 554:         SaveNVM_VarSystem(p
      +                          ageMemoryP);
 19886  005EA6  0E00               	movlw	0
 19887  005EA8  ECE3  F049         	call	_SaveNVM_VarSystem
 19888                           
 19889                           ;controlMemory_MC50.c: 555:         SaveNVM_VarSystem(pageMemoryE);
 19890  005EAC  0E01               	movlw	1
 19891  005EAE  ECE3  F049         	call	_SaveNVM_VarSystem
 19892  005EB2  0012               	return		;funcret
 19893  005EB4                     __end_of_checkNVM_VarSystem:
 19894                           	callstack 0
 19895                           
 19896 ;; *************** function _ResetDefaultMemory *****************
 19897 ;; Defined at:
 19898 ;;		line 198 in file "controlMemory_MC50.c"
 19899 ;; Parameters:    Size  Location     Type
 19900 ;;  type            1    wreg     unsigned char 
 19901 ;; Auto vars:     Size  Location     Type
 19902 ;;  type            1   57[COMRAM] unsigned char 
 19903 ;; Return value:  Size  Location     Type
 19904 ;;                  1    wreg      void 
 19905 ;; Registers used:
 19906 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19907 ;; Tracked objects:
 19908 ;;		On entry : 31/0
 19909 ;;		On exit  : 0/0
 19910 ;;		Unchanged: 0/0
 19911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19913 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19915 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19916 ;;Total ram usage:        1 bytes
 19917 ;; Hardware stack levels used: 1
 19918 ;; Hardware stack levels required when called: 14
 19919 ;; This function calls:
 19920 ;;		_SaveNVM_VarSystem
 19921 ;; This function is called by:
 19922 ;;		_loadNVM_VarSystem
 19923 ;;		_sm_execute_menuConfiguration
 19924 ;; This function uses a non-reentrant model
 19925 ;;
 19926                           
 19927                           	psect	text71
 19928  00651A                     __ptext71:
 19929                           	callstack 0
 19930  00651A                     _ResetDefaultMemory:
 19931                           	callstack 14
 19932                           
 19933                           ;incstack = 0
 19934                           ;ResetDefaultMemory@type stored from wreg
 19935  00651A  6E3A               	movwf	ResetDefaultMemory@type^0,c
 19936                           
 19937                           ;controlMemory_MC50.c: 198: void ResetDefaultMemory(unsigned char type);controlMemory_MC
      +                          50.c: 199: {;controlMemory_MC50.c: 202:     var_sys_NVM.decelarationOpen = 3;
 19938  00651C  0E03               	movlw	3
 19939  00651E  0100               	movlb	0	; () banked
 19940  006520  6F98               	movwf	_var_sys_NVM& (0+255),b	;volatile
 19941                           
 19942                           ;controlMemory_MC50.c: 203:     var_sys_NVM.motorPower = 9;
 19943  006522  0E09               	movlw	9
 19944  006524  6F9A               	movwf	(_var_sys_NVM+2)& (0+255),b	;volatile
 19945                           
 19946                           ;controlMemory_MC50.c: 204:     var_sys_NVM.decelarationClose = 3;
 19947  006526  0E03               	movlw	3
 19948  006528  6F99               	movwf	(_var_sys_NVM+1)& (0+255),b	;volatile
 19949                           
 19950                           ;controlMemory_MC50.c: 205:     var_sys_NVM.photoCellIsON = 0;
 19951  00652A  0E00               	movlw	0
 19952  00652C  6F9F               	movwf	(_var_sys_NVM+7)& (0+255),b	;volatile
 19953                           
 19954                           ;controlMemory_MC50.c: 206:     var_sys_NVM.photoCellInOpen = 0;
 19955  00652E  0E00               	movlw	0
 19956  006530  6FA0               	movwf	(_var_sys_NVM+8)& (0+255),b	;volatile
 19957                           
 19958                           ;controlMemory_MC50.c: 207:     var_sys_NVM.securityBandIsON = 0 ;
 19959  006532  0E00               	movlw	0
 19960  006534  6FA1               	movwf	(_var_sys_NVM+9)& (0+255),b	;volatile
 19961                           
 19962                           ;controlMemory_MC50.c: 208:     var_sys_NVM.securityBandType = 1;
 19963  006536  0E01               	movlw	1
 19964  006538  6FA2               	movwf	(_var_sys_NVM+10)& (0+255),b	;volatile
 19965                           
 19966                           ;controlMemory_MC50.c: 209:     var_sys_NVM.securityBandInOpen = 0;
 19967  00653A  0E00               	movlw	0
 19968  00653C  6FA3               	movwf	(_var_sys_NVM+11)& (0+255),b	;volatile
 19969                           
 19970                           ;controlMemory_MC50.c: 210:     var_sys_NVM.flashLightMode = 0;
 19971  00653E  0E00               	movlw	0
 19972  006540  6FA5               	movwf	(_var_sys_NVM+13)& (0+255),b	;volatile
 19973                           
 19974                           ;controlMemory_MC50.c: 211:     var_sys_NVM.programmingDistance = 0;
 19975  006542  0E00               	movlw	0
 19976  006544  6FA6               	movwf	(_var_sys_NVM+14)& (0+255),b	;volatile
 19977                           
 19978                           ;controlMemory_MC50.c: 212:     var_sys_NVM.decelarationSensivity = 0;
 19979  006546  0E00               	movlw	0
 19980  006548  6FA7               	movwf	(_var_sys_NVM+15)& (0+255),b	;volatile
 19981                           
 19982                           ;controlMemory_MC50.c: 213:     var_sys_NVM.homemPresente = 0;
 19983  00654A  0E00               	movlw	0
 19984  00654C  6FA8               	movwf	(_var_sys_NVM+16)& (0+255),b	;volatile
 19985                           
 19986                           ;controlMemory_MC50.c: 214:     var_sys_NVM.autoTimeWalkClose = 0;
 19987  00654E  0E00               	movlw	0
 19988  006550  6F9E               	movwf	(_var_sys_NVM+6)& (0+255),b	;volatile
 19989                           
 19990                           ;controlMemory_MC50.c: 215:     var_sys_NVM.ligthTime = 3;
 19991  006552  0E03               	movlw	3
 19992  006554  6FAC               	movwf	(_var_sys_NVM+20)& (0+255),b	;volatile
 19993                           
 19994                           ;controlMemory_MC50.c: 216:     var_sys_NVM.folow_me = 0;
 19995  006556  0E00               	movlw	0
 19996  006558  6FAD               	movwf	(_var_sys_NVM+21)& (0+255),b	;volatile
 19997                           
 19998                           ;controlMemory_MC50.c: 217:     var_sys_NVM.electricBrake = 0;
 19999  00655A  0E00               	movlw	0
 20000  00655C  6FAF               	movwf	(_var_sys_NVM+23)& (0+255),b	;volatile
 20001                           
 20002                           ;controlMemory_MC50.c: 218:     var_sys_NVM.autoTimeWalkClose = 0;
 20003  00655E  0E00               	movlw	0
 20004  006560  6F9E               	movwf	(_var_sys_NVM+6)& (0+255),b	;volatile
 20005                           
 20006                           ;controlMemory_MC50.c: 219:     var_sys_NVM.Direction_motor = 1 ;
 20007  006562  0E01               	movlw	1
 20008  006564  6FB3               	movwf	(_var_sys_NVM+27)& (0+255),b	;volatile
 20009                           
 20010                           ; BSR set to: 0
 20011                           ;controlMemory_MC50.c: 222:     if (type == SC){
 20012  006566  503A               	movf	ResetDefaultMemory@type^0,w,c
 20013  006568  A4D8               	btfss	status,2,c
 20014  00656A  D014               	goto	l21183
 20015                           
 20016                           ; BSR set to: 0
 20017                           ;controlMemory_MC50.c: 224:         var_sys_NVM.motorSensitivity = 0;
 20018  00656C  0E00               	movlw	0
 20019  00656E  6F9B               	movwf	(_var_sys_NVM+3)& (0+255),b	;volatile
 20020                           
 20021                           ;controlMemory_MC50.c: 225:         var_sys_NVM.logicDigital = 0;
 20022  006570  0E00               	movlw	0
 20023  006572  6FA9               	movwf	(_var_sys_NVM+17)& (0+255),b	;volatile
 20024                           
 20025                           ;controlMemory_MC50.c: 226:         var_sys_NVM.Stopboton = 0;
 20026  006574  0E00               	movlw	0
 20027  006576  6FAE               	movwf	(_var_sys_NVM+22)& (0+255),b	;volatile
 20028                           
 20029                           ;controlMemory_MC50.c: 227:         var_sys_NVM.autoTimeFullClose = 0;
 20030  006578  0E00               	movlw	0
 20031  00657A  6F9D               	movwf	(_var_sys_NVM+5)& (0+255),b	;volatile
 20032                           
 20033                           ;controlMemory_MC50.c: 228:         var_sys_NVM.operationMode = 0;
 20034  00657C  0E00               	movlw	0
 20035  00657E  6FA4               	movwf	(_var_sys_NVM+12)& (0+255),b	;volatile
 20036                           
 20037                           ;controlMemory_MC50.c: 229:         var_sys_NVM.velocityDecelaration = 5;
 20038  006580  0E05               	movlw	5
 20039  006582  6FB0               	movwf	(_var_sys_NVM+24)& (0+255),b	;volatile
 20040                           
 20041                           ;controlMemory_MC50.c: 230:         var_sys_NVM.flashRGBMode = 3;
 20042  006584  0E03               	movlw	3
 20043  006586  6FB1               	movwf	(_var_sys_NVM+25)& (0+255),b	;volatile
 20044                           
 20045                           ;controlMemory_MC50.c: 231:         var_sys_NVM.softstop = 0;
 20046  006588  0E00               	movlw	0
 20047  00658A  6FAB               	movwf	(_var_sys_NVM+19)& (0+255),b	;volatile
 20048                           
 20049                           ;controlMemory_MC50.c: 232:         var_sys_NVM.softStart = 0;
 20050  00658C  0E00               	movlw	0
 20051  00658E  6FAA               	movwf	(_var_sys_NVM+18)& (0+255),b	;volatile
 20052                           
 20053                           ;controlMemory_MC50.c: 233:         var_sys_NVM.walkTime = 10;
 20054  006590  0E0A               	movlw	10
 20055  006592  D039               	goto	L82
 20056  006594                     l21183:
 20057                           
 20058                           ; BSR set to: 0
 20059  006594  043A               	decf	ResetDefaultMemory@type^0,w,c
 20060  006596  A4D8               	btfss	status,2,c
 20061  006598  D01B               	goto	l21187
 20062                           
 20063                           ; BSR set to: 0
 20064                           ;controlMemory_MC50.c: 237:         var_sys_NVM.decelarationClose = 4;
 20065  00659A  0E04               	movlw	4
 20066  00659C  6F99               	movwf	(_var_sys_NVM+1)& (0+255),b	;volatile
 20067                           
 20068                           ;controlMemory_MC50.c: 238:         var_sys_NVM.decelarationOpen = 4;
 20069  00659E  0E04               	movlw	4
 20070  0065A0  6F98               	movwf	_var_sys_NVM& (0+255),b	;volatile
 20071                           
 20072                           ;controlMemory_MC50.c: 239:         var_sys_NVM.motorSensitivity = 4;
 20073  0065A2  0E04               	movlw	4
 20074  0065A4  6F9B               	movwf	(_var_sys_NVM+3)& (0+255),b	;volatile
 20075                           
 20076                           ;controlMemory_MC50.c: 240:         var_sys_NVM.logicDigital = 1;
 20077  0065A6  0E01               	movlw	1
 20078  0065A8  6FA9               	movwf	(_var_sys_NVM+17)& (0+255),b	;volatile
 20079                           
 20080                           ;controlMemory_MC50.c: 241:         var_sys_NVM.Stopboton = 1;
 20081  0065AA  0E01               	movlw	1
 20082  0065AC  6FAE               	movwf	(_var_sys_NVM+22)& (0+255),b	;volatile
 20083                           
 20084                           ;controlMemory_MC50.c: 242:         var_sys_NVM.autoTimeFullClose = 0;
 20085  0065AE  0E00               	movlw	0
 20086  0065B0  6F9D               	movwf	(_var_sys_NVM+5)& (0+255),b	;volatile
 20087                           
 20088                           ;controlMemory_MC50.c: 243:         var_sys_NVM.operationMode = 0;
 20089  0065B2  0E00               	movlw	0
 20090  0065B4  6FA4               	movwf	(_var_sys_NVM+12)& (0+255),b	;volatile
 20091                           
 20092                           ;controlMemory_MC50.c: 244:         var_sys_NVM.velocityDecelaration = 5;
 20093  0065B6  0E05               	movlw	5
 20094  0065B8  6FB0               	movwf	(_var_sys_NVM+24)& (0+255),b	;volatile
 20095                           
 20096                           ;controlMemory_MC50.c: 245:         var_sys_NVM.flashRGBMode = 3;
 20097  0065BA  0E03               	movlw	3
 20098  0065BC  6FB1               	movwf	(_var_sys_NVM+25)& (0+255),b	;volatile
 20099                           
 20100                           ;controlMemory_MC50.c: 246:         var_sys_NVM.softstop = 0;
 20101  0065BE  0E00               	movlw	0
 20102  0065C0  6FAB               	movwf	(_var_sys_NVM+19)& (0+255),b	;volatile
 20103                           
 20104                           ;controlMemory_MC50.c: 247:         var_sys_NVM.softStart = 5;
 20105  0065C2  0E05               	movlw	5
 20106  0065C4  6FAA               	movwf	(_var_sys_NVM+18)& (0+255),b	;volatile
 20107                           
 20108                           ;controlMemory_MC50.c: 248:         var_sys_NVM.walkTime = 0;
 20109  0065C6  0E00               	movlw	0
 20110  0065C8  6F9C               	movwf	(_var_sys_NVM+4)& (0+255),b	;volatile
 20111                           
 20112                           ;controlMemory_MC50.c: 249:         var_sys_NVM.Direction_motor = 0 ;
 20113  0065CA  0E00               	movlw	0
 20114  0065CC  6FB3               	movwf	(_var_sys_NVM+27)& (0+255),b	;volatile
 20115                           
 20116                           ;controlMemory_MC50.c: 251:     }
 20117  0065CE  D01C               	goto	l21191
 20118  0065D0                     l21187:
 20119                           
 20120                           ; BSR set to: 0
 20121  0065D0  0E02               	movlw	2
 20122  0065D2  183A               	xorwf	ResetDefaultMemory@type^0,w,c
 20123  0065D4  A4D8               	btfss	status,2,c
 20124  0065D6  D018               	goto	l21191
 20125                           
 20126                           ; BSR set to: 0
 20127                           ;controlMemory_MC50.c: 253:         var_sys_NVM.decelarationClose = 6;
 20128  0065D8  0E06               	movlw	6
 20129  0065DA  6F99               	movwf	(_var_sys_NVM+1)& (0+255),b	;volatile
 20130                           
 20131                           ;controlMemory_MC50.c: 254:         var_sys_NVM.decelarationOpen = 2;
 20132  0065DC  0E02               	movlw	2
 20133  0065DE  6F98               	movwf	_var_sys_NVM& (0+255),b	;volatile
 20134                           
 20135                           ;controlMemory_MC50.c: 255:         var_sys_NVM.motorSensitivity = 0;
 20136  0065E0  0E00               	movlw	0
 20137  0065E2  6F9B               	movwf	(_var_sys_NVM+3)& (0+255),b	;volatile
 20138                           
 20139                           ;controlMemory_MC50.c: 256:         var_sys_NVM.logicDigital = 0;
 20140  0065E4  0E00               	movlw	0
 20141  0065E6  6FA9               	movwf	(_var_sys_NVM+17)& (0+255),b	;volatile
 20142                           
 20143                           ;controlMemory_MC50.c: 257:         var_sys_NVM.Stopboton = 0;
 20144  0065E8  0E00               	movlw	0
 20145  0065EA  6FAE               	movwf	(_var_sys_NVM+22)& (0+255),b	;volatile
 20146                           
 20147                           ;controlMemory_MC50.c: 258:         var_sys_NVM.autoTimeFullClose = 0;
 20148  0065EC  0E00               	movlw	0
 20149  0065EE  6F9D               	movwf	(_var_sys_NVM+5)& (0+255),b	;volatile
 20150                           
 20151                           ;controlMemory_MC50.c: 259:         var_sys_NVM.operationMode = 2;
 20152  0065F0  0E02               	movlw	2
 20153  0065F2  6FA4               	movwf	(_var_sys_NVM+12)& (0+255),b	;volatile
 20154                           
 20155                           ;controlMemory_MC50.c: 260:         var_sys_NVM.velocityDecelaration = 5;
 20156  0065F4  0E05               	movlw	5
 20157  0065F6  6FB0               	movwf	(_var_sys_NVM+24)& (0+255),b	;volatile
 20158                           
 20159                           ;controlMemory_MC50.c: 261:         var_sys_NVM.flashRGBMode = 1;
 20160  0065F8  0E01               	movlw	1
 20161  0065FA  6FB1               	movwf	(_var_sys_NVM+25)& (0+255),b	;volatile
 20162                           
 20163                           ;controlMemory_MC50.c: 262:         var_sys_NVM.softstop = 5;
 20164  0065FC  0E05               	movlw	5
 20165  0065FE  6FAB               	movwf	(_var_sys_NVM+19)& (0+255),b	;volatile
 20166                           
 20167                           ;controlMemory_MC50.c: 263:         var_sys_NVM.softStart = 0;
 20168  006600  0E00               	movlw	0
 20169  006602  6FAA               	movwf	(_var_sys_NVM+18)& (0+255),b	;volatile
 20170                           
 20171                           ;controlMemory_MC50.c: 264:         var_sys_NVM.walkTime = 0;
 20172  006604  0E00               	movlw	0
 20173  006606                     L82:
 20174  006606  6F9C               	movwf	(_var_sys_NVM+4)& (0+255),b	;volatile
 20175  006608                     l21191:
 20176                           
 20177                           ; BSR set to: 0
 20178                           ;controlMemory_MC50.c: 272:     SaveNVM_VarSystem(pageMemoryE);
 20179  006608  0E01               	movlw	1
 20180  00660A  ECE3  F049         	call	_SaveNVM_VarSystem
 20181                           
 20182                           ;controlMemory_MC50.c: 273:     SaveNVM_VarSystem(pageMemoryP);
 20183  00660E  0E00               	movlw	0
 20184  006610  ECE3  F049         	call	_SaveNVM_VarSystem
 20185                           
 20186                           ;controlMemory_MC50.c: 278:     var_sys_NVM.learningTimeToClose = 0;
 20187  006614  0E00               	movlw	0
 20188  006616  0100               	movlb	0	; () banked
 20189  006618  6FD0               	movwf	(_var_sys_NVM+56)& (0+255),b	;volatile
 20190  00661A  0E00               	movlw	0
 20191  00661C  6FD1               	movwf	(_var_sys_NVM+57)& (0+255),b	;volatile
 20192  00661E  0E00               	movlw	0
 20193  006620  6FD2               	movwf	(_var_sys_NVM+58)& (0+255),b	;volatile
 20194  006622  0E00               	movlw	0
 20195  006624  6FD3               	movwf	(_var_sys_NVM+59)& (0+255),b	;volatile
 20196                           
 20197                           ;controlMemory_MC50.c: 279:     var_sys_NVM.learningTimeToOpen = 0;
 20198  006626  0E00               	movlw	0
 20199  006628  6FCC               	movwf	(_var_sys_NVM+52)& (0+255),b	;volatile
 20200  00662A  0E00               	movlw	0
 20201  00662C  6FCD               	movwf	(_var_sys_NVM+53)& (0+255),b	;volatile
 20202  00662E  0E00               	movlw	0
 20203  006630  6FCE               	movwf	(_var_sys_NVM+54)& (0+255),b	;volatile
 20204  006632  0E00               	movlw	0
 20205  006634  6FCF               	movwf	(_var_sys_NVM+55)& (0+255),b	;volatile
 20206                           
 20207                           ;controlMemory_MC50.c: 280:     var_sys_NVM.learningCurrentNormalClose = 0;
 20208  006636  0E00               	movlw	0
 20209  006638  6FC9               	movwf	(_var_sys_NVM+49)& (0+255),b	;volatile
 20210  00663A  0E00               	movlw	0
 20211  00663C  6FC8               	movwf	(_var_sys_NVM+48)& (0+255),b	;volatile
 20212                           
 20213                           ;controlMemory_MC50.c: 281:     var_sys_NVM.learningCurrentNormalOpen = 0;
 20214  00663E  0E00               	movlw	0
 20215  006640  6FCB               	movwf	(_var_sys_NVM+51)& (0+255),b	;volatile
 20216  006642  0E00               	movlw	0
 20217  006644  6FCA               	movwf	(_var_sys_NVM+50)& (0+255),b	;volatile
 20218                           
 20219                           ;controlMemory_MC50.c: 282:     var_sys_NVM.learningCurrentDecelarationClose = 0;
 20220  006646  0E00               	movlw	0
 20221  006648  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 20222  00664A  0E00               	movlw	0
 20223  00664C  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 20224  00664E  0E00               	movlw	0
 20225  006650  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 20226  006652  0E00               	movlw	0
 20227  006654  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 20228                           
 20229                           ;controlMemory_MC50.c: 283:     var_sys_NVM.learningCurrentDecelarationOpen = 0;
 20230  006656  0E00               	movlw	0
 20231  006658  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 20232  00665A  0E00               	movlw	0
 20233  00665C  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 20234  00665E  0E00               	movlw	0
 20235  006660  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 20236  006662  0E00               	movlw	0
 20237  006664  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 20238                           
 20239                           ; BSR set to: 0
 20240                           ;controlMemory_MC50.c: 289:     if ((PORTAbits.RA2 == 0) && (PORTAbits.RA1 == 0) && (POR
      +                          TBbits.RB0 == 0)&&(PORTAbits.RA5==0)){
 20241  006666  A48D               	btfss	141,2,c	;volatile
 20242                           
 20243                           ; BSR set to: 0
 20244  006668  B28D               	btfsc	141,1,c	;volatile
 20245  00666A  D015               	goto	l21205
 20246                           
 20247                           ; BSR set to: 0
 20248  00666C  A08E               	btfss	142,0,c	;volatile
 20249                           
 20250                           ; BSR set to: 0
 20251  00666E  BA8D               	btfsc	141,5,c	;volatile
 20252  006670  D012               	goto	l21205
 20253                           
 20254                           ; BSR set to: 0
 20255                           ;controlMemory_MC50.c: 290:      var_sys.actualCounterMoves = 0;
 20256  006672  0E00               	movlw	0
 20257  006674  0101               	movlb	1	; () banked
 20258  006676  6F3C               	movwf	(_var_sys+60)& (0+255),b	;volatile
 20259  006678  0E00               	movlw	0
 20260  00667A  6F3D               	movwf	(_var_sys+61)& (0+255),b	;volatile
 20261  00667C  0E00               	movlw	0
 20262  00667E  6F3E               	movwf	(_var_sys+62)& (0+255),b	;volatile
 20263  006680  0E00               	movlw	0
 20264  006682  6F3F               	movwf	(_var_sys+63)& (0+255),b	;volatile
 20265                           
 20266                           ;controlMemory_MC50.c: 291:      var_sys_NVM.counterMoves = 0;
 20267  006684  0E00               	movlw	0
 20268  006686  0100               	movlb	0	; () banked
 20269  006688  6FBA               	movwf	(_var_sys_NVM+34)& (0+255),b	;volatile
 20270  00668A  0E00               	movlw	0
 20271  00668C  6FBB               	movwf	(_var_sys_NVM+35)& (0+255),b	;volatile
 20272  00668E  0E00               	movlw	0
 20273  006690  6FBC               	movwf	(_var_sys_NVM+36)& (0+255),b	;volatile
 20274  006692  0E00               	movlw	0
 20275  006694  6FBD               	movwf	(_var_sys_NVM+37)& (0+255),b	;volatile
 20276  006696                     l21205:
 20277                           
 20278                           ; BSR set to: 0
 20279                           ;controlMemory_MC50.c: 296:     SaveNVM_VarSystem(pageMemoryCounters);
 20280  006696  0E02               	movlw	2
 20281  006698  ECE3  F049         	call	_SaveNVM_VarSystem
 20282                           
 20283                           ;controlMemory_MC50.c: 297:     SaveNVM_VarSystem(pageMemoryLearningVars);
 20284  00669C  0E03               	movlw	3
 20285  00669E  ECE3  F049         	call	_SaveNVM_VarSystem
 20286  0066A2  0012               	return		;funcret
 20287  0066A4                     __end_of_ResetDefaultMemory:
 20288                           	callstack 0
 20289                           
 20290 ;; *************** function _I2C1_Read1ByteRegister *****************
 20291 ;; Defined at:
 20292 ;;		line 65 in file "mcc_generated_files/examples/i2c1_master_example.c"
 20293 ;; Parameters:    Size  Location     Type
 20294 ;;  address         1    wreg     unsigned char 
 20295 ;;  reg             1   33[COMRAM] unsigned char 
 20296 ;; Auto vars:     Size  Location     Type
 20297 ;;  address         1   34[COMRAM] unsigned char 
 20298 ;;  returnValue     1   35[COMRAM] unsigned char 
 20299 ;; Return value:  Size  Location     Type
 20300 ;;                  1    wreg      unsigned char 
 20301 ;; Registers used:
 20302 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20303 ;; Tracked objects:
 20304 ;;		On entry : 31/0
 20305 ;;		On exit  : 33/2
 20306 ;;		Unchanged: 0/0
 20307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20308 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20309 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20311 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20312 ;;Total ram usage:        3 bytes
 20313 ;; Hardware stack levels used: 1
 20314 ;; Hardware stack levels required when called: 12
 20315 ;; This function calls:
 20316 ;;		_I2C1_Close
 20317 ;;		_I2C1_MasterWrite
 20318 ;;		_I2C1_Open
 20319 ;;		_I2C1_SetAddressNackCallback
 20320 ;;		_I2C1_SetBuffer
 20321 ;;		_I2C1_SetDataCompleteCallback
 20322 ;; This function is called by:
 20323 ;;		_loadNVM_VarSystem
 20324 ;; This function uses a non-reentrant model
 20325 ;;
 20326                           
 20327                           	psect	text72
 20328  008C62                     __ptext72:
 20329                           	callstack 0
 20330  008C62                     _I2C1_Read1ByteRegister:
 20331                           	callstack 17
 20332                           
 20333                           ;incstack = 0
 20334                           ;I2C1_Read1ByteRegister@address stored from wreg
 20335  008C62  6E23               	movwf	I2C1_Read1ByteRegister@address^0,c
 20336                           
 20337                           ;mcc_generated_files/examples/i2c1_master_example.c: 65: uint8_t I2C1_Read1ByteRegister(
      +                          i2c1_address_t address, uint8_t reg);mcc_generated_files/examples/i2c1_master_example.c:
      +                           66: {;mcc_generated_files/examples/i2c1_master_example.c: 67:     uint8_t returnValue =
      +                           0x00;
 20338  008C64  0E00               	movlw	0
 20339  008C66  6E24               	movwf	I2C1_Read1ByteRegister@returnValue^0,c
 20340  008C68                     l22473:
 20341  008C68  5023               	movf	I2C1_Read1ByteRegister@address^0,w,c
 20342  008C6A  EC58  F041         	call	_I2C1_Open
 20343  008C6E  0900               	iorlw	0
 20344  008C70  B4D8               	btfsc	status,2,c
 20345  008C72  D7FA               	goto	l22473
 20346                           
 20347                           ;mcc_generated_files/examples/i2c1_master_example.c: 70:     I2C1_SetDataCompleteCallbac
      +                          k(rd1RegCompleteHandler,&returnValue);
 20348  008C74  0E2E               	movlw	low _rd1RegCompleteHandler@i2c1_master_example$F500
 20349  008C76  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 20350  008C78  0E96               	movlw	high _rd1RegCompleteHandler@i2c1_master_example$F500
 20351  008C7A  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 20352  008C7C  0E24               	movlw	low I2C1_Read1ByteRegister@returnValue
 20353  008C7E  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 20354  008C80  6A18               	clrf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 20355  008C82  EC37  F04D         	call	_I2C1_SetDataCompleteCallback	;wreg free
 20356                           
 20357                           ;mcc_generated_files/examples/i2c1_master_example.c: 71:     I2C1_SetBuffer(&reg,1);
 20358  008C86  0E22               	movlw	low I2C1_Read1ByteRegister@reg
 20359  008C88  6E10               	movwf	I2C1_SetBuffer@buffer^0,c
 20360  008C8A  6A11               	clrf	(I2C1_SetBuffer@buffer+1)^0,c
 20361  008C8C  0E00               	movlw	0
 20362  008C8E  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 20363  008C90  0E01               	movlw	1
 20364  008C92  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 20365  008C94  ECFA  F04C         	call	_I2C1_SetBuffer	;wreg free
 20366                           
 20367                           ; BSR set to: 2
 20368                           ;mcc_generated_files/examples/i2c1_master_example.c: 72:     I2C1_SetAddressNackCallback
      +                          (((void*)0),((void*)0));
 20369  008C98  0E00               	movlw	0
 20370  008C9A  6E15               	movwf	I2C1_SetAddressNackCallback@cb^0,c
 20371  008C9C  0E00               	movlw	0
 20372  008C9E  6E16               	movwf	(I2C1_SetAddressNackCallback@cb+1)^0,c
 20373  008CA0  0E00               	movlw	0
 20374  008CA2  6E17               	movwf	I2C1_SetAddressNackCallback@ptr^0,c
 20375  008CA4  0E00               	movlw	0
 20376  008CA6  6E18               	movwf	(I2C1_SetAddressNackCallback@ptr+1)^0,c
 20377  008CA8  EC1F  F04D         	call	_I2C1_SetAddressNackCallback	;wreg free
 20378                           
 20379                           ;mcc_generated_files/examples/i2c1_master_example.c: 73:     I2C1_MasterWrite();
 20380  008CAC  ECF8  F04D         	call	_I2C1_MasterWrite	;wreg free
 20381  008CB0                     l22483:
 20382  008CB0  EC6C  F04C         	call	_I2C1_Close	;wreg free
 20383  008CB4  06E8               	decf	wreg,f,c
 20384  008CB6  B4D8               	btfsc	status,2,c
 20385  008CB8  D7FB               	goto	l22483
 20386                           
 20387                           ;mcc_generated_files/examples/i2c1_master_example.c: 76:     return returnValue;
 20388  008CBA  5024               	movf	I2C1_Read1ByteRegister@returnValue^0,w,c
 20389  008CBC  0012               	return		;funcret
 20390  008CBE                     __end_of_I2C1_Read1ByteRegister:
 20391                           	callstack 0
 20392                           
 20393 ;; *************** function _getKeyPressed *****************
 20394 ;; Defined at:
 20395 ;;		line 217 in file "inputs_MC50.c"
 20396 ;; Parameters:    Size  Location     Type
 20397 ;;		None
 20398 ;; Auto vars:     Size  Location     Type
 20399 ;;  temp            1   15[COMRAM] char 
 20400 ;; Return value:  Size  Location     Type
 20401 ;;                  1    wreg      char 
 20402 ;; Registers used:
 20403 ;;		wreg, status,2, status,0
 20404 ;; Tracked objects:
 20405 ;;		On entry : 3E/1
 20406 ;;		On exit  : 3D/0
 20407 ;;		Unchanged: 0/0
 20408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20410 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20412 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20413 ;;Total ram usage:        1 bytes
 20414 ;; Hardware stack levels used: 1
 20415 ;; Hardware stack levels required when called: 4
 20416 ;; This function calls:
 20417 ;;		Nothing
 20418 ;; This function is called by:
 20419 ;;		_main
 20420 ;; This function uses a non-reentrant model
 20421 ;;
 20422                           
 20423                           	psect	text73
 20424  009A26                     __ptext73:
 20425                           	callstack 0
 20426  009A26                     _getKeyPressed:
 20427                           	callstack 26
 20428                           
 20429                           ;inputs_MC50.c: 218:     signed char temp=-1;
 20430                           
 20431                           ;incstack = 0
 20432  009A26  6810               	setf	getKeyPressed@temp^0,c
 20433                           
 20434                           ;inputs_MC50.c: 219:     if(RFFull)
 20435  009A28  0100               	movlb	0	; () banked
 20436  009A2A  518B               	movf	_RFFull& (0+255),w,b	;volatile
 20437  009A2C  B4D8               	btfsc	status,2,c
 20438  009A2E  D005               	goto	l24543
 20439                           
 20440                           ; BSR set to: 0
 20441                           ;inputs_MC50.c: 220:     {;inputs_MC50.c: 221:         temp=(BufferRF[7]&0xF0)>>4;
 20442  009A30  0102               	movlb	2	; () banked
 20443  009A32  39CD               	swapf	(_BufferRF+7)& (0+255),w,b
 20444  009A34  0B0F               	andlw	15
 20445  009A36  0B0F               	andlw	15
 20446  009A38  6E10               	movwf	getKeyPressed@temp^0,c
 20447  009A3A                     l24543:
 20448                           
 20449                           ;inputs_MC50.c: 223:     return temp;
 20450  009A3A  5010               	movf	getKeyPressed@temp^0,w,c
 20451  009A3C  0012               	return		;funcret
 20452  009A3E                     __end_of_getKeyPressed:
 20453                           	callstack 0
 20454                           
 20455 ;; *************** function _eusartparser *****************
 20456 ;; Defined at:
 20457 ;;		line 458 in file "eusartparser.c"
 20458 ;; Parameters:    Size  Location     Type
 20459 ;;  package         2    8[BANK0 ] PTR struct package_t
 20460 ;;		 -> main@package(7), 
 20461 ;; Auto vars:     Size  Location     Type
 20462 ;;  i               1   28[BANK0 ] unsigned char 
 20463 ;;  i               1   25[BANK0 ] unsigned char 
 20464 ;;  i               1   29[BANK0 ] unsigned char 
 20465 ;;  i               1   26[BANK0 ] unsigned char 
 20466 ;;  i               1   30[BANK0 ] unsigned char 
 20467 ;;  i               1   24[BANK0 ] unsigned char 
 20468 ;;  i               1   23[BANK0 ] unsigned char 
 20469 ;;  i               1   19[BANK0 ] unsigned char 
 20470 ;;  i               1   18[BANK0 ] unsigned char 
 20471 ;;  i               1   27[BANK0 ] unsigned char 
 20472 ;;  i               1   22[BANK0 ] unsigned char 
 20473 ;;  i               1   21[BANK0 ] unsigned char 
 20474 ;;  i               1   17[BANK0 ] unsigned char 
 20475 ;;  i               1   16[BANK0 ] unsigned char 
 20476 ;;  a               7    0        struct package_t
 20477 ;;  serial          4   32[BANK0 ] unsigned long 
 20478 ;;  relcounter      1   31[BANK0 ] unsigned char 
 20479 ;;  pos             1   20[BANK0 ] unsigned char 
 20480 ;; Return value:  Size  Location     Type
 20481 ;;                  1    wreg      void 
 20482 ;; Registers used:
 20483 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 20484 ;; Tracked objects:
 20485 ;;		On entry : 3F/0
 20486 ;;		On exit  : 0/0
 20487 ;;		Unchanged: 0/0
 20488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20489 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20490 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20491 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20492 ;;      Totals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20493 ;;Total ram usage:       28 bytes
 20494 ;; Hardware stack levels used: 1
 20495 ;; Hardware stack levels required when called: 14
 20496 ;; This function calls:
 20497 ;;		_ReadSerial
 20498 ;;		_RemoveSerial
 20499 ;;		_SaveNVM_VarSystem
 20500 ;;		_cmdMemoryIsEmpty
 20501 ;;		_confirmpackage
 20502 ;;		_read_eusartparser
 20503 ;;		_saveNewSerial
 20504 ;;		_validateRemoteSerialNumber
 20505 ;;		_write_eusartparser
 20506 ;;		_write_package
 20507 ;; This function is called by:
 20508 ;;		_main
 20509 ;; This function uses a non-reentrant model
 20510 ;;
 20511                           
 20512                           	psect	text74
 20513  001886                     __ptext74:
 20514                           	callstack 0
 20515  001886                     _eusartparser:
 20516                           	callstack 16
 20517                           
 20518                           ; BSR set to: 0
 20519                           ;eusartparser.c: 459:         struct package_t a;;eusartparser.c: 460:         uint8_t r
      +                          elcounter;;eusartparser.c: 461:         static _Bool save_f=0;;eusartparser.c: 462:     
      +                              static uint16_t buffer=0x0000;;eusartparser.c: 463:         uint32_t serial;;eusartp
      +                          arser.c: 464:         char pos;;eusartparser.c: 466:         switch(package->functioncod
      +                          e){
 20520                           
 20521                           ;incstack = 0
 20522  001886  EF9B  F010         	goto	l27749
 20523  00188A                     l27309:
 20524                           
 20525                           ; BSR set to: 0
 20526                           ;eusartparser.c: 468:                 read_eusartparser(package);
 20527  00188A  C0E0  F018         	movff	eusartparser@package,read_eusartparser@package
 20528  00188E  C0E1  F019         	movff	eusartparser@package+1,read_eusartparser@package+1
 20529  001892  EC6C  F014         	call	_read_eusartparser	;wreg free
 20530  001896                     l27311:
 20531                           
 20532                           ;eusartparser.c: 469:                 confirmpackage(package, 1);
 20533  001896  C0E0  F012         	movff	eusartparser@package,confirmpackage@package
 20534  00189A  C0E1  F013         	movff	eusartparser@package+1,confirmpackage@package+1
 20535  00189E  0E01               	movlw	1
 20536  0018A0  6E14               	movwf	confirmpackage@confirm^0,c
 20537  0018A2  EC5F  F046         	call	_confirmpackage	;wreg free
 20538  0018A6                     l27313:
 20539                           
 20540                           ;eusartparser.c: 470:                 write_package(*package);
 20541  0018A6  C0E0  FFD9         	movff	eusartparser@package,fsr2l
 20542  0018AA  C0E1  FFDA         	movff	eusartparser@package+1,fsr2h
 20543  0018AE  EE00  F011         	lfsr	0,write_package@package
 20544  0018B2  0E06               	movlw	6
 20545  0018B4                     u33221:
 20546  0018B4  CFDB FFEB          	movff	plusw2,plusw0
 20547  0018B8  06E8               	decf	wreg,f,c
 20548  0018BA  E2FC               	bc	u33221
 20549  0018BC  ECA9  F04A         	call	_write_package	;wreg free
 20550                           
 20551                           ;eusartparser.c: 471:                 break;
 20552  0018C0  0012               	return	
 20553  0018C2                     l27315:
 20554                           
 20555                           ; BSR set to: 0
 20556                           ;eusartparser.c: 474:                 if(programmer_enable){
 20557  0018C2  5185               	movf	_programmer_enable& (0+255),w,b
 20558  0018C4  B4D8               	btfsc	status,2,c
 20559  0018C6  D00E               	goto	l27323
 20560                           
 20561                           ; BSR set to: 0
 20562                           ;eusartparser.c: 475:                     write_eusartparser(*package);
 20563  0018C8  C0E0  FFD9         	movff	eusartparser@package,fsr2l
 20564  0018CC  C0E1  FFDA         	movff	eusartparser@package+1,fsr2h
 20565  0018D0  EE00  F010         	lfsr	0,write_eusartparser@package
 20566  0018D4  0E06               	movlw	6
 20567  0018D6                     u33241:
 20568  0018D6  CFDB FFEB          	movff	plusw2,plusw0
 20569  0018DA  06E8               	decf	wreg,f,c
 20570  0018DC  E2FC               	bc	u33241
 20571  0018DE  EC32  F01C         	call	_write_eusartparser	;wreg free
 20572  0018E2  D7D9               	goto	l27311
 20573  0018E4                     l27323:
 20574                           
 20575                           ; BSR set to: 0
 20576                           ;eusartparser.c: 480:                     confirmpackage(package, 0);
 20577  0018E4  C0E0  F012         	movff	eusartparser@package,confirmpackage@package
 20578  0018E8  C0E1  F013         	movff	eusartparser@package+1,confirmpackage@package+1
 20579  0018EC  0E00               	movlw	0
 20580  0018EE  6E14               	movwf	confirmpackage@confirm^0,c
 20581  0018F0  EC5F  F046         	call	_confirmpackage	;wreg free
 20582  0018F4  D7D8               	goto	l27313
 20583  0018F6                     l27327:
 20584                           
 20585                           ; BSR set to: 0
 20586                           ;eusartparser.c: 486:                 if(programmer_enable){
 20587  0018F6  5185               	movf	_programmer_enable& (0+255),w,b
 20588  0018F8  B4D8               	btfsc	status,2,c
 20589  0018FA  D008               	goto	l27333
 20590                           
 20591                           ; BSR set to: 0
 20592                           ;eusartparser.c: 487:                     SaveNVM_VarSystem(pageMemoryE);
 20593  0018FC  0E01               	movlw	1
 20594  0018FE  ECE3  F049         	call	_SaveNVM_VarSystem
 20595                           
 20596                           ;eusartparser.c: 488:                     SaveNVM_VarSystem(pageMemoryP);
 20597  001902  0E00               	movlw	0
 20598  001904  ECE3  F049         	call	_SaveNVM_VarSystem
 20599                           
 20600                           ;eusartparser.c: 489:                     programmer_enable=0;
 20601  001908  0E00               	movlw	0
 20602  00190A  D005               	goto	L83
 20603  00190C                     l27333:
 20604                           
 20605                           ; BSR set to: 0
 20606                           ;eusartparser.c: 492:                     if((sm_state_Main_t)main_stateMachine.current_
      +                          state==st_standBy)
 20607  00190C  0101               	movlb	1	; () banked
 20608  00190E  51F2               	movf	_main_stateMachine& (0+255),w,b
 20609  001910  A4D8               	btfss	status,2,c
 20610  001912  D004               	goto	l27337
 20611                           
 20612                           ; BSR set to: 1
 20613                           ;eusartparser.c: 493:                         programmer_enable=1;
 20614  001914  0E01               	movlw	1
 20615  001916                     L83:
 20616  001916  0100               	movlb	0	; () banked
 20617  001918  6F85               	movwf	_programmer_enable& (0+255),b
 20618  00191A  D019               	goto	l27345
 20619  00191C                     l27337:
 20620                           
 20621                           ; BSR set to: 1
 20622                           ;eusartparser.c: 495:                         package->data.data16=(uint16_t)2;
 20623  00191C  0100               	movlb	0	; () banked
 20624  00191E  EE20 F002          	lfsr	2,2
 20625  001922  51E0               	movf	eusartparser@package& (0+255),w,b
 20626  001924  26D9               	addwf	fsr2l,f,c
 20627  001926  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 20628  001928  22DA               	addwfc	fsr2h,f,c
 20629  00192A  0E02               	movlw	2
 20630  00192C  6EDE               	movwf	postinc2,c
 20631  00192E  0E00               	movlw	0
 20632  001930  6EDD               	movwf	postdec2,c
 20633  001932                     l27339:
 20634                           
 20635                           ; BSR set to: 0
 20636                           ;eusartparser.c: 496:                         write_package(*package);
 20637  001932  C0E0  FFD9         	movff	eusartparser@package,fsr2l
 20638  001936  C0E1  FFDA         	movff	eusartparser@package+1,fsr2h
 20639  00193A  EE00  F011         	lfsr	0,write_package@package
 20640  00193E  0E06               	movlw	6
 20641  001940                     u33271:
 20642  001940  CFDB FFEB          	movff	plusw2,plusw0
 20643  001944  06E8               	decf	wreg,f,c
 20644  001946  E2FC               	bc	u33271
 20645  001948  ECA9  F04A         	call	_write_package	;wreg free
 20646  00194C  D7A4               	goto	l27311
 20647  00194E                     l27345:
 20648                           
 20649                           ; BSR set to: 0
 20650                           ;eusartparser.c: 503:                 package->data.data16=(uint16_t)programmer_enable;
 20651  00194E  5185               	movf	_programmer_enable& (0+255),w,b
 20652  001950  6FE2               	movwf	??_eusartparser& (0+255),b
 20653  001952  6BE3               	clrf	(??_eusartparser+1)& (0+255),b
 20654  001954  EE20 F002          	lfsr	2,2
 20655  001958  51E0               	movf	eusartparser@package& (0+255),w,b
 20656  00195A  26D9               	addwf	fsr2l,f,c
 20657  00195C  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 20658  00195E  22DA               	addwfc	fsr2h,f,c
 20659  001960  C0E2  FFDE         	movff	??_eusartparser,postinc2
 20660  001964  C0E3  FFDD         	movff	??_eusartparser+1,postdec2
 20661  001968  D7E4               	goto	l27339
 20662  00196A                     l27357:
 20663                           
 20664                           ; BSR set to: 0
 20665                           ;eusartparser.c: 513:                     package->address=0x00;
 20666  00196A  EE20 F001          	lfsr	2,1
 20667  00196E  51E0               	movf	eusartparser@package& (0+255),w,b
 20668  001970  26D9               	addwf	fsr2l,f,c
 20669  001972  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 20670  001974  22DA               	addwfc	fsr2h,f,c
 20671  001976  0E00               	movlw	0
 20672  001978  6EDF               	movwf	indf2,c
 20673                           
 20674                           ;eusartparser.c: 514:                     package->data.data16=var_sys_NVM.positionRemot
      +                          esFull;
 20675  00197A  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 20676  00197C  6FE2               	movwf	??_eusartparser& (0+255),b
 20677  00197E  6BE3               	clrf	(??_eusartparser+1)& (0+255),b
 20678  001980  EE20 F002          	lfsr	2,2
 20679  001984  51E0               	movf	eusartparser@package& (0+255),w,b
 20680  001986  26D9               	addwf	fsr2l,f,c
 20681  001988  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 20682  00198A  22DA               	addwfc	fsr2h,f,c
 20683  00198C  C0E2  FFDE         	movff	??_eusartparser,postinc2
 20684  001990  C0E3  FFDD         	movff	??_eusartparser+1,postdec2
 20685                           
 20686                           ; BSR set to: 0
 20687                           ;eusartparser.c: 515:                     for(uint8_t i=0;i<var_sys_NVM.positionRemotesF
      +                          ull;i++)
 20688  001994  0E00               	movlw	0
 20689  001996  6FE8               	movwf	eusartparser@i& (0+255),b
 20690  001998  D014               	goto	l27367
 20691  00199A                     l27361:
 20692                           
 20693                           ; BSR set to: 0
 20694                           ;eusartparser.c: 516:                     if(cmdMemoryIsEmpty(0,i)==1)
 20695  00199A  C0E8  F02E         	movff	eusartparser@i,cmdMemoryIsEmpty@position
 20696  00199E  0E00               	movlw	0
 20697  0019A0  EC2C  F03F         	call	_cmdMemoryIsEmpty
 20698  0019A4  06E8               	decf	wreg,f,c
 20699  0019A6  A4D8               	btfss	status,2,c
 20700  0019A8  D00A               	goto	l27365
 20701                           
 20702                           ;eusartparser.c: 517:                         package->data.data16--;
 20703  0019AA  0100               	movlb	0	; () banked
 20704  0019AC  EE20 F002          	lfsr	2,2
 20705  0019B0  51E0               	movf	eusartparser@package& (0+255),w,b
 20706  0019B2  26D9               	addwf	fsr2l,f,c
 20707  0019B4  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 20708  0019B6  22DA               	addwfc	fsr2h,f,c
 20709  0019B8  06DE               	decf	postinc2,f,c
 20710  0019BA  0E00               	movlw	0
 20711  0019BC  5ADD               	subwfb	postdec2,f,c
 20712  0019BE                     l27365:
 20713  0019BE  0100               	movlb	0	; () banked
 20714  0019C0  2BE8               	incf	eusartparser@i& (0+255),f,b
 20715  0019C2                     l27367:
 20716                           
 20717                           ; BSR set to: 0
 20718  0019C2  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 20719  0019C4  5DE8               	subwf	eusartparser@i& (0+255),w,b
 20720  0019C6  B0D8               	btfsc	status,0,c
 20721  0019C8  D7B4               	goto	l27339
 20722  0019CA  D7E7               	goto	l27361
 20723  0019CC                     l27375:
 20724                           
 20725                           ; BSR set to: 0
 20726                           ;eusartparser.c: 524:                 package->address=0x00;
 20727  0019CC  EE20 F001          	lfsr	2,1
 20728  0019D0  51E0               	movf	eusartparser@package& (0+255),w,b
 20729  0019D2  26D9               	addwf	fsr2l,f,c
 20730  0019D4  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 20731  0019D6  22DA               	addwfc	fsr2h,f,c
 20732  0019D8  0E00               	movlw	0
 20733  0019DA  6EDF               	movwf	indf2,c
 20734                           
 20735                           ;eusartparser.c: 525:                 package->data.data16=0;
 20736  0019DC  EE20 F002          	lfsr	2,2
 20737  0019E0  51E0               	movf	eusartparser@package& (0+255),w,b
 20738  0019E2  26D9               	addwf	fsr2l,f,c
 20739  0019E4  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 20740  0019E6  22DA               	addwfc	fsr2h,f,c
 20741  0019E8  0E00               	movlw	0
 20742  0019EA  6EDE               	movwf	postinc2,c
 20743  0019EC  0E00               	movlw	0
 20744  0019EE  6EDD               	movwf	postdec2,c
 20745                           
 20746                           ; BSR set to: 0
 20747                           ;eusartparser.c: 526:                 for(uint8_t i=0;i<var_sys_NVM.positionRemotesFull;
      +                          i++)
 20748  0019F0  0E00               	movlw	0
 20749  0019F2  6FE9               	movwf	eusartparser@i_7301& (0+255),b
 20750  0019F4  D014               	goto	l27385
 20751  0019F6                     l27379:
 20752                           
 20753                           ; BSR set to: 0
 20754                           ;eusartparser.c: 527:                 if(cmdMemoryIsEmpty(0,i)==1)
 20755  0019F6  C0E9  F02E         	movff	eusartparser@i_7301,cmdMemoryIsEmpty@position
 20756  0019FA  0E00               	movlw	0
 20757  0019FC  EC2C  F03F         	call	_cmdMemoryIsEmpty
 20758  001A00  06E8               	decf	wreg,f,c
 20759  001A02  A4D8               	btfss	status,2,c
 20760  001A04  D00A               	goto	l27383
 20761                           
 20762                           ;eusartparser.c: 528:                     package->data.data16++;
 20763  001A06  0100               	movlb	0	; () banked
 20764  001A08  EE20 F002          	lfsr	2,2
 20765  001A0C  51E0               	movf	eusartparser@package& (0+255),w,b
 20766  001A0E  26D9               	addwf	fsr2l,f,c
 20767  001A10  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 20768  001A12  22DA               	addwfc	fsr2h,f,c
 20769  001A14  2ADE               	incf	postinc2,f,c
 20770  001A16  0E00               	movlw	0
 20771  001A18  22DD               	addwfc	postdec2,f,c
 20772  001A1A                     l27383:
 20773  001A1A  0100               	movlb	0	; () banked
 20774  001A1C  2BE9               	incf	eusartparser@i_7301& (0+255),f,b
 20775  001A1E                     l27385:
 20776                           
 20777                           ; BSR set to: 0
 20778  001A1E  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 20779  001A20  5DE9               	subwf	eusartparser@i_7301& (0+255),w,b
 20780  001A22  B0D8               	btfsc	status,0,c
 20781  001A24  D786               	goto	l27339
 20782  001A26  D7E7               	goto	l27379
 20783  001A28                     l27393:
 20784                           
 20785                           ; BSR set to: 0
 20786                           ;eusartparser.c: 534:                 relcounter=0;
 20787  001A28  0E00               	movlw	0
 20788  001A2A  6FF7               	movwf	eusartparser@relcounter& (0+255),b
 20789                           
 20790                           ;eusartparser.c: 535:                 for(uint8_t i=0;i<var_sys_NVM.positionRemotesFull;
      +                          i++)
 20791  001A2C  0E00               	movlw	0
 20792  001A2E  6FED               	movwf	eusartparser@i_7302& (0+255),b
 20793  001A30  D02E               	goto	l27405
 20794  001A32                     l27395:
 20795                           
 20796                           ; BSR set to: 0
 20797                           ;eusartparser.c: 536:                     if(cmdMemoryIsEmpty(0,i)==0){
 20798  001A32  C0ED  F02E         	movff	eusartparser@i_7302,cmdMemoryIsEmpty@position
 20799  001A36  0E00               	movlw	0
 20800  001A38  EC2C  F03F         	call	_cmdMemoryIsEmpty
 20801  001A3C  0900               	iorlw	0
 20802  001A3E  A4D8               	btfss	status,2,c
 20803  001A40  D024               	goto	l27403
 20804                           
 20805                           ;eusartparser.c: 537:                         package->data.data16=(uint16_t)i;
 20806  001A42  0100               	movlb	0	; () banked
 20807  001A44  51ED               	movf	eusartparser@i_7302& (0+255),w,b
 20808  001A46  6FE2               	movwf	??_eusartparser& (0+255),b
 20809  001A48  6BE3               	clrf	(??_eusartparser+1)& (0+255),b
 20810  001A4A  EE20 F002          	lfsr	2,2
 20811  001A4E  51E0               	movf	eusartparser@package& (0+255),w,b
 20812  001A50  26D9               	addwf	fsr2l,f,c
 20813  001A52  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 20814  001A54  22DA               	addwfc	fsr2h,f,c
 20815  001A56  C0E2  FFDE         	movff	??_eusartparser,postinc2
 20816  001A5A  C0E3  FFDD         	movff	??_eusartparser+1,postdec2
 20817                           
 20818                           ;eusartparser.c: 538:                         package->address=relcounter;
 20819  001A5E  EE20 F001          	lfsr	2,1
 20820  001A62  51E0               	movf	eusartparser@package& (0+255),w,b
 20821  001A64  26D9               	addwf	fsr2l,f,c
 20822  001A66  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 20823  001A68  22DA               	addwfc	fsr2h,f,c
 20824  001A6A  C0F7  FFDF         	movff	eusartparser@relcounter,indf2
 20825                           
 20826                           ; BSR set to: 0
 20827                           ;eusartparser.c: 539:                         relcounter++;
 20828  001A6E  2BF7               	incf	eusartparser@relcounter& (0+255),f,b
 20829                           
 20830                           ; BSR set to: 0
 20831                           ;eusartparser.c: 540:                         write_package(*package);
 20832  001A70  C0E0  FFD9         	movff	eusartparser@package,fsr2l
 20833  001A74  C0E1  FFDA         	movff	eusartparser@package+1,fsr2h
 20834  001A78  EE00  F011         	lfsr	0,write_package@package
 20835  001A7C  0E06               	movlw	6
 20836  001A7E                     u33331:
 20837  001A7E  CFDB FFEB          	movff	plusw2,plusw0
 20838  001A82  06E8               	decf	wreg,f,c
 20839  001A84  E2FC               	bc	u33331
 20840  001A86  ECA9  F04A         	call	_write_package	;wreg free
 20841  001A8A                     l27403:
 20842  001A8A  0100               	movlb	0	; () banked
 20843  001A8C  2BED               	incf	eusartparser@i_7302& (0+255),f,b
 20844  001A8E                     l27405:
 20845                           
 20846                           ; BSR set to: 0
 20847  001A8E  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 20848  001A90  5DED               	subwf	eusartparser@i_7302& (0+255),w,b
 20849  001A92  B0D8               	btfsc	status,0,c
 20850  001A94  D700               	goto	l27311
 20851  001A96  D7CD               	goto	l27395
 20852  001A98                     l27411:
 20853                           
 20854                           ; BSR set to: 0
 20855                           ;eusartparser.c: 546:                 relcounter=0;
 20856  001A98  0E00               	movlw	0
 20857  001A9A  6FF7               	movwf	eusartparser@relcounter& (0+255),b
 20858                           
 20859                           ;eusartparser.c: 547:                 for(uint8_t i=0;i<var_sys_NVM.positionRemotesFull;
      +                          i++)
 20860  001A9C  0E00               	movlw	0
 20861  001A9E  6FEE               	movwf	eusartparser@i_7303& (0+255),b
 20862  001AA0  D02E               	goto	l27423
 20863  001AA2                     l27413:
 20864                           
 20865                           ; BSR set to: 0
 20866                           ;eusartparser.c: 548:                     if(cmdMemoryIsEmpty(0,i)==1){
 20867  001AA2  C0EE  F02E         	movff	eusartparser@i_7303,cmdMemoryIsEmpty@position
 20868  001AA6  0E00               	movlw	0
 20869  001AA8  EC2C  F03F         	call	_cmdMemoryIsEmpty
 20870  001AAC  06E8               	decf	wreg,f,c
 20871  001AAE  A4D8               	btfss	status,2,c
 20872  001AB0  D024               	goto	l27421
 20873                           
 20874                           ;eusartparser.c: 549:                         package->data.data16=(uint16_t)i;
 20875  001AB2  0100               	movlb	0	; () banked
 20876  001AB4  51EE               	movf	eusartparser@i_7303& (0+255),w,b
 20877  001AB6  6FE2               	movwf	??_eusartparser& (0+255),b
 20878  001AB8  6BE3               	clrf	(??_eusartparser+1)& (0+255),b
 20879  001ABA  EE20 F002          	lfsr	2,2
 20880  001ABE  51E0               	movf	eusartparser@package& (0+255),w,b
 20881  001AC0  26D9               	addwf	fsr2l,f,c
 20882  001AC2  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 20883  001AC4  22DA               	addwfc	fsr2h,f,c
 20884  001AC6  C0E2  FFDE         	movff	??_eusartparser,postinc2
 20885  001ACA  C0E3  FFDD         	movff	??_eusartparser+1,postdec2
 20886                           
 20887                           ;eusartparser.c: 550:                         package->address=relcounter;
 20888  001ACE  EE20 F001          	lfsr	2,1
 20889  001AD2  51E0               	movf	eusartparser@package& (0+255),w,b
 20890  001AD4  26D9               	addwf	fsr2l,f,c
 20891  001AD6  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 20892  001AD8  22DA               	addwfc	fsr2h,f,c
 20893  001ADA  C0F7  FFDF         	movff	eusartparser@relcounter,indf2
 20894                           
 20895                           ; BSR set to: 0
 20896                           ;eusartparser.c: 551:                         relcounter++;
 20897  001ADE  2BF7               	incf	eusartparser@relcounter& (0+255),f,b
 20898                           
 20899                           ; BSR set to: 0
 20900                           ;eusartparser.c: 552:                         write_package(*package);
 20901  001AE0  C0E0  FFD9         	movff	eusartparser@package,fsr2l
 20902  001AE4  C0E1  FFDA         	movff	eusartparser@package+1,fsr2h
 20903  001AE8  EE00  F011         	lfsr	0,write_package@package
 20904  001AEC  0E06               	movlw	6
 20905  001AEE                     u33361:
 20906  001AEE  CFDB FFEB          	movff	plusw2,plusw0
 20907  001AF2  06E8               	decf	wreg,f,c
 20908  001AF4  E2FC               	bc	u33361
 20909  001AF6  ECA9  F04A         	call	_write_package	;wreg free
 20910  001AFA                     l27421:
 20911  001AFA  0100               	movlb	0	; () banked
 20912  001AFC  2BEE               	incf	eusartparser@i_7303& (0+255),f,b
 20913  001AFE                     l27423:
 20914                           
 20915                           ; BSR set to: 0
 20916  001AFE  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 20917  001B00  5DEE               	subwf	eusartparser@i_7303& (0+255),w,b
 20918  001B02  B0D8               	btfsc	status,0,c
 20919  001B04  D6C8               	goto	l27311
 20920  001B06  D7CD               	goto	l27413
 20921  001B08                     l27429:
 20922                           
 20923                           ; BSR set to: 0
 20924                           ;eusartparser.c: 558:                 if(programmer_enable){
 20925  001B08  5185               	movf	_programmer_enable& (0+255),w,b
 20926  001B0A  B4D8               	btfsc	status,2,c
 20927  001B0C  D6EB               	goto	l27323
 20928                           
 20929                           ; BSR set to: 0
 20930                           ;eusartparser.c: 559:                     if(save_f==0){
 20931  001B0E  0101               	movlb	1	; () banked
 20932  001B10  518F               	movf	eusartparser@save_f& (0+255),w,b
 20933  001B12  A4D8               	btfss	status,2,c
 20934  001B14  D024               	goto	l27441
 20935  001B16                     u33390:
 20936                           
 20937                           ; BSR set to: 1
 20938                           ;eusartparser.c: 560:                         buffer=package->data.data16;
 20939  001B16  0100               	movlb	0	; () banked
 20940  001B18  EE20 F002          	lfsr	2,2
 20941  001B1C  51E0               	movf	eusartparser@package& (0+255),w,b
 20942  001B1E  26D9               	addwf	fsr2l,f,c
 20943  001B20  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 20944  001B22  22DA               	addwfc	fsr2h,f,c
 20945  001B24  CFDE F185          	movff	postinc2,eusartparser@buffer
 20946  001B28  CFDD F186          	movff	postdec2,eusartparser@buffer+1
 20947                           
 20948                           ; BSR set to: 0
 20949                           ;eusartparser.c: 561:                         confirmpackage(package, 1);
 20950  001B2C  C0E0  F012         	movff	eusartparser@package,confirmpackage@package
 20951  001B30  C0E1  F013         	movff	eusartparser@package+1,confirmpackage@package+1
 20952  001B34  0E01               	movlw	1
 20953  001B36  6E14               	movwf	confirmpackage@confirm^0,c
 20954  001B38  EC5F  F046         	call	_confirmpackage	;wreg free
 20955                           
 20956                           ;eusartparser.c: 562:                         write_package(*package);
 20957  001B3C  C0E0  FFD9         	movff	eusartparser@package,fsr2l
 20958  001B40  C0E1  FFDA         	movff	eusartparser@package+1,fsr2h
 20959  001B44  EE00  F011         	lfsr	0,write_package@package
 20960  001B48  0E06               	movlw	6
 20961  001B4A                     u33401:
 20962  001B4A  CFDB FFEB          	movff	plusw2,plusw0
 20963  001B4E  06E8               	decf	wreg,f,c
 20964  001B50  E2FC               	bc	u33401
 20965  001B52  ECA9  F04A         	call	_write_package	;wreg free
 20966                           
 20967                           ;eusartparser.c: 563:                         save_f=1;
 20968  001B56  0E01               	movlw	1
 20969  001B58  0101               	movlb	1	; () banked
 20970  001B5A  6F8F               	movwf	eusartparser@save_f& (0+255),b
 20971                           
 20972                           ;eusartparser.c: 564:                     }
 20973  001B5C  0012               	return	
 20974  001B5E                     l27441:
 20975                           
 20976                           ; BSR set to: 1
 20977                           ;eusartparser.c: 566:                         serial=((uint32_t)buffer<<16)+(uint32_t)pa
      +                          ckage->data.data16;
 20978  001B5E  0100               	movlb	0	; () banked
 20979  001B60  EE20 F002          	lfsr	2,2
 20980  001B64  51E0               	movf	eusartparser@package& (0+255),w,b
 20981  001B66  26D9               	addwf	fsr2l,f,c
 20982  001B68  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 20983  001B6A  22DA               	addwfc	fsr2h,f,c
 20984  001B6C  CFDE F0E2          	movff	postinc2,??_eusartparser
 20985  001B70  CFDD F0E3          	movff	postdec2,??_eusartparser+1
 20986  001B74  0101               	movlb	1	; () banked
 20987  001B76  5185               	movf	eusartparser@buffer& (0+255),w,b
 20988  001B78  0100               	movlb	0	; () banked
 20989  001B7A  6FE4               	movwf	(??_eusartparser+2)& (0+255),b
 20990  001B7C  0101               	movlb	1	; () banked
 20991  001B7E  5186               	movf	(eusartparser@buffer+1)& (0+255),w,b
 20992  001B80  0100               	movlb	0	; () banked
 20993  001B82  6FE5               	movwf	(??_eusartparser+3)& (0+255),b
 20994  001B84  6BE6               	clrf	(??_eusartparser+4)& (0+255),b
 20995  001B86  6BE7               	clrf	(??_eusartparser+5)& (0+255),b
 20996  001B88  C0E5  F0E7         	movff	??_eusartparser+3,??_eusartparser+5
 20997  001B8C  C0E4  F0E6         	movff	??_eusartparser+2,??_eusartparser+4
 20998  001B90  6BE5               	clrf	(??_eusartparser+3)& (0+255),b
 20999  001B92  6BE4               	clrf	(??_eusartparser+2)& (0+255),b
 21000  001B94  51E2               	movf	??_eusartparser& (0+255),w,b
 21001  001B96  25E4               	addwf	(??_eusartparser+2)& (0+255),w,b
 21002  001B98  6FF8               	movwf	eusartparser@serial& (0+255),b
 21003  001B9A  51E3               	movf	(??_eusartparser+1)& (0+255),w,b
 21004  001B9C  21E5               	addwfc	(??_eusartparser+3)& (0+255),w,b
 21005  001B9E  6FF9               	movwf	(eusartparser@serial+1)& (0+255),b
 21006  001BA0  0E00               	movlw	0
 21007  001BA2  21E6               	addwfc	(??_eusartparser+4)& (0+255),w,b
 21008  001BA4  6FFA               	movwf	(eusartparser@serial+2)& (0+255),b
 21009  001BA6  0E00               	movlw	0
 21010  001BA8  21E7               	addwfc	(??_eusartparser+5)& (0+255),w,b
 21011  001BAA  6FFB               	movwf	(eusartparser@serial+3)& (0+255),b
 21012                           
 21013                           ; BSR set to: 0
 21014                           ;eusartparser.c: 567:                         if(validateRemoteSerialNumber(serial, NO, 
      +                          &pos)==NoCMD){
 21015  001BAC  C0F8  F02E         	movff	eusartparser@serial,validateRemoteSerialNumber@serial
 21016  001BB0  C0F9  F02F         	movff	eusartparser@serial+1,validateRemoteSerialNumber@serial+1
 21017  001BB4  C0FA  F030         	movff	eusartparser@serial+2,validateRemoteSerialNumber@serial+2
 21018  001BB8  C0FB  F031         	movff	eusartparser@serial+3,validateRemoteSerialNumber@serial+3
 21019  001BBC  0E00               	movlw	0
 21020  001BBE  6E32               	movwf	validateRemoteSerialNumber@VerifyOnlySerial^0,c
 21021  001BC0  0EEC               	movlw	low eusartparser@pos
 21022  001BC2  6E33               	movwf	validateRemoteSerialNumber@position^0,c
 21023  001BC4  6A34               	clrf	(validateRemoteSerialNumber@position+1)^0,c
 21024  001BC6  EC5A  F02F         	call	_validateRemoteSerialNumber	;wreg free
 21025  001BCA  0900               	iorlw	0
 21026  001BCC  A4D8               	btfss	status,2,c
 21027  001BCE  D04D               	goto	u33460
 21028                           
 21029                           ; BSR set to: 0
 21030                           ;eusartparser.c: 568:                             for(uint8_t i=0;;i++)
 21031  001BD0  0E00               	movlw	0
 21032  001BD2  6FF1               	movwf	eusartparser@i_7304& (0+255),b
 21033  001BD4                     l27447:
 21034                           
 21035                           ; BSR set to: 0
 21036                           ;eusartparser.c: 569:                                 if(cmdMemoryIsEmpty(0,i)==1&&packa
      +                          ge->address==0){
 21037  001BD4  C0F1  F02E         	movff	eusartparser@i_7304,cmdMemoryIsEmpty@position
 21038  001BD8  0E00               	movlw	0
 21039  001BDA  EC2C  F03F         	call	_cmdMemoryIsEmpty
 21040  001BDE  06E8               	decf	wreg,f,c
 21041  001BE0  A4D8               	btfss	status,2,c
 21042  001BE2  D02D               	goto	l27459
 21043  001BE4  0100               	movlb	0	; () banked
 21044  001BE6  EE20 F001          	lfsr	2,1
 21045  001BEA  51E0               	movf	eusartparser@package& (0+255),w,b
 21046  001BEC  26D9               	addwf	fsr2l,f,c
 21047  001BEE  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21048  001BF0  22DA               	addwfc	fsr2h,f,c
 21049  001BF2  50DF               	movf	indf2,w,c
 21050  001BF4  A4D8               	btfss	status,2,c
 21051  001BF6  D023               	goto	l27459
 21052                           
 21053                           ; BSR set to: 0
 21054                           ;eusartparser.c: 570:                                     saveNewSerial(0,serial,i);
 21055  001BF8  C0F8  F0D8         	movff	eusartparser@serial,saveNewSerial@tempSerial
 21056  001BFC  C0F9  F0D9         	movff	eusartparser@serial+1,saveNewSerial@tempSerial+1
 21057  001C00  C0FA  F0DA         	movff	eusartparser@serial+2,saveNewSerial@tempSerial+2
 21058  001C04  C0FB  F0DB         	movff	eusartparser@serial+3,saveNewSerial@tempSerial+3
 21059  001C08  C0F1  F0DC         	movff	eusartparser@i_7304,saveNewSerial@position
 21060  001C0C  0E00               	movlw	0
 21061  001C0E  ECFA  F043         	call	_saveNewSerial
 21062  001C12                     l27453:
 21063                           
 21064                           ;eusartparser.c: 571:                                     confirmpackage(package, 1);
 21065  001C12  C0E0  F012         	movff	eusartparser@package,confirmpackage@package
 21066  001C16  C0E1  F013         	movff	eusartparser@package+1,confirmpackage@package+1
 21067  001C1A  0E01               	movlw	1
 21068  001C1C  6E14               	movwf	confirmpackage@confirm^0,c
 21069  001C1E  EC5F  F046         	call	_confirmpackage	;wreg free
 21070  001C22                     l27455:
 21071                           
 21072                           ;eusartparser.c: 572:                                     write_package(*package);
 21073  001C22  C0E0  FFD9         	movff	eusartparser@package,fsr2l
 21074  001C26  C0E1  FFDA         	movff	eusartparser@package+1,fsr2h
 21075  001C2A  EE00  F011         	lfsr	0,write_package@package
 21076  001C2E  0E06               	movlw	6
 21077  001C30                     u33441:
 21078  001C30  CFDB FFEB          	movff	plusw2,plusw0
 21079  001C34  06E8               	decf	wreg,f,c
 21080  001C36  E2FC               	bc	u33441
 21081  001C38  ECA9  F04A         	call	_write_package	;wreg free
 21082                           
 21083                           ;eusartparser.c: 573:                                     break;
 21084  001C3C  D021               	goto	l27475
 21085  001C3E                     l27459:
 21086  001C3E  C0F1  F02E         	movff	eusartparser@i_7304,cmdMemoryIsEmpty@position
 21087  001C42  0E00               	movlw	0
 21088  001C44  EC2C  F03F         	call	_cmdMemoryIsEmpty
 21089  001C48  06E8               	decf	wreg,f,c
 21090  001C4A  A4D8               	btfss	status,2,c
 21091  001C4C  D009               	goto	l27463
 21092                           
 21093                           ;eusartparser.c: 576:                                     package->address--;
 21094  001C4E  0100               	movlb	0	; () banked
 21095  001C50  EE20 F001          	lfsr	2,1
 21096  001C54  51E0               	movf	eusartparser@package& (0+255),w,b
 21097  001C56  26D9               	addwf	fsr2l,f,c
 21098  001C58  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21099  001C5A  22DA               	addwfc	fsr2h,f,c
 21100  001C5C  06DF               	decf	indf2,f,c
 21101                           
 21102                           ;eusartparser.c: 577:                                 }
 21103  001C5E  D00E               	goto	l27469
 21104  001C60                     l27463:
 21105  001C60  0100               	movlb	0	; () banked
 21106  001C62  51F1               	movf	eusartparser@i_7304& (0+255),w,b
 21107  001C64  19B8               	xorwf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 21108  001C66  A4D8               	btfss	status,2,c
 21109  001C68  D009               	goto	l27469
 21110  001C6A                     u33460:
 21111                           
 21112                           ; BSR set to: 0
 21113                           ;eusartparser.c: 579:                                     confirmpackage(package, 0);
 21114  001C6A  C0E0  F012         	movff	eusartparser@package,confirmpackage@package
 21115  001C6E  C0E1  F013         	movff	eusartparser@package+1,confirmpackage@package+1
 21116  001C72  0E00               	movlw	0
 21117  001C74  6E14               	movwf	confirmpackage@confirm^0,c
 21118  001C76  EC5F  F046         	call	_confirmpackage	;wreg free
 21119  001C7A  D7D3               	goto	l27455
 21120  001C7C                     l27469:
 21121                           
 21122                           ; BSR set to: 0
 21123  001C7C  2BF1               	incf	eusartparser@i_7304& (0+255),f,b
 21124  001C7E  D7AA               	goto	l27447
 21125  001C80                     l27475:
 21126                           
 21127                           ;eusartparser.c: 588:                         save_f=0;
 21128  001C80  0E00               	movlw	0
 21129  001C82  0101               	movlb	1	; () banked
 21130  001C84  6F8F               	movwf	eusartparser@save_f& (0+255),b
 21131  001C86  0012               	return	
 21132  001C88                     l27481:
 21133                           
 21134                           ; BSR set to: 0
 21135                           ;eusartparser.c: 597:                 if(programmer_enable){
 21136  001C88  5185               	movf	_programmer_enable& (0+255),w,b
 21137  001C8A  B4D8               	btfsc	status,2,c
 21138  001C8C  D62B               	goto	l27323
 21139                           
 21140                           ; BSR set to: 0
 21141                           ;eusartparser.c: 598:                     for(uint8_t i=0;;i++)
 21142  001C8E  0E00               	movlw	0
 21143  001C90  6FF2               	movwf	eusartparser@i_7305& (0+255),b
 21144  001C92                     l27485:
 21145                           
 21146                           ; BSR set to: 0
 21147                           ;eusartparser.c: 599:                         if(cmdMemoryIsEmpty(0,i)==0&&package->addr
      +                          ess==0){
 21148  001C92  C0F2  F02E         	movff	eusartparser@i_7305,cmdMemoryIsEmpty@position
 21149  001C96  0E00               	movlw	0
 21150  001C98  EC2C  F03F         	call	_cmdMemoryIsEmpty
 21151  001C9C  0900               	iorlw	0
 21152  001C9E  A4D8               	btfss	status,2,c
 21153  001CA0  D010               	goto	l27499
 21154  001CA2  0100               	movlb	0	; () banked
 21155  001CA4  EE20 F001          	lfsr	2,1
 21156  001CA8  51E0               	movf	eusartparser@package& (0+255),w,b
 21157  001CAA  26D9               	addwf	fsr2l,f,c
 21158  001CAC  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21159  001CAE  22DA               	addwfc	fsr2h,f,c
 21160  001CB0  50DF               	movf	indf2,w,c
 21161  001CB2  A4D8               	btfss	status,2,c
 21162  001CB4  D006               	goto	l27499
 21163                           
 21164                           ; BSR set to: 0
 21165                           ;eusartparser.c: 600:                             RemoveSerial(0, i);
 21166  001CB6  C0F2  F03A         	movff	eusartparser@i_7305,RemoveSerial@position
 21167  001CBA  0E00               	movlw	0
 21168  001CBC  ECDB  F041         	call	_RemoveSerial
 21169  001CC0  D7A8               	goto	l27453
 21170  001CC2                     l27499:
 21171  001CC2  C0F2  F02E         	movff	eusartparser@i_7305,cmdMemoryIsEmpty@position
 21172  001CC6  0E00               	movlw	0
 21173  001CC8  EC2C  F03F         	call	_cmdMemoryIsEmpty
 21174  001CCC  0900               	iorlw	0
 21175  001CCE  A4D8               	btfss	status,2,c
 21176  001CD0  D009               	goto	l27503
 21177                           
 21178                           ;eusartparser.c: 607:                             package->address--;
 21179  001CD2  0100               	movlb	0	; () banked
 21180  001CD4  EE20 F001          	lfsr	2,1
 21181  001CD8  51E0               	movf	eusartparser@package& (0+255),w,b
 21182  001CDA  26D9               	addwf	fsr2l,f,c
 21183  001CDC  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21184  001CDE  22DA               	addwfc	fsr2h,f,c
 21185  001CE0  06DF               	decf	indf2,f,c
 21186                           
 21187                           ;eusartparser.c: 608:                         }
 21188  001CE2  D005               	goto	l27511
 21189  001CE4                     l27503:
 21190  001CE4  0100               	movlb	0	; () banked
 21191  001CE6  51F2               	movf	eusartparser@i_7305& (0+255),w,b
 21192  001CE8  19B8               	xorwf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 21193  001CEA  B4D8               	btfsc	status,2,c
 21194  001CEC  D7BE               	goto	u33460
 21195  001CEE                     l27511:
 21196                           
 21197                           ; BSR set to: 0
 21198  001CEE  2BF2               	incf	eusartparser@i_7305& (0+255),f,b
 21199  001CF0  D7D0               	goto	l27485
 21200  001CF2                     l27517:
 21201                           
 21202                           ; BSR set to: 0
 21203                           ;eusartparser.c: 622:                 for(uint8_t i=0;;i++)
 21204  001CF2  0E00               	movlw	0
 21205  001CF4  6FF3               	movwf	eusartparser@i_7306& (0+255),b
 21206  001CF6                     l27519:
 21207                           
 21208                           ; BSR set to: 0
 21209                           ;eusartparser.c: 623:                     if(cmdMemoryIsEmpty(0,i)==0&&package->address=
      +                          =0){
 21210  001CF6  C0F3  F02E         	movff	eusartparser@i_7306,cmdMemoryIsEmpty@position
 21211  001CFA  0E00               	movlw	0
 21212  001CFC  EC2C  F03F         	call	_cmdMemoryIsEmpty
 21213  001D00  0900               	iorlw	0
 21214  001D02  A4D8               	btfss	status,2,c
 21215  001D04  D02A               	goto	l27539
 21216  001D06  0100               	movlb	0	; () banked
 21217  001D08  EE20 F001          	lfsr	2,1
 21218  001D0C  51E0               	movf	eusartparser@package& (0+255),w,b
 21219  001D0E  26D9               	addwf	fsr2l,f,c
 21220  001D10  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21221  001D12  22DA               	addwfc	fsr2h,f,c
 21222  001D14  50DF               	movf	indf2,w,c
 21223  001D16  A4D8               	btfss	status,2,c
 21224  001D18  D020               	goto	l27539
 21225                           
 21226                           ; BSR set to: 0
 21227                           ;eusartparser.c: 624:                         ReadSerial(0, &serial, i);
 21228  001D1A  0EF8               	movlw	low eusartparser@serial
 21229  001D1C  6E2E               	movwf	ReadSerial@tempSerial^0,c
 21230  001D1E  C0F3  F02F         	movff	eusartparser@i_7306,ReadSerial@position
 21231  001D22  0E00               	movlw	0
 21232  001D24  EC32  F044         	call	_ReadSerial
 21233                           
 21234                           ;eusartparser.c: 625:                         package->data.data16=(uint16_t)serial;
 21235  001D28  0100               	movlb	0	; () banked
 21236  001D2A  EE20 F002          	lfsr	2,2
 21237  001D2E  51E0               	movf	eusartparser@package& (0+255),w,b
 21238  001D30  26D9               	addwf	fsr2l,f,c
 21239  001D32  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21240  001D34  22DA               	addwfc	fsr2h,f,c
 21241  001D36  C0F8  FFDE         	movff	eusartparser@serial,postinc2
 21242  001D3A  C0F9  FFDD         	movff	eusartparser@serial+1,postdec2
 21243                           
 21244                           ; BSR set to: 0
 21245                           ;eusartparser.c: 626:                         write_package(*package);
 21246  001D3E  C0E0  FFD9         	movff	eusartparser@package,fsr2l
 21247  001D42  C0E1  FFDA         	movff	eusartparser@package+1,fsr2h
 21248  001D46  EE00  F011         	lfsr	0,write_package@package
 21249  001D4A  0E06               	movlw	6
 21250  001D4C                     u33541:
 21251  001D4C  CFDB FFEB          	movff	plusw2,plusw0
 21252  001D50  06E8               	decf	wreg,f,c
 21253  001D52  E2FC               	bc	u33541
 21254  001D54  ECA9  F04A         	call	_write_package	;wreg free
 21255  001D58  D1C9               	goto	l27723
 21256  001D5A                     l27539:
 21257  001D5A  C0F3  F02E         	movff	eusartparser@i_7306,cmdMemoryIsEmpty@position
 21258  001D5E  0E00               	movlw	0
 21259  001D60  EC2C  F03F         	call	_cmdMemoryIsEmpty
 21260  001D64  0900               	iorlw	0
 21261  001D66  A4D8               	btfss	status,2,c
 21262  001D68  D009               	goto	l27543
 21263                           
 21264                           ;eusartparser.c: 634:                         package->address--;
 21265  001D6A  0100               	movlb	0	; () banked
 21266  001D6C  EE20 F001          	lfsr	2,1
 21267  001D70  51E0               	movf	eusartparser@package& (0+255),w,b
 21268  001D72  26D9               	addwf	fsr2l,f,c
 21269  001D74  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21270  001D76  22DA               	addwfc	fsr2h,f,c
 21271  001D78  06DF               	decf	indf2,f,c
 21272                           
 21273                           ;eusartparser.c: 635:                     }
 21274  001D7A  D005               	goto	l27549
 21275  001D7C                     l27543:
 21276  001D7C  0100               	movlb	0	; () banked
 21277  001D7E  51F3               	movf	eusartparser@i_7306& (0+255),w,b
 21278  001D80  19B8               	xorwf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 21279  001D82  B4D8               	btfsc	status,2,c
 21280  001D84  D5AF               	goto	l27323
 21281  001D86                     l27549:
 21282                           
 21283                           ; BSR set to: 0
 21284  001D86  2BF3               	incf	eusartparser@i_7306& (0+255),f,b
 21285  001D88  D7B6               	goto	l27519
 21286  001D8A                     l27551:
 21287                           
 21288                           ; BSR set to: 0
 21289                           ;eusartparser.c: 643:                     package->address=0x00;
 21290  001D8A  EE20 F001          	lfsr	2,1
 21291  001D8E  51E0               	movf	eusartparser@package& (0+255),w,b
 21292  001D90  26D9               	addwf	fsr2l,f,c
 21293  001D92  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21294  001D94  22DA               	addwfc	fsr2h,f,c
 21295  001D96  0E00               	movlw	0
 21296  001D98  6EDF               	movwf	indf2,c
 21297                           
 21298                           ;eusartparser.c: 644:                     package->data.data16=var_sys_NVM.positionRemot
      +                          esFull;
 21299  001D9A  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 21300  001D9C  6FE2               	movwf	??_eusartparser& (0+255),b
 21301  001D9E  6BE3               	clrf	(??_eusartparser+1)& (0+255),b
 21302  001DA0  EE20 F002          	lfsr	2,2
 21303  001DA4  51E0               	movf	eusartparser@package& (0+255),w,b
 21304  001DA6  26D9               	addwf	fsr2l,f,c
 21305  001DA8  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21306  001DAA  22DA               	addwfc	fsr2h,f,c
 21307  001DAC  C0E2  FFDE         	movff	??_eusartparser,postinc2
 21308  001DB0  C0E3  FFDD         	movff	??_eusartparser+1,postdec2
 21309                           
 21310                           ; BSR set to: 0
 21311                           ;eusartparser.c: 645:                     for(uint8_t i=0;i<var_sys_NVM.positionRemotesF
      +                          ull;i++)
 21312  001DB4  0E00               	movlw	0
 21313  001DB6  6FEA               	movwf	eusartparser@i_7308& (0+255),b
 21314  001DB8  D014               	goto	l27561
 21315  001DBA                     l27555:
 21316                           
 21317                           ; BSR set to: 0
 21318                           ;eusartparser.c: 646:                     if(cmdMemoryIsEmpty(1,i)==1)
 21319  001DBA  C0EA  F02E         	movff	eusartparser@i_7308,cmdMemoryIsEmpty@position
 21320  001DBE  0E01               	movlw	1
 21321  001DC0  EC2C  F03F         	call	_cmdMemoryIsEmpty
 21322  001DC4  06E8               	decf	wreg,f,c
 21323  001DC6  A4D8               	btfss	status,2,c
 21324  001DC8  D00A               	goto	l27559
 21325                           
 21326                           ;eusartparser.c: 647:                         package->data.data16--;
 21327  001DCA  0100               	movlb	0	; () banked
 21328  001DCC  EE20 F002          	lfsr	2,2
 21329  001DD0  51E0               	movf	eusartparser@package& (0+255),w,b
 21330  001DD2  26D9               	addwf	fsr2l,f,c
 21331  001DD4  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21332  001DD6  22DA               	addwfc	fsr2h,f,c
 21333  001DD8  06DE               	decf	postinc2,f,c
 21334  001DDA  0E00               	movlw	0
 21335  001DDC  5ADD               	subwfb	postdec2,f,c
 21336  001DDE                     l27559:
 21337  001DDE  0100               	movlb	0	; () banked
 21338  001DE0  2BEA               	incf	eusartparser@i_7308& (0+255),f,b
 21339  001DE2                     l27561:
 21340                           
 21341                           ; BSR set to: 0
 21342  001DE2  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 21343  001DE4  5DEA               	subwf	eusartparser@i_7308& (0+255),w,b
 21344  001DE6  B0D8               	btfsc	status,0,c
 21345  001DE8  D5A4               	goto	l27339
 21346  001DEA  D7E7               	goto	l27555
 21347  001DEC                     l27569:
 21348                           
 21349                           ; BSR set to: 0
 21350                           ;eusartparser.c: 654:                 package->address=0x00;
 21351  001DEC  EE20 F001          	lfsr	2,1
 21352  001DF0  51E0               	movf	eusartparser@package& (0+255),w,b
 21353  001DF2  26D9               	addwf	fsr2l,f,c
 21354  001DF4  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21355  001DF6  22DA               	addwfc	fsr2h,f,c
 21356  001DF8  0E00               	movlw	0
 21357  001DFA  6EDF               	movwf	indf2,c
 21358                           
 21359                           ;eusartparser.c: 655:                 package->data.data16=0;
 21360  001DFC  EE20 F002          	lfsr	2,2
 21361  001E00  51E0               	movf	eusartparser@package& (0+255),w,b
 21362  001E02  26D9               	addwf	fsr2l,f,c
 21363  001E04  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21364  001E06  22DA               	addwfc	fsr2h,f,c
 21365  001E08  0E00               	movlw	0
 21366  001E0A  6EDE               	movwf	postinc2,c
 21367  001E0C  0E00               	movlw	0
 21368  001E0E  6EDD               	movwf	postdec2,c
 21369                           
 21370                           ; BSR set to: 0
 21371                           ;eusartparser.c: 656:                 for(uint8_t i=0;i<var_sys_NVM.positionRemotesFull;
      +                          i++)
 21372  001E10  0E00               	movlw	0
 21373  001E12  6FEB               	movwf	eusartparser@i_7309& (0+255),b
 21374  001E14  D014               	goto	l27579
 21375  001E16                     l27573:
 21376                           
 21377                           ; BSR set to: 0
 21378                           ;eusartparser.c: 657:                 if(cmdMemoryIsEmpty(1,i)==1)
 21379  001E16  C0EB  F02E         	movff	eusartparser@i_7309,cmdMemoryIsEmpty@position
 21380  001E1A  0E01               	movlw	1
 21381  001E1C  EC2C  F03F         	call	_cmdMemoryIsEmpty
 21382  001E20  06E8               	decf	wreg,f,c
 21383  001E22  A4D8               	btfss	status,2,c
 21384  001E24  D00A               	goto	l27577
 21385                           
 21386                           ;eusartparser.c: 658:                     package->data.data16++;
 21387  001E26  0100               	movlb	0	; () banked
 21388  001E28  EE20 F002          	lfsr	2,2
 21389  001E2C  51E0               	movf	eusartparser@package& (0+255),w,b
 21390  001E2E  26D9               	addwf	fsr2l,f,c
 21391  001E30  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21392  001E32  22DA               	addwfc	fsr2h,f,c
 21393  001E34  2ADE               	incf	postinc2,f,c
 21394  001E36  0E00               	movlw	0
 21395  001E38  22DD               	addwfc	postdec2,f,c
 21396  001E3A                     l27577:
 21397  001E3A  0100               	movlb	0	; () banked
 21398  001E3C  2BEB               	incf	eusartparser@i_7309& (0+255),f,b
 21399  001E3E                     l27579:
 21400                           
 21401                           ; BSR set to: 0
 21402  001E3E  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 21403  001E40  5DEB               	subwf	eusartparser@i_7309& (0+255),w,b
 21404  001E42  B0D8               	btfsc	status,0,c
 21405  001E44  D576               	goto	l27339
 21406  001E46  D7E7               	goto	l27573
 21407  001E48                     l27587:
 21408                           
 21409                           ; BSR set to: 0
 21410                           ;eusartparser.c: 664:                 relcounter=0;
 21411  001E48  0E00               	movlw	0
 21412  001E4A  6FF7               	movwf	eusartparser@relcounter& (0+255),b
 21413                           
 21414                           ;eusartparser.c: 665:                 for(uint8_t i=0;i<var_sys_NVM.positionRemotesFull;
      +                          i++)
 21415  001E4C  0E00               	movlw	0
 21416  001E4E  6FEF               	movwf	eusartparser@i_7310& (0+255),b
 21417  001E50  D02E               	goto	l27599
 21418  001E52                     l27589:
 21419                           
 21420                           ; BSR set to: 0
 21421                           ;eusartparser.c: 666:                     if(cmdMemoryIsEmpty(1,i)==0){
 21422  001E52  C0EF  F02E         	movff	eusartparser@i_7310,cmdMemoryIsEmpty@position
 21423  001E56  0E01               	movlw	1
 21424  001E58  EC2C  F03F         	call	_cmdMemoryIsEmpty
 21425  001E5C  0900               	iorlw	0
 21426  001E5E  A4D8               	btfss	status,2,c
 21427  001E60  D024               	goto	l27597
 21428                           
 21429                           ;eusartparser.c: 667:                         package->data.data16=(uint16_t)i;
 21430  001E62  0100               	movlb	0	; () banked
 21431  001E64  51EF               	movf	eusartparser@i_7310& (0+255),w,b
 21432  001E66  6FE2               	movwf	??_eusartparser& (0+255),b
 21433  001E68  6BE3               	clrf	(??_eusartparser+1)& (0+255),b
 21434  001E6A  EE20 F002          	lfsr	2,2
 21435  001E6E  51E0               	movf	eusartparser@package& (0+255),w,b
 21436  001E70  26D9               	addwf	fsr2l,f,c
 21437  001E72  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21438  001E74  22DA               	addwfc	fsr2h,f,c
 21439  001E76  C0E2  FFDE         	movff	??_eusartparser,postinc2
 21440  001E7A  C0E3  FFDD         	movff	??_eusartparser+1,postdec2
 21441                           
 21442                           ;eusartparser.c: 668:                         package->address=relcounter;
 21443  001E7E  EE20 F001          	lfsr	2,1
 21444  001E82  51E0               	movf	eusartparser@package& (0+255),w,b
 21445  001E84  26D9               	addwf	fsr2l,f,c
 21446  001E86  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21447  001E88  22DA               	addwfc	fsr2h,f,c
 21448  001E8A  C0F7  FFDF         	movff	eusartparser@relcounter,indf2
 21449                           
 21450                           ; BSR set to: 0
 21451                           ;eusartparser.c: 669:                         relcounter++;
 21452  001E8E  2BF7               	incf	eusartparser@relcounter& (0+255),f,b
 21453                           
 21454                           ; BSR set to: 0
 21455                           ;eusartparser.c: 670:                         write_package(*package);
 21456  001E90  C0E0  FFD9         	movff	eusartparser@package,fsr2l
 21457  001E94  C0E1  FFDA         	movff	eusartparser@package+1,fsr2h
 21458  001E98  EE00  F011         	lfsr	0,write_package@package
 21459  001E9C  0E06               	movlw	6
 21460  001E9E                     u33621:
 21461  001E9E  CFDB FFEB          	movff	plusw2,plusw0
 21462  001EA2  06E8               	decf	wreg,f,c
 21463  001EA4  E2FC               	bc	u33621
 21464  001EA6  ECA9  F04A         	call	_write_package	;wreg free
 21465  001EAA                     l27597:
 21466  001EAA  0100               	movlb	0	; () banked
 21467  001EAC  2BEF               	incf	eusartparser@i_7310& (0+255),f,b
 21468  001EAE                     l27599:
 21469                           
 21470                           ; BSR set to: 0
 21471  001EAE  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 21472  001EB0  5DEF               	subwf	eusartparser@i_7310& (0+255),w,b
 21473  001EB2  B0D8               	btfsc	status,0,c
 21474  001EB4  D4F0               	goto	l27311
 21475  001EB6  D7CD               	goto	l27589
 21476  001EB8                     l27605:
 21477                           
 21478                           ; BSR set to: 0
 21479                           ;eusartparser.c: 676:                 relcounter=0;
 21480  001EB8  0E00               	movlw	0
 21481  001EBA  6FF7               	movwf	eusartparser@relcounter& (0+255),b
 21482                           
 21483                           ;eusartparser.c: 677:                 for(uint8_t i=0;i<var_sys_NVM.positionRemotesFull;
      +                          i++)
 21484  001EBC  0E00               	movlw	0
 21485  001EBE  6FF0               	movwf	eusartparser@i_7311& (0+255),b
 21486  001EC0  D02E               	goto	l27617
 21487  001EC2                     l27607:
 21488                           
 21489                           ; BSR set to: 0
 21490                           ;eusartparser.c: 678:                     if(cmdMemoryIsEmpty(1,i)==1){
 21491  001EC2  C0F0  F02E         	movff	eusartparser@i_7311,cmdMemoryIsEmpty@position
 21492  001EC6  0E01               	movlw	1
 21493  001EC8  EC2C  F03F         	call	_cmdMemoryIsEmpty
 21494  001ECC  06E8               	decf	wreg,f,c
 21495  001ECE  A4D8               	btfss	status,2,c
 21496  001ED0  D024               	goto	l27615
 21497                           
 21498                           ;eusartparser.c: 679:                         package->data.data16=(uint16_t)i;
 21499  001ED2  0100               	movlb	0	; () banked
 21500  001ED4  51F0               	movf	eusartparser@i_7311& (0+255),w,b
 21501  001ED6  6FE2               	movwf	??_eusartparser& (0+255),b
 21502  001ED8  6BE3               	clrf	(??_eusartparser+1)& (0+255),b
 21503  001EDA  EE20 F002          	lfsr	2,2
 21504  001EDE  51E0               	movf	eusartparser@package& (0+255),w,b
 21505  001EE0  26D9               	addwf	fsr2l,f,c
 21506  001EE2  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21507  001EE4  22DA               	addwfc	fsr2h,f,c
 21508  001EE6  C0E2  FFDE         	movff	??_eusartparser,postinc2
 21509  001EEA  C0E3  FFDD         	movff	??_eusartparser+1,postdec2
 21510                           
 21511                           ;eusartparser.c: 680:                         package->address=relcounter;
 21512  001EEE  EE20 F001          	lfsr	2,1
 21513  001EF2  51E0               	movf	eusartparser@package& (0+255),w,b
 21514  001EF4  26D9               	addwf	fsr2l,f,c
 21515  001EF6  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21516  001EF8  22DA               	addwfc	fsr2h,f,c
 21517  001EFA  C0F7  FFDF         	movff	eusartparser@relcounter,indf2
 21518                           
 21519                           ; BSR set to: 0
 21520                           ;eusartparser.c: 681:                         relcounter++;
 21521  001EFE  2BF7               	incf	eusartparser@relcounter& (0+255),f,b
 21522                           
 21523                           ; BSR set to: 0
 21524                           ;eusartparser.c: 682:                         write_package(*package);
 21525  001F00  C0E0  FFD9         	movff	eusartparser@package,fsr2l
 21526  001F04  C0E1  FFDA         	movff	eusartparser@package+1,fsr2h
 21527  001F08  EE00  F011         	lfsr	0,write_package@package
 21528  001F0C  0E06               	movlw	6
 21529  001F0E                     u33651:
 21530  001F0E  CFDB FFEB          	movff	plusw2,plusw0
 21531  001F12  06E8               	decf	wreg,f,c
 21532  001F14  E2FC               	bc	u33651
 21533  001F16  ECA9  F04A         	call	_write_package	;wreg free
 21534  001F1A                     l27615:
 21535  001F1A  0100               	movlb	0	; () banked
 21536  001F1C  2BF0               	incf	eusartparser@i_7311& (0+255),f,b
 21537  001F1E                     l27617:
 21538                           
 21539                           ; BSR set to: 0
 21540  001F1E  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 21541  001F20  5DF0               	subwf	eusartparser@i_7311& (0+255),w,b
 21542  001F22  B0D8               	btfsc	status,0,c
 21543  001F24  D4B8               	goto	l27311
 21544  001F26  D7CD               	goto	l27607
 21545  001F28                     l27623:
 21546                           
 21547                           ; BSR set to: 0
 21548                           ;eusartparser.c: 688:                 if(programmer_enable){
 21549  001F28  5185               	movf	_programmer_enable& (0+255),w,b
 21550  001F2A  B4D8               	btfsc	status,2,c
 21551  001F2C  D4DB               	goto	l27323
 21552                           
 21553                           ; BSR set to: 0
 21554                           ;eusartparser.c: 689:                     if(save_f==0){
 21555  001F2E  0101               	movlb	1	; () banked
 21556  001F30  518F               	movf	eusartparser@save_f& (0+255),w,b
 21557  001F32  B4D8               	btfsc	status,2,c
 21558  001F34  D5F0               	goto	u33390
 21559                           
 21560                           ; BSR set to: 1
 21561                           ;eusartparser.c: 696:                         serial=((uint32_t)buffer<<16)+(uint32_t)pa
      +                          ckage->data.data16;
 21562                           
 21563                           ; BSR set to: 1
 21564                           ;eusartparser.c: 690:                         buffer=package->data.data16;
 21565  001F36  0100               	movlb	0	; () banked
 21566  001F38  EE20 F002          	lfsr	2,2
 21567  001F3C  51E0               	movf	eusartparser@package& (0+255),w,b
 21568  001F3E  26D9               	addwf	fsr2l,f,c
 21569  001F40  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21570  001F42  22DA               	addwfc	fsr2h,f,c
 21571  001F44  CFDE F0E2          	movff	postinc2,??_eusartparser
 21572  001F48  CFDD F0E3          	movff	postdec2,??_eusartparser+1
 21573  001F4C  0101               	movlb	1	; () banked
 21574  001F4E  5185               	movf	eusartparser@buffer& (0+255),w,b
 21575  001F50  0100               	movlb	0	; () banked
 21576  001F52  6FE4               	movwf	(??_eusartparser+2)& (0+255),b
 21577  001F54  0101               	movlb	1	; () banked
 21578  001F56  5186               	movf	(eusartparser@buffer+1)& (0+255),w,b
 21579  001F58  0100               	movlb	0	; () banked
 21580  001F5A  6FE5               	movwf	(??_eusartparser+3)& (0+255),b
 21581  001F5C  6BE6               	clrf	(??_eusartparser+4)& (0+255),b
 21582  001F5E  6BE7               	clrf	(??_eusartparser+5)& (0+255),b
 21583  001F60  C0E5  F0E7         	movff	??_eusartparser+3,??_eusartparser+5
 21584  001F64  C0E4  F0E6         	movff	??_eusartparser+2,??_eusartparser+4
 21585  001F68  6BE5               	clrf	(??_eusartparser+3)& (0+255),b
 21586  001F6A  6BE4               	clrf	(??_eusartparser+2)& (0+255),b
 21587  001F6C  51E2               	movf	??_eusartparser& (0+255),w,b
 21588  001F6E  25E4               	addwf	(??_eusartparser+2)& (0+255),w,b
 21589  001F70  6FF8               	movwf	eusartparser@serial& (0+255),b
 21590  001F72  51E3               	movf	(??_eusartparser+1)& (0+255),w,b
 21591  001F74  21E5               	addwfc	(??_eusartparser+3)& (0+255),w,b
 21592  001F76  6FF9               	movwf	(eusartparser@serial+1)& (0+255),b
 21593  001F78  0E00               	movlw	0
 21594  001F7A  21E6               	addwfc	(??_eusartparser+4)& (0+255),w,b
 21595  001F7C  6FFA               	movwf	(eusartparser@serial+2)& (0+255),b
 21596  001F7E  0E00               	movlw	0
 21597  001F80  21E7               	addwfc	(??_eusartparser+5)& (0+255),w,b
 21598  001F82  6FFB               	movwf	(eusartparser@serial+3)& (0+255),b
 21599                           
 21600                           ; BSR set to: 0
 21601                           ;eusartparser.c: 697:                         if(validateRemoteSerialNumber(serial, NO, 
      +                          &pos)==NoCMD){
 21602  001F84  C0F8  F02E         	movff	eusartparser@serial,validateRemoteSerialNumber@serial
 21603  001F88  C0F9  F02F         	movff	eusartparser@serial+1,validateRemoteSerialNumber@serial+1
 21604  001F8C  C0FA  F030         	movff	eusartparser@serial+2,validateRemoteSerialNumber@serial+2
 21605  001F90  C0FB  F031         	movff	eusartparser@serial+3,validateRemoteSerialNumber@serial+3
 21606  001F94  0E00               	movlw	0
 21607  001F96  6E32               	movwf	validateRemoteSerialNumber@VerifyOnlySerial^0,c
 21608  001F98  0EEC               	movlw	low eusartparser@pos
 21609  001F9A  6E33               	movwf	validateRemoteSerialNumber@position^0,c
 21610  001F9C  6A34               	clrf	(validateRemoteSerialNumber@position+1)^0,c
 21611  001F9E  EC5A  F02F         	call	_validateRemoteSerialNumber	;wreg free
 21612  001FA2  0900               	iorlw	0
 21613  001FA4  A4D8               	btfss	status,2,c
 21614  001FA6  D661               	goto	u33460
 21615                           
 21616                           ; BSR set to: 0
 21617                           ;eusartparser.c: 698:                             for(uint8_t i=0;;i++)
 21618  001FA8  0E00               	movlw	0
 21619  001FAA  6FF4               	movwf	eusartparser@i_7312& (0+255),b
 21620  001FAC                     l27641:
 21621                           
 21622                           ; BSR set to: 0
 21623                           ;eusartparser.c: 699:                                 if(cmdMemoryIsEmpty(1,i)==1&&packa
      +                          ge->address==0){
 21624  001FAC  C0F4  F02E         	movff	eusartparser@i_7312,cmdMemoryIsEmpty@position
 21625  001FB0  0E01               	movlw	1
 21626  001FB2  EC2C  F03F         	call	_cmdMemoryIsEmpty
 21627  001FB6  06E8               	decf	wreg,f,c
 21628  001FB8  A4D8               	btfss	status,2,c
 21629  001FBA  D018               	goto	l27653
 21630  001FBC  0100               	movlb	0	; () banked
 21631  001FBE  EE20 F001          	lfsr	2,1
 21632  001FC2  51E0               	movf	eusartparser@package& (0+255),w,b
 21633  001FC4  26D9               	addwf	fsr2l,f,c
 21634  001FC6  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21635  001FC8  22DA               	addwfc	fsr2h,f,c
 21636  001FCA  50DF               	movf	indf2,w,c
 21637  001FCC  A4D8               	btfss	status,2,c
 21638  001FCE  D00E               	goto	l27653
 21639                           
 21640                           ; BSR set to: 0
 21641                           ;eusartparser.c: 700:                                     saveNewSerial(1,serial,i);
 21642  001FD0  C0F8  F0D8         	movff	eusartparser@serial,saveNewSerial@tempSerial
 21643  001FD4  C0F9  F0D9         	movff	eusartparser@serial+1,saveNewSerial@tempSerial+1
 21644  001FD8  C0FA  F0DA         	movff	eusartparser@serial+2,saveNewSerial@tempSerial+2
 21645  001FDC  C0FB  F0DB         	movff	eusartparser@serial+3,saveNewSerial@tempSerial+3
 21646  001FE0  C0F4  F0DC         	movff	eusartparser@i_7312,saveNewSerial@position
 21647  001FE4  0E01               	movlw	1
 21648  001FE6  ECFA  F043         	call	_saveNewSerial
 21649  001FEA  D613               	goto	l27453
 21650  001FEC                     l27653:
 21651  001FEC  C0F4  F02E         	movff	eusartparser@i_7312,cmdMemoryIsEmpty@position
 21652  001FF0  0E01               	movlw	1
 21653  001FF2  EC2C  F03F         	call	_cmdMemoryIsEmpty
 21654  001FF6  06E8               	decf	wreg,f,c
 21655  001FF8  A4D8               	btfss	status,2,c
 21656  001FFA  D009               	goto	l27657
 21657                           
 21658                           ;eusartparser.c: 706:                                     package->address--;
 21659  001FFC  0100               	movlb	0	; () banked
 21660  001FFE  EE20 F001          	lfsr	2,1
 21661  002002  51E0               	movf	eusartparser@package& (0+255),w,b
 21662  002004  26D9               	addwf	fsr2l,f,c
 21663  002006  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21664  002008  22DA               	addwfc	fsr2h,f,c
 21665  00200A  06DF               	decf	indf2,f,c
 21666                           
 21667                           ;eusartparser.c: 707:                                 }
 21668  00200C  D005               	goto	l27663
 21669  00200E                     l27657:
 21670  00200E  0100               	movlb	0	; () banked
 21671  002010  51F4               	movf	eusartparser@i_7312& (0+255),w,b
 21672  002012  19B8               	xorwf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 21673  002014  B4D8               	btfsc	status,2,c
 21674  002016  D629               	goto	u33460
 21675  002018                     l27663:
 21676                           
 21677                           ; BSR set to: 0
 21678  002018  2BF4               	incf	eusartparser@i_7312& (0+255),f,b
 21679  00201A  D7C8               	goto	l27641
 21680  00201C                     l27675:
 21681                           
 21682                           ; BSR set to: 0
 21683                           ;eusartparser.c: 727:                 if(programmer_enable){
 21684  00201C  5185               	movf	_programmer_enable& (0+255),w,b
 21685  00201E  B4D8               	btfsc	status,2,c
 21686  002020  D461               	goto	l27323
 21687                           
 21688                           ; BSR set to: 0
 21689                           ;eusartparser.c: 728:                     for(uint8_t i=0;;i++)
 21690  002022  0E00               	movlw	0
 21691  002024  6FF5               	movwf	eusartparser@i_7313& (0+255),b
 21692  002026                     l27679:
 21693                           
 21694                           ; BSR set to: 0
 21695                           ;eusartparser.c: 729:                         if(cmdMemoryIsEmpty(1,i)==0&&package->addr
      +                          ess==0){
 21696  002026  C0F5  F02E         	movff	eusartparser@i_7313,cmdMemoryIsEmpty@position
 21697  00202A  0E01               	movlw	1
 21698  00202C  EC2C  F03F         	call	_cmdMemoryIsEmpty
 21699  002030  0900               	iorlw	0
 21700  002032  A4D8               	btfss	status,2,c
 21701  002034  D010               	goto	l27693
 21702  002036  0100               	movlb	0	; () banked
 21703  002038  EE20 F001          	lfsr	2,1
 21704  00203C  51E0               	movf	eusartparser@package& (0+255),w,b
 21705  00203E  26D9               	addwf	fsr2l,f,c
 21706  002040  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21707  002042  22DA               	addwfc	fsr2h,f,c
 21708  002044  50DF               	movf	indf2,w,c
 21709  002046  A4D8               	btfss	status,2,c
 21710  002048  D006               	goto	l27693
 21711                           
 21712                           ; BSR set to: 0
 21713                           ;eusartparser.c: 730:                             RemoveSerial(1, i);
 21714  00204A  C0F5  F03A         	movff	eusartparser@i_7313,RemoveSerial@position
 21715  00204E  0E01               	movlw	1
 21716  002050  ECDB  F041         	call	_RemoveSerial
 21717  002054  D5DE               	goto	l27453
 21718  002056                     l27693:
 21719  002056  C0F5  F02E         	movff	eusartparser@i_7313,cmdMemoryIsEmpty@position
 21720  00205A  0E01               	movlw	1
 21721  00205C  EC2C  F03F         	call	_cmdMemoryIsEmpty
 21722  002060  0900               	iorlw	0
 21723  002062  A4D8               	btfss	status,2,c
 21724  002064  D009               	goto	l27697
 21725                           
 21726                           ;eusartparser.c: 737:                             package->address--;
 21727  002066  0100               	movlb	0	; () banked
 21728  002068  EE20 F001          	lfsr	2,1
 21729  00206C  51E0               	movf	eusartparser@package& (0+255),w,b
 21730  00206E  26D9               	addwf	fsr2l,f,c
 21731  002070  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21732  002072  22DA               	addwfc	fsr2h,f,c
 21733  002074  06DF               	decf	indf2,f,c
 21734                           
 21735                           ;eusartparser.c: 738:                         }
 21736  002076  D005               	goto	l27705
 21737  002078                     l27697:
 21738  002078  0100               	movlb	0	; () banked
 21739  00207A  51F5               	movf	eusartparser@i_7313& (0+255),w,b
 21740  00207C  19B8               	xorwf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 21741  00207E  B4D8               	btfsc	status,2,c
 21742  002080  D5F4               	goto	u33460
 21743  002082                     l27705:
 21744                           
 21745                           ; BSR set to: 0
 21746  002082  2BF5               	incf	eusartparser@i_7313& (0+255),f,b
 21747  002084  D7D0               	goto	l27679
 21748  002086                     l27711:
 21749                           
 21750                           ; BSR set to: 0
 21751                           ;eusartparser.c: 752:                 for(uint8_t i=0;;i++)
 21752  002086  0E00               	movlw	0
 21753  002088  6FF6               	movwf	eusartparser@i_7314& (0+255),b
 21754  00208A                     l27713:
 21755                           
 21756                           ; BSR set to: 0
 21757                           ;eusartparser.c: 753:                     if(cmdMemoryIsEmpty(1,i)==0&&package->address=
      +                          =0){
 21758  00208A  C0F6  F02E         	movff	eusartparser@i_7314,cmdMemoryIsEmpty@position
 21759  00208E  0E01               	movlw	1
 21760  002090  EC2C  F03F         	call	_cmdMemoryIsEmpty
 21761  002094  0900               	iorlw	0
 21762  002096  A4D8               	btfss	status,2,c
 21763  002098  D035               	goto	l27733
 21764  00209A  0100               	movlb	0	; () banked
 21765  00209C  EE20 F001          	lfsr	2,1
 21766  0020A0  51E0               	movf	eusartparser@package& (0+255),w,b
 21767  0020A2  26D9               	addwf	fsr2l,f,c
 21768  0020A4  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21769  0020A6  22DA               	addwfc	fsr2h,f,c
 21770  0020A8  50DF               	movf	indf2,w,c
 21771  0020AA  A4D8               	btfss	status,2,c
 21772  0020AC  D02B               	goto	l27733
 21773                           
 21774                           ; BSR set to: 0
 21775                           ;eusartparser.c: 754:                         ReadSerial(1, &serial, i);
 21776  0020AE  0EF8               	movlw	low eusartparser@serial
 21777  0020B0  6E2E               	movwf	ReadSerial@tempSerial^0,c
 21778  0020B2  C0F6  F02F         	movff	eusartparser@i_7314,ReadSerial@position
 21779  0020B6  0E01               	movlw	1
 21780  0020B8  EC32  F044         	call	_ReadSerial
 21781                           
 21782                           ;eusartparser.c: 755:                         package->data.data16=(uint16_t)serial;
 21783  0020BC  0100               	movlb	0	; () banked
 21784  0020BE  EE20 F002          	lfsr	2,2
 21785  0020C2  51E0               	movf	eusartparser@package& (0+255),w,b
 21786  0020C4  26D9               	addwf	fsr2l,f,c
 21787  0020C6  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21788  0020C8  22DA               	addwfc	fsr2h,f,c
 21789  0020CA  C0F8  FFDE         	movff	eusartparser@serial,postinc2
 21790  0020CE  C0F9  FFDD         	movff	eusartparser@serial+1,postdec2
 21791                           
 21792                           ; BSR set to: 0
 21793                           ;eusartparser.c: 756:                         write_package(*package);
 21794  0020D2  C0E0  FFD9         	movff	eusartparser@package,fsr2l
 21795  0020D6  C0E1  FFDA         	movff	eusartparser@package+1,fsr2h
 21796  0020DA  EE00  F011         	lfsr	0,write_package@package
 21797  0020DE  0E06               	movlw	6
 21798  0020E0                     u33811:
 21799  0020E0  CFDB FFEB          	movff	plusw2,plusw0
 21800  0020E4  06E8               	decf	wreg,f,c
 21801  0020E6  E2FC               	bc	u33811
 21802  0020E8  ECA9  F04A         	call	_write_package	;wreg free
 21803  0020EC                     l27723:
 21804                           
 21805                           ;eusartparser.c: 757:                         package->data.data16=(uint16_t)(serial>>16
      +                          );
 21806  0020EC  0100               	movlb	0	; () banked
 21807  0020EE  EE20 F002          	lfsr	2,2
 21808  0020F2  51E0               	movf	eusartparser@package& (0+255),w,b
 21809  0020F4  26D9               	addwf	fsr2l,f,c
 21810  0020F6  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21811  0020F8  22DA               	addwfc	fsr2h,f,c
 21812  0020FA  C0FA  FFDE         	movff	eusartparser@serial+2,postinc2
 21813  0020FE  C0FB  FFDD         	movff	eusartparser@serial+3,postdec2
 21814  002102  D417               	goto	l27339
 21815  002104                     l27733:
 21816  002104  C0F6  F02E         	movff	eusartparser@i_7314,cmdMemoryIsEmpty@position
 21817  002108  0E01               	movlw	1
 21818  00210A  EC2C  F03F         	call	_cmdMemoryIsEmpty
 21819  00210E  0900               	iorlw	0
 21820  002110  A4D8               	btfss	status,2,c
 21821  002112  D009               	goto	l27737
 21822                           
 21823                           ;eusartparser.c: 764:                         package->address--;
 21824  002114  0100               	movlb	0	; () banked
 21825  002116  EE20 F001          	lfsr	2,1
 21826  00211A  51E0               	movf	eusartparser@package& (0+255),w,b
 21827  00211C  26D9               	addwf	fsr2l,f,c
 21828  00211E  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21829  002120  22DA               	addwfc	fsr2h,f,c
 21830  002122  06DF               	decf	indf2,f,c
 21831                           
 21832                           ;eusartparser.c: 765:                     }
 21833  002124  D006               	goto	l27743
 21834  002126                     l27737:
 21835  002126  0100               	movlb	0	; () banked
 21836  002128  51F6               	movf	eusartparser@i_7314& (0+255),w,b
 21837  00212A  19B8               	xorwf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 21838  00212C  B4D8               	btfsc	status,2,c
 21839  00212E  EF72  F00C         	goto	l27323
 21840  002132                     l27743:
 21841                           
 21842                           ; BSR set to: 0
 21843  002132  2BF6               	incf	eusartparser@i_7314& (0+255),f,b
 21844  002134  D7AA               	goto	l27713
 21845  002136                     l27749:
 21846                           
 21847                           ; BSR set to: 0
 21848  002136  C0E0  FFD9         	movff	eusartparser@package,fsr2l
 21849  00213A  C0E1  FFDA         	movff	eusartparser@package+1,fsr2h
 21850  00213E  50DF               	movf	indf2,w,c
 21851  002140  6FE2               	movwf	??_eusartparser& (0+255),b
 21852  002142  6BE3               	clrf	(??_eusartparser+1)& (0+255),b
 21853                           
 21854                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21855                           ; Switch size 1, requested type "simple"
 21856                           ; Number of cases is 1, Range of values is 0 to 0
 21857                           ; switch strategies available:
 21858                           ; Name         Instructions Cycles
 21859                           ; simple_byte            4     3 (average)
 21860                           ;	Chosen strategy is simple_byte
 21861  002144  51E3               	movf	(??_eusartparser+1)& (0+255),w,b
 21862  002146  0A00               	xorlw	0	; case 0
 21863  002148  A4D8               	btfss	status,2,c
 21864  00214A  EF72  F00C         	goto	l27323
 21865                           
 21866                           ; BSR set to: 0
 21867                           ; Switch size 1, requested type "simple"
 21868                           ; Number of cases is 18, Range of values is 0 to 17
 21869                           ; switch strategies available:
 21870                           ; Name         Instructions Cycles
 21871                           ; simple_byte           55    28 (average)
 21872                           ;	Chosen strategy is simple_byte
 21873  00214E  51E2               	movf	??_eusartparser& (0+255),w,b
 21874  002150  0A00               	xorlw	0	; case 0
 21875  002152  B4D8               	btfsc	status,2,c
 21876  002154  EF45  F00C         	goto	l27309
 21877  002158  0A01               	xorlw	1	; case 1
 21878  00215A  B4D8               	btfsc	status,2,c
 21879  00215C  EF61  F00C         	goto	l27315
 21880  002160  0A03               	xorlw	3	; case 2
 21881  002162  B4D8               	btfsc	status,2,c
 21882  002164  EF7B  F00C         	goto	l27327
 21883  002168  0A01               	xorlw	1	; case 3
 21884  00216A  B4D8               	btfsc	status,2,c
 21885  00216C  EF4B  F00C         	goto	l27311
 21886  002170  0A07               	xorlw	7	; case 4
 21887  002172  B4D8               	btfsc	status,2,c
 21888  002174  EFB5  F00C         	goto	l27357
 21889  002178  0A01               	xorlw	1	; case 5
 21890  00217A  B4D8               	btfsc	status,2,c
 21891  00217C  D427               	goto	l27375
 21892  00217E  0A03               	xorlw	3	; case 6
 21893  002180  B4D8               	btfsc	status,2,c
 21894  002182  D452               	goto	l27393
 21895  002184  0A01               	xorlw	1	; case 7
 21896  002186  B4D8               	btfsc	status,2,c
 21897  002188  D487               	goto	l27411
 21898  00218A  0A0F               	xorlw	15	; case 8
 21899  00218C  B4D8               	btfsc	status,2,c
 21900  00218E  D4BC               	goto	l27429
 21901  002190  0A01               	xorlw	1	; case 9
 21902  002192  B4D8               	btfsc	status,2,c
 21903  002194  D579               	goto	l27481
 21904  002196  0A03               	xorlw	3	; case 10
 21905  002198  B4D8               	btfsc	status,2,c
 21906  00219A  D5AB               	goto	l27517
 21907  00219C  0A01               	xorlw	1	; case 11
 21908  00219E  B4D8               	btfsc	status,2,c
 21909  0021A0  D5F4               	goto	l27551
 21910  0021A2  0A07               	xorlw	7	; case 12
 21911  0021A4  B4D8               	btfsc	status,2,c
 21912  0021A6  D622               	goto	l27569
 21913  0021A8  0A01               	xorlw	1	; case 13
 21914  0021AA  B4D8               	btfsc	status,2,c
 21915  0021AC  D64D               	goto	l27587
 21916  0021AE  0A03               	xorlw	3	; case 14
 21917  0021B0  B4D8               	btfsc	status,2,c
 21918  0021B2  D682               	goto	l27605
 21919  0021B4  0A01               	xorlw	1	; case 15
 21920  0021B6  B4D8               	btfsc	status,2,c
 21921  0021B8  D6B7               	goto	l27623
 21922  0021BA  0A1F               	xorlw	31	; case 16
 21923  0021BC  B4D8               	btfsc	status,2,c
 21924  0021BE  D72E               	goto	l27675
 21925  0021C0  0A01               	xorlw	1	; case 17
 21926  0021C2  B4D8               	btfsc	status,2,c
 21927  0021C4  D760               	goto	l27711
 21928  0021C6  EF72  F00C         	goto	l27323
 21929  0021CA                     __end_of_eusartparser:
 21930                           	callstack 0
 21931                           
 21932 ;; *************** function _write_eusartparser *****************
 21933 ;; Defined at:
 21934 ;;		line 248 in file "eusartparser.c"
 21935 ;; Parameters:    Size  Location     Type
 21936 ;;  package         7   15[COMRAM] struct package_t
 21937 ;; Auto vars:     Size  Location     Type
 21938 ;;  debug2          2   32[COMRAM] volatile int 
 21939 ;;  debug           2   30[COMRAM] volatile int 
 21940 ;; Return value:  Size  Location     Type
 21941 ;;                  1    wreg      void 
 21942 ;; Registers used:
 21943 ;;		wreg, status,2, status,0
 21944 ;; Tracked objects:
 21945 ;;		On entry : 3F/0
 21946 ;;		On exit  : 3F/0
 21947 ;;		Unchanged: 0/0
 21948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21949 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21950 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21951 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21952 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21953 ;;Total ram usage:       19 bytes
 21954 ;; Hardware stack levels used: 1
 21955 ;; Hardware stack levels required when called: 4
 21956 ;; This function calls:
 21957 ;;		Nothing
 21958 ;; This function is called by:
 21959 ;;		_eusartparser
 21960 ;; This function uses a non-reentrant model
 21961 ;;
 21962                           
 21963                           	psect	text75
 21964  003864                     __ptext75:
 21965                           	callstack 0
 21966  003864                     _write_eusartparser:
 21967                           	callstack 25
 21968                           
 21969                           ; BSR set to: 0
 21970                           ;eusartparser.c: 249:         volatile int debug=(uint8_t)package.address;
 21971                           
 21972                           ;incstack = 0
 21973  003864  C011  F01F         	movff	write_eusartparser@package+1,write_eusartparser@debug	;volatile
 21974  003868  6A20               	clrf	(write_eusartparser@debug+1)^0,c	;volatile
 21975                           
 21976                           ; BSR set to: 0
 21977                           ;eusartparser.c: 250:         volatile int debug2=0x10;
 21978  00386A  0E00               	movlw	0
 21979  00386C  6E22               	movwf	(write_eusartparser@debug2+1)^0,c	;volatile
 21980  00386E  0E10               	movlw	16
 21981  003870  6E21               	movwf	write_eusartparser@debug2^0,c	;volatile
 21982                           
 21983                           ;eusartparser.c: 251:         switch((uint8_t)package.address){
 21984  003872  D180               	goto	l24371
 21985  003874                     l3604:
 21986                           
 21987                           ; BSR set to: 0
 21988                           ;eusartparser.c: 256:                 var_sys_NVM.decelarationOpen=package.data.data8[0]
      +                          ;
 21989  003874  C012  F098         	movff	write_eusartparser@package+2,_var_sys_NVM	;volatile
 21990                           
 21991                           ;eusartparser.c: 257:                 var_sys_NVM.decelarationClose=package.data.data8[1
      +                          ];
 21992  003878  C013  F099         	movff	write_eusartparser@package+3,_var_sys_NVM+1	;volatile
 21993                           
 21994                           ;eusartparser.c: 258:                 break;
 21995  00387C  0012               	return	
 21996  00387E                     l3606:
 21997                           
 21998                           ; BSR set to: 0
 21999                           ;eusartparser.c: 262:                 var_sys_NVM.motorPower=package.data.data8[0];
 22000  00387E  C012  F09A         	movff	write_eusartparser@package+2,_var_sys_NVM+2	;volatile
 22001                           
 22002                           ;eusartparser.c: 263:                 var_sys_NVM.motorSensitivity=package.data.data8[1]
      +                          ;
 22003  003882  C013  F09B         	movff	write_eusartparser@package+3,_var_sys_NVM+3	;volatile
 22004                           
 22005                           ;eusartparser.c: 264:                 break;
 22006  003886  0012               	return	
 22007  003888                     l3607:
 22008                           
 22009                           ; BSR set to: 0
 22010                           ;eusartparser.c: 268:                 var_sys_NVM.walkTime=package.data.data8[1];
 22011  003888  C013  F09C         	movff	write_eusartparser@package+3,_var_sys_NVM+4	;volatile
 22012                           
 22013                           ;eusartparser.c: 269:                 break;
 22014  00388C  0012               	return	
 22015  00388E                     l3609:
 22016                           
 22017                           ; BSR set to: 0
 22018                           ;eusartparser.c: 274:                 var_sys_NVM.autoTimeFullClose=package.data.data8[0
      +                          ];
 22019  00388E  C012  F09D         	movff	write_eusartparser@package+2,_var_sys_NVM+5	;volatile
 22020                           
 22021                           ;eusartparser.c: 275:                 var_sys_NVM.autoTimeWalkClose=package.data.data8[1
      +                          ];
 22022  003892  C013  F09E         	movff	write_eusartparser@package+3,_var_sys_NVM+6	;volatile
 22023                           
 22024                           ;eusartparser.c: 276:                 break;
 22025  003896  0012               	return	
 22026  003898                     l3611:
 22027                           
 22028                           ; BSR set to: 0
 22029                           ;eusartparser.c: 281:                 var_sys_NVM.photoCellIsON=package.data.data8[0];
 22030  003898  C012  F09F         	movff	write_eusartparser@package+2,_var_sys_NVM+7	;volatile
 22031                           
 22032                           ;eusartparser.c: 282:                 var_sys_NVM.photoCellInOpen=package.data.data8[1];
 22033  00389C  C013  F0A0         	movff	write_eusartparser@package+3,_var_sys_NVM+8	;volatile
 22034                           
 22035                           ;eusartparser.c: 283:                 break;
 22036  0038A0  0012               	return	
 22037  0038A2                     l3612:
 22038                           
 22039                           ; BSR set to: 0
 22040                           ;eusartparser.c: 287:                 var_sys_NVM.securityBandIsON=package.data.data8[0]
      +                          ;
 22041  0038A2  C012  F0A1         	movff	write_eusartparser@package+2,_var_sys_NVM+9	;volatile
 22042                           
 22043                           ;eusartparser.c: 288:                 var_sys_NVM.securityBandType=package.data.data8[1]
      +                          ;
 22044  0038A6  C013  F0A2         	movff	write_eusartparser@package+3,_var_sys_NVM+10	;volatile
 22045                           
 22046                           ;eusartparser.c: 289:                 break;
 22047  0038AA  0012               	return	
 22048  0038AC                     l3613:
 22049                           
 22050                           ; BSR set to: 0
 22051                           ;eusartparser.c: 293:                 var_sys_NVM.securityBandInOpen=package.data.data8[
      +                          1];
 22052  0038AC  C013  F0A3         	movff	write_eusartparser@package+3,_var_sys_NVM+11	;volatile
 22053                           
 22054                           ;eusartparser.c: 294:                 break;
 22055  0038B0  0012               	return	
 22056  0038B2                     l3614:
 22057                           
 22058                           ; BSR set to: 0
 22059                           ;eusartparser.c: 298:                 var_sys_NVM.operationMode=package.data.data8[1];
 22060  0038B2  C013  F0A4         	movff	write_eusartparser@package+3,_var_sys_NVM+12	;volatile
 22061                           
 22062                           ;eusartparser.c: 299:                 break;
 22063  0038B6  0012               	return	
 22064  0038B8                     l3615:
 22065                           
 22066                           ; BSR set to: 0
 22067                           ;eusartparser.c: 303:                 var_sys_NVM.flashLightMode=package.data.data8[1];
 22068  0038B8  C013  F0A5         	movff	write_eusartparser@package+3,_var_sys_NVM+13	;volatile
 22069                           
 22070                           ;eusartparser.c: 304:                 break;
 22071  0038BC  0012               	return	
 22072  0038BE                     l3616:
 22073                           
 22074                           ; BSR set to: 0
 22075                           ;eusartparser.c: 308:                 var_sys_NVM.programmingDistance=package.data.data8
      +                          [1];
 22076  0038BE  C013  F0A6         	movff	write_eusartparser@package+3,_var_sys_NVM+14	;volatile
 22077                           
 22078                           ;eusartparser.c: 309:                 break;
 22079  0038C2  0012               	return	
 22080  0038C4                     l3617:
 22081                           
 22082                           ; BSR set to: 0
 22083                           ;eusartparser.c: 313:                 var_sys_NVM.decelarationSensivity=package.data.dat
      +                          a8[1];
 22084  0038C4  C013  F0A7         	movff	write_eusartparser@package+3,_var_sys_NVM+15	;volatile
 22085                           
 22086                           ;eusartparser.c: 314:                 break;
 22087  0038C8  0012               	return	
 22088  0038CA                     l3618:
 22089                           
 22090                           ; BSR set to: 0
 22091                           ;eusartparser.c: 319:                 var_sys_NVM.homemPresente=package.data.data8[1];
 22092  0038CA  C013  F0A8         	movff	write_eusartparser@package+3,_var_sys_NVM+16	;volatile
 22093                           
 22094                           ;eusartparser.c: 320:                 break;
 22095  0038CE  0012               	return	
 22096  0038D0                     l3620:
 22097                           
 22098                           ; BSR set to: 0
 22099                           ;eusartparser.c: 325:                 var_sys_NVM.logicDigital=package.data.data8[1];
 22100  0038D0  C013  F0A9         	movff	write_eusartparser@package+3,_var_sys_NVM+17	;volatile
 22101                           
 22102                           ;eusartparser.c: 326:                 break;
 22103  0038D4  0012               	return	
 22104  0038D6                     l3621:
 22105                           
 22106                           ; BSR set to: 0
 22107                           ;eusartparser.c: 330:                 var_sys_NVM.softStart=package.data.data8[0];
 22108  0038D6  C012  F0AA         	movff	write_eusartparser@package+2,_var_sys_NVM+18	;volatile
 22109                           
 22110                           ;eusartparser.c: 331:                 var_sys_NVM.softstop=package.data.data8[1];
 22111  0038DA  C013  F0AB         	movff	write_eusartparser@package+3,_var_sys_NVM+19	;volatile
 22112                           
 22113                           ;eusartparser.c: 332:                 break;
 22114  0038DE  0012               	return	
 22115  0038E0                     l3623:
 22116                           
 22117                           ; BSR set to: 0
 22118                           ;eusartparser.c: 337:                 var_sys_NVM.ligthTime=package.data.data8[1];
 22119  0038E0  C013  F0AC         	movff	write_eusartparser@package+3,_var_sys_NVM+20	;volatile
 22120                           
 22121                           ;eusartparser.c: 338:                 break;
 22122  0038E4  0012               	return	
 22123  0038E6                     l3625:
 22124                           
 22125                           ; BSR set to: 0
 22126                           ;eusartparser.c: 343:                 var_sys_NVM.folow_me=package.data.data8[1];
 22127  0038E6  C013  F0AD         	movff	write_eusartparser@package+3,_var_sys_NVM+21	;volatile
 22128                           
 22129                           ;eusartparser.c: 344:                 break;
 22130  0038EA  0012               	return	
 22131  0038EC                     l3626:
 22132                           
 22133                           ; BSR set to: 0
 22134                           ;eusartparser.c: 348:                 var_sys_NVM.Stopboton=package.data.data8[1];
 22135  0038EC  C013  F0AE         	movff	write_eusartparser@package+3,_var_sys_NVM+22	;volatile
 22136                           
 22137                           ;eusartparser.c: 349:                 break;
 22138  0038F0  0012               	return	
 22139  0038F2                     l3627:
 22140                           
 22141                           ; BSR set to: 0
 22142                           ;eusartparser.c: 353:                 var_sys_NVM.electricBrake=package.data.data8[1];
 22143  0038F2  C013  F0AF         	movff	write_eusartparser@package+3,_var_sys_NVM+23	;volatile
 22144                           
 22145                           ;eusartparser.c: 354:                 break;
 22146  0038F6  0012               	return	
 22147  0038F8                     l3628:
 22148                           
 22149                           ; BSR set to: 0
 22150                           ;eusartparser.c: 358:                 var_sys_NVM.velocityDecelaration=package.data.data
      +                          8[1];
 22151  0038F8  C013  F0B0         	movff	write_eusartparser@package+3,_var_sys_NVM+24	;volatile
 22152                           
 22153                           ;eusartparser.c: 359:                 break;
 22154  0038FC  0012               	return	
 22155  0038FE                     l3630:
 22156                           
 22157                           ; BSR set to: 0
 22158                           ;eusartparser.c: 364:                 var_sys_NVM.flashRGBMode=package.data.data8[1];
 22159  0038FE  C013  F0B1         	movff	write_eusartparser@package+3,_var_sys_NVM+25	;volatile
 22160                           
 22161                           ;eusartparser.c: 365:                 break;
 22162  003902  0012               	return	
 22163  003904                     l3631:
 22164                           
 22165                           ; BSR set to: 0
 22166                           ;eusartparser.c: 369:                 var_sys_NVM.Direction_motor=package.data.data8[1];
 22167  003904  C013  F0B3         	movff	write_eusartparser@package+3,_var_sys_NVM+27	;volatile
 22168                           
 22169                           ;eusartparser.c: 370:                 break;
 22170  003908  0012               	return	
 22171  00390A                     l3632:
 22172                           
 22173                           ; BSR set to: 0
 22174                           ;eusartparser.c: 374:                 var_sys_NVM.TypeofMotor=package.data.data8[1];
 22175  00390A  C013  F0B4         	movff	write_eusartparser@package+3,_var_sys_NVM+28	;volatile
 22176                           
 22177                           ;eusartparser.c: 375:                 break;
 22178  00390E  0012               	return	
 22179  003910                     l3633:
 22180                           
 22181                           ; BSR set to: 0
 22182                           ;eusartparser.c: 379:                 var_sys_NVM.positionRemotesFull=package.data.data8
      +                          [0];
 22183  003910  C012  F0B8         	movff	write_eusartparser@package+2,_var_sys_NVM+32	;volatile
 22184                           
 22185                           ;eusartparser.c: 380:                 var_sys_NVM.positionRemotesWalk=package.data.data8
      +                          [1];
 22186  003914  C013  F0B9         	movff	write_eusartparser@package+3,_var_sys_NVM+33	;volatile
 22187                           
 22188                           ;eusartparser.c: 381:                 break;
 22189  003918  0012               	return	
 22190  00391A                     l24349:
 22191                           
 22192                           ; BSR set to: 0
 22193                           ;eusartparser.c: 384:                 var_sys_NVM.counterMoves=var_sys_NVM.counterMoves|
      +                          ((uint32_t)(package.data.data16&0xFFFF)<<(uint8_t)(1*16));
 22194  00391A  5012               	movf	(write_eusartparser@package+2)^0,w,c
 22195  00391C  6E17               	movwf	??_write_eusartparser^0,c
 22196  00391E  5013               	movf	(write_eusartparser@package+3)^0,w,c
 22197  003920  6E18               	movwf	(??_write_eusartparser+1)^0,c
 22198  003922  6A19               	clrf	(??_write_eusartparser+2)^0,c
 22199  003924  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 22200  003926  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 22201  00392A  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 22202  00392E  6A18               	clrf	(??_write_eusartparser+1)^0,c
 22203  003930  6A17               	clrf	??_write_eusartparser^0,c
 22204  003932  51BA               	movf	(_var_sys_NVM+34)& (0+255),w,b	;volatile
 22205  003934  1017               	iorwf	??_write_eusartparser^0,w,c
 22206  003936  6FBA               	movwf	(_var_sys_NVM+34)& (0+255),b	;volatile
 22207  003938  51BB               	movf	(_var_sys_NVM+35)& (0+255),w,b	;volatile
 22208  00393A  1018               	iorwf	(??_write_eusartparser+1)^0,w,c
 22209  00393C  6FBB               	movwf	(_var_sys_NVM+35)& (0+255),b	;volatile
 22210  00393E  51BC               	movf	(_var_sys_NVM+36)& (0+255),w,b	;volatile
 22211  003940  1019               	iorwf	(??_write_eusartparser+2)^0,w,c
 22212  003942  6FBC               	movwf	(_var_sys_NVM+36)& (0+255),b	;volatile
 22213  003944  51BD               	movf	(_var_sys_NVM+37)& (0+255),w,b	;volatile
 22214  003946  101A               	iorwf	(??_write_eusartparser+3)^0,w,c
 22215  003948  6FBD               	movwf	(_var_sys_NVM+37)& (0+255),b	;volatile
 22216                           
 22217                           ;eusartparser.c: 385:                 var_sys_NVM.counterMoves=var_sys_NVM.counterMoves&
      +                          ~((uint32_t)(~package.data.data16&0xFFFF)<<(uint8_t)(1*16));
 22218  00394A  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 22219  00394C  6E17               	movwf	??_write_eusartparser^0,c
 22220  00394E  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 22221  003950  6E18               	movwf	(??_write_eusartparser+1)^0,c
 22222  003952  6A19               	clrf	(??_write_eusartparser+2)^0,c
 22223  003954  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 22224  003956  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 22225  00395A  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 22226  00395E  6A18               	clrf	(??_write_eusartparser+1)^0,c
 22227  003960  6A17               	clrf	??_write_eusartparser^0,c
 22228  003962  1C17               	comf	??_write_eusartparser^0,w,c
 22229  003964  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 22230  003966  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 22231  003968  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 22232  00396A  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 22233  00396C  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 22234  00396E  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 22235  003970  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 22236  003972  51BA               	movf	(_var_sys_NVM+34)& (0+255),w,b	;volatile
 22237  003974  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 22238  003976  6FBA               	movwf	(_var_sys_NVM+34)& (0+255),b	;volatile
 22239  003978  51BB               	movf	(_var_sys_NVM+35)& (0+255),w,b	;volatile
 22240  00397A  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 22241  00397C  6FBB               	movwf	(_var_sys_NVM+35)& (0+255),b	;volatile
 22242  00397E  51BC               	movf	(_var_sys_NVM+36)& (0+255),w,b	;volatile
 22243  003980  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 22244  003982  6FBC               	movwf	(_var_sys_NVM+36)& (0+255),b	;volatile
 22245  003984  51BD               	movf	(_var_sys_NVM+37)& (0+255),w,b	;volatile
 22246  003986  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 22247  003988  6FBD               	movwf	(_var_sys_NVM+37)& (0+255),b	;volatile
 22248                           
 22249                           ;eusartparser.c: 386:                 break;
 22250  00398A  0012               	return	
 22251  00398C                     l24351:
 22252                           
 22253                           ; BSR set to: 0
 22254                           ;eusartparser.c: 388:                 var_sys_NVM.counterMoves=var_sys_NVM.counterMoves|
      +                          ((uint32_t)(package.data.data16&0xFFFF)<<(uint8_t)(0*16));
 22255  00398C  5012               	movf	(write_eusartparser@package+2)^0,w,c
 22256  00398E  11BA               	iorwf	(_var_sys_NVM+34)& (0+255),w,b	;volatile
 22257  003990  6FBA               	movwf	(_var_sys_NVM+34)& (0+255),b	;volatile
 22258  003992  5013               	movf	(write_eusartparser@package+3)^0,w,c
 22259  003994  11BB               	iorwf	(_var_sys_NVM+35)& (0+255),w,b	;volatile
 22260  003996  6FBB               	movwf	(_var_sys_NVM+35)& (0+255),b	;volatile
 22261  003998  0E00               	movlw	0
 22262  00399A  11BC               	iorwf	(_var_sys_NVM+36)& (0+255),w,b	;volatile
 22263  00399C  6FBC               	movwf	(_var_sys_NVM+36)& (0+255),b	;volatile
 22264  00399E  0E00               	movlw	0
 22265  0039A0  11BD               	iorwf	(_var_sys_NVM+37)& (0+255),w,b	;volatile
 22266  0039A2  6FBD               	movwf	(_var_sys_NVM+37)& (0+255),b	;volatile
 22267                           
 22268                           ;eusartparser.c: 389:                 var_sys_NVM.counterMoves=var_sys_NVM.counterMoves&
      +                          ~((uint32_t)(~package.data.data16&0xFFFF)<<(uint8_t)(0*16));
 22269  0039A4  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 22270  0039A6  6E17               	movwf	??_write_eusartparser^0,c
 22271  0039A8  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 22272  0039AA  6E18               	movwf	(??_write_eusartparser+1)^0,c
 22273  0039AC  6A19               	clrf	(??_write_eusartparser+2)^0,c
 22274  0039AE  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 22275  0039B0  1C17               	comf	??_write_eusartparser^0,w,c
 22276  0039B2  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 22277  0039B4  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 22278  0039B6  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 22279  0039B8  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 22280  0039BA  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 22281  0039BC  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 22282  0039BE  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 22283  0039C0  51BA               	movf	(_var_sys_NVM+34)& (0+255),w,b	;volatile
 22284  0039C2  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 22285  0039C4  6FBA               	movwf	(_var_sys_NVM+34)& (0+255),b	;volatile
 22286  0039C6  51BB               	movf	(_var_sys_NVM+35)& (0+255),w,b	;volatile
 22287  0039C8  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 22288  0039CA  6FBB               	movwf	(_var_sys_NVM+35)& (0+255),b	;volatile
 22289  0039CC  51BC               	movf	(_var_sys_NVM+36)& (0+255),w,b	;volatile
 22290  0039CE  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 22291  0039D0  6FBC               	movwf	(_var_sys_NVM+36)& (0+255),b	;volatile
 22292  0039D2  51BD               	movf	(_var_sys_NVM+37)& (0+255),w,b	;volatile
 22293  0039D4  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 22294  0039D6  6FBD               	movwf	(_var_sys_NVM+37)& (0+255),b	;volatile
 22295                           
 22296                           ;eusartparser.c: 390:                 break;
 22297  0039D8  0012               	return	
 22298  0039DA                     l3636:
 22299                           
 22300                           ; BSR set to: 0
 22301                           ;eusartparser.c: 395:                 var_sys_NVM.OnlyRollingCode=package.data.data8[1];
 22302  0039DA  C013  F0BE         	movff	write_eusartparser@package+3,_var_sys_NVM+38	;volatile
 22303                           
 22304                           ;eusartparser.c: 396:                 break;
 22305  0039DE  0012               	return	
 22306  0039E0                     l24353:
 22307                           
 22308                           ; BSR set to: 0
 22309                           ;eusartparser.c: 399:                 var_sys_NVM.learningCurrentDecelarationClose=var_s
      +                          ys_NVM.learningCurrentDecelarationClose|((uint32_t)(package.data.data16&0xFFFF)<<(uint8_
      +                          t)(1*16));
 22310  0039E0  5012               	movf	(write_eusartparser@package+2)^0,w,c
 22311  0039E2  6E17               	movwf	??_write_eusartparser^0,c
 22312  0039E4  5013               	movf	(write_eusartparser@package+3)^0,w,c
 22313  0039E6  6E18               	movwf	(??_write_eusartparser+1)^0,c
 22314  0039E8  6A19               	clrf	(??_write_eusartparser+2)^0,c
 22315  0039EA  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 22316  0039EC  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 22317  0039F0  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 22318  0039F4  6A18               	clrf	(??_write_eusartparser+1)^0,c
 22319  0039F6  6A17               	clrf	??_write_eusartparser^0,c
 22320  0039F8  51C0               	movf	(_var_sys_NVM+40)& (0+255),w,b	;volatile
 22321  0039FA  1017               	iorwf	??_write_eusartparser^0,w,c
 22322  0039FC  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 22323  0039FE  51C1               	movf	(_var_sys_NVM+41)& (0+255),w,b	;volatile
 22324  003A00  1018               	iorwf	(??_write_eusartparser+1)^0,w,c
 22325  003A02  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 22326  003A04  51C2               	movf	(_var_sys_NVM+42)& (0+255),w,b	;volatile
 22327  003A06  1019               	iorwf	(??_write_eusartparser+2)^0,w,c
 22328  003A08  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 22329  003A0A  51C3               	movf	(_var_sys_NVM+43)& (0+255),w,b	;volatile
 22330  003A0C  101A               	iorwf	(??_write_eusartparser+3)^0,w,c
 22331  003A0E  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 22332                           
 22333                           ;eusartparser.c: 400:                 var_sys_NVM.learningCurrentDecelarationClose=var_s
      +                          ys_NVM.learningCurrentDecelarationClose&~((uint32_t)(~package.data.data16&0xFFFF)<<(uint
      +                          8_t)(1*16));
 22334  003A10  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 22335  003A12  6E17               	movwf	??_write_eusartparser^0,c
 22336  003A14  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 22337  003A16  6E18               	movwf	(??_write_eusartparser+1)^0,c
 22338  003A18  6A19               	clrf	(??_write_eusartparser+2)^0,c
 22339  003A1A  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 22340  003A1C  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 22341  003A20  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 22342  003A24  6A18               	clrf	(??_write_eusartparser+1)^0,c
 22343  003A26  6A17               	clrf	??_write_eusartparser^0,c
 22344  003A28  1C17               	comf	??_write_eusartparser^0,w,c
 22345  003A2A  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 22346  003A2C  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 22347  003A2E  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 22348  003A30  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 22349  003A32  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 22350  003A34  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 22351  003A36  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 22352  003A38  51C0               	movf	(_var_sys_NVM+40)& (0+255),w,b	;volatile
 22353  003A3A  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 22354  003A3C  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 22355  003A3E  51C1               	movf	(_var_sys_NVM+41)& (0+255),w,b	;volatile
 22356  003A40  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 22357  003A42  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 22358  003A44  51C2               	movf	(_var_sys_NVM+42)& (0+255),w,b	;volatile
 22359  003A46  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 22360  003A48  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 22361  003A4A  51C3               	movf	(_var_sys_NVM+43)& (0+255),w,b	;volatile
 22362  003A4C  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 22363  003A4E  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 22364                           
 22365                           ;eusartparser.c: 401:                 break;
 22366  003A50  0012               	return	
 22367  003A52                     l24355:
 22368                           
 22369                           ; BSR set to: 0
 22370                           ;eusartparser.c: 403:                 var_sys_NVM.learningCurrentDecelarationClose=var_s
      +                          ys_NVM.learningCurrentDecelarationClose|((uint32_t)(package.data.data16&0xFFFF)<<(uint8_
      +                          t)(0*16));
 22371  003A52  5012               	movf	(write_eusartparser@package+2)^0,w,c
 22372  003A54  11C0               	iorwf	(_var_sys_NVM+40)& (0+255),w,b	;volatile
 22373  003A56  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 22374  003A58  5013               	movf	(write_eusartparser@package+3)^0,w,c
 22375  003A5A  11C1               	iorwf	(_var_sys_NVM+41)& (0+255),w,b	;volatile
 22376  003A5C  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 22377  003A5E  0E00               	movlw	0
 22378  003A60  11C2               	iorwf	(_var_sys_NVM+42)& (0+255),w,b	;volatile
 22379  003A62  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 22380  003A64  0E00               	movlw	0
 22381  003A66  11C3               	iorwf	(_var_sys_NVM+43)& (0+255),w,b	;volatile
 22382  003A68  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 22383                           
 22384                           ;eusartparser.c: 404:                 var_sys_NVM.learningCurrentDecelarationClose=var_s
      +                          ys_NVM.learningCurrentDecelarationClose&~((uint32_t)(~package.data.data16&0xFFFF)<<(uint
      +                          8_t)(0*16));
 22385  003A6A  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 22386  003A6C  6E17               	movwf	??_write_eusartparser^0,c
 22387  003A6E  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 22388  003A70  6E18               	movwf	(??_write_eusartparser+1)^0,c
 22389  003A72  6A19               	clrf	(??_write_eusartparser+2)^0,c
 22390  003A74  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 22391  003A76  1C17               	comf	??_write_eusartparser^0,w,c
 22392  003A78  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 22393  003A7A  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 22394  003A7C  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 22395  003A7E  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 22396  003A80  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 22397  003A82  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 22398  003A84  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 22399  003A86  51C0               	movf	(_var_sys_NVM+40)& (0+255),w,b	;volatile
 22400  003A88  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 22401  003A8A  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 22402  003A8C  51C1               	movf	(_var_sys_NVM+41)& (0+255),w,b	;volatile
 22403  003A8E  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 22404  003A90  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 22405  003A92  51C2               	movf	(_var_sys_NVM+42)& (0+255),w,b	;volatile
 22406  003A94  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 22407  003A96  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 22408  003A98  51C3               	movf	(_var_sys_NVM+43)& (0+255),w,b	;volatile
 22409  003A9A  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 22410  003A9C  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 22411                           
 22412                           ;eusartparser.c: 405:                 break;
 22413  003A9E  0012               	return	
 22414  003AA0                     l24357:
 22415                           
 22416                           ; BSR set to: 0
 22417                           ;eusartparser.c: 408:                 var_sys_NVM.learningCurrentDecelarationOpen=var_sy
      +                          s_NVM.learningCurrentDecelarationOpen|((uint32_t)(package.data.data16&0xFFFF)<<(uint8_t)
      +                          (1*16));
 22418  003AA0  5012               	movf	(write_eusartparser@package+2)^0,w,c
 22419  003AA2  6E17               	movwf	??_write_eusartparser^0,c
 22420  003AA4  5013               	movf	(write_eusartparser@package+3)^0,w,c
 22421  003AA6  6E18               	movwf	(??_write_eusartparser+1)^0,c
 22422  003AA8  6A19               	clrf	(??_write_eusartparser+2)^0,c
 22423  003AAA  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 22424  003AAC  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 22425  003AB0  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 22426  003AB4  6A18               	clrf	(??_write_eusartparser+1)^0,c
 22427  003AB6  6A17               	clrf	??_write_eusartparser^0,c
 22428  003AB8  51C4               	movf	(_var_sys_NVM+44)& (0+255),w,b	;volatile
 22429  003ABA  1017               	iorwf	??_write_eusartparser^0,w,c
 22430  003ABC  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 22431  003ABE  51C5               	movf	(_var_sys_NVM+45)& (0+255),w,b	;volatile
 22432  003AC0  1018               	iorwf	(??_write_eusartparser+1)^0,w,c
 22433  003AC2  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 22434  003AC4  51C6               	movf	(_var_sys_NVM+46)& (0+255),w,b	;volatile
 22435  003AC6  1019               	iorwf	(??_write_eusartparser+2)^0,w,c
 22436  003AC8  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 22437  003ACA  51C7               	movf	(_var_sys_NVM+47)& (0+255),w,b	;volatile
 22438  003ACC  101A               	iorwf	(??_write_eusartparser+3)^0,w,c
 22439  003ACE  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 22440                           
 22441                           ;eusartparser.c: 409:                 var_sys_NVM.learningCurrentDecelarationOpen=var_sy
      +                          s_NVM.learningCurrentDecelarationOpen&~((uint32_t)(~package.data.data16&0xFFFF)<<(uint8_
      +                          t)(1*16));
 22442  003AD0  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 22443  003AD2  6E17               	movwf	??_write_eusartparser^0,c
 22444  003AD4  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 22445  003AD6  6E18               	movwf	(??_write_eusartparser+1)^0,c
 22446  003AD8  6A19               	clrf	(??_write_eusartparser+2)^0,c
 22447  003ADA  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 22448  003ADC  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 22449  003AE0  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 22450  003AE4  6A18               	clrf	(??_write_eusartparser+1)^0,c
 22451  003AE6  6A17               	clrf	??_write_eusartparser^0,c
 22452  003AE8  1C17               	comf	??_write_eusartparser^0,w,c
 22453  003AEA  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 22454  003AEC  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 22455  003AEE  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 22456  003AF0  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 22457  003AF2  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 22458  003AF4  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 22459  003AF6  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 22460  003AF8  51C4               	movf	(_var_sys_NVM+44)& (0+255),w,b	;volatile
 22461  003AFA  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 22462  003AFC  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 22463  003AFE  51C5               	movf	(_var_sys_NVM+45)& (0+255),w,b	;volatile
 22464  003B00  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 22465  003B02  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 22466  003B04  51C6               	movf	(_var_sys_NVM+46)& (0+255),w,b	;volatile
 22467  003B06  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 22468  003B08  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 22469  003B0A  51C7               	movf	(_var_sys_NVM+47)& (0+255),w,b	;volatile
 22470  003B0C  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 22471  003B0E  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 22472                           
 22473                           ;eusartparser.c: 410:                 break;
 22474  003B10  0012               	return	
 22475  003B12                     l24359:
 22476                           
 22477                           ; BSR set to: 0
 22478                           ;eusartparser.c: 412:                 var_sys_NVM.learningCurrentDecelarationOpen=var_sy
      +                          s_NVM.learningCurrentDecelarationOpen|((uint32_t)(package.data.data16&0xFFFF)<<(uint8_t)
      +                          (0*16));
 22479  003B12  5012               	movf	(write_eusartparser@package+2)^0,w,c
 22480  003B14  11C4               	iorwf	(_var_sys_NVM+44)& (0+255),w,b	;volatile
 22481  003B16  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 22482  003B18  5013               	movf	(write_eusartparser@package+3)^0,w,c
 22483  003B1A  11C5               	iorwf	(_var_sys_NVM+45)& (0+255),w,b	;volatile
 22484  003B1C  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 22485  003B1E  0E00               	movlw	0
 22486  003B20  11C6               	iorwf	(_var_sys_NVM+46)& (0+255),w,b	;volatile
 22487  003B22  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 22488  003B24  0E00               	movlw	0
 22489  003B26  11C7               	iorwf	(_var_sys_NVM+47)& (0+255),w,b	;volatile
 22490  003B28  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 22491                           
 22492                           ;eusartparser.c: 413:                 var_sys_NVM.learningCurrentDecelarationOpen=var_sy
      +                          s_NVM.learningCurrentDecelarationOpen&~((uint32_t)(~package.data.data16&0xFFFF)<<(uint8_
      +                          t)(0*16));
 22493  003B2A  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 22494  003B2C  6E17               	movwf	??_write_eusartparser^0,c
 22495  003B2E  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 22496  003B30  6E18               	movwf	(??_write_eusartparser+1)^0,c
 22497  003B32  6A19               	clrf	(??_write_eusartparser+2)^0,c
 22498  003B34  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 22499  003B36  1C17               	comf	??_write_eusartparser^0,w,c
 22500  003B38  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 22501  003B3A  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 22502  003B3C  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 22503  003B3E  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 22504  003B40  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 22505  003B42  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 22506  003B44  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 22507  003B46  51C4               	movf	(_var_sys_NVM+44)& (0+255),w,b	;volatile
 22508  003B48  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 22509  003B4A  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 22510  003B4C  51C5               	movf	(_var_sys_NVM+45)& (0+255),w,b	;volatile
 22511  003B4E  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 22512  003B50  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 22513  003B52  51C6               	movf	(_var_sys_NVM+46)& (0+255),w,b	;volatile
 22514  003B54  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 22515  003B56  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 22516  003B58  51C7               	movf	(_var_sys_NVM+47)& (0+255),w,b	;volatile
 22517  003B5A  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 22518  003B5C  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 22519                           
 22520                           ;eusartparser.c: 414:                 break;
 22521  003B5E  0012               	return	
 22522  003B60                     l3641:
 22523                           
 22524                           ; BSR set to: 0
 22525                           ;eusartparser.c: 417:                 var_sys_NVM.learningCurrentNormalClose=package.dat
      +                          a.data16;
 22526  003B60  C012  F0C8         	movff	write_eusartparser@package+2,_var_sys_NVM+48	;volatile
 22527  003B64  C013  F0C9         	movff	write_eusartparser@package+3,_var_sys_NVM+49	;volatile
 22528                           
 22529                           ;eusartparser.c: 418:                 break;
 22530  003B68  0012               	return	
 22531  003B6A                     l3642:
 22532                           
 22533                           ; BSR set to: 0
 22534                           ;eusartparser.c: 421:                 var_sys_NVM.learningCurrentNormalOpen=package.data
      +                          .data16;
 22535  003B6A  C012  F0CA         	movff	write_eusartparser@package+2,_var_sys_NVM+50	;volatile
 22536  003B6E  C013  F0CB         	movff	write_eusartparser@package+3,_var_sys_NVM+51	;volatile
 22537                           
 22538                           ;eusartparser.c: 422:                 break;
 22539  003B72  0012               	return	
 22540  003B74                     l24371:
 22541                           
 22542                           ; BSR set to: 0
 22543  003B74  5011               	movf	(write_eusartparser@package+1)^0,w,c
 22544  003B76  6E17               	movwf	??_write_eusartparser^0,c
 22545  003B78  6A18               	clrf	(??_write_eusartparser+1)^0,c
 22546                           
 22547                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 22548                           ; Switch size 1, requested type "simple"
 22549                           ; Number of cases is 1, Range of values is 0 to 0
 22550                           ; switch strategies available:
 22551                           ; Name         Instructions Cycles
 22552                           ; simple_byte            4     3 (average)
 22553                           ;	Chosen strategy is simple_byte
 22554  003B7A  5018               	movf	(??_write_eusartparser+1)^0,w,c
 22555  003B7C  0A00               	xorlw	0	; case 0
 22556  003B7E  A4D8               	btfss	status,2,c
 22557  003B80  0012               	return	
 22558                           
 22559                           ; BSR set to: 0
 22560                           ; Switch size 1, requested type "simple"
 22561                           ; Number of cases is 43, Range of values is 0 to 51
 22562                           ; switch strategies available:
 22563                           ; Name         Instructions Cycles
 22564                           ; simple_byte          130    66 (average)
 22565                           ;	Chosen strategy is simple_byte
 22566  003B82  5017               	movf	??_write_eusartparser^0,w,c
 22567  003B84  0A00               	xorlw	0	; case 0
 22568  003B86  B4D8               	btfsc	status,2,c
 22569  003B88  D675               	goto	l3604
 22570  003B8A  0A02               	xorlw	2	; case 2
 22571  003B8C  B4D8               	btfsc	status,2,c
 22572  003B8E  D67F               	goto	l3609
 22573  003B90  0A01               	xorlw	1	; case 3
 22574  003B92  B4D8               	btfsc	status,2,c
 22575  003B94  D6A5               	goto	l3623
 22576  003B96  0A06               	xorlw	6	; case 5
 22577  003B98  B4D8               	btfsc	status,2,c
 22578  003B9A  D67E               	goto	l3611
 22579  003B9C  0A02               	xorlw	2	; case 7
 22580  003B9E  B4D8               	btfsc	status,2,c
 22581  003BA0  D697               	goto	l3620
 22582  003BA2  0A0F               	xorlw	15	; case 8
 22583  003BA4  B4D8               	btfsc	status,2,c
 22584  003BA6  D6AB               	goto	l3630
 22585  003BA8  0A02               	xorlw	2	; case 10
 22586  003BAA  B4D8               	btfsc	status,2,c
 22587  003BAC  D69C               	goto	l3625
 22588  003BAE  0A1A               	xorlw	26	; case 16
 22589  003BB0  B4D8               	btfsc	status,2,c
 22590  003BB2  D660               	goto	l3604
 22591  003BB4  0A01               	xorlw	1	; case 17
 22592  003BB6  B4D8               	btfsc	status,2,c
 22593  003BB8  D662               	goto	l3606
 22594  003BBA  0A03               	xorlw	3	; case 18
 22595  003BBC  B4D8               	btfsc	status,2,c
 22596  003BBE  D664               	goto	l3607
 22597  003BC0  0A01               	xorlw	1	; case 19
 22598  003BC2  B4D8               	btfsc	status,2,c
 22599  003BC4  D664               	goto	l3609
 22600  003BC6  0A07               	xorlw	7	; case 20
 22601  003BC8  B4D8               	btfsc	status,2,c
 22602  003BCA  D666               	goto	l3611
 22603  003BCC  0A01               	xorlw	1	; case 21
 22604  003BCE  B4D8               	btfsc	status,2,c
 22605  003BD0  D668               	goto	l3612
 22606  003BD2  0A03               	xorlw	3	; case 22
 22607  003BD4  B4D8               	btfsc	status,2,c
 22608  003BD6  D66A               	goto	l3613
 22609  003BD8  0A01               	xorlw	1	; case 23
 22610  003BDA  B4D8               	btfsc	status,2,c
 22611  003BDC  D66A               	goto	l3614
 22612  003BDE  0A0F               	xorlw	15	; case 24
 22613  003BE0  B4D8               	btfsc	status,2,c
 22614  003BE2  D66A               	goto	l3615
 22615  003BE4  0A01               	xorlw	1	; case 25
 22616  003BE6  B4D8               	btfsc	status,2,c
 22617  003BE8  D66A               	goto	l3616
 22618  003BEA  0A03               	xorlw	3	; case 26
 22619  003BEC  B4D8               	btfsc	status,2,c
 22620  003BEE  D66A               	goto	l3617
 22621  003BF0  0A01               	xorlw	1	; case 27
 22622  003BF2  B4D8               	btfsc	status,2,c
 22623  003BF4  D66A               	goto	l3618
 22624  003BF6  0A07               	xorlw	7	; case 28
 22625  003BF8  B4D8               	btfsc	status,2,c
 22626  003BFA  D66A               	goto	l3620
 22627  003BFC  0A01               	xorlw	1	; case 29
 22628  003BFE  B4D8               	btfsc	status,2,c
 22629  003C00  D66A               	goto	l3621
 22630  003C02  0A03               	xorlw	3	; case 30
 22631  003C04  B4D8               	btfsc	status,2,c
 22632  003C06  D66C               	goto	l3623
 22633  003C08  0A01               	xorlw	1	; case 31
 22634  003C0A  B4D8               	btfsc	status,2,c
 22635  003C0C  D66C               	goto	l3625
 22636  003C0E  0A3F               	xorlw	63	; case 32
 22637  003C10  B4D8               	btfsc	status,2,c
 22638  003C12  D66C               	goto	l3626
 22639  003C14  0A01               	xorlw	1	; case 33
 22640  003C16  B4D8               	btfsc	status,2,c
 22641  003C18  D66C               	goto	l3627
 22642  003C1A  0A03               	xorlw	3	; case 34
 22643  003C1C  B4D8               	btfsc	status,2,c
 22644  003C1E  D66C               	goto	l3628
 22645  003C20  0A01               	xorlw	1	; case 35
 22646  003C22  B4D8               	btfsc	status,2,c
 22647  003C24  D66C               	goto	l3630
 22648  003C26  0A07               	xorlw	7	; case 36
 22649  003C28  B4D8               	btfsc	status,2,c
 22650  003C2A  D66C               	goto	l3631
 22651  003C2C  0A01               	xorlw	1	; case 37
 22652  003C2E  B4D8               	btfsc	status,2,c
 22653  003C30  D66C               	goto	l3632
 22654  003C32  0A03               	xorlw	3	; case 38
 22655  003C34  B4D8               	btfsc	status,2,c
 22656  003C36  D66C               	goto	l3633
 22657  003C38  0A01               	xorlw	1	; case 39
 22658  003C3A  B4D8               	btfsc	status,2,c
 22659  003C3C  D66E               	goto	l24349
 22660  003C3E  0A0F               	xorlw	15	; case 40
 22661  003C40  B4D8               	btfsc	status,2,c
 22662  003C42  D6A4               	goto	l24351
 22663  003C44  0A01               	xorlw	1	; case 41
 22664  003C46  B4D8               	btfsc	status,2,c
 22665  003C48  D6C8               	goto	l3636
 22666  003C4A  0A03               	xorlw	3	; case 42
 22667  003C4C  B4D8               	btfsc	status,2,c
 22668  003C4E  D6C8               	goto	l24353
 22669  003C50  0A01               	xorlw	1	; case 43
 22670  003C52  B4D8               	btfsc	status,2,c
 22671  003C54  D6FE               	goto	l24355
 22672  003C56  0A07               	xorlw	7	; case 44
 22673  003C58  B4D8               	btfsc	status,2,c
 22674  003C5A  D722               	goto	l24357
 22675  003C5C  0A01               	xorlw	1	; case 45
 22676  003C5E  B4D8               	btfsc	status,2,c
 22677  003C60  D758               	goto	l24359
 22678  003C62  0A03               	xorlw	3	; case 46
 22679  003C64  B4D8               	btfsc	status,2,c
 22680  003C66  D77C               	goto	l3641
 22681  003C68  0A01               	xorlw	1	; case 47
 22682  003C6A  B4D8               	btfsc	status,2,c
 22683  003C6C  D77E               	goto	l3642
 22684  003C6E  0A1F               	xorlw	31	; case 48
 22685  003C70  B4D8               	btfsc	status,2,c
 22686  003C72  D716               	goto	l24357
 22687  003C74  0A01               	xorlw	1	; case 49
 22688  003C76  B4D8               	btfsc	status,2,c
 22689  003C78  D74C               	goto	l24359
 22690  003C7A  0A03               	xorlw	3	; case 50
 22691  003C7C  B4D8               	btfsc	status,2,c
 22692  003C7E  D710               	goto	l24357
 22693  003C80  0A01               	xorlw	1	; case 51
 22694  003C82  A4D8               	btfss	status,2,c
 22695  003C84  0012               	return	
 22696  003C86  D745               	goto	l24359
 22697  003C88                     __end_of_write_eusartparser:
 22698                           	callstack 0
 22699                           
 22700 ;; *************** function _validateRemoteSerialNumber *****************
 22701 ;; Defined at:
 22702 ;;		line 27 in file "controlMemory_MC50.c"
 22703 ;; Parameters:    Size  Location     Type
 22704 ;;  serial          4   45[COMRAM] unsigned long 
 22705 ;;  VerifyOnlySe    1   49[COMRAM] enum E10564
 22706 ;;  position        2   50[COMRAM] PTR unsigned char 
 22707 ;;		 -> eusartparser@pos(1), controlSelectRemote@pos(1), classic_data(16), 
 22708 ;; Auto vars:     Size  Location     Type
 22709 ;;  mask            4   52[COMRAM] unsigned long 
 22710 ;;  i               1   57[COMRAM] unsigned char 
 22711 ;;  j               1   56[COMRAM] unsigned char 
 22712 ;; Return value:  Size  Location     Type
 22713 ;;                  1    wreg      enum E10539
 22714 ;; Registers used:
 22715 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22716 ;; Tracked objects:
 22717 ;;		On entry : 3F/0
 22718 ;;		On exit  : 3F/0
 22719 ;;		Unchanged: 0/0
 22720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22721 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22722 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22723 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22724 ;;      Totals:        13       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22725 ;;Total ram usage:       21 bytes
 22726 ;; Hardware stack levels used: 1
 22727 ;; Hardware stack levels required when called: 13
 22728 ;; This function calls:
 22729 ;;		_i2c_readDataBlock
 22730 ;; This function is called by:
 22731 ;;		_keeloqDecryptPacket
 22732 ;;		_DecryptPacket_12BIT
 22733 ;;		_controlSelectRemote
 22734 ;;		_eusartparser
 22735 ;; This function uses a non-reentrant model
 22736 ;;
 22737                           
 22738                           	psect	text76
 22739  005EB4                     __ptext76:
 22740                           	callstack 0
 22741  005EB4                     _validateRemoteSerialNumber:
 22742                           	callstack 14
 22743                           
 22744                           ; BSR set to: 0
 22745                           ;controlMemory_MC50.c: 29:     char j=0;
 22746                           
 22747                           ; BSR set to: 0
 22748                           ;incstack = 0
 22749  005EB4  0E00               	movlw	0
 22750  005EB6  6E39               	movwf	validateRemoteSerialNumber@j^0,c
 22751                           
 22752                           ; BSR set to: 0
 22753                           ;controlMemory_MC50.c: 30:     unsigned long mask;;controlMemory_MC50.c: 33:     if(Veri
      +                          fyOnlySerial==YES)
 22754  005EB8  0432               	decf	validateRemoteSerialNumber@VerifyOnlySerial^0,w,c
 22755  005EBA  A4D8               	btfss	status,2,c
 22756  005EBC  D009               	goto	l1436
 22757                           
 22758                           ; BSR set to: 0
 22759                           ;controlMemory_MC50.c: 34:     {;controlMemory_MC50.c: 35:         mask=0x0FFFFFFF;
 22760  005EBE  0EFF               	movlw	255
 22761  005EC0  6E35               	movwf	validateRemoteSerialNumber@mask^0,c
 22762  005EC2  0EFF               	movlw	255
 22763  005EC4  6E36               	movwf	(validateRemoteSerialNumber@mask+1)^0,c
 22764  005EC6  0EFF               	movlw	255
 22765  005EC8  6E37               	movwf	(validateRemoteSerialNumber@mask+2)^0,c
 22766  005ECA  0E0F               	movlw	15
 22767  005ECC  6E38               	movwf	(validateRemoteSerialNumber@mask+3)^0,c
 22768                           
 22769                           ;controlMemory_MC50.c: 36:     }
 22770  005ECE  D004               	goto	l20611
 22771  005ED0                     l1436:
 22772                           
 22773                           ; BSR set to: 0
 22774                           ;controlMemory_MC50.c: 38:     {;controlMemory_MC50.c: 39:         mask=0xFFFFFFFF;
 22775  005ED0  6835               	setf	validateRemoteSerialNumber@mask^0,c
 22776  005ED2  6836               	setf	(validateRemoteSerialNumber@mask+1)^0,c
 22777  005ED4  6837               	setf	(validateRemoteSerialNumber@mask+2)^0,c
 22778  005ED6  6838               	setf	(validateRemoteSerialNumber@mask+3)^0,c
 22779  005ED8                     l20611:
 22780                           
 22781                           ; BSR set to: 0
 22782                           ;controlMemory_MC50.c: 42:     for (i=0;i<var_sys_NVM.positionRemotesFull;i++)
 22783  005ED8  0E00               	movlw	0
 22784  005EDA  6E3A               	movwf	validateRemoteSerialNumber@i^0,c
 22785  005EDC  D056               	goto	l20629
 22786  005EDE                     l20613:
 22787                           
 22788                           ; BSR set to: 0
 22789                           ;controlMemory_MC50.c: 43:     {;controlMemory_MC50.c: 44:         if(i%4==0)
 22790  005EDE  C03A  F0D8         	movff	validateRemoteSerialNumber@i,??_validateRemoteSerialNumber
 22791  005EE2  0E03               	movlw	3
 22792  005EE4  17D8               	andwf	??_validateRemoteSerialNumber& (0+255),f,b
 22793  005EE6  A4D8               	btfss	status,2,c
 22794  005EE8  D01C               	goto	l20619
 22795                           
 22796                           ; BSR set to: 0
 22797                           ;controlMemory_MC50.c: 45:         {;controlMemory_MC50.c: 46:             j=0;
 22798  005EEA  0E00               	movlw	0
 22799  005EEC  6E39               	movwf	validateRemoteSerialNumber@j^0,c
 22800                           
 22801                           ; BSR set to: 0
 22802                           ;controlMemory_MC50.c: 48:             i2c_readDataBlock(0x50, (uint16_t)(0x0200 + (i * 
      +                          4)),(char*)memoryTEMP, 16);
 22803  005EEE  503A               	movf	validateRemoteSerialNumber@i^0,w,c
 22804  005EF0  6FD8               	movwf	??_validateRemoteSerialNumber& (0+255),b
 22805  005EF2  6BD9               	clrf	(??_validateRemoteSerialNumber+1)& (0+255),b
 22806  005EF4  90D8               	bcf	status,0,c
 22807  005EF6  37D8               	rlcf	??_validateRemoteSerialNumber& (0+255),f,b
 22808  005EF8  37D9               	rlcf	(??_validateRemoteSerialNumber+1)& (0+255),f,b
 22809  005EFA  90D8               	bcf	status,0,c
 22810  005EFC  37D8               	rlcf	??_validateRemoteSerialNumber& (0+255),f,b
 22811  005EFE  37D9               	rlcf	(??_validateRemoteSerialNumber+1)& (0+255),f,b
 22812  005F00  0E00               	movlw	0
 22813  005F02  25D8               	addwf	??_validateRemoteSerialNumber& (0+255),w,b
 22814  005F04  6E22               	movwf	i2c_readDataBlock@reg^0,c
 22815  005F06  0E02               	movlw	2
 22816  005F08  21D9               	addwfc	(??_validateRemoteSerialNumber+1)& (0+255),w,b
 22817  005F0A  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 22818  005F0C  0EA0               	movlw	low _memoryTEMP
 22819  005F0E  6E24               	movwf	i2c_readDataBlock@data^0,c
 22820  005F10  0E02               	movlw	high _memoryTEMP
 22821  005F12  6E25               	movwf	(i2c_readDataBlock@data+1)^0,c
 22822  005F14  0E00               	movlw	0
 22823  005F16  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 22824  005F18  0E10               	movlw	16
 22825  005F1A  6E26               	movwf	i2c_readDataBlock@len^0,c
 22826  005F1C  0E50               	movlw	80
 22827  005F1E  EC4D  F043         	call	_i2c_readDataBlock
 22828  005F22                     l20619:
 22829                           
 22830                           ;controlMemory_MC50.c: 50:         if((unsigned long)serial==((unsigned long)memoryTEMP[
      +                          j]&mask))
 22831  005F22  5039               	movf	validateRemoteSerialNumber@j^0,w,c
 22832  005F24  0D04               	mullw	4
 22833  005F26  0EA0               	movlw	low _memoryTEMP
 22834  005F28  24F3               	addwf	243,w,c
 22835  005F2A  6ED9               	movwf	fsr2l,c
 22836  005F2C  0E02               	movlw	high _memoryTEMP
 22837  005F2E  20F4               	addwfc	prodh,w,c
 22838  005F30  6EDA               	movwf	fsr2h,c
 22839  005F32  CFDE F0D8          	movff	postinc2,??_validateRemoteSerialNumber
 22840  005F36  CFDE F0D9          	movff	postinc2,??_validateRemoteSerialNumber+1
 22841  005F3A  CFDE F0DA          	movff	postinc2,??_validateRemoteSerialNumber+2
 22842  005F3E  CFDE F0DB          	movff	postinc2,??_validateRemoteSerialNumber+3
 22843  005F42  5035               	movf	validateRemoteSerialNumber@mask^0,w,c
 22844  005F44  0100               	movlb	0	; () banked
 22845  005F46  15D8               	andwf	??_validateRemoteSerialNumber& (0+255),w,b
 22846  005F48  6FDC               	movwf	(??_validateRemoteSerialNumber+4)& (0+255),b
 22847  005F4A  5036               	movf	(validateRemoteSerialNumber@mask+1)^0,w,c
 22848  005F4C  15D9               	andwf	(??_validateRemoteSerialNumber+1)& (0+255),w,b
 22849  005F4E  6FDD               	movwf	(??_validateRemoteSerialNumber+5)& (0+255),b
 22850  005F50  5037               	movf	(validateRemoteSerialNumber@mask+2)^0,w,c
 22851  005F52  15DA               	andwf	(??_validateRemoteSerialNumber+2)& (0+255),w,b
 22852  005F54  6FDE               	movwf	(??_validateRemoteSerialNumber+6)& (0+255),b
 22853  005F56  5038               	movf	(validateRemoteSerialNumber@mask+3)^0,w,c
 22854  005F58  15DB               	andwf	(??_validateRemoteSerialNumber+3)& (0+255),w,b
 22855  005F5A  6FDF               	movwf	(??_validateRemoteSerialNumber+7)& (0+255),b
 22856  005F5C  502E               	movf	validateRemoteSerialNumber@serial^0,w,c
 22857  005F5E  19DC               	xorwf	(??_validateRemoteSerialNumber+4)& (0+255),w,b
 22858  005F60  E112               	bnz	l20627
 22859  005F62  502F               	movf	(validateRemoteSerialNumber@serial+1)^0,w,c
 22860  005F64  19DD               	xorwf	(??_validateRemoteSerialNumber+5)& (0+255),w,b
 22861  005F66  E10F               	bnz	l20627
 22862  005F68  5030               	movf	(validateRemoteSerialNumber@serial+2)^0,w,c
 22863  005F6A  19DE               	xorwf	(??_validateRemoteSerialNumber+6)& (0+255),w,b
 22864  005F6C  E10C               	bnz	l20627
 22865  005F6E  5031               	movf	(validateRemoteSerialNumber@serial+3)^0,w,c
 22866  005F70  19DF               	xorwf	(??_validateRemoteSerialNumber+7)& (0+255),w,b
 22867  005F72  A4D8               	btfss	status,2,c
 22868  005F74  D008               	goto	l20627
 22869                           
 22870                           ; BSR set to: 0
 22871                           ;controlMemory_MC50.c: 51:         {;controlMemory_MC50.c: 53:             position[0]=i
      +                          ;
 22872  005F76  C033  FFD9         	movff	validateRemoteSerialNumber@position,fsr2l
 22873  005F7A  C034  FFDA         	movff	validateRemoteSerialNumber@position+1,fsr2h
 22874  005F7E  C03A  FFDF         	movff	validateRemoteSerialNumber@i,indf2
 22875                           
 22876                           ; BSR set to: 0
 22877                           ;controlMemory_MC50.c: 54:             return TypeFull;
 22878  005F82  0E01               	movlw	1
 22879  005F84  0012               	return	
 22880  005F86                     l20627:
 22881                           
 22882                           ; BSR set to: 0
 22883                           ;controlMemory_MC50.c: 57:         j++;
 22884  005F86  2A39               	incf	validateRemoteSerialNumber@j^0,f,c
 22885                           
 22886                           ;controlMemory_MC50.c: 59:     }
 22887  005F88  2A3A               	incf	validateRemoteSerialNumber@i^0,f,c
 22888  005F8A                     l20629:
 22889                           
 22890                           ; BSR set to: 0
 22891  005F8A  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 22892  005F8C  5C3A               	subwf	validateRemoteSerialNumber@i^0,w,c
 22893  005F8E  A0D8               	btfss	status,0,c
 22894  005F90  D7A6               	goto	l20613
 22895                           
 22896                           ; BSR set to: 0
 22897                           ;controlMemory_MC50.c: 61:     for (i=0;i<var_sys_NVM.positionRemotesWalk;i++)
 22898  005F92  0E00               	movlw	0
 22899  005F94  6E3A               	movwf	validateRemoteSerialNumber@i^0,c
 22900  005F96  D056               	goto	l20649
 22901  005F98                     l20633:
 22902                           
 22903                           ; BSR set to: 0
 22904                           ;controlMemory_MC50.c: 62:     {;controlMemory_MC50.c: 63:         if(i%4==0)
 22905  005F98  C03A  F0D8         	movff	validateRemoteSerialNumber@i,??_validateRemoteSerialNumber
 22906  005F9C  0E03               	movlw	3
 22907  005F9E  17D8               	andwf	??_validateRemoteSerialNumber& (0+255),f,b
 22908  005FA0  A4D8               	btfss	status,2,c
 22909  005FA2  D01C               	goto	l20639
 22910                           
 22911                           ; BSR set to: 0
 22912                           ;controlMemory_MC50.c: 64:         {;controlMemory_MC50.c: 65:             j=0;
 22913  005FA4  0E00               	movlw	0
 22914  005FA6  6E39               	movwf	validateRemoteSerialNumber@j^0,c
 22915                           
 22916                           ; BSR set to: 0
 22917                           ;controlMemory_MC50.c: 66:             i2c_readDataBlock(0x50, (uint16_t)(0x0500 + (i * 
      +                          4)),(char*)memoryTEMP, 16);
 22918  005FA8  503A               	movf	validateRemoteSerialNumber@i^0,w,c
 22919  005FAA  6FD8               	movwf	??_validateRemoteSerialNumber& (0+255),b
 22920  005FAC  6BD9               	clrf	(??_validateRemoteSerialNumber+1)& (0+255),b
 22921  005FAE  90D8               	bcf	status,0,c
 22922  005FB0  37D8               	rlcf	??_validateRemoteSerialNumber& (0+255),f,b
 22923  005FB2  37D9               	rlcf	(??_validateRemoteSerialNumber+1)& (0+255),f,b
 22924  005FB4  90D8               	bcf	status,0,c
 22925  005FB6  37D8               	rlcf	??_validateRemoteSerialNumber& (0+255),f,b
 22926  005FB8  37D9               	rlcf	(??_validateRemoteSerialNumber+1)& (0+255),f,b
 22927  005FBA  0E00               	movlw	0
 22928  005FBC  25D8               	addwf	??_validateRemoteSerialNumber& (0+255),w,b
 22929  005FBE  6E22               	movwf	i2c_readDataBlock@reg^0,c
 22930  005FC0  0E05               	movlw	5
 22931  005FC2  21D9               	addwfc	(??_validateRemoteSerialNumber+1)& (0+255),w,b
 22932  005FC4  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 22933  005FC6  0EA0               	movlw	low _memoryTEMP
 22934  005FC8  6E24               	movwf	i2c_readDataBlock@data^0,c
 22935  005FCA  0E02               	movlw	high _memoryTEMP
 22936  005FCC  6E25               	movwf	(i2c_readDataBlock@data+1)^0,c
 22937  005FCE  0E00               	movlw	0
 22938  005FD0  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 22939  005FD2  0E10               	movlw	16
 22940  005FD4  6E26               	movwf	i2c_readDataBlock@len^0,c
 22941  005FD6  0E50               	movlw	80
 22942  005FD8  EC4D  F043         	call	_i2c_readDataBlock
 22943  005FDC                     l20639:
 22944                           
 22945                           ;controlMemory_MC50.c: 69:         if((unsigned long)serial==((unsigned long)memoryTEMP[
      +                          j]&mask))
 22946  005FDC  5039               	movf	validateRemoteSerialNumber@j^0,w,c
 22947  005FDE  0D04               	mullw	4
 22948  005FE0  0EA0               	movlw	low _memoryTEMP
 22949  005FE2  24F3               	addwf	243,w,c
 22950  005FE4  6ED9               	movwf	fsr2l,c
 22951  005FE6  0E02               	movlw	high _memoryTEMP
 22952  005FE8  20F4               	addwfc	prodh,w,c
 22953  005FEA  6EDA               	movwf	fsr2h,c
 22954  005FEC  CFDE F0D8          	movff	postinc2,??_validateRemoteSerialNumber
 22955  005FF0  CFDE F0D9          	movff	postinc2,??_validateRemoteSerialNumber+1
 22956  005FF4  CFDE F0DA          	movff	postinc2,??_validateRemoteSerialNumber+2
 22957  005FF8  CFDE F0DB          	movff	postinc2,??_validateRemoteSerialNumber+3
 22958  005FFC  5035               	movf	validateRemoteSerialNumber@mask^0,w,c
 22959  005FFE  0100               	movlb	0	; () banked
 22960  006000  15D8               	andwf	??_validateRemoteSerialNumber& (0+255),w,b
 22961  006002  6FDC               	movwf	(??_validateRemoteSerialNumber+4)& (0+255),b
 22962  006004  5036               	movf	(validateRemoteSerialNumber@mask+1)^0,w,c
 22963  006006  15D9               	andwf	(??_validateRemoteSerialNumber+1)& (0+255),w,b
 22964  006008  6FDD               	movwf	(??_validateRemoteSerialNumber+5)& (0+255),b
 22965  00600A  5037               	movf	(validateRemoteSerialNumber@mask+2)^0,w,c
 22966  00600C  15DA               	andwf	(??_validateRemoteSerialNumber+2)& (0+255),w,b
 22967  00600E  6FDE               	movwf	(??_validateRemoteSerialNumber+6)& (0+255),b
 22968  006010  5038               	movf	(validateRemoteSerialNumber@mask+3)^0,w,c
 22969  006012  15DB               	andwf	(??_validateRemoteSerialNumber+3)& (0+255),w,b
 22970  006014  6FDF               	movwf	(??_validateRemoteSerialNumber+7)& (0+255),b
 22971  006016  502E               	movf	validateRemoteSerialNumber@serial^0,w,c
 22972  006018  19DC               	xorwf	(??_validateRemoteSerialNumber+4)& (0+255),w,b
 22973  00601A  E112               	bnz	l20647
 22974  00601C  502F               	movf	(validateRemoteSerialNumber@serial+1)^0,w,c
 22975  00601E  19DD               	xorwf	(??_validateRemoteSerialNumber+5)& (0+255),w,b
 22976  006020  E10F               	bnz	l20647
 22977  006022  5030               	movf	(validateRemoteSerialNumber@serial+2)^0,w,c
 22978  006024  19DE               	xorwf	(??_validateRemoteSerialNumber+6)& (0+255),w,b
 22979  006026  E10C               	bnz	l20647
 22980  006028  5031               	movf	(validateRemoteSerialNumber@serial+3)^0,w,c
 22981  00602A  19DF               	xorwf	(??_validateRemoteSerialNumber+7)& (0+255),w,b
 22982  00602C  A4D8               	btfss	status,2,c
 22983  00602E  D008               	goto	l20647
 22984                           
 22985                           ; BSR set to: 0
 22986                           ;controlMemory_MC50.c: 70:         {;controlMemory_MC50.c: 72:             position[0]=i
      +                          ;
 22987  006030  C033  FFD9         	movff	validateRemoteSerialNumber@position,fsr2l
 22988  006034  C034  FFDA         	movff	validateRemoteSerialNumber@position+1,fsr2h
 22989  006038  C03A  FFDF         	movff	validateRemoteSerialNumber@i,indf2
 22990                           
 22991                           ; BSR set to: 0
 22992                           ;controlMemory_MC50.c: 73:             return TypeWalk;
 22993  00603C  0E02               	movlw	2
 22994  00603E  0012               	return	
 22995  006040                     l20647:
 22996                           
 22997                           ; BSR set to: 0
 22998                           ;controlMemory_MC50.c: 75:         j++;
 22999  006040  2A39               	incf	validateRemoteSerialNumber@j^0,f,c
 23000                           
 23001                           ;controlMemory_MC50.c: 76:     }
 23002  006042  2A3A               	incf	validateRemoteSerialNumber@i^0,f,c
 23003  006044                     l20649:
 23004                           
 23005                           ; BSR set to: 0
 23006  006044  51B9               	movf	(_var_sys_NVM+33)& (0+255),w,b	;volatile
 23007  006046  5C3A               	subwf	validateRemoteSerialNumber@i^0,w,c
 23008  006048  A0D8               	btfss	status,0,c
 23009  00604A  D7A6               	goto	l20633
 23010                           
 23011                           ; BSR set to: 0
 23012                           ;controlMemory_MC50.c: 78:     return NoCMD;
 23013  00604C  0E00               	movlw	0
 23014                           
 23015                           ; BSR set to: 0
 23016  00604E  0012               	return		;funcret
 23017  006050                     __end_of_validateRemoteSerialNumber:
 23018                           	callstack 0
 23019                           
 23020 ;; *************** function _saveNewSerial *****************
 23021 ;; Defined at:
 23022 ;;		line 81 in file "controlMemory_MC50.c"
 23023 ;; Parameters:    Size  Location     Type
 23024 ;;  cmdType         1    wreg     unsigned char 
 23025 ;;  tempSerial      4    0[BANK0 ] unsigned long 
 23026 ;;  position        1    4[BANK0 ] unsigned char 
 23027 ;; Auto vars:     Size  Location     Type
 23028 ;;  cmdType         1   57[COMRAM] unsigned char 
 23029 ;; Return value:  Size  Location     Type
 23030 ;;                  1    wreg      void 
 23031 ;; Registers used:
 23032 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23033 ;; Tracked objects:
 23034 ;;		On entry : 3E/1
 23035 ;;		On exit  : 0/0
 23036 ;;		Unchanged: 0/0
 23037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23038 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23039 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23040 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23041 ;;      Totals:         1       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23042 ;;Total ram usage:        8 bytes
 23043 ;; Hardware stack levels used: 1
 23044 ;; Hardware stack levels required when called: 13
 23045 ;; This function calls:
 23046 ;;		_i2c_writeNBytes
 23047 ;; This function is called by:
 23048 ;;		_controlSelectRemote
 23049 ;;		_eusartparser
 23050 ;; This function uses a non-reentrant model
 23051 ;;
 23052                           
 23053                           	psect	text77
 23054  0087F4                     __ptext77:
 23055                           	callstack 0
 23056  0087F4                     _saveNewSerial:
 23057                           	callstack 14
 23058                           
 23059                           ; BSR set to: 0
 23060                           ;incstack = 0
 23061                           ;saveNewSerial@cmdType stored from wreg
 23062  0087F4  6E3A               	movwf	saveNewSerial@cmdType^0,c
 23063                           
 23064                           ;controlMemory_MC50.c: 81: void saveNewSerial(char cmdType,unsigned long tempSerial, cha
      +                          r position);controlMemory_MC50.c: 82: {;controlMemory_MC50.c: 83:     if(cmdType==0)
 23065  0087F6  503A               	movf	saveNewSerial@cmdType^0,w,c
 23066  0087F8  A4D8               	btfss	status,2,c
 23067  0087FA  D01A               	goto	l20659
 23068                           
 23069                           ;controlMemory_MC50.c: 84:     {;controlMemory_MC50.c: 86:         i2c_writeNBytes(0x50,
      +                           (uint16_t)(0x0200 + (position * 4)), (char*)&tempSerial, 4);
 23070  0087FC  0100               	movlb	0	; () banked
 23071  0087FE  51DC               	movf	saveNewSerial@position& (0+255),w,b
 23072  008800  6FDD               	movwf	??_saveNewSerial& (0+255),b
 23073  008802  6BDE               	clrf	(??_saveNewSerial+1)& (0+255),b
 23074  008804  90D8               	bcf	status,0,c
 23075  008806  37DD               	rlcf	??_saveNewSerial& (0+255),f,b
 23076  008808  37DE               	rlcf	(??_saveNewSerial+1)& (0+255),f,b
 23077  00880A  90D8               	bcf	status,0,c
 23078  00880C  37DD               	rlcf	??_saveNewSerial& (0+255),f,b
 23079  00880E  37DE               	rlcf	(??_saveNewSerial+1)& (0+255),f,b
 23080  008810  0E00               	movlw	0
 23081  008812  25DD               	addwf	??_saveNewSerial& (0+255),w,b
 23082  008814  6E22               	movwf	i2c_writeNBytes@reg^0,c
 23083  008816  0E02               	movlw	2
 23084  008818  21DE               	addwfc	(??_saveNewSerial+1)& (0+255),w,b
 23085  00881A  6E23               	movwf	(i2c_writeNBytes@reg+1)^0,c
 23086  00881C  0ED8               	movlw	low saveNewSerial@tempSerial
 23087  00881E  6E24               	movwf	i2c_writeNBytes@data^0,c
 23088  008820  0E00               	movlw	0
 23089  008822  6E26               	movwf	(i2c_writeNBytes@len+1)^0,c
 23090  008824  0E04               	movlw	4
 23091  008826  6E25               	movwf	i2c_writeNBytes@len^0,c
 23092  008828  0E50               	movlw	80
 23093  00882A  EC88  F043         	call	_i2c_writeNBytes
 23094                           
 23095                           ;controlMemory_MC50.c: 87:     }
 23096  00882E  0012               	return	
 23097  008830                     l20659:
 23098                           
 23099                           ;controlMemory_MC50.c: 89:     {;controlMemory_MC50.c: 91:         i2c_writeNBytes(0x50,
      +                           (uint16_t)(0x0500 + (position * 4)), (char*)&tempSerial, 4);
 23100  008830  0100               	movlb	0	; () banked
 23101  008832  51DC               	movf	saveNewSerial@position& (0+255),w,b
 23102  008834  6FDD               	movwf	??_saveNewSerial& (0+255),b
 23103  008836  6BDE               	clrf	(??_saveNewSerial+1)& (0+255),b
 23104  008838  90D8               	bcf	status,0,c
 23105  00883A  37DD               	rlcf	??_saveNewSerial& (0+255),f,b
 23106  00883C  37DE               	rlcf	(??_saveNewSerial+1)& (0+255),f,b
 23107  00883E  90D8               	bcf	status,0,c
 23108  008840  37DD               	rlcf	??_saveNewSerial& (0+255),f,b
 23109  008842  37DE               	rlcf	(??_saveNewSerial+1)& (0+255),f,b
 23110  008844  0E00               	movlw	0
 23111  008846  25DD               	addwf	??_saveNewSerial& (0+255),w,b
 23112  008848  6E22               	movwf	i2c_writeNBytes@reg^0,c
 23113  00884A  0E05               	movlw	5
 23114  00884C  21DE               	addwfc	(??_saveNewSerial+1)& (0+255),w,b
 23115  00884E  6E23               	movwf	(i2c_writeNBytes@reg+1)^0,c
 23116  008850  0ED8               	movlw	low saveNewSerial@tempSerial
 23117  008852  6E24               	movwf	i2c_writeNBytes@data^0,c
 23118  008854  0E00               	movlw	0
 23119  008856  6E26               	movwf	(i2c_writeNBytes@len+1)^0,c
 23120  008858  0E04               	movlw	4
 23121  00885A  6E25               	movwf	i2c_writeNBytes@len^0,c
 23122  00885C  0E50               	movlw	80
 23123  00885E  EC88  F043         	call	_i2c_writeNBytes
 23124  008862  0012               	return		;funcret
 23125  008864                     __end_of_saveNewSerial:
 23126                           	callstack 0
 23127                           
 23128 ;; *************** function _read_eusartparser *****************
 23129 ;; Defined at:
 23130 ;;		line 12 in file "eusartparser.c"
 23131 ;; Parameters:    Size  Location     Type
 23132 ;;  package         2   23[COMRAM] PTR struct package_t
 23133 ;;		 -> main@package(7), 
 23134 ;; Auto vars:     Size  Location     Type
 23135 ;;		None
 23136 ;; Return value:  Size  Location     Type
 23137 ;;                  1    wreg      void 
 23138 ;; Registers used:
 23139 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 23140 ;; Tracked objects:
 23141 ;;		On entry : 3F/0
 23142 ;;		On exit  : 0/0
 23143 ;;		Unchanged: 0/0
 23144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23145 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23147 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23148 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23149 ;;Total ram usage:        4 bytes
 23150 ;; Hardware stack levels used: 1
 23151 ;; Hardware stack levels required when called: 6
 23152 ;; This function calls:
 23153 ;;		_write_package
 23154 ;; This function is called by:
 23155 ;;		_eusartparser
 23156 ;; This function uses a non-reentrant model
 23157 ;;
 23158                           
 23159                           	psect	text78
 23160  0028D8                     __ptext78:
 23161                           	callstack 0
 23162  0028D8                     _read_eusartparser:
 23163                           	callstack 23
 23164                           
 23165                           ; BSR set to: 0
 23166                           ;eusartparser.c: 13:         switch(package->address){
 23167                           
 23168                           ;incstack = 0
 23169  0028D8  D23A               	goto	l27289
 23170  0028DA                     l27153:
 23171                           
 23172                           ; BSR set to: 0
 23173                           ;eusartparser.c: 18:                 package->data.data8[1]=var_sys_NVM.decelarationClos
      +                          e;
 23174  0028DA  EE20 F003          	lfsr	2,3
 23175  0028DE  5018               	movf	read_eusartparser@package^0,w,c
 23176  0028E0  26D9               	addwf	fsr2l,f,c
 23177  0028E2  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23178  0028E4  22DA               	addwfc	fsr2h,f,c
 23179  0028E6  C099  FFDF         	movff	_var_sys_NVM+1,indf2	;volatile
 23180                           
 23181                           ;eusartparser.c: 19:                 package->data.data8[0]=var_sys_NVM.decelarationOpen
      +                          ;
 23182  0028EA  EE20 F002          	lfsr	2,2
 23183  0028EE  5018               	movf	read_eusartparser@package^0,w,c
 23184  0028F0  26D9               	addwf	fsr2l,f,c
 23185  0028F2  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23186  0028F4  22DA               	addwfc	fsr2h,f,c
 23187  0028F6  C098  FFDF         	movff	_var_sys_NVM,indf2	;volatile
 23188  0028FA                     l27155:
 23189                           
 23190                           ; BSR set to: 0
 23191                           ;eusartparser.c: 20:                 write_package(*package);
 23192  0028FA  C018  FFD9         	movff	read_eusartparser@package,fsr2l
 23193  0028FE  C019  FFDA         	movff	read_eusartparser@package+1,fsr2h
 23194  002902  EE00  F011         	lfsr	0,write_package@package
 23195  002906  0E06               	movlw	6
 23196  002908                     u33101:
 23197  002908  CFDB FFEB          	movff	plusw2,plusw0
 23198  00290C  06E8               	decf	wreg,f,c
 23199  00290E  E2FC               	bc	u33101
 23200  002910  ECA9  F04A         	call	_write_package	;wreg free
 23201                           
 23202                           ;eusartparser.c: 21:                 break;
 23203  002914  0012               	return	
 23204  002916                     l27157:
 23205                           
 23206                           ; BSR set to: 0
 23207                           ;eusartparser.c: 25:                 package->data.data8[1]=var_sys_NVM.motorSensitivity
      +                          ;
 23208  002916  EE20 F003          	lfsr	2,3
 23209  00291A  5018               	movf	read_eusartparser@package^0,w,c
 23210  00291C  26D9               	addwf	fsr2l,f,c
 23211  00291E  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23212  002920  22DA               	addwfc	fsr2h,f,c
 23213  002922  C09B  FFDF         	movff	_var_sys_NVM+3,indf2	;volatile
 23214                           
 23215                           ;eusartparser.c: 26:                 package->data.data8[0]=var_sys_NVM.motorPower;
 23216  002926  EE20 F002          	lfsr	2,2
 23217  00292A  5018               	movf	read_eusartparser@package^0,w,c
 23218  00292C  26D9               	addwf	fsr2l,f,c
 23219  00292E  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23220  002930  22DA               	addwfc	fsr2h,f,c
 23221  002932  C09A  FFDF         	movff	_var_sys_NVM+2,indf2	;volatile
 23222  002936  D7E1               	goto	l27155
 23223  002938                     l27161:
 23224                           
 23225                           ; BSR set to: 0
 23226                           ;eusartparser.c: 32:                 package->data.data8[1]=var_sys_NVM.walkTime;
 23227  002938  EE20 F003          	lfsr	2,3
 23228  00293C  5018               	movf	read_eusartparser@package^0,w,c
 23229  00293E  26D9               	addwf	fsr2l,f,c
 23230  002940  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23231  002942  22DA               	addwfc	fsr2h,f,c
 23232  002944  C09C  FFDF         	movff	_var_sys_NVM+4,indf2	;volatile
 23233  002948  D117               	goto	L99
 23234  00294A                     l27165:
 23235                           
 23236                           ; BSR set to: 0
 23237                           ;eusartparser.c: 40:                 package->data.data8[1]=var_sys_NVM.autoTimeWalkClos
      +                          e;
 23238  00294A  EE20 F003          	lfsr	2,3
 23239  00294E  5018               	movf	read_eusartparser@package^0,w,c
 23240  002950  26D9               	addwf	fsr2l,f,c
 23241  002952  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23242  002954  22DA               	addwfc	fsr2h,f,c
 23243  002956  C09E  FFDF         	movff	_var_sys_NVM+6,indf2	;volatile
 23244                           
 23245                           ;eusartparser.c: 41:                 package->data.data8[0]=var_sys_NVM.autoTimeFullClos
      +                          e;
 23246  00295A  EE20 F002          	lfsr	2,2
 23247  00295E  5018               	movf	read_eusartparser@package^0,w,c
 23248  002960  26D9               	addwf	fsr2l,f,c
 23249  002962  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23250  002964  22DA               	addwfc	fsr2h,f,c
 23251  002966  C09D  FFDF         	movff	_var_sys_NVM+5,indf2	;volatile
 23252  00296A  D7C7               	goto	l27155
 23253  00296C                     l27169:
 23254                           
 23255                           ; BSR set to: 0
 23256                           ;eusartparser.c: 48:                 package->data.data8[1]=var_sys_NVM.photoCellInOpen;
 23257  00296C  EE20 F003          	lfsr	2,3
 23258  002970  5018               	movf	read_eusartparser@package^0,w,c
 23259  002972  26D9               	addwf	fsr2l,f,c
 23260  002974  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23261  002976  22DA               	addwfc	fsr2h,f,c
 23262  002978  C0A0  FFDF         	movff	_var_sys_NVM+8,indf2	;volatile
 23263                           
 23264                           ;eusartparser.c: 49:                 package->data.data8[0]=var_sys_NVM.photoCellIsON;
 23265  00297C  EE20 F002          	lfsr	2,2
 23266  002980  5018               	movf	read_eusartparser@package^0,w,c
 23267  002982  26D9               	addwf	fsr2l,f,c
 23268  002984  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23269  002986  22DA               	addwfc	fsr2h,f,c
 23270  002988  C09F  FFDF         	movff	_var_sys_NVM+7,indf2	;volatile
 23271  00298C  D7B6               	goto	l27155
 23272  00298E                     l27173:
 23273                           
 23274                           ; BSR set to: 0
 23275                           ;eusartparser.c: 55:                 package->data.data8[1]=var_sys_NVM.securityBandType
      +                          ;
 23276  00298E  EE20 F003          	lfsr	2,3
 23277  002992  5018               	movf	read_eusartparser@package^0,w,c
 23278  002994  26D9               	addwf	fsr2l,f,c
 23279  002996  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23280  002998  22DA               	addwfc	fsr2h,f,c
 23281  00299A  C0A2  FFDF         	movff	_var_sys_NVM+10,indf2	;volatile
 23282                           
 23283                           ;eusartparser.c: 56:                 package->data.data8[0]=var_sys_NVM.securityBandIsON
      +                          ;
 23284  00299E  EE20 F002          	lfsr	2,2
 23285  0029A2  5018               	movf	read_eusartparser@package^0,w,c
 23286  0029A4  26D9               	addwf	fsr2l,f,c
 23287  0029A6  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23288  0029A8  22DA               	addwfc	fsr2h,f,c
 23289  0029AA  C0A1  FFDF         	movff	_var_sys_NVM+9,indf2	;volatile
 23290  0029AE  D7A5               	goto	l27155
 23291  0029B0                     l27177:
 23292                           
 23293                           ; BSR set to: 0
 23294                           ;eusartparser.c: 62:                 package->data.data8[1]=var_sys_NVM.securityBandInOp
      +                          en;
 23295  0029B0  EE20 F003          	lfsr	2,3
 23296  0029B4  5018               	movf	read_eusartparser@package^0,w,c
 23297  0029B6  26D9               	addwf	fsr2l,f,c
 23298  0029B8  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23299  0029BA  22DA               	addwfc	fsr2h,f,c
 23300  0029BC  C0A3  FFDF         	movff	_var_sys_NVM+11,indf2	;volatile
 23301  0029C0  D0DB               	goto	L99
 23302  0029C2                     l27181:
 23303                           
 23304                           ; BSR set to: 0
 23305                           ;eusartparser.c: 69:                 package->data.data8[1]=var_sys_NVM.operationMode;
 23306  0029C2  EE20 F003          	lfsr	2,3
 23307  0029C6  5018               	movf	read_eusartparser@package^0,w,c
 23308  0029C8  26D9               	addwf	fsr2l,f,c
 23309  0029CA  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23310  0029CC  22DA               	addwfc	fsr2h,f,c
 23311  0029CE  C0A4  FFDF         	movff	_var_sys_NVM+12,indf2	;volatile
 23312  0029D2  D0D2               	goto	L99
 23313  0029D4                     l27185:
 23314                           
 23315                           ; BSR set to: 0
 23316                           ;eusartparser.c: 76:                 package->data.data8[1]=var_sys_NVM.flashLightMode;
 23317  0029D4  EE20 F003          	lfsr	2,3
 23318  0029D8  5018               	movf	read_eusartparser@package^0,w,c
 23319  0029DA  26D9               	addwf	fsr2l,f,c
 23320  0029DC  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23321  0029DE  22DA               	addwfc	fsr2h,f,c
 23322  0029E0  C0A5  FFDF         	movff	_var_sys_NVM+13,indf2	;volatile
 23323  0029E4  D0C9               	goto	L99
 23324  0029E6                     l27189:
 23325                           
 23326                           ; BSR set to: 0
 23327                           ;eusartparser.c: 83:                 package->data.data8[1]=var_sys_NVM.programmingDista
      +                          nce;
 23328  0029E6  EE20 F003          	lfsr	2,3
 23329  0029EA  5018               	movf	read_eusartparser@package^0,w,c
 23330  0029EC  26D9               	addwf	fsr2l,f,c
 23331  0029EE  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23332  0029F0  22DA               	addwfc	fsr2h,f,c
 23333  0029F2  C0A6  FFDF         	movff	_var_sys_NVM+14,indf2	;volatile
 23334  0029F6  D0C0               	goto	L99
 23335  0029F8                     l27193:
 23336                           
 23337                           ; BSR set to: 0
 23338                           ;eusartparser.c: 90:                 package->data.data8[1]=var_sys_NVM.decelarationSens
      +                          ivity;
 23339  0029F8  EE20 F003          	lfsr	2,3
 23340  0029FC  5018               	movf	read_eusartparser@package^0,w,c
 23341  0029FE  26D9               	addwf	fsr2l,f,c
 23342  002A00  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23343  002A02  22DA               	addwfc	fsr2h,f,c
 23344  002A04  C0A7  FFDF         	movff	_var_sys_NVM+15,indf2	;volatile
 23345  002A08  D0B7               	goto	L99
 23346  002A0A                     l27197:
 23347                           
 23348                           ; BSR set to: 0
 23349                           ;eusartparser.c: 98:                 package->data.data8[1]=var_sys_NVM.homemPresente;
 23350  002A0A  EE20 F003          	lfsr	2,3
 23351  002A0E  5018               	movf	read_eusartparser@package^0,w,c
 23352  002A10  26D9               	addwf	fsr2l,f,c
 23353  002A12  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23354  002A14  22DA               	addwfc	fsr2h,f,c
 23355  002A16  C0A8  FFDF         	movff	_var_sys_NVM+16,indf2	;volatile
 23356  002A1A  D0AE               	goto	L99
 23357  002A1C                     l27201:
 23358                           
 23359                           ; BSR set to: 0
 23360                           ;eusartparser.c: 106:                 package->data.data8[1]=var_sys_NVM.logicDigital;
 23361  002A1C  EE20 F003          	lfsr	2,3
 23362  002A20  5018               	movf	read_eusartparser@package^0,w,c
 23363  002A22  26D9               	addwf	fsr2l,f,c
 23364  002A24  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23365  002A26  22DA               	addwfc	fsr2h,f,c
 23366  002A28  C0A9  FFDF         	movff	_var_sys_NVM+17,indf2	;volatile
 23367  002A2C  D0A5               	goto	L99
 23368  002A2E                     l27205:
 23369                           
 23370                           ; BSR set to: 0
 23371                           ;eusartparser.c: 113:                 package->data.data8[1]=var_sys_NVM.softstop;
 23372  002A2E  EE20 F003          	lfsr	2,3
 23373  002A32  5018               	movf	read_eusartparser@package^0,w,c
 23374  002A34  26D9               	addwf	fsr2l,f,c
 23375  002A36  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23376  002A38  22DA               	addwfc	fsr2h,f,c
 23377  002A3A  C0AB  FFDF         	movff	_var_sys_NVM+19,indf2	;volatile
 23378                           
 23379                           ;eusartparser.c: 114:                 package->data.data8[0]=var_sys_NVM.softStart;
 23380  002A3E  EE20 F002          	lfsr	2,2
 23381  002A42  5018               	movf	read_eusartparser@package^0,w,c
 23382  002A44  26D9               	addwf	fsr2l,f,c
 23383  002A46  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23384  002A48  22DA               	addwfc	fsr2h,f,c
 23385  002A4A  C0AA  FFDF         	movff	_var_sys_NVM+18,indf2	;volatile
 23386  002A4E  D755               	goto	l27155
 23387  002A50                     l27209:
 23388                           
 23389                           ; BSR set to: 0
 23390                           ;eusartparser.c: 121:                 package->data.data8[1]=var_sys_NVM.ligthTime;
 23391  002A50  EE20 F003          	lfsr	2,3
 23392  002A54  5018               	movf	read_eusartparser@package^0,w,c
 23393  002A56  26D9               	addwf	fsr2l,f,c
 23394  002A58  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23395  002A5A  22DA               	addwfc	fsr2h,f,c
 23396  002A5C  C0AC  FFDF         	movff	_var_sys_NVM+20,indf2	;volatile
 23397  002A60  D08B               	goto	L99
 23398  002A62                     l27213:
 23399                           
 23400                           ; BSR set to: 0
 23401                           ;eusartparser.c: 129:                 package->data.data8[1]=var_sys_NVM.folow_me;
 23402  002A62  EE20 F003          	lfsr	2,3
 23403  002A66  5018               	movf	read_eusartparser@package^0,w,c
 23404  002A68  26D9               	addwf	fsr2l,f,c
 23405  002A6A  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23406  002A6C  22DA               	addwfc	fsr2h,f,c
 23407  002A6E  C0AD  FFDF         	movff	_var_sys_NVM+21,indf2	;volatile
 23408  002A72  D082               	goto	L99
 23409  002A74                     l27217:
 23410                           
 23411                           ; BSR set to: 0
 23412                           ;eusartparser.c: 136:                 package->data.data8[1]=var_sys_NVM.Stopboton;
 23413  002A74  EE20 F003          	lfsr	2,3
 23414  002A78  5018               	movf	read_eusartparser@package^0,w,c
 23415  002A7A  26D9               	addwf	fsr2l,f,c
 23416  002A7C  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23417  002A7E  22DA               	addwfc	fsr2h,f,c
 23418  002A80  C0AE  FFDF         	movff	_var_sys_NVM+22,indf2	;volatile
 23419  002A84  D079               	goto	L99
 23420  002A86                     l27221:
 23421                           
 23422                           ; BSR set to: 0
 23423                           ;eusartparser.c: 143:                 package->data.data8[1]=var_sys_NVM.electricBrake;
 23424  002A86  EE20 F003          	lfsr	2,3
 23425  002A8A  5018               	movf	read_eusartparser@package^0,w,c
 23426  002A8C  26D9               	addwf	fsr2l,f,c
 23427  002A8E  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23428  002A90  22DA               	addwfc	fsr2h,f,c
 23429  002A92  C0AF  FFDF         	movff	_var_sys_NVM+23,indf2	;volatile
 23430  002A96  D070               	goto	L99
 23431  002A98                     l27225:
 23432                           
 23433                           ; BSR set to: 0
 23434                           ;eusartparser.c: 150:                 package->data.data8[1]=var_sys_NVM.velocityDecelar
      +                          ation;
 23435  002A98  EE20 F003          	lfsr	2,3
 23436  002A9C  5018               	movf	read_eusartparser@package^0,w,c
 23437  002A9E  26D9               	addwf	fsr2l,f,c
 23438  002AA0  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23439  002AA2  22DA               	addwfc	fsr2h,f,c
 23440  002AA4  C0B0  FFDF         	movff	_var_sys_NVM+24,indf2	;volatile
 23441  002AA8  D067               	goto	L99
 23442  002AAA                     l27229:
 23443                           
 23444                           ; BSR set to: 0
 23445                           ;eusartparser.c: 158:                 package->data.data8[1]=var_sys_NVM.flashRGBMode;
 23446  002AAA  EE20 F003          	lfsr	2,3
 23447  002AAE  5018               	movf	read_eusartparser@package^0,w,c
 23448  002AB0  26D9               	addwf	fsr2l,f,c
 23449  002AB2  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23450  002AB4  22DA               	addwfc	fsr2h,f,c
 23451  002AB6  C0B1  FFDF         	movff	_var_sys_NVM+25,indf2	;volatile
 23452  002ABA  D05E               	goto	L99
 23453  002ABC                     l27233:
 23454                           
 23455                           ; BSR set to: 0
 23456                           ;eusartparser.c: 165:                 package->data.data8[1]=var_sys_NVM.Direction_motor
      +                          ;
 23457  002ABC  EE20 F003          	lfsr	2,3
 23458  002AC0  5018               	movf	read_eusartparser@package^0,w,c
 23459  002AC2  26D9               	addwf	fsr2l,f,c
 23460  002AC4  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23461  002AC6  22DA               	addwfc	fsr2h,f,c
 23462  002AC8  C0B3  FFDF         	movff	_var_sys_NVM+27,indf2	;volatile
 23463  002ACC  D055               	goto	L99
 23464  002ACE                     l27237:
 23465                           
 23466                           ; BSR set to: 0
 23467                           ;eusartparser.c: 172:                 package->data.data8[1]=var_sys_NVM.TypeofMotor;
 23468  002ACE  EE20 F003          	lfsr	2,3
 23469  002AD2  5018               	movf	read_eusartparser@package^0,w,c
 23470  002AD4  26D9               	addwf	fsr2l,f,c
 23471  002AD6  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23472  002AD8  22DA               	addwfc	fsr2h,f,c
 23473  002ADA  C0B4  FFDF         	movff	_var_sys_NVM+28,indf2	;volatile
 23474  002ADE  D04C               	goto	L99
 23475  002AE0                     l27241:
 23476                           
 23477                           ; BSR set to: 0
 23478                           ;eusartparser.c: 179:                 package->data.data8[1]=var_sys_NVM.positionRemotes
      +                          Walk;
 23479  002AE0  EE20 F003          	lfsr	2,3
 23480  002AE4  5018               	movf	read_eusartparser@package^0,w,c
 23481  002AE6  26D9               	addwf	fsr2l,f,c
 23482  002AE8  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23483  002AEA  22DA               	addwfc	fsr2h,f,c
 23484  002AEC  C0B9  FFDF         	movff	_var_sys_NVM+33,indf2	;volatile
 23485                           
 23486                           ;eusartparser.c: 180:                 package->data.data8[0]=var_sys_NVM.positionRemotes
      +                          Full;
 23487  002AF0  EE20 F002          	lfsr	2,2
 23488  002AF4  5018               	movf	read_eusartparser@package^0,w,c
 23489  002AF6  26D9               	addwf	fsr2l,f,c
 23490  002AF8  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23491  002AFA  22DA               	addwfc	fsr2h,f,c
 23492  002AFC  C0B8  FFDF         	movff	_var_sys_NVM+32,indf2	;volatile
 23493  002B00  D6FC               	goto	l27155
 23494  002B02                     l27245:
 23495                           
 23496                           ; BSR set to: 0
 23497                           ;eusartparser.c: 186:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.c
      +                          ounterMoves))+1);
 23498  002B02  EE20  F0BC         	lfsr	2,_var_sys_NVM+36
 23499  002B06  EE10 F002          	lfsr	1,2
 23500  002B0A  5018               	movf	read_eusartparser@package^0,w,c
 23501  002B0C  26E1               	addwf	fsr1l,f,c
 23502  002B0E  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23503  002B10  22E2               	addwfc	fsr1h,f,c
 23504  002B12  CFDE FFE6          	movff	postinc2,postinc1
 23505  002B16  CFDD FFE5          	movff	postdec2,postdec1
 23506                           
 23507                           ; BSR set to: 0
 23508                           ;eusartparser.c: 187:                 write_package(*package);
 23509  002B1A  C018  FFD9         	movff	read_eusartparser@package,fsr2l
 23510  002B1E  C019  FFDA         	movff	read_eusartparser@package+1,fsr2h
 23511  002B22  EE00  F011         	lfsr	0,write_package@package
 23512  002B26  0E06               	movlw	6
 23513  002B28                     u33111:
 23514  002B28  CFDB FFEB          	movff	plusw2,plusw0
 23515  002B2C  06E8               	decf	wreg,f,c
 23516  002B2E  E2FC               	bc	u33111
 23517  002B30  ECA9  F04A         	call	_write_package	;wreg free
 23518                           
 23519                           ;eusartparser.c: 188:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.c
      +                          ounterMoves))+0);
 23520  002B34  EE20  F0BA         	lfsr	2,_var_sys_NVM+34
 23521  002B38  EE10 F002          	lfsr	1,2
 23522  002B3C  5018               	movf	read_eusartparser@package^0,w,c
 23523  002B3E  26E1               	addwf	fsr1l,f,c
 23524  002B40  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23525  002B42  22E2               	addwfc	fsr1h,f,c
 23526  002B44  CFDE FFE6          	movff	postinc2,postinc1
 23527  002B48  CFDD FFE5          	movff	postdec2,postdec1
 23528                           
 23529                           ;eusartparser.c: 189:                 write_package(*package);
 23530  002B4C  C018  FFD9         	movff	read_eusartparser@package,fsr2l
 23531  002B50  C019  FFDA         	movff	read_eusartparser@package+1,fsr2h
 23532  002B54  EE00  F011         	lfsr	0,write_package@package
 23533  002B58  0E06               	movlw	6
 23534  002B5A                     u33121:
 23535  002B5A  CFDB FFEB          	movff	plusw2,plusw0
 23536  002B5E  06E8               	decf	wreg,f,c
 23537  002B60  E2FC               	bc	u33121
 23538  002B62  ECA9  F04A         	call	_write_package	;wreg free
 23539                           
 23540                           ;eusartparser.c: 190:                 break;
 23541  002B66  0012               	return	
 23542  002B68                     l27251:
 23543                           
 23544                           ; BSR set to: 0
 23545                           ;eusartparser.c: 194:                 package->data.data8[1]=var_sys_NVM.OnlyRollingCode
      +                          ;
 23546  002B68  EE20 F003          	lfsr	2,3
 23547  002B6C  5018               	movf	read_eusartparser@package^0,w,c
 23548  002B6E  26D9               	addwf	fsr2l,f,c
 23549  002B70  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23550  002B72  22DA               	addwfc	fsr2h,f,c
 23551  002B74  C0BE  FFDF         	movff	_var_sys_NVM+38,indf2	;volatile
 23552  002B78                     L99:
 23553                           
 23554                           ;eusartparser.c: 195:                 package->data.data8[0]=0x00;
 23555  002B78  EE20 F002          	lfsr	2,2
 23556  002B7C  5018               	movf	read_eusartparser@package^0,w,c
 23557  002B7E  26D9               	addwf	fsr2l,f,c
 23558  002B80  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23559  002B82  22DA               	addwfc	fsr2h,f,c
 23560  002B84  0E00               	movlw	0
 23561  002B86  6EDF               	movwf	indf2,c
 23562  002B88  D6B8               	goto	l27155
 23563  002B8A                     l27255:
 23564                           
 23565                           ; BSR set to: 0
 23566                           ;eusartparser.c: 201:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.l
      +                          earningCurrentDecelarationClose))+1);
 23567  002B8A  EE20  F0C2         	lfsr	2,_var_sys_NVM+42
 23568  002B8E  EE10 F002          	lfsr	1,2
 23569  002B92  5018               	movf	read_eusartparser@package^0,w,c
 23570  002B94  26E1               	addwf	fsr1l,f,c
 23571  002B96  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23572  002B98  22E2               	addwfc	fsr1h,f,c
 23573  002B9A  CFDE FFE6          	movff	postinc2,postinc1
 23574  002B9E  CFDD FFE5          	movff	postdec2,postdec1
 23575                           
 23576                           ; BSR set to: 0
 23577                           ;eusartparser.c: 202:                 write_package(*package);
 23578  002BA2  C018  FFD9         	movff	read_eusartparser@package,fsr2l
 23579  002BA6  C019  FFDA         	movff	read_eusartparser@package+1,fsr2h
 23580  002BAA  EE00  F011         	lfsr	0,write_package@package
 23581  002BAE  0E06               	movlw	6
 23582  002BB0                     u33131:
 23583  002BB0  CFDB FFEB          	movff	plusw2,plusw0
 23584  002BB4  06E8               	decf	wreg,f,c
 23585  002BB6  E2FC               	bc	u33131
 23586  002BB8  ECA9  F04A         	call	_write_package	;wreg free
 23587                           
 23588                           ;eusartparser.c: 203:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.l
      +                          earningCurrentDecelarationClose))+0);
 23589  002BBC  EE20  F0C0         	lfsr	2,_var_sys_NVM+40
 23590  002BC0  EE10 F002          	lfsr	1,2
 23591  002BC4  5018               	movf	read_eusartparser@package^0,w,c
 23592  002BC6  26E1               	addwf	fsr1l,f,c
 23593  002BC8  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23594  002BCA  22E2               	addwfc	fsr1h,f,c
 23595  002BCC  CFDE FFE6          	movff	postinc2,postinc1
 23596  002BD0  CFDD FFE5          	movff	postdec2,postdec1
 23597                           
 23598                           ;eusartparser.c: 204:                 write_package(*package);
 23599  002BD4  C018  FFD9         	movff	read_eusartparser@package,fsr2l
 23600  002BD8  C019  FFDA         	movff	read_eusartparser@package+1,fsr2h
 23601  002BDC  EE00  F011         	lfsr	0,write_package@package
 23602  002BE0  0E06               	movlw	6
 23603  002BE2                     u33141:
 23604  002BE2  CFDB FFEB          	movff	plusw2,plusw0
 23605  002BE6  06E8               	decf	wreg,f,c
 23606  002BE8  E2FC               	bc	u33141
 23607  002BEA  ECA9  F04A         	call	_write_package	;wreg free
 23608                           
 23609                           ;eusartparser.c: 205:                 break;
 23610  002BEE  0012               	return	
 23611  002BF0                     l27261:
 23612                           
 23613                           ; BSR set to: 0
 23614                           ;eusartparser.c: 209:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.l
      +                          earningCurrentDecelarationOpen))+1);
 23615  002BF0  EE20  F0C6         	lfsr	2,_var_sys_NVM+46
 23616  002BF4  EE10 F002          	lfsr	1,2
 23617  002BF8  5018               	movf	read_eusartparser@package^0,w,c
 23618  002BFA  26E1               	addwf	fsr1l,f,c
 23619  002BFC  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23620  002BFE  22E2               	addwfc	fsr1h,f,c
 23621  002C00  CFDE FFE6          	movff	postinc2,postinc1
 23622  002C04  CFDD FFE5          	movff	postdec2,postdec1
 23623                           
 23624                           ; BSR set to: 0
 23625                           ;eusartparser.c: 210:                 write_package(*package);
 23626  002C08  C018  FFD9         	movff	read_eusartparser@package,fsr2l
 23627  002C0C  C019  FFDA         	movff	read_eusartparser@package+1,fsr2h
 23628  002C10  EE00  F011         	lfsr	0,write_package@package
 23629  002C14  0E06               	movlw	6
 23630  002C16                     u33151:
 23631  002C16  CFDB FFEB          	movff	plusw2,plusw0
 23632  002C1A  06E8               	decf	wreg,f,c
 23633  002C1C  E2FC               	bc	u33151
 23634  002C1E  ECA9  F04A         	call	_write_package	;wreg free
 23635                           
 23636                           ;eusartparser.c: 211:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.l
      +                          earningCurrentDecelarationOpen))+0);
 23637  002C22  EE20  F0C4         	lfsr	2,_var_sys_NVM+44
 23638  002C26  EE10 F002          	lfsr	1,2
 23639  002C2A  5018               	movf	read_eusartparser@package^0,w,c
 23640  002C2C  26E1               	addwf	fsr1l,f,c
 23641  002C2E  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23642  002C30  22E2               	addwfc	fsr1h,f,c
 23643  002C32  CFDE FFE6          	movff	postinc2,postinc1
 23644  002C36  CFDD FFE5          	movff	postdec2,postdec1
 23645                           
 23646                           ;eusartparser.c: 212:                 write_package(*package);
 23647  002C3A  C018  FFD9         	movff	read_eusartparser@package,fsr2l
 23648  002C3E  C019  FFDA         	movff	read_eusartparser@package+1,fsr2h
 23649  002C42  EE00  F011         	lfsr	0,write_package@package
 23650  002C46  0E06               	movlw	6
 23651  002C48                     u33161:
 23652  002C48  CFDB FFEB          	movff	plusw2,plusw0
 23653  002C4C  06E8               	decf	wreg,f,c
 23654  002C4E  E2FC               	bc	u33161
 23655  002C50  ECA9  F04A         	call	_write_package	;wreg free
 23656                           
 23657                           ;eusartparser.c: 213:                 break;
 23658  002C54  0012               	return	
 23659  002C56                     l27267:
 23660                           
 23661                           ; BSR set to: 0
 23662                           ;eusartparser.c: 217:                 package->data.data16=var_sys_NVM.learningCurrentNo
      +                          rmalClose;
 23663  002C56  EE20 F002          	lfsr	2,2
 23664  002C5A  5018               	movf	read_eusartparser@package^0,w,c
 23665  002C5C  26D9               	addwf	fsr2l,f,c
 23666  002C5E  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23667  002C60  22DA               	addwfc	fsr2h,f,c
 23668  002C62  C0C8  FFDE         	movff	_var_sys_NVM+48,postinc2	;volatile
 23669  002C66  C0C9  FFDD         	movff	_var_sys_NVM+49,postdec2	;volatile
 23670  002C6A  D647               	goto	l27155
 23671  002C6C                     l27271:
 23672                           
 23673                           ; BSR set to: 0
 23674                           ;eusartparser.c: 223:                 package->data.data16=var_sys_NVM.learningCurrentNo
      +                          rmalOpen;
 23675  002C6C  EE20 F002          	lfsr	2,2
 23676  002C70  5018               	movf	read_eusartparser@package^0,w,c
 23677  002C72  26D9               	addwf	fsr2l,f,c
 23678  002C74  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23679  002C76  22DA               	addwfc	fsr2h,f,c
 23680  002C78  C0CA  FFDE         	movff	_var_sys_NVM+50,postinc2	;volatile
 23681  002C7C  C0CB  FFDD         	movff	_var_sys_NVM+51,postdec2	;volatile
 23682  002C80  D63C               	goto	l27155
 23683  002C82                     l27275:
 23684                           
 23685                           ; BSR set to: 0
 23686                           ;eusartparser.c: 229:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.l
      +                          earningTimeToOpen))+1);
 23687  002C82  EE20  F0CE         	lfsr	2,_var_sys_NVM+54
 23688  002C86  EE10 F002          	lfsr	1,2
 23689  002C8A  5018               	movf	read_eusartparser@package^0,w,c
 23690  002C8C  26E1               	addwf	fsr1l,f,c
 23691  002C8E  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23692  002C90  22E2               	addwfc	fsr1h,f,c
 23693  002C92  CFDE FFE6          	movff	postinc2,postinc1
 23694  002C96  CFDD FFE5          	movff	postdec2,postdec1
 23695                           
 23696                           ; BSR set to: 0
 23697                           ;eusartparser.c: 230:                 write_package(*package);
 23698  002C9A  C018  FFD9         	movff	read_eusartparser@package,fsr2l
 23699  002C9E  C019  FFDA         	movff	read_eusartparser@package+1,fsr2h
 23700  002CA2  EE00  F011         	lfsr	0,write_package@package
 23701  002CA6  0E06               	movlw	6
 23702  002CA8                     u33171:
 23703  002CA8  CFDB FFEB          	movff	plusw2,plusw0
 23704  002CAC  06E8               	decf	wreg,f,c
 23705  002CAE  E2FC               	bc	u33171
 23706  002CB0  ECA9  F04A         	call	_write_package	;wreg free
 23707                           
 23708                           ;eusartparser.c: 231:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.l
      +                          earningTimeToOpen))+0);
 23709  002CB4  EE20  F0CC         	lfsr	2,_var_sys_NVM+52
 23710  002CB8  EE10 F002          	lfsr	1,2
 23711  002CBC  5018               	movf	read_eusartparser@package^0,w,c
 23712  002CBE  26E1               	addwf	fsr1l,f,c
 23713  002CC0  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23714  002CC2  22E2               	addwfc	fsr1h,f,c
 23715  002CC4  CFDE FFE6          	movff	postinc2,postinc1
 23716  002CC8  CFDD FFE5          	movff	postdec2,postdec1
 23717                           
 23718                           ;eusartparser.c: 232:                 write_package(*package);
 23719  002CCC  C018  FFD9         	movff	read_eusartparser@package,fsr2l
 23720  002CD0  C019  FFDA         	movff	read_eusartparser@package+1,fsr2h
 23721  002CD4  EE00  F011         	lfsr	0,write_package@package
 23722  002CD8  0E06               	movlw	6
 23723  002CDA                     u33181:
 23724  002CDA  CFDB FFEB          	movff	plusw2,plusw0
 23725  002CDE  06E8               	decf	wreg,f,c
 23726  002CE0  E2FC               	bc	u33181
 23727  002CE2  ECA9  F04A         	call	_write_package	;wreg free
 23728                           
 23729                           ;eusartparser.c: 233:                 break;
 23730  002CE6  0012               	return	
 23731  002CE8                     l27281:
 23732                           
 23733                           ; BSR set to: 0
 23734                           ;eusartparser.c: 237:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.l
      +                          earningTimeToClose))+1);
 23735  002CE8  EE20  F0D2         	lfsr	2,_var_sys_NVM+58
 23736  002CEC  EE10 F002          	lfsr	1,2
 23737  002CF0  5018               	movf	read_eusartparser@package^0,w,c
 23738  002CF2  26E1               	addwf	fsr1l,f,c
 23739  002CF4  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23740  002CF6  22E2               	addwfc	fsr1h,f,c
 23741  002CF8  CFDE FFE6          	movff	postinc2,postinc1
 23742  002CFC  CFDD FFE5          	movff	postdec2,postdec1
 23743                           
 23744                           ; BSR set to: 0
 23745                           ;eusartparser.c: 238:                 write_package(*package);
 23746  002D00  C018  FFD9         	movff	read_eusartparser@package,fsr2l
 23747  002D04  C019  FFDA         	movff	read_eusartparser@package+1,fsr2h
 23748  002D08  EE00  F011         	lfsr	0,write_package@package
 23749  002D0C  0E06               	movlw	6
 23750  002D0E                     u33191:
 23751  002D0E  CFDB FFEB          	movff	plusw2,plusw0
 23752  002D12  06E8               	decf	wreg,f,c
 23753  002D14  E2FC               	bc	u33191
 23754  002D16  ECA9  F04A         	call	_write_package	;wreg free
 23755                           
 23756                           ;eusartparser.c: 239:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.l
      +                          earningTimeToClose))+0);
 23757  002D1A  EE20  F0D0         	lfsr	2,_var_sys_NVM+56
 23758  002D1E  EE10 F002          	lfsr	1,2
 23759  002D22  5018               	movf	read_eusartparser@package^0,w,c
 23760  002D24  26E1               	addwf	fsr1l,f,c
 23761  002D26  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23762  002D28  22E2               	addwfc	fsr1h,f,c
 23763  002D2A  CFDE FFE6          	movff	postinc2,postinc1
 23764  002D2E  CFDD FFE5          	movff	postdec2,postdec1
 23765                           
 23766                           ;eusartparser.c: 240:                 write_package(*package);
 23767  002D32  C018  FFD9         	movff	read_eusartparser@package,fsr2l
 23768  002D36  C019  FFDA         	movff	read_eusartparser@package+1,fsr2h
 23769  002D3A  EE00  F011         	lfsr	0,write_package@package
 23770  002D3E  0E06               	movlw	6
 23771  002D40                     u33201:
 23772  002D40  CFDB FFEB          	movff	plusw2,plusw0
 23773  002D44  06E8               	decf	wreg,f,c
 23774  002D46  E2FC               	bc	u33201
 23775  002D48  ECA9  F04A         	call	_write_package	;wreg free
 23776                           
 23777                           ;eusartparser.c: 241:                 break;
 23778  002D4C  0012               	return	
 23779  002D4E                     l27289:
 23780                           
 23781                           ; BSR set to: 0
 23782  002D4E  EE20 F001          	lfsr	2,1
 23783  002D52  5018               	movf	read_eusartparser@package^0,w,c
 23784  002D54  26D9               	addwf	fsr2l,f,c
 23785  002D56  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23786  002D58  22DA               	addwfc	fsr2h,f,c
 23787  002D5A  50DF               	movf	indf2,w,c
 23788  002D5C  6E1A               	movwf	??_read_eusartparser^0,c
 23789  002D5E  6A1B               	clrf	(??_read_eusartparser+1)^0,c
 23790                           
 23791                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 23792                           ; Switch size 1, requested type "simple"
 23793                           ; Number of cases is 1, Range of values is 0 to 0
 23794                           ; switch strategies available:
 23795                           ; Name         Instructions Cycles
 23796                           ; simple_byte            4     3 (average)
 23797                           ;	Chosen strategy is simple_byte
 23798  002D60  501B               	movf	(??_read_eusartparser+1)^0,w,c
 23799  002D62  0A00               	xorlw	0	; case 0
 23800  002D64  A4D8               	btfss	status,2,c
 23801  002D66  0012               	return	
 23802                           
 23803                           ; BSR set to: 0
 23804                           ; Switch size 1, requested type "simple"
 23805                           ; Number of cases is 38, Range of values is 0 to 50
 23806                           ; switch strategies available:
 23807                           ; Name         Instructions Cycles
 23808                           ; simple_byte          115    58 (average)
 23809                           ;	Chosen strategy is simple_byte
 23810  002D68  501A               	movf	??_read_eusartparser^0,w,c
 23811  002D6A  0A00               	xorlw	0	; case 0
 23812  002D6C  B4D8               	btfsc	status,2,c
 23813  002D6E  D5B5               	goto	l27153
 23814  002D70  0A02               	xorlw	2	; case 2
 23815  002D72  B4D8               	btfsc	status,2,c
 23816  002D74  D5EA               	goto	l27165
 23817  002D76  0A01               	xorlw	1	; case 3
 23818  002D78  B4D8               	btfsc	status,2,c
 23819  002D7A  D66A               	goto	l27209
 23820  002D7C  0A06               	xorlw	6	; case 5
 23821  002D7E  B4D8               	btfsc	status,2,c
 23822  002D80  D5F5               	goto	l27169
 23823  002D82  0A02               	xorlw	2	; case 7
 23824  002D84  B4D8               	btfsc	status,2,c
 23825  002D86  D64A               	goto	l27201
 23826  002D88  0A0F               	xorlw	15	; case 8
 23827  002D8A  B4D8               	btfsc	status,2,c
 23828  002D8C  D68E               	goto	l27229
 23829  002D8E  0A02               	xorlw	2	; case 10
 23830  002D90  B4D8               	btfsc	status,2,c
 23831  002D92  D667               	goto	l27213
 23832  002D94  0A1A               	xorlw	26	; case 16
 23833  002D96  B4D8               	btfsc	status,2,c
 23834  002D98  D5A0               	goto	l27153
 23835  002D9A  0A01               	xorlw	1	; case 17
 23836  002D9C  B4D8               	btfsc	status,2,c
 23837  002D9E  D5BB               	goto	l27157
 23838  002DA0  0A03               	xorlw	3	; case 18
 23839  002DA2  B4D8               	btfsc	status,2,c
 23840  002DA4  D5C9               	goto	l27161
 23841  002DA6  0A01               	xorlw	1	; case 19
 23842  002DA8  B4D8               	btfsc	status,2,c
 23843  002DAA  D5CF               	goto	l27165
 23844  002DAC  0A07               	xorlw	7	; case 20
 23845  002DAE  B4D8               	btfsc	status,2,c
 23846  002DB0  D5DD               	goto	l27169
 23847  002DB2  0A01               	xorlw	1	; case 21
 23848  002DB4  B4D8               	btfsc	status,2,c
 23849  002DB6  D5EB               	goto	l27173
 23850  002DB8  0A03               	xorlw	3	; case 22
 23851  002DBA  B4D8               	btfsc	status,2,c
 23852  002DBC  D5F9               	goto	l27177
 23853  002DBE  0A01               	xorlw	1	; case 23
 23854  002DC0  B4D8               	btfsc	status,2,c
 23855  002DC2  D5FF               	goto	l27181
 23856  002DC4  0A0F               	xorlw	15	; case 24
 23857  002DC6  B4D8               	btfsc	status,2,c
 23858  002DC8  D605               	goto	l27185
 23859  002DCA  0A01               	xorlw	1	; case 25
 23860  002DCC  B4D8               	btfsc	status,2,c
 23861  002DCE  D60B               	goto	l27189
 23862  002DD0  0A03               	xorlw	3	; case 26
 23863  002DD2  B4D8               	btfsc	status,2,c
 23864  002DD4  D611               	goto	l27193
 23865  002DD6  0A01               	xorlw	1	; case 27
 23866  002DD8  B4D8               	btfsc	status,2,c
 23867  002DDA  D617               	goto	l27197
 23868  002DDC  0A07               	xorlw	7	; case 28
 23869  002DDE  B4D8               	btfsc	status,2,c
 23870  002DE0  D61D               	goto	l27201
 23871  002DE2  0A01               	xorlw	1	; case 29
 23872  002DE4  B4D8               	btfsc	status,2,c
 23873  002DE6  D623               	goto	l27205
 23874  002DE8  0A03               	xorlw	3	; case 30
 23875  002DEA  B4D8               	btfsc	status,2,c
 23876  002DEC  D631               	goto	l27209
 23877  002DEE  0A01               	xorlw	1	; case 31
 23878  002DF0  B4D8               	btfsc	status,2,c
 23879  002DF2  D637               	goto	l27213
 23880  002DF4  0A3F               	xorlw	63	; case 32
 23881  002DF6  B4D8               	btfsc	status,2,c
 23882  002DF8  D63D               	goto	l27217
 23883  002DFA  0A01               	xorlw	1	; case 33
 23884  002DFC  B4D8               	btfsc	status,2,c
 23885  002DFE  D643               	goto	l27221
 23886  002E00  0A03               	xorlw	3	; case 34
 23887  002E02  B4D8               	btfsc	status,2,c
 23888  002E04  D649               	goto	l27225
 23889  002E06  0A01               	xorlw	1	; case 35
 23890  002E08  B4D8               	btfsc	status,2,c
 23891  002E0A  D64F               	goto	l27229
 23892  002E0C  0A07               	xorlw	7	; case 36
 23893  002E0E  B4D8               	btfsc	status,2,c
 23894  002E10  D655               	goto	l27233
 23895  002E12  0A01               	xorlw	1	; case 37
 23896  002E14  B4D8               	btfsc	status,2,c
 23897  002E16  D65B               	goto	l27237
 23898  002E18  0A03               	xorlw	3	; case 38
 23899  002E1A  B4D8               	btfsc	status,2,c
 23900  002E1C  D661               	goto	l27241
 23901  002E1E  0A01               	xorlw	1	; case 39
 23902  002E20  B4D8               	btfsc	status,2,c
 23903  002E22  D66F               	goto	l27245
 23904  002E24  0A0E               	xorlw	14	; case 41
 23905  002E26  B4D8               	btfsc	status,2,c
 23906  002E28  D69F               	goto	l27251
 23907  002E2A  0A03               	xorlw	3	; case 42
 23908  002E2C  B4D8               	btfsc	status,2,c
 23909  002E2E  D6AD               	goto	l27255
 23910  002E30  0A06               	xorlw	6	; case 44
 23911  002E32  B4D8               	btfsc	status,2,c
 23912  002E34  D6DD               	goto	l27261
 23913  002E36  0A02               	xorlw	2	; case 46
 23914  002E38  B4D8               	btfsc	status,2,c
 23915  002E3A  D70D               	goto	l27267
 23916  002E3C  0A01               	xorlw	1	; case 47
 23917  002E3E  B4D8               	btfsc	status,2,c
 23918  002E40  D715               	goto	l27271
 23919  002E42  0A1F               	xorlw	31	; case 48
 23920  002E44  B4D8               	btfsc	status,2,c
 23921  002E46  D71D               	goto	l27275
 23922  002E48  0A02               	xorlw	2	; case 50
 23923  002E4A  A4D8               	btfss	status,2,c
 23924  002E4C  0012               	return	
 23925  002E4E  D74C               	goto	l27281
 23926  002E50                     __end_of_read_eusartparser:
 23927                           	callstack 0
 23928                           
 23929 ;; *************** function _write_package *****************
 23930 ;; Defined at:
 23931 ;;		line 50 in file "eusartpackage.c"
 23932 ;; Parameters:    Size  Location     Type
 23933 ;;  package         7   16[COMRAM] const struct package_t
 23934 ;; Auto vars:     Size  Location     Type
 23935 ;;		None
 23936 ;; Return value:  Size  Location     Type
 23937 ;;                  1    wreg      void 
 23938 ;; Registers used:
 23939 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23940 ;; Tracked objects:
 23941 ;;		On entry : 0/0
 23942 ;;		On exit  : 0/0
 23943 ;;		Unchanged: 0/0
 23944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23945 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23948 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23949 ;;Total ram usage:        7 bytes
 23950 ;; Hardware stack levels used: 1
 23951 ;; Hardware stack levels required when called: 5
 23952 ;; This function calls:
 23953 ;;		_EUSART1_Write
 23954 ;; This function is called by:
 23955 ;;		_read_eusartparser
 23956 ;;		_eusartparser
 23957 ;; This function uses a non-reentrant model
 23958 ;;
 23959                           
 23960                           	psect	text79
 23961  009552                     __ptext79:
 23962                           	callstack 0
 23963  009552                     _write_package:
 23964                           	callstack 24
 23965                           
 23966                           ;eusartpackage.c: 52:         if(package.valid==0)
 23967                           
 23968                           ;incstack = 0
 23969  009552  5017               	movf	(write_package@package+6)^0,w,c
 23970  009554  B4D8               	btfsc	status,2,c
 23971  009556  0012               	return	
 23972                           
 23973                           ;eusartpackage.c: 56:         EUSART1_Write(package.startbyte);
 23974  009558  5015               	movf	(write_package@package+4)^0,w,c
 23975  00955A  EC28  F049         	call	_EUSART1_Write
 23976                           
 23977                           ;eusartpackage.c: 57:         EUSART1_Write(package.functioncode);
 23978  00955E  5011               	movf	write_package@package^0,w,c
 23979  009560  EC28  F049         	call	_EUSART1_Write
 23980                           
 23981                           ;eusartpackage.c: 58:         EUSART1_Write(package.address);
 23982  009564  5012               	movf	(write_package@package+1)^0,w,c
 23983  009566  EC28  F049         	call	_EUSART1_Write
 23984                           
 23985                           ;eusartpackage.c: 59:         EUSART1_Write(package.data.data8[0]);
 23986  00956A  5013               	movf	(write_package@package+2)^0,w,c
 23987  00956C  EC28  F049         	call	_EUSART1_Write
 23988                           
 23989                           ;eusartpackage.c: 60:         EUSART1_Write(package.data.data8[1]);
 23990  009570  5014               	movf	(write_package@package+3)^0,w,c
 23991  009572  EC28  F049         	call	_EUSART1_Write
 23992                           
 23993                           ;eusartpackage.c: 61:         EUSART1_Write(package.endbyte);
 23994  009576  5016               	movf	(write_package@package+5)^0,w,c
 23995  009578  EC28  F049         	call	_EUSART1_Write
 23996  00957C  0012               	return		;funcret
 23997  00957E                     __end_of_write_package:
 23998                           	callstack 0
 23999                           
 24000 ;; *************** function _EUSART1_Write *****************
 24001 ;; Defined at:
 24002 ;;		line 173 in file "mcc_generated_files/eusart1.c"
 24003 ;; Parameters:    Size  Location     Type
 24004 ;;  txData          1    wreg     unsigned char 
 24005 ;; Auto vars:     Size  Location     Type
 24006 ;;  txData          1   15[COMRAM] unsigned char 
 24007 ;; Return value:  Size  Location     Type
 24008 ;;                  1    wreg      void 
 24009 ;; Registers used:
 24010 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24011 ;; Tracked objects:
 24012 ;;		On entry : 0/0
 24013 ;;		On exit  : 3F/E
 24014 ;;		Unchanged: 0/0
 24015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24017 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24019 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24020 ;;Total ram usage:        1 bytes
 24021 ;; Hardware stack levels used: 1
 24022 ;; Hardware stack levels required when called: 4
 24023 ;; This function calls:
 24024 ;;		Nothing
 24025 ;; This function is called by:
 24026 ;;		_write_package
 24027 ;; This function uses a non-reentrant model
 24028 ;;
 24029                           
 24030                           	psect	text80
 24031  009250                     __ptext80:
 24032                           	callstack 0
 24033  009250                     _EUSART1_Write:
 24034                           	callstack 24
 24035                           
 24036                           ;incstack = 0
 24037                           ;EUSART1_Write@txData stored from wreg
 24038  009250  6E10               	movwf	EUSART1_Write@txData^0,c
 24039  009252                     
 24040                           ;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBufferRemaining)
 24041                           
 24042                           ;mcc_generated_files/eusart1.c: 173: void EUSART1_Write(uint8_t txData);mcc_generated_fi
      +                          les/eusart1.c: 174: {;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBuffer
      +                          Remaining)
 24043  009252  0101               	movlb	1	; () banked
 24044  009254  51FE               	movf	_eusart1TxBufferRemaining& (0+255),w,b	;volatile
 24045  009256  B4D8               	btfsc	status,2,c
 24046  009258  D7FC               	goto	l20587
 24047                           
 24048                           ; BSR set to: 1
 24049                           ;mcc_generated_files/eusart1.c: 179:     if(0 == PIE3bits.TX1IE)
 24050  00925A  010E               	movlb	14	; () banked
 24051  00925C  B9C5               	btfsc	197,4,b	;volatile
 24052  00925E  D003               	goto	l100
 24053                           
 24054                           ; BSR set to: 14
 24055                           ;mcc_generated_files/eusart1.c: 180:     {;mcc_generated_files/eusart1.c: 181:         T
      +                          X1REG = txData;
 24056  009260  C010  FF9A         	movff	EUSART1_Write@txData,3994	;volatile
 24057                           
 24058                           ;mcc_generated_files/eusart1.c: 182:     }
 24059  009264  D012               	goto	l20603
 24060  009266                     l100:
 24061                           
 24062                           ; BSR set to: 14
 24063                           ;mcc_generated_files/eusart1.c: 184:     {;mcc_generated_files/eusart1.c: 185:         P
      +                          IE3bits.TX1IE = 0;
 24064  009266  99C5               	bcf	197,4,b	;volatile
 24065                           
 24066                           ; BSR set to: 14
 24067                           ;mcc_generated_files/eusart1.c: 186:         eusart1TxBuffer[eusart1TxHead++] = txData;
 24068  009268  0E84               	movlw	low _eusart1TxBuffer
 24069  00926A  0100               	movlb	0	; () banked
 24070  00926C  2597               	addwf	_eusart1TxHead& (0+255),w,b	;volatile
 24071  00926E  6ED9               	movwf	fsr2l,c
 24072  009270  6ADA               	clrf	fsr2h,c
 24073  009272  0E02               	movlw	high _eusart1TxBuffer
 24074  009274  22DA               	addwfc	fsr2h,f,c
 24075  009276  C010  FFDF         	movff	EUSART1_Write@txData,indf2
 24076                           
 24077                           ; BSR set to: 0
 24078  00927A  2B97               	incf	_eusart1TxHead& (0+255),f,b	;volatile
 24079                           
 24080                           ; BSR set to: 0
 24081                           ;mcc_generated_files/eusart1.c: 187:         if(sizeof(eusart1TxBuffer) <= eusart1TxHead
      +                          )
 24082  00927C  0E07               	movlw	7
 24083  00927E  6597               	cpfsgt	_eusart1TxHead& (0+255),b
 24084  009280  D002               	goto	l20601
 24085                           
 24086                           ; BSR set to: 0
 24087                           ;mcc_generated_files/eusart1.c: 188:         {;mcc_generated_files/eusart1.c: 189:      
      +                                 eusart1TxHead = 0;
 24088  009282  0E00               	movlw	0
 24089  009284  6F97               	movwf	_eusart1TxHead& (0+255),b	;volatile
 24090  009286                     l20601:
 24091                           
 24092                           ; BSR set to: 0
 24093                           ;mcc_generated_files/eusart1.c: 191:         eusart1TxBufferRemaining--;
 24094  009286  0101               	movlb	1	; () banked
 24095  009288  07FE               	decf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
 24096  00928A                     l20603:
 24097                           
 24098                           ;mcc_generated_files/eusart1.c: 193:     PIE3bits.TX1IE = 1;
 24099  00928A  010E               	movlb	14	; () banked
 24100  00928C  89C5               	bsf	197,4,b	;volatile
 24101                           
 24102                           ; BSR set to: 14
 24103  00928E  0012               	return		;funcret
 24104  009290                     __end_of_EUSART1_Write:
 24105                           	callstack 0
 24106                           
 24107 ;; *************** function _confirmpackage *****************
 24108 ;; Defined at:
 24109 ;;		line 448 in file "eusartparser.c"
 24110 ;; Parameters:    Size  Location     Type
 24111 ;;  package         2   17[COMRAM] PTR struct package_t
 24112 ;;		 -> main@package(7), 
 24113 ;;  confirm         1   19[COMRAM] _Bool 
 24114 ;; Auto vars:     Size  Location     Type
 24115 ;;		None
 24116 ;; Return value:  Size  Location     Type
 24117 ;;                  1    wreg      void 
 24118 ;; Registers used:
 24119 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24120 ;; Tracked objects:
 24121 ;;		On entry : 0/0
 24122 ;;		On exit  : 0/0
 24123 ;;		Unchanged: 0/0
 24124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24125 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24126 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24128 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24129 ;;Total ram usage:        3 bytes
 24130 ;; Hardware stack levels used: 1
 24131 ;; Hardware stack levels required when called: 5
 24132 ;; This function calls:
 24133 ;;		_init_package
 24134 ;; This function is called by:
 24135 ;;		_eusartparser
 24136 ;; This function uses a non-reentrant model
 24137 ;;
 24138                           
 24139                           	psect	text81
 24140  008CBE                     __ptext81:
 24141                           	callstack 0
 24142  008CBE                     _confirmpackage:
 24143                           	callstack 24
 24144                           
 24145                           ;eusartparser.c: 449:         init_package(package);
 24146                           
 24147                           ; BSR set to: 14
 24148                           ;incstack = 0
 24149  008CBE  C012  F010         	movff	confirmpackage@package,init_package@package
 24150  008CC2  C013  F011         	movff	confirmpackage@package+1,init_package@package+1
 24151  008CC6  EC32  F04A         	call	_init_package	;wreg free
 24152                           
 24153                           ;eusartparser.c: 450:         package->functioncode=0x03;
 24154  008CCA  C012  FFD9         	movff	confirmpackage@package,fsr2l
 24155  008CCE  C013  FFDA         	movff	confirmpackage@package+1,fsr2h
 24156  008CD2  0E03               	movlw	3
 24157  008CD4  6EDF               	movwf	indf2,c
 24158                           
 24159                           ;eusartparser.c: 451:         package->address=0x00;
 24160  008CD6  EE20 F001          	lfsr	2,1
 24161  008CDA  5012               	movf	confirmpackage@package^0,w,c
 24162  008CDC  26D9               	addwf	fsr2l,f,c
 24163  008CDE  5013               	movf	(confirmpackage@package+1)^0,w,c
 24164  008CE0  22DA               	addwfc	fsr2h,f,c
 24165  008CE2  0E00               	movlw	0
 24166  008CE4  6EDF               	movwf	indf2,c
 24167                           
 24168                           ;eusartparser.c: 452:         if(confirm==1)
 24169  008CE6  0414               	decf	confirmpackage@confirm^0,w,c
 24170  008CE8  A4D8               	btfss	status,2,c
 24171  008CEA  D00B               	goto	l27305
 24172                           
 24173                           ;eusartparser.c: 453:             package->data.data16=0x0001;
 24174  008CEC  EE20 F002          	lfsr	2,2
 24175  008CF0  5012               	movf	confirmpackage@package^0,w,c
 24176  008CF2  26D9               	addwf	fsr2l,f,c
 24177  008CF4  5013               	movf	(confirmpackage@package+1)^0,w,c
 24178  008CF6  22DA               	addwfc	fsr2h,f,c
 24179  008CF8  0E01               	movlw	1
 24180  008CFA  6EDE               	movwf	postinc2,c
 24181  008CFC  0E00               	movlw	0
 24182  008CFE  6EDD               	movwf	postdec2,c
 24183  008D00  0012               	return	
 24184  008D02                     l27305:
 24185                           
 24186                           ;eusartparser.c: 455:             package->data.data16=0x0000;
 24187  008D02  EE20 F002          	lfsr	2,2
 24188  008D06  5012               	movf	confirmpackage@package^0,w,c
 24189  008D08  26D9               	addwf	fsr2l,f,c
 24190  008D0A  5013               	movf	(confirmpackage@package+1)^0,w,c
 24191  008D0C  22DA               	addwfc	fsr2h,f,c
 24192  008D0E  0E00               	movlw	0
 24193  008D10  6EDE               	movwf	postinc2,c
 24194  008D12  0E00               	movlw	0
 24195  008D14  6EDD               	movwf	postdec2,c
 24196  008D16  0012               	return		;funcret
 24197  008D18                     __end_of_confirmpackage:
 24198                           	callstack 0
 24199                           
 24200 ;; *************** function _init_package *****************
 24201 ;; Defined at:
 24202 ;;		line 11 in file "eusartpackage.c"
 24203 ;; Parameters:    Size  Location     Type
 24204 ;;  package         2   15[COMRAM] PTR struct package_t
 24205 ;;		 -> main@package(7), 
 24206 ;; Auto vars:     Size  Location     Type
 24207 ;;		None
 24208 ;; Return value:  Size  Location     Type
 24209 ;;                  1    wreg      void 
 24210 ;; Registers used:
 24211 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24212 ;; Tracked objects:
 24213 ;;		On entry : 0/0
 24214 ;;		On exit  : 0/0
 24215 ;;		Unchanged: 0/0
 24216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24217 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24220 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24221 ;;Total ram usage:        2 bytes
 24222 ;; Hardware stack levels used: 1
 24223 ;; Hardware stack levels required when called: 4
 24224 ;; This function calls:
 24225 ;;		Nothing
 24226 ;; This function is called by:
 24227 ;;		_confirmpackage
 24228 ;; This function uses a non-reentrant model
 24229 ;;
 24230                           
 24231                           	psect	text82
 24232  009464                     __ptext82:
 24233                           	callstack 0
 24234  009464                     _init_package:
 24235                           	callstack 24
 24236                           
 24237                           ;eusartpackage.c: 12:         package->startbyte=0x0A;
 24238                           
 24239                           ;incstack = 0
 24240  009464  EE20 F004          	lfsr	2,4
 24241  009468  5010               	movf	init_package@package^0,w,c
 24242  00946A  26D9               	addwf	fsr2l,f,c
 24243  00946C  5011               	movf	(init_package@package+1)^0,w,c
 24244  00946E  22DA               	addwfc	fsr2h,f,c
 24245  009470  0E0A               	movlw	10
 24246  009472  6EDF               	movwf	indf2,c
 24247                           
 24248                           ;eusartpackage.c: 13:         package->endbyte=0x0D;
 24249  009474  EE20 F005          	lfsr	2,5
 24250  009478  5010               	movf	init_package@package^0,w,c
 24251  00947A  26D9               	addwf	fsr2l,f,c
 24252  00947C  5011               	movf	(init_package@package+1)^0,w,c
 24253  00947E  22DA               	addwfc	fsr2h,f,c
 24254  009480  0E0D               	movlw	13
 24255  009482  6EDF               	movwf	indf2,c
 24256                           
 24257                           ;eusartpackage.c: 14:         package->valid=1;
 24258  009484  EE20 F006          	lfsr	2,6
 24259  009488  5010               	movf	init_package@package^0,w,c
 24260  00948A  26D9               	addwf	fsr2l,f,c
 24261  00948C  5011               	movf	(init_package@package+1)^0,w,c
 24262  00948E  22DA               	addwfc	fsr2h,f,c
 24263  009490  0E01               	movlw	1
 24264  009492  6EDF               	movwf	indf2,c
 24265  009494  0012               	return		;funcret
 24266  009496                     __end_of_init_package:
 24267                           	callstack 0
 24268                           
 24269 ;; *************** function _cmdMemoryIsEmpty *****************
 24270 ;; Defined at:
 24271 ;;		line 122 in file "controlMemory_MC50.c"
 24272 ;; Parameters:    Size  Location     Type
 24273 ;;  cmdType         1    wreg     unsigned char 
 24274 ;;  position        1   45[COMRAM] unsigned char 
 24275 ;; Auto vars:     Size  Location     Type
 24276 ;;  cmdType         1   48[COMRAM] unsigned char 
 24277 ;;  tempSerial      4   49[COMRAM] unsigned long 
 24278 ;; Return value:  Size  Location     Type
 24279 ;;                  1    wreg      unsigned char 
 24280 ;; Registers used:
 24281 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24282 ;; Tracked objects:
 24283 ;;		On entry : 0/1
 24284 ;;		On exit  : 0/0
 24285 ;;		Unchanged: 0/0
 24286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24287 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24288 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24289 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24290 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24291 ;;Total ram usage:        8 bytes
 24292 ;; Hardware stack levels used: 1
 24293 ;; Hardware stack levels required when called: 13
 24294 ;; This function calls:
 24295 ;;		_i2c_readDataBlock
 24296 ;; This function is called by:
 24297 ;;		_setValueToEdit
 24298 ;;		_controlSelectRemote
 24299 ;;		_eusartparser
 24300 ;; This function uses a non-reentrant model
 24301 ;;
 24302                           
 24303                           	psect	text83
 24304  007E58                     __ptext83:
 24305                           	callstack 0
 24306  007E58                     _cmdMemoryIsEmpty:
 24307                           	callstack 14
 24308                           
 24309                           ;incstack = 0
 24310                           ;cmdMemoryIsEmpty@cmdType stored from wreg
 24311  007E58  6E31               	movwf	cmdMemoryIsEmpty@cmdType^0,c
 24312                           
 24313                           ;controlMemory_MC50.c: 122: char cmdMemoryIsEmpty(char cmdType, char position);controlMe
      +                          mory_MC50.c: 123: {;controlMemory_MC50.c: 124:     unsigned long tempSerial=0;
 24314  007E5A  0E00               	movlw	0
 24315  007E5C  6E32               	movwf	cmdMemoryIsEmpty@tempSerial^0,c
 24316  007E5E  0E00               	movlw	0
 24317  007E60  6E33               	movwf	(cmdMemoryIsEmpty@tempSerial+1)^0,c
 24318  007E62  0E00               	movlw	0
 24319  007E64  6E34               	movwf	(cmdMemoryIsEmpty@tempSerial+2)^0,c
 24320  007E66  0E00               	movlw	0
 24321  007E68  6E35               	movwf	(cmdMemoryIsEmpty@tempSerial+3)^0,c
 24322                           
 24323                           ;controlMemory_MC50.c: 127:      if(cmdType==0)
 24324  007E6A  5031               	movf	cmdMemoryIsEmpty@cmdType^0,w,c
 24325  007E6C  A4D8               	btfss	status,2,c
 24326  007E6E  D01A               	goto	l20675
 24327                           
 24328                           ;controlMemory_MC50.c: 128:     {;controlMemory_MC50.c: 129:          i2c_readDataBlock(
      +                          0x50, (uint16_t)(0x0200 + (position * 4)),(char*)&tempSerial, 4);
 24329  007E70  502E               	movf	cmdMemoryIsEmpty@position^0,w,c
 24330  007E72  6E2F               	movwf	??_cmdMemoryIsEmpty^0,c
 24331  007E74  6A30               	clrf	(??_cmdMemoryIsEmpty+1)^0,c
 24332  007E76  90D8               	bcf	status,0,c
 24333  007E78  362F               	rlcf	??_cmdMemoryIsEmpty^0,f,c
 24334  007E7A  3630               	rlcf	(??_cmdMemoryIsEmpty+1)^0,f,c
 24335  007E7C  90D8               	bcf	status,0,c
 24336  007E7E  362F               	rlcf	??_cmdMemoryIsEmpty^0,f,c
 24337  007E80  3630               	rlcf	(??_cmdMemoryIsEmpty+1)^0,f,c
 24338  007E82  0E00               	movlw	0
 24339  007E84  242F               	addwf	??_cmdMemoryIsEmpty^0,w,c
 24340  007E86  6E22               	movwf	i2c_readDataBlock@reg^0,c
 24341  007E88  0E02               	movlw	2
 24342  007E8A  2030               	addwfc	(??_cmdMemoryIsEmpty+1)^0,w,c
 24343  007E8C  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 24344  007E8E  0E32               	movlw	low cmdMemoryIsEmpty@tempSerial
 24345  007E90  6E24               	movwf	i2c_readDataBlock@data^0,c
 24346  007E92  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
 24347  007E94  0E00               	movlw	0
 24348  007E96  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 24349  007E98  0E04               	movlw	4
 24350  007E9A  6E26               	movwf	i2c_readDataBlock@len^0,c
 24351  007E9C  0E50               	movlw	80
 24352  007E9E  EC4D  F043         	call	_i2c_readDataBlock
 24353                           
 24354                           ;controlMemory_MC50.c: 130:     }
 24355  007EA2  D019               	goto	l20677
 24356  007EA4                     l20675:
 24357                           
 24358                           ;controlMemory_MC50.c: 132:     {;controlMemory_MC50.c: 133:          i2c_readDataBlock(
      +                          0x50, (uint16_t)(0x0500 + (position * 4)),(char*)&tempSerial, 4);
 24359  007EA4  502E               	movf	cmdMemoryIsEmpty@position^0,w,c
 24360  007EA6  6E2F               	movwf	??_cmdMemoryIsEmpty^0,c
 24361  007EA8  6A30               	clrf	(??_cmdMemoryIsEmpty+1)^0,c
 24362  007EAA  90D8               	bcf	status,0,c
 24363  007EAC  362F               	rlcf	??_cmdMemoryIsEmpty^0,f,c
 24364  007EAE  3630               	rlcf	(??_cmdMemoryIsEmpty+1)^0,f,c
 24365  007EB0  90D8               	bcf	status,0,c
 24366  007EB2  362F               	rlcf	??_cmdMemoryIsEmpty^0,f,c
 24367  007EB4  3630               	rlcf	(??_cmdMemoryIsEmpty+1)^0,f,c
 24368  007EB6  0E00               	movlw	0
 24369  007EB8  242F               	addwf	??_cmdMemoryIsEmpty^0,w,c
 24370  007EBA  6E22               	movwf	i2c_readDataBlock@reg^0,c
 24371  007EBC  0E05               	movlw	5
 24372  007EBE  2030               	addwfc	(??_cmdMemoryIsEmpty+1)^0,w,c
 24373  007EC0  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 24374  007EC2  0E32               	movlw	low cmdMemoryIsEmpty@tempSerial
 24375  007EC4  6E24               	movwf	i2c_readDataBlock@data^0,c
 24376  007EC6  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
 24377  007EC8  0E00               	movlw	0
 24378  007ECA  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 24379  007ECC  0E04               	movlw	4
 24380  007ECE  6E26               	movwf	i2c_readDataBlock@len^0,c
 24381  007ED0  0E50               	movlw	80
 24382  007ED2  EC4D  F043         	call	_i2c_readDataBlock
 24383  007ED6                     l20677:
 24384                           
 24385                           ;controlMemory_MC50.c: 136:      if( tempSerial==0)
 24386  007ED6  5032               	movf	cmdMemoryIsEmpty@tempSerial^0,w,c
 24387  007ED8  1033               	iorwf	(cmdMemoryIsEmpty@tempSerial+1)^0,w,c
 24388  007EDA  1034               	iorwf	(cmdMemoryIsEmpty@tempSerial+2)^0,w,c
 24389  007EDC  1035               	iorwf	(cmdMemoryIsEmpty@tempSerial+3)^0,w,c
 24390  007EDE  A4D8               	btfss	status,2,c
 24391  007EE0  D002               	goto	l20685
 24392                           
 24393                           ;controlMemory_MC50.c: 137:      {;controlMemory_MC50.c: 138:          return 1;
 24394  007EE2  0E01               	movlw	1
 24395  007EE4  0012               	return	
 24396  007EE6                     l20685:
 24397                           
 24398                           ;controlMemory_MC50.c: 141:      {;controlMemory_MC50.c: 142:          return 0;
 24399  007EE6  0E00               	movlw	0
 24400  007EE8  0012               	return		;funcret
 24401  007EEA                     __end_of_cmdMemoryIsEmpty:
 24402                           	callstack 0
 24403                           
 24404 ;; *************** function _RemoveSerial *****************
 24405 ;; Defined at:
 24406 ;;		line 95 in file "controlMemory_MC50.c"
 24407 ;; Parameters:    Size  Location     Type
 24408 ;;  cmdType         1    wreg     unsigned char 
 24409 ;;  position        1   57[COMRAM] unsigned char 
 24410 ;; Auto vars:     Size  Location     Type
 24411 ;;  cmdType         1    2[BANK0 ] unsigned char 
 24412 ;;  tempSerial      4    3[BANK0 ] unsigned long 
 24413 ;; Return value:  Size  Location     Type
 24414 ;;                  1    wreg      void 
 24415 ;; Registers used:
 24416 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24417 ;; Tracked objects:
 24418 ;;		On entry : 3E/1
 24419 ;;		On exit  : 0/0
 24420 ;;		Unchanged: 0/0
 24421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24422 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24423 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24424 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24425 ;;      Totals:         1       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24426 ;;Total ram usage:        8 bytes
 24427 ;; Hardware stack levels used: 1
 24428 ;; Hardware stack levels required when called: 13
 24429 ;; This function calls:
 24430 ;;		_i2c_writeNBytes
 24431 ;; This function is called by:
 24432 ;;		_controlSelectRemote
 24433 ;;		_eusartparser
 24434 ;; This function uses a non-reentrant model
 24435 ;;
 24436                           
 24437                           	psect	text84
 24438  0083B6                     __ptext84:
 24439                           	callstack 0
 24440  0083B6                     _RemoveSerial:
 24441                           	callstack 14
 24442                           
 24443                           ;incstack = 0
 24444                           ;RemoveSerial@cmdType stored from wreg
 24445  0083B6  0100               	movlb	0	; () banked
 24446  0083B8  6FDA               	movwf	RemoveSerial@cmdType& (0+255),b
 24447                           
 24448                           ;controlMemory_MC50.c: 95: void RemoveSerial(char cmdType, char position);controlMemory_
      +                          MC50.c: 96: {;controlMemory_MC50.c: 97:     unsigned long tempSerial=0;
 24449  0083BA  0E00               	movlw	0
 24450  0083BC  0100               	movlb	0	; () banked
 24451  0083BE  6FDB               	movwf	RemoveSerial@tempSerial& (0+255),b
 24452  0083C0  0E00               	movlw	0
 24453  0083C2  6FDC               	movwf	(RemoveSerial@tempSerial+1)& (0+255),b
 24454  0083C4  0E00               	movlw	0
 24455  0083C6  6FDD               	movwf	(RemoveSerial@tempSerial+2)& (0+255),b
 24456  0083C8  0E00               	movlw	0
 24457  0083CA  6FDE               	movwf	(RemoveSerial@tempSerial+3)& (0+255),b
 24458                           
 24459                           ; BSR set to: 0
 24460                           ;controlMemory_MC50.c: 100:     if(cmdType==0)
 24461  0083CC  51DA               	movf	RemoveSerial@cmdType& (0+255),w,b
 24462  0083CE  A4D8               	btfss	status,2,c
 24463  0083D0  D019               	goto	l20667
 24464                           
 24465                           ; BSR set to: 0
 24466                           ;controlMemory_MC50.c: 101:     {;controlMemory_MC50.c: 102:        i2c_writeNBytes(0x50
      +                          , (uint16_t)(0x0200 + (position * 4)), (char*)&tempSerial, 4);
 24467  0083D2  503A               	movf	RemoveSerial@position^0,w,c
 24468  0083D4  6FD8               	movwf	??_RemoveSerial& (0+255),b
 24469  0083D6  6BD9               	clrf	(??_RemoveSerial+1)& (0+255),b
 24470  0083D8  90D8               	bcf	status,0,c
 24471  0083DA  37D8               	rlcf	??_RemoveSerial& (0+255),f,b
 24472  0083DC  37D9               	rlcf	(??_RemoveSerial+1)& (0+255),f,b
 24473  0083DE  90D8               	bcf	status,0,c
 24474  0083E0  37D8               	rlcf	??_RemoveSerial& (0+255),f,b
 24475  0083E2  37D9               	rlcf	(??_RemoveSerial+1)& (0+255),f,b
 24476  0083E4  0E00               	movlw	0
 24477  0083E6  25D8               	addwf	??_RemoveSerial& (0+255),w,b
 24478  0083E8  6E22               	movwf	i2c_writeNBytes@reg^0,c
 24479  0083EA  0E02               	movlw	2
 24480  0083EC  21D9               	addwfc	(??_RemoveSerial+1)& (0+255),w,b
 24481  0083EE  6E23               	movwf	(i2c_writeNBytes@reg+1)^0,c
 24482  0083F0  0EDB               	movlw	low RemoveSerial@tempSerial
 24483  0083F2  6E24               	movwf	i2c_writeNBytes@data^0,c
 24484  0083F4  0E00               	movlw	0
 24485  0083F6  6E26               	movwf	(i2c_writeNBytes@len+1)^0,c
 24486  0083F8  0E04               	movlw	4
 24487  0083FA  6E25               	movwf	i2c_writeNBytes@len^0,c
 24488  0083FC  0E50               	movlw	80
 24489  0083FE  EC88  F043         	call	_i2c_writeNBytes
 24490                           
 24491                           ;controlMemory_MC50.c: 103:     }
 24492  008402  0012               	return	
 24493  008404                     l20667:
 24494                           
 24495                           ; BSR set to: 0
 24496                           ;controlMemory_MC50.c: 105:     {;controlMemory_MC50.c: 106:        i2c_writeNBytes(0x50
      +                          , (uint16_t)(0x0500 + (position * 4)), (char*)&tempSerial, 4);
 24497  008404  503A               	movf	RemoveSerial@position^0,w,c
 24498  008406  6FD8               	movwf	??_RemoveSerial& (0+255),b
 24499  008408  6BD9               	clrf	(??_RemoveSerial+1)& (0+255),b
 24500  00840A  90D8               	bcf	status,0,c
 24501  00840C  37D8               	rlcf	??_RemoveSerial& (0+255),f,b
 24502  00840E  37D9               	rlcf	(??_RemoveSerial+1)& (0+255),f,b
 24503  008410  90D8               	bcf	status,0,c
 24504  008412  37D8               	rlcf	??_RemoveSerial& (0+255),f,b
 24505  008414  37D9               	rlcf	(??_RemoveSerial+1)& (0+255),f,b
 24506  008416  0E00               	movlw	0
 24507  008418  25D8               	addwf	??_RemoveSerial& (0+255),w,b
 24508  00841A  6E22               	movwf	i2c_writeNBytes@reg^0,c
 24509  00841C  0E05               	movlw	5
 24510  00841E  21D9               	addwfc	(??_RemoveSerial+1)& (0+255),w,b
 24511  008420  6E23               	movwf	(i2c_writeNBytes@reg+1)^0,c
 24512  008422  0EDB               	movlw	low RemoveSerial@tempSerial
 24513  008424  6E24               	movwf	i2c_writeNBytes@data^0,c
 24514  008426  0E00               	movlw	0
 24515  008428  6E26               	movwf	(i2c_writeNBytes@len+1)^0,c
 24516  00842A  0E04               	movlw	4
 24517  00842C  6E25               	movwf	i2c_writeNBytes@len^0,c
 24518  00842E  0E50               	movlw	80
 24519  008430  EC88  F043         	call	_i2c_writeNBytes
 24520  008434  0012               	return		;funcret
 24521  008436                     __end_of_RemoveSerial:
 24522                           	callstack 0
 24523                           
 24524 ;; *************** function _ReadSerial *****************
 24525 ;; Defined at:
 24526 ;;		line 110 in file "controlMemory_MC50.c"
 24527 ;; Parameters:    Size  Location     Type
 24528 ;;  cmdType         1    wreg     unsigned char 
 24529 ;;  tempSerial      1   45[COMRAM] PTR unsigned long 
 24530 ;;		 -> eusartparser@serial(4), 
 24531 ;;  position        1   46[COMRAM] unsigned char 
 24532 ;; Auto vars:     Size  Location     Type
 24533 ;;  cmdType         1   49[COMRAM] unsigned char 
 24534 ;; Return value:  Size  Location     Type
 24535 ;;                  1    wreg      void 
 24536 ;; Registers used:
 24537 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24538 ;; Tracked objects:
 24539 ;;		On entry : 3F/0
 24540 ;;		On exit  : 0/0
 24541 ;;		Unchanged: 0/0
 24542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24543 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24544 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24545 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24546 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24547 ;;Total ram usage:        5 bytes
 24548 ;; Hardware stack levels used: 1
 24549 ;; Hardware stack levels required when called: 13
 24550 ;; This function calls:
 24551 ;;		_i2c_readDataBlock
 24552 ;; This function is called by:
 24553 ;;		_eusartparser
 24554 ;; This function uses a non-reentrant model
 24555 ;;
 24556                           
 24557                           	psect	text85
 24558  008864                     __ptext85:
 24559                           	callstack 0
 24560  008864                     _ReadSerial:
 24561                           	callstack 16
 24562                           
 24563                           ;incstack = 0
 24564                           ;ReadSerial@cmdType stored from wreg
 24565  008864  6E32               	movwf	ReadSerial@cmdType^0,c
 24566                           
 24567                           ;controlMemory_MC50.c: 110: void ReadSerial(char cmdType, unsigned long* tempSerial, cha
      +                          r position);controlMemory_MC50.c: 111: {;controlMemory_MC50.c: 112:     if(cmdType==0)
 24568  008866  5032               	movf	ReadSerial@cmdType^0,w,c
 24569  008868  A4D8               	btfss	status,2,c
 24570  00886A  D01A               	goto	l22661
 24571                           
 24572                           ;controlMemory_MC50.c: 113:     {;controlMemory_MC50.c: 114:        i2c_readDataBlock(0x
      +                          50, (uint16_t)(0x0200 + (position * 4)), (char*)tempSerial, 4);
 24573  00886C  502F               	movf	ReadSerial@position^0,w,c
 24574  00886E  6E30               	movwf	??_ReadSerial^0,c
 24575  008870  6A31               	clrf	(??_ReadSerial+1)^0,c
 24576  008872  90D8               	bcf	status,0,c
 24577  008874  3630               	rlcf	??_ReadSerial^0,f,c
 24578  008876  3631               	rlcf	(??_ReadSerial+1)^0,f,c
 24579  008878  90D8               	bcf	status,0,c
 24580  00887A  3630               	rlcf	??_ReadSerial^0,f,c
 24581  00887C  3631               	rlcf	(??_ReadSerial+1)^0,f,c
 24582  00887E  0E00               	movlw	0
 24583  008880  2430               	addwf	??_ReadSerial^0,w,c
 24584  008882  6E22               	movwf	i2c_readDataBlock@reg^0,c
 24585  008884  0E02               	movlw	2
 24586  008886  2031               	addwfc	(??_ReadSerial+1)^0,w,c
 24587  008888  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 24588  00888A  C02E  F024         	movff	ReadSerial@tempSerial,i2c_readDataBlock@data
 24589  00888E  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
 24590  008890  0E00               	movlw	0
 24591  008892  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 24592  008894  0E04               	movlw	4
 24593  008896  6E26               	movwf	i2c_readDataBlock@len^0,c
 24594  008898  0E50               	movlw	80
 24595  00889A  EC4D  F043         	call	_i2c_readDataBlock
 24596                           
 24597                           ;controlMemory_MC50.c: 115:     }
 24598  00889E  0012               	return	
 24599  0088A0                     l22661:
 24600                           
 24601                           ;controlMemory_MC50.c: 117:     {;controlMemory_MC50.c: 118:        i2c_readDataBlock(0x
      +                          50, (uint16_t)(0x0500 + (position * 4)), (char*)tempSerial, 4);
 24602  0088A0  502F               	movf	ReadSerial@position^0,w,c
 24603  0088A2  6E30               	movwf	??_ReadSerial^0,c
 24604  0088A4  6A31               	clrf	(??_ReadSerial+1)^0,c
 24605  0088A6  90D8               	bcf	status,0,c
 24606  0088A8  3630               	rlcf	??_ReadSerial^0,f,c
 24607  0088AA  3631               	rlcf	(??_ReadSerial+1)^0,f,c
 24608  0088AC  90D8               	bcf	status,0,c
 24609  0088AE  3630               	rlcf	??_ReadSerial^0,f,c
 24610  0088B0  3631               	rlcf	(??_ReadSerial+1)^0,f,c
 24611  0088B2  0E00               	movlw	0
 24612  0088B4  2430               	addwf	??_ReadSerial^0,w,c
 24613  0088B6  6E22               	movwf	i2c_readDataBlock@reg^0,c
 24614  0088B8  0E05               	movlw	5
 24615  0088BA  2031               	addwfc	(??_ReadSerial+1)^0,w,c
 24616  0088BC  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 24617  0088BE  C02E  F024         	movff	ReadSerial@tempSerial,i2c_readDataBlock@data
 24618  0088C2  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
 24619  0088C4  0E00               	movlw	0
 24620  0088C6  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 24621  0088C8  0E04               	movlw	4
 24622  0088CA  6E26               	movwf	i2c_readDataBlock@len^0,c
 24623  0088CC  0E50               	movlw	80
 24624  0088CE  EC4D  F043         	call	_i2c_readDataBlock
 24625  0088D2  0012               	return		;funcret
 24626  0088D4                     __end_of_ReadSerial:
 24627                           	callstack 0
 24628                           
 24629 ;; *************** function _i2c_readDataBlock *****************
 24630 ;; Defined at:
 24631 ;;		line 147 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 24632 ;; Parameters:    Size  Location     Type
 24633 ;;  address         1    wreg     unsigned char 
 24634 ;;  reg             2   33[COMRAM] unsigned short 
 24635 ;;  data            2   35[COMRAM] PTR void 
 24636 ;;		 -> eusartparser@serial(4), var_sys_NVM.homemPresente(1), cmdMemoryIsEmpty@tempSerial(4), var_sys_NVM.positionRemote
      +sFull(1), 
 24637 ;;		 -> memoryTEMP(16), var_sys_NVM.learningCurrentNormalClose(2), var_sys_NVM(64), 
 24638 ;;  len             2   37[COMRAM] unsigned int 
 24639 ;; Auto vars:     Size  Location     Type
 24640 ;;  address         1   40[COMRAM] unsigned char 
 24641 ;;  d               4   41[COMRAM] struct .
 24642 ;; Return value:  Size  Location     Type
 24643 ;;                  1    wreg      void 
 24644 ;; Registers used:
 24645 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24646 ;; Tracked objects:
 24647 ;;		On entry : 0/2
 24648 ;;		On exit  : 0/0
 24649 ;;		Unchanged: 0/0
 24650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24651 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24652 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24653 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24654 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24655 ;;Total ram usage:       12 bytes
 24656 ;; Hardware stack levels used: 1
 24657 ;; Hardware stack levels required when called: 12
 24658 ;; This function calls:
 24659 ;;		_I2C1_Close
 24660 ;;		_I2C1_MasterWrite
 24661 ;;		_I2C1_Open
 24662 ;;		_I2C1_SetAddressNackCallback
 24663 ;;		_I2C1_SetBuffer
 24664 ;;		_I2C1_SetDataCompleteCallback
 24665 ;; This function is called by:
 24666 ;;		_validateRemoteSerialNumber
 24667 ;;		_ReadSerial
 24668 ;;		_cmdMemoryIsEmpty
 24669 ;;		_loadNVM_VarSystem
 24670 ;; This function uses a non-reentrant model
 24671 ;;
 24672                           
 24673                           	psect	text86
 24674  00869A                     __ptext86:
 24675                           	callstack 0
 24676  00869A                     _i2c_readDataBlock:
 24677                           	callstack 14
 24678                           
 24679                           ;incstack = 0
 24680                           ;i2c_readDataBlock@address stored from wreg
 24681  00869A  6E29               	movwf	i2c_readDataBlock@address^0,c
 24682                           
 24683                           ;mcc_generated_files/drivers/i2c_simple_master.c: 147: void i2c_readDataBlock(i2c1_addre
      +                          ss_t address, uint16_t reg, void *data, size_t len);mcc_generated_files/drivers/i2c_simp
      +                          le_master.c: 148: {;mcc_generated_files/drivers/i2c_simple_master.c: 149:     buf_t d;;m
      +                          cc_generated_files/drivers/i2c_simple_master.c: 150:     d.data = data;
 24684  00869C  C024  F02C         	movff	i2c_readDataBlock@data,i2c_readDataBlock@d+2
 24685  0086A0  C025  F02D         	movff	i2c_readDataBlock@data+1,i2c_readDataBlock@d+3
 24686                           
 24687                           ;mcc_generated_files/drivers/i2c_simple_master.c: 151:     d.len = len;
 24688  0086A4  C026  F02A         	movff	i2c_readDataBlock@len,i2c_readDataBlock@d
 24689  0086A8  C027  F02B         	movff	i2c_readDataBlock@len+1,i2c_readDataBlock@d+1
 24690  0086AC                     l20435:
 24691  0086AC  5023               	movf	(i2c_readDataBlock@reg+1)^0,w,c
 24692  0086AE  1029               	iorwf	i2c_readDataBlock@address^0,w,c
 24693  0086B0  EC58  F041         	call	_I2C1_Open
 24694  0086B4  0900               	iorlw	0
 24695  0086B6  B4D8               	btfsc	status,2,c
 24696  0086B8  D7F9               	goto	l20435
 24697                           
 24698                           ;mcc_generated_files/drivers/i2c_simple_master.c: 154:     I2C1_SetDataCompleteCallback(
      +                          rdBlkRegCompleteHandler,&d);
 24699  0086BA  0ED0               	movlw	low _rdBlkRegCompleteHandler
 24700  0086BC  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 24701  0086BE  0E92               	movlw	high _rdBlkRegCompleteHandler
 24702  0086C0  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 24703  0086C2  0E2A               	movlw	low i2c_readDataBlock@d
 24704  0086C4  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 24705  0086C6  6A18               	clrf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 24706  0086C8  EC37  F04D         	call	_I2C1_SetDataCompleteCallback	;wreg free
 24707                           
 24708                           ;mcc_generated_files/drivers/i2c_simple_master.c: 155:     I2C1_SetBuffer(&reg,1);
 24709  0086CC  0E22               	movlw	low i2c_readDataBlock@reg
 24710  0086CE  6E10               	movwf	I2C1_SetBuffer@buffer^0,c
 24711  0086D0  6A11               	clrf	(I2C1_SetBuffer@buffer+1)^0,c
 24712  0086D2  0E00               	movlw	0
 24713  0086D4  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 24714  0086D6  0E01               	movlw	1
 24715  0086D8  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 24716  0086DA  ECFA  F04C         	call	_I2C1_SetBuffer	;wreg free
 24717                           
 24718                           ; BSR set to: 2
 24719                           ;mcc_generated_files/drivers/i2c_simple_master.c: 156:     I2C1_SetAddressNackCallback((
      +                          (void*)0),((void*)0));
 24720  0086DE  0E00               	movlw	0
 24721  0086E0  6E15               	movwf	I2C1_SetAddressNackCallback@cb^0,c
 24722  0086E2  0E00               	movlw	0
 24723  0086E4  6E16               	movwf	(I2C1_SetAddressNackCallback@cb+1)^0,c
 24724  0086E6  0E00               	movlw	0
 24725  0086E8  6E17               	movwf	I2C1_SetAddressNackCallback@ptr^0,c
 24726  0086EA  0E00               	movlw	0
 24727  0086EC  6E18               	movwf	(I2C1_SetAddressNackCallback@ptr+1)^0,c
 24728  0086EE  EC1F  F04D         	call	_I2C1_SetAddressNackCallback	;wreg free
 24729                           
 24730                           ;mcc_generated_files/drivers/i2c_simple_master.c: 157:     I2C1_MasterWrite();
 24731  0086F2  ECF8  F04D         	call	_I2C1_MasterWrite	;wreg free
 24732  0086F6                     l20445:
 24733  0086F6  EC6C  F04C         	call	_I2C1_Close	;wreg free
 24734  0086FA  06E8               	decf	wreg,f,c
 24735  0086FC  B4D8               	btfsc	status,2,c
 24736  0086FE  D7FB               	goto	l20445
 24737                           
 24738                           ;mcc_generated_files/drivers/i2c_simple_master.c: 159:     _delay((unsigned long)((10)*(
      +                          64000000/4000.0)));
 24739  008700  0ED0               	movlw	208
 24740  008702  6E28               	movwf	??_i2c_readDataBlock^0,c
 24741  008704  0ECA               	movlw	202
 24742  008706                     u33917:
 24743  008706  2EE8               	decfsz	wreg,f,c
 24744  008708  D7FE               	bra	u33917
 24745  00870A  2E28               	decfsz	??_i2c_readDataBlock^0,f,c
 24746  00870C  D7FC               	bra	u33917
 24747  00870E  0012               	return		;funcret
 24748  008710                     __end_of_i2c_readDataBlock:
 24749                           	callstack 0
 24750                           
 24751 ;; *************** function _WWDT_TimerClear *****************
 24752 ;; Defined at:
 24753 ;;		line 128 in file "mcc_generated_files/mcc.c"
 24754 ;; Parameters:    Size  Location     Type
 24755 ;;		None
 24756 ;; Auto vars:     Size  Location     Type
 24757 ;;  state           1   15[COMRAM] _Bool 
 24758 ;;  readBack        1    0        unsigned char 
 24759 ;; Return value:  Size  Location     Type
 24760 ;;                  1    wreg      void 
 24761 ;; Registers used:
 24762 ;;		wreg, status,2
 24763 ;; Tracked objects:
 24764 ;;		On entry : 0/0
 24765 ;;		On exit  : 0/0
 24766 ;;		Unchanged: 0/0
 24767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24768 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24769 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24771 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24772 ;;Total ram usage:        1 bytes
 24773 ;; Hardware stack levels used: 1
 24774 ;; Hardware stack levels required when called: 4
 24775 ;; This function calls:
 24776 ;;		Nothing
 24777 ;; This function is called by:
 24778 ;;		_main
 24779 ;; This function uses a non-reentrant model
 24780 ;;
 24781                           
 24782                           	psect	text87
 24783  009938                     __ptext87:
 24784                           	callstack 0
 24785  009938                     _WWDT_TimerClear:
 24786                           	callstack 26
 24787                           
 24788                           ;mcc_generated_files/mcc.c: 134:     _Bool state = GIE;
 24789                           
 24790                           ;incstack = 0
 24791  009938  0E00               	movlw	0
 24792  00993A  BEF2               	btfsc	4082,7,c	;volatile
 24793  00993C  0E01               	movlw	1
 24794  00993E  6E10               	movwf	WWDT_TimerClear@state^0,c
 24795                           
 24796                           ;mcc_generated_files/mcc.c: 135:     GIE = 0;
 24797  009940  9EF2               	bcf	4082,7,c	;volatile
 24798  009942  010E               	movlb	14	; () banked
 24799  009944  51D2               	movf	210,w,b	;volatile
 24800  009946  0004               	clrwdt		;# 
 24801                           
 24802                           ;mcc_generated_files/mcc.c: 138:     GIE = state;
 24803  009948  B010               	btfsc	WWDT_TimerClear@state^0,0,c
 24804  00994A  D002               	bra	u29415
 24805  00994C  9EF2               	bcf	4082,7,c	;volatile
 24806  00994E  D001               	bra	u29416
 24807  009950                     u29415:
 24808  009950  8EF2               	bsf	4082,7,c	;volatile
 24809  009952                     u29416:
 24810  009952  0012               	return		;funcret
 24811  009954                     __end_of_WWDT_TimerClear:
 24812                           	callstack 0
 24813                           
 24814 ;; *************** function _WWDT_SoftEnable *****************
 24815 ;; Defined at:
 24816 ;;		line 104 in file "mcc_generated_files/mcc.c"
 24817 ;; Parameters:    Size  Location     Type
 24818 ;;		None
 24819 ;; Auto vars:     Size  Location     Type
 24820 ;;		None
 24821 ;; Return value:  Size  Location     Type
 24822 ;;                  1    wreg      void 
 24823 ;; Registers used:
 24824 ;;		None
 24825 ;; Tracked objects:
 24826 ;;		On entry : 3F/E
 24827 ;;		On exit  : 3F/E
 24828 ;;		Unchanged: 0/0
 24829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24833 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24834 ;;Total ram usage:        0 bytes
 24835 ;; Hardware stack levels used: 1
 24836 ;; Hardware stack levels required when called: 4
 24837 ;; This function calls:
 24838 ;;		Nothing
 24839 ;; This function is called by:
 24840 ;;		_main
 24841 ;; This function uses a non-reentrant model
 24842 ;;
 24843                           
 24844                           	psect	text88
 24845  009C76                     __ptext88:
 24846                           	callstack 0
 24847  009C76                     _WWDT_SoftEnable:
 24848                           	callstack 26
 24849                           
 24850                           ; BSR set to: 14
 24851                           ;mcc_generated_files/mcc.c: 107:     WDTCON0bits.SEN=1;
 24852                           
 24853                           ;incstack = 0
 24854  009C76  81D2               	bsf	210,0,b	;volatile
 24855                           
 24856                           ; BSR set to: 14
 24857  009C78  0012               	return		;funcret
 24858  009C7A                     __end_of_WWDT_SoftEnable:
 24859                           	callstack 0
 24860                           
 24861 ;; *************** function _ShowVersion *****************
 24862 ;; Defined at:
 24863 ;;		line 254 in file "main_MC50.c"
 24864 ;; Parameters:    Size  Location     Type
 24865 ;;		None
 24866 ;; Auto vars:     Size  Location     Type
 24867 ;;		None
 24868 ;; Return value:  Size  Location     Type
 24869 ;;                  1    wreg      void 
 24870 ;; Registers used:
 24871 ;;		wreg, status,2, status,0, cstack
 24872 ;; Tracked objects:
 24873 ;;		On entry : 3F/1
 24874 ;;		On exit  : 3F/1
 24875 ;;		Unchanged: 0/0
 24876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24880 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24881 ;;Total ram usage:        0 bytes
 24882 ;; Hardware stack levels used: 1
 24883 ;; Hardware stack levels required when called: 5
 24884 ;; This function calls:
 24885 ;;		_SetSegmentValue
 24886 ;; This function is called by:
 24887 ;;		_main
 24888 ;; This function uses a non-reentrant model
 24889 ;;
 24890                           
 24891                           	psect	text89
 24892  008A84                     __ptext89:
 24893                           	callstack 0
 24894  008A84                     _ShowVersion:
 24895                           	callstack 25
 24896                           
 24897                           ; BSR set to: 1
 24898                           ;main_MC50.c: 256:     if(ts_system.TimeShowVersion<=0)
 24899                           
 24900                           ; BSR set to: 14
 24901                           ;incstack = 0
 24902  008A84  BFDC               	btfsc	(_ts_system+61)& (0+255),7,b	;volatile
 24903  008A86  D005               	goto	u31060
 24904  008A88  51DC               	movf	(_ts_system+61)& (0+255),w,b	;volatile
 24905  008A8A  E12E               	bnz	l2044
 24906  008A8C  05DB               	decf	(_ts_system+60)& (0+255),w,b	;volatile
 24907  008A8E  B0D8               	btfsc	status,0,c
 24908  008A90  0012               	return	
 24909  008A92                     u31060:
 24910                           
 24911                           ; BSR set to: 1
 24912                           ;main_MC50.c: 257:     {;main_MC50.c: 259:             if(var_sys.StateVersion==0)
 24913  008A92  5149               	movf	(_var_sys+73)& (0+255),w,b	;volatile
 24914  008A94  A4D8               	btfss	status,2,c
 24915  008A96  D006               	goto	l25281
 24916                           
 24917                           ; BSR set to: 1
 24918                           ;main_MC50.c: 260:             {;main_MC50.c: 261:                 SetSegmentValue((1/10
      +                          )%10,(1/1)%10);
 24919  008A98  0E01               	movlw	1
 24920  008A9A  6E1C               	movwf	SetSegmentValue@d2^0,c
 24921  008A9C  0E00               	movlw	0
 24922  008A9E  ECED  F04C         	call	_SetSegmentValue
 24923                           
 24924                           ;main_MC50.c: 262:             }
 24925  008AA2  D01C               	goto	l2039
 24926  008AA4                     l25281:
 24927                           
 24928                           ; BSR set to: 1
 24929  008AA4  0549               	decf	(_var_sys+73)& (0+255),w,b	;volatile
 24930  008AA6  A4D8               	btfss	status,2,c
 24931  008AA8  D006               	goto	l25285
 24932                           
 24933                           ; BSR set to: 1
 24934                           ;main_MC50.c: 264:             {;main_MC50.c: 265:                 SetSegmentValue(dr, (
      +                          180/100)%10);
 24935  008AAA  0E01               	movlw	1
 24936  008AAC  6E1C               	movwf	SetSegmentValue@d2^0,c
 24937  008AAE  0E14               	movlw	20
 24938  008AB0  ECED  F04C         	call	_SetSegmentValue
 24939                           
 24940                           ;main_MC50.c: 266:             }
 24941  008AB4  D013               	goto	l2039
 24942  008AB6                     l25285:
 24943                           
 24944                           ; BSR set to: 1
 24945  008AB6  0E02               	movlw	2
 24946  008AB8  1949               	xorwf	(_var_sys+73)& (0+255),w,b	;volatile
 24947  008ABA  A4D8               	btfss	status,2,c
 24948  008ABC  D006               	goto	l25289
 24949                           
 24950                           ; BSR set to: 1
 24951                           ;main_MC50.c: 268:             {;main_MC50.c: 269:                 SetSegmentValue((180/
      +                          10)%10,(180/1)%10);
 24952  008ABE  0E00               	movlw	0
 24953  008AC0  6E1C               	movwf	SetSegmentValue@d2^0,c
 24954  008AC2  0E08               	movlw	8
 24955  008AC4  ECED  F04C         	call	_SetSegmentValue
 24956                           
 24957                           ;main_MC50.c: 270:             }
 24958  008AC8  D009               	goto	l2039
 24959  008ACA                     l25289:
 24960                           
 24961                           ; BSR set to: 1
 24962  008ACA  0E03               	movlw	3
 24963  008ACC  1949               	xorwf	(_var_sys+73)& (0+255),w,b	;volatile
 24964  008ACE  A4D8               	btfss	status,2,c
 24965  008AD0  D005               	goto	l2039
 24966                           
 24967                           ; BSR set to: 1
 24968                           ;main_MC50.c: 272:             {;main_MC50.c: 273:                SetSegmentValue(dr, d2
      +                          );
 24969  008AD2  0E02               	movlw	2
 24970  008AD4  6E1C               	movwf	SetSegmentValue@d2^0,c
 24971  008AD6  0E14               	movlw	20
 24972  008AD8  ECED  F04C         	call	_SetSegmentValue
 24973  008ADC                     l2039:
 24974                           
 24975                           ;main_MC50.c: 282:         var_sys.StateVersion++;
 24976                           
 24977                           ; BSR set to: 1
 24978  008ADC  0101               	movlb	1	; () banked
 24979  008ADE  2B49               	incf	(_var_sys+73)& (0+255),f,b	;volatile
 24980                           
 24981                           ; BSR set to: 1
 24982                           ;main_MC50.c: 283:         ts_system.TimeShowVersion=(1000/50);
 24983  008AE0  0E00               	movlw	0
 24984  008AE2  6FDC               	movwf	(_ts_system+61)& (0+255),b	;volatile
 24985  008AE4  0E14               	movlw	20
 24986  008AE6  6FDB               	movwf	(_ts_system+60)& (0+255),b	;volatile
 24987  008AE8                     l2044:
 24988                           
 24989                           ; BSR set to: 1
 24990  008AE8  0012               	return		;funcret
 24991  008AEA                     __end_of_ShowVersion:
 24992                           	callstack 0
 24993                           
 24994 ;; *************** function _SetSegmentValue *****************
 24995 ;; Defined at:
 24996 ;;		line 112 in file "outputs_MC50.c"
 24997 ;; Parameters:    Size  Location     Type
 24998 ;;  d1              1    wreg     unsigned char 
 24999 ;;  d2              1   27[COMRAM] unsigned char 
 25000 ;; Auto vars:     Size  Location     Type
 25001 ;;  d1              1   28[COMRAM] unsigned char 
 25002 ;; Return value:  Size  Location     Type
 25003 ;;                  1    wreg      void 
 25004 ;; Registers used:
 25005 ;;		wreg, status,2
 25006 ;; Tracked objects:
 25007 ;;		On entry : 0/0
 25008 ;;		On exit  : 3F/0
 25009 ;;		Unchanged: 0/0
 25010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25011 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25012 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25014 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25015 ;;Total ram usage:        2 bytes
 25016 ;; Hardware stack levels used: 1
 25017 ;; Hardware stack levels required when called: 4
 25018 ;; This function calls:
 25019 ;;		Nothing
 25020 ;; This function is called by:
 25021 ;;		_main
 25022 ;;		_ShowVersion
 25023 ;;		_controlSelectRemote
 25024 ;; This function uses a non-reentrant model
 25025 ;;
 25026                           
 25027                           	psect	text90
 25028  0099DA                     __ptext90:
 25029                           	callstack 0
 25030  0099DA                     _SetSegmentValue:
 25031                           	callstack 23
 25032                           
 25033                           ; BSR set to: 1
 25034                           ;incstack = 0
 25035                           ;SetSegmentValue@d1 stored from wreg
 25036  0099DA  6E1D               	movwf	SetSegmentValue@d1^0,c
 25037                           
 25038                           ;outputs_MC50.c: 112: void SetSegmentValue(char d1, char d2);outputs_MC50.c: 113: {;outp
      +                          uts_MC50.c: 117:         dispStruct.display_grp.value_display1=d1;
 25039  0099DC  C01D  F072         	movff	SetSegmentValue@d1,_dispStruct	;volatile
 25040                           
 25041                           ;outputs_MC50.c: 118:         dispStruct.display_grp.value_display2=d2;
 25042  0099E0  C01C  F073         	movff	SetSegmentValue@d2,_dispStruct+1	;volatile
 25043                           
 25044                           ;outputs_MC50.c: 119:         dispStruct.intermitentFreq=0;
 25045  0099E4  0E00               	movlw	0
 25046  0099E6  0100               	movlb	0	; () banked
 25047  0099E8  6F76               	movwf	(_dispStruct+4)& (0+255),b	;volatile
 25048  0099EA  0E00               	movlw	0
 25049  0099EC  6F75               	movwf	(_dispStruct+3)& (0+255),b	;volatile
 25050                           
 25051                           ; BSR set to: 0
 25052                           ;outputs_MC50.c: 120:         dispStruct.upFase=0;
 25053  0099EE  0E00               	movlw	0
 25054  0099F0  6F77               	movwf	(_dispStruct+5)& (0+255),b	;volatile
 25055                           
 25056                           ; BSR set to: 0
 25057  0099F2  0012               	return		;funcret
 25058  0099F4                     __end_of_SetSegmentValue:
 25059                           	callstack 0
 25060                           
 25061 ;; *************** function _SYSTEM_Initialize *****************
 25062 ;; Defined at:
 25063 ;;		line 50 in file "mcc_generated_files/mcc.c"
 25064 ;; Parameters:    Size  Location     Type
 25065 ;;		None
 25066 ;; Auto vars:     Size  Location     Type
 25067 ;;		None
 25068 ;; Return value:  Size  Location     Type
 25069 ;;                  1    wreg      void 
 25070 ;; Registers used:
 25071 ;;		wreg, status,2, status,0, cstack
 25072 ;; Tracked objects:
 25073 ;;		On entry : 3F/0
 25074 ;;		On exit  : 3F/E
 25075 ;;		Unchanged: 0/0
 25076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25080 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25081 ;;Total ram usage:        0 bytes
 25082 ;; Hardware stack levels used: 1
 25083 ;; Hardware stack levels required when called: 6
 25084 ;; This function calls:
 25085 ;;		_ADCC_Initialize
 25086 ;;		_EUSART1_Initialize
 25087 ;;		_I2C1_Initialize
 25088 ;;		_INTERRUPT_Initialize
 25089 ;;		_OSCILLATOR_Initialize
 25090 ;;		_PIN_MANAGER_Initialize
 25091 ;;		_PMD_Initialize
 25092 ;;		_TMR0_Initialize
 25093 ;;		_TMR1_Initialize
 25094 ;;		_TMR2_Initialize
 25095 ;;		_WWDT_Initialize
 25096 ;; This function is called by:
 25097 ;;		_main
 25098 ;; This function uses a non-reentrant model
 25099 ;;
 25100                           
 25101                           	psect	text91
 25102  0094F8                     __ptext91:
 25103                           	callstack 0
 25104  0094F8                     _SYSTEM_Initialize:
 25105                           	callstack 24
 25106                           
 25107                           ; BSR set to: 0
 25108                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 25109                           
 25110                           ; BSR set to: 0
 25111                           ;incstack = 0
 25112  0094F8  EC3D  F04E         	call	_INTERRUPT_Initialize	;wreg free
 25113                           
 25114                           ; BSR set to: 0
 25115                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 25116  0094FC  ECAA  F04C         	call	_PMD_Initialize	;wreg free
 25117                           
 25118                           ; BSR set to: 14
 25119                           ;mcc_generated_files/mcc.c: 54:     I2C1_Initialize();
 25120  009500  EC78  F04D         	call	_I2C1_Initialize	;wreg free
 25121                           
 25122                           ; BSR set to: 14
 25123                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
 25124  009504  ECE0  F03E         	call	_PIN_MANAGER_Initialize	;wreg free
 25125                           
 25126                           ; BSR set to: 14
 25127                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
 25128  009508  EC4E  F04D         	call	_OSCILLATOR_Initialize	;wreg free
 25129                           
 25130                           ; BSR set to: 14
 25131                           ;mcc_generated_files/mcc.c: 57:     WWDT_Initialize();
 25132  00950C  ECBC  F04D         	call	_WWDT_Initialize	;wreg free
 25133                           
 25134                           ; BSR set to: 14
 25135                           ;mcc_generated_files/mcc.c: 58:     ADCC_Initialize();
 25136  009510  ECE1  F047         	call	_ADCC_Initialize	;wreg free
 25137                           
 25138                           ; BSR set to: 15
 25139                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
 25140  009514  ECBF  F04A         	call	_TMR2_Initialize	;wreg free
 25141                           
 25142                           ; BSR set to: 14
 25143                           ;mcc_generated_files/mcc.c: 60:     TMR1_Initialize();
 25144  009518  EC07  F049         	call	_TMR1_Initialize	;wreg free
 25145                           
 25146                           ; BSR set to: 14
 25147                           ;mcc_generated_files/mcc.c: 61:     TMR0_Initialize();
 25148  00951C  EC5B  F04C         	call	_TMR0_Initialize	;wreg free
 25149                           
 25150                           ; BSR set to: 14
 25151                           ;mcc_generated_files/mcc.c: 62:     EUSART1_Initialize();
 25152  009520  EC1B  F042         	call	_EUSART1_Initialize	;wreg free
 25153                           
 25154                           ; BSR set to: 14
 25155  009524  0012               	return		;funcret
 25156  009526                     __end_of_SYSTEM_Initialize:
 25157                           	callstack 0
 25158                           
 25159 ;; *************** function _WWDT_Initialize *****************
 25160 ;; Defined at:
 25161 ;;		line 96 in file "mcc_generated_files/mcc.c"
 25162 ;; Parameters:    Size  Location     Type
 25163 ;;		None
 25164 ;; Auto vars:     Size  Location     Type
 25165 ;;		None
 25166 ;; Return value:  Size  Location     Type
 25167 ;;                  1    wreg      void 
 25168 ;; Registers used:
 25169 ;;		wreg, status,2
 25170 ;; Tracked objects:
 25171 ;;		On entry : 3F/E
 25172 ;;		On exit  : 3F/E
 25173 ;;		Unchanged: 0/0
 25174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25178 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25179 ;;Total ram usage:        0 bytes
 25180 ;; Hardware stack levels used: 1
 25181 ;; Hardware stack levels required when called: 4
 25182 ;; This function calls:
 25183 ;;		Nothing
 25184 ;; This function is called by:
 25185 ;;		_SYSTEM_Initialize
 25186 ;; This function uses a non-reentrant model
 25187 ;;
 25188                           
 25189                           	psect	text92
 25190  009B78                     __ptext92:
 25191                           	callstack 0
 25192  009B78                     _WWDT_Initialize:
 25193                           	callstack 25
 25194                           
 25195                           ; BSR set to: 14
 25196                           ;mcc_generated_files/mcc.c: 99:     WDTCON0 = 22;
 25197                           
 25198                           ; BSR set to: 14
 25199                           ;incstack = 0
 25200  009B78  0E16               	movlw	22
 25201  009B7A  6FD2               	movwf	210,b	;volatile
 25202                           
 25203                           ;mcc_generated_files/mcc.c: 100:     WDTCON1 = 7|32;
 25204  009B7C  0E27               	movlw	39
 25205  009B7E  6FD3               	movwf	211,b	;volatile
 25206                           
 25207                           ; BSR set to: 14
 25208  009B80  0012               	return		;funcret
 25209  009B82                     __end_of_WWDT_Initialize:
 25210                           	callstack 0
 25211                           
 25212 ;; *************** function _TMR2_Initialize *****************
 25213 ;; Defined at:
 25214 ;;		line 79 in file "mcc_generated_files/tmr2.c"
 25215 ;; Parameters:    Size  Location     Type
 25216 ;;		None
 25217 ;; Auto vars:     Size  Location     Type
 25218 ;;		None
 25219 ;; Return value:  Size  Location     Type
 25220 ;;                  1    wreg      void 
 25221 ;; Registers used:
 25222 ;;		wreg, status,2, status,0, cstack
 25223 ;; Tracked objects:
 25224 ;;		On entry : 3F/F
 25225 ;;		On exit  : 3F/E
 25226 ;;		Unchanged: 0/0
 25227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25231 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25232 ;;Total ram usage:        0 bytes
 25233 ;; Hardware stack levels used: 1
 25234 ;; Hardware stack levels required when called: 5
 25235 ;; This function calls:
 25236 ;;		_TMR2_SetInterruptHandler
 25237 ;; This function is called by:
 25238 ;;		_SYSTEM_Initialize
 25239 ;; This function uses a non-reentrant model
 25240 ;;
 25241                           
 25242                           	psect	text93
 25243  00957E                     __ptext93:
 25244                           	callstack 0
 25245  00957E                     _TMR2_Initialize:
 25246                           	callstack 24
 25247                           
 25248                           ; BSR set to: 15
 25249                           ;mcc_generated_files/tmr2.c: 84:     T2CLKCON = 0x02;
 25250                           
 25251                           ; BSR set to: 14
 25252                           ;incstack = 0
 25253  00957E  0E02               	movlw	2
 25254  009580  6EBF               	movwf	191,c	;volatile
 25255                           
 25256                           ;mcc_generated_files/tmr2.c: 87:     T2HLT = 0x40;
 25257  009582  0E40               	movlw	64
 25258  009584  6EBE               	movwf	190,c	;volatile
 25259                           
 25260                           ;mcc_generated_files/tmr2.c: 90:     T2RST = 0x00;
 25261  009586  0E00               	movlw	0
 25262  009588  6EC0               	movwf	192,c	;volatile
 25263                           
 25264                           ;mcc_generated_files/tmr2.c: 93:     T2PR = 0xC7;
 25265  00958A  0EC7               	movlw	199
 25266  00958C  6EBC               	movwf	188,c	;volatile
 25267                           
 25268                           ;mcc_generated_files/tmr2.c: 96:     T2TMR = 0x00;
 25269  00958E  0E00               	movlw	0
 25270  009590  6EBB               	movwf	187,c	;volatile
 25271                           
 25272                           ; BSR set to: 15
 25273                           ;mcc_generated_files/tmr2.c: 99:     PIR4bits.TMR2IF = 0;
 25274  009592  010E               	movlb	14	; () banked
 25275  009594  93CE               	bcf	206,1,b	;volatile
 25276                           
 25277                           ; BSR set to: 14
 25278                           ;mcc_generated_files/tmr2.c: 102:     PIE4bits.TMR2IE = 1;
 25279  009596  83C6               	bsf	198,1,b	;volatile
 25280                           
 25281                           ; BSR set to: 14
 25282                           ;mcc_generated_files/tmr2.c: 105:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHand
      +                          ler);
 25283  009598  0EA4               	movlw	low _TMR2_DefaultInterruptHandler
 25284  00959A  6E10               	movwf	TMR2_SetInterruptHandler@InterruptHandler^0,c
 25285  00959C  0E9C               	movlw	high _TMR2_DefaultInterruptHandler
 25286  00959E  6E11               	movwf	(TMR2_SetInterruptHandler@InterruptHandler+1)^0,c
 25287  0095A0  ECC1  F04D         	call	_TMR2_SetInterruptHandler	;wreg free
 25288                           
 25289                           ; BSR set to: 14
 25290                           ;mcc_generated_files/tmr2.c: 108:     T2CON = 0xD9;
 25291  0095A4  0ED9               	movlw	217
 25292  0095A6  6EBD               	movwf	189,c	;volatile
 25293                           
 25294                           ; BSR set to: 14
 25295  0095A8  0012               	return		;funcret
 25296  0095AA                     __end_of_TMR2_Initialize:
 25297                           	callstack 0
 25298                           
 25299 ;; *************** function _TMR2_SetInterruptHandler *****************
 25300 ;; Defined at:
 25301 ;;		line 342 in file "mcc_generated_files/tmr2.c"
 25302 ;; Parameters:    Size  Location     Type
 25303 ;;  InterruptHan    2   15[COMRAM] PTR FTN()void 
 25304 ;;		 -> TMR2_DefaultInterruptHandler(1), 
 25305 ;; Auto vars:     Size  Location     Type
 25306 ;;		None
 25307 ;; Return value:  Size  Location     Type
 25308 ;;                  1    wreg      void 
 25309 ;; Registers used:
 25310 ;;		wreg, status,2, status,0
 25311 ;; Tracked objects:
 25312 ;;		On entry : 3F/E
 25313 ;;		On exit  : 3F/E
 25314 ;;		Unchanged: 3F/0
 25315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25316 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25319 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25320 ;;Total ram usage:        2 bytes
 25321 ;; Hardware stack levels used: 1
 25322 ;; Hardware stack levels required when called: 4
 25323 ;; This function calls:
 25324 ;;		Nothing
 25325 ;; This function is called by:
 25326 ;;		_TMR2_Initialize
 25327 ;; This function uses a non-reentrant model
 25328 ;;
 25329                           
 25330                           	psect	text94
 25331  009B82                     __ptext94:
 25332                           	callstack 0
 25333  009B82                     _TMR2_SetInterruptHandler:
 25334                           	callstack 24
 25335                           
 25336                           ; BSR set to: 14
 25337                           ;mcc_generated_files/tmr2.c: 343:     TMR2_InterruptHandler = InterruptHandler;
 25338                           
 25339                           ; BSR set to: 14
 25340                           ;incstack = 0
 25341  009B82  C010  F2DB         	movff	TMR2_SetInterruptHandler@InterruptHandler,_TMR2_InterruptHandler
 25342  009B86  C011  F2DC         	movff	TMR2_SetInterruptHandler@InterruptHandler+1,_TMR2_InterruptHandler+1
 25343                           
 25344                           ; BSR set to: 14
 25345  009B8A  0012               	return		;funcret
 25346  009B8C                     __end_of_TMR2_SetInterruptHandler:
 25347                           	callstack 0
 25348                           
 25349 ;; *************** function _TMR1_Initialize *****************
 25350 ;; Defined at:
 25351 ;;		line 66 in file "mcc_generated_files/tmr1.c"
 25352 ;; Parameters:    Size  Location     Type
 25353 ;;		None
 25354 ;; Auto vars:     Size  Location     Type
 25355 ;;		None
 25356 ;; Return value:  Size  Location     Type
 25357 ;;                  1    wreg      void 
 25358 ;; Registers used:
 25359 ;;		wreg, status,2, status,0, cstack
 25360 ;; Tracked objects:
 25361 ;;		On entry : 3F/E
 25362 ;;		On exit  : 3F/E
 25363 ;;		Unchanged: 0/0
 25364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25367 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25368 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25369 ;;Total ram usage:        2 bytes
 25370 ;; Hardware stack levels used: 1
 25371 ;; Hardware stack levels required when called: 5
 25372 ;; This function calls:
 25373 ;;		_TMR1_SetInterruptHandler
 25374 ;; This function is called by:
 25375 ;;		_SYSTEM_Initialize
 25376 ;; This function uses a non-reentrant model
 25377 ;;
 25378                           
 25379                           	psect	text95
 25380  00920E                     __ptext95:
 25381                           	callstack 0
 25382  00920E                     _TMR1_Initialize:
 25383                           	callstack 24
 25384                           
 25385                           ; BSR set to: 14
 25386                           ;mcc_generated_files/tmr1.c: 71:     T1GCON = 0x00;
 25387                           
 25388                           ; BSR set to: 14
 25389                           ;incstack = 0
 25390  00920E  0E00               	movlw	0
 25391  009210  6ED0               	movwf	208,c	;volatile
 25392                           
 25393                           ;mcc_generated_files/tmr1.c: 74:     T1GATE = 0x00;
 25394  009212  0E00               	movlw	0
 25395  009214  6ED1               	movwf	209,c	;volatile
 25396                           
 25397                           ;mcc_generated_files/tmr1.c: 77:     T1CLK = 0x01;
 25398  009216  0E01               	movlw	1
 25399  009218  6ED2               	movwf	210,c	;volatile
 25400                           
 25401                           ; BSR set to: 14
 25402                           ;mcc_generated_files/tmr1.c: 80:     TMR1H = 0xFF;
 25403  00921A  68CE               	setf	206,c	;volatile
 25404                           
 25405                           ;mcc_generated_files/tmr1.c: 83:     TMR1L = 0x38;
 25406  00921C  0E38               	movlw	56
 25407  00921E  6ECD               	movwf	205,c	;volatile
 25408                           
 25409                           ; BSR set to: 14
 25410                           ;mcc_generated_files/tmr1.c: 86:     PIR4bits.TMR1IF = 0;
 25411  009220  91CE               	bcf	206,0,b	;volatile
 25412                           
 25413                           ; BSR set to: 14
 25414                           ;mcc_generated_files/tmr1.c: 89:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
 25415  009222  50CD               	movf	205,w,c	;volatile
 25416  009224  CFCE F012          	movff	4046,??_TMR1_Initialize	;volatile
 25417  009228  6A13               	clrf	(??_TMR1_Initialize+1)^0,c
 25418  00922A  C012  F013         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
 25419  00922E  6A12               	clrf	??_TMR1_Initialize^0,c
 25420  009230  1012               	iorwf	??_TMR1_Initialize^0,w,c
 25421  009232  0102               	movlb	2	; () banked
 25422  009234  6FDF               	movwf	_timer1ReloadVal& (0+255),b	;volatile
 25423  009236  5013               	movf	(??_TMR1_Initialize+1)^0,w,c
 25424  009238  6FE0               	movwf	(_timer1ReloadVal+1)& (0+255),b	;volatile
 25425                           
 25426                           ; BSR set to: 2
 25427                           ;mcc_generated_files/tmr1.c: 92:     PIE4bits.TMR1IE = 1;
 25428  00923A  010E               	movlb	14	; () banked
 25429  00923C  81C6               	bsf	198,0,b	;volatile
 25430                           
 25431                           ; BSR set to: 14
 25432                           ;mcc_generated_files/tmr1.c: 95:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
 25433  00923E  0EA6               	movlw	low _TMR1_DefaultInterruptHandler
 25434  009240  6E10               	movwf	TMR1_SetInterruptHandler@InterruptHandler^0,c
 25435  009242  0E9C               	movlw	high _TMR1_DefaultInterruptHandler
 25436  009244  6E11               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)^0,c
 25437  009246  ECC6  F04D         	call	_TMR1_SetInterruptHandler	;wreg free
 25438                           
 25439                           ; BSR set to: 14
 25440                           ;mcc_generated_files/tmr1.c: 98:     T1CON = 0x31;
 25441  00924A  0E31               	movlw	49
 25442  00924C  6ECF               	movwf	207,c	;volatile
 25443                           
 25444                           ; BSR set to: 14
 25445  00924E  0012               	return		;funcret
 25446  009250                     __end_of_TMR1_Initialize:
 25447                           	callstack 0
 25448                           
 25449 ;; *************** function _TMR1_SetInterruptHandler *****************
 25450 ;; Defined at:
 25451 ;;		line 192 in file "mcc_generated_files/tmr1.c"
 25452 ;; Parameters:    Size  Location     Type
 25453 ;;  InterruptHan    2   15[COMRAM] PTR FTN()void 
 25454 ;;		 -> TMR1_DefaultInterruptHandler(1), 
 25455 ;; Auto vars:     Size  Location     Type
 25456 ;;		None
 25457 ;; Return value:  Size  Location     Type
 25458 ;;                  1    wreg      void 
 25459 ;; Registers used:
 25460 ;;		wreg, status,2, status,0
 25461 ;; Tracked objects:
 25462 ;;		On entry : 3F/E
 25463 ;;		On exit  : 3F/E
 25464 ;;		Unchanged: 3F/0
 25465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25466 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25469 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25470 ;;Total ram usage:        2 bytes
 25471 ;; Hardware stack levels used: 1
 25472 ;; Hardware stack levels required when called: 4
 25473 ;; This function calls:
 25474 ;;		Nothing
 25475 ;; This function is called by:
 25476 ;;		_TMR1_Initialize
 25477 ;; This function uses a non-reentrant model
 25478 ;;
 25479                           
 25480                           	psect	text96
 25481  009B8C                     __ptext96:
 25482                           	callstack 0
 25483  009B8C                     _TMR1_SetInterruptHandler:
 25484                           	callstack 24
 25485                           
 25486                           ; BSR set to: 14
 25487                           ;mcc_generated_files/tmr1.c: 193:     TMR1_InterruptHandler = InterruptHandler;
 25488                           
 25489                           ; BSR set to: 14
 25490                           ;incstack = 0
 25491  009B8C  C010  F2DD         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
 25492  009B90  C011  F2DE         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
 25493                           
 25494                           ; BSR set to: 14
 25495  009B94  0012               	return		;funcret
 25496  009B96                     __end_of_TMR1_SetInterruptHandler:
 25497                           	callstack 0
 25498                           
 25499 ;; *************** function _TMR0_Initialize *****************
 25500 ;; Defined at:
 25501 ;;		line 67 in file "mcc_generated_files/tmr0.c"
 25502 ;; Parameters:    Size  Location     Type
 25503 ;;		None
 25504 ;; Auto vars:     Size  Location     Type
 25505 ;;		None
 25506 ;; Return value:  Size  Location     Type
 25507 ;;                  1    wreg      void 
 25508 ;; Registers used:
 25509 ;;		wreg, status,2, status,0, cstack
 25510 ;; Tracked objects:
 25511 ;;		On entry : 3F/E
 25512 ;;		On exit  : 3F/E
 25513 ;;		Unchanged: 0/0
 25514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25518 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25519 ;;Total ram usage:        0 bytes
 25520 ;; Hardware stack levels used: 1
 25521 ;; Hardware stack levels required when called: 5
 25522 ;; This function calls:
 25523 ;;		_TMR0_SetInterruptHandler
 25524 ;; This function is called by:
 25525 ;;		_SYSTEM_Initialize
 25526 ;; This function uses a non-reentrant model
 25527 ;;
 25528                           
 25529                           	psect	text97
 25530  0098B6                     __ptext97:
 25531                           	callstack 0
 25532  0098B6                     _TMR0_Initialize:
 25533                           	callstack 24
 25534                           
 25535                           ; BSR set to: 14
 25536                           ;mcc_generated_files/tmr0.c: 72:     T0CON1 = 0x41;
 25537                           
 25538                           ; BSR set to: 14
 25539                           ;incstack = 0
 25540  0098B6  0E41               	movlw	65
 25541  0098B8  6ED6               	movwf	214,c	;volatile
 25542                           
 25543                           ;mcc_generated_files/tmr0.c: 75:     TMR0H = 0x84;
 25544  0098BA  0E84               	movlw	132
 25545  0098BC  6ED4               	movwf	212,c	;volatile
 25546                           
 25547                           ;mcc_generated_files/tmr0.c: 78:     TMR0L = 0x00;
 25548  0098BE  0E00               	movlw	0
 25549  0098C0  6ED3               	movwf	211,c	;volatile
 25550                           
 25551                           ; BSR set to: 14
 25552                           ;mcc_generated_files/tmr0.c: 81:     PIR0bits.TMR0IF = 0;
 25553  0098C2  9BCA               	bcf	202,5,b	;volatile
 25554                           
 25555                           ; BSR set to: 14
 25556                           ;mcc_generated_files/tmr0.c: 84:     PIE0bits.TMR0IE = 1;
 25557  0098C4  8BC2               	bsf	194,5,b	;volatile
 25558                           
 25559                           ; BSR set to: 14
 25560                           ;mcc_generated_files/tmr0.c: 87:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
 25561  0098C6  0EA8               	movlw	low _TMR0_DefaultInterruptHandler
 25562  0098C8  6E10               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
 25563  0098CA  0E9C               	movlw	high _TMR0_DefaultInterruptHandler
 25564  0098CC  6E11               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
 25565  0098CE  ECCB  F04D         	call	_TMR0_SetInterruptHandler	;wreg free
 25566                           
 25567                           ; BSR set to: 14
 25568                           ;mcc_generated_files/tmr0.c: 90:     T0CON0 = 0x87;
 25569  0098D2  0E87               	movlw	135
 25570  0098D4  6ED5               	movwf	213,c	;volatile
 25571                           
 25572                           ; BSR set to: 14
 25573  0098D6  0012               	return		;funcret
 25574  0098D8                     __end_of_TMR0_Initialize:
 25575                           	callstack 0
 25576                           
 25577 ;; *************** function _TMR0_SetInterruptHandler *****************
 25578 ;; Defined at:
 25579 ;;		line 143 in file "mcc_generated_files/tmr0.c"
 25580 ;; Parameters:    Size  Location     Type
 25581 ;;  InterruptHan    2   15[COMRAM] PTR FTN()void 
 25582 ;;		 -> TMR0_DefaultInterruptHandler(1), 
 25583 ;; Auto vars:     Size  Location     Type
 25584 ;;		None
 25585 ;; Return value:  Size  Location     Type
 25586 ;;                  1    wreg      void 
 25587 ;; Registers used:
 25588 ;;		wreg, status,2, status,0
 25589 ;; Tracked objects:
 25590 ;;		On entry : 3F/E
 25591 ;;		On exit  : 3F/E
 25592 ;;		Unchanged: 3F/0
 25593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25594 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25597 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25598 ;;Total ram usage:        2 bytes
 25599 ;; Hardware stack levels used: 1
 25600 ;; Hardware stack levels required when called: 4
 25601 ;; This function calls:
 25602 ;;		Nothing
 25603 ;; This function is called by:
 25604 ;;		_TMR0_Initialize
 25605 ;; This function uses a non-reentrant model
 25606 ;;
 25607                           
 25608                           	psect	text98
 25609  009B96                     __ptext98:
 25610                           	callstack 0
 25611  009B96                     _TMR0_SetInterruptHandler:
 25612                           	callstack 24
 25613                           
 25614                           ; BSR set to: 14
 25615                           ;mcc_generated_files/tmr0.c: 144:     TMR0_InterruptHandler = InterruptHandler;
 25616                           
 25617                           ; BSR set to: 14
 25618                           ;incstack = 0
 25619  009B96  C010  F2E1         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
 25620  009B9A  C011  F2E2         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
 25621                           
 25622                           ; BSR set to: 14
 25623  009B9E  0012               	return		;funcret
 25624  009BA0                     __end_of_TMR0_SetInterruptHandler:
 25625                           	callstack 0
 25626                           
 25627 ;; *************** function _PMD_Initialize *****************
 25628 ;; Defined at:
 25629 ;;		line 79 in file "mcc_generated_files/mcc.c"
 25630 ;; Parameters:    Size  Location     Type
 25631 ;;		None
 25632 ;; Auto vars:     Size  Location     Type
 25633 ;;		None
 25634 ;; Return value:  Size  Location     Type
 25635 ;;                  1    wreg      void 
 25636 ;; Registers used:
 25637 ;;		wreg, status,2
 25638 ;; Tracked objects:
 25639 ;;		On entry : 3F/0
 25640 ;;		On exit  : 3F/E
 25641 ;;		Unchanged: 0/0
 25642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25646 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25647 ;;Total ram usage:        0 bytes
 25648 ;; Hardware stack levels used: 1
 25649 ;; Hardware stack levels required when called: 4
 25650 ;; This function calls:
 25651 ;;		Nothing
 25652 ;; This function is called by:
 25653 ;;		_SYSTEM_Initialize
 25654 ;; This function uses a non-reentrant model
 25655 ;;
 25656                           
 25657                           	psect	text99
 25658  009954                     __ptext99:
 25659                           	callstack 0
 25660  009954                     _PMD_Initialize:
 25661                           	callstack 25
 25662                           
 25663                           ; BSR set to: 0
 25664                           ;mcc_generated_files/mcc.c: 82:     PMD0 = 0x00;
 25665                           
 25666                           ; BSR set to: 14
 25667                           ;incstack = 0
 25668  009954  0E00               	movlw	0
 25669  009956  010E               	movlb	14	; () banked
 25670  009958  6FE1               	movwf	225,b	;volatile
 25671                           
 25672                           ;mcc_generated_files/mcc.c: 84:     PMD1 = 0x00;
 25673  00995A  0E00               	movlw	0
 25674  00995C  6FE2               	movwf	226,b	;volatile
 25675                           
 25676                           ;mcc_generated_files/mcc.c: 86:     PMD2 = 0x00;
 25677  00995E  0E00               	movlw	0
 25678  009960  6FE3               	movwf	227,b	;volatile
 25679                           
 25680                           ;mcc_generated_files/mcc.c: 88:     PMD3 = 0x00;
 25681  009962  0E00               	movlw	0
 25682  009964  6FE4               	movwf	228,b	;volatile
 25683                           
 25684                           ;mcc_generated_files/mcc.c: 90:     PMD4 = 0x00;
 25685  009966  0E00               	movlw	0
 25686  009968  6FE5               	movwf	229,b	;volatile
 25687                           
 25688                           ;mcc_generated_files/mcc.c: 92:     PMD5 = 0x00;
 25689  00996A  0E00               	movlw	0
 25690  00996C  6FE6               	movwf	230,b	;volatile
 25691                           
 25692                           ; BSR set to: 14
 25693  00996E  0012               	return		;funcret
 25694  009970                     __end_of_PMD_Initialize:
 25695                           	callstack 0
 25696                           
 25697 ;; *************** function _PIN_MANAGER_Initialize *****************
 25698 ;; Defined at:
 25699 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 25700 ;; Parameters:    Size  Location     Type
 25701 ;;		None
 25702 ;; Auto vars:     Size  Location     Type
 25703 ;;		None
 25704 ;; Return value:  Size  Location     Type
 25705 ;;                  1    wreg      void 
 25706 ;; Registers used:
 25707 ;;		wreg, status,2
 25708 ;; Tracked objects:
 25709 ;;		On entry : 3F/E
 25710 ;;		On exit  : 3F/E
 25711 ;;		Unchanged: 0/0
 25712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25716 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25717 ;;Total ram usage:        0 bytes
 25718 ;; Hardware stack levels used: 1
 25719 ;; Hardware stack levels required when called: 4
 25720 ;; This function calls:
 25721 ;;		Nothing
 25722 ;; This function is called by:
 25723 ;;		_SYSTEM_Initialize
 25724 ;; This function uses a non-reentrant model
 25725 ;;
 25726                           
 25727                           	psect	text100
 25728  007DC0                     __ptext100:
 25729                           	callstack 0
 25730  007DC0                     _PIN_MANAGER_Initialize:
 25731                           	callstack 25
 25732                           
 25733                           ; BSR set to: 14
 25734                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
 25735                           
 25736                           ; BSR set to: 14
 25737                           ;incstack = 0
 25738  007DC0  0E00               	movlw	0
 25739  007DC2  6E87               	movwf	135,c	;volatile
 25740                           
 25741                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
 25742  007DC4  0E00               	movlw	0
 25743  007DC6  6E86               	movwf	134,c	;volatile
 25744                           
 25745                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
 25746  007DC8  0E00               	movlw	0
 25747  007DCA  6E83               	movwf	131,c	;volatile
 25748                           
 25749                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
 25750  007DCC  0E00               	movlw	0
 25751  007DCE  6E84               	movwf	132,c	;volatile
 25752                           
 25753                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
 25754  007DD0  0E00               	movlw	0
 25755  007DD2  6E85               	movwf	133,c	;volatile
 25756                           
 25757                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x00;
 25758  007DD4  0E00               	movlw	0
 25759  007DD6  6E8C               	movwf	140,c	;volatile
 25760                           
 25761                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0x7F;
 25762  007DD8  0E7F               	movlw	127
 25763  007DDA  6E88               	movwf	136,c	;volatile
 25764                           
 25765                           ; BSR set to: 14
 25766                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
 25767  007DDC  6889               	setf	137,c	;volatile
 25768                           
 25769                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0x58;
 25770  007DDE  0E58               	movlw	88
 25771  007DE0  6E8A               	movwf	138,c	;volatile
 25772                           
 25773                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0x00;
 25774  007DE2  0E00               	movlw	0
 25775  007DE4  6E8B               	movwf	139,c	;volatile
 25776                           
 25777                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0x00;
 25778  007DE6  0E00               	movlw	0
 25779  007DE8  010F               	movlb	15	; () banked
 25780  007DEA  6F26               	movwf	38,b	;volatile
 25781                           
 25782                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0x00;
 25783  007DEC  0E00               	movlw	0
 25784  007DEE  6F21               	movwf	33,b	;volatile
 25785                           
 25786                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0x00;
 25787  007DF0  0E00               	movlw	0
 25788  007DF2  6F19               	movwf	25,b	;volatile
 25789                           
 25790                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x00;
 25791  007DF4  0E00               	movlw	0
 25792  007DF6  6F2E               	movwf	46,b	;volatile
 25793                           
 25794                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0x01;
 25795  007DF8  0E01               	movlw	1
 25796  007DFA  6F11               	movwf	17,b	;volatile
 25797                           
 25798                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
 25799  007DFC  0E00               	movlw	0
 25800  007DFE  6F25               	movwf	37,b	;volatile
 25801                           
 25802                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
 25803  007E00  0E00               	movlw	0
 25804  007E02  6F2D               	movwf	45,b	;volatile
 25805                           
 25806                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0xF7;
 25807  007E04  0EF7               	movlw	247
 25808  007E06  6F18               	movwf	24,b	;volatile
 25809                           
 25810                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
 25811  007E08  0E00               	movlw	0
 25812  007E0A  6F10               	movwf	16,b	;volatile
 25813                           
 25814                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
 25815  007E0C  0E00               	movlw	0
 25816  007E0E  6F20               	movwf	32,b	;volatile
 25817                           
 25818                           ;mcc_generated_files/pin_manager.c: 96:     ODCONE = 0x00;
 25819  007E10  0E00               	movlw	0
 25820  007E12  6F2C               	movwf	44,b	;volatile
 25821                           
 25822                           ;mcc_generated_files/pin_manager.c: 97:     ODCONA = 0x00;
 25823  007E14  0E00               	movlw	0
 25824  007E16  6F0F               	movwf	15,b	;volatile
 25825                           
 25826                           ;mcc_generated_files/pin_manager.c: 98:     ODCONB = 0x00;
 25827  007E18  0E00               	movlw	0
 25828  007E1A  6F17               	movwf	23,b	;volatile
 25829                           
 25830                           ;mcc_generated_files/pin_manager.c: 99:     ODCONC = 0x00;
 25831  007E1C  0E00               	movlw	0
 25832  007E1E  6F1F               	movwf	31,b	;volatile
 25833                           
 25834                           ;mcc_generated_files/pin_manager.c: 100:     ODCOND = 0x00;
 25835  007E20  0E00               	movlw	0
 25836  007E22  6F24               	movwf	36,b	;volatile
 25837                           
 25838                           ; BSR set to: 15
 25839                           ;mcc_generated_files/pin_manager.c: 105:     SLRCONA = 0xFF;
 25840  007E24  690E               	setf	14,b	;volatile
 25841                           
 25842                           ; BSR set to: 15
 25843                           ;mcc_generated_files/pin_manager.c: 106:     SLRCONB = 0xFF;
 25844  007E26  6916               	setf	22,b	;volatile
 25845                           
 25846                           ; BSR set to: 15
 25847                           ;mcc_generated_files/pin_manager.c: 107:     SLRCONC = 0xFF;
 25848  007E28  691E               	setf	30,b	;volatile
 25849                           
 25850                           ; BSR set to: 15
 25851                           ;mcc_generated_files/pin_manager.c: 108:     SLRCOND = 0xFF;
 25852  007E2A  6923               	setf	35,b	;volatile
 25853                           
 25854                           ;mcc_generated_files/pin_manager.c: 109:     SLRCONE = 0x07;
 25855  007E2C  0E07               	movlw	7
 25856  007E2E  6F2B               	movwf	43,b	;volatile
 25857                           
 25858                           ; BSR set to: 15
 25859                           ;mcc_generated_files/pin_manager.c: 114:     INLVLA = 0xFF;
 25860  007E30  690D               	setf	13,b	;volatile
 25861                           
 25862                           ; BSR set to: 15
 25863                           ;mcc_generated_files/pin_manager.c: 115:     INLVLB = 0xFF;
 25864  007E32  6915               	setf	21,b	;volatile
 25865                           
 25866                           ; BSR set to: 15
 25867                           ;mcc_generated_files/pin_manager.c: 116:     INLVLC = 0xFF;
 25868  007E34  691D               	setf	29,b	;volatile
 25869                           
 25870                           ; BSR set to: 15
 25871                           ;mcc_generated_files/pin_manager.c: 117:     INLVLD = 0xFF;
 25872  007E36  6922               	setf	34,b	;volatile
 25873                           
 25874                           ;mcc_generated_files/pin_manager.c: 118:     INLVLE = 0x0F;
 25875  007E38  0E0F               	movlw	15
 25876  007E3A  6F2A               	movwf	42,b	;volatile
 25877                           
 25878                           ;mcc_generated_files/pin_manager.c: 127:     SSP1CLKPPS = 0x13;
 25879  007E3C  0E13               	movlw	19
 25880  007E3E  010E               	movlb	14	; () banked
 25881  007E40  6FB7               	movwf	183,b	;volatile
 25882                           
 25883                           ;mcc_generated_files/pin_manager.c: 128:     RX1PPS = 0x16;
 25884  007E42  0E16               	movlw	22
 25885  007E44  6FB5               	movwf	181,b	;volatile
 25886                           
 25887                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x0F;
 25888  007E46  0E0F               	movlw	15
 25889  007E48  6FFA               	movwf	250,b	;volatile
 25890                           
 25891                           ;mcc_generated_files/pin_manager.c: 130:     RC4PPS = 0x10;
 25892  007E4A  0E10               	movlw	16
 25893  007E4C  6FFB               	movwf	251,b	;volatile
 25894                           
 25895                           ;mcc_generated_files/pin_manager.c: 131:     RC7PPS = 0x09;
 25896  007E4E  0E09               	movlw	9
 25897  007E50  6FFE               	movwf	254,b	;volatile
 25898                           
 25899                           ;mcc_generated_files/pin_manager.c: 132:     SSP1DATPPS = 0x14;
 25900  007E52  0E14               	movlw	20
 25901  007E54  6FB8               	movwf	184,b	;volatile
 25902                           
 25903                           ; BSR set to: 14
 25904  007E56  0012               	return		;funcret
 25905  007E58                     __end_of_PIN_MANAGER_Initialize:
 25906                           	callstack 0
 25907                           
 25908 ;; *************** function _OSCILLATOR_Initialize *****************
 25909 ;; Defined at:
 25910 ;;		line 65 in file "mcc_generated_files/mcc.c"
 25911 ;; Parameters:    Size  Location     Type
 25912 ;;		None
 25913 ;; Auto vars:     Size  Location     Type
 25914 ;;		None
 25915 ;; Return value:  Size  Location     Type
 25916 ;;                  1    wreg      void 
 25917 ;; Registers used:
 25918 ;;		wreg, status,2
 25919 ;; Tracked objects:
 25920 ;;		On entry : 3F/E
 25921 ;;		On exit  : 3F/E
 25922 ;;		Unchanged: 0/0
 25923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25927 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25928 ;;Total ram usage:        0 bytes
 25929 ;; Hardware stack levels used: 1
 25930 ;; Hardware stack levels required when called: 4
 25931 ;; This function calls:
 25932 ;;		Nothing
 25933 ;; This function is called by:
 25934 ;;		_SYSTEM_Initialize
 25935 ;; This function uses a non-reentrant model
 25936 ;;
 25937                           
 25938                           	psect	text101
 25939  009A9C                     __ptext101:
 25940                           	callstack 0
 25941  009A9C                     _OSCILLATOR_Initialize:
 25942                           	callstack 25
 25943                           
 25944                           ; BSR set to: 14
 25945                           ;mcc_generated_files/mcc.c: 68:     OSCCON1 = 0x60;
 25946                           
 25947                           ; BSR set to: 14
 25948                           ;incstack = 0
 25949  009A9C  0E60               	movlw	96
 25950  009A9E  6FD8               	movwf	216,b	;volatile
 25951                           
 25952                           ;mcc_generated_files/mcc.c: 70:     OSCCON3 = 0x00;
 25953  009AA0  0E00               	movlw	0
 25954  009AA2  6FDA               	movwf	218,b	;volatile
 25955                           
 25956                           ;mcc_generated_files/mcc.c: 72:     OSCEN = 0x00;
 25957  009AA4  0E00               	movlw	0
 25958  009AA6  6FDC               	movwf	220,b	;volatile
 25959                           
 25960                           ;mcc_generated_files/mcc.c: 74:     OSCFRQ = 0x08;
 25961  009AA8  0E08               	movlw	8
 25962  009AAA  6FDE               	movwf	222,b	;volatile
 25963                           
 25964                           ;mcc_generated_files/mcc.c: 76:     OSCTUNE = 0x00;
 25965  009AAC  0E00               	movlw	0
 25966  009AAE  6FDD               	movwf	221,b	;volatile
 25967                           
 25968                           ; BSR set to: 14
 25969  009AB0  0012               	return		;funcret
 25970  009AB2                     __end_of_OSCILLATOR_Initialize:
 25971                           	callstack 0
 25972                           
 25973 ;; *************** function _INTERRUPT_Initialize *****************
 25974 ;; Defined at:
 25975 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 25976 ;; Parameters:    Size  Location     Type
 25977 ;;		None
 25978 ;; Auto vars:     Size  Location     Type
 25979 ;;		None
 25980 ;; Return value:  Size  Location     Type
 25981 ;;                  1    wreg      void 
 25982 ;; Registers used:
 25983 ;;		None
 25984 ;; Tracked objects:
 25985 ;;		On entry : 3F/0
 25986 ;;		On exit  : 3F/0
 25987 ;;		Unchanged: 3F/0
 25988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25992 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25993 ;;Total ram usage:        0 bytes
 25994 ;; Hardware stack levels used: 1
 25995 ;; Hardware stack levels required when called: 4
 25996 ;; This function calls:
 25997 ;;		Nothing
 25998 ;; This function is called by:
 25999 ;;		_SYSTEM_Initialize
 26000 ;; This function uses a non-reentrant model
 26001 ;;
 26002                           
 26003                           	psect	text102
 26004  009C7A                     __ptext102:
 26005                           	callstack 0
 26006  009C7A                     _INTERRUPT_Initialize:
 26007                           	callstack 25
 26008                           
 26009                           ; BSR set to: 0
 26010                           ;mcc_generated_files/interrupt_manager.c: 55:     INTCONbits.IPEN = 0;
 26011                           
 26012                           ; BSR set to: 14
 26013                           ;incstack = 0
 26014  009C7A  9AF2               	bcf	242,5,c	;volatile
 26015                           
 26016                           ; BSR set to: 0
 26017  009C7C  0012               	return		;funcret
 26018  009C7E                     __end_of_INTERRUPT_Initialize:
 26019                           	callstack 0
 26020                           
 26021 ;; *************** function _I2C1_Initialize *****************
 26022 ;; Defined at:
 26023 ;;		line 167 in file "mcc_generated_files/i2c1_master.c"
 26024 ;; Parameters:    Size  Location     Type
 26025 ;;		None
 26026 ;; Auto vars:     Size  Location     Type
 26027 ;;		None
 26028 ;; Return value:  Size  Location     Type
 26029 ;;                  1    wreg      void 
 26030 ;; Registers used:
 26031 ;;		wreg, status,2
 26032 ;; Tracked objects:
 26033 ;;		On entry : 3F/E
 26034 ;;		On exit  : 3F/E
 26035 ;;		Unchanged: 3F/0
 26036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26040 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26041 ;;Total ram usage:        0 bytes
 26042 ;; Hardware stack levels used: 1
 26043 ;; Hardware stack levels required when called: 4
 26044 ;; This function calls:
 26045 ;;		Nothing
 26046 ;; This function is called by:
 26047 ;;		_SYSTEM_Initialize
 26048 ;; This function uses a non-reentrant model
 26049 ;;
 26050                           
 26051                           	psect	text103
 26052  009AF0                     __ptext103:
 26053                           	callstack 0
 26054  009AF0                     _I2C1_Initialize:
 26055                           	callstack 25
 26056                           
 26057                           ; BSR set to: 14
 26058                           ;mcc_generated_files/i2c1_master.c: 169:     SSP1STAT = 0x80;
 26059                           
 26060                           ; BSR set to: 0
 26061                           ;incstack = 0
 26062  009AF0  0E80               	movlw	128
 26063  009AF2  6E95               	movwf	149,c	;volatile
 26064                           
 26065                           ;mcc_generated_files/i2c1_master.c: 170:     SSP1CON1 = 0x08;
 26066  009AF4  0E08               	movlw	8
 26067  009AF6  6E96               	movwf	150,c	;volatile
 26068                           
 26069                           ;mcc_generated_files/i2c1_master.c: 171:     SSP1CON2 = 0x00;
 26070  009AF8  0E00               	movlw	0
 26071  009AFA  6E97               	movwf	151,c	;volatile
 26072                           
 26073                           ;mcc_generated_files/i2c1_master.c: 172:     SSP1ADD = 0x9F;
 26074  009AFC  0E9F               	movlw	159
 26075  009AFE  6E93               	movwf	147,c	;volatile
 26076                           
 26077                           ; BSR set to: 14
 26078                           ;mcc_generated_files/i2c1_master.c: 173:     SSP1CON1bits.SSPEN = 0;
 26079  009B00  9A96               	bcf	150,5,c	;volatile
 26080                           
 26081                           ; BSR set to: 14
 26082  009B02  0012               	return		;funcret
 26083  009B04                     __end_of_I2C1_Initialize:
 26084                           	callstack 0
 26085                           
 26086 ;; *************** function _EUSART1_Initialize *****************
 26087 ;; Defined at:
 26088 ;;		line 88 in file "mcc_generated_files/eusart1.c"
 26089 ;; Parameters:    Size  Location     Type
 26090 ;;		None
 26091 ;; Auto vars:     Size  Location     Type
 26092 ;;		None
 26093 ;; Return value:  Size  Location     Type
 26094 ;;                  1    wreg      void 
 26095 ;; Registers used:
 26096 ;;		wreg, status,2, status,0, cstack
 26097 ;; Tracked objects:
 26098 ;;		On entry : 3F/E
 26099 ;;		On exit  : 3F/E
 26100 ;;		Unchanged: 0/0
 26101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26105 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26106 ;;Total ram usage:        0 bytes
 26107 ;; Hardware stack levels used: 1
 26108 ;; Hardware stack levels required when called: 5
 26109 ;; This function calls:
 26110 ;;		_EUSART1_SetErrorHandler
 26111 ;;		_EUSART1_SetFramingErrorHandler
 26112 ;;		_EUSART1_SetOverrunErrorHandler
 26113 ;;		_EUSART1_SetRxInterruptHandler
 26114 ;;		_EUSART1_SetTxInterruptHandler
 26115 ;; This function is called by:
 26116 ;;		_SYSTEM_Initialize
 26117 ;; This function uses a non-reentrant model
 26118 ;;
 26119                           
 26120                           	psect	text104
 26121  008436                     __ptext104:
 26122                           	callstack 0
 26123  008436                     _EUSART1_Initialize:
 26124                           	callstack 24
 26125                           
 26126                           ; BSR set to: 14
 26127                           ;mcc_generated_files/eusart1.c: 91:     PIE3bits.RC1IE = 0;
 26128                           
 26129                           ; BSR set to: 14
 26130                           ;incstack = 0
 26131  008436  9BC5               	bcf	197,5,b	;volatile
 26132                           
 26133                           ; BSR set to: 14
 26134                           ;mcc_generated_files/eusart1.c: 92:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
 26135  008438  0E26               	movlw	low _EUSART1_Receive_ISR
 26136  00843A  6E10               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler^0,c
 26137  00843C  0E7D               	movlw	high _EUSART1_Receive_ISR
 26138  00843E  6E11               	movwf	(EUSART1_SetRxInterruptHandler@interruptHandler+1)^0,c
 26139  008440  ECD5  F04D         	call	_EUSART1_SetRxInterruptHandler	;wreg free
 26140                           
 26141                           ; BSR set to: 14
 26142                           ;mcc_generated_files/eusart1.c: 93:     PIE3bits.TX1IE = 0;
 26143  008444  99C5               	bcf	197,4,b	;volatile
 26144                           
 26145                           ;mcc_generated_files/eusart1.c: 94:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
 26146  008446  0E96               	movlw	low _EUSART1_Transmit_ISR
 26147  008448  6E10               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler^0,c
 26148  00844A  0E94               	movlw	high _EUSART1_Transmit_ISR
 26149  00844C  6E11               	movwf	(EUSART1_SetTxInterruptHandler@interruptHandler+1)^0,c
 26150  00844E  ECD0  F04D         	call	_EUSART1_SetTxInterruptHandler	;wreg free
 26151                           
 26152                           ; BSR set to: 14
 26153                           ;mcc_generated_files/eusart1.c: 98:     BAUD1CON = 0x08;
 26154  008452  0E08               	movlw	8
 26155  008454  6E9F               	movwf	159,c	;volatile
 26156                           
 26157                           ; BSR set to: 14
 26158                           ;mcc_generated_files/eusart1.c: 101:     RC1STA = 0x90;
 26159  008456  0E90               	movlw	144
 26160  008458  6E9D               	movwf	157,c	;volatile
 26161                           
 26162                           ; BSR set to: 14
 26163                           ;mcc_generated_files/eusart1.c: 104:     TX1STA = 0x24;
 26164  00845A  0E24               	movlw	36
 26165  00845C  6E9E               	movwf	158,c	;volatile
 26166                           
 26167                           ; BSR set to: 14
 26168                           ;mcc_generated_files/eusart1.c: 107:     SP1BRGL = 0x82;
 26169  00845E  0E82               	movlw	130
 26170  008460  6E9B               	movwf	155,c	;volatile
 26171                           
 26172                           ; BSR set to: 14
 26173                           ;mcc_generated_files/eusart1.c: 110:     SP1BRGH = 0x06;
 26174  008462  0E06               	movlw	6
 26175  008464  6E9C               	movwf	156,c	;volatile
 26176                           
 26177                           ; BSR set to: 14
 26178                           ;mcc_generated_files/eusart1.c: 113:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
 26179  008466  0EAA               	movlw	low _EUSART1_DefaultFramingErrorHandler
 26180  008468  6E10               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
 26181  00846A  0E9C               	movlw	high _EUSART1_DefaultFramingErrorHandler
 26182  00846C  6E11               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
 26183  00846E  ECDF  F04D         	call	_EUSART1_SetFramingErrorHandler	;wreg free
 26184                           
 26185                           ; BSR set to: 14
 26186                           ;mcc_generated_files/eusart1.c: 114:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
 26187  008472  0E6A               	movlw	low _EUSART1_DefaultOverrunErrorHandler
 26188  008474  6E10               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
 26189  008476  0E9C               	movlw	high _EUSART1_DefaultOverrunErrorHandler
 26190  008478  6E11               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
 26191  00847A  ECDA  F04D         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
 26192                           
 26193                           ; BSR set to: 14
 26194                           ;mcc_generated_files/eusart1.c: 115:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
 26195  00847E  0E70               	movlw	low _EUSART1_DefaultErrorHandler
 26196  008480  6E10               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
 26197  008482  0E9C               	movlw	high _EUSART1_DefaultErrorHandler
 26198  008484  6E11               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
 26199  008486  ECE4  F04D         	call	_EUSART1_SetErrorHandler	;wreg free
 26200                           
 26201                           ;mcc_generated_files/eusart1.c: 117:     eusart1RxLastError.status = 0;
 26202  00848A  0E00               	movlw	0
 26203  00848C  0101               	movlb	1	; () banked
 26204  00848E  6F9E               	movwf	_eusart1RxLastError& (0+255),b	;volatile
 26205                           
 26206                           ;mcc_generated_files/eusart1.c: 120:     eusart1TxHead = 0;
 26207  008490  0E00               	movlw	0
 26208  008492  0100               	movlb	0	; () banked
 26209  008494  6F97               	movwf	_eusart1TxHead& (0+255),b	;volatile
 26210                           
 26211                           ;mcc_generated_files/eusart1.c: 121:     eusart1TxTail = 0;
 26212  008496  0E00               	movlw	0
 26213  008498  6F96               	movwf	_eusart1TxTail& (0+255),b	;volatile
 26214                           
 26215                           ;mcc_generated_files/eusart1.c: 122:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
 26216  00849A  0E08               	movlw	8
 26217  00849C  0101               	movlb	1	; () banked
 26218  00849E  6FFE               	movwf	_eusart1TxBufferRemaining& (0+255),b	;volatile
 26219                           
 26220                           ;mcc_generated_files/eusart1.c: 124:     eusart1RxHead = 0;
 26221  0084A0  0E00               	movlw	0
 26222  0084A2  0100               	movlb	0	; () banked
 26223  0084A4  6F95               	movwf	_eusart1RxHead& (0+255),b	;volatile
 26224                           
 26225                           ;mcc_generated_files/eusart1.c: 125:     eusart1RxTail = 0;
 26226  0084A6  0E00               	movlw	0
 26227  0084A8  6F94               	movwf	_eusart1RxTail& (0+255),b	;volatile
 26228                           
 26229                           ;mcc_generated_files/eusart1.c: 126:     eusart1RxCount = 0;
 26230  0084AA  0E00               	movlw	0
 26231  0084AC  6F93               	movwf	_eusart1RxCount& (0+255),b	;volatile
 26232                           
 26233                           ; BSR set to: 0
 26234                           ;mcc_generated_files/eusart1.c: 129:     PIE3bits.RC1IE = 1;
 26235  0084AE  010E               	movlb	14	; () banked
 26236  0084B0  8BC5               	bsf	197,5,b	;volatile
 26237                           
 26238                           ; BSR set to: 14
 26239  0084B2  0012               	return		;funcret
 26240  0084B4                     __end_of_EUSART1_Initialize:
 26241                           	callstack 0
 26242                           
 26243 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
 26244 ;; Defined at:
 26245 ;;		line 276 in file "mcc_generated_files/eusart1.c"
 26246 ;; Parameters:    Size  Location     Type
 26247 ;;  interruptHan    2   15[COMRAM] PTR FTN()void 
 26248 ;;		 -> EUSART1_Transmit_ISR(1), 
 26249 ;; Auto vars:     Size  Location     Type
 26250 ;;		None
 26251 ;; Return value:  Size  Location     Type
 26252 ;;                  1    wreg      void 
 26253 ;; Registers used:
 26254 ;;		wreg, status,2, status,0
 26255 ;; Tracked objects:
 26256 ;;		On entry : 3F/E
 26257 ;;		On exit  : 3F/E
 26258 ;;		Unchanged: 3F/0
 26259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26260 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26263 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26264 ;;Total ram usage:        2 bytes
 26265 ;; Hardware stack levels used: 1
 26266 ;; Hardware stack levels required when called: 4
 26267 ;; This function calls:
 26268 ;;		Nothing
 26269 ;; This function is called by:
 26270 ;;		_EUSART1_Initialize
 26271 ;; This function uses a non-reentrant model
 26272 ;;
 26273                           
 26274                           	psect	text105
 26275  009BA0                     __ptext105:
 26276                           	callstack 0
 26277  009BA0                     _EUSART1_SetTxInterruptHandler:
 26278                           	callstack 24
 26279                           
 26280                           ; BSR set to: 14
 26281                           ;mcc_generated_files/eusart1.c: 277:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
 26282                           
 26283                           ; BSR set to: 14
 26284                           ;incstack = 0
 26285  009BA0  C010  F2EB         	movff	EUSART1_SetTxInterruptHandler@interruptHandler,_EUSART1_TxDefaultInterruptHandler
 26286  009BA4  C011  F2EC         	movff	EUSART1_SetTxInterruptHandler@interruptHandler+1,_EUSART1_TxDefaultInterruptHandl
      +                          er+1
 26287                           
 26288                           ; BSR set to: 14
 26289  009BA8  0012               	return		;funcret
 26290  009BAA                     __end_of_EUSART1_SetTxInterruptHandler:
 26291                           	callstack 0
 26292                           
 26293 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
 26294 ;; Defined at:
 26295 ;;		line 280 in file "mcc_generated_files/eusart1.c"
 26296 ;; Parameters:    Size  Location     Type
 26297 ;;  interruptHan    2   15[COMRAM] PTR FTN()void 
 26298 ;;		 -> EUSART1_Receive_ISR(1), 
 26299 ;; Auto vars:     Size  Location     Type
 26300 ;;		None
 26301 ;; Return value:  Size  Location     Type
 26302 ;;                  1    wreg      void 
 26303 ;; Registers used:
 26304 ;;		wreg, status,2, status,0
 26305 ;; Tracked objects:
 26306 ;;		On entry : 3F/E
 26307 ;;		On exit  : 3F/E
 26308 ;;		Unchanged: 3F/0
 26309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26310 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26313 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26314 ;;Total ram usage:        2 bytes
 26315 ;; Hardware stack levels used: 1
 26316 ;; Hardware stack levels required when called: 4
 26317 ;; This function calls:
 26318 ;;		Nothing
 26319 ;; This function is called by:
 26320 ;;		_EUSART1_Initialize
 26321 ;; This function uses a non-reentrant model
 26322 ;;
 26323                           
 26324                           	psect	text106
 26325  009BAA                     __ptext106:
 26326                           	callstack 0
 26327  009BAA                     _EUSART1_SetRxInterruptHandler:
 26328                           	callstack 24
 26329                           
 26330                           ; BSR set to: 14
 26331                           ;mcc_generated_files/eusart1.c: 281:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
 26332                           
 26333                           ; BSR set to: 14
 26334                           ;incstack = 0
 26335  009BAA  C010  F2E9         	movff	EUSART1_SetRxInterruptHandler@interruptHandler,_EUSART1_RxDefaultInterruptHandler
 26336  009BAE  C011  F2EA         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+1,_EUSART1_RxDefaultInterruptHandl
      +                          er+1
 26337                           
 26338                           ; BSR set to: 14
 26339  009BB2  0012               	return		;funcret
 26340  009BB4                     __end_of_EUSART1_SetRxInterruptHandler:
 26341                           	callstack 0
 26342                           
 26343 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
 26344 ;; Defined at:
 26345 ;;		line 268 in file "mcc_generated_files/eusart1.c"
 26346 ;; Parameters:    Size  Location     Type
 26347 ;;  interruptHan    2   15[COMRAM] PTR FTN()void 
 26348 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
 26349 ;; Auto vars:     Size  Location     Type
 26350 ;;		None
 26351 ;; Return value:  Size  Location     Type
 26352 ;;                  1    wreg      void 
 26353 ;; Registers used:
 26354 ;;		wreg, status,2, status,0
 26355 ;; Tracked objects:
 26356 ;;		On entry : 3F/E
 26357 ;;		On exit  : 3F/E
 26358 ;;		Unchanged: 3F/0
 26359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26360 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26363 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26364 ;;Total ram usage:        2 bytes
 26365 ;; Hardware stack levels used: 1
 26366 ;; Hardware stack levels required when called: 4
 26367 ;; This function calls:
 26368 ;;		Nothing
 26369 ;; This function is called by:
 26370 ;;		_EUSART1_Initialize
 26371 ;; This function uses a non-reentrant model
 26372 ;;
 26373                           
 26374                           	psect	text107
 26375  009BB4                     __ptext107:
 26376                           	callstack 0
 26377  009BB4                     _EUSART1_SetOverrunErrorHandler:
 26378                           	callstack 24
 26379                           
 26380                           ; BSR set to: 14
 26381                           ;mcc_generated_files/eusart1.c: 269:     EUSART1_OverrunErrorHandler = interruptHandler;
 26382                           
 26383                           ; BSR set to: 14
 26384                           ;incstack = 0
 26385  009BB4  C010  F2E5         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
 26386  009BB8  C011  F2E6         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
 26387                           
 26388                           ; BSR set to: 14
 26389  009BBC  0012               	return		;funcret
 26390  009BBE                     __end_of_EUSART1_SetOverrunErrorHandler:
 26391                           	callstack 0
 26392                           
 26393 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
 26394 ;; Defined at:
 26395 ;;		line 264 in file "mcc_generated_files/eusart1.c"
 26396 ;; Parameters:    Size  Location     Type
 26397 ;;  interruptHan    2   15[COMRAM] PTR FTN()void 
 26398 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
 26399 ;; Auto vars:     Size  Location     Type
 26400 ;;		None
 26401 ;; Return value:  Size  Location     Type
 26402 ;;                  1    wreg      void 
 26403 ;; Registers used:
 26404 ;;		wreg, status,2, status,0
 26405 ;; Tracked objects:
 26406 ;;		On entry : 3F/E
 26407 ;;		On exit  : 3F/E
 26408 ;;		Unchanged: 3F/0
 26409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26410 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26413 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26414 ;;Total ram usage:        2 bytes
 26415 ;; Hardware stack levels used: 1
 26416 ;; Hardware stack levels required when called: 4
 26417 ;; This function calls:
 26418 ;;		Nothing
 26419 ;; This function is called by:
 26420 ;;		_EUSART1_Initialize
 26421 ;; This function uses a non-reentrant model
 26422 ;;
 26423                           
 26424                           	psect	text108
 26425  009BBE                     __ptext108:
 26426                           	callstack 0
 26427  009BBE                     _EUSART1_SetFramingErrorHandler:
 26428                           	callstack 24
 26429                           
 26430                           ; BSR set to: 14
 26431                           ;mcc_generated_files/eusart1.c: 265:     EUSART1_FramingErrorHandler = interruptHandler;
 26432                           
 26433                           ; BSR set to: 14
 26434                           ;incstack = 0
 26435  009BBE  C010  F2E7         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
 26436  009BC2  C011  F2E8         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
 26437                           
 26438                           ; BSR set to: 14
 26439  009BC6  0012               	return		;funcret
 26440  009BC8                     __end_of_EUSART1_SetFramingErrorHandler:
 26441                           	callstack 0
 26442                           
 26443 ;; *************** function _EUSART1_SetErrorHandler *****************
 26444 ;; Defined at:
 26445 ;;		line 272 in file "mcc_generated_files/eusart1.c"
 26446 ;; Parameters:    Size  Location     Type
 26447 ;;  interruptHan    2   15[COMRAM] PTR FTN()void 
 26448 ;;		 -> EUSART1_DefaultErrorHandler(1), 
 26449 ;; Auto vars:     Size  Location     Type
 26450 ;;		None
 26451 ;; Return value:  Size  Location     Type
 26452 ;;                  1    wreg      void 
 26453 ;; Registers used:
 26454 ;;		wreg, status,2, status,0
 26455 ;; Tracked objects:
 26456 ;;		On entry : 3F/E
 26457 ;;		On exit  : 3F/E
 26458 ;;		Unchanged: 3F/0
 26459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26460 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26463 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26464 ;;Total ram usage:        2 bytes
 26465 ;; Hardware stack levels used: 1
 26466 ;; Hardware stack levels required when called: 4
 26467 ;; This function calls:
 26468 ;;		Nothing
 26469 ;; This function is called by:
 26470 ;;		_EUSART1_Initialize
 26471 ;; This function uses a non-reentrant model
 26472 ;;
 26473                           
 26474                           	psect	text109
 26475  009BC8                     __ptext109:
 26476                           	callstack 0
 26477  009BC8                     _EUSART1_SetErrorHandler:
 26478                           	callstack 24
 26479                           
 26480                           ; BSR set to: 14
 26481                           ;mcc_generated_files/eusart1.c: 273:     EUSART1_ErrorHandler = interruptHandler;
 26482                           
 26483                           ; BSR set to: 14
 26484                           ;incstack = 0
 26485  009BC8  C010  F2E3         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
 26486  009BCC  C011  F2E4         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
 26487                           
 26488                           ; BSR set to: 14
 26489  009BD0  0012               	return		;funcret
 26490  009BD2                     __end_of_EUSART1_SetErrorHandler:
 26491                           	callstack 0
 26492                           
 26493 ;; *************** function _ADCC_Initialize *****************
 26494 ;; Defined at:
 26495 ;;		line 62 in file "mcc_generated_files/adcc.c"
 26496 ;; Parameters:    Size  Location     Type
 26497 ;;		None
 26498 ;; Auto vars:     Size  Location     Type
 26499 ;;		None
 26500 ;; Return value:  Size  Location     Type
 26501 ;;                  1    wreg      void 
 26502 ;; Registers used:
 26503 ;;		wreg, status,2
 26504 ;; Tracked objects:
 26505 ;;		On entry : 3F/E
 26506 ;;		On exit  : 3F/F
 26507 ;;		Unchanged: 0/0
 26508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26512 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26513 ;;Total ram usage:        0 bytes
 26514 ;; Hardware stack levels used: 1
 26515 ;; Hardware stack levels required when called: 4
 26516 ;; This function calls:
 26517 ;;		Nothing
 26518 ;; This function is called by:
 26519 ;;		_SYSTEM_Initialize
 26520 ;; This function uses a non-reentrant model
 26521 ;;
 26522                           
 26523                           	psect	text110
 26524  008FC2                     __ptext110:
 26525                           	callstack 0
 26526  008FC2                     _ADCC_Initialize:
 26527                           	callstack 25
 26528                           
 26529                           ; BSR set to: 14
 26530                           ;mcc_generated_files/adcc.c: 66:     ADLTHL = 0x00;
 26531                           
 26532                           ; BSR set to: 14
 26533                           ;incstack = 0
 26534  008FC2  0E00               	movlw	0
 26535  008FC4  6E6A               	movwf	106,c	;volatile
 26536                           
 26537                           ;mcc_generated_files/adcc.c: 68:     ADLTHH = 0x00;
 26538  008FC6  0E00               	movlw	0
 26539  008FC8  6E6B               	movwf	107,c	;volatile
 26540                           
 26541                           ;mcc_generated_files/adcc.c: 70:     ADUTHL = 0x00;
 26542  008FCA  0E00               	movlw	0
 26543  008FCC  6E6C               	movwf	108,c	;volatile
 26544                           
 26545                           ;mcc_generated_files/adcc.c: 72:     ADUTHH = 0x00;
 26546  008FCE  0E00               	movlw	0
 26547  008FD0  6E6D               	movwf	109,c	;volatile
 26548                           
 26549                           ;mcc_generated_files/adcc.c: 74:     ADSTPTL = 0x00;
 26550  008FD2  0E00               	movlw	0
 26551  008FD4  6E68               	movwf	104,c	;volatile
 26552                           
 26553                           ;mcc_generated_files/adcc.c: 76:     ADSTPTH = 0x00;
 26554  008FD6  0E00               	movlw	0
 26555  008FD8  6E69               	movwf	105,c	;volatile
 26556                           
 26557                           ;mcc_generated_files/adcc.c: 78:     ADRPT = 0x00;
 26558  008FDA  0E00               	movlw	0
 26559  008FDC  6E66               	movwf	102,c	;volatile
 26560                           
 26561                           ;mcc_generated_files/adcc.c: 80:     ADPCH = 0x00;
 26562  008FDE  0E00               	movlw	0
 26563  008FE0  010F               	movlb	15	; () banked
 26564  008FE2  6F5F               	movwf	95,b	;volatile
 26565                           
 26566                           ;mcc_generated_files/adcc.c: 82:     ADCAP = 0x00;
 26567  008FE4  0E00               	movlw	0
 26568  008FE6  6F5D               	movwf	93,b	;volatile
 26569                           
 26570                           ;mcc_generated_files/adcc.c: 84:     ADPRE = 0x00;
 26571  008FE8  0E00               	movlw	0
 26572  008FEA  6F5E               	movwf	94,b	;volatile
 26573                           
 26574                           ;mcc_generated_files/adcc.c: 86:     ADCON1 = 0x00;
 26575  008FEC  0E00               	movlw	0
 26576  008FEE  6F59               	movwf	89,b	;volatile
 26577                           
 26578                           ;mcc_generated_files/adcc.c: 88:     ADCON2 = 0x00;
 26579  008FF0  0E00               	movlw	0
 26580  008FF2  6F5A               	movwf	90,b	;volatile
 26581                           
 26582                           ;mcc_generated_files/adcc.c: 90:     ADCON3 = 0x00;
 26583  008FF4  0E00               	movlw	0
 26584  008FF6  6F5B               	movwf	91,b	;volatile
 26585                           
 26586                           ;mcc_generated_files/adcc.c: 92:     ADSTAT = 0x00;
 26587  008FF8  0E00               	movlw	0
 26588  008FFA  6E65               	movwf	101,c	;volatile
 26589                           
 26590                           ;mcc_generated_files/adcc.c: 94:     ADREF = 0x00;
 26591  008FFC  0E00               	movlw	0
 26592  008FFE  6F58               	movwf	88,b	;volatile
 26593                           
 26594                           ;mcc_generated_files/adcc.c: 96:     ADACT = 0x00;
 26595  009000  0E00               	movlw	0
 26596  009002  6F56               	movwf	86,b	;volatile
 26597                           
 26598                           ;mcc_generated_files/adcc.c: 98:     ADCLK = 0x3F;
 26599  009004  0E3F               	movlw	63
 26600  009006  6F57               	movwf	87,b	;volatile
 26601                           
 26602                           ;mcc_generated_files/adcc.c: 100:     ADCON0 = 0x80;
 26603  009008  0E80               	movlw	128
 26604  00900A  6E60               	movwf	96,c	;volatile
 26605                           
 26606                           ;mcc_generated_files/adcc.c: 102:     ADACQ = 0x00;
 26607  00900C  0E00               	movlw	0
 26608  00900E  6F5C               	movwf	92,b	;volatile
 26609                           
 26610                           ; BSR set to: 15
 26611  009010  0012               	return		;funcret
 26612  009012                     __end_of_ADCC_Initialize:
 26613                           	callstack 0
 26614                           
 26615 ;; *************** function _EUSART1_is_rx_ready *****************
 26616 ;; Defined at:
 26617 ;;		line 137 in file "mcc_generated_files/eusart1.c"
 26618 ;; Parameters:    Size  Location     Type
 26619 ;;		None
 26620 ;; Auto vars:     Size  Location     Type
 26621 ;;		None
 26622 ;; Return value:  Size  Location     Type
 26623 ;;                  1    wreg      _Bool 
 26624 ;; Registers used:
 26625 ;;		wreg, status,2
 26626 ;; Tracked objects:
 26627 ;;		On entry : 0/1
 26628 ;;		On exit  : 3F/0
 26629 ;;		Unchanged: 0/0
 26630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26634 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26635 ;;Total ram usage:        0 bytes
 26636 ;; Hardware stack levels used: 1
 26637 ;; Hardware stack levels required when called: 4
 26638 ;; This function calls:
 26639 ;;		Nothing
 26640 ;; This function is called by:
 26641 ;;		_main
 26642 ;; This function uses a non-reentrant model
 26643 ;;
 26644                           
 26645                           	psect	text111
 26646  009B16                     __ptext111:
 26647                           	callstack 0
 26648  009B16                     _EUSART1_is_rx_ready:
 26649                           	callstack 26
 26650                           
 26651                           ;mcc_generated_files/eusart1.c: 139:     return (eusart1RxCount ? 1 : 0);
 26652                           
 26653                           ; BSR set to: 15
 26654                           ;incstack = 0
 26655  009B16  0100               	movlb	0	; () banked
 26656  009B18  5193               	movf	_eusart1RxCount& (0+255),w,b	;volatile
 26657  009B1A  B4D8               	btfsc	status,2,c
 26658  009B1C  D002               	goto	u29390
 26659  009B1E  0E01               	movlw	1
 26660  009B20  0012               	return	
 26661  009B22                     u29390:
 26662  009B22  0E00               	movlw	0
 26663                           
 26664                           ; BSR set to: 0
 26665  009B24  0012               	return		;funcret
 26666  009B26                     __end_of_EUSART1_is_rx_ready:
 26667                           	callstack 0
 26668                           
 26669 ;; *************** function _ControlMotor *****************
 26670 ;; Defined at:
 26671 ;;		line 703 in file "outputs_MC50.c"
 26672 ;; Parameters:    Size  Location     Type
 26673 ;;		None
 26674 ;; Auto vars:     Size  Location     Type
 26675 ;;  stateMotor      1   23[COMRAM] enum E10381
 26676 ;; Return value:  Size  Location     Type
 26677 ;;                  1    wreg      void 
 26678 ;; Registers used:
 26679 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 26680 ;; Tracked objects:
 26681 ;;		On entry : 3E/1
 26682 ;;		On exit  : 3E/0
 26683 ;;		Unchanged: 0/0
 26684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26686 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26687 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26688 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26689 ;;Total ram usage:        7 bytes
 26690 ;; Hardware stack levels used: 1
 26691 ;; Hardware stack levels required when called: 5
 26692 ;; This function calls:
 26693 ;;		_VerifyElectricalBrake
 26694 ;; This function is called by:
 26695 ;;		_main
 26696 ;; This function uses a non-reentrant model
 26697 ;;
 26698                           
 26699                           	psect	text112
 26700  005102                     __ptext112:
 26701                           	callstack 0
 26702  005102                     _ControlMotor:
 26703                           	callstack 25
 26704                           
 26705                           ;outputs_MC50.c: 707:     if((var_sys.TimeMaxMotorIsON<=0) && (var_sys.WorkTimeMaxAlarmS
      +                          tate!=Clear) && (var_sys.LearningIsEnabled==NO) && (var_sys.PositionIsLost==NO)){
 26706                           
 26707                           ; BSR set to: 0
 26708                           ;incstack = 0
 26709  005102  0101               	movlb	1	; () banked
 26710  005104  5118               	movf	(_var_sys+24)& (0+255),w,b	;volatile
 26711  005106  1119               	iorwf	(_var_sys+25)& (0+255),w,b	;volatile
 26712  005108  111A               	iorwf	(_var_sys+26)& (0+255),w,b	;volatile
 26713  00510A  111B               	iorwf	(_var_sys+27)& (0+255),w,b	;volatile
 26714  00510C  A4D8               	btfss	status,2,c
 26715  00510E  D00D               	goto	l25307
 26716                           
 26717                           ; BSR set to: 1
 26718  005110  5142               	movf	(_var_sys+66)& (0+255),w,b	;volatile
 26719  005112  B4D8               	btfsc	status,2,c
 26720  005114  D00A               	goto	l25307
 26721                           
 26722                           ; BSR set to: 1
 26723  005116  5126               	movf	(_var_sys+38)& (0+255),w,b	;volatile
 26724  005118  A4D8               	btfss	status,2,c
 26725  00511A  D007               	goto	l25307
 26726                           
 26727                           ; BSR set to: 1
 26728  00511C  5148               	movf	(_var_sys+72)& (0+255),w,b	;volatile
 26729  00511E  A4D8               	btfss	status,2,c
 26730  005120  D004               	goto	l25307
 26731                           
 26732                           ; BSR set to: 1
 26733                           ;outputs_MC50.c: 708:         var_sys.StateMotor = Stopped;
 26734  005122  0E00               	movlw	0
 26735  005124  6F00               	movwf	_var_sys& (0+255),b	;volatile
 26736                           
 26737                           ;outputs_MC50.c: 709:         var_sys.WorkTimeMaxAlarmState=EmAlarme;
 26738  005126  0E02               	movlw	2
 26739  005128  D007               	goto	L100
 26740  00512A                     l25307:
 26741                           
 26742                           ; BSR set to: 1
 26743  00512A  0542               	decf	(_var_sys+66)& (0+255),w,b	;volatile
 26744  00512C  A4D8               	btfss	status,2,c
 26745  00512E  D005               	goto	l25313
 26746                           
 26747                           ; BSR set to: 1
 26748  005130  5100               	movf	_var_sys& (0+255),w,b	;volatile
 26749  005132  A4D8               	btfss	status,2,c
 26750  005134  D002               	goto	l25313
 26751                           
 26752                           ; BSR set to: 1
 26753                           ;outputs_MC50.c: 716:     {;outputs_MC50.c: 717:          var_sys.WorkTimeMaxAlarmState=
      +                          Clear;
 26754  005136  0E00               	movlw	0
 26755  005138                     L100:
 26756  005138  6F42               	movwf	(_var_sys+66)& (0+255),b	;volatile
 26757  00513A                     l25313:
 26758                           
 26759                           ; BSR set to: 1
 26760                           ;outputs_MC50.c: 721:     stateMotor_enum stateMotor=VerifyElectricalBrake(var_sys.State
      +                          Motor);
 26761  00513A  5100               	movf	_var_sys& (0+255),w,b	;volatile
 26762  00513C  ECD5  F042         	call	_VerifyElectricalBrake
 26763  005140  6E18               	movwf	ControlMotor@stateMotor^0,c
 26764                           
 26765                           ;outputs_MC50.c: 722:     if(stateMotor == Stopped )
 26766  005142  5018               	movf	ControlMotor@stateMotor^0,w,c
 26767  005144  A4D8               	btfss	status,2,c
 26768  005146  D00A               	goto	l25323
 26769                           
 26770                           ;outputs_MC50.c: 723:     {;outputs_MC50.c: 724:         var_sys.InStoping = YES;
 26771  005148  0E01               	movlw	1
 26772  00514A  0101               	movlb	1	; () banked
 26773  00514C  6F0D               	movwf	(_var_sys+13)& (0+255),b	;volatile
 26774                           
 26775                           ; BSR set to: 1
 26776                           ;outputs_MC50.c: 725:         if(ts_system.ts_TRIACWait>=0)
 26777  00514E  BFA6               	btfsc	(_ts_system+7)& (0+255),7,b	;volatile
 26778  005150  0012               	return	
 26779                           
 26780                           ; BSR set to: 1
 26781                           
 26782                           ;outputs_MC50.c: 726:         {;outputs_MC50.c: 727:             do { LATEbits.LATE1 = 0
      +                          ; } while(0);
 26783  005152  9287               	bcf	135,1,c	;volatile
 26784                           
 26785                           ; BSR set to: 1
 26786                           
 26787                           ;outputs_MC50.c: 728:             do { LATEbits.LATE0 = 0; } while(0);
 26788  005154  9087               	bcf	135,0,c	;volatile
 26789  005156                     l25321:
 26790                           
 26791                           ; BSR set to: 1
 26792                           ;outputs_MC50.c: 729:             var_sys.Activatecounter = stoped ;
 26793  005156  0E00               	movlw	0
 26794  005158  6F16               	movwf	(_var_sys+22)& (0+255),b	;volatile
 26795  00515A  0012               	return	
 26796  00515C                     l25323:
 26797  00515C  0100               	movlb	0	; () banked
 26798  00515E  05AF               	decf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 26799  005160  A4D8               	btfss	status,2,c
 26800  005162  D022               	goto	l25339
 26801                           
 26802                           ; BSR set to: 0
 26803  005164  0579               	decf	(_brakeElectric_st+1)& (0+255),w,b
 26804  005166  A4D8               	btfss	status,2,c
 26805  005168  D01F               	goto	l25339
 26806                           
 26807                           ; BSR set to: 0
 26808  00516A  0101               	movlb	1	; () banked
 26809  00516C  5100               	movf	_var_sys& (0+255),w,b	;volatile
 26810  00516E  A4D8               	btfss	status,2,c
 26811  005170  D01B               	goto	l25339
 26812                           
 26813                           ; BSR set to: 1
 26814  005172  5018               	movf	ControlMotor@stateMotor^0,w,c
 26815  005174  A4D8               	btfss	status,2,c
 26816                           
 26817                           ; BSR set to: 1
 26818  005176  BFC8               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 26819  005178  D017               	goto	l25339
 26820  00517A  51C8               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 26821  00517C  E103               	bnz	u31230
 26822  00517E  05C7               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 26823  005180  A0D8               	btfss	status,0,c
 26824  005182  D012               	goto	l25339
 26825  005184                     u31230:
 26826                           
 26827                           ; BSR set to: 1
 26828  005184  BFE0               	btfsc	(_ts_system+65)& (0+255),7,b	;volatile
 26829  005186  D005               	goto	u31240
 26830  005188  51E0               	movf	(_ts_system+65)& (0+255),w,b	;volatile
 26831  00518A  E10E               	bnz	l25339
 26832  00518C  05DF               	decf	(_ts_system+64)& (0+255),w,b	;volatile
 26833  00518E  B0D8               	btfsc	status,0,c
 26834  005190  D00B               	goto	l25339
 26835  005192                     u31240:
 26836                           
 26837                           ; BSR set to: 1
 26838                           ;outputs_MC50.c: 739:     {;outputs_MC50.c: 742:         if ( ts_system.TimeElectricBrak
      +                          e<(((5+6)*( 100/50))-(2*( 100/50))) )
 26839  005192  BFC8               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 26840  005194  D006               	goto	u31250
 26841  005196  51C8               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 26842  005198  E103               	bnz	u31251
 26843  00519A  0E12               	movlw	18
 26844  00519C  5DC7               	subwf	(_ts_system+40)& (0+255),w,b	;volatile
 26845  00519E  B0D8               	btfsc	status,0,c
 26846  0051A0                     u31251:
 26847  0051A0  0012               	return	
 26848  0051A2                     u31250:
 26849                           
 26850                           ; BSR set to: 1
 26851                           
 26852                           ;outputs_MC50.c: 743:         {;outputs_MC50.c: 748:             do { LATEbits.LATE1 = 1
      +                          ; } while(0);
 26853  0051A2  8287               	bsf	135,1,c	;volatile
 26854                           
 26855                           ; BSR set to: 1
 26856                           
 26857                           ;outputs_MC50.c: 749:             do { LATEbits.LATE0 = 1; } while(0);
 26858  0051A4  8087               	bsf	135,0,c	;volatile
 26859  0051A6  D7D7               	goto	l25321
 26860  0051A8                     l25339:
 26861  0051A8  0418               	decf	ControlMotor@stateMotor^0,w,c
 26862  0051AA  B4D8               	btfsc	status,2,c
 26863  0051AC  D004               	goto	u31270
 26864  0051AE  0E02               	movlw	2
 26865  0051B0  1818               	xorwf	ControlMotor@stateMotor^0,w,c
 26866  0051B2  A4D8               	btfss	status,2,c
 26867  0051B4  D063               	goto	l25369
 26868  0051B6                     u31270:
 26869  0051B6  0101               	movlb	1	; () banked
 26870  0051B8  5104               	movf	(_var_sys+4)& (0+255),w,b	;volatile
 26871  0051BA  A4D8               	btfss	status,2,c
 26872  0051BC  D05F               	goto	l25369
 26873                           
 26874                           ; BSR set to: 1
 26875                           ;outputs_MC50.c: 761:     {;outputs_MC50.c: 762:         if((PORTEbits.RE1==0 && var_sys
      +                          _NVM.Direction_motor == 0)||(PORTEbits.RE0==0 && var_sys_NVM.Direction_motor == 1))
 26876  0051BE  B291               	btfsc	145,1,c	;volatile
 26877  0051C0  D004               	goto	u31300
 26878                           
 26879                           ; BSR set to: 1
 26880  0051C2  0100               	movlb	0	; () banked
 26881  0051C4  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 26882  0051C6  B4D8               	btfsc	status,2,c
 26883  0051C8  D006               	goto	u31320
 26884  0051CA                     u31300:
 26885  0051CA  B091               	btfsc	145,0,c	;volatile
 26886  0051CC  D04F               	goto	l2353
 26887  0051CE  0100               	movlb	0	; () banked
 26888  0051D0  05B3               	decf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 26889  0051D2  A4D8               	btfss	status,2,c
 26890  0051D4  D04B               	goto	l2353
 26891  0051D6                     u31320:
 26892                           
 26893                           ; BSR set to: 0
 26894                           ;outputs_MC50.c: 763:         {;outputs_MC50.c: 764:             if((PORTEbits.RE0==0 &&
      +                           var_sys_NVM.Direction_motor == 0)||(PORTEbits.RE1==0 && var_sys_NVM.Direction_motor == 
      +                          1))
 26895  0051D6  B091               	btfsc	145,0,c	;volatile
 26896  0051D8  D003               	goto	u31340
 26897                           
 26898                           ; BSR set to: 0
 26899  0051DA  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 26900  0051DC  B4D8               	btfsc	status,2,c
 26901  0051DE  D005               	goto	u31360
 26902  0051E0                     u31340:
 26903                           
 26904                           ; BSR set to: 0
 26905  0051E0  B291               	btfsc	145,1,c	;volatile
 26906  0051E2  D03A               	goto	l25365
 26907                           
 26908                           ; BSR set to: 0
 26909  0051E4  05B3               	decf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 26910  0051E6  A4D8               	btfss	status,2,c
 26911  0051E8  D037               	goto	l25365
 26912  0051EA                     u31360:
 26913                           
 26914                           ; BSR set to: 0
 26915                           ;outputs_MC50.c: 765:             {;outputs_MC50.c: 766:                 var_sys.InStopi
      +                          ng = NO;
 26916  0051EA  0E00               	movlw	0
 26917  0051EC  0101               	movlb	1	; () banked
 26918  0051EE  6F0D               	movwf	(_var_sys+13)& (0+255),b	;volatile
 26919                           
 26920                           ;outputs_MC50.c: 767:                 ts_system.ts_TRIACWait=200;
 26921  0051F0  0E00               	movlw	0
 26922  0051F2  6FA6               	movwf	(_ts_system+7)& (0+255),b	;volatile
 26923  0051F4  0EC8               	movlw	200
 26924  0051F6  6FA5               	movwf	(_ts_system+6)& (0+255),b	;volatile
 26925                           
 26926                           ;outputs_MC50.c: 768:                 ts_system.TimeChargeCondesador=(1000/50);
 26927  0051F8  0E00               	movlw	0
 26928  0051FA  6FBA               	movwf	(_ts_system+27)& (0+255),b	;volatile
 26929  0051FC  0E14               	movlw	20
 26930  0051FE  6FB9               	movwf	(_ts_system+26)& (0+255),b	;volatile
 26931                           
 26932                           ; BSR set to: 1
 26933                           ;outputs_MC50.c: 769:                 if (var_sys.FimCurso_CloseIsEnabled == YES|| var_s
      +                          ys.Statedoorcontrol == st_Closed ){
 26934  005200  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
 26935  005202  B4D8               	btfsc	status,2,c
 26936  005204  D003               	goto	u31380
 26937                           
 26938                           ; BSR set to: 1
 26939  005206  051C               	decf	(_var_sys+28)& (0+255),w,b	;volatile
 26940  005208  A4D8               	btfss	status,2,c
 26941  00520A  D024               	goto	l25363
 26942  00520C                     u31380:
 26943                           
 26944                           ; BSR set to: 1
 26945                           ;outputs_MC50.c: 770:                 var_sys.TimeMaxMotorIsON=((unsigned int)var_sys_NV
      +                          M.velocityDecelaration+((unsigned int)var_sys_NVM.decelarationOpen)*( 500/50))+var_sys_N
      +                          VM.learningTimeToOpen + (1000/50)*4;
 26946  00520C  0100               	movlb	0	; () banked
 26947  00520E  5198               	movf	_var_sys_NVM& (0+255),w,b	;volatile
 26948  005210  0D0A               	mullw	10
 26949  005212  CFF3 F012          	movff	prodl,??_ControlMotor
 26950  005216  CFF4 F013          	movff	prodh,??_ControlMotor+1
 26951  00521A  51B0               	movf	(_var_sys_NVM+24)& (0+255),w,b	;volatile
 26952  00521C  2612               	addwf	??_ControlMotor^0,f,c
 26953  00521E  0E00               	movlw	0
 26954  005220  2213               	addwfc	(??_ControlMotor+1)^0,f,c
 26955  005222  5012               	movf	??_ControlMotor^0,w,c
 26956  005224  25CC               	addwf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 26957  005226  6E14               	movwf	(??_ControlMotor+2)^0,c
 26958  005228  5013               	movf	(??_ControlMotor+1)^0,w,c
 26959  00522A  21CD               	addwfc	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 26960  00522C  6E15               	movwf	(??_ControlMotor+3)^0,c
 26961  00522E  0E00               	movlw	0
 26962  005230  21CE               	addwfc	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 26963  005232  6E16               	movwf	(??_ControlMotor+4)^0,c
 26964  005234  0E00               	movlw	0
 26965  005236  21CF               	addwfc	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 26966  005238  6E17               	movwf	(??_ControlMotor+5)^0,c
 26967  00523A  0E50               	movlw	80
 26968  00523C  2414               	addwf	(??_ControlMotor+2)^0,w,c
 26969  00523E  0101               	movlb	1	; () banked
 26970  005240  6F18               	movwf	(_var_sys+24)& (0+255),b	;volatile
 26971  005242  0E00               	movlw	0
 26972  005244  2015               	addwfc	(??_ControlMotor+3)^0,w,c
 26973  005246  6F19               	movwf	(_var_sys+25)& (0+255),b	;volatile
 26974  005248  0E00               	movlw	0
 26975  00524A  2016               	addwfc	(??_ControlMotor+4)^0,w,c
 26976  00524C  6F1A               	movwf	(_var_sys+26)& (0+255),b	;volatile
 26977  00524E  0E00               	movlw	0
 26978  005250  2017               	addwfc	(??_ControlMotor+5)^0,w,c
 26979  005252  6F1B               	movwf	(_var_sys+27)& (0+255),b	;volatile
 26980  005254                     l25363:
 26981                           
 26982                           ; BSR set to: 1
 26983                           ;outputs_MC50.c: 775:                 var_sys.Statedoorcontrol = st_Opening;
 26984  005254  0E02               	movlw	2
 26985  005256  6F1C               	movwf	(_var_sys+28)& (0+255),b	;volatile
 26986  005258                     l25365:
 26987                           
 26988                           ;outputs_MC50.c: 779:             if (var_sys_NVM.Direction_motor == 0){do { LATEbits.LA
      +                          TE0 = 1; } while(0);}
 26989  005258  0100               	movlb	0	; () banked
 26990  00525A  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 26991  00525C  A4D8               	btfss	status,2,c
 26992  00525E  D002               	goto	l2370
 26993                           
 26994                           ; BSR set to: 0
 26995  005260  8087               	bsf	135,0,c	;volatile
 26996  005262  D001               	goto	l25367
 26997  005264                     l2370:
 26998                           
 26999                           ; BSR set to: 0
 27000  005264  8287               	bsf	135,1,c	;volatile
 27001  005266                     l25367:
 27002                           
 27003                           ; BSR set to: 0
 27004                           ;outputs_MC50.c: 781:             var_sys.Activatecounter = open ;
 27005  005266  0E01               	movlw	1
 27006  005268  0101               	movlb	1	; () banked
 27007  00526A  6F16               	movwf	(_var_sys+22)& (0+255),b	;volatile
 27008  00526C                     l2353:
 27009                           
 27010                           ;outputs_MC50.c: 785:            if (var_sys_NVM.Direction_motor == 0){do { LATEbits.LAT
      +                          E1 = 0; } while(0);}
 27011  00526C  0100               	movlb	0	; () banked
 27012  00526E  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 27013  005270  A4D8               	btfss	status,2,c
 27014  005272  D002               	goto	l2376
 27015                           
 27016                           ; BSR set to: 0
 27017  005274  9287               	bcf	135,1,c	;volatile
 27018  005276  0012               	return	
 27019  005278                     l2376:
 27020                           
 27021                           ; BSR set to: 0
 27022  005278  9087               	bcf	135,0,c	;volatile
 27023  00527A  0012               	return	
 27024  00527C                     l25369:
 27025  00527C  0E03               	movlw	3
 27026  00527E  1818               	xorwf	ControlMotor@stateMotor^0,w,c
 27027  005280  A4D8               	btfss	status,2,c
 27028  005282  0012               	return	
 27029  005284  0101               	movlb	1	; () banked
 27030  005286  5103               	movf	(_var_sys+3)& (0+255),w,b	;volatile
 27031  005288  A4D8               	btfss	status,2,c
 27032  00528A  0012               	return	
 27033                           
 27034                           ; BSR set to: 1
 27035                           ;outputs_MC50.c: 791:     {;outputs_MC50.c: 792:         if((PORTEbits.RE0==0 && var_sys
      +                          _NVM.Direction_motor == 0)||(PORTEbits.RE1==0 && var_sys_NVM.Direction_motor == 1))
 27036  00528C  B091               	btfsc	145,0,c	;volatile
 27037  00528E  D004               	goto	u31440
 27038                           
 27039                           ; BSR set to: 1
 27040  005290  0100               	movlb	0	; () banked
 27041  005292  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 27042  005294  B4D8               	btfsc	status,2,c
 27043  005296  D006               	goto	u31460
 27044  005298                     u31440:
 27045  005298  B291               	btfsc	145,1,c	;volatile
 27046  00529A  D050               	goto	l2380
 27047  00529C  0100               	movlb	0	; () banked
 27048  00529E  05B3               	decf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 27049  0052A0  A4D8               	btfss	status,2,c
 27050  0052A2  D04C               	goto	l2380
 27051  0052A4                     u31460:
 27052                           
 27053                           ; BSR set to: 0
 27054                           ;outputs_MC50.c: 793:         {;outputs_MC50.c: 794:             if((PORTEbits.RE1==0 &&
      +                           var_sys_NVM.Direction_motor == 0)||(PORTEbits.RE0==0 && var_sys_NVM.Direction_motor == 
      +                          1))
 27055  0052A4  B291               	btfsc	145,1,c	;volatile
 27056  0052A6  D003               	goto	u31480
 27057                           
 27058                           ; BSR set to: 0
 27059  0052A8  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 27060  0052AA  B4D8               	btfsc	status,2,c
 27061  0052AC  D005               	goto	u31500
 27062  0052AE                     u31480:
 27063                           
 27064                           ; BSR set to: 0
 27065  0052AE  B091               	btfsc	145,0,c	;volatile
 27066  0052B0  D03B               	goto	l25393
 27067                           
 27068                           ; BSR set to: 0
 27069  0052B2  05B3               	decf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 27070  0052B4  A4D8               	btfss	status,2,c
 27071  0052B6  D038               	goto	l25393
 27072  0052B8                     u31500:
 27073                           
 27074                           ; BSR set to: 0
 27075                           ;outputs_MC50.c: 795:             {;outputs_MC50.c: 796:                 var_sys.InStopi
      +                          ng = NO;
 27076  0052B8  0E00               	movlw	0
 27077  0052BA  0101               	movlb	1	; () banked
 27078  0052BC  6F0D               	movwf	(_var_sys+13)& (0+255),b	;volatile
 27079                           
 27080                           ;outputs_MC50.c: 797:                 ts_system.ts_TRIACWait=200;
 27081  0052BE  0E00               	movlw	0
 27082  0052C0  6FA6               	movwf	(_ts_system+7)& (0+255),b	;volatile
 27083  0052C2  0EC8               	movlw	200
 27084  0052C4  6FA5               	movwf	(_ts_system+6)& (0+255),b	;volatile
 27085                           
 27086                           ;outputs_MC50.c: 798:                 ts_system.TimeChargeCondesador=(1000/50);
 27087  0052C6  0E00               	movlw	0
 27088  0052C8  6FBA               	movwf	(_ts_system+27)& (0+255),b	;volatile
 27089  0052CA  0E14               	movlw	20
 27090  0052CC  6FB9               	movwf	(_ts_system+26)& (0+255),b	;volatile
 27091                           
 27092                           ; BSR set to: 1
 27093                           ;outputs_MC50.c: 799:                 if (var_sys.FimCurso_OpenIsEnabled == YES|| var_sy
      +                          s.Statedoorcontrol == st_Opened){
 27094  0052CE  0504               	decf	(_var_sys+4)& (0+255),w,b	;volatile
 27095  0052D0  B4D8               	btfsc	status,2,c
 27096  0052D2  D004               	goto	u31520
 27097                           
 27098                           ; BSR set to: 1
 27099  0052D4  0E04               	movlw	4
 27100  0052D6  191C               	xorwf	(_var_sys+28)& (0+255),w,b	;volatile
 27101  0052D8  A4D8               	btfss	status,2,c
 27102  0052DA  D024               	goto	l25391
 27103  0052DC                     u31520:
 27104                           
 27105                           ; BSR set to: 1
 27106                           ;outputs_MC50.c: 800:                 var_sys.TimeMaxMotorIsON=((unsigned int)var_sys_NV
      +                          M.velocityDecelaration+(unsigned int)var_sys_NVM.decelarationClose*( 500/50))+var_sys_NV
      +                          M.learningTimeToClose + (1000/50)*4;
 27107  0052DC  0100               	movlb	0	; () banked
 27108  0052DE  5199               	movf	(_var_sys_NVM+1)& (0+255),w,b	;volatile
 27109  0052E0  0D0A               	mullw	10
 27110  0052E2  CFF3 F012          	movff	prodl,??_ControlMotor
 27111  0052E6  CFF4 F013          	movff	prodh,??_ControlMotor+1
 27112  0052EA  51B0               	movf	(_var_sys_NVM+24)& (0+255),w,b	;volatile
 27113  0052EC  2612               	addwf	??_ControlMotor^0,f,c
 27114  0052EE  0E00               	movlw	0
 27115  0052F0  2213               	addwfc	(??_ControlMotor+1)^0,f,c
 27116  0052F2  5012               	movf	??_ControlMotor^0,w,c
 27117  0052F4  25D0               	addwf	(_var_sys_NVM+56)& (0+255),w,b	;volatile
 27118  0052F6  6E14               	movwf	(??_ControlMotor+2)^0,c
 27119  0052F8  5013               	movf	(??_ControlMotor+1)^0,w,c
 27120  0052FA  21D1               	addwfc	(_var_sys_NVM+57)& (0+255),w,b	;volatile
 27121  0052FC  6E15               	movwf	(??_ControlMotor+3)^0,c
 27122  0052FE  0E00               	movlw	0
 27123  005300  21D2               	addwfc	(_var_sys_NVM+58)& (0+255),w,b	;volatile
 27124  005302  6E16               	movwf	(??_ControlMotor+4)^0,c
 27125  005304  0E00               	movlw	0
 27126  005306  21D3               	addwfc	(_var_sys_NVM+59)& (0+255),w,b	;volatile
 27127  005308  6E17               	movwf	(??_ControlMotor+5)^0,c
 27128  00530A  0E50               	movlw	80
 27129  00530C  2414               	addwf	(??_ControlMotor+2)^0,w,c
 27130  00530E  0101               	movlb	1	; () banked
 27131  005310  6F18               	movwf	(_var_sys+24)& (0+255),b	;volatile
 27132  005312  0E00               	movlw	0
 27133  005314  2015               	addwfc	(??_ControlMotor+3)^0,w,c
 27134  005316  6F19               	movwf	(_var_sys+25)& (0+255),b	;volatile
 27135  005318  0E00               	movlw	0
 27136  00531A  2016               	addwfc	(??_ControlMotor+4)^0,w,c
 27137  00531C  6F1A               	movwf	(_var_sys+26)& (0+255),b	;volatile
 27138  00531E  0E00               	movlw	0
 27139  005320  2017               	addwfc	(??_ControlMotor+5)^0,w,c
 27140  005322  6F1B               	movwf	(_var_sys+27)& (0+255),b	;volatile
 27141  005324                     l25391:
 27142                           
 27143                           ; BSR set to: 1
 27144                           ;outputs_MC50.c: 803:                 var_sys.Statedoorcontrol = st_Closing;
 27145  005324  0E03               	movlw	3
 27146  005326  6F1C               	movwf	(_var_sys+28)& (0+255),b	;volatile
 27147  005328                     l25393:
 27148                           
 27149                           ;outputs_MC50.c: 806:             if (var_sys_NVM.Direction_motor == 0){do { LATEbits.LA
      +                          TE1 = 1; } while(0);}
 27150  005328  0100               	movlb	0	; () banked
 27151  00532A  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 27152  00532C  A4D8               	btfss	status,2,c
 27153  00532E  D002               	goto	l2397
 27154                           
 27155                           ; BSR set to: 0
 27156  005330  8287               	bsf	135,1,c	;volatile
 27157  005332  D001               	goto	l25395
 27158  005334                     l2397:
 27159                           
 27160                           ; BSR set to: 0
 27161  005334  8087               	bsf	135,0,c	;volatile
 27162  005336                     l25395:
 27163                           
 27164                           ; BSR set to: 0
 27165                           ;outputs_MC50.c: 808:             var_sys.Activatecounter = close ;
 27166  005336  0E02               	movlw	2
 27167  005338  0101               	movlb	1	; () banked
 27168  00533A  6F16               	movwf	(_var_sys+22)& (0+255),b	;volatile
 27169  00533C                     l2380:
 27170                           
 27171                           ;outputs_MC50.c: 811:            if (var_sys_NVM.Direction_motor == 0){do { LATEbits.LAT
      +                          E0 = 0; } while(0);}
 27172  00533C  0100               	movlb	0	; () banked
 27173  00533E  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 27174  005340  A4D8               	btfss	status,2,c
 27175  005342  D002               	goto	l2403
 27176                           
 27177                           ; BSR set to: 0
 27178  005344  9087               	bcf	135,0,c	;volatile
 27179  005346  0012               	return	
 27180  005348                     l2403:
 27181                           
 27182                           ; BSR set to: 0
 27183  005348  9287               	bcf	135,1,c	;volatile
 27184  00534A  0012               	return		;funcret
 27185  00534C                     __end_of_ControlMotor:
 27186                           	callstack 0
 27187                           
 27188 ;; *************** function _VerifyElectricalBrake *****************
 27189 ;; Defined at:
 27190 ;;		line 658 in file "outputs_MC50.c"
 27191 ;; Parameters:    Size  Location     Type
 27192 ;;  actualState     1    wreg     enum E10381
 27193 ;; Auto vars:     Size  Location     Type
 27194 ;;  actualState     1   16[COMRAM] enum E10381
 27195 ;;  tempState       1   15[COMRAM] enum E10381
 27196 ;; Return value:  Size  Location     Type
 27197 ;;                  1    wreg      enum E10381
 27198 ;; Registers used:
 27199 ;;		wreg, status,2, status,0
 27200 ;; Tracked objects:
 27201 ;;		On entry : 3F/1
 27202 ;;		On exit  : 3E/0
 27203 ;;		Unchanged: 0/0
 27204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27205 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27206 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27208 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27209 ;;Total ram usage:        2 bytes
 27210 ;; Hardware stack levels used: 1
 27211 ;; Hardware stack levels required when called: 4
 27212 ;; This function calls:
 27213 ;;		Nothing
 27214 ;; This function is called by:
 27215 ;;		_ControlMotor
 27216 ;; This function uses a non-reentrant model
 27217 ;;
 27218                           
 27219                           	psect	text113
 27220  0085AA                     __ptext113:
 27221                           	callstack 0
 27222  0085AA                     _VerifyElectricalBrake:
 27223                           	callstack 25
 27224                           
 27225                           ;incstack = 0
 27226                           ;VerifyElectricalBrake@actualState stored from wreg
 27227  0085AA  6E11               	movwf	VerifyElectricalBrake@actualState^0,c
 27228                           
 27229                           ;outputs_MC50.c: 658: stateMotor_enum VerifyElectricalBrake(stateMotor_enum actualState)
      +                          ;outputs_MC50.c: 659: {;outputs_MC50.c: 660:     stateMotor_enum tempState;;outputs_MC50
      +                          .c: 661:     tempState=actualState;
 27230  0085AC  C011  F010         	movff	VerifyElectricalBrake@actualState,VerifyElectricalBrake@tempState
 27231                           
 27232                           ;outputs_MC50.c: 662:     if(var_sys_NVM.electricBrake==1 && actualState==Stopped && ts_
      +                          system.TimeStopElectricBrake<=0)
 27233  0085B0  0100               	movlb	0	; () banked
 27234  0085B2  05AF               	decf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 27235  0085B4  A4D8               	btfss	status,2,c
 27236  0085B6  D02E               	goto	l2323
 27237                           
 27238                           ; BSR set to: 0
 27239  0085B8  5011               	movf	VerifyElectricalBrake@actualState^0,w,c
 27240  0085BA  A4D8               	btfss	status,2,c
 27241  0085BC  D02B               	goto	l2323
 27242                           
 27243                           ; BSR set to: 0
 27244  0085BE  0101               	movlb	1	; () banked
 27245  0085C0  BFE0               	btfsc	(_ts_system+65)& (0+255),7,b	;volatile
 27246  0085C2  D005               	goto	u26460
 27247  0085C4  51E0               	movf	(_ts_system+65)& (0+255),w,b	;volatile
 27248  0085C6  E126               	bnz	l2323
 27249  0085C8  05DF               	decf	(_ts_system+64)& (0+255),w,b	;volatile
 27250  0085CA  B0D8               	btfsc	status,0,c
 27251  0085CC  D023               	goto	l2323
 27252  0085CE                     u26460:
 27253                           
 27254                           ; BSR set to: 1
 27255                           ;outputs_MC50.c: 663:     {;outputs_MC50.c: 664:         if(actualState!=brakeElectric_s
      +                          t.lastState && brakeElectric_st.ElectricBrakeIsActive==NO )
 27256  0085CE  5011               	movf	VerifyElectricalBrake@actualState^0,w,c
 27257  0085D0  0100               	movlb	0	; () banked
 27258  0085D2  1978               	xorwf	_brakeElectric_st& (0+255),w,b
 27259  0085D4  B4D8               	btfsc	status,2,c
 27260  0085D6  D00B               	goto	l22875
 27261                           
 27262                           ; BSR set to: 0
 27263  0085D8  5179               	movf	(_brakeElectric_st+1)& (0+255),w,b
 27264  0085DA  A4D8               	btfss	status,2,c
 27265  0085DC  D008               	goto	l22875
 27266                           
 27267                           ; BSR set to: 0
 27268                           ;outputs_MC50.c: 665:         {;outputs_MC50.c: 666:             brakeElectric_st.Electr
      +                          icBrakeIsActive=YES;
 27269  0085DE  0E01               	movlw	1
 27270  0085E0  6F79               	movwf	(_brakeElectric_st+1)& (0+255),b
 27271                           
 27272                           ;outputs_MC50.c: 668:             ts_system.TimeElectricBrake=((5+6)*( 100/50));
 27273  0085E2  0E00               	movlw	0
 27274  0085E4  0101               	movlb	1	; () banked
 27275  0085E6  6FC8               	movwf	(_ts_system+41)& (0+255),b	;volatile
 27276  0085E8  0E16               	movlw	22
 27277  0085EA  6FC7               	movwf	(_ts_system+40)& (0+255),b	;volatile
 27278                           
 27279                           ;outputs_MC50.c: 670:         }
 27280  0085EC  D018               	goto	l2328
 27281  0085EE                     l22875:
 27282                           
 27283                           ; BSR set to: 0
 27284  0085EE  0579               	decf	(_brakeElectric_st+1)& (0+255),w,b
 27285  0085F0  A4D8               	btfss	status,2,c
 27286  0085F2  D00B               	goto	l22881
 27287                           
 27288                           ; BSR set to: 0
 27289  0085F4  0101               	movlb	1	; () banked
 27290  0085F6  BFC8               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 27291  0085F8  D008               	goto	l22881
 27292  0085FA  51C8               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 27293  0085FC  E103               	bnz	u26500
 27294  0085FE  05C7               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 27295  008600  A0D8               	btfss	status,0,c
 27296  008602  D003               	goto	l22881
 27297  008604                     u26500:
 27298                           
 27299                           ; BSR set to: 1
 27300                           ;outputs_MC50.c: 672:         {;outputs_MC50.c: 673:             tempState=InOpenFull;
 27301  008604  0E01               	movlw	1
 27302  008606  6E10               	movwf	VerifyElectricalBrake@tempState^0,c
 27303                           
 27304                           ;outputs_MC50.c: 686:         }
 27305  008608  D00A               	goto	l2328
 27306  00860A                     l22881:
 27307                           
 27308                           ;outputs_MC50.c: 688:         {;outputs_MC50.c: 689:             brakeElectric_st.lastSt
      +                          ate=Stopped;
 27309  00860A  0E00               	movlw	0
 27310  00860C  0100               	movlb	0	; () banked
 27311  00860E  6F78               	movwf	_brakeElectric_st& (0+255),b
 27312                           
 27313                           ;outputs_MC50.c: 690:             brakeElectric_st.ElectricBrakeIsActive=NO;
 27314  008610  0E00               	movlw	0
 27315  008612  D004               	goto	L101
 27316  008614                     l2323:
 27317                           
 27318                           ;outputs_MC50.c: 695:     {;outputs_MC50.c: 696:         brakeElectric_st.lastState=actu
      +                          alState;
 27319  008614  C011  F078         	movff	VerifyElectricalBrake@actualState,_brakeElectric_st
 27320                           
 27321                           ;outputs_MC50.c: 697:         brakeElectric_st.ElectricBrakeIsActive=NO;
 27322  008618  0E00               	movlw	0
 27323  00861A  0100               	movlb	0	; () banked
 27324  00861C                     L101:
 27325  00861C  6F79               	movwf	(_brakeElectric_st+1)& (0+255),b
 27326  00861E                     l2328:
 27327                           
 27328                           ;outputs_MC50.c: 700:     return tempState;
 27329  00861E  5010               	movf	VerifyElectricalBrake@tempState^0,w,c
 27330  008620  0012               	return		;funcret
 27331  008622                     __end_of_VerifyElectricalBrake:
 27332                           	callstack 0
 27333                           
 27334 ;; *************** function _ControlLights *****************
 27335 ;; Defined at:
 27336 ;;		line 816 in file "outputs_MC50.c"
 27337 ;; Parameters:    Size  Location     Type
 27338 ;;		None
 27339 ;; Auto vars:     Size  Location     Type
 27340 ;;		None
 27341 ;; Return value:  Size  Location     Type
 27342 ;;                  1    wreg      void 
 27343 ;; Registers used:
 27344 ;;		wreg, status,2, status,0, cstack
 27345 ;; Tracked objects:
 27346 ;;		On entry : 3E/1
 27347 ;;		On exit  : 3E/0
 27348 ;;		Unchanged: 0/0
 27349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27353 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27354 ;;Total ram usage:        0 bytes
 27355 ;; Hardware stack levels used: 1
 27356 ;; Hardware stack levels required when called: 6
 27357 ;; This function calls:
 27358 ;;		_setFlashLigth_ON
 27359 ;;		_setRGB_ON
 27360 ;; This function is called by:
 27361 ;;		_main
 27362 ;; This function uses a non-reentrant model
 27363 ;;
 27364                           
 27365                           	psect	text114
 27366  004392                     __ptext114:
 27367                           	callstack 0
 27368  004392                     _ControlLights:
 27369                           	callstack 24
 27370                           
 27371                           ;outputs_MC50.c: 818:     if(var_sys.DistanceProgrammingActive==YES)
 27372                           
 27373                           ;incstack = 0
 27374  004392  0101               	movlb	1	; () banked
 27375  004394  0540               	decf	(_var_sys+64)& (0+255),w,b	;volatile
 27376  004396  A4D8               	btfss	status,2,c
 27377  004398  D007               	goto	l25401
 27378                           
 27379                           ; BSR set to: 1
 27380                           ;outputs_MC50.c: 819:     {;outputs_MC50.c: 820:         setFlashLigth_ON((1000/50));
 27381  00439A  0E00               	movlw	0
 27382  00439C  6E11               	movwf	(setFlashLigth_ON@Freq+1)^0,c
 27383  00439E  0E14               	movlw	20
 27384  0043A0  6E10               	movwf	setFlashLigth_ON@Freq^0,c
 27385  0043A2  ECA8  F049         	call	_setFlashLigth_ON	;wreg free
 27386                           
 27387                           ;outputs_MC50.c: 821:     }
 27388  0043A6  D010               	goto	l25407
 27389  0043A8                     l25401:
 27390                           
 27391                           ; BSR set to: 1
 27392  0043A8  51E7               	movf	_controlGate_stateMachine& (0+255),w,b
 27393  0043AA  11E8               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
 27394  0043AC  A4D8               	btfss	status,2,c
 27395  0043AE  D00C               	goto	l25407
 27396                           
 27397                           ; BSR set to: 1
 27398                           ;outputs_MC50.c: 823:     {;outputs_MC50.c: 824:         var_sys.ControlReleCapacitorOpe
      +                          n = 0;
 27399  0043B0  0E00               	movlw	0
 27400  0043B2  6F28               	movwf	(_var_sys+40)& (0+255),b	;volatile
 27401                           
 27402                           ;outputs_MC50.c: 825:         var_sys.ControlReleCapacitorClose = 0;
 27403  0043B4  0E00               	movlw	0
 27404  0043B6  6F29               	movwf	(_var_sys+41)& (0+255),b	;volatile
 27405                           
 27406                           ; BSR set to: 1
 27407                           ;outputs_MC50.c: 826:         if (var_sys_NVM.flashLightMode !=3){
 27408  0043B8  0E03               	movlw	3
 27409  0043BA  0100               	movlb	0	; () banked
 27410  0043BC  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 27411  0043BE  B4D8               	btfsc	status,2,c
 27412  0043C0  D002               	goto	l2415
 27413                           
 27414                           ; BSR set to: 0
 27415                           
 27416                           ;outputs_MC50.c: 827:            do { LATEbits.LATE2 = 0; } while(0);
 27417  0043C2  9487               	bcf	135,2,c	;volatile
 27418  0043C4  D001               	goto	l25407
 27419  0043C6                     l2415:
 27420                           
 27421                           ; BSR set to: 0
 27422  0043C6  8487               	bsf	135,2,c	;volatile
 27423  0043C8                     l25407:
 27424                           
 27425                           ;outputs_MC50.c: 835:     if (((var_sys.preflashingcontrol == YES || controlGate_stateMa
      +                          chine.current_state==st_Opened) && (ts_system.timeWaitToClose >0) && (ts_system.timeWait
      +                          ToClose <= 3 * (1000/50))) && var_sys_NVM.flashRGBMode == rgb_pre){
 27426  0043C8  0101               	movlb	1	; () banked
 27427  0043CA  051D               	decf	(_var_sys+29)& (0+255),w,b	;volatile
 27428  0043CC  B4D8               	btfsc	status,2,c
 27429  0043CE  D005               	goto	u31590
 27430                           
 27431                           ; BSR set to: 1
 27432  0043D0  0E04               	movlw	4
 27433  0043D2  19E7               	xorwf	_controlGate_stateMachine& (0+255),w,b
 27434  0043D4  11E8               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
 27435  0043D6  A4D8               	btfss	status,2,c
 27436  0043D8  D01C               	goto	l25419
 27437  0043DA                     u31590:
 27438                           
 27439                           ; BSR set to: 1
 27440  0043DA  BFB2               	btfsc	(_ts_system+19)& (0+255),7,b	;volatile
 27441  0043DC  D01A               	goto	l25419
 27442  0043DE  51B2               	movf	(_ts_system+19)& (0+255),w,b	;volatile
 27443  0043E0  E103               	bnz	u31600
 27444  0043E2  05B1               	decf	(_ts_system+18)& (0+255),w,b	;volatile
 27445  0043E4  A0D8               	btfss	status,0,c
 27446  0043E6  D015               	goto	l25419
 27447  0043E8                     u31600:
 27448                           
 27449                           ; BSR set to: 1
 27450  0043E8  BFB2               	btfsc	(_ts_system+19)& (0+255),7,b	;volatile
 27451  0043EA  D006               	goto	u31610
 27452  0043EC  51B2               	movf	(_ts_system+19)& (0+255),w,b	;volatile
 27453  0043EE  E111               	bnz	l25419
 27454  0043F0  0E3D               	movlw	61
 27455  0043F2  5DB1               	subwf	(_ts_system+18)& (0+255),w,b	;volatile
 27456  0043F4  B0D8               	btfsc	status,0,c
 27457  0043F6  D00D               	goto	l25419
 27458  0043F8                     u31610:
 27459                           
 27460                           ; BSR set to: 1
 27461  0043F8  0E02               	movlw	2
 27462  0043FA  0100               	movlb	0	; () banked
 27463  0043FC  19B1               	xorwf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 27464  0043FE  A4D8               	btfss	status,2,c
 27465  004400  D008               	goto	l25419
 27466                           
 27467                           ; BSR set to: 0
 27468                           ;outputs_MC50.c: 836:         setRGB_ON(BLUE,( 200/50));
 27469  004402  0E00               	movlw	0
 27470  004404  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 27471  004406  0E04               	movlw	4
 27472  004408  6E11               	movwf	setRGB_ON@Freq^0,c
 27473  00440A  0E01               	movlw	1
 27474  00440C  EC75  F03F         	call	_setRGB_ON
 27475                           
 27476                           ;outputs_MC50.c: 838:     }
 27477  004410  0012               	return	
 27478  004412                     l25419:
 27479  004412  0E03               	movlw	3
 27480  004414  0101               	movlb	1	; () banked
 27481  004416  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 27482  004418  A4D8               	btfss	status,2,c
 27483  00441A  D04F               	goto	l25449
 27484                           
 27485                           ; BSR set to: 1
 27486                           ;outputs_MC50.c: 842:     {;outputs_MC50.c: 843:         var_sys.ControlReleCapacitorOpe
      +                          n = 0;
 27487  00441C  0E00               	movlw	0
 27488  00441E  6F28               	movwf	(_var_sys+40)& (0+255),b	;volatile
 27489                           
 27490                           ;outputs_MC50.c: 846:         if (var_sys.ControlReleCapacitorClose==0 && var_sys_NVM.fl
      +                          ashRGBMode==rgb_capacitor)
 27491  004420  5129               	movf	(_var_sys+41)& (0+255),w,b	;volatile
 27492  004422  A4D8               	btfss	status,2,c
 27493  004424  D013               	goto	l25431
 27494                           
 27495                           ; BSR set to: 1
 27496  004426  0E03               	movlw	3
 27497  004428  0100               	movlb	0	; () banked
 27498  00442A  19B1               	xorwf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 27499  00442C  A4D8               	btfss	status,2,c
 27500  00442E  D00E               	goto	l25431
 27501                           
 27502                           ; BSR set to: 0
 27503                           ;outputs_MC50.c: 847:         {;outputs_MC50.c: 848:          ts_system.TimeReleCapacito
      +                          r = (1000/50)*2;
 27504  004430  0E00               	movlw	0
 27505  004432  0101               	movlb	1	; () banked
 27506  004434  6FE2               	movwf	(_ts_system+67)& (0+255),b	;volatile
 27507  004436  0E28               	movlw	40
 27508  004438  6FE1               	movwf	(_ts_system+66)& (0+255),b	;volatile
 27509                           
 27510                           ; BSR set to: 1
 27511                           ;outputs_MC50.c: 849:             setRGB_ON(YELLOW,0);
 27512  00443A  0E00               	movlw	0
 27513  00443C  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 27514  00443E  0E00               	movlw	0
 27515  004440  6E11               	movwf	setRGB_ON@Freq^0,c
 27516  004442  0E04               	movlw	4
 27517  004444  EC75  F03F         	call	_setRGB_ON
 27518                           
 27519                           ; BSR set to: 1
 27520                           ;outputs_MC50.c: 850:          var_sys.ControlReleCapacitorClose = 1;
 27521  004448  0E01               	movlw	1
 27522  00444A  6F29               	movwf	(_var_sys+41)& (0+255),b	;volatile
 27523  00444C                     l25431:
 27524                           
 27525                           ;outputs_MC50.c: 852:         if(ts_system.TimeReleCapacitor<=0 && var_sys_NVM.flashRGBM
      +                          ode==rgb_capacitor)
 27526  00444C  0101               	movlb	1	; () banked
 27527  00444E  BFE2               	btfsc	(_ts_system+67)& (0+255),7,b	;volatile
 27528  004450  D005               	goto	u31660
 27529  004452  51E2               	movf	(_ts_system+67)& (0+255),w,b	;volatile
 27530  004454  E105               	bnz	l25435
 27531  004456  05E1               	decf	(_ts_system+66)& (0+255),w,b	;volatile
 27532  004458  B0D8               	btfsc	status,0,c
 27533  00445A  D002               	goto	l25435
 27534  00445C                     u31660:
 27535                           
 27536                           ; BSR set to: 1
 27537  00445C  0100               	movlb	0	; () banked
 27538  00445E  51B1               	movf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 27539  004460                     l25435:
 27540                           
 27541                           ;outputs_MC50.c: 858:         if(var_sys_NVM.flashRGBMode==rgb_pisca && ts_system.TimeRe
      +                          leCapacitor<=0)
 27542  004460  0100               	movlb	0	; () banked
 27543  004462  05B1               	decf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 27544  004464  A4D8               	btfss	status,2,c
 27545  004466  D010               	goto	l25441
 27546                           
 27547                           ; BSR set to: 0
 27548  004468  0101               	movlb	1	; () banked
 27549  00446A  BFE2               	btfsc	(_ts_system+67)& (0+255),7,b	;volatile
 27550  00446C  D005               	goto	u31680
 27551  00446E  51E2               	movf	(_ts_system+67)& (0+255),w,b	;volatile
 27552  004470  E10B               	bnz	l25441
 27553  004472  05E1               	decf	(_ts_system+66)& (0+255),w,b	;volatile
 27554  004474  B0D8               	btfsc	status,0,c
 27555  004476  D008               	goto	l25441
 27556  004478                     u31680:
 27557                           
 27558                           ; BSR set to: 1
 27559                           ;outputs_MC50.c: 860:         {;outputs_MC50.c: 861:             setRGB_ON(RED,( 200/50)
      +                           +( 50/50));
 27560  004478  0E00               	movlw	0
 27561  00447A  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 27562  00447C  0E05               	movlw	5
 27563  00447E  6E11               	movwf	setRGB_ON@Freq^0,c
 27564  004480  0E03               	movlw	3
 27565  004482  EC75  F03F         	call	_setRGB_ON
 27566                           
 27567                           ;outputs_MC50.c: 862:         }
 27568  004486  D007               	goto	l25443
 27569  004488                     l25441:
 27570                           
 27571                           ;outputs_MC50.c: 864:         {;outputs_MC50.c: 865:             setRGB_ON(RED,0);
 27572  004488  0E00               	movlw	0
 27573  00448A  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 27574  00448C  0E00               	movlw	0
 27575  00448E  6E11               	movwf	setRGB_ON@Freq^0,c
 27576  004490  0E03               	movlw	3
 27577  004492  EC75  F03F         	call	_setRGB_ON
 27578  004496                     l25443:
 27579                           
 27580                           ; BSR set to: 1
 27581                           ;outputs_MC50.c: 868:         if(var_sys_NVM.flashLightMode==fixo)
 27582  004496  0100               	movlb	0	; () banked
 27583  004498  51A5               	movf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 27584  00449A  A4D8               	btfss	status,2,c
 27585  00449C  D007               	goto	l25447
 27586                           
 27587                           ; BSR set to: 0
 27588                           ;outputs_MC50.c: 869:         {;outputs_MC50.c: 871:             setFlashLigth_ON(( 500/
      +                          50));
 27589  00449E  0E00               	movlw	0
 27590  0044A0  6E11               	movwf	(setFlashLigth_ON@Freq+1)^0,c
 27591  0044A2  0E0A               	movlw	10
 27592  0044A4  6E10               	movwf	setFlashLigth_ON@Freq^0,c
 27593  0044A6  ECA8  F049         	call	_setFlashLigth_ON	;wreg free
 27594                           
 27595                           ;outputs_MC50.c: 873:         }
 27596  0044AA  0012               	return	
 27597  0044AC                     l25447:
 27598                           
 27599                           ;outputs_MC50.c: 875:             setFlashLigth_ON(0);
 27600  0044AC  0E00               	movlw	0
 27601  0044AE  6E11               	movwf	(setFlashLigth_ON@Freq+1)^0,c
 27602  0044B0  0E00               	movlw	0
 27603  0044B2  6E10               	movwf	setFlashLigth_ON@Freq^0,c
 27604  0044B4  ECA8  F049         	call	_setFlashLigth_ON	;wreg free
 27605  0044B8  0012               	return	
 27606  0044BA                     l25449:
 27607                           
 27608                           ; BSR set to: 1
 27609  0044BA  5100               	movf	_var_sys& (0+255),w,b	;volatile
 27610  0044BC  A4D8               	btfss	status,2,c
 27611  0044BE  D042               	goto	l25477
 27612                           
 27613                           ; BSR set to: 1
 27614  0044C0  05E7               	decf	_controlGate_stateMachine& (0+255),w,b
 27615  0044C2  11E8               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
 27616  0044C4  A4D8               	btfss	status,2,c
 27617  0044C6  D03E               	goto	l25477
 27618                           
 27619                           ; BSR set to: 1
 27620                           ;outputs_MC50.c: 881:     {;outputs_MC50.c: 882:         if(var_sys.preflashingcontrol !
      +                          = YES){
 27621  0044C8  051D               	decf	(_var_sys+29)& (0+255),w,b	;volatile
 27622  0044CA  A4D8               	btfss	status,2,c
 27623                           
 27624                           ; BSR set to: 1
 27625                           
 27626                           ;outputs_MC50.c: 883:             do { LATAbits.LATA7 = 1; } while(0);
 27627  0044CC  8E83               	bsf	131,7,c	;volatile
 27628                           
 27629                           ; BSR set to: 1
 27630                           ;outputs_MC50.c: 888:         if(var_sys_NVM.flashRGBMode==rgb_pisca)
 27631  0044CE  0100               	movlb	0	; () banked
 27632  0044D0  05B1               	decf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 27633  0044D2  A4D8               	btfss	status,2,c
 27634  0044D4  D017               	goto	l25465
 27635                           
 27636                           ; BSR set to: 0
 27637                           ;outputs_MC50.c: 889:         {;outputs_MC50.c: 890:             if (var_sys_NVM.TypeofM
      +                          otor == br || var_sys_NVM.TypeofMotor == SE)setRGB_ON(YELLOW,0);
 27638  0044D6  0E02               	movlw	2
 27639  0044D8  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 27640  0044DA  B4D8               	btfsc	status,2,c
 27641  0044DC  D003               	goto	u31750
 27642                           
 27643                           ; BSR set to: 0
 27644  0044DE  05B4               	decf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 27645  0044E0  A4D8               	btfss	status,2,c
 27646  0044E2  D008               	goto	l25463
 27647  0044E4                     u31750:
 27648                           
 27649                           ; BSR set to: 0
 27650  0044E4  0E00               	movlw	0
 27651  0044E6  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 27652  0044E8  0E00               	movlw	0
 27653  0044EA  6E11               	movwf	setRGB_ON@Freq^0,c
 27654  0044EC  0E04               	movlw	4
 27655  0044EE  EC75  F03F         	call	_setRGB_ON
 27656  0044F2  D013               	goto	l25469
 27657  0044F4                     l25463:
 27658                           
 27659                           ; BSR set to: 0
 27660  0044F4  0E00               	movlw	0
 27661  0044F6  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 27662  0044F8  0E28               	movlw	40
 27663  0044FA  6E11               	movwf	setRGB_ON@Freq^0,c
 27664  0044FC  0E04               	movlw	4
 27665  0044FE  EC75  F03F         	call	_setRGB_ON
 27666  004502  D00B               	goto	l25469
 27667  004504                     l25465:
 27668                           
 27669                           ; BSR set to: 0
 27670  004504  0E03               	movlw	3
 27671  004506  19B1               	xorwf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 27672  004508  B4D8               	btfsc	status,2,c
 27673  00450A  D007               	goto	l25469
 27674                           
 27675                           ; BSR set to: 0
 27676  00450C  0E00               	movlw	0
 27677  00450E  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 27678  004510  0E00               	movlw	0
 27679  004512  6E11               	movwf	setRGB_ON@Freq^0,c
 27680  004514  0E04               	movlw	4
 27681  004516  EC75  F03F         	call	_setRGB_ON
 27682  00451A                     l25469:
 27683                           
 27684                           ;outputs_MC50.c: 895:         if (var_sys_NVM.flashLightMode != electroiman)
 27685  00451A  0E03               	movlw	3
 27686  00451C  0100               	movlb	0	; () banked
 27687  00451E  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 27688  004520  B4D8               	btfsc	status,2,c
 27689  004522  0012               	return	
 27690                           
 27691                           ; BSR set to: 0
 27692                           ;outputs_MC50.c: 896:         {;outputs_MC50.c: 897:         if (ts_system.TimeOnFlashLi
      +                          gth>0)
 27693  004524  0101               	movlb	1	; () banked
 27694  004526  BFC2               	btfsc	(_ts_system+35)& (0+255),7,b	;volatile
 27695  004528  D007               	goto	l2443
 27696  00452A  51C2               	movf	(_ts_system+35)& (0+255),w,b	;volatile
 27697  00452C  11C1               	iorwf	(_ts_system+34)& (0+255),w,b	;volatile
 27698  00452E  11C0               	iorwf	(_ts_system+33)& (0+255),w,b	;volatile
 27699  004530  E1BD               	bnz	l25447
 27700  004532  05BF               	decf	(_ts_system+32)& (0+255),w,b	;volatile
 27701  004534  B0D8               	btfsc	status,0,c
 27702  004536  D7BA               	goto	l25447
 27703  004538                     l2443:
 27704                           
 27705                           ; BSR set to: 1
 27706  004538  9487               	bcf	135,2,c	;volatile
 27707                           
 27708                           ; BSR set to: 1
 27709                           ;outputs_MC50.c: 904:             ts_system.timeFreqFlashligth=0;
 27710  00453A  0E00               	movlw	0
 27711  00453C  6FBE               	movwf	(_ts_system+31)& (0+255),b	;volatile
 27712  00453E  0E00               	movlw	0
 27713  004540  6FBD               	movwf	(_ts_system+30)& (0+255),b	;volatile
 27714                           
 27715                           ; BSR set to: 0
 27716                           ;outputs_MC50.c: 907:     }
 27717                           
 27718                           ;outputs_MC50.c: 906:         }
 27719  004542  0012               	return	
 27720  004544                     l25477:
 27721                           
 27722                           ; BSR set to: 1
 27723  004544  5100               	movf	_var_sys& (0+255),w,b	;volatile
 27724  004546  A4D8               	btfss	status,2,c
 27725  004548  D048               	goto	l25511
 27726                           
 27727                           ; BSR set to: 1
 27728                           ;outputs_MC50.c: 911:     {;outputs_MC50.c: 912:         if (( var_sys_NVM.autoTimeFullC
      +                          lose==0 && var_sys.StateMotor == InOpenFull)||((var_sys_NVM.autoTimeWalkClose==0) && var
      +                          _sys_NVM.walkTime >0 && var_sys.StateMotor == InOpenWalk))
 27729  00454A  0100               	movlb	0	; () banked
 27730  00454C  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 27731  00454E  A4D8               	btfss	status,2,c
 27732  004550  D004               	goto	u31810
 27733                           
 27734                           ; BSR set to: 0
 27735  004552  0101               	movlb	1	; () banked
 27736  004554  0500               	decf	_var_sys& (0+255),w,b	;volatile
 27737  004556  B4D8               	btfsc	status,2,c
 27738  004558  D00C               	goto	u31840
 27739  00455A                     u31810:
 27740  00455A  0100               	movlb	0	; () banked
 27741  00455C  519E               	movf	(_var_sys_NVM+6)& (0+255),w,b	;volatile
 27742  00455E  A4D8               	btfss	status,2,c
 27743  004560  D017               	goto	l25495
 27744                           
 27745                           ; BSR set to: 0
 27746  004562  519C               	movf	(_var_sys_NVM+4)& (0+255),w,b	;volatile
 27747  004564  B4D8               	btfsc	status,2,c
 27748  004566  D014               	goto	l25495
 27749                           
 27750                           ; BSR set to: 0
 27751  004568  0E02               	movlw	2
 27752  00456A  0101               	movlb	1	; () banked
 27753  00456C  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 27754  00456E  A4D8               	btfss	status,2,c
 27755  004570  D00F               	goto	l25495
 27756  004572                     u31840:
 27757                           
 27758                           ; BSR set to: 1
 27759                           ;outputs_MC50.c: 913:         {;outputs_MC50.c: 916:             var_sys.ControlReleCapa
      +                          citorOpen = 0;
 27760  004572  0E00               	movlw	0
 27761  004574  6F28               	movwf	(_var_sys+40)& (0+255),b	;volatile
 27762                           
 27763                           ;outputs_MC50.c: 917:             var_sys.ControlReleCapacitorClose = 0;
 27764  004576  0E00               	movlw	0
 27765  004578  6F29               	movwf	(_var_sys+41)& (0+255),b	;volatile
 27766                           
 27767                           ; BSR set to: 1
 27768                           ;outputs_MC50.c: 921:             if (var_sys_NVM.flashLightMode != electroiman && var_s
      +                          ys_NVM.flashLightMode != condominio ){
 27769  00457A  0E03               	movlw	3
 27770  00457C  0100               	movlb	0	; () banked
 27771  00457E  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 27772  004580  B4D8               	btfsc	status,2,c
 27773  004582  0012               	return	
 27774                           
 27775                           ; BSR set to: 0
 27776  004584  0E02               	movlw	2
 27777  004586  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 27778  004588  B4D8               	btfsc	status,2,c
 27779  00458A  0012               	return	
 27780                           
 27781                           ; BSR set to: 0
 27782                           
 27783                           ;outputs_MC50.c: 922:               do { LATEbits.LATE2 = 0; } while(0);
 27784  00458C  9487               	bcf	135,2,c	;volatile
 27785  00458E  0012               	return	
 27786  004590                     l25495:
 27787                           
 27788                           ;outputs_MC50.c: 927:         {;outputs_MC50.c: 928:             if(var_sys_NVM.flashRGB
      +                          Mode==rgb_pisca)
 27789  004590  0100               	movlb	0	; () banked
 27790  004592  05B1               	decf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 27791  004594  A4D8               	btfss	status,2,c
 27792  004596  D008               	goto	l25499
 27793                           
 27794                           ; BSR set to: 0
 27795                           ;outputs_MC50.c: 929:             {;outputs_MC50.c: 930:                 setRGB_ON(BLUE,
      +                          (1000/50));
 27796  004598  0E00               	movlw	0
 27797  00459A  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 27798  00459C  0E14               	movlw	20
 27799  00459E  6E11               	movwf	setRGB_ON@Freq^0,c
 27800  0045A0  0E01               	movlw	1
 27801  0045A2  EC75  F03F         	call	_setRGB_ON
 27802                           
 27803                           ;outputs_MC50.c: 932:             }
 27804  0045A6  D007               	goto	l25501
 27805  0045A8                     l25499:
 27806                           
 27807                           ; BSR set to: 0
 27808                           ;outputs_MC50.c: 934:             {;outputs_MC50.c: 935:                 setRGB_ON(BLUE,
      +                          0);
 27809  0045A8  0E00               	movlw	0
 27810  0045AA  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 27811  0045AC  0E00               	movlw	0
 27812  0045AE  6E11               	movwf	setRGB_ON@Freq^0,c
 27813  0045B0  0E01               	movlw	1
 27814  0045B2  EC75  F03F         	call	_setRGB_ON
 27815  0045B6                     l25501:
 27816                           
 27817                           ; BSR set to: 1
 27818                           ;outputs_MC50.c: 939:             if(var_sys_NVM.flashLightMode==pisca ||var_sys_NVM.fla
      +                          shLightMode==electroiman)
 27819  0045B6  0100               	movlb	0	; () banked
 27820  0045B8  05A5               	decf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 27821  0045BA  B4D8               	btfsc	status,2,c
 27822  0045BC  D004               	goto	u31890
 27823                           
 27824                           ; BSR set to: 0
 27825  0045BE  0E03               	movlw	3
 27826  0045C0  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 27827  0045C2  A4D8               	btfss	status,2,c
 27828  0045C4  D002               	goto	l25505
 27829  0045C6                     u31890:
 27830                           
 27831                           ; BSR set to: 0
 27832                           
 27833                           ;outputs_MC50.c: 940:             {;outputs_MC50.c: 941:                  do { LATEbits.
      +                          LATE2 = 0; } while(0);
 27834  0045C6  9487               	bcf	135,2,c	;volatile
 27835  0045C8  0012               	return	
 27836  0045CA                     l25505:
 27837                           
 27838                           ; BSR set to: 0
 27839  0045CA  51A5               	movf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 27840  0045CC  B4D8               	btfsc	status,2,c
 27841  0045CE  D76E               	goto	l25447
 27842                           
 27843                           ; BSR set to: 0
 27844  0045D0  0E02               	movlw	2
 27845  0045D2  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 27846  0045D4  A4D8               	btfss	status,2,c
 27847  0045D6  0012               	return	
 27848  0045D8  D769               	goto	l25447
 27849  0045DA                     l25511:
 27850                           
 27851                           ; BSR set to: 1
 27852                           ;outputs_MC50.c: 955:     {;outputs_MC50.c: 957:         var_sys.ControlReleCapacitorClo
      +                          se=0;
 27853  0045DA  0E00               	movlw	0
 27854  0045DC  6F29               	movwf	(_var_sys+41)& (0+255),b	;volatile
 27855                           
 27856                           ;outputs_MC50.c: 958:         if (var_sys.ControlReleCapacitorOpen==0 && var_sys_NVM.fla
      +                          shRGBMode==rgb_capacitor)
 27857  0045DE  5128               	movf	(_var_sys+40)& (0+255),w,b	;volatile
 27858  0045E0  A4D8               	btfss	status,2,c
 27859  0045E2  D00C               	goto	l25517
 27860                           
 27861                           ; BSR set to: 1
 27862  0045E4  0E03               	movlw	3
 27863  0045E6  0100               	movlb	0	; () banked
 27864  0045E8  19B1               	xorwf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 27865  0045EA  A4D8               	btfss	status,2,c
 27866  0045EC  D007               	goto	l25517
 27867                           
 27868                           ; BSR set to: 0
 27869                           ;outputs_MC50.c: 959:         {;outputs_MC50.c: 960:          ts_system.TimeReleCapacito
      +                          r = (1000/50)*2;
 27870  0045EE  0E00               	movlw	0
 27871  0045F0  0101               	movlb	1	; () banked
 27872  0045F2  6FE2               	movwf	(_ts_system+67)& (0+255),b	;volatile
 27873  0045F4  0E28               	movlw	40
 27874  0045F6  6FE1               	movwf	(_ts_system+66)& (0+255),b	;volatile
 27875                           
 27876                           ;outputs_MC50.c: 962:          var_sys.ControlReleCapacitorOpen = 1;
 27877  0045F8  0E01               	movlw	1
 27878  0045FA  6F28               	movwf	(_var_sys+40)& (0+255),b	;volatile
 27879  0045FC                     l25517:
 27880                           
 27881                           ;outputs_MC50.c: 964:         if(ts_system.TimeReleCapacitor <=0 && var_sys_NVM.flashRGB
      +                          Mode==rgb_capacitor)
 27882  0045FC  0101               	movlb	1	; () banked
 27883  0045FE  BFE2               	btfsc	(_ts_system+67)& (0+255),7,b	;volatile
 27884  004600  D005               	goto	u31940
 27885  004602  51E2               	movf	(_ts_system+67)& (0+255),w,b	;volatile
 27886  004604  E105               	bnz	l25521
 27887  004606  05E1               	decf	(_ts_system+66)& (0+255),w,b	;volatile
 27888  004608  B0D8               	btfsc	status,0,c
 27889  00460A  D002               	goto	l25521
 27890  00460C                     u31940:
 27891                           
 27892                           ; BSR set to: 1
 27893  00460C  0100               	movlb	0	; () banked
 27894  00460E  51B1               	movf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 27895  004610                     l25521:
 27896                           
 27897                           ;outputs_MC50.c: 969:         if (controlGate_stateMachine.current_state==st_Opened)
 27898  004610  0E04               	movlw	4
 27899  004612  0101               	movlb	1	; () banked
 27900  004614  19E7               	xorwf	_controlGate_stateMachine& (0+255),w,b
 27901  004616  11E8               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
 27902  004618  A4D8               	btfss	status,2,c
 27903  00461A  D01B               	goto	l25533
 27904                           
 27905                           ; BSR set to: 1
 27906                           ;outputs_MC50.c: 970:         {;outputs_MC50.c: 973:             var_sys.ControlReleCapa
      +                          citorOpen = 0;
 27907  00461C  0E00               	movlw	0
 27908  00461E  6F28               	movwf	(_var_sys+40)& (0+255),b	;volatile
 27909                           
 27910                           ;outputs_MC50.c: 974:             var_sys.ControlReleCapacitorClose = 0;
 27911  004620  0E00               	movlw	0
 27912  004622  6F29               	movwf	(_var_sys+41)& (0+255),b	;volatile
 27913                           
 27914                           ;outputs_MC50.c: 977:             if (var_sys_NVM.autoTimeFullClose != 0 || ((var_sys_NV
      +                          M.autoTimeWalkClose!=0) && var_sys_NVM.walkTime >0)|| var_sys_NVM.operationMode==2)
 27915  004624  0100               	movlb	0	; () banked
 27916  004626  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 27917  004628  A4D8               	btfss	status,2,c
 27918  00462A  D00A               	goto	u31990
 27919                           
 27920                           ; BSR set to: 0
 27921  00462C  519E               	movf	(_var_sys_NVM+6)& (0+255),w,b	;volatile
 27922  00462E  B4D8               	btfsc	status,2,c
 27923  004630  D003               	goto	u31980
 27924                           
 27925                           ; BSR set to: 0
 27926  004632  519C               	movf	(_var_sys_NVM+4)& (0+255),w,b	;volatile
 27927  004634  A4D8               	btfss	status,2,c
 27928  004636  D004               	goto	u31990
 27929  004638                     u31980:
 27930                           
 27931                           ; BSR set to: 0
 27932  004638  0E02               	movlw	2
 27933  00463A  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 27934  00463C  A4D8               	btfss	status,2,c
 27935  00463E  D007               	goto	l2477
 27936  004640                     u31990:
 27937                           
 27938                           ; BSR set to: 0
 27939                           ;outputs_MC50.c: 978:             {;outputs_MC50.c: 979:                    setRGB_ON(BL
      +                          UE,0);
 27940  004640  0E00               	movlw	0
 27941  004642  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 27942  004644  0E00               	movlw	0
 27943  004646  6E11               	movwf	setRGB_ON@Freq^0,c
 27944  004648  0E01               	movlw	1
 27945  00464A  EC75  F03F         	call	_setRGB_ON
 27946  00464E                     l2477:
 27947  00464E  9487               	bcf	135,2,c	;volatile
 27948  004650  0012               	return	
 27949  004652                     l25533:
 27950                           
 27951                           ; BSR set to: 1
 27952                           ;outputs_MC50.c: 993:         {;outputs_MC50.c: 996:             if(var_sys_NVM.flashRGB
      +                          Mode==rgb_pisca)
 27953  004652  0100               	movlb	0	; () banked
 27954  004654  05B1               	decf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 27955  004656  A4D8               	btfss	status,2,c
 27956  004658  D008               	goto	l25537
 27957                           
 27958                           ; BSR set to: 0
 27959                           ;outputs_MC50.c: 997:             {;outputs_MC50.c: 998:                 setRGB_ON(GREEN
      +                          ,( 500/50));
 27960  00465A  0E00               	movlw	0
 27961  00465C  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 27962  00465E  0E0A               	movlw	10
 27963  004660  6E11               	movwf	setRGB_ON@Freq^0,c
 27964  004662  0E02               	movlw	2
 27965  004664  EC75  F03F         	call	_setRGB_ON
 27966                           
 27967                           ;outputs_MC50.c: 999:             }
 27968  004668  D007               	goto	l25539
 27969  00466A                     l25537:
 27970                           
 27971                           ; BSR set to: 0
 27972                           ;outputs_MC50.c: 1001:             {;outputs_MC50.c: 1002:                 setRGB_ON(GRE
      +                          EN,0);
 27973  00466A  0E00               	movlw	0
 27974  00466C  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 27975  00466E  0E00               	movlw	0
 27976  004670  6E11               	movwf	setRGB_ON@Freq^0,c
 27977  004672  0E02               	movlw	2
 27978  004674  EC75  F03F         	call	_setRGB_ON
 27979  004678                     l25539:
 27980                           
 27981                           ; BSR set to: 1
 27982                           ;outputs_MC50.c: 1006:             if(var_sys_NVM.flashLightMode==fixo)
 27983  004678  0100               	movlb	0	; () banked
 27984  00467A  51A5               	movf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 27985  00467C  A4D8               	btfss	status,2,c
 27986  00467E  D007               	goto	l25543
 27987                           
 27988                           ; BSR set to: 0
 27989                           ;outputs_MC50.c: 1007:             {;outputs_MC50.c: 1010:                 setFlashLigth
      +                          _ON((1000/50));
 27990  004680  0E00               	movlw	0
 27991  004682  6E11               	movwf	(setFlashLigth_ON@Freq+1)^0,c
 27992  004684  0E14               	movlw	20
 27993  004686  6E10               	movwf	setFlashLigth_ON@Freq^0,c
 27994  004688  ECA8  F049         	call	_setFlashLigth_ON	;wreg free
 27995                           
 27996                           ;outputs_MC50.c: 1011:             }
 27997  00468C  D00D               	goto	l25549
 27998  00468E                     l25543:
 27999                           
 28000                           ; BSR set to: 0
 28001  00468E  05A5               	decf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 28002  004690  B4D8               	btfsc	status,2,c
 28003  004692  D004               	goto	u32030
 28004                           
 28005                           ; BSR set to: 0
 28006  004694  0E02               	movlw	2
 28007  004696  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 28008  004698  A4D8               	btfss	status,2,c
 28009  00469A  D006               	goto	l25549
 28010  00469C                     u32030:
 28011                           
 28012                           ; BSR set to: 0
 28013                           ;outputs_MC50.c: 1013:             {;outputs_MC50.c: 1014:                 setFlashLigth
      +                          _ON(0);
 28014  00469C  0E00               	movlw	0
 28015  00469E  6E11               	movwf	(setFlashLigth_ON@Freq+1)^0,c
 28016  0046A0  0E00               	movlw	0
 28017  0046A2  6E10               	movwf	setFlashLigth_ON@Freq^0,c
 28018  0046A4  ECA8  F049         	call	_setFlashLigth_ON	;wreg free
 28019  0046A8                     l25549:
 28020                           
 28021                           ;outputs_MC50.c: 1017:             if (var_sys_NVM.flashLightMode == electroiman)
 28022  0046A8  0E03               	movlw	3
 28023  0046AA  0100               	movlb	0	; () banked
 28024  0046AC  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 28025  0046AE  A4D8               	btfss	status,2,c
 28026  0046B0  0012               	return	
 28027                           
 28028                           ; BSR set to: 0
 28029                           
 28030                           ;outputs_MC50.c: 1018:             {;outputs_MC50.c: 1019:             do { LATEbits.LAT
      +                          E2 = 0; } while(0);
 28031  0046B2  9487               	bcf	135,2,c	;volatile
 28032  0046B4  0012               	return		;funcret
 28033  0046B6                     __end_of_ControlLights:
 28034                           	callstack 0
 28035                           
 28036 ;; *************** function _setRGB_ON *****************
 28037 ;; Defined at:
 28038 ;;		line 1028 in file "outputs_MC50.c"
 28039 ;; Parameters:    Size  Location     Type
 28040 ;;  RGBLigth        1    wreg     enum E10611
 28041 ;;  Freq            2   16[COMRAM] int 
 28042 ;; Auto vars:     Size  Location     Type
 28043 ;;  RGBLigth        1   20[COMRAM] enum E10611
 28044 ;; Return value:  Size  Location     Type
 28045 ;;                  1    wreg      void 
 28046 ;; Registers used:
 28047 ;;		wreg, status,2, status,0, cstack
 28048 ;; Tracked objects:
 28049 ;;		On entry : 3E/0
 28050 ;;		On exit  : 3F/1
 28051 ;;		Unchanged: 0/0
 28052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28053 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28054 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28055 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28056 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28057 ;;Total ram usage:        5 bytes
 28058 ;; Hardware stack levels used: 1
 28059 ;; Hardware stack levels required when called: 5
 28060 ;; This function calls:
 28061 ;;		_RGB_Set
 28062 ;; This function is called by:
 28063 ;;		_ControlLights
 28064 ;; This function uses a non-reentrant model
 28065 ;;
 28066                           
 28067                           	psect	text115
 28068  007EEA                     __ptext115:
 28069                           	callstack 0
 28070  007EEA                     _setRGB_ON:
 28071                           	callstack 24
 28072                           
 28073                           ;incstack = 0
 28074                           ;setRGB_ON@RGBLigth stored from wreg
 28075  007EEA  6E15               	movwf	setRGB_ON@RGBLigth^0,c
 28076                           
 28077                           ;outputs_MC50.c: 1028: void setRGB_ON(RGBY_enum RGBLigth,int Freq);outputs_MC50.c: 1029:
      +                           {;outputs_MC50.c: 1031:     do { LATAbits.LATA7 = 1; } while(0);
 28078  007EEC  8E83               	bsf	131,7,c	;volatile
 28079                           
 28080                           ;outputs_MC50.c: 1037:     if(Freq==0 || var_sys.upFaseRGB==1)
 28081  007EEE  5011               	movf	setRGB_ON@Freq^0,w,c
 28082  007EF0  1012               	iorwf	(setRGB_ON@Freq+1)^0,w,c
 28083  007EF2  B4D8               	btfsc	status,2,c
 28084  007EF4  D015               	goto	l22913
 28085  007EF6  0101               	movlb	1	; () banked
 28086  007EF8  0524               	decf	(_var_sys+36)& (0+255),w,b	;volatile
 28087  007EFA  B4D8               	btfsc	status,2,c
 28088  007EFC  D011               	goto	l22913
 28089  007EFE  D024               	goto	l22915
 28090  007F00                     l22903:
 28091                           
 28092                           ;outputs_MC50.c: 1043:                 RGB_Set(0x20);
 28093  007F00  0E20               	movlw	32
 28094  007F02  EC9B  F04D         	call	_RGB_Set
 28095                           
 28096                           ;outputs_MC50.c: 1044:             break;
 28097  007F06  D020               	goto	l22915
 28098  007F08                     l22905:
 28099                           
 28100                           ;outputs_MC50.c: 1047:                 RGB_Set(0x04);
 28101  007F08  0E04               	movlw	4
 28102  007F0A  EC9B  F04D         	call	_RGB_Set
 28103                           
 28104                           ;outputs_MC50.c: 1048:             break;
 28105  007F0E  D01C               	goto	l22915
 28106  007F10                     l22907:
 28107                           
 28108                           ;outputs_MC50.c: 1051:                 RGB_Set(0x00);
 28109  007F10  0E00               	movlw	0
 28110  007F12  EC9B  F04D         	call	_RGB_Set
 28111                           
 28112                           ;outputs_MC50.c: 1052:             break;
 28113  007F16  D018               	goto	l22915
 28114  007F18                     l22909:
 28115                           
 28116                           ;outputs_MC50.c: 1055:                 RGB_Set(0x24);
 28117  007F18  0E24               	movlw	36
 28118  007F1A  EC9B  F04D         	call	_RGB_Set
 28119                           
 28120                           ;outputs_MC50.c: 1056:             break;
 28121  007F1E  D014               	goto	l22915
 28122  007F20                     l22913:
 28123  007F20  5015               	movf	setRGB_ON@RGBLigth^0,w,c
 28124  007F22  6E13               	movwf	??_setRGB_ON^0,c
 28125  007F24  6A14               	clrf	(??_setRGB_ON+1)^0,c
 28126                           
 28127                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 28128                           ; Switch size 1, requested type "simple"
 28129                           ; Number of cases is 1, Range of values is 0 to 0
 28130                           ; switch strategies available:
 28131                           ; Name         Instructions Cycles
 28132                           ; simple_byte            4     3 (average)
 28133                           ;	Chosen strategy is simple_byte
 28134  007F26  5014               	movf	(??_setRGB_ON+1)^0,w,c
 28135  007F28  0A00               	xorlw	0	; case 0
 28136  007F2A  A4D8               	btfss	status,2,c
 28137  007F2C  D00D               	goto	l22915
 28138                           
 28139                           ; Switch size 1, requested type "simple"
 28140                           ; Number of cases is 4, Range of values is 1 to 4
 28141                           ; switch strategies available:
 28142                           ; Name         Instructions Cycles
 28143                           ; simple_byte           13     7 (average)
 28144                           ;	Chosen strategy is simple_byte
 28145  007F2E  5013               	movf	??_setRGB_ON^0,w,c
 28146  007F30  0A01               	xorlw	1	; case 1
 28147  007F32  B4D8               	btfsc	status,2,c
 28148  007F34  D7ED               	goto	l22907
 28149  007F36  0A03               	xorlw	3	; case 2
 28150  007F38  B4D8               	btfsc	status,2,c
 28151  007F3A  D7E6               	goto	l22905
 28152  007F3C  0A01               	xorlw	1	; case 3
 28153  007F3E  B4D8               	btfsc	status,2,c
 28154  007F40  D7DF               	goto	l22903
 28155  007F42  0A07               	xorlw	7	; case 4
 28156  007F44  B4D8               	btfsc	status,2,c
 28157  007F46  D7E8               	goto	l22909
 28158  007F48                     l22915:
 28159                           
 28160                           ;outputs_MC50.c: 1061:     if(ts_system.timeFreqRGB<=0 && Freq!=0)
 28161  007F48  0101               	movlb	1	; () banked
 28162  007F4A  BFBC               	btfsc	(_ts_system+29)& (0+255),7,b	;volatile
 28163  007F4C  D005               	goto	u26570
 28164  007F4E  51BC               	movf	(_ts_system+29)& (0+255),w,b	;volatile
 28165  007F50  E113               	bnz	l2507
 28166  007F52  05BB               	decf	(_ts_system+28)& (0+255),w,b	;volatile
 28167  007F54  B0D8               	btfsc	status,0,c
 28168  007F56  0012               	return	
 28169  007F58                     u26570:
 28170                           
 28171                           ; BSR set to: 1
 28172  007F58  5011               	movf	setRGB_ON@Freq^0,w,c
 28173  007F5A  1012               	iorwf	(setRGB_ON@Freq+1)^0,w,c
 28174  007F5C  B4D8               	btfsc	status,2,c
 28175  007F5E  0012               	return	
 28176                           
 28177                           ; BSR set to: 1
 28178                           ;outputs_MC50.c: 1062:     {;outputs_MC50.c: 1063:         ts_system.timeFreqRGB=Freq;
 28179  007F60  C011  F1BB         	movff	setRGB_ON@Freq,_ts_system+28	;volatile
 28180  007F64  C012  F1BC         	movff	setRGB_ON@Freq+1,_ts_system+29	;volatile
 28181                           
 28182                           ; BSR set to: 1
 28183                           ;outputs_MC50.c: 1064:         if(var_sys.upFaseRGB==1)
 28184  007F68  0524               	decf	(_var_sys+36)& (0+255),w,b	;volatile
 28185  007F6A  A4D8               	btfss	status,2,c
 28186  007F6C  D003               	goto	l22925
 28187                           
 28188                           ; BSR set to: 1
 28189                           ;outputs_MC50.c: 1065:         {;outputs_MC50.c: 1066:             var_sys.upFaseRGB=0;
 28190  007F6E  0E00               	movlw	0
 28191  007F70  6F24               	movwf	(_var_sys+36)& (0+255),b	;volatile
 28192                           
 28193                           ;outputs_MC50.c: 1067:         }
 28194  007F72  0012               	return	
 28195  007F74                     l22925:
 28196                           
 28197                           ; BSR set to: 1
 28198                           ;outputs_MC50.c: 1069:         {;outputs_MC50.c: 1070:             var_sys.upFaseRGB=1;
 28199  007F74  0E01               	movlw	1
 28200  007F76  6F24               	movwf	(_var_sys+36)& (0+255),b	;volatile
 28201  007F78                     l2507:
 28202                           
 28203                           ; BSR set to: 1
 28204  007F78  0012               	return		;funcret
 28205  007F7A                     __end_of_setRGB_ON:
 28206                           	callstack 0
 28207                           
 28208 ;; *************** function _RGB_Set *****************
 28209 ;; Defined at:
 28210 ;;		line 98 in file "outputs_MC50.c"
 28211 ;; Parameters:    Size  Location     Type
 28212 ;;  value           1    wreg     unsigned char 
 28213 ;; Auto vars:     Size  Location     Type
 28214 ;;  value           1   15[COMRAM] unsigned char 
 28215 ;; Return value:  Size  Location     Type
 28216 ;;                  1    wreg      void 
 28217 ;; Registers used:
 28218 ;;		wreg, status,2, status,0
 28219 ;; Tracked objects:
 28220 ;;		On entry : 0/0
 28221 ;;		On exit  : 0/0
 28222 ;;		Unchanged: 0/0
 28223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28225 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28227 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28228 ;;Total ram usage:        1 bytes
 28229 ;; Hardware stack levels used: 1
 28230 ;; Hardware stack levels required when called: 4
 28231 ;; This function calls:
 28232 ;;		Nothing
 28233 ;; This function is called by:
 28234 ;;		_setRGB_ON
 28235 ;; This function uses a non-reentrant model
 28236 ;;
 28237                           
 28238                           	psect	text116
 28239  009B36                     __ptext116:
 28240                           	callstack 0
 28241  009B36                     _RGB_Set:
 28242                           	callstack 24
 28243                           
 28244                           ; BSR set to: 1
 28245                           ;incstack = 0
 28246                           ;RGB_Set@value stored from wreg
 28247  009B36  6E10               	movwf	RGB_Set@value^0,c
 28248                           
 28249                           ;outputs_MC50.c: 98: void RGB_Set(char value);outputs_MC50.c: 99: {;outputs_MC50.c: 100:
      +                              LATC &= 0xdb ;
 28250  009B38  0EDB               	movlw	219
 28251  009B3A  1685               	andwf	133,f,c	;volatile
 28252                           
 28253                           ;outputs_MC50.c: 101:    LATC |= value;
 28254  009B3C  5010               	movf	RGB_Set@value^0,w,c	;volatile
 28255  009B3E  1285               	iorwf	133,f,c	;volatile
 28256  009B40  9E83               	bcf	131,7,c	;volatile
 28257  009B42  0012               	return		;funcret
 28258  009B44                     __end_of_RGB_Set:
 28259                           	callstack 0
 28260                           
 28261 ;; *************** function _setFlashLigth_ON *****************
 28262 ;; Defined at:
 28263 ;;		line 1077 in file "outputs_MC50.c"
 28264 ;; Parameters:    Size  Location     Type
 28265 ;;  Freq            2   15[COMRAM] int 
 28266 ;; Auto vars:     Size  Location     Type
 28267 ;;		None
 28268 ;; Return value:  Size  Location     Type
 28269 ;;                  1    wreg      void 
 28270 ;; Registers used:
 28271 ;;		wreg, status,2, status,0
 28272 ;; Tracked objects:
 28273 ;;		On entry : 3E/1
 28274 ;;		On exit  : 3F/1
 28275 ;;		Unchanged: 0/0
 28276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28277 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28280 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28281 ;;Total ram usage:        2 bytes
 28282 ;; Hardware stack levels used: 1
 28283 ;; Hardware stack levels required when called: 4
 28284 ;; This function calls:
 28285 ;;		Nothing
 28286 ;; This function is called by:
 28287 ;;		_ControlLights
 28288 ;; This function uses a non-reentrant model
 28289 ;;
 28290                           
 28291                           	psect	text117
 28292  009350                     __ptext117:
 28293                           	callstack 0
 28294  009350                     _setFlashLigth_ON:
 28295                           	callstack 25
 28296                           
 28297                           ;outputs_MC50.c: 1077: void setFlashLigth_ON(int Freq);outputs_MC50.c: 1078: {;outputs_M
      +                          C50.c: 1079:     if(Freq==0 || var_sys.upFaseFlashligth==1)
 28298                           
 28299                           ;incstack = 0
 28300  009350  5010               	movf	setFlashLigth_ON@Freq^0,w,c
 28301  009352  1011               	iorwf	(setFlashLigth_ON@Freq+1)^0,w,c
 28302  009354  B4D8               	btfsc	status,2,c
 28303  009356  D004               	goto	u26520
 28304  009358  0101               	movlb	1	; () banked
 28305  00935A  0525               	decf	(_var_sys+37)& (0+255),w,b	;volatile
 28306  00935C  A4D8               	btfss	status,2,c
 28307  00935E  D002               	goto	l2516
 28308  009360                     u26520:
 28309                           
 28310                           ;outputs_MC50.c: 1080:     {;outputs_MC50.c: 1081:         do { LATEbits.LATE2 = 1; } wh
      +                          ile(0);
 28311  009360  8487               	bsf	135,2,c	;volatile
 28312  009362  D001               	goto	l22891
 28313  009364                     l2516:
 28314                           
 28315                           ; BSR set to: 1
 28316  009364  9487               	bcf	135,2,c	;volatile
 28317  009366                     l22891:
 28318                           
 28319                           ;outputs_MC50.c: 1088:     if(ts_system.timeFreqFlashligth<=0 && Freq!=0)
 28320  009366  0101               	movlb	1	; () banked
 28321  009368  BFBE               	btfsc	(_ts_system+31)& (0+255),7,b	;volatile
 28322  00936A  D005               	goto	u26530
 28323  00936C  51BE               	movf	(_ts_system+31)& (0+255),w,b	;volatile
 28324  00936E  E10D               	bnz	l2519
 28325  009370  05BD               	decf	(_ts_system+30)& (0+255),w,b	;volatile
 28326  009372  B0D8               	btfsc	status,0,c
 28327  009374  0012               	return	
 28328  009376                     u26530:
 28329                           
 28330                           ; BSR set to: 1
 28331  009376  5010               	movf	setFlashLigth_ON@Freq^0,w,c
 28332  009378  1011               	iorwf	(setFlashLigth_ON@Freq+1)^0,w,c
 28333  00937A  B4D8               	btfsc	status,2,c
 28334  00937C  0012               	return	
 28335                           
 28336                           ; BSR set to: 1
 28337                           ;outputs_MC50.c: 1089:     {;outputs_MC50.c: 1090:         ts_system.timeFreqFlashligth=
      +                          Freq;
 28338  00937E  C010  F1BD         	movff	setFlashLigth_ON@Freq,_ts_system+30	;volatile
 28339  009382  C011  F1BE         	movff	setFlashLigth_ON@Freq+1,_ts_system+31	;volatile
 28340                           
 28341                           ; BSR set to: 1
 28342                           ;outputs_MC50.c: 1091:         var_sys.upFaseFlashligth ^= (1 << 0);
 28343  009386  0E01               	movlw	1
 28344  009388  1B25               	xorwf	(_var_sys+37)& (0+255),f,b	;volatile
 28345  00938A                     l2519:
 28346                           
 28347                           ; BSR set to: 1
 28348  00938A  0012               	return		;funcret
 28349  00938C                     __end_of_setFlashLigth_ON:
 28350                           	callstack 0
 28351                           
 28352 ;; *************** function _ControlInputs *****************
 28353 ;; Defined at:
 28354 ;;		line 674 in file "inputs_MC50.c"
 28355 ;; Parameters:    Size  Location     Type
 28356 ;;		None
 28357 ;; Auto vars:     Size  Location     Type
 28358 ;;		None
 28359 ;; Return value:  Size  Location     Type
 28360 ;;                  1    wreg      void 
 28361 ;; Registers used:
 28362 ;;		wreg, status,2, status,0
 28363 ;; Tracked objects:
 28364 ;;		On entry : 3E/1
 28365 ;;		On exit  : 3E/0
 28366 ;;		Unchanged: 0/0
 28367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28368 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28369 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28371 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28372 ;;Total ram usage:        0 bytes
 28373 ;; Hardware stack levels used: 1
 28374 ;; Hardware stack levels required when called: 4
 28375 ;; This function calls:
 28376 ;;		Nothing
 28377 ;; This function is called by:
 28378 ;;		_main
 28379 ;; This function uses a non-reentrant model
 28380 ;;
 28381                           
 28382                           	psect	text118
 28383  006E72                     __ptext118:
 28384                           	callstack 0
 28385  006E72                     _ControlInputs:
 28386                           	callstack 26
 28387                           
 28388                           ;inputs_MC50.c: 678:     if (( var_sys.StateMotor==InClose || (((PORTEbits.RE1 == 1)&& v
      +                          ar_sys_NVM.Direction_motor == 0)||((PORTEbits.RE0 == 1)&&var_sys_NVM.Direction_motor == 
      +                          1))) && (var_sys.FimCurso_CloseIsEnabled == YES))
 28389                           
 28390                           ; BSR set to: 1
 28391                           ;incstack = 0
 28392  006E72  0E03               	movlw	3
 28393  006E74  0101               	movlb	1	; () banked
 28394  006E76  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 28395  006E78  B4D8               	btfsc	status,2,c
 28396  006E7A  D00C               	goto	u30110
 28397                           
 28398                           ; BSR set to: 1
 28399  006E7C  A291               	btfss	145,1,c	;volatile
 28400  006E7E  D004               	goto	u30090
 28401                           
 28402                           ; BSR set to: 1
 28403  006E80  0100               	movlb	0	; () banked
 28404  006E82  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 28405  006E84  B4D8               	btfsc	status,2,c
 28406  006E86  D006               	goto	u30110
 28407  006E88                     u30090:
 28408  006E88  A091               	btfss	145,0,c	;volatile
 28409  006E8A  D00A               	goto	l24725
 28410  006E8C  0100               	movlb	0	; () banked
 28411  006E8E  05B3               	decf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 28412  006E90  A4D8               	btfss	status,2,c
 28413  006E92  D006               	goto	l24725
 28414  006E94                     u30110:
 28415  006E94  0101               	movlb	1	; () banked
 28416  006E96  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
 28417  006E98  A4D8               	btfss	status,2,c
 28418  006E9A  D002               	goto	l24725
 28419                           
 28420                           ; BSR set to: 1
 28421                           ;inputs_MC50.c: 679:     {;inputs_MC50.c: 680:         var_sys.StateMotor = Stopped;
 28422  006E9C  0E00               	movlw	0
 28423  006E9E  6F00               	movwf	_var_sys& (0+255),b	;volatile
 28424  006EA0                     l24725:
 28425                           
 28426                           ;inputs_MC50.c: 683:     if((var_sys.StateMotor==InOpenFull || var_sys.StateMotor==InOpe
      +                          nWalk || (((PORTEbits.RE0 == 1) &&var_sys_NVM.Direction_motor == 0)||((PORTEbits.RE1 == 
      +                          1) && var_sys_NVM.Direction_motor == 1))) && (var_sys.FimCurso_OpenIsEnabled == YES))
 28427  006EA0  0101               	movlb	1	; () banked
 28428  006EA2  0500               	decf	_var_sys& (0+255),w,b	;volatile
 28429  006EA4  B4D8               	btfsc	status,2,c
 28430  006EA6  D010               	goto	u30180
 28431                           
 28432                           ; BSR set to: 1
 28433  006EA8  0E02               	movlw	2
 28434  006EAA  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 28435  006EAC  B4D8               	btfsc	status,2,c
 28436  006EAE  D00C               	goto	u30180
 28437                           
 28438                           ; BSR set to: 1
 28439  006EB0  A091               	btfss	145,0,c	;volatile
 28440  006EB2  D004               	goto	u30160
 28441                           
 28442                           ; BSR set to: 1
 28443  006EB4  0100               	movlb	0	; () banked
 28444  006EB6  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 28445  006EB8  B4D8               	btfsc	status,2,c
 28446  006EBA  D006               	goto	u30180
 28447  006EBC                     u30160:
 28448  006EBC  A291               	btfss	145,1,c	;volatile
 28449  006EBE  D00A               	goto	l24739
 28450  006EC0  0100               	movlb	0	; () banked
 28451  006EC2  05B3               	decf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 28452  006EC4  A4D8               	btfss	status,2,c
 28453  006EC6  D006               	goto	l24739
 28454  006EC8                     u30180:
 28455  006EC8  0101               	movlb	1	; () banked
 28456  006ECA  0504               	decf	(_var_sys+4)& (0+255),w,b	;volatile
 28457  006ECC  A4D8               	btfss	status,2,c
 28458  006ECE  D002               	goto	l24739
 28459                           
 28460                           ; BSR set to: 1
 28461                           ;inputs_MC50.c: 684:     {;inputs_MC50.c: 685:         var_sys.StateMotor = Stopped;
 28462  006ED0  0E00               	movlw	0
 28463  006ED2  6F00               	movwf	_var_sys& (0+255),b	;volatile
 28464  006ED4                     l24739:
 28465                           
 28466                           ;inputs_MC50.c: 688:     if (var_sys.LearningIsEnabled != YES){
 28467  006ED4  0101               	movlb	1	; () banked
 28468  006ED6  0526               	decf	(_var_sys+38)& (0+255),w,b	;volatile
 28469  006ED8  B4D8               	btfsc	status,2,c
 28470  006EDA  0012               	return	
 28471                           
 28472                           ; BSR set to: 1
 28473                           ;inputs_MC50.c: 690:         if((var_sys_NVM.photoCellIsON == 1) && (var_sys.photoCellIs
      +                          Obstructed == YES) && var_sys.AutoInversionActive==NO)
 28474  006EDC  0100               	movlb	0	; () banked
 28475  006EDE  059F               	decf	(_var_sys_NVM+7)& (0+255),w,b	;volatile
 28476  006EE0  A4D8               	btfss	status,2,c
 28477  006EE2  D02B               	goto	l24765
 28478                           
 28479                           ; BSR set to: 0
 28480  006EE4  0101               	movlb	1	; () banked
 28481  006EE6  0501               	decf	(_var_sys+1)& (0+255),w,b	;volatile
 28482  006EE8  A4D8               	btfss	status,2,c
 28483  006EEA  D027               	goto	l24765
 28484                           
 28485                           ; BSR set to: 1
 28486  006EEC  5127               	movf	(_var_sys+39)& (0+255),w,b	;volatile
 28487  006EEE  A4D8               	btfss	status,2,c
 28488  006EF0  D024               	goto	l24765
 28489                           
 28490                           ; BSR set to: 1
 28491                           ;inputs_MC50.c: 691:         {;inputs_MC50.c: 699:             if((var_sys.StateMotor==I
      +                          nOpenFull || var_sys.StateMotor==InOpenWalk) && (var_sys_NVM.photoCellInOpen==1))
 28492  006EF2  0500               	decf	_var_sys& (0+255),w,b	;volatile
 28493  006EF4  B4D8               	btfsc	status,2,c
 28494  006EF6  D004               	goto	u30250
 28495                           
 28496                           ; BSR set to: 1
 28497  006EF8  0E02               	movlw	2
 28498  006EFA  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 28499  006EFC  A4D8               	btfss	status,2,c
 28500  006EFE  D007               	goto	l24755
 28501  006F00                     u30250:
 28502                           
 28503                           ; BSR set to: 1
 28504  006F00  0100               	movlb	0	; () banked
 28505  006F02  05A0               	decf	(_var_sys_NVM+8)& (0+255),w,b	;volatile
 28506  006F04  A4D8               	btfss	status,2,c
 28507  006F06  D003               	goto	l24755
 28508                           
 28509                           ; BSR set to: 0
 28510                           ;inputs_MC50.c: 700:             {;inputs_MC50.c: 701:                 var_sys.StateMoto
      +                          r = Stopped;
 28511  006F08  0E00               	movlw	0
 28512  006F0A  0101               	movlb	1	; () banked
 28513  006F0C  D015               	goto	L102
 28514  006F0E                     l24755:
 28515  006F0E  0E03               	movlw	3
 28516  006F10  0101               	movlb	1	; () banked
 28517  006F12  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 28518  006F14  A4D8               	btfss	status,2,c
 28519  006F16  D011               	goto	l24765
 28520                           
 28521                           ; BSR set to: 1
 28522  006F18  0100               	movlb	0	; () banked
 28523  006F1A  51A0               	movf	(_var_sys_NVM+8)& (0+255),w,b	;volatile
 28524  006F1C  A4D8               	btfss	status,2,c
 28525  006F1E  D00D               	goto	l24765
 28526                           
 28527                           ; BSR set to: 0
 28528  006F20  0101               	movlb	1	; () banked
 28529  006F22  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 28530  006F24  D005               	goto	u30290
 28531  006F26  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 28532  006F28  E108               	bnz	l24765
 28533  006F2A  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 28534  006F2C  B0D8               	btfsc	status,0,c
 28535  006F2E  D005               	goto	l24765
 28536  006F30                     u30290:
 28537                           
 28538                           ; BSR set to: 1
 28539  006F30  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 28540  006F32  A4D8               	btfss	status,2,c
 28541  006F34  D002               	goto	l24765
 28542                           
 28543                           ; BSR set to: 1
 28544                           ;inputs_MC50.c: 706:             {;inputs_MC50.c: 707:                 var_sys.StateMoto
      +                          r = Stopped;
 28545  006F36  0E00               	movlw	0
 28546  006F38                     L102:
 28547  006F38  6F00               	movwf	_var_sys& (0+255),b	;volatile
 28548  006F3A                     l24765:
 28549                           
 28550                           ;inputs_MC50.c: 713:         if((var_sys_NVM.securityBandIsON == 1 || var_sys_NVM.Stopbo
      +                          ton == 1) && (var_sys.SecurityBarIsObstructed == YES && var_sys.AutoInversionActive == N
      +                          O))
 28551  006F3A  0100               	movlb	0	; () banked
 28552  006F3C  05A1               	decf	(_var_sys_NVM+9)& (0+255),w,b	;volatile
 28553  006F3E  B4D8               	btfsc	status,2,c
 28554  006F40  D003               	goto	u30320
 28555                           
 28556                           ; BSR set to: 0
 28557  006F42  05AE               	decf	(_var_sys_NVM+22)& (0+255),w,b	;volatile
 28558  006F44  A4D8               	btfss	status,2,c
 28559  006F46  0012               	return	
 28560  006F48                     u30320:
 28561                           
 28562                           ; BSR set to: 0
 28563  006F48  0101               	movlb	1	; () banked
 28564  006F4A  0502               	decf	(_var_sys+2)& (0+255),w,b	;volatile
 28565  006F4C  A4D8               	btfss	status,2,c
 28566  006F4E  0012               	return	
 28567                           
 28568                           ; BSR set to: 1
 28569  006F50  5127               	movf	(_var_sys+39)& (0+255),w,b	;volatile
 28570  006F52  A4D8               	btfss	status,2,c
 28571  006F54  0012               	return	
 28572                           
 28573                           ; BSR set to: 1
 28574                           ;inputs_MC50.c: 714:         {;inputs_MC50.c: 723:             if(var_sys.StateMotor == 
      +                          InClose && (var_sys_NVM.securityBandInOpen == 0))
 28575  006F56  0E03               	movlw	3
 28576  006F58  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 28577  006F5A  A4D8               	btfss	status,2,c
 28578  006F5C  D008               	goto	l24779
 28579                           
 28580                           ; BSR set to: 1
 28581  006F5E  0100               	movlb	0	; () banked
 28582  006F60  51A3               	movf	(_var_sys_NVM+11)& (0+255),w,b	;volatile
 28583  006F62  A4D8               	btfss	status,2,c
 28584  006F64  D004               	goto	l24779
 28585                           
 28586                           ; BSR set to: 0
 28587                           ;inputs_MC50.c: 724:             {;inputs_MC50.c: 725:                 var_sys.StateMoto
      +                          r = Stopped;
 28588  006F66  0E00               	movlw	0
 28589  006F68  0101               	movlb	1	; () banked
 28590  006F6A  6F00               	movwf	_var_sys& (0+255),b	;volatile
 28591                           
 28592                           ;inputs_MC50.c: 727:             }
 28593  006F6C  0012               	return	
 28594  006F6E                     l24779:
 28595  006F6E  0101               	movlb	1	; () banked
 28596  006F70  0500               	decf	_var_sys& (0+255),w,b	;volatile
 28597  006F72  B4D8               	btfsc	status,2,c
 28598  006F74  D004               	goto	u30380
 28599                           
 28600                           ; BSR set to: 1
 28601  006F76  0E02               	movlw	2
 28602  006F78  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 28603  006F7A  A4D8               	btfss	status,2,c
 28604  006F7C  D004               	goto	u30390
 28605  006F7E                     u30380:
 28606                           
 28607                           ; BSR set to: 1
 28608  006F7E  0100               	movlb	0	; () banked
 28609  006F80  05A3               	decf	(_var_sys_NVM+11)& (0+255),w,b	;volatile
 28610  006F82  B4D8               	btfsc	status,2,c
 28611  006F84  D004               	goto	u30400
 28612  006F86                     u30390:
 28613  006F86  0100               	movlb	0	; () banked
 28614  006F88  05AE               	decf	(_var_sys_NVM+22)& (0+255),w,b	;volatile
 28615  006F8A  A4D8               	btfss	status,2,c
 28616  006F8C  0012               	return	
 28617  006F8E                     u30400:
 28618                           
 28619                           ; BSR set to: 0
 28620                           ;inputs_MC50.c: 730:             {;inputs_MC50.c: 731:                 var_sys.StateMoto
      +                          r = Stopped;
 28621  006F8E  0E00               	movlw	0
 28622  006F90  0101               	movlb	1	; () banked
 28623  006F92  6F00               	movwf	_var_sys& (0+255),b	;volatile
 28624  006F94  0012               	return	
 28625  006F96                     __end_of_ControlInputs:
 28626                           	callstack 0
 28627                           
 28628 ;; *************** function _ControlCurrent *****************
 28629 ;; Defined at:
 28630 ;;		line 342 in file "controlCurrent_MC50.c"
 28631 ;; Parameters:    Size  Location     Type
 28632 ;;		None
 28633 ;; Auto vars:     Size  Location     Type
 28634 ;;		None
 28635 ;; Return value:  Size  Location     Type
 28636 ;;                  1    wreg      void 
 28637 ;; Registers used:
 28638 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28639 ;; Tracked objects:
 28640 ;;		On entry : 3E/1
 28641 ;;		On exit  : 3E/0
 28642 ;;		Unchanged: 0/0
 28643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28646 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28647 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28648 ;;Total ram usage:        4 bytes
 28649 ;; Hardware stack levels used: 1
 28650 ;; Hardware stack levels required when called: 6
 28651 ;; This function calls:
 28652 ;;		_GetMotorPower
 28653 ;;		_getCurrentComparator
 28654 ;;		_refreshADCZeroOffset
 28655 ;;		_refreshCurrent
 28656 ;; This function is called by:
 28657 ;;		_main
 28658 ;; This function uses a non-reentrant model
 28659 ;;
 28660                           
 28661                           	psect	text119
 28662  00682C                     __ptext119:
 28663                           	callstack 0
 28664  00682C                     _ControlCurrent:
 28665                           	callstack 24
 28666                           
 28667                           ;controlCurrent_MC50.c: 345:     refreshCurrent();
 28668                           
 28669                           ;incstack = 0
 28670  00682C  ECA0  F048         	call	_refreshCurrent	;wreg free
 28671                           
 28672                           ;controlCurrent_MC50.c: 351:     refreshADCZeroOffset();
 28673  006830  EC5E  F039         	call	_refreshADCZeroOffset	;wreg free
 28674                           
 28675                           ;controlCurrent_MC50.c: 354:     var_sys.velocityActual = GetMotorPower();
 28676  006834  EC20  F03C         	call	_GetMotorPower	;wreg free
 28677  006838  6E23               	movwf	??_ControlCurrent^0,c
 28678  00683A  5023               	movf	??_ControlCurrent^0,w,c
 28679  00683C  6F38               	movwf	(_var_sys+56)& (0+255),b	;volatile
 28680  00683E  6B39               	clrf	(_var_sys+57)& (0+255),b	;volatile
 28681                           
 28682                           ; BSR set to: 1
 28683                           ;controlCurrent_MC50.c: 355:     var_sys.ActualComparatorCurrent = getCurrentComparator(
      +                          );
 28684  006840  EC28  F030         	call	_getCurrentComparator	;wreg free
 28685  006844  C016  F134         	movff	?_getCurrentComparator,_var_sys+52	;volatile
 28686  006848  C017  F135         	movff	?_getCurrentComparator+1,_var_sys+53	;volatile
 28687  00684C  C018  F136         	movff	?_getCurrentComparator+2,_var_sys+54	;volatile
 28688  006850  C019  F137         	movff	?_getCurrentComparator+3,_var_sys+55	;volatile
 28689                           
 28690                           ; BSR set to: 1
 28691                           ;controlCurrent_MC50.c: 357:     if(var_sys.StateMotor == Stopped)
 28692  006854  5100               	movf	_var_sys& (0+255),w,b	;volatile
 28693  006856  A4D8               	btfss	status,2,c
 28694  006858  D00F               	goto	l24435
 28695                           
 28696                           ; BSR set to: 1
 28697                           ;controlCurrent_MC50.c: 358:     {;controlCurrent_MC50.c: 360:         numberOfErrorCurr
      +                          ent=0;
 28698  00685A  0E00               	movlw	0
 28699  00685C  0100               	movlb	0	; () banked
 28700  00685E  6F8E               	movwf	_numberOfErrorCurrent& (0+255),b	;volatile
 28701                           
 28702                           ;controlCurrent_MC50.c: 361:         var_sys.CurrentAlarmIsOn=NO;
 28703  006860  0E00               	movlw	0
 28704  006862  0101               	movlb	1	; () banked
 28705  006864  6F41               	movwf	(_var_sys+65)& (0+255),b	;volatile
 28706                           
 28707                           ;controlCurrent_MC50.c: 362:         var_sys.InvertionCurrentOpening=NO;
 28708  006866  0E00               	movlw	0
 28709  006868  6F45               	movwf	(_var_sys+69)& (0+255),b	;volatile
 28710                           
 28711                           ;controlCurrent_MC50.c: 363:         var_sys.InvertionCurrentClosing=NO;
 28712  00686A  0E00               	movlw	0
 28713  00686C  6F44               	movwf	(_var_sys+68)& (0+255),b	;volatile
 28714                           
 28715                           ;controlCurrent_MC50.c: 364:         ts_system.TimeTransitionDecelaration=(1000/50);
 28716  00686E  0E00               	movlw	0
 28717  006870  6FD8               	movwf	(_ts_system+57)& (0+255),b	;volatile
 28718  006872  0E14               	movlw	20
 28719  006874  6FD7               	movwf	(_ts_system+56)& (0+255),b	;volatile
 28720                           
 28721                           ;controlCurrent_MC50.c: 365:     }
 28722  006876  0012               	return	
 28723  006878                     l24435:
 28724                           
 28725                           ; BSR set to: 1
 28726  006878  517B               	movf	_powerControl_st& (0+255),w,b
 28727  00687A  A4D8               	btfss	status,2,c
 28728  00687C  D05D               	goto	l24469
 28729                           
 28730                           ; BSR set to: 1
 28731                           ;controlCurrent_MC50.c: 368:     {;controlCurrent_MC50.c: 376:         ts_system.TimeTra
      +                          nsitionDecelaration=(1000/50);
 28732  00687E  0E00               	movlw	0
 28733  006880  6FD8               	movwf	(_ts_system+57)& (0+255),b	;volatile
 28734  006882  0E14               	movlw	20
 28735  006884  6FD7               	movwf	(_ts_system+56)& (0+255),b	;volatile
 28736                           
 28737                           ; BSR set to: 1
 28738                           ;controlCurrent_MC50.c: 377:         if (( var_sys.ActualCurrent>var_sys.ActualComparato
      +                          rCurrent ) && (ts_system.TimeChargeCondesador<=0)&&var_sys_NVM.motorSensitivity!=0 && ts
      +                          _system.TimeReleCapacitor<=0)
 28739  006886  512E               	movf	(_var_sys+46)& (0+255),w,b	;volatile
 28740  006888  6E23               	movwf	??_ControlCurrent^0,c
 28741  00688A  512F               	movf	(_var_sys+47)& (0+255),w,b	;volatile
 28742  00688C  6E24               	movwf	(??_ControlCurrent+1)^0,c
 28743  00688E  6A25               	clrf	(??_ControlCurrent+2)^0,c
 28744  006890  6A26               	clrf	(??_ControlCurrent+3)^0,c
 28745  006892  5023               	movf	??_ControlCurrent^0,w,c
 28746  006894  5D34               	subwf	(_var_sys+52)& (0+255),w,b	;volatile
 28747  006896  5024               	movf	(??_ControlCurrent+1)^0,w,c
 28748  006898  5935               	subwfb	(_var_sys+53)& (0+255),w,b	;volatile
 28749  00689A  5025               	movf	(??_ControlCurrent+2)^0,w,c
 28750  00689C  5936               	subwfb	(_var_sys+54)& (0+255),w,b	;volatile
 28751  00689E  5026               	movf	(??_ControlCurrent+3)^0,w,c
 28752  0068A0  5937               	subwfb	(_var_sys+55)& (0+255),w,b	;volatile
 28753  0068A2  B0D8               	btfsc	status,0,c
 28754  0068A4  D03E               	goto	l24467
 28755                           
 28756                           ; BSR set to: 1
 28757  0068A6  BFBA               	btfsc	(_ts_system+27)& (0+255),7,b	;volatile
 28758  0068A8  D005               	goto	u29450
 28759  0068AA  51BA               	movf	(_ts_system+27)& (0+255),w,b	;volatile
 28760  0068AC  E13A               	bnz	l24467
 28761  0068AE  05B9               	decf	(_ts_system+26)& (0+255),w,b	;volatile
 28762  0068B0  B0D8               	btfsc	status,0,c
 28763  0068B2  D037               	goto	l24467
 28764  0068B4                     u29450:
 28765                           
 28766                           ; BSR set to: 1
 28767  0068B4  0100               	movlb	0	; () banked
 28768  0068B6  519B               	movf	(_var_sys_NVM+3)& (0+255),w,b	;volatile
 28769  0068B8  B4D8               	btfsc	status,2,c
 28770  0068BA  D033               	goto	l24467
 28771                           
 28772                           ; BSR set to: 0
 28773  0068BC  0101               	movlb	1	; () banked
 28774  0068BE  BFE2               	btfsc	(_ts_system+67)& (0+255),7,b	;volatile
 28775  0068C0  D005               	goto	u29470
 28776  0068C2  51E2               	movf	(_ts_system+67)& (0+255),w,b	;volatile
 28777  0068C4  E12E               	bnz	l24467
 28778  0068C6  05E1               	decf	(_ts_system+66)& (0+255),w,b	;volatile
 28779  0068C8  B0D8               	btfsc	status,0,c
 28780  0068CA  D02B               	goto	l24467
 28781  0068CC                     u29470:
 28782                           
 28783                           ; BSR set to: 1
 28784                           ;controlCurrent_MC50.c: 378:         {;controlCurrent_MC50.c: 379:              if (numb
      +                          erOfErrorCurrent >=1)
 28785  0068CC  0100               	movlb	0	; () banked
 28786  0068CE  518E               	movf	_numberOfErrorCurrent& (0+255),w,b	;volatile
 28787  0068D0  B4D8               	btfsc	status,2,c
 28788  0068D2  D00B               	goto	l24453
 28789                           
 28790                           ; BSR set to: 0
 28791                           ;controlCurrent_MC50.c: 380:              {;controlCurrent_MC50.c: 381:                 
      +                           if(erroranterior > var_sys.ActualCurrent )
 28792  0068D4  0101               	movlb	1	; () banked
 28793  0068D6  518D               	movf	_erroranterior& (0+255),w,b	;volatile
 28794  0068D8  5D2E               	subwf	(_var_sys+46)& (0+255),w,b	;volatile
 28795  0068DA  518E               	movf	(_erroranterior+1)& (0+255),w,b	;volatile
 28796  0068DC  592F               	subwfb	(_var_sys+47)& (0+255),w,b	;volatile
 28797  0068DE  B0D8               	btfsc	status,0,c
 28798  0068E0  D004               	goto	l24453
 28799                           
 28800                           ; BSR set to: 1
 28801                           ;controlCurrent_MC50.c: 382:                  {;controlCurrent_MC50.c: 383:             
      +                                 numberOfErrorCurrent = 0;
 28802  0068E2  0E00               	movlw	0
 28803  0068E4  0100               	movlb	0	; () banked
 28804  0068E6  6F8E               	movwf	_numberOfErrorCurrent& (0+255),b	;volatile
 28805                           
 28806                           ;controlCurrent_MC50.c: 384:                  }
 28807  0068E8  D002               	goto	l24455
 28808  0068EA                     l24453:
 28809                           
 28810                           ;controlCurrent_MC50.c: 386:                  {;controlCurrent_MC50.c: 387:             
      +                                 numberOfErrorCurrent++;
 28811  0068EA  0100               	movlb	0	; () banked
 28812  0068EC  2B8E               	incf	_numberOfErrorCurrent& (0+255),f,b	;volatile
 28813  0068EE                     l24455:
 28814                           
 28815                           ; BSR set to: 0
 28816                           ;controlCurrent_MC50.c: 389:                  erroranterior = var_sys.ActualCurrent;
 28817  0068EE  C12E  F18D         	movff	_var_sys+46,_erroranterior	;volatile
 28818  0068F2  C12F  F18E         	movff	_var_sys+47,_erroranterior+1	;volatile
 28819                           
 28820                           ; BSR set to: 0
 28821                           ;controlCurrent_MC50.c: 398:             if(ts_system.TimeCurrentWaitForAlarm<=0&&number
      +                          OfErrorCurrent>1)
 28822                           
 28823                           ;controlCurrent_MC50.c: 390:              }
 28824  0068F6  0101               	movlb	1	; () banked
 28825  0068F8  BFCE               	btfsc	(_ts_system+47)& (0+255),7,b	;volatile
 28826  0068FA  D005               	goto	u29500
 28827  0068FC  51CE               	movf	(_ts_system+47)& (0+255),w,b	;volatile
 28828  0068FE  E14F               	bnz	l1405
 28829  006900  05CD               	decf	(_ts_system+46)& (0+255),w,b	;volatile
 28830  006902  B0D8               	btfsc	status,0,c
 28831  006904  0012               	return	
 28832  006906                     u29500:
 28833                           
 28834                           ; BSR set to: 1
 28835  006906  0E01               	movlw	1
 28836  006908  0100               	movlb	0	; () banked
 28837  00690A  658E               	cpfsgt	_numberOfErrorCurrent& (0+255),b	;volatile
 28838  00690C  0012               	return	
 28839                           
 28840                           ; BSR set to: 0
 28841                           ;controlCurrent_MC50.c: 399:             {;controlCurrent_MC50.c: 400:                 v
      +                          ar_sys.StateMotor = Stopped;
 28842  00690E  0E00               	movlw	0
 28843  006910  0101               	movlb	1	; () banked
 28844  006912  6F00               	movwf	_var_sys& (0+255),b	;volatile
 28845                           
 28846                           ;controlCurrent_MC50.c: 401:                 ts_system.TimeCurrentAlarm= (1000/50)*10;
 28847  006914  0E00               	movlw	0
 28848  006916  6FCA               	movwf	(_ts_system+43)& (0+255),b	;volatile
 28849  006918  0EC8               	movlw	200
 28850  00691A  6FC9               	movwf	(_ts_system+42)& (0+255),b	;volatile
 28851                           
 28852                           ;controlCurrent_MC50.c: 402:                 var_sys.CurrentAlarmIsOn=YES;
 28853  00691C  0E01               	movlw	1
 28854  00691E  6F41               	movwf	(_var_sys+65)& (0+255),b	;volatile
 28855  006920  0012               	return	
 28856  006922                     l24467:
 28857                           
 28858                           ;controlCurrent_MC50.c: 409:         {;controlCurrent_MC50.c: 410:             numberOfE
      +                          rrorCurrent=0;
 28859  006922  0E00               	movlw	0
 28860  006924  0100               	movlb	0	; () banked
 28861  006926  6F8E               	movwf	_numberOfErrorCurrent& (0+255),b	;volatile
 28862                           
 28863                           ;controlCurrent_MC50.c: 411:             var_sys.CurrentAlarmIsOn=NO;
 28864  006928  0E00               	movlw	0
 28865  00692A  0101               	movlb	1	; () banked
 28866  00692C  6F41               	movwf	(_var_sys+65)& (0+255),b	;volatile
 28867                           
 28868                           ;controlCurrent_MC50.c: 412:             var_sys.InvertionCurrentOpening=NO;
 28869  00692E  0E00               	movlw	0
 28870  006930  6F45               	movwf	(_var_sys+69)& (0+255),b	;volatile
 28871                           
 28872                           ;controlCurrent_MC50.c: 413:             var_sys.InvertionCurrentClosing=NO;
 28873  006932  0E00               	movlw	0
 28874  006934  6F44               	movwf	(_var_sys+68)& (0+255),b	;volatile
 28875  006936  0012               	return	
 28876  006938                     l24469:
 28877                           
 28878                           ; BSR set to: 1
 28879                           ;controlCurrent_MC50.c: 419:     {;controlCurrent_MC50.c: 420:         if( ( var_sys.Act
      +                          ualHistCurrent<var_sys.ActualComparatorCurrent ) && (ts_system.TimeChargeCondesador<=0)&
      +                          &ts_system.TimeTransitionDecelaration<=0&&var_sys_NVM.decelarationSensivity!=0)
 28880  006938  5134               	movf	(_var_sys+52)& (0+255),w,b	;volatile
 28881  00693A  5D30               	subwf	(_var_sys+48)& (0+255),w,b	;volatile
 28882  00693C  5135               	movf	(_var_sys+53)& (0+255),w,b	;volatile
 28883  00693E  5931               	subwfb	(_var_sys+49)& (0+255),w,b	;volatile
 28884  006940  5136               	movf	(_var_sys+54)& (0+255),w,b	;volatile
 28885  006942  5932               	subwfb	(_var_sys+50)& (0+255),w,b	;volatile
 28886  006944  5137               	movf	(_var_sys+55)& (0+255),w,b	;volatile
 28887  006946  5933               	subwfb	(_var_sys+51)& (0+255),w,b	;volatile
 28888  006948  B0D8               	btfsc	status,0,c
 28889  00694A  D7EB               	goto	l24467
 28890                           
 28891                           ; BSR set to: 1
 28892  00694C  BFBA               	btfsc	(_ts_system+27)& (0+255),7,b	;volatile
 28893  00694E  D005               	goto	u29530
 28894  006950  51BA               	movf	(_ts_system+27)& (0+255),w,b	;volatile
 28895  006952  E1E7               	bnz	l24467
 28896  006954  05B9               	decf	(_ts_system+26)& (0+255),w,b	;volatile
 28897  006956  B0D8               	btfsc	status,0,c
 28898  006958  D7E4               	goto	l24467
 28899  00695A                     u29530:
 28900                           
 28901                           ; BSR set to: 1
 28902  00695A  BFD8               	btfsc	(_ts_system+57)& (0+255),7,b	;volatile
 28903  00695C  D005               	goto	u29540
 28904  00695E  51D8               	movf	(_ts_system+57)& (0+255),w,b	;volatile
 28905  006960  E1E0               	bnz	l24467
 28906  006962  05D7               	decf	(_ts_system+56)& (0+255),w,b	;volatile
 28907  006964  B0D8               	btfsc	status,0,c
 28908  006966  D7DD               	goto	l24467
 28909  006968                     u29540:
 28910                           
 28911                           ; BSR set to: 1
 28912  006968  0100               	movlb	0	; () banked
 28913  00696A  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
 28914  00696C  B4D8               	btfsc	status,2,c
 28915  00696E  D7D9               	goto	l24467
 28916                           
 28917                           ; BSR set to: 0
 28918                           ;controlCurrent_MC50.c: 421:         {;controlCurrent_MC50.c: 423:             numberOfE
      +                          rrorCurrent++;
 28919  006970  2B8E               	incf	_numberOfErrorCurrent& (0+255),f,b	;volatile
 28920                           
 28921                           ; BSR set to: 0
 28922                           ;controlCurrent_MC50.c: 424:             if(ts_system.TimeCurrentWaitForAlarm<=0&&number
      +                          OfErrorCurrent>2)
 28923  006972  0101               	movlb	1	; () banked
 28924  006974  BFCE               	btfsc	(_ts_system+47)& (0+255),7,b	;volatile
 28925  006976  D005               	goto	u29560
 28926  006978  51CE               	movf	(_ts_system+47)& (0+255),w,b	;volatile
 28927  00697A  E111               	bnz	l1405
 28928  00697C  05CD               	decf	(_ts_system+46)& (0+255),w,b	;volatile
 28929  00697E  B0D8               	btfsc	status,0,c
 28930  006980  0012               	return	
 28931  006982                     u29560:
 28932                           
 28933                           ; BSR set to: 1
 28934  006982  0E02               	movlw	2
 28935  006984  0100               	movlb	0	; () banked
 28936  006986  658E               	cpfsgt	_numberOfErrorCurrent& (0+255),b	;volatile
 28937  006988  0012               	return	
 28938                           
 28939                           ; BSR set to: 0
 28940                           ;controlCurrent_MC50.c: 425:             {;controlCurrent_MC50.c: 426:                 v
      +                          ar_sys.StateMotor = Stopped;
 28941  00698A  0E00               	movlw	0
 28942  00698C  0101               	movlb	1	; () banked
 28943  00698E  6F00               	movwf	_var_sys& (0+255),b	;volatile
 28944                           
 28945                           ;controlCurrent_MC50.c: 427:                 ts_system.TimeCurrentAlarm= (1000/50)*10;
 28946  006990  0E00               	movlw	0
 28947  006992  6FCA               	movwf	(_ts_system+43)& (0+255),b	;volatile
 28948  006994  0EC8               	movlw	200
 28949  006996  6FC9               	movwf	(_ts_system+42)& (0+255),b	;volatile
 28950                           
 28951                           ;controlCurrent_MC50.c: 428:                 var_sys.CurrentAlarmIsOn=YES;
 28952  006998  0E01               	movlw	1
 28953  00699A  6F41               	movwf	(_var_sys+65)& (0+255),b	;volatile
 28954  00699C  0012               	return	
 28955  00699E                     l1405:
 28956  00699E  0012               	return		;funcret
 28957  0069A0                     __end_of_ControlCurrent:
 28958                           	callstack 0
 28959                           
 28960 ;; *************** function _refreshCurrent *****************
 28961 ;; Defined at:
 28962 ;;		line 233 in file "controlCurrent_MC50.c"
 28963 ;; Parameters:    Size  Location     Type
 28964 ;;		None
 28965 ;; Auto vars:     Size  Location     Type
 28966 ;;		None
 28967 ;; Return value:  Size  Location     Type
 28968 ;;                  1    wreg      void 
 28969 ;; Registers used:
 28970 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28971 ;; Tracked objects:
 28972 ;;		On entry : 3E/1
 28973 ;;		On exit  : 3F/0
 28974 ;;		Unchanged: 0/0
 28975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28979 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28980 ;;Total ram usage:        0 bytes
 28981 ;; Hardware stack levels used: 1
 28982 ;; Hardware stack levels required when called: 5
 28983 ;; This function calls:
 28984 ;;		_saveEnergyADCHist
 28985 ;;		_sumEnergyADC
 28986 ;;		_sumHIST
 28987 ;; This function is called by:
 28988 ;;		_ControlCurrent
 28989 ;; This function uses a non-reentrant model
 28990 ;;
 28991                           
 28992                           	psect	text120
 28993  009140                     __ptext120:
 28994                           	callstack 0
 28995  009140                     _refreshCurrent:
 28996                           	callstack 24
 28997                           
 28998                           ;controlCurrent_MC50.c: 238:     if ( (var_sys_NVM.electricBrake==1) && (ts_system.TimeE
      +                          lectricBrake>0) )
 28999                           
 29000                           ;incstack = 0
 29001  009140  0100               	movlb	0	; () banked
 29002  009142  05AF               	decf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 29003  009144  A4D8               	btfss	status,2,c
 29004  009146  D008               	goto	l22615
 29005                           
 29006                           ; BSR set to: 0
 29007  009148  0101               	movlb	1	; () banked
 29008  00914A  BFC8               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 29009  00914C  D005               	goto	l22615
 29010  00914E  51C8               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 29011  009150  E109               	bnz	l1372
 29012  009152  05C7               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 29013  009154  B0D8               	btfsc	status,0,c
 29014  009156  D006               	goto	l1372
 29015  009158                     l22615:
 29016                           
 29017                           ;controlCurrent_MC50.c: 243:     {;controlCurrent_MC50.c: 245:         var_sys.ActualCur
      +                          rent=sumEnergyADC();
 29018  009158  EC03  F040         	call	_sumEnergyADC	;wreg free
 29019  00915C  C010  F12E         	movff	?_sumEnergyADC,_var_sys+46	;volatile
 29020  009160  C011  F12F         	movff	?_sumEnergyADC+1,_var_sys+47	;volatile
 29021  009164                     l1372:
 29022                           
 29023                           ; BSR set to: 1
 29024                           ;controlCurrent_MC50.c: 248:     saveEnergyADCHist(var_sys.ActualCurrent);
 29025  009164  C12E  F010         	movff	_var_sys+46,saveEnergyADCHist@valueToSave	;volatile
 29026  009168  C12F  F011         	movff	_var_sys+47,saveEnergyADCHist@valueToSave+1	;volatile
 29027  00916C  ECC5  F04B         	call	_saveEnergyADCHist	;wreg free
 29028                           
 29029                           ;controlCurrent_MC50.c: 250:     var_sys.ActualHistCurrent=sumHIST();
 29030  009170  EC5B  F03A         	call	_sumHIST	;wreg free
 29031  009174  C010  F130         	movff	?_sumHIST,_var_sys+48	;volatile
 29032  009178  C011  F131         	movff	?_sumHIST+1,_var_sys+49	;volatile
 29033  00917C  C012  F132         	movff	?_sumHIST+2,_var_sys+50	;volatile
 29034  009180  C013  F133         	movff	?_sumHIST+3,_var_sys+51	;volatile
 29035                           
 29036                           ; BSR set to: 0
 29037  009184  0012               	return		;funcret
 29038  009186                     __end_of_refreshCurrent:
 29039                           	callstack 0
 29040                           
 29041 ;; *************** function _sumHIST *****************
 29042 ;; Defined at:
 29043 ;;		line 199 in file "controlCurrent_MC50.c"
 29044 ;; Parameters:    Size  Location     Type
 29045 ;;		None
 29046 ;; Auto vars:     Size  Location     Type
 29047 ;;  sumH            4   27[COMRAM] unsigned long 
 29048 ;;  min             2   25[COMRAM] unsigned int 
 29049 ;;  max             2   23[COMRAM] unsigned int 
 29050 ;;  i               1   31[COMRAM] unsigned char 
 29051 ;; Return value:  Size  Location     Type
 29052 ;;                  4   15[COMRAM] unsigned long 
 29053 ;; Registers used:
 29054 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 29055 ;; Tracked objects:
 29056 ;;		On entry : 3F/0
 29057 ;;		On exit  : 3F/0
 29058 ;;		Unchanged: 3F/0
 29059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29060 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29061 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29062 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29063 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29064 ;;Total ram usage:       17 bytes
 29065 ;; Hardware stack levels used: 1
 29066 ;; Hardware stack levels required when called: 4
 29067 ;; This function calls:
 29068 ;;		Nothing
 29069 ;; This function is called by:
 29070 ;;		_refreshCurrent
 29071 ;; This function uses a non-reentrant model
 29072 ;;
 29073                           
 29074                           	psect	text121
 29075  0074B6                     __ptext121:
 29076                           	callstack 0
 29077  0074B6                     _sumHIST:
 29078                           	callstack 24
 29079                           
 29080                           ; BSR set to: 0
 29081                           ;controlCurrent_MC50.c: 201:     unsigned char i;;controlCurrent_MC50.c: 202:     unsign
      +                          ed long sumH = 0;
 29082                           
 29083                           ; BSR set to: 0
 29084                           ;incstack = 0
 29085  0074B6  0E00               	movlw	0
 29086  0074B8  6E1C               	movwf	sumHIST@sumH^0,c
 29087  0074BA  0E00               	movlw	0
 29088  0074BC  6E1D               	movwf	(sumHIST@sumH+1)^0,c
 29089  0074BE  0E00               	movlw	0
 29090  0074C0  6E1E               	movwf	(sumHIST@sumH+2)^0,c
 29091  0074C2  0E00               	movlw	0
 29092  0074C4  6E1F               	movwf	(sumHIST@sumH+3)^0,c
 29093                           
 29094                           ;controlCurrent_MC50.c: 203:     unsigned int max=0;
 29095  0074C6  0E00               	movlw	0
 29096  0074C8  6E19               	movwf	(sumHIST@max+1)^0,c
 29097  0074CA  0E00               	movlw	0
 29098  0074CC  6E18               	movwf	sumHIST@max^0,c
 29099                           
 29100                           ; BSR set to: 0
 29101                           ;controlCurrent_MC50.c: 204:     unsigned int min=0xFFFF;
 29102  0074CE  681A               	setf	sumHIST@min^0,c
 29103  0074D0  681B               	setf	(sumHIST@min+1)^0,c
 29104                           
 29105                           ;controlCurrent_MC50.c: 207:     for( i = 0; i<(10); i++)
 29106  0074D2  0E00               	movlw	0
 29107  0074D4  6E20               	movwf	sumHIST@i^0,c
 29108  0074D6                     l21161:
 29109                           
 29110                           ; BSR set to: 0
 29111                           ;controlCurrent_MC50.c: 208:     {;controlCurrent_MC50.c: 209:         sumH=sumH+SumEner
      +                          gyADCHist_array[i];
 29112  0074D6  5020               	movf	sumHIST@i^0,w,c
 29113  0074D8  0D02               	mullw	2
 29114  0074DA  0E60               	movlw	low _SumEnergyADCHist_array
 29115  0074DC  24F3               	addwf	243,w,c
 29116  0074DE  6ED9               	movwf	fsr2l,c
 29117  0074E0  0E02               	movlw	high _SumEnergyADCHist_array
 29118  0074E2  20F4               	addwfc	prodh,w,c
 29119  0074E4  6EDA               	movwf	fsr2h,c
 29120  0074E6  CFDE F014          	movff	postinc2,??_sumHIST
 29121  0074EA  CFDD F015          	movff	postdec2,??_sumHIST+1
 29122  0074EE  5014               	movf	??_sumHIST^0,w,c
 29123  0074F0  241C               	addwf	sumHIST@sumH^0,w,c
 29124  0074F2  6E1C               	movwf	sumHIST@sumH^0,c
 29125  0074F4  5015               	movf	(??_sumHIST+1)^0,w,c
 29126  0074F6  201D               	addwfc	(sumHIST@sumH+1)^0,w,c
 29127  0074F8  6E1D               	movwf	(sumHIST@sumH+1)^0,c
 29128  0074FA  0E00               	movlw	0
 29129  0074FC  201E               	addwfc	(sumHIST@sumH+2)^0,w,c
 29130  0074FE  6E1E               	movwf	(sumHIST@sumH+2)^0,c
 29131  007500  0E00               	movlw	0
 29132  007502  201F               	addwfc	(sumHIST@sumH+3)^0,w,c
 29133  007504  6E1F               	movwf	(sumHIST@sumH+3)^0,c
 29134                           
 29135                           ;controlCurrent_MC50.c: 212:         if(SumEnergyADCHist_array[i]>max)
 29136  007506  5020               	movf	sumHIST@i^0,w,c
 29137  007508  0D02               	mullw	2
 29138  00750A  0E60               	movlw	low _SumEnergyADCHist_array
 29139  00750C  24F3               	addwf	243,w,c
 29140  00750E  6ED9               	movwf	fsr2l,c
 29141  007510  0E02               	movlw	high _SumEnergyADCHist_array
 29142  007512  20F4               	addwfc	prodh,w,c
 29143  007514  6EDA               	movwf	fsr2h,c
 29144  007516  50DE               	movf	postinc2,w,c
 29145  007518  5C18               	subwf	sumHIST@max^0,w,c
 29146  00751A  50DE               	movf	postinc2,w,c
 29147  00751C  5819               	subwfb	(sumHIST@max+1)^0,w,c
 29148  00751E  B0D8               	btfsc	status,0,c
 29149  007520  D00C               	goto	l1366
 29150                           
 29151                           ; BSR set to: 0
 29152                           ;controlCurrent_MC50.c: 213:         {;controlCurrent_MC50.c: 214:             max=SumEn
      +                          ergyADCHist_array[i];
 29153  007522  5020               	movf	sumHIST@i^0,w,c
 29154  007524  0D02               	mullw	2
 29155  007526  0E60               	movlw	low _SumEnergyADCHist_array
 29156  007528  24F3               	addwf	243,w,c
 29157  00752A  6ED9               	movwf	fsr2l,c
 29158  00752C  0E02               	movlw	high _SumEnergyADCHist_array
 29159  00752E  20F4               	addwfc	prodh,w,c
 29160  007530  6EDA               	movwf	fsr2h,c
 29161  007532  CFDE F018          	movff	postinc2,sumHIST@max
 29162  007536  CFDD F019          	movff	postdec2,sumHIST@max+1
 29163  00753A                     l1366:
 29164                           
 29165                           ; BSR set to: 0
 29166                           ;controlCurrent_MC50.c: 218:         if(SumEnergyADCHist_array[i]<min)
 29167  00753A  5020               	movf	sumHIST@i^0,w,c
 29168  00753C  0D02               	mullw	2
 29169  00753E  0E60               	movlw	low _SumEnergyADCHist_array
 29170  007540  24F3               	addwf	243,w,c
 29171  007542  6ED9               	movwf	fsr2l,c
 29172  007544  0E02               	movlw	high _SumEnergyADCHist_array
 29173  007546  20F4               	addwfc	prodh,w,c
 29174  007548  6EDA               	movwf	fsr2h,c
 29175  00754A  501A               	movf	sumHIST@min^0,w,c
 29176  00754C  5CDE               	subwf	postinc2,w,c
 29177  00754E  501B               	movf	(sumHIST@min+1)^0,w,c
 29178  007550  58DE               	subwfb	postinc2,w,c
 29179  007552  B0D8               	btfsc	status,0,c
 29180  007554  D00C               	goto	l21167
 29181                           
 29182                           ; BSR set to: 0
 29183                           ;controlCurrent_MC50.c: 219:         {;controlCurrent_MC50.c: 220:             min=SumEn
      +                          ergyADCHist_array[i];
 29184  007556  5020               	movf	sumHIST@i^0,w,c
 29185  007558  0D02               	mullw	2
 29186  00755A  0E60               	movlw	low _SumEnergyADCHist_array
 29187  00755C  24F3               	addwf	243,w,c
 29188  00755E  6ED9               	movwf	fsr2l,c
 29189  007560  0E02               	movlw	high _SumEnergyADCHist_array
 29190  007562  20F4               	addwfc	prodh,w,c
 29191  007564  6EDA               	movwf	fsr2h,c
 29192  007566  CFDE F01A          	movff	postinc2,sumHIST@min
 29193  00756A  CFDD F01B          	movff	postdec2,sumHIST@min+1
 29194  00756E                     l21167:
 29195                           
 29196                           ; BSR set to: 0
 29197                           ;controlCurrent_MC50.c: 222:     }
 29198  00756E  2A20               	incf	sumHIST@i^0,f,c
 29199                           
 29200                           ; BSR set to: 0
 29201  007570  0E09               	movlw	9
 29202  007572  6420               	cpfsgt	sumHIST@i^0,c
 29203  007574  D7B0               	goto	l21161
 29204                           
 29205                           ; BSR set to: 0
 29206                           ;controlCurrent_MC50.c: 224:     sumH = sumH - ( max+min );
 29207  007576  501A               	movf	sumHIST@min^0,w,c
 29208  007578  2418               	addwf	sumHIST@max^0,w,c
 29209  00757A  6E14               	movwf	??_sumHIST^0,c
 29210  00757C  501B               	movf	(sumHIST@min+1)^0,w,c
 29211  00757E  2019               	addwfc	(sumHIST@max+1)^0,w,c
 29212  007580  6E15               	movwf	(??_sumHIST+1)^0,c
 29213  007582  6A16               	clrf	(??_sumHIST+2)^0,c
 29214  007584  6A17               	clrf	(??_sumHIST+3)^0,c
 29215  007586  5014               	movf	??_sumHIST^0,w,c
 29216  007588  5C1C               	subwf	sumHIST@sumH^0,w,c
 29217  00758A  6E1C               	movwf	sumHIST@sumH^0,c
 29218  00758C  5015               	movf	(??_sumHIST+1)^0,w,c
 29219  00758E  581D               	subwfb	(sumHIST@sumH+1)^0,w,c
 29220  007590  6E1D               	movwf	(sumHIST@sumH+1)^0,c
 29221  007592  5016               	movf	(??_sumHIST+2)^0,w,c
 29222  007594  581E               	subwfb	(sumHIST@sumH+2)^0,w,c
 29223  007596  6E1E               	movwf	(sumHIST@sumH+2)^0,c
 29224  007598  5017               	movf	(??_sumHIST+3)^0,w,c
 29225  00759A  581F               	subwfb	(sumHIST@sumH+3)^0,w,c
 29226  00759C  6E1F               	movwf	(sumHIST@sumH+3)^0,c
 29227                           
 29228                           ; BSR set to: 0
 29229                           ;controlCurrent_MC50.c: 226:     return sumH;
 29230  00759E  C01C  F010         	movff	sumHIST@sumH,?_sumHIST
 29231  0075A2  C01D  F011         	movff	sumHIST@sumH+1,?_sumHIST+1
 29232  0075A6  C01E  F012         	movff	sumHIST@sumH+2,?_sumHIST+2
 29233  0075AA  C01F  F013         	movff	sumHIST@sumH+3,?_sumHIST+3
 29234                           
 29235                           ; BSR set to: 0
 29236  0075AE  0012               	return		;funcret
 29237  0075B0                     __end_of_sumHIST:
 29238                           	callstack 0
 29239                           
 29240 ;; *************** function _sumEnergyADC *****************
 29241 ;; Defined at:
 29242 ;;		line 59 in file "controlCurrent_MC50.c"
 29243 ;; Parameters:    Size  Location     Type
 29244 ;;		None
 29245 ;; Auto vars:     Size  Location     Type
 29246 ;;  auxValue        2   21[COMRAM] unsigned int 
 29247 ;;  sumE            2   19[COMRAM] unsigned int 
 29248 ;;  i               1   23[COMRAM] unsigned char 
 29249 ;; Return value:  Size  Location     Type
 29250 ;;                  2   15[COMRAM] unsigned int 
 29251 ;; Registers used:
 29252 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 29253 ;; Tracked objects:
 29254 ;;		On entry : 3E/0
 29255 ;;		On exit  : 3F/1
 29256 ;;		Unchanged: 0/0
 29257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29258 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29259 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29260 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29261 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29262 ;;Total ram usage:        9 bytes
 29263 ;; Hardware stack levels used: 1
 29264 ;; Hardware stack levels required when called: 4
 29265 ;; This function calls:
 29266 ;;		Nothing
 29267 ;; This function is called by:
 29268 ;;		_refreshCurrent
 29269 ;; This function uses a non-reentrant model
 29270 ;;
 29271                           
 29272                           	psect	text122
 29273  008006                     __ptext122:
 29274                           	callstack 0
 29275  008006                     _sumEnergyADC:
 29276                           	callstack 24
 29277                           
 29278                           ;controlCurrent_MC50.c: 61:     unsigned char i;;controlCurrent_MC50.c: 63:     unsigned
      +                           int sumE = 0;
 29279                           
 29280                           ; BSR set to: 0
 29281                           ;incstack = 0
 29282  008006  0E00               	movlw	0
 29283  008008  6E15               	movwf	(sumEnergyADC@sumE+1)^0,c
 29284  00800A  0E00               	movlw	0
 29285  00800C  6E14               	movwf	sumEnergyADC@sumE^0,c
 29286                           
 29287                           ;controlCurrent_MC50.c: 72:     for ( i=0 ; i<(30) ; i++ )
 29288  00800E  0E00               	movlw	0
 29289  008010  6E18               	movwf	sumEnergyADC@i^0,c
 29290  008012                     l21133:
 29291                           
 29292                           ;controlCurrent_MC50.c: 73:     {;controlCurrent_MC50.c: 83:         if ( ADC_array[i] >
      +                           var_sys.ADCZeroOffset )
 29293  008012  5018               	movf	sumEnergyADC@i^0,w,c
 29294  008014  0D02               	mullw	2
 29295  008016  0E00               	movlw	low _ADC_array
 29296  008018  24F3               	addwf	243,w,c
 29297  00801A  6ED9               	movwf	fsr2l,c
 29298  00801C  0E02               	movlw	high _ADC_array
 29299  00801E  20F4               	addwfc	prodh,w,c
 29300  008020  6EDA               	movwf	fsr2h,c
 29301  008022  50DE               	movf	postinc2,w,c
 29302  008024  0101               	movlb	1	; () banked
 29303  008026  5D4B               	subwf	(_var_sys+75)& (0+255),w,b	;volatile
 29304  008028  50DE               	movf	postinc2,w,c
 29305  00802A  594C               	subwfb	(_var_sys+76)& (0+255),w,b	;volatile
 29306  00802C  B0D8               	btfsc	status,0,c
 29307  00802E  D012               	goto	l21137
 29308                           
 29309                           ; BSR set to: 1
 29310                           ;controlCurrent_MC50.c: 84:         {;controlCurrent_MC50.c: 85:             auxValue = 
      +                          ( ADC_array[i] - var_sys.ADCZeroOffset );
 29311  008030  5018               	movf	sumEnergyADC@i^0,w,c
 29312  008032  0D02               	mullw	2
 29313  008034  0E00               	movlw	low _ADC_array
 29314  008036  24F3               	addwf	243,w,c
 29315  008038  6ED9               	movwf	fsr2l,c
 29316  00803A  0E02               	movlw	high _ADC_array
 29317  00803C  20F4               	addwfc	prodh,w,c
 29318  00803E  6EDA               	movwf	fsr2h,c
 29319  008040  CFDE F012          	movff	postinc2,??_sumEnergyADC
 29320  008044  CFDD F013          	movff	postdec2,??_sumEnergyADC+1
 29321  008048  514B               	movf	(_var_sys+75)& (0+255),w,b	;volatile
 29322  00804A  5C12               	subwf	??_sumEnergyADC^0,w,c
 29323  00804C  6E16               	movwf	sumEnergyADC@auxValue^0,c
 29324  00804E  514C               	movf	(_var_sys+76)& (0+255),w,b	;volatile
 29325  008050  5813               	subwfb	(??_sumEnergyADC+1)^0,w,c
 29326  008052  D011               	goto	L103
 29327  008054                     l21137:
 29328                           
 29329                           ; BSR set to: 1
 29330                           ;controlCurrent_MC50.c: 88:         {;controlCurrent_MC50.c: 89:            auxValue = (
      +                           var_sys.ADCZeroOffset - ADC_array[i] );
 29331  008054  5018               	movf	sumEnergyADC@i^0,w,c
 29332  008056  0D02               	mullw	2
 29333  008058  0E00               	movlw	low _ADC_array
 29334  00805A  24F3               	addwf	243,w,c
 29335  00805C  6ED9               	movwf	fsr2l,c
 29336  00805E  0E02               	movlw	high _ADC_array
 29337  008060  20F4               	addwfc	prodh,w,c
 29338  008062  6EDA               	movwf	fsr2h,c
 29339  008064  CFDE F012          	movff	postinc2,??_sumEnergyADC
 29340  008068  CFDD F013          	movff	postdec2,??_sumEnergyADC+1
 29341  00806C  5012               	movf	??_sumEnergyADC^0,w,c
 29342  00806E  5D4B               	subwf	(_var_sys+75)& (0+255),w,b	;volatile
 29343  008070  6E16               	movwf	sumEnergyADC@auxValue^0,c
 29344  008072  5013               	movf	(??_sumEnergyADC+1)^0,w,c
 29345  008074  594C               	subwfb	(_var_sys+76)& (0+255),w,b	;volatile
 29346  008076                     L103:
 29347  008076  6E17               	movwf	(sumEnergyADC@auxValue+1)^0,c
 29348                           
 29349                           ; BSR set to: 1
 29350                           ;controlCurrent_MC50.c: 91:         sumE += auxValue;
 29351  008078  5016               	movf	sumEnergyADC@auxValue^0,w,c
 29352  00807A  2614               	addwf	sumEnergyADC@sumE^0,f,c
 29353  00807C  5017               	movf	(sumEnergyADC@auxValue+1)^0,w,c
 29354  00807E  2215               	addwfc	(sumEnergyADC@sumE+1)^0,f,c
 29355                           
 29356                           ; BSR set to: 1
 29357                           ;controlCurrent_MC50.c: 94:     }
 29358  008080  2A18               	incf	sumEnergyADC@i^0,f,c
 29359                           
 29360                           ; BSR set to: 1
 29361  008082  0E1D               	movlw	29
 29362  008084  6418               	cpfsgt	sumEnergyADC@i^0,c
 29363  008086  D7C5               	goto	l21133
 29364                           
 29365                           ; BSR set to: 1
 29366                           ;controlCurrent_MC50.c: 96:     return sumE;
 29367  008088  C014  F010         	movff	sumEnergyADC@sumE,?_sumEnergyADC
 29368  00808C  C015  F011         	movff	sumEnergyADC@sumE+1,?_sumEnergyADC+1
 29369                           
 29370                           ; BSR set to: 1
 29371  008090  0012               	return		;funcret
 29372  008092                     __end_of_sumEnergyADC:
 29373                           	callstack 0
 29374                           
 29375 ;; *************** function _saveEnergyADCHist *****************
 29376 ;; Defined at:
 29377 ;;		line 182 in file "controlCurrent_MC50.c"
 29378 ;; Parameters:    Size  Location     Type
 29379 ;;  valueToSave     2   15[COMRAM] unsigned int 
 29380 ;; Auto vars:     Size  Location     Type
 29381 ;;		None
 29382 ;; Return value:  Size  Location     Type
 29383 ;;                  1    wreg      void 
 29384 ;; Registers used:
 29385 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 29386 ;; Tracked objects:
 29387 ;;		On entry : 3F/1
 29388 ;;		On exit  : 3F/0
 29389 ;;		Unchanged: 0/0
 29390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29391 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29394 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29395 ;;Total ram usage:        2 bytes
 29396 ;; Hardware stack levels used: 1
 29397 ;; Hardware stack levels required when called: 4
 29398 ;; This function calls:
 29399 ;;		Nothing
 29400 ;; This function is called by:
 29401 ;;		_refreshCurrent
 29402 ;; This function uses a non-reentrant model
 29403 ;;
 29404                           
 29405                           	psect	text123
 29406  00978A                     __ptext123:
 29407                           	callstack 0
 29408  00978A                     _saveEnergyADCHist:
 29409                           	callstack 24
 29410                           
 29411                           ; BSR set to: 1
 29412                           ;controlCurrent_MC50.c: 182: void saveEnergyADCHist(unsigned int valueToSave);controlCur
      +                          rent_MC50.c: 183: {;controlCurrent_MC50.c: 184:     if(idxSaveEnergyADCHist>=10)
 29413                           
 29414                           ; BSR set to: 1
 29415                           ;incstack = 0
 29416  00978A  0E09               	movlw	9
 29417  00978C  0100               	movlb	0	; () banked
 29418  00978E  6590               	cpfsgt	_idxSaveEnergyADCHist& (0+255),b	;volatile
 29419  009790  D002               	goto	l21149
 29420                           
 29421                           ; BSR set to: 0
 29422                           ;controlCurrent_MC50.c: 185:     {;controlCurrent_MC50.c: 186:         idxSaveEnergyADCH
      +                          ist=0;
 29423  009792  0E00               	movlw	0
 29424  009794  6F90               	movwf	_idxSaveEnergyADCHist& (0+255),b	;volatile
 29425  009796                     l21149:
 29426                           
 29427                           ; BSR set to: 0
 29428                           ;controlCurrent_MC50.c: 189:     SumEnergyADCHist_array[idxSaveEnergyADCHist]=valueToSav
      +                          e;
 29429  009796  5190               	movf	_idxSaveEnergyADCHist& (0+255),w,b	;volatile
 29430  009798  0D02               	mullw	2
 29431  00979A  0E60               	movlw	low _SumEnergyADCHist_array
 29432  00979C  24F3               	addwf	243,w,c
 29433  00979E  6ED9               	movwf	fsr2l,c
 29434  0097A0  0E02               	movlw	high _SumEnergyADCHist_array
 29435  0097A2  20F4               	addwfc	prodh,w,c
 29436  0097A4  6EDA               	movwf	fsr2h,c
 29437  0097A6  C010  FFDE         	movff	saveEnergyADCHist@valueToSave,postinc2
 29438  0097AA  C011  FFDD         	movff	saveEnergyADCHist@valueToSave+1,postdec2
 29439                           
 29440                           ; BSR set to: 0
 29441                           ;controlCurrent_MC50.c: 190:     idxSaveEnergyADCHist++;
 29442  0097AE  2B90               	incf	_idxSaveEnergyADCHist& (0+255),f,b	;volatile
 29443                           
 29444                           ; BSR set to: 0
 29445  0097B0  0012               	return		;funcret
 29446  0097B2                     __end_of_saveEnergyADCHist:
 29447                           	callstack 0
 29448                           
 29449 ;; *************** function _refreshADCZeroOffset *****************
 29450 ;; Defined at:
 29451 ;;		line 103 in file "controlCurrent_MC50.c"
 29452 ;; Parameters:    Size  Location     Type
 29453 ;;		None
 29454 ;; Auto vars:     Size  Location     Type
 29455 ;;  media           2   23[COMRAM] unsigned int 
 29456 ;;  i               1   22[COMRAM] unsigned char 
 29457 ;; Return value:  Size  Location     Type
 29458 ;;                  1    wreg      void 
 29459 ;; Registers used:
 29460 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29461 ;; Tracked objects:
 29462 ;;		On entry : 3F/0
 29463 ;;		On exit  : 3C/0
 29464 ;;		Unchanged: 0/0
 29465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29467 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29469 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29470 ;;Total ram usage:        3 bytes
 29471 ;; Hardware stack levels used: 1
 29472 ;; Hardware stack levels required when called: 5
 29473 ;; This function calls:
 29474 ;;		___lwdiv
 29475 ;; This function is called by:
 29476 ;;		_ControlCurrent
 29477 ;; This function uses a non-reentrant model
 29478 ;;
 29479                           
 29480                           	psect	text124
 29481  0072BC                     __ptext124:
 29482                           	callstack 0
 29483  0072BC                     _refreshADCZeroOffset:
 29484                           	callstack 24
 29485                           
 29486                           ; BSR set to: 0
 29487                           ;controlCurrent_MC50.c: 105:     unsigned char i;;controlCurrent_MC50.c: 106:     unsign
      +                          ed int media = 0;
 29488                           
 29489                           ; BSR set to: 0
 29490                           ;incstack = 0
 29491  0072BC  0E00               	movlw	0
 29492  0072BE  6E19               	movwf	(refreshADCZeroOffset@media+1)^0,c
 29493  0072C0  0E00               	movlw	0
 29494  0072C2  6E18               	movwf	refreshADCZeroOffset@media^0,c
 29495                           
 29496                           ;controlCurrent_MC50.c: 109:     if ( var_sys.StateMotor == Stopped )
 29497  0072C4  0101               	movlb	1	; () banked
 29498  0072C6  5100               	movf	_var_sys& (0+255),w,b	;volatile
 29499  0072C8  A4D8               	btfss	status,2,c
 29500  0072CA  0012               	return	
 29501                           
 29502                           ; BSR set to: 1
 29503                           ;controlCurrent_MC50.c: 110:     {;controlCurrent_MC50.c: 111:         if ( ts_system.Ti
      +                          meStopADCZeroOffsetCalc <= 0 )
 29504  0072CC  BFDE               	btfsc	(_ts_system+63)& (0+255),7,b	;volatile
 29505  0072CE  D005               	goto	u25870
 29506  0072D0  51DE               	movf	(_ts_system+63)& (0+255),w,b	;volatile
 29507  0072D2  E172               	bnz	l1357
 29508  0072D4  05DD               	decf	(_ts_system+62)& (0+255),w,b	;volatile
 29509  0072D6  B0D8               	btfsc	status,0,c
 29510  0072D8  0012               	return	
 29511  0072DA                     u25870:
 29512                           
 29513                           ; BSR set to: 1
 29514                           ;controlCurrent_MC50.c: 112:         {;controlCurrent_MC50.c: 113:             ts_system
      +                          .TimeStopADCZeroOffsetCalc = (1000/50);
 29515  0072DA  0E00               	movlw	0
 29516  0072DC  6FDE               	movwf	(_ts_system+63)& (0+255),b	;volatile
 29517  0072DE  0E14               	movlw	20
 29518  0072E0  6FDD               	movwf	(_ts_system+62)& (0+255),b	;volatile
 29519                           
 29520                           ;controlCurrent_MC50.c: 121:             for ( i=0 ; i<(30) ; i++ )
 29521  0072E2  0E00               	movlw	0
 29522  0072E4  6E17               	movwf	refreshADCZeroOffset@i^0,c
 29523  0072E6                     l22567:
 29524                           
 29525                           ;controlCurrent_MC50.c: 122:             {;controlCurrent_MC50.c: 126:                 m
      +                          edia += ADC_array[i];
 29526  0072E6  5017               	movf	refreshADCZeroOffset@i^0,w,c
 29527  0072E8  0D02               	mullw	2
 29528  0072EA  0E00               	movlw	low _ADC_array
 29529  0072EC  24F3               	addwf	243,w,c
 29530  0072EE  6ED9               	movwf	fsr2l,c
 29531  0072F0  0E02               	movlw	high _ADC_array
 29532  0072F2  20F4               	addwfc	prodh,w,c
 29533  0072F4  6EDA               	movwf	fsr2h,c
 29534  0072F6  50DE               	movf	postinc2,w,c
 29535  0072F8  2618               	addwf	refreshADCZeroOffset@media^0,f,c
 29536  0072FA  50DD               	movf	postdec2,w,c
 29537  0072FC  2219               	addwfc	(refreshADCZeroOffset@media+1)^0,f,c
 29538                           
 29539                           ;controlCurrent_MC50.c: 128:             }
 29540  0072FE  2A17               	incf	refreshADCZeroOffset@i^0,f,c
 29541  007300  0E1D               	movlw	29
 29542  007302  6417               	cpfsgt	refreshADCZeroOffset@i^0,c
 29543  007304  D7F0               	goto	l22567
 29544                           
 29545                           ;controlCurrent_MC50.c: 130:             media = media/30;
 29546  007306  C018  F010         	movff	refreshADCZeroOffset@media,___lwdiv@dividend
 29547  00730A  C019  F011         	movff	refreshADCZeroOffset@media+1,___lwdiv@dividend+1
 29548  00730E  0E00               	movlw	0
 29549  007310  6E13               	movwf	(___lwdiv@divisor+1)^0,c
 29550  007312  0E1E               	movlw	30
 29551  007314  6E12               	movwf	___lwdiv@divisor^0,c
 29552  007316  EC90  F047         	call	___lwdiv	;wreg free
 29553  00731A  C010  F018         	movff	?___lwdiv,refreshADCZeroOffset@media
 29554  00731E  C011  F019         	movff	?___lwdiv+1,refreshADCZeroOffset@media+1
 29555                           
 29556                           ;controlCurrent_MC50.c: 131:             if ( (media>(510 -20)) && (media<(510 +20)) )
 29557  007322  0EEB               	movlw	235
 29558  007324  5C18               	subwf	refreshADCZeroOffset@media^0,w,c
 29559  007326  0E01               	movlw	1
 29560  007328  5819               	subwfb	(refreshADCZeroOffset@media+1)^0,w,c
 29561  00732A  A0D8               	btfss	status,0,c
 29562  00732C  D006               	goto	l22581
 29563  00732E  0E12               	movlw	18
 29564  007330  5C18               	subwf	refreshADCZeroOffset@media^0,w,c
 29565  007332  0E02               	movlw	2
 29566  007334  5819               	subwfb	(refreshADCZeroOffset@media+1)^0,w,c
 29567  007336  A0D8               	btfss	status,0,c
 29568  007338  D004               	goto	l22583
 29569  00733A                     l22581:
 29570                           
 29571                           ;controlCurrent_MC50.c: 136:             {;controlCurrent_MC50.c: 138:                 m
      +                          edia = 510;
 29572  00733A  0E01               	movlw	1
 29573  00733C  6E19               	movwf	(refreshADCZeroOffset@media+1)^0,c
 29574  00733E  0EFE               	movlw	254
 29575  007340  6E18               	movwf	refreshADCZeroOffset@media^0,c
 29576  007342                     l22583:
 29577                           
 29578                           ;controlCurrent_MC50.c: 142:             if ( idxAdcZeroAquisition >= 30 )
 29579  007342  0E1D               	movlw	29
 29580  007344  0100               	movlb	0	; () banked
 29581  007346  658F               	cpfsgt	_idxAdcZeroAquisition& (0+255),b	;volatile
 29582  007348  D002               	goto	l22587
 29583                           
 29584                           ; BSR set to: 0
 29585                           ;controlCurrent_MC50.c: 143:             {;controlCurrent_MC50.c: 144:                 i
      +                          dxAdcZeroAquisition = 0;
 29586  00734A  0E00               	movlw	0
 29587  00734C  6F8F               	movwf	_idxAdcZeroAquisition& (0+255),b	;volatile
 29588  00734E                     l22587:
 29589                           
 29590                           ; BSR set to: 0
 29591                           ;controlCurrent_MC50.c: 146:             ADC_zero_array[idxAdcZeroAquisition] = media;
 29592  00734E  518F               	movf	_idxAdcZeroAquisition& (0+255),w,b	;volatile
 29593  007350  0D02               	mullw	2
 29594  007352  0E96               	movlw	low _ADC_zero_array
 29595  007354  24F3               	addwf	243,w,c
 29596  007356  6ED9               	movwf	fsr2l,c
 29597  007358  0E03               	movlw	high _ADC_zero_array
 29598  00735A  20F4               	addwfc	prodh,w,c
 29599  00735C  6EDA               	movwf	fsr2h,c
 29600  00735E  C018  FFDE         	movff	refreshADCZeroOffset@media,postinc2
 29601  007362  C019  FFDD         	movff	refreshADCZeroOffset@media+1,postdec2
 29602                           
 29603                           ; BSR set to: 0
 29604                           ;controlCurrent_MC50.c: 147:             idxAdcZeroAquisition++;
 29605  007366  2B8F               	incf	_idxAdcZeroAquisition& (0+255),f,b	;volatile
 29606                           
 29607                           ; BSR set to: 0
 29608                           ;controlCurrent_MC50.c: 150:             media = 0;
 29609  007368  0E00               	movlw	0
 29610  00736A  6E19               	movwf	(refreshADCZeroOffset@media+1)^0,c
 29611  00736C  0E00               	movlw	0
 29612  00736E  6E18               	movwf	refreshADCZeroOffset@media^0,c
 29613                           
 29614                           ; BSR set to: 0
 29615                           ;controlCurrent_MC50.c: 151:             for ( i=0 ; i<(30) ; i++ )
 29616  007370  0E00               	movlw	0
 29617  007372  6E17               	movwf	refreshADCZeroOffset@i^0,c
 29618  007374                     l22599:
 29619                           
 29620                           ; BSR set to: 0
 29621                           ;controlCurrent_MC50.c: 152:             {;controlCurrent_MC50.c: 158:                 m
      +                          edia += ADC_zero_array[i];
 29622  007374  5017               	movf	refreshADCZeroOffset@i^0,w,c
 29623  007376  0D02               	mullw	2
 29624  007378  0E96               	movlw	low _ADC_zero_array
 29625  00737A  24F3               	addwf	243,w,c
 29626  00737C  6ED9               	movwf	fsr2l,c
 29627  00737E  0E03               	movlw	high _ADC_zero_array
 29628  007380  20F4               	addwfc	prodh,w,c
 29629  007382  6EDA               	movwf	fsr2h,c
 29630  007384  50DE               	movf	postinc2,w,c
 29631  007386  2618               	addwf	refreshADCZeroOffset@media^0,f,c
 29632  007388  50DD               	movf	postdec2,w,c
 29633  00738A  2219               	addwfc	(refreshADCZeroOffset@media+1)^0,f,c
 29634                           
 29635                           ; BSR set to: 0
 29636                           ;controlCurrent_MC50.c: 159:             }
 29637  00738C  2A17               	incf	refreshADCZeroOffset@i^0,f,c
 29638                           
 29639                           ; BSR set to: 0
 29640  00738E  0E1D               	movlw	29
 29641  007390  6417               	cpfsgt	refreshADCZeroOffset@i^0,c
 29642  007392  D7F0               	goto	l22599
 29643                           
 29644                           ; BSR set to: 0
 29645                           ;controlCurrent_MC50.c: 160:             media = media/30;
 29646  007394  C018  F010         	movff	refreshADCZeroOffset@media,___lwdiv@dividend
 29647  007398  C019  F011         	movff	refreshADCZeroOffset@media+1,___lwdiv@dividend+1
 29648  00739C  0E00               	movlw	0
 29649  00739E  6E13               	movwf	(___lwdiv@divisor+1)^0,c
 29650  0073A0  0E1E               	movlw	30
 29651  0073A2  6E12               	movwf	___lwdiv@divisor^0,c
 29652  0073A4  EC90  F047         	call	___lwdiv	;wreg free
 29653  0073A8  C010  F018         	movff	?___lwdiv,refreshADCZeroOffset@media
 29654  0073AC  C011  F019         	movff	?___lwdiv+1,refreshADCZeroOffset@media+1
 29655                           
 29656                           ;controlCurrent_MC50.c: 162:             var_sys.ADCZeroOffset = media;
 29657  0073B0  C018  F14B         	movff	refreshADCZeroOffset@media,_var_sys+75	;volatile
 29658  0073B4  C019  F14C         	movff	refreshADCZeroOffset@media+1,_var_sys+76	;volatile
 29659  0073B8                     l1357:
 29660  0073B8  0012               	return		;funcret
 29661  0073BA                     __end_of_refreshADCZeroOffset:
 29662                           	callstack 0
 29663                           
 29664 ;; *************** function ___lwdiv *****************
 29665 ;; Defined at:
 29666 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\lwdiv.c"
 29667 ;; Parameters:    Size  Location     Type
 29668 ;;  dividend        2   15[COMRAM] unsigned int 
 29669 ;;  divisor         2   17[COMRAM] unsigned int 
 29670 ;; Auto vars:     Size  Location     Type
 29671 ;;  quotient        2   20[COMRAM] unsigned int 
 29672 ;;  counter         1   19[COMRAM] unsigned char 
 29673 ;; Return value:  Size  Location     Type
 29674 ;;                  2   15[COMRAM] unsigned int 
 29675 ;; Registers used:
 29676 ;;		wreg, status,2, status,0
 29677 ;; Tracked objects:
 29678 ;;		On entry : 3C/2
 29679 ;;		On exit  : 3C/0
 29680 ;;		Unchanged: 3C/0
 29681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29682 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29683 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29685 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29686 ;;Total ram usage:        7 bytes
 29687 ;; Hardware stack levels used: 1
 29688 ;; Hardware stack levels required when called: 4
 29689 ;; This function calls:
 29690 ;;		Nothing
 29691 ;; This function is called by:
 29692 ;;		_refreshADCZeroOffset
 29693 ;;		_sm_execute_menuConfiguration
 29694 ;; This function uses a non-reentrant model
 29695 ;;
 29696                           
 29697                           	psect	text125
 29698  008F20                     __ptext125:
 29699                           	callstack 0
 29700  008F20                     ___lwdiv:
 29701                           	callstack 24
 29702                           
 29703                           ;incstack = 0
 29704  008F20  0E00               	movlw	0
 29705  008F22  6E16               	movwf	(___lwdiv@quotient+1)^0,c
 29706  008F24  0E00               	movlw	0
 29707  008F26  6E15               	movwf	___lwdiv@quotient^0,c
 29708  008F28  5012               	movf	___lwdiv@divisor^0,w,c
 29709  008F2A  1013               	iorwf	(___lwdiv@divisor+1)^0,w,c
 29710  008F2C  B4D8               	btfsc	status,2,c
 29711  008F2E  D01C               	goto	l4271
 29712  008F30  0E01               	movlw	1
 29713  008F32  6E14               	movwf	___lwdiv@counter^0,c
 29714  008F34  D004               	goto	l22411
 29715  008F36                     l22409:
 29716  008F36  90D8               	bcf	status,0,c
 29717  008F38  3612               	rlcf	___lwdiv@divisor^0,f,c
 29718  008F3A  3613               	rlcf	(___lwdiv@divisor+1)^0,f,c
 29719  008F3C  2A14               	incf	___lwdiv@counter^0,f,c
 29720  008F3E                     l22411:
 29721  008F3E  AE13               	btfss	(___lwdiv@divisor+1)^0,7,c
 29722  008F40  D7FA               	goto	l22409
 29723  008F42                     u25800:
 29724  008F42  90D8               	bcf	status,0,c
 29725  008F44  3615               	rlcf	___lwdiv@quotient^0,f,c
 29726  008F46  3616               	rlcf	(___lwdiv@quotient+1)^0,f,c
 29727  008F48  5012               	movf	___lwdiv@divisor^0,w,c
 29728  008F4A  5C10               	subwf	___lwdiv@dividend^0,w,c
 29729  008F4C  5013               	movf	(___lwdiv@divisor+1)^0,w,c
 29730  008F4E  5811               	subwfb	(___lwdiv@dividend+1)^0,w,c
 29731  008F50  A0D8               	btfss	status,0,c
 29732  008F52  D005               	goto	l22421
 29733  008F54  5012               	movf	___lwdiv@divisor^0,w,c
 29734  008F56  5E10               	subwf	___lwdiv@dividend^0,f,c
 29735  008F58  5013               	movf	(___lwdiv@divisor+1)^0,w,c
 29736  008F5A  5A11               	subwfb	(___lwdiv@dividend+1)^0,f,c
 29737  008F5C  8015               	bsf	___lwdiv@quotient^0,0,c
 29738  008F5E                     l22421:
 29739  008F5E  90D8               	bcf	status,0,c
 29740  008F60  3213               	rrcf	(___lwdiv@divisor+1)^0,f,c
 29741  008F62  3212               	rrcf	___lwdiv@divisor^0,f,c
 29742  008F64  2E14               	decfsz	___lwdiv@counter^0,f,c
 29743  008F66  D7ED               	goto	u25800
 29744  008F68                     l4271:
 29745  008F68  C015  F010         	movff	___lwdiv@quotient,?___lwdiv
 29746  008F6C  C016  F011         	movff	___lwdiv@quotient+1,?___lwdiv+1
 29747  008F70  0012               	return		;funcret
 29748  008F72                     __end_of___lwdiv:
 29749                           	callstack 0
 29750                           
 29751 ;; *************** function _getCurrentComparator *****************
 29752 ;; Defined at:
 29753 ;;		line 264 in file "controlCurrent_MC50.c"
 29754 ;; Parameters:    Size  Location     Type
 29755 ;;		None
 29756 ;; Auto vars:     Size  Location     Type
 29757 ;;  x               1   33[COMRAM] unsigned char 
 29758 ;;  tempOffset      2   31[COMRAM] unsigned int 
 29759 ;; Return value:  Size  Location     Type
 29760 ;;                  4   21[COMRAM] unsigned long 
 29761 ;; Registers used:
 29762 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 29763 ;; Tracked objects:
 29764 ;;		On entry : 3F/1
 29765 ;;		On exit  : 3F/1
 29766 ;;		Unchanged: 0/0
 29767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29768 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29769 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29770 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29771 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29772 ;;Total ram usage:       13 bytes
 29773 ;; Hardware stack levels used: 1
 29774 ;; Hardware stack levels required when called: 5
 29775 ;; This function calls:
 29776 ;;		___wmul
 29777 ;; This function is called by:
 29778 ;;		_ControlCurrent
 29779 ;; This function uses a non-reentrant model
 29780 ;;
 29781                           
 29782                           	psect	text126
 29783  006050                     __ptext126:
 29784                           	callstack 0
 29785  006050                     _getCurrentComparator:
 29786                           	callstack 24
 29787                           
 29788                           ; BSR set to: 1
 29789                           ;controlCurrent_MC50.c: 269:     if(ts_system.timeSoftStart>0)
 29790                           
 29791                           ; BSR set to: 1
 29792                           
 29793                           ;incstack = 0
 29794  006050  BFB6               	btfsc	(_ts_system+23)& (0+255),7,b	;volatile
 29795  006052  D00A               	goto	l22623
 29796  006054  51B6               	movf	(_ts_system+23)& (0+255),w,b	;volatile
 29797  006056  E103               	bnz	u25950
 29798  006058  05B5               	decf	(_ts_system+22)& (0+255),w,b	;volatile
 29799  00605A  A0D8               	btfss	status,0,c
 29800  00605C  D005               	goto	l22623
 29801  00605E                     u25950:
 29802                           
 29803                           ; BSR set to: 1
 29804                           ;controlCurrent_MC50.c: 270:     {;controlCurrent_MC50.c: 271:         ts_system.timewai
      +                          tBeforeSoftStart=(1000/50);
 29805  00605E  0E00               	movlw	0
 29806  006060  6FDA               	movwf	(_ts_system+59)& (0+255),b	;volatile
 29807  006062  0E14               	movlw	20
 29808  006064  6FD9               	movwf	(_ts_system+58)& (0+255),b	;volatile
 29809  006066  D007               	goto	u25960
 29810  006068                     l22623:
 29811                           
 29812                           ; BSR set to: 1
 29813  006068  BFDA               	btfsc	(_ts_system+59)& (0+255),7,b	;volatile
 29814  00606A  D009               	goto	l22627
 29815  00606C  51DA               	movf	(_ts_system+59)& (0+255),w,b	;volatile
 29816  00606E  E103               	bnz	u25960
 29817  006070  05D9               	decf	(_ts_system+58)& (0+255),w,b	;volatile
 29818  006072  A0D8               	btfss	status,0,c
 29819  006074  D004               	goto	l22627
 29820  006076                     u25960:
 29821                           
 29822                           ; BSR set to: 1
 29823                           ;controlCurrent_MC50.c: 276:     {;controlCurrent_MC50.c: 277:         tempOffset=1200;
 29824  006076  0E04               	movlw	4
 29825  006078  6E21               	movwf	(getCurrentComparator@tempOffset+1)^0,c
 29826  00607A  0EB0               	movlw	176
 29827  00607C  D003               	goto	L104
 29828  00607E                     l22627:
 29829                           
 29830                           ; BSR set to: 1
 29831                           ;controlCurrent_MC50.c: 280:     {;controlCurrent_MC50.c: 281:         tempOffset=0;
 29832  00607E  0E00               	movlw	0
 29833  006080  6E21               	movwf	(getCurrentComparator@tempOffset+1)^0,c
 29834  006082  0E00               	movlw	0
 29835  006084                     L104:
 29836  006084  6E20               	movwf	getCurrentComparator@tempOffset^0,c
 29837                           
 29838                           ; BSR set to: 1
 29839                           ;controlCurrent_MC50.c: 284:     if(powerControl_st.decelarationActive==NO)
 29840  006086  517B               	movf	_powerControl_st& (0+255),w,b
 29841  006088  A4D8               	btfss	status,2,c
 29842  00608A  D05B               	goto	l22643
 29843                           
 29844                           ; BSR set to: 1
 29845                           ;controlCurrent_MC50.c: 285:     {;controlCurrent_MC50.c: 286:         if(var_sys.StateM
      +                          otor==InClose)
 29846  00608C  0E03               	movlw	3
 29847  00608E  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 29848  006090  A4D8               	btfss	status,2,c
 29849  006092  D005               	goto	l22633
 29850                           
 29851                           ; BSR set to: 1
 29852                           ;controlCurrent_MC50.c: 287:         {;controlCurrent_MC50.c: 288:             var_sys.A
      +                          ctualComparatorCurrent=var_sys_NVM.learningCurrentNormalClose;
 29853  006094  C0C8  F134         	movff	_var_sys_NVM+48,_var_sys+52	;volatile
 29854  006098  C0C9  F135         	movff	_var_sys_NVM+49,_var_sys+53	;volatile
 29855  00609C  D004               	goto	L105
 29856  00609E                     l22633:
 29857                           
 29858                           ; BSR set to: 1
 29859                           ;controlCurrent_MC50.c: 291:         {;controlCurrent_MC50.c: 292:             var_sys.A
      +                          ctualComparatorCurrent=var_sys_NVM.learningCurrentNormalOpen;
 29860  00609E  C0CA  F134         	movff	_var_sys_NVM+50,_var_sys+52	;volatile
 29861  0060A2  C0CB  F135         	movff	_var_sys_NVM+51,_var_sys+53	;volatile
 29862  0060A6                     L105:
 29863  0060A6  6B36               	clrf	(_var_sys+54)& (0+255),b	;volatile
 29864  0060A8  6B37               	clrf	(_var_sys+55)& (0+255),b	;volatile
 29865                           
 29866                           ; BSR set to: 1
 29867                           ;controlCurrent_MC50.c: 295:         if(var_sys.ActualComparatorCurrent<=100||(var_sys.A
      +                          ctualComparatorCurrent>(510*30)))
 29868  0060AA  5137               	movf	(_var_sys+55)& (0+255),w,b	;volatile
 29869  0060AC  1136               	iorwf	(_var_sys+54)& (0+255),w,b	;volatile
 29870  0060AE  1135               	iorwf	(_var_sys+53)& (0+255),w,b	;volatile
 29871  0060B0  E104               	bnz	u25990
 29872  0060B2  0E65               	movlw	101
 29873  0060B4  5D34               	subwf	(_var_sys+52)& (0+255),w,b	;volatile
 29874  0060B6  A0D8               	btfss	status,0,c
 29875  0060B8  D009               	goto	u26000
 29876  0060BA                     u25990:
 29877                           
 29878                           ; BSR set to: 1
 29879  0060BA  5137               	movf	(_var_sys+55)& (0+255),w,b	;volatile
 29880  0060BC  1136               	iorwf	(_var_sys+54)& (0+255),w,b	;volatile
 29881  0060BE  E106               	bnz	u26000
 29882  0060C0  0EC5               	movlw	197
 29883  0060C2  5D34               	subwf	(_var_sys+52)& (0+255),w,b	;volatile
 29884  0060C4  0E3B               	movlw	59
 29885  0060C6  5935               	subwfb	(_var_sys+53)& (0+255),w,b	;volatile
 29886  0060C8  A0D8               	btfss	status,0,c
 29887  0060CA  D004               	goto	l1383
 29888  0060CC                     u26000:
 29889                           
 29890                           ; BSR set to: 1
 29891                           ;controlCurrent_MC50.c: 296:         {;controlCurrent_MC50.c: 297:              var_sys.
      +                          ActualComparatorCurrent=(510*30);
 29892  0060CC  0EC4               	movlw	196
 29893  0060CE  6F34               	movwf	(_var_sys+52)& (0+255),b	;volatile
 29894  0060D0  0E3B               	movlw	59
 29895  0060D2  D058               	goto	L107
 29896  0060D4                     l1383:
 29897                           
 29898                           ; BSR set to: 1
 29899                           ;controlCurrent_MC50.c: 300:         {;controlCurrent_MC50.c: 301:             unsigned 
      +                          char x=var_sys_NVM.motorSensitivity;
 29900  0060D4  C09B  F022         	movff	_var_sys_NVM+3,getCurrentComparator@x	;volatile
 29901                           
 29902                           ; BSR set to: 1
 29903                           ;controlCurrent_MC50.c: 307:            var_sys.ActualComparatorCurrent=var_sys.ActualCo
      +                          mparatorCurrent+((10*(x*x))+(-200*x)+1300);
 29904  0060D8  5022               	movf	getCurrentComparator@x^0,w,c
 29905  0060DA  0222               	mulwf	getCurrentComparator@x^0,c
 29906  0060DC  CFF3 F010          	movff	prodl,___wmul@multiplier
 29907  0060E0  CFF4 F011          	movff	prodh,___wmul@multiplier+1
 29908  0060E4  0E00               	movlw	0
 29909  0060E6  6E13               	movwf	(___wmul@multiplicand+1)^0,c
 29910  0060E8  0E0A               	movlw	10
 29911  0060EA  6E12               	movwf	___wmul@multiplicand^0,c
 29912  0060EC  ECFF  F04B         	call	___wmul	;wreg free
 29913  0060F0  C010  F01A         	movff	?___wmul,??_getCurrentComparator
 29914  0060F4  C011  F01B         	movff	?___wmul+1,??_getCurrentComparator+1
 29915  0060F8  C022  F010         	movff	getCurrentComparator@x,___wmul@multiplier
 29916  0060FC  6A11               	clrf	(___wmul@multiplier+1)^0,c
 29917  0060FE  0EFF               	movlw	255
 29918  006100  6E13               	movwf	(___wmul@multiplicand+1)^0,c
 29919  006102  0E38               	movlw	56
 29920  006104  6E12               	movwf	___wmul@multiplicand^0,c
 29921  006106  ECFF  F04B         	call	___wmul	;wreg free
 29922  00610A  5010               	movf	?___wmul^0,w,c
 29923  00610C  261A               	addwf	??_getCurrentComparator^0,f,c
 29924  00610E  5011               	movf	(?___wmul+1)^0,w,c
 29925  006110  221B               	addwfc	(??_getCurrentComparator+1)^0,f,c
 29926  006112  0E14               	movlw	20
 29927  006114  241A               	addwf	??_getCurrentComparator^0,w,c
 29928  006116  6E1C               	movwf	(??_getCurrentComparator+2)^0,c
 29929  006118  0E05               	movlw	5
 29930  00611A  201B               	addwfc	(??_getCurrentComparator+1)^0,w,c
 29931  00611C  6E1D               	movwf	(??_getCurrentComparator+3)^0,c
 29932  00611E  6A1E               	clrf	(??_getCurrentComparator+4)^0,c
 29933  006120  BE1D               	btfsc	(??_getCurrentComparator+3)^0,7,c
 29934  006122  061E               	decf	(??_getCurrentComparator+4)^0,f,c
 29935  006124  501E               	movf	(??_getCurrentComparator+4)^0,w,c
 29936  006126  6E1F               	movwf	(??_getCurrentComparator+5)^0,c
 29937  006128  0101               	movlb	1	; () banked
 29938  00612A  5134               	movf	(_var_sys+52)& (0+255),w,b	;volatile
 29939  00612C  241C               	addwf	(??_getCurrentComparator+2)^0,w,c
 29940  00612E  6F34               	movwf	(_var_sys+52)& (0+255),b	;volatile
 29941  006130  5135               	movf	(_var_sys+53)& (0+255),w,b	;volatile
 29942  006132  201D               	addwfc	(??_getCurrentComparator+3)^0,w,c
 29943  006134  6F35               	movwf	(_var_sys+53)& (0+255),b	;volatile
 29944  006136  5136               	movf	(_var_sys+54)& (0+255),w,b	;volatile
 29945  006138  201E               	addwfc	(??_getCurrentComparator+4)^0,w,c
 29946  00613A  6F36               	movwf	(_var_sys+54)& (0+255),b	;volatile
 29947  00613C  5137               	movf	(_var_sys+55)& (0+255),w,b	;volatile
 29948  00613E  201F               	addwfc	(??_getCurrentComparator+5)^0,w,c
 29949  006140  D046               	goto	L106
 29950  006142                     l22643:
 29951                           
 29952                           ; BSR set to: 1
 29953                           ;controlCurrent_MC50.c: 311:     {;controlCurrent_MC50.c: 312:         if(var_sys.StateM
      +                          otor==InClose)
 29954  006142  0E03               	movlw	3
 29955  006144  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 29956  006146  A4D8               	btfss	status,2,c
 29957  006148  D009               	goto	l1388
 29958                           
 29959                           ; BSR set to: 1
 29960                           ;controlCurrent_MC50.c: 313:         {;controlCurrent_MC50.c: 314:             var_sys.A
      +                          ctualComparatorCurrent=var_sys_NVM.learningCurrentDecelarationClose;
 29961  00614A  C0C0  F134         	movff	_var_sys_NVM+40,_var_sys+52	;volatile
 29962  00614E  C0C1  F135         	movff	_var_sys_NVM+41,_var_sys+53	;volatile
 29963  006152  C0C2  F136         	movff	_var_sys_NVM+42,_var_sys+54	;volatile
 29964  006156  C0C3  F137         	movff	_var_sys_NVM+43,_var_sys+55	;volatile
 29965                           
 29966                           ;controlCurrent_MC50.c: 315:         }
 29967  00615A  D008               	goto	l22647
 29968  00615C                     l1388:
 29969                           
 29970                           ; BSR set to: 1
 29971                           ;controlCurrent_MC50.c: 317:         {;controlCurrent_MC50.c: 318:             var_sys.A
      +                          ctualComparatorCurrent=var_sys_NVM.learningCurrentDecelarationOpen ;
 29972  00615C  C0C4  F134         	movff	_var_sys_NVM+44,_var_sys+52	;volatile
 29973  006160  C0C5  F135         	movff	_var_sys_NVM+45,_var_sys+53	;volatile
 29974  006164  C0C6  F136         	movff	_var_sys_NVM+46,_var_sys+54	;volatile
 29975  006168  C0C7  F137         	movff	_var_sys_NVM+47,_var_sys+55	;volatile
 29976  00616C                     l22647:
 29977                           
 29978                           ; BSR set to: 1
 29979                           ;controlCurrent_MC50.c: 321:         if(var_sys.ActualComparatorCurrent<=5000)
 29980  00616C  5137               	movf	(_var_sys+55)& (0+255),w,b	;volatile
 29981  00616E  1136               	iorwf	(_var_sys+54)& (0+255),w,b	;volatile
 29982  006170  E10E               	bnz	l22651
 29983  006172  0E89               	movlw	137
 29984  006174  5D34               	subwf	(_var_sys+52)& (0+255),w,b	;volatile
 29985  006176  0E13               	movlw	19
 29986  006178  5935               	subwfb	(_var_sys+53)& (0+255),w,b	;volatile
 29987  00617A  B0D8               	btfsc	status,0,c
 29988  00617C  D008               	goto	l22651
 29989                           
 29990                           ; BSR set to: 1
 29991                           ;controlCurrent_MC50.c: 322:         {;controlCurrent_MC50.c: 323:             var_sys.A
      +                          ctualComparatorCurrent=5000;
 29992  00617E  0E88               	movlw	136
 29993  006180  6F34               	movwf	(_var_sys+52)& (0+255),b	;volatile
 29994  006182  0E13               	movlw	19
 29995  006184                     L107:
 29996  006184  6F35               	movwf	(_var_sys+53)& (0+255),b	;volatile
 29997  006186  0E00               	movlw	0
 29998  006188  6F36               	movwf	(_var_sys+54)& (0+255),b	;volatile
 29999  00618A  0E00               	movlw	0
 30000  00618C  D020               	goto	L106
 30001  00618E                     l22651:
 30002                           
 30003                           ; BSR set to: 1
 30004                           ;controlCurrent_MC50.c: 326:         {;controlCurrent_MC50.c: 327:             var_sys.A
      +                          ctualComparatorCurrent=var_sys.ActualComparatorCurrent-(1200 +(500*(10-var_sys_NVM.decel
      +                          arationSensivity)));
 30005  00618E  C0A7  F010         	movff	_var_sys_NVM+15,___wmul@multiplier	;volatile
 30006  006192  6A11               	clrf	(___wmul@multiplier+1)^0,c
 30007  006194  0EFE               	movlw	254
 30008  006196  6E13               	movwf	(___wmul@multiplicand+1)^0,c
 30009  006198  0E0C               	movlw	12
 30010  00619A  6E12               	movwf	___wmul@multiplicand^0,c
 30011  00619C  ECFF  F04B         	call	___wmul	;wreg free
 30012  0061A0  0E38               	movlw	56
 30013  0061A2  2410               	addwf	?___wmul^0,w,c
 30014  0061A4  6E1A               	movwf	??_getCurrentComparator^0,c
 30015  0061A6  0E18               	movlw	24
 30016  0061A8  2011               	addwfc	(?___wmul+1)^0,w,c
 30017  0061AA  6E1B               	movwf	(??_getCurrentComparator+1)^0,c
 30018  0061AC  6A1C               	clrf	(??_getCurrentComparator+2)^0,c
 30019  0061AE  BE1B               	btfsc	(??_getCurrentComparator+1)^0,7,c
 30020  0061B0  061C               	decf	(??_getCurrentComparator+2)^0,f,c
 30021  0061B2  501C               	movf	(??_getCurrentComparator+2)^0,w,c
 30022  0061B4  6E1D               	movwf	(??_getCurrentComparator+3)^0,c
 30023  0061B6  501A               	movf	??_getCurrentComparator^0,w,c
 30024  0061B8  0101               	movlb	1	; () banked
 30025  0061BA  5D34               	subwf	(_var_sys+52)& (0+255),w,b	;volatile
 30026  0061BC  6F34               	movwf	(_var_sys+52)& (0+255),b	;volatile
 30027  0061BE  501B               	movf	(??_getCurrentComparator+1)^0,w,c
 30028  0061C0  5935               	subwfb	(_var_sys+53)& (0+255),w,b	;volatile
 30029  0061C2  6F35               	movwf	(_var_sys+53)& (0+255),b	;volatile
 30030  0061C4  501C               	movf	(??_getCurrentComparator+2)^0,w,c
 30031  0061C6  5936               	subwfb	(_var_sys+54)& (0+255),w,b	;volatile
 30032  0061C8  6F36               	movwf	(_var_sys+54)& (0+255),b	;volatile
 30033  0061CA  501D               	movf	(??_getCurrentComparator+3)^0,w,c
 30034  0061CC  5937               	subwfb	(_var_sys+55)& (0+255),w,b	;volatile
 30035  0061CE                     L106:
 30036  0061CE  6F37               	movwf	(_var_sys+55)& (0+255),b	;volatile
 30037                           
 30038                           ; BSR set to: 1
 30039                           ;controlCurrent_MC50.c: 332:     return var_sys.ActualComparatorCurrent+tempOffset;
 30040  0061D0  5020               	movf	getCurrentComparator@tempOffset^0,w,c
 30041  0061D2  2534               	addwf	(_var_sys+52)& (0+255),w,b	;volatile
 30042  0061D4  6E16               	movwf	?_getCurrentComparator^0,c
 30043  0061D6  5021               	movf	(getCurrentComparator@tempOffset+1)^0,w,c
 30044  0061D8  2135               	addwfc	(_var_sys+53)& (0+255),w,b	;volatile
 30045  0061DA  6E17               	movwf	(?_getCurrentComparator+1)^0,c
 30046  0061DC  0E00               	movlw	0
 30047  0061DE  2136               	addwfc	(_var_sys+54)& (0+255),w,b	;volatile
 30048  0061E0  6E18               	movwf	(?_getCurrentComparator+2)^0,c
 30049  0061E2  0E00               	movlw	0
 30050  0061E4  2137               	addwfc	(_var_sys+55)& (0+255),w,b	;volatile
 30051  0061E6  6E19               	movwf	(?_getCurrentComparator+3)^0,c
 30052                           
 30053                           ; BSR set to: 1
 30054  0061E8  0012               	return		;funcret
 30055  0061EA                     __end_of_getCurrentComparator:
 30056                           	callstack 0
 30057                           
 30058 ;; *************** function ___wmul *****************
 30059 ;; Defined at:
 30060 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul16.c"
 30061 ;; Parameters:    Size  Location     Type
 30062 ;;  multiplier      2   15[COMRAM] unsigned int 
 30063 ;;  multiplicand    2   17[COMRAM] unsigned int 
 30064 ;; Auto vars:     Size  Location     Type
 30065 ;;  product         2   19[COMRAM] unsigned int 
 30066 ;; Return value:  Size  Location     Type
 30067 ;;                  2   15[COMRAM] unsigned int 
 30068 ;; Registers used:
 30069 ;;		wreg, status,2, status,0, prodl, prodh
 30070 ;; Tracked objects:
 30071 ;;		On entry : 0/0
 30072 ;;		On exit  : 0/0
 30073 ;;		Unchanged: 0/0
 30074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30075 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30076 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30078 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30079 ;;Total ram usage:        6 bytes
 30080 ;; Hardware stack levels used: 1
 30081 ;; Hardware stack levels required when called: 4
 30082 ;; This function calls:
 30083 ;;		Nothing
 30084 ;; This function is called by:
 30085 ;;		_getCurrentComparator
 30086 ;;		_getHopCode
 30087 ;; This function uses a non-reentrant model
 30088 ;;
 30089                           
 30090                           	psect	text127
 30091  0097FE                     __ptext127:
 30092                           	callstack 0
 30093  0097FE                     ___wmul:
 30094                           	callstack 22
 30095                           
 30096                           ; BSR set to: 1
 30097                           ;incstack = 0
 30098  0097FE  5010               	movf	___wmul@multiplier^0,w,c
 30099  009800  0212               	mulwf	___wmul@multiplicand^0,c
 30100  009802  CFF3 F014          	movff	prodl,___wmul@product
 30101  009806  CFF4 F015          	movff	prodh,___wmul@product+1
 30102  00980A  5010               	movf	___wmul@multiplier^0,w,c
 30103  00980C  0213               	mulwf	(___wmul@multiplicand+1)^0,c
 30104  00980E  50F3               	movf	243,w,c
 30105  009810  2615               	addwf	(___wmul@product+1)^0,f,c
 30106  009812  5011               	movf	(___wmul@multiplier+1)^0,w,c
 30107  009814  0212               	mulwf	___wmul@multiplicand^0,c
 30108  009816  50F3               	movf	243,w,c
 30109  009818  2615               	addwf	(___wmul@product+1)^0,f,c
 30110  00981A  C014  F010         	movff	___wmul@product,?___wmul
 30111  00981E  C015  F011         	movff	___wmul@product+1,?___wmul+1
 30112  009822  0012               	return		;funcret
 30113  009824                     __end_of___wmul:
 30114                           	callstack 0
 30115                           
 30116 ;; *************** function _GetMotorPower *****************
 30117 ;; Defined at:
 30118 ;;		line 405 in file "outputs_MC50.c"
 30119 ;; Parameters:    Size  Location     Type
 30120 ;;		None
 30121 ;; Auto vars:     Size  Location     Type
 30122 ;;  defineatraso    1   18[COMRAM] unsigned char 
 30123 ;; Return value:  Size  Location     Type
 30124 ;;                  1    wreg      unsigned char 
 30125 ;; Registers used:
 30126 ;;		wreg, status,2, status,0, prodl, prodh
 30127 ;; Tracked objects:
 30128 ;;		On entry : 3C/1
 30129 ;;		On exit  : 3F/1
 30130 ;;		Unchanged: 0/0
 30131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30133 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30134 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30135 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30136 ;;Total ram usage:        4 bytes
 30137 ;; Hardware stack levels used: 1
 30138 ;; Hardware stack levels required when called: 4
 30139 ;; This function calls:
 30140 ;;		Nothing
 30141 ;; This function is called by:
 30142 ;;		_ControlCurrent
 30143 ;;		_InitSoftStart
 30144 ;;		_InitSoftStop
 30145 ;; This function uses a non-reentrant model
 30146 ;;
 30147                           
 30148                           	psect	text128
 30149  007840                     __ptext128:
 30150                           	callstack 0
 30151  007840                     _GetMotorPower:
 30152                           	callstack 22
 30153                           
 30154                           ;outputs_MC50.c: 408:     unsigned char defineatraso;;outputs_MC50.c: 413:     if(powerC
      +                          ontrol_st.decelarationActive==YES)
 30155                           
 30156                           ;incstack = 0
 30157  007840  0101               	movlb	1	; () banked
 30158  007842  057B               	decf	_powerControl_st& (0+255),w,b
 30159  007844  A4D8               	btfss	status,2,c
 30160  007846  D006               	goto	l20367
 30161                           
 30162                           ; BSR set to: 1
 30163                           ;outputs_MC50.c: 414:     {;outputs_MC50.c: 415:        temppower=(var_sys_NVM.motorPowe
      +                          r*6);
 30164  007848  0100               	movlb	0	; () banked
 30165  00784A  519A               	movf	(_var_sys_NVM+2)& (0+255),w,b	;volatile
 30166  00784C  0D06               	mullw	6
 30167  00784E  CFF3 F193          	movff	prodl,_temppower
 30168                           
 30169                           ;outputs_MC50.c: 416:     }
 30170  007852  D043               	goto	l2240
 30171  007854                     l20367:
 30172                           
 30173                           ; BSR set to: 1
 30174                           ;outputs_MC50.c: 418:     {;outputs_MC50.c: 419:         fullmotorPower=(var_sys_NVM.mot
      +                          orPower*6);
 30175  007854  0100               	movlb	0	; () banked
 30176  007856  519A               	movf	(_var_sys_NVM+2)& (0+255),w,b	;volatile
 30177  007858  0D06               	mullw	6
 30178  00785A  CFF3 F082          	movff	prodl,_fullmotorPower
 30179                           
 30180                           ; BSR set to: 0
 30181                           ;outputs_MC50.c: 421:         if(var_sys.velocityFactor>0)
 30182  00785E  0101               	movlb	1	; () banked
 30183  007860  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 30184  007862  D01C               	goto	l20377
 30185  007864  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 30186  007866  E103               	bnz	u23250
 30187  007868  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 30188  00786A  A0D8               	btfss	status,0,c
 30189  00786C  D017               	goto	l20377
 30190  00786E                     u23250:
 30191                           
 30192                           ; BSR set to: 1
 30193                           ;outputs_MC50.c: 422:         {;outputs_MC50.c: 423:             if(var_sys.velocityFact
      +                          or>fullmotorPower)
 30194  00786E  0100               	movlb	0	; () banked
 30195  007870  5182               	movf	_fullmotorPower& (0+255),w,b
 30196  007872  6E10               	movwf	??_GetMotorPower^0,c
 30197  007874  6A11               	clrf	(??_GetMotorPower+1)^0,c
 30198  007876  0101               	movlb	1	; () banked
 30199  007878  510E               	movf	(_var_sys+14)& (0+255),w,b	;volatile
 30200  00787A  5C10               	subwf	??_GetMotorPower^0,w,c
 30201  00787C  5011               	movf	(??_GetMotorPower+1)^0,w,c
 30202  00787E  0A80               	xorlw	128
 30203  007880  6E12               	movwf	(??_GetMotorPower+2)^0,c
 30204  007882  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 30205  007884  0A80               	xorlw	128
 30206  007886  5812               	subwfb	(??_GetMotorPower+2)^0,w,c
 30207  007888  B0D8               	btfsc	status,0,c
 30208  00788A  D002               	goto	l20375
 30209                           
 30210                           ; BSR set to: 1
 30211                           ;outputs_MC50.c: 424:             {;outputs_MC50.c: 425:                 temppower=1;
 30212  00788C  0E01               	movlw	1
 30213  00788E  D004               	goto	L109
 30214  007890                     l20375:
 30215                           
 30216                           ; BSR set to: 1
 30217                           ;outputs_MC50.c: 428:             {;outputs_MC50.c: 430:                 temppower =full
      +                          motorPower-var_sys.velocityFactor;
 30218  007890  510E               	movf	(_var_sys+14)& (0+255),w,b	;volatile
 30219  007892  0100               	movlb	0	; () banked
 30220  007894  5D82               	subwf	_fullmotorPower& (0+255),w,b
 30221  007896  D017               	goto	L110
 30222  007898                     L109:
 30223  007898  6F93               	movwf	_temppower& (0+255),b
 30224  00789A  D01F               	goto	l2240
 30225  00789C                     l20377:
 30226                           
 30227                           ; BSR set to: 1
 30228  00789C  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 30229  00789E  D005               	goto	u23270
 30230  0078A0  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 30231  0078A2  E113               	bnz	l20387
 30232  0078A4  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 30233  0078A6  B0D8               	btfsc	status,0,c
 30234  0078A8  D010               	goto	l20387
 30235  0078AA                     u23270:
 30236                           
 30237                           ; BSR set to: 1
 30238  0078AA  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 30239  0078AC  D005               	goto	u23280
 30240  0078AE  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 30241  0078B0  E10C               	bnz	l20387
 30242  0078B2  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 30243  0078B4  B0D8               	btfsc	status,0,c
 30244  0078B6  D009               	goto	l20387
 30245  0078B8                     u23280:
 30246                           
 30247                           ; BSR set to: 1
 30248                           ;outputs_MC50.c: 434:         {;outputs_MC50.c: 435:             temppower =fullmotorPow
      +                          er;
 30249  0078B8  C082  F193         	movff	_fullmotorPower,_temppower
 30250                           
 30251                           ; BSR set to: 1
 30252                           ;outputs_MC50.c: 438:             if ( var_sys_NVM.motorPower>8 )
 30253  0078BC  0E08               	movlw	8
 30254  0078BE  0100               	movlb	0	; () banked
 30255  0078C0  659A               	cpfsgt	(_var_sys_NVM+2)& (0+255),b	;volatile
 30256  0078C2  D00B               	goto	l2240
 30257                           
 30258                           ; BSR set to: 0
 30259                           ;outputs_MC50.c: 439:             {;outputs_MC50.c: 440:                 temppower = 80 
      +                          -23 +1;
 30260  0078C4  0E3A               	movlw	58
 30261  0078C6                     L110:
 30262  0078C6  0101               	movlb	1	; () banked
 30263  0078C8  D7E7               	goto	L109
 30264  0078CA                     l20387:
 30265                           
 30266                           ; BSR set to: 1
 30267  0078CA  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 30268  0078CC  D006               	goto	l2240
 30269  0078CE  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 30270  0078D0  E102               	bnz	u23300
 30271  0078D2  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 30272  0078D4  B0D8               	btfsc	status,0,c
 30273  0078D6                     u23300:
 30274                           
 30275                           ; BSR set to: 1
 30276                           ;outputs_MC50.c: 447:                 temppower = var_sys.velocityFactorstop;
 30277  0078D6  C110  F193         	movff	_var_sys+16,_temppower	;volatile
 30278  0078DA                     l2240:
 30279                           
 30280                           ;outputs_MC50.c: 451:     if ((var_sys.velocityFactorstop > 0)&&(var_sys.velocityFactor 
      +                          <= 0 )){
 30281  0078DA  0101               	movlb	1	; () banked
 30282  0078DC  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 30283  0078DE  D00E               	goto	l20397
 30284  0078E0  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 30285  0078E2  E103               	bnz	u23310
 30286  0078E4  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 30287  0078E6  A0D8               	btfss	status,0,c
 30288  0078E8  D009               	goto	l20397
 30289  0078EA                     u23310:
 30290                           
 30291                           ; BSR set to: 1
 30292  0078EA  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 30293  0078EC  D005               	goto	u23320
 30294  0078EE  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 30295  0078F0  E105               	bnz	l20397
 30296  0078F2  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 30297  0078F4  B0D8               	btfsc	status,0,c
 30298  0078F6  D002               	goto	l20397
 30299  0078F8                     u23320:
 30300                           
 30301                           ; BSR set to: 1
 30302                           ;outputs_MC50.c: 452:     defineatraso = 5;
 30303  0078F8  0E05               	movlw	5
 30304  0078FA  D001               	goto	L108
 30305  0078FC                     l20397:
 30306                           
 30307                           ; BSR set to: 1
 30308                           ;outputs_MC50.c: 455:     {;outputs_MC50.c: 456:     defineatraso = 23;
 30309  0078FC  0E17               	movlw	23
 30310  0078FE                     L108:
 30311  0078FE  6E13               	movwf	GetMotorPower@defineatraso^0,c
 30312                           
 30313                           ; BSR set to: 1
 30314                           ;outputs_MC50.c: 459:     return temppower+defineatraso;
 30315  007900  5193               	movf	_temppower& (0+255),w,b
 30316  007902  2413               	addwf	GetMotorPower@defineatraso^0,w,c
 30317                           
 30318                           ; BSR set to: 1
 30319  007904  0012               	return		;funcret
 30320  007906                     __end_of_GetMotorPower:
 30321                           	callstack 0
 30322                           
 30323 ;; *************** function _ControlCounterMoves *****************
 30324 ;; Defined at:
 30325 ;;		line 305 in file "controlMemory_MC50.c"
 30326 ;; Parameters:    Size  Location     Type
 30327 ;;		None
 30328 ;; Auto vars:     Size  Location     Type
 30329 ;;		None
 30330 ;; Return value:  Size  Location     Type
 30331 ;;                  1    wreg      void 
 30332 ;; Registers used:
 30333 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30334 ;; Tracked objects:
 30335 ;;		On entry : 3E/1
 30336 ;;		On exit  : 0/0
 30337 ;;		Unchanged: 0/0
 30338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30342 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30343 ;;Total ram usage:        0 bytes
 30344 ;; Hardware stack levels used: 1
 30345 ;; Hardware stack levels required when called: 14
 30346 ;; This function calls:
 30347 ;;		_SaveNVM_VarSystem
 30348 ;; This function is called by:
 30349 ;;		_main
 30350 ;; This function uses a non-reentrant model
 30351 ;;
 30352                           
 30353                           	psect	text129
 30354  008D18                     __ptext129:
 30355                           	callstack 0
 30356  008D18                     _ControlCounterMoves:
 30357                           	callstack 16
 30358                           
 30359                           ;controlMemory_MC50.c: 308:     if(ts_system.timeBetweenSaveCounters<=0)
 30360                           
 30361                           ; BSR set to: 1
 30362                           ;incstack = 0
 30363  008D18  0101               	movlb	1	; () banked
 30364  008D1A  BFC6               	btfsc	(_ts_system+39)& (0+255),7,b	;volatile
 30365  008D1C  D005               	goto	u29600
 30366  008D1E  51C6               	movf	(_ts_system+39)& (0+255),w,b	;volatile
 30367  008D20  E127               	bnz	l1491
 30368  008D22  05C5               	decf	(_ts_system+38)& (0+255),w,b	;volatile
 30369  008D24  B0D8               	btfsc	status,0,c
 30370  008D26  0012               	return	
 30371  008D28                     u29600:
 30372                           
 30373                           ; BSR set to: 1
 30374                           ;controlMemory_MC50.c: 309:     {;controlMemory_MC50.c: 310:        ts_system.timeBetwee
      +                          nSaveCounters=((1000/50)*60)*5;
 30375  008D28  0E17               	movlw	23
 30376  008D2A  6FC6               	movwf	(_ts_system+39)& (0+255),b	;volatile
 30377  008D2C  0E70               	movlw	112
 30378  008D2E  6FC5               	movwf	(_ts_system+38)& (0+255),b	;volatile
 30379                           
 30380                           ; BSR set to: 1
 30381                           ;controlMemory_MC50.c: 312:        if(var_sys.actualCounterMoves!=var_sys_NVM.counterMov
      +                          es)
 30382  008D30  0100               	movlb	0	; () banked
 30383  008D32  51BA               	movf	(_var_sys_NVM+34)& (0+255),w,b	;volatile
 30384  008D34  0101               	movlb	1	; () banked
 30385  008D36  193C               	xorwf	(_var_sys+60)& (0+255),w,b	;volatile
 30386  008D38  E110               	bnz	u29610
 30387  008D3A  0100               	movlb	0	; () banked
 30388  008D3C  51BB               	movf	(_var_sys_NVM+35)& (0+255),w,b	;volatile
 30389  008D3E  0101               	movlb	1	; () banked
 30390  008D40  193D               	xorwf	(_var_sys+61)& (0+255),w,b	;volatile
 30391  008D42  E10B               	bnz	u29610
 30392  008D44  0100               	movlb	0	; () banked
 30393  008D46  51BC               	movf	(_var_sys_NVM+36)& (0+255),w,b	;volatile
 30394  008D48  0101               	movlb	1	; () banked
 30395  008D4A  193E               	xorwf	(_var_sys+62)& (0+255),w,b	;volatile
 30396  008D4C  E106               	bnz	u29610
 30397  008D4E  0100               	movlb	0	; () banked
 30398  008D50  51BD               	movf	(_var_sys_NVM+37)& (0+255),w,b	;volatile
 30399  008D52  0101               	movlb	1	; () banked
 30400  008D54  193F               	xorwf	(_var_sys+63)& (0+255),w,b	;volatile
 30401  008D56  B4D8               	btfsc	status,2,c
 30402  008D58  0012               	return	
 30403  008D5A                     u29610:
 30404                           
 30405                           ; BSR set to: 1
 30406                           ;controlMemory_MC50.c: 313:        {;controlMemory_MC50.c: 314:            var_sys_NVM.c
      +                          ounterMoves=var_sys.actualCounterMoves;
 30407  008D5A  C13C  F0BA         	movff	_var_sys+60,_var_sys_NVM+34	;volatile
 30408  008D5E  C13D  F0BB         	movff	_var_sys+61,_var_sys_NVM+35	;volatile
 30409  008D62  C13E  F0BC         	movff	_var_sys+62,_var_sys_NVM+36	;volatile
 30410  008D66  C13F  F0BD         	movff	_var_sys+63,_var_sys_NVM+37	;volatile
 30411                           
 30412                           ; BSR set to: 1
 30413                           ;controlMemory_MC50.c: 315:            SaveNVM_VarSystem(pageMemoryCounters);
 30414  008D6A  0E02               	movlw	2
 30415  008D6C  ECE3  F049         	call	_SaveNVM_VarSystem
 30416  008D70                     l1491:
 30417  008D70  0012               	return		;funcret
 30418  008D72                     __end_of_ControlCounterMoves:
 30419                           	callstack 0
 30420                           
 30421 ;; *************** function _SaveNVM_VarSystem *****************
 30422 ;; Defined at:
 30423 ;;		line 187 in file "controlMemory_MC50.c"
 30424 ;; Parameters:    Size  Location     Type
 30425 ;;  page            1    wreg     unsigned char 
 30426 ;; Auto vars:     Size  Location     Type
 30427 ;;  page            1    0[BANK0 ] unsigned char 
 30428 ;;  tempAdd         2    1[BANK0 ] unsigned int 
 30429 ;;  point           1    3[BANK0 ] PTR unsigned char 
 30430 ;;		 -> var_sys_NVM(64), 
 30431 ;; Return value:  Size  Location     Type
 30432 ;;                  1    wreg      void 
 30433 ;; Registers used:
 30434 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30435 ;; Tracked objects:
 30436 ;;		On entry : 0/0
 30437 ;;		On exit  : 0/0
 30438 ;;		Unchanged: 0/0
 30439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30441 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30443 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30444 ;;Total ram usage:        4 bytes
 30445 ;; Hardware stack levels used: 1
 30446 ;; Hardware stack levels required when called: 13
 30447 ;; This function calls:
 30448 ;;		_i2c_writeNBytes
 30449 ;; This function is called by:
 30450 ;;		_loadNVM_VarSystem
 30451 ;;		_ResetDefaultMemory
 30452 ;;		_ControlCounterMoves
 30453 ;;		_checkNVM_VarSystem
 30454 ;;		_sm_execute_ControlLearning
 30455 ;;		_sm_execute_menuConfiguration
 30456 ;;		_setValueToEdit
 30457 ;;		_controlSelectRemote
 30458 ;;		_eusartparser
 30459 ;; This function uses a non-reentrant model
 30460 ;;
 30461                           
 30462                           	psect	text130
 30463  0093C6                     __ptext130:
 30464                           	callstack 0
 30465  0093C6                     _SaveNVM_VarSystem:
 30466                           	callstack 14
 30467                           
 30468                           ;incstack = 0
 30469                           ;SaveNVM_VarSystem@page stored from wreg
 30470  0093C6  0100               	movlb	0	; () banked
 30471  0093C8  6FD8               	movwf	SaveNVM_VarSystem@page& (0+255),b
 30472                           
 30473                           ;controlMemory_MC50.c: 187: void SaveNVM_VarSystem(unsigned char page);controlMemory_MC5
      +                          0.c: 188: {;controlMemory_MC50.c: 189:     unsigned int tempAdd=page*16;
 30474  0093CA  0100               	movlb	0	; () banked
 30475  0093CC  51D8               	movf	SaveNVM_VarSystem@page& (0+255),w,b
 30476  0093CE  0D10               	mullw	16
 30477  0093D0  CFF3 F0D9          	movff	prodl,SaveNVM_VarSystem@tempAdd
 30478  0093D4  CFF4 F0DA          	movff	prodh,SaveNVM_VarSystem@tempAdd+1
 30479                           
 30480                           ; BSR set to: 0
 30481                           ;controlMemory_MC50.c: 190:     char* point=(char*)&var_sys_NVM;
 30482  0093D8  0E98               	movlw	low _var_sys_NVM
 30483  0093DA  6FDB               	movwf	SaveNVM_VarSystem@point& (0+255),b
 30484                           
 30485                           ; BSR set to: 0
 30486                           ;controlMemory_MC50.c: 191:     point=point+tempAdd;
 30487  0093DC  51DB               	movf	SaveNVM_VarSystem@point& (0+255),w,b
 30488  0093DE  25D9               	addwf	SaveNVM_VarSystem@tempAdd& (0+255),w,b
 30489  0093E0  6FDB               	movwf	SaveNVM_VarSystem@point& (0+255),b
 30490                           
 30491                           ; BSR set to: 0
 30492                           ;controlMemory_MC50.c: 192:    i2c_writeNBytes(0x50, tempAdd, point, 16);
 30493  0093E2  C0D9  F022         	movff	SaveNVM_VarSystem@tempAdd,i2c_writeNBytes@reg
 30494  0093E6  C0DA  F023         	movff	SaveNVM_VarSystem@tempAdd+1,i2c_writeNBytes@reg+1
 30495  0093EA  C0DB  F024         	movff	SaveNVM_VarSystem@point,i2c_writeNBytes@data
 30496  0093EE  0E00               	movlw	0
 30497  0093F0  6E26               	movwf	(i2c_writeNBytes@len+1)^0,c
 30498  0093F2  0E10               	movlw	16
 30499  0093F4  6E25               	movwf	i2c_writeNBytes@len^0,c
 30500  0093F6  0E50               	movlw	80
 30501  0093F8  EC88  F043         	call	_i2c_writeNBytes
 30502  0093FC  0012               	return		;funcret
 30503  0093FE                     __end_of_SaveNVM_VarSystem:
 30504                           	callstack 0
 30505                           
 30506 ;; *************** function _i2c_writeNBytes *****************
 30507 ;; Defined at:
 30508 ;;		line 50 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 30509 ;; Parameters:    Size  Location     Type
 30510 ;;  address         1    wreg     unsigned char 
 30511 ;;  reg             2   33[COMRAM] unsigned short 
 30512 ;;  data            1   35[COMRAM] PTR void 
 30513 ;;		 -> RemoveSerial@tempSerial(4), saveNewSerial@tempSerial(4), var_sys_NVM(64), 
 30514 ;;  len             2   36[COMRAM] unsigned int 
 30515 ;; Auto vars:     Size  Location     Type
 30516 ;;  address         1   56[COMRAM] unsigned char 
 30517 ;;  dat            17   39[COMRAM] unsigned char [17]
 30518 ;; Return value:  Size  Location     Type
 30519 ;;                  1    wreg      void 
 30520 ;; Registers used:
 30521 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30522 ;; Tracked objects:
 30523 ;;		On entry : 3F/0
 30524 ;;		On exit  : 0/0
 30525 ;;		Unchanged: 0/0
 30526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30527 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30528 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30529 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30530 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30531 ;;Total ram usage:       24 bytes
 30532 ;; Hardware stack levels used: 1
 30533 ;; Hardware stack levels required when called: 12
 30534 ;; This function calls:
 30535 ;;		_I2C1_Close
 30536 ;;		_I2C1_MasterWrite
 30537 ;;		_I2C1_Open
 30538 ;;		_I2C1_SetAddressNackCallback
 30539 ;;		_I2C1_SetBuffer
 30540 ;;		_memcpy
 30541 ;; This function is called by:
 30542 ;;		_saveNewSerial
 30543 ;;		_RemoveSerial
 30544 ;;		_SaveNVM_VarSystem
 30545 ;; This function uses a non-reentrant model
 30546 ;;
 30547                           
 30548                           	psect	text131
 30549  008710                     __ptext131:
 30550                           	callstack 0
 30551  008710                     _i2c_writeNBytes:
 30552                           	callstack 14
 30553                           
 30554                           ;incstack = 0
 30555                           ;i2c_writeNBytes@address stored from wreg
 30556  008710  6E39               	movwf	i2c_writeNBytes@address^0,c
 30557                           
 30558                           ;mcc_generated_files/drivers/i2c_simple_master.c: 50: void i2c_writeNBytes(i2c1_address_
      +                          t address, uint16_t reg, void* data, size_t len);mcc_generated_files/drivers/i2c_simple_
      +                          master.c: 51: {;mcc_generated_files/drivers/i2c_simple_master.c: 52:     uint8_t dat[17]
      +                          ;;mcc_generated_files/drivers/i2c_simple_master.c: 53:     dat[0] = reg;
 30559  008712  C022  F028         	movff	i2c_writeNBytes@reg,i2c_writeNBytes@dat
 30560                           
 30561                           ;mcc_generated_files/drivers/i2c_simple_master.c: 54:     memcpy(dat + 1, data, len);
 30562  008716  0E29               	movlw	low (i2c_writeNBytes@dat+1)
 30563  008718  6E10               	movwf	memcpy@d1^0,c
 30564  00871A  6A11               	clrf	(memcpy@d1+1)^0,c
 30565  00871C  C024  F012         	movff	i2c_writeNBytes@data,memcpy@s1
 30566  008720  6A13               	clrf	(memcpy@s1+1)^0,c
 30567  008722  C025  F014         	movff	i2c_writeNBytes@len,memcpy@n
 30568  008726  C026  F015         	movff	i2c_writeNBytes@len+1,memcpy@n+1
 30569  00872A  ECE5  F048         	call	_memcpy	;wreg free
 30570  00872E                     l20421:
 30571  00872E  5023               	movf	(i2c_writeNBytes@reg+1)^0,w,c
 30572  008730  1039               	iorwf	i2c_writeNBytes@address^0,w,c
 30573  008732  EC58  F041         	call	_I2C1_Open
 30574  008736  0900               	iorlw	0
 30575  008738  B4D8               	btfsc	status,2,c
 30576  00873A  D7F9               	goto	l20421
 30577                           
 30578                           ;mcc_generated_files/drivers/i2c_simple_master.c: 56:     I2C1_SetBuffer(dat,len + 1);
 30579  00873C  0E28               	movlw	low i2c_writeNBytes@dat
 30580  00873E  6E10               	movwf	I2C1_SetBuffer@buffer^0,c
 30581  008740  6A11               	clrf	(I2C1_SetBuffer@buffer+1)^0,c
 30582  008742  0E01               	movlw	1
 30583  008744  2425               	addwf	i2c_writeNBytes@len^0,w,c
 30584  008746  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 30585  008748  0E00               	movlw	0
 30586  00874A  2026               	addwfc	(i2c_writeNBytes@len+1)^0,w,c
 30587  00874C  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 30588  00874E  ECFA  F04C         	call	_I2C1_SetBuffer	;wreg free
 30589                           
 30590                           ; BSR set to: 2
 30591                           ;mcc_generated_files/drivers/i2c_simple_master.c: 57:     I2C1_SetAddressNackCallback(((
      +                          void*)0),((void*)0));
 30592  008752  0E00               	movlw	0
 30593  008754  6E15               	movwf	I2C1_SetAddressNackCallback@cb^0,c
 30594  008756  0E00               	movlw	0
 30595  008758  6E16               	movwf	(I2C1_SetAddressNackCallback@cb+1)^0,c
 30596  00875A  0E00               	movlw	0
 30597  00875C  6E17               	movwf	I2C1_SetAddressNackCallback@ptr^0,c
 30598  00875E  0E00               	movlw	0
 30599  008760  6E18               	movwf	(I2C1_SetAddressNackCallback@ptr+1)^0,c
 30600  008762  EC1F  F04D         	call	_I2C1_SetAddressNackCallback	;wreg free
 30601                           
 30602                           ;mcc_generated_files/drivers/i2c_simple_master.c: 58:     I2C1_MasterWrite();
 30603  008766  ECF8  F04D         	call	_I2C1_MasterWrite	;wreg free
 30604  00876A                     l20429:
 30605  00876A  EC6C  F04C         	call	_I2C1_Close	;wreg free
 30606  00876E  06E8               	decf	wreg,f,c
 30607  008770  B4D8               	btfsc	status,2,c
 30608  008772  D7FB               	goto	l20429
 30609                           
 30610                           ;mcc_generated_files/drivers/i2c_simple_master.c: 60:     _delay((unsigned long)((10)*(6
      +                          4000000/4000.0)));
 30611  008774  0ED0               	movlw	208
 30612  008776  6E27               	movwf	??_i2c_writeNBytes^0,c
 30613  008778  0ECA               	movlw	202
 30614  00877A                     u33927:
 30615  00877A  2EE8               	decfsz	wreg,f,c
 30616  00877C  D7FE               	bra	u33927
 30617  00877E  2E27               	decfsz	??_i2c_writeNBytes^0,f,c
 30618  008780  D7FC               	bra	u33927
 30619  008782  0012               	return		;funcret
 30620  008784                     __end_of_i2c_writeNBytes:
 30621                           	callstack 0
 30622                           
 30623 ;; *************** function _memcpy *****************
 30624 ;; Defined at:
 30625 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\memcpy.c"
 30626 ;; Parameters:    Size  Location     Type
 30627 ;;  d1              2   15[COMRAM] PTR void 
 30628 ;;		 -> controlSelectRemote@tempSerial(4), Decrypt@Buffer(4), SecureKeyGen@SKEYtemp(8), SecureKeyGen@HOPtemp(4), 
 30629 ;;		 -> SecureKeyGen@Buffer(8), NormalKeyGen@SKEYtemp(4), NormalKeyGen@SEED(4), NormalKeyGen@HOPtemp(4), 
 30630 ;;		 -> NormalKeyGen@Buffer(8), DKEY(8), classic_data(16), I2C1_WriteNBytes@dat(17), 
 30631 ;;		 -> i2c_writeNBytes@dat(17), 
 30632 ;;  s1              2   17[COMRAM] PTR const void 
 30633 ;;		 -> classic_data.raw_data(4), Decrypt@Buffer(4), SecureKeyGen@SKEYtemp(8), SecureKeyGen@HOPtemp(4), 
 30634 ;;		 -> SecureKeyGen@Buffer(8), NormalKeyGen@SKEYtemp(4), NormalKeyGen@SEED(4), NormalKeyGen@HOPtemp(4), 
 30635 ;;		 -> NormalKeyGen@Buffer(8), classic_data.serialnumber(4), classic_data(16), BufferRF(9), 
 30636 ;;		 -> RemoveSerial@tempSerial(4), saveNewSerial@tempSerial(4), var_sys_NVM(64), 
 30637 ;;  n               2   19[COMRAM] unsigned int 
 30638 ;; Auto vars:     Size  Location     Type
 30639 ;;  s               2   24[COMRAM] PTR const unsigned char 
 30640 ;;		 -> classic_data.raw_data(4), Decrypt@Buffer(4), SecureKeyGen@SKEYtemp(8), SecureKeyGen@HOPtemp(4), 
 30641 ;;		 -> SecureKeyGen@Buffer(8), NormalKeyGen@SKEYtemp(4), NormalKeyGen@SEED(4), NormalKeyGen@HOPtemp(4), 
 30642 ;;		 -> NormalKeyGen@Buffer(8), classic_data.serialnumber(4), classic_data(16), BufferRF(9), 
 30643 ;;		 -> RemoveSerial@tempSerial(4), saveNewSerial@tempSerial(4), var_sys_NVM(64), 
 30644 ;;  d               2   22[COMRAM] PTR unsigned char 
 30645 ;;		 -> controlSelectRemote@tempSerial(4), Decrypt@Buffer(4), SecureKeyGen@SKEYtemp(8), SecureKeyGen@HOPtemp(4), 
 30646 ;;		 -> SecureKeyGen@Buffer(8), NormalKeyGen@SKEYtemp(4), NormalKeyGen@SEED(4), NormalKeyGen@HOPtemp(4), 
 30647 ;;		 -> NormalKeyGen@Buffer(8), DKEY(8), classic_data(16), I2C1_WriteNBytes@dat(17), 
 30648 ;;		 -> i2c_writeNBytes@dat(17), 
 30649 ;;  tmp             1   21[COMRAM] unsigned char 
 30650 ;; Return value:  Size  Location     Type
 30651 ;;                  2   15[COMRAM] PTR void 
 30652 ;; Registers used:
 30653 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 30654 ;; Tracked objects:
 30655 ;;		On entry : 0/0
 30656 ;;		On exit  : 0/0
 30657 ;;		Unchanged: 0/0
 30658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30659 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30660 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30662 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30663 ;;Total ram usage:       11 bytes
 30664 ;; Hardware stack levels used: 1
 30665 ;; Hardware stack levels required when called: 4
 30666 ;; This function calls:
 30667 ;;		Nothing
 30668 ;; This function is called by:
 30669 ;;		_i2c_writeNBytes
 30670 ;;		_getSerialCmd
 30671 ;;		_NormalKeyGen
 30672 ;;		_Decrypt
 30673 ;;		_keeloqDecryptPacket
 30674 ;;		_DecryptPacket_12BIT
 30675 ;; This function uses a non-reentrant model
 30676 ;;
 30677                           
 30678                           	psect	text132
 30679  0091CA                     __ptext132:
 30680                           	callstack 0
 30681  0091CA                     _memcpy:
 30682                           	callstack 21
 30683                           
 30684                           ;incstack = 0
 30685  0091CA  C012  F019         	movff	memcpy@s1,memcpy@s
 30686  0091CE  C013  F01A         	movff	memcpy@s1+1,memcpy@s+1
 30687  0091D2  C010  F017         	movff	memcpy@d1,memcpy@d
 30688  0091D6  C011  F018         	movff	memcpy@d1+1,memcpy@d+1
 30689  0091DA  D010               	goto	l20361
 30690  0091DC                     l20353:
 30691  0091DC  C019  FFD9         	movff	memcpy@s,fsr2l
 30692  0091E0  C01A  FFDA         	movff	memcpy@s+1,fsr2h
 30693  0091E4  50DF               	movf	indf2,w,c
 30694  0091E6  6E16               	movwf	memcpy@tmp^0,c
 30695  0091E8  4A19               	infsnz	memcpy@s^0,f,c
 30696  0091EA  2A1A               	incf	(memcpy@s+1)^0,f,c
 30697  0091EC  C017  FFD9         	movff	memcpy@d,fsr2l
 30698  0091F0  C018  FFDA         	movff	memcpy@d+1,fsr2h
 30699  0091F4  C016  FFDF         	movff	memcpy@tmp,indf2
 30700  0091F8  4A17               	infsnz	memcpy@d^0,f,c
 30701  0091FA  2A18               	incf	(memcpy@d+1)^0,f,c
 30702  0091FC                     l20361:
 30703  0091FC  0614               	decf	memcpy@n^0,f,c
 30704  0091FE  A0D8               	btfss	status,0,c
 30705  009200  0615               	decf	(memcpy@n+1)^0,f,c
 30706  009202  2814               	incf	memcpy@n^0,w,c
 30707  009204  E1EB               	bnz	l20353
 30708  009206  2815               	incf	(memcpy@n+1)^0,w,c
 30709  009208  B4D8               	btfsc	status,2,c
 30710  00920A  0012               	return	
 30711  00920C  D7E7               	goto	l20353
 30712  00920E                     __end_of_memcpy:
 30713                           	callstack 0
 30714                           
 30715 ;; *************** function _I2C1_SetAddressNackCallback *****************
 30716 ;; Defined at:
 30717 ;;		line 283 in file "mcc_generated_files/i2c1_master.c"
 30718 ;; Parameters:    Size  Location     Type
 30719 ;;  cb              2   20[COMRAM] PTR FTN(PTR void ,)enum 
 30720 ;;		 -> Absolute function(1), 
 30721 ;;  ptr             2   22[COMRAM] PTR void 
 30722 ;;		 -> NULL(0), 
 30723 ;; Auto vars:     Size  Location     Type
 30724 ;;		None
 30725 ;; Return value:  Size  Location     Type
 30726 ;;                  1    wreg      void 
 30727 ;; Registers used:
 30728 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30729 ;; Tracked objects:
 30730 ;;		On entry : 3F/2
 30731 ;;		On exit  : 0/0
 30732 ;;		Unchanged: 0/0
 30733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30734 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30737 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30738 ;;Total ram usage:        4 bytes
 30739 ;; Hardware stack levels used: 1
 30740 ;; Hardware stack levels required when called: 5
 30741 ;; This function calls:
 30742 ;;		_I2C1_SetCallback
 30743 ;; This function is called by:
 30744 ;;		_i2c_writeNBytes
 30745 ;;		_i2c_readDataBlock
 30746 ;;		_I2C1_Read1ByteRegister
 30747 ;; This function uses a non-reentrant model
 30748 ;;
 30749                           
 30750                           	psect	text133
 30751  009A3E                     __ptext133:
 30752                           	callstack 0
 30753  009A3E                     _I2C1_SetAddressNackCallback:
 30754                           	callstack 20
 30755                           
 30756                           ; BSR set to: 2
 30757                           ;mcc_generated_files/i2c1_master.c: 283: void I2C1_SetAddressNackCallback(i2c1_callback_
      +                          t cb, void *ptr);mcc_generated_files/i2c1_master.c: 284: {;mcc_generated_files/i2c1_mast
      +                          er.c: 285:     I2C1_SetCallback(I2C1_ADDR_NACK, cb, ptr);
 30758                           
 30759                           ;incstack = 0
 30760  009A3E  C015  F010         	movff	I2C1_SetAddressNackCallback@cb,I2C1_SetCallback@cb
 30761  009A42  C016  F011         	movff	I2C1_SetAddressNackCallback@cb+1,I2C1_SetCallback@cb+1
 30762  009A46  C017  F012         	movff	I2C1_SetAddressNackCallback@ptr,I2C1_SetCallback@ptr
 30763  009A4A  C018  F013         	movff	I2C1_SetAddressNackCallback@ptr+1,I2C1_SetCallback@ptr+1
 30764  009A4E  0E02               	movlw	2
 30765  009A50  ECA1  F044         	call	_I2C1_SetCallback
 30766  009A54  0012               	return		;funcret
 30767  009A56                     __end_of_I2C1_SetAddressNackCallback:
 30768                           	callstack 0
 30769                           
 30770 ;; *************** function _I2C1_Open *****************
 30771 ;; Defined at:
 30772 ;;		line 176 in file "mcc_generated_files/i2c1_master.c"
 30773 ;; Parameters:    Size  Location     Type
 30774 ;;  address         1    wreg     unsigned char 
 30775 ;; Auto vars:     Size  Location     Type
 30776 ;;  address         1   15[COMRAM] unsigned char 
 30777 ;;  returnValue     1   16[COMRAM] enum E355
 30778 ;; Return value:  Size  Location     Type
 30779 ;;                  1    wreg      enum E355
 30780 ;; Registers used:
 30781 ;;		wreg, status,2, status,0, cstack
 30782 ;; Tracked objects:
 30783 ;;		On entry : 0/0
 30784 ;;		On exit  : 33/2
 30785 ;;		Unchanged: 0/0
 30786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30788 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30790 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30791 ;;Total ram usage:        2 bytes
 30792 ;; Hardware stack levels used: 1
 30793 ;; Hardware stack levels required when called: 5
 30794 ;; This function calls:
 30795 ;;		_I2C1_MasterClearIrq
 30796 ;;		_I2C1_MasterOpen
 30797 ;; This function is called by:
 30798 ;;		_i2c_writeNBytes
 30799 ;;		_i2c_readDataBlock
 30800 ;;		_I2C1_Read1ByteRegister
 30801 ;; This function uses a non-reentrant model
 30802 ;;
 30803                           
 30804                           	psect	text134
 30805  0082B0                     __ptext134:
 30806                           	callstack 0
 30807  0082B0                     _I2C1_Open:
 30808                           	callstack 20
 30809                           
 30810                           ;incstack = 0
 30811                           ;I2C1_Open@address stored from wreg
 30812  0082B0  6E10               	movwf	I2C1_Open@address^0,c
 30813                           
 30814                           ;mcc_generated_files/i2c1_master.c: 176: i2c1_error_t I2C1_Open(i2c1_address_t address);
      +                          mcc_generated_files/i2c1_master.c: 177: {;mcc_generated_files/i2c1_master.c: 178:     i2
      +                          c1_error_t returnValue = I2C1_BUSY;
 30815  0082B2  0E01               	movlw	1
 30816  0082B4  6E11               	movwf	I2C1_Open@returnValue^0,c
 30817                           
 30818                           ;mcc_generated_files/i2c1_master.c: 180:     if(!I2C1_Status.inUse)
 30819  0082B6  0102               	movlb	2	; () banked
 30820  0082B8  B55F               	btfsc	(_I2C1_Status+35)& (0+255),2,b
 30821  0082BA  D03A               	goto	l20327
 30822                           
 30823                           ; BSR set to: 2
 30824                           ;mcc_generated_files/i2c1_master.c: 181:     {;mcc_generated_files/i2c1_master.c: 182:  
      +                                 I2C1_Status.address = address;
 30825  0082BC  C010  F258         	movff	I2C1_Open@address,_I2C1_Status+28
 30826                           
 30827                           ; BSR set to: 2
 30828                           ;mcc_generated_files/i2c1_master.c: 183:         I2C1_Status.busy = 0;
 30829  0082C0  935F               	bcf	(_I2C1_Status+35)& (0+255),1,b
 30830                           
 30831                           ; BSR set to: 2
 30832                           ;mcc_generated_files/i2c1_master.c: 184:         I2C1_Status.inUse = 1;
 30833  0082C2  855F               	bsf	(_I2C1_Status+35)& (0+255),2,b
 30834                           
 30835                           ; BSR set to: 2
 30836                           ;mcc_generated_files/i2c1_master.c: 185:         I2C1_Status.addressNackCheck = 0;
 30837  0082C4  915F               	bcf	(_I2C1_Status+35)& (0+255),0,b
 30838                           
 30839                           ; BSR set to: 2
 30840                           ;mcc_generated_files/i2c1_master.c: 186:         I2C1_Status.state = I2C1_RESET;
 30841  0082C6  0E0E               	movlw	14
 30842  0082C8  6F5D               	movwf	(_I2C1_Status+33)& (0+255),b
 30843                           
 30844                           ; BSR set to: 2
 30845                           ;mcc_generated_files/i2c1_master.c: 187:         I2C1_Status.time_out_value = 500;
 30846  0082CA  0E01               	movlw	1
 30847  0082CC  6F57               	movwf	(_I2C1_Status+27)& (0+255),b
 30848  0082CE  0EF4               	movlw	244
 30849  0082D0  6F56               	movwf	(_I2C1_Status+26)& (0+255),b
 30850                           
 30851                           ; BSR set to: 2
 30852                           ;mcc_generated_files/i2c1_master.c: 188:         I2C1_Status.bufferFree = 1;
 30853  0082D2  875F               	bsf	(_I2C1_Status+35)& (0+255),3,b
 30854                           
 30855                           ; BSR set to: 2
 30856                           ;mcc_generated_files/i2c1_master.c: 191:         I2C1_Status.callbackTable[I2C1_DATA_COM
      +                          PLETE]=I2C1_CallbackReturnStop;
 30857  0082D4  0E8A               	movlw	low _I2C1_CallbackReturnStop
 30858  0082D6  6F3C               	movwf	_I2C1_Status& (0+255),b
 30859  0082D8  0E9C               	movlw	high _I2C1_CallbackReturnStop
 30860  0082DA  6F3D               	movwf	(_I2C1_Status+1)& (0+255),b
 30861                           
 30862                           ; BSR set to: 2
 30863                           ;mcc_generated_files/i2c1_master.c: 192:         I2C1_Status.callbackPayload[I2C1_DATA_C
      +                          OMPLETE] = ((void*)0);
 30864  0082DC  0E00               	movlw	0
 30865  0082DE  6F48               	movwf	(_I2C1_Status+12)& (0+255),b
 30866  0082E0  0E00               	movlw	0
 30867  0082E2  6F49               	movwf	(_I2C1_Status+13)& (0+255),b
 30868                           
 30869                           ; BSR set to: 2
 30870                           ;mcc_generated_files/i2c1_master.c: 193:         I2C1_Status.callbackTable[I2C1_WRITE_CO
      +                          LLISION]=I2C1_CallbackReturnStop;
 30871  0082E4  0E8A               	movlw	low _I2C1_CallbackReturnStop
 30872  0082E6  6F3E               	movwf	(_I2C1_Status+2)& (0+255),b
 30873  0082E8  0E9C               	movlw	high _I2C1_CallbackReturnStop
 30874  0082EA  6F3F               	movwf	(_I2C1_Status+3)& (0+255),b
 30875                           
 30876                           ; BSR set to: 2
 30877                           ;mcc_generated_files/i2c1_master.c: 194:         I2C1_Status.callbackPayload[I2C1_WRITE_
      +                          COLLISION] = ((void*)0);
 30878  0082EC  0E00               	movlw	0
 30879  0082EE  6F4A               	movwf	(_I2C1_Status+14)& (0+255),b
 30880  0082F0  0E00               	movlw	0
 30881  0082F2  6F4B               	movwf	(_I2C1_Status+15)& (0+255),b
 30882                           
 30883                           ; BSR set to: 2
 30884                           ;mcc_generated_files/i2c1_master.c: 195:         I2C1_Status.callbackTable[I2C1_ADDR_NAC
      +                          K]=I2C1_CallbackReturnStop;
 30885  0082F4  0E8A               	movlw	low _I2C1_CallbackReturnStop
 30886  0082F6  6F40               	movwf	(_I2C1_Status+4)& (0+255),b
 30887  0082F8  0E9C               	movlw	high _I2C1_CallbackReturnStop
 30888  0082FA  6F41               	movwf	(_I2C1_Status+5)& (0+255),b
 30889                           
 30890                           ; BSR set to: 2
 30891                           ;mcc_generated_files/i2c1_master.c: 196:         I2C1_Status.callbackPayload[I2C1_ADDR_N
      +                          ACK] = ((void*)0);
 30892  0082FC  0E00               	movlw	0
 30893  0082FE  6F4C               	movwf	(_I2C1_Status+16)& (0+255),b
 30894  008300  0E00               	movlw	0
 30895  008302  6F4D               	movwf	(_I2C1_Status+17)& (0+255),b
 30896                           
 30897                           ; BSR set to: 2
 30898                           ;mcc_generated_files/i2c1_master.c: 197:         I2C1_Status.callbackTable[I2C1_DATA_NAC
      +                          K]=I2C1_CallbackReturnStop;
 30899  008304  0E8A               	movlw	low _I2C1_CallbackReturnStop
 30900  008306  6F42               	movwf	(_I2C1_Status+6)& (0+255),b
 30901  008308  0E9C               	movlw	high _I2C1_CallbackReturnStop
 30902  00830A  6F43               	movwf	(_I2C1_Status+7)& (0+255),b
 30903                           
 30904                           ; BSR set to: 2
 30905                           ;mcc_generated_files/i2c1_master.c: 198:         I2C1_Status.callbackPayload[I2C1_DATA_N
      +                          ACK] = ((void*)0);
 30906  00830C  0E00               	movlw	0
 30907  00830E  6F4E               	movwf	(_I2C1_Status+18)& (0+255),b
 30908  008310  0E00               	movlw	0
 30909  008312  6F4F               	movwf	(_I2C1_Status+19)& (0+255),b
 30910                           
 30911                           ; BSR set to: 2
 30912                           ;mcc_generated_files/i2c1_master.c: 199:         I2C1_Status.callbackTable[I2C1_TIMEOUT]
      +                          =I2C1_CallbackReturnReset;
 30913  008314  0E86               	movlw	low _I2C1_CallbackReturnReset
 30914  008316  6F44               	movwf	(_I2C1_Status+8)& (0+255),b
 30915  008318  0E9C               	movlw	high _I2C1_CallbackReturnReset
 30916  00831A  6F45               	movwf	(_I2C1_Status+9)& (0+255),b
 30917                           
 30918                           ; BSR set to: 2
 30919                           ;mcc_generated_files/i2c1_master.c: 200:         I2C1_Status.callbackPayload[I2C1_TIMEOU
      +                          T] = ((void*)0);
 30920  00831C  0E00               	movlw	0
 30921  00831E  6F50               	movwf	(_I2C1_Status+20)& (0+255),b
 30922  008320  0E00               	movlw	0
 30923  008322  6F51               	movwf	(_I2C1_Status+21)& (0+255),b
 30924                           
 30925                           ; BSR set to: 2
 30926                           ;mcc_generated_files/i2c1_master.c: 202:         I2C1_MasterClearIrq();
 30927  008324  EC32  F04E         	call	_I2C1_MasterClearIrq	;wreg free
 30928                           
 30929                           ; BSR set to: 14
 30930                           ;mcc_generated_files/i2c1_master.c: 203:         I2C1_MasterOpen();
 30931  008328  EC2B  F04D         	call	_I2C1_MasterOpen	;wreg free
 30932                           
 30933                           ; BSR set to: 14
 30934                           ;mcc_generated_files/i2c1_master.c: 204:         returnValue = I2C1_NOERR;
 30935  00832C  0E00               	movlw	0
 30936  00832E  6E11               	movwf	I2C1_Open@returnValue^0,c
 30937  008330                     l20327:
 30938                           
 30939                           ;mcc_generated_files/i2c1_master.c: 206:     return returnValue;
 30940  008330  5011               	movf	I2C1_Open@returnValue^0,w,c
 30941  008332  0012               	return		;funcret
 30942  008334                     __end_of_I2C1_Open:
 30943                           	callstack 0
 30944                           
 30945 ;; *************** function _I2C1_MasterOpen *****************
 30946 ;; Defined at:
 30947 ;;		line 543 in file "mcc_generated_files/i2c1_master.c"
 30948 ;; Parameters:    Size  Location     Type
 30949 ;;		None
 30950 ;; Auto vars:     Size  Location     Type
 30951 ;;		None
 30952 ;; Return value:  Size  Location     Type
 30953 ;;                  1    wreg      _Bool 
 30954 ;; Registers used:
 30955 ;;		wreg, status,2
 30956 ;; Tracked objects:
 30957 ;;		On entry : 3F/E
 30958 ;;		On exit  : 3F/E
 30959 ;;		Unchanged: 3F/0
 30960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30962 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30964 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30965 ;;Total ram usage:        0 bytes
 30966 ;; Hardware stack levels used: 1
 30967 ;; Hardware stack levels required when called: 4
 30968 ;; This function calls:
 30969 ;;		Nothing
 30970 ;; This function is called by:
 30971 ;;		_I2C1_Open
 30972 ;; This function uses a non-reentrant model
 30973 ;;
 30974                           
 30975                           	psect	text135
 30976  009A56                     __ptext135:
 30977                           	callstack 0
 30978  009A56                     _I2C1_MasterOpen:
 30979                           	callstack 20
 30980                           
 30981                           ; BSR set to: 14
 30982                           ;mcc_generated_files/i2c1_master.c: 545:     if(!SSP1CON1bits.SSPEN)
 30983                           
 30984                           ;incstack = 0
 30985  009A56  BA96               	btfsc	150,5,c	;volatile
 30986  009A58  0012               	return	
 30987                           
 30988                           ; BSR set to: 14
 30989                           ;mcc_generated_files/i2c1_master.c: 546:     {;mcc_generated_files/i2c1_master.c: 547:  
      +                                 SSP1STAT = 0x80;
 30990  009A5A  0E80               	movlw	128
 30991  009A5C  6E95               	movwf	149,c	;volatile
 30992                           
 30993                           ;mcc_generated_files/i2c1_master.c: 548:         SSP1CON1 = 0x08;
 30994  009A5E  0E08               	movlw	8
 30995  009A60  6E96               	movwf	150,c	;volatile
 30996                           
 30997                           ;mcc_generated_files/i2c1_master.c: 549:         SSP1CON2 = 0x00;
 30998  009A62  0E00               	movlw	0
 30999  009A64  6E97               	movwf	151,c	;volatile
 31000                           
 31001                           ;mcc_generated_files/i2c1_master.c: 550:         SSP1ADD = 0x9F;
 31002  009A66  0E9F               	movlw	159
 31003  009A68  6E93               	movwf	147,c	;volatile
 31004                           
 31005                           ; BSR set to: 14
 31006                           ;mcc_generated_files/i2c1_master.c: 551:         SSP1CON1bits.SSPEN = 1;
 31007  009A6A  8A96               	bsf	150,5,c	;volatile
 31008                           
 31009                           ; BSR set to: 14
 31010  009A6C  0012               	return		;funcret
 31011  009A6E                     __end_of_I2C1_MasterOpen:
 31012                           	callstack 0
 31013                           
 31014 ;; *************** function _I2C1_MasterWrite *****************
 31015 ;; Defined at:
 31016 ;;		line 251 in file "mcc_generated_files/i2c1_master.c"
 31017 ;; Parameters:    Size  Location     Type
 31018 ;;		None
 31019 ;; Auto vars:     Size  Location     Type
 31020 ;;		None
 31021 ;; Return value:  Size  Location     Type
 31022 ;;                  1    wreg      enum E355
 31023 ;; Registers used:
 31024 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31025 ;; Tracked objects:
 31026 ;;		On entry : 0/2
 31027 ;;		On exit  : 3F/2
 31028 ;;		Unchanged: 0/0
 31029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31033 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31034 ;;Total ram usage:        0 bytes
 31035 ;; Hardware stack levels used: 1
 31036 ;; Hardware stack levels required when called: 11
 31037 ;; This function calls:
 31038 ;;		_I2C1_MasterOperation
 31039 ;; This function is called by:
 31040 ;;		_i2c_writeNBytes
 31041 ;;		_i2c_readDataBlock
 31042 ;;		_I2C1_Read1ByteRegister
 31043 ;; This function uses a non-reentrant model
 31044 ;;
 31045                           
 31046                           	psect	text136
 31047  009BF0                     __ptext136:
 31048                           	callstack 0
 31049  009BF0                     _I2C1_MasterWrite:
 31050                           	callstack 14
 31051                           
 31052                           ;mcc_generated_files/i2c1_master.c: 253:     return I2C1_MasterOperation(0);;	Return val
      +                          ue of _I2C1_MasterWrite is never used
 31053                           
 31054                           ; BSR set to: 14
 31055                           ;incstack = 0
 31056  009BF0  0E00               	movlw	0
 31057  009BF2  ECD5  F04A         	call	_I2C1_MasterOperation
 31058                           
 31059                           ; BSR set to: 2
 31060  009BF6  0012               	return		;funcret
 31061  009BF8                     __end_of_I2C1_MasterWrite:
 31062                           	callstack 0
 31063                           
 31064 ;; *************** function _I2C1_MasterOperation *****************
 31065 ;; Defined at:
 31066 ;;		line 224 in file "mcc_generated_files/i2c1_master.c"
 31067 ;; Parameters:    Size  Location     Type
 31068 ;;  read            1    wreg     _Bool 
 31069 ;; Auto vars:     Size  Location     Type
 31070 ;;  read            1   31[COMRAM] _Bool 
 31071 ;;  returnValue     1   32[COMRAM] enum E355
 31072 ;; Return value:  Size  Location     Type
 31073 ;;                  1    wreg      enum E355
 31074 ;; Registers used:
 31075 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31076 ;; Tracked objects:
 31077 ;;		On entry : 0/2
 31078 ;;		On exit  : 3F/2
 31079 ;;		Unchanged: 0/0
 31080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31082 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31084 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31085 ;;Total ram usage:        2 bytes
 31086 ;; Hardware stack levels used: 1
 31087 ;; Hardware stack levels required when called: 10
 31088 ;; This function calls:
 31089 ;;		_I2C1_MasterStart
 31090 ;;		_I2C1_Poller
 31091 ;; This function is called by:
 31092 ;;		_I2C1_MasterWrite
 31093 ;; This function uses a non-reentrant model
 31094 ;;
 31095                           
 31096                           	psect	text137
 31097  0095AA                     __ptext137:
 31098                           	callstack 0
 31099  0095AA                     _I2C1_MasterOperation:
 31100                           	callstack 14
 31101                           
 31102                           ; BSR set to: 2
 31103                           ;incstack = 0
 31104                           ;I2C1_MasterOperation@read stored from wreg
 31105  0095AA  6E20               	movwf	I2C1_MasterOperation@read^0,c
 31106                           
 31107                           ;mcc_generated_files/i2c1_master.c: 224: i2c1_error_t I2C1_MasterOperation(_Bool read);m
      +                          cc_generated_files/i2c1_master.c: 225: {;mcc_generated_files/i2c1_master.c: 226:     i2c
      +                          1_error_t returnValue = I2C1_BUSY;
 31108  0095AC  0E01               	movlw	1
 31109  0095AE  6E21               	movwf	I2C1_MasterOperation@returnValue^0,c
 31110                           
 31111                           ;mcc_generated_files/i2c1_master.c: 227:     if(!I2C1_Status.busy)
 31112  0095B0  0102               	movlb	2	; () banked
 31113  0095B2  B35F               	btfsc	(_I2C1_Status+35)& (0+255),1,b
 31114  0095B4  D00E               	goto	l20279
 31115                           
 31116                           ; BSR set to: 2
 31117                           ;mcc_generated_files/i2c1_master.c: 228:     {;mcc_generated_files/i2c1_master.c: 229:  
      +                                 I2C1_Status.busy = 1;
 31118  0095B6  835F               	bsf	(_I2C1_Status+35)& (0+255),1,b
 31119                           
 31120                           ; BSR set to: 2
 31121                           ;mcc_generated_files/i2c1_master.c: 230:         returnValue = I2C1_NOERR;
 31122  0095B8  0E00               	movlw	0
 31123  0095BA  6E21               	movwf	I2C1_MasterOperation@returnValue^0,c
 31124                           
 31125                           ; BSR set to: 2
 31126                           ;mcc_generated_files/i2c1_master.c: 232:         if(read)
 31127  0095BC  5020               	movf	I2C1_MasterOperation@read^0,w,c
 31128  0095BE  B4D8               	btfsc	status,2,c
 31129  0095C0  D002               	goto	l20273
 31130                           
 31131                           ; BSR set to: 2
 31132                           ;mcc_generated_files/i2c1_master.c: 233:         {;mcc_generated_files/i2c1_master.c: 23
      +                          4:             I2C1_Status.state = I2C1_SEND_ADR_READ;
 31133  0095C2  0E01               	movlw	1
 31134  0095C4  D001               	goto	L111
 31135  0095C6                     l20273:
 31136                           
 31137                           ; BSR set to: 2
 31138                           ;mcc_generated_files/i2c1_master.c: 237:         {;mcc_generated_files/i2c1_master.c: 23
      +                          8:             I2C1_Status.state = I2C1_SEND_ADR_WRITE;
 31139  0095C6  0E02               	movlw	2
 31140  0095C8                     L111:
 31141  0095C8  6F5D               	movwf	(_I2C1_Status+33)& (0+255),b
 31142                           
 31143                           ; BSR set to: 2
 31144                           ;mcc_generated_files/i2c1_master.c: 240:         I2C1_MasterStart();
 31145  0095CA  EC4B  F04E         	call	_I2C1_MasterStart	;wreg free
 31146                           
 31147                           ; BSR set to: 2
 31148                           ;mcc_generated_files/i2c1_master.c: 241:         I2C1_Poller();
 31149  0095CE  EC93  F04D         	call	_I2C1_Poller	;wreg free
 31150  0095D2                     l20279:
 31151                           
 31152                           ; BSR set to: 2
 31153                           ;mcc_generated_files/i2c1_master.c: 243:     return returnValue;
 31154  0095D2  5021               	movf	I2C1_MasterOperation@returnValue^0,w,c
 31155                           
 31156                           ; BSR set to: 2
 31157  0095D4  0012               	return		;funcret
 31158  0095D6                     __end_of_I2C1_MasterOperation:
 31159                           	callstack 0
 31160                           
 31161 ;; *************** function _I2C1_Poller *****************
 31162 ;; Defined at:
 31163 ;;		line 312 in file "mcc_generated_files/i2c1_master.c"
 31164 ;; Parameters:    Size  Location     Type
 31165 ;;		None
 31166 ;; Auto vars:     Size  Location     Type
 31167 ;;		None
 31168 ;; Return value:  Size  Location     Type
 31169 ;;                  1    wreg      void 
 31170 ;; Registers used:
 31171 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31172 ;; Tracked objects:
 31173 ;;		On entry : 3F/2
 31174 ;;		On exit  : 3F/2
 31175 ;;		Unchanged: 0/0
 31176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31180 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31181 ;;Total ram usage:        0 bytes
 31182 ;; Hardware stack levels used: 1
 31183 ;; Hardware stack levels required when called: 9
 31184 ;; This function calls:
 31185 ;;		_I2C1_MasterFsm
 31186 ;;		_I2C1_MasterWaitForEvent
 31187 ;; This function is called by:
 31188 ;;		_I2C1_MasterOperation
 31189 ;; This function uses a non-reentrant model
 31190 ;;
 31191                           
 31192                           	psect	text138
 31193  009B26                     __ptext138:
 31194                           	callstack 0
 31195  009B26                     _I2C1_Poller:
 31196                           	callstack 14
 31197                           
 31198                           ; BSR set to: 2
 31199                           ;mcc_generated_files/i2c1_master.c: 314:     while(I2C1_Status.busy)
 31200                           
 31201                           ; BSR set to: 2
 31202                           ;incstack = 0
 31203  009B26  D004               	goto	l20247
 31204  009B28                     l20243:
 31205                           
 31206                           ; BSR set to: 2
 31207                           ;mcc_generated_files/i2c1_master.c: 315:     {;mcc_generated_files/i2c1_master.c: 316:  
      +                                 I2C1_MasterWaitForEvent();
 31208  009B28  ECFC  F04D         	call	_I2C1_MasterWaitForEvent	;wreg free
 31209                           
 31210                           ; BSR set to: 14
 31211                           ;mcc_generated_files/i2c1_master.c: 317:     I2C1_MasterFsm();
 31212  009B2C  EC66  F047         	call	_I2C1_MasterFsm	;wreg free
 31213  009B30                     l20247:
 31214                           
 31215                           ; BSR set to: 2
 31216                           ;mcc_generated_files/i2c1_master.c: 314:     while(I2C1_Status.busy)
 31217  009B30  A35F               	btfss	(_I2C1_Status+35)& (0+255),1,b
 31218  009B32  0012               	return	
 31219  009B34  D7F9               	goto	l20243
 31220  009B36                     __end_of_I2C1_Poller:
 31221                           	callstack 0
 31222                           
 31223 ;; *************** function _I2C1_MasterWaitForEvent *****************
 31224 ;; Defined at:
 31225 ;;		line 650 in file "mcc_generated_files/i2c1_master.c"
 31226 ;; Parameters:    Size  Location     Type
 31227 ;;		None
 31228 ;; Auto vars:     Size  Location     Type
 31229 ;;		None
 31230 ;; Return value:  Size  Location     Type
 31231 ;;                  1    wreg      void 
 31232 ;; Registers used:
 31233 ;;		None
 31234 ;; Tracked objects:
 31235 ;;		On entry : 3F/2
 31236 ;;		On exit  : 3F/E
 31237 ;;		Unchanged: 0/0
 31238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31242 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31243 ;;Total ram usage:        0 bytes
 31244 ;; Hardware stack levels used: 1
 31245 ;; Hardware stack levels required when called: 4
 31246 ;; This function calls:
 31247 ;;		Nothing
 31248 ;; This function is called by:
 31249 ;;		_I2C1_Poller
 31250 ;; This function uses a non-reentrant model
 31251 ;;
 31252                           
 31253                           	psect	text139
 31254  009BF8                     __ptext139:
 31255                           	callstack 0
 31256  009BF8                     _I2C1_MasterWaitForEvent:
 31257                           	callstack 18
 31258                           
 31259                           ; BSR set to: 2
 31260                           ;mcc_generated_files/i2c1_master.c: 653:     {;mcc_generated_files/i2c1_master.c: 654:  
      +                                 if(PIR3bits.SSP1IF)
 31261                           
 31262                           ; BSR set to: 2
 31263                           ;incstack = 0
 31264                           ;mcc_generated_files/i2c1_master.c: 652:     while(1)
 31265  009BF8  010E               	movlb	14	; () banked
 31266  009BFA  B1CD               	btfsc	205,0,b	;volatile
 31267  009BFC  0012               	return	
 31268  009BFE  D7FC               	goto	__ptext139
 31269  009C00                     __end_of_I2C1_MasterWaitForEvent:
 31270                           	callstack 0
 31271                           
 31272 ;; *************** function _I2C1_MasterFsm *****************
 31273 ;; Defined at:
 31274 ;;		line 321 in file "mcc_generated_files/i2c1_master.c"
 31275 ;; Parameters:    Size  Location     Type
 31276 ;;		None
 31277 ;; Auto vars:     Size  Location     Type
 31278 ;;		None
 31279 ;; Return value:  Size  Location     Type
 31280 ;;                  1    wreg      void 
 31281 ;; Registers used:
 31282 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31283 ;; Tracked objects:
 31284 ;;		On entry : 3F/E
 31285 ;;		On exit  : 3F/2
 31286 ;;		Unchanged: 0/0
 31287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31290 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31291 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31292 ;;Total ram usage:        3 bytes
 31293 ;; Hardware stack levels used: 1
 31294 ;; Hardware stack levels required when called: 8
 31295 ;; This function calls:
 31296 ;;		_I2C1_DO_ADDRESS_NACK
 31297 ;;		_I2C1_DO_IDLE
 31298 ;;		_I2C1_DO_RCEN
 31299 ;;		_I2C1_DO_RESET
 31300 ;;		_I2C1_DO_RX
 31301 ;;		_I2C1_DO_RX_ACK
 31302 ;;		_I2C1_DO_RX_NACK_RESTART
 31303 ;;		_I2C1_DO_RX_NACK_STOP
 31304 ;;		_I2C1_DO_SEND_ADR_READ
 31305 ;;		_I2C1_DO_SEND_ADR_WRITE
 31306 ;;		_I2C1_DO_SEND_RESTART
 31307 ;;		_I2C1_DO_SEND_RESTART_READ
 31308 ;;		_I2C1_DO_SEND_RESTART_WRITE
 31309 ;;		_I2C1_DO_SEND_STOP
 31310 ;;		_I2C1_DO_TX
 31311 ;;		_I2C1_DO_TX_EMPTY
 31312 ;;		_I2C1_MasterClearIrq
 31313 ;;		_I2C1_MasterIsNack
 31314 ;; This function is called by:
 31315 ;;		_I2C1_Poller
 31316 ;; This function uses a non-reentrant model
 31317 ;;
 31318                           
 31319                           	psect	text140
 31320  008ECC                     __ptext140:
 31321                           	callstack 0
 31322  008ECC                     _I2C1_MasterFsm:
 31323                           	callstack 14
 31324                           
 31325                           ; BSR set to: 14
 31326                           ;mcc_generated_files/i2c1_master.c: 323:     I2C1_MasterClearIrq();
 31327                           
 31328                           ; BSR set to: 14
 31329                           ;incstack = 0
 31330  008ECC  EC32  F04E         	call	_I2C1_MasterClearIrq	;wreg free
 31331                           
 31332                           ; BSR set to: 14
 31333                           ;mcc_generated_files/i2c1_master.c: 325:     if(I2C1_Status.addressNackCheck && I2C1_Mas
      +                          terIsNack())
 31334  008ED0  0102               	movlb	2	; () banked
 31335  008ED2  A15F               	btfss	(_I2C1_Status+35)& (0+255),0,b
 31336  008ED4  D007               	goto	l20237
 31337                           
 31338                           ; BSR set to: 2
 31339  008ED6  ECB0  F04D         	call	_I2C1_MasterIsNack	;wreg free
 31340  008EDA  0900               	iorlw	0
 31341  008EDC  B4D8               	btfsc	status,2,c
 31342  008EDE  D002               	goto	l20237
 31343                           
 31344                           ; BSR set to: 2
 31345                           ;mcc_generated_files/i2c1_master.c: 326:     {;mcc_generated_files/i2c1_master.c: 327:  
      +                                 I2C1_Status.state = I2C1_ADDRESS_NACK;
 31346  008EE0  0E0F               	movlw	15
 31347  008EE2  6F5D               	movwf	(_I2C1_Status+33)& (0+255),b
 31348  008EE4                     l20237:
 31349                           
 31350                           ; BSR set to: 2
 31351                           ;mcc_generated_files/i2c1_master.c: 329:     I2C1_Status.state = i2c1_fsmStateTable[I2C1
      +                          _Status.state]();
 31352  008EE4  515D               	movf	(_I2C1_Status+33)& (0+255),w,b
 31353  008EE6  0D02               	mullw	2
 31354  008EE8  50F3               	movf	243,w,c
 31355  008EEA  0F01               	addlw	low _i2c1_fsmStateTable
 31356  008EEC  6E1D               	movwf	??_I2C1_MasterFsm^0,c
 31357  008EEE  C01D  FFF6         	movff	??_I2C1_MasterFsm,tblptrl
 31358  008EF2                     	if	1	;There is more than 1 active tblptr byte
 31359  008EF2  0E0F               	movlw	high __smallconst
 31360  008EF4  6EF7               	movwf	tblptrh,c
 31361  008EF6                     	endif
 31362  008EF6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 31363  008EF6  6AF8               	clrf	tblptru,c
 31364  008EF8                     	endif
 31365  008EF8                     	if	0	;tblptru may be non-zero
 31366  008EF8                     	endif
 31367  008EF8  0009               	tblrd		*+
 31368  008EFA  CFF5 F01E          	movff	tablat,??_I2C1_MasterFsm+1
 31369  008EFE  0009               	tblrd		*+
 31370  008F00  CFF5 F01F          	movff	tablat,??_I2C1_MasterFsm+2
 31371  008F04  D801               	call	u23168
 31372  008F06  D009               	goto	u23169
 31373  008F08                     u23168:
 31374  008F08  0005               	push	
 31375  008F0A  6EFA               	movwf	pclath,c
 31376  008F0C  501E               	movf	(??_I2C1_MasterFsm+1)^0,w,c
 31377  008F0E  6EFD               	movwf	tosl,c
 31378  008F10  501F               	movf	(??_I2C1_MasterFsm+2)^0,w,c
 31379  008F12  6EFE               	movwf	tosh,c
 31380  008F14  6AFF               	clrf	tosu,c
 31381  008F16  50FA               	movf	pclath,w,c
 31382  008F18  0012               	return		;indir
 31383  008F1A                     u23169:
 31384  008F1A  0102               	movlb	2	; () banked
 31385  008F1C  6F5D               	movwf	(_I2C1_Status+33)& (0+255),b
 31386                           
 31387                           ; BSR set to: 2
 31388  008F1E  0012               	return		;funcret
 31389  008F20                     __end_of_I2C1_MasterFsm:
 31390                           	callstack 0
 31391                           
 31392 ;; *************** function _I2C1_DO_ADDRESS_NACK *****************
 31393 ;; Defined at:
 31394 ;;		line 500 in file "mcc_generated_files/i2c1_master.c"
 31395 ;; Parameters:    Size  Location     Type
 31396 ;;		None
 31397 ;; Auto vars:     Size  Location     Type
 31398 ;;		None
 31399 ;; Return value:  Size  Location     Type
 31400 ;;                  1    wreg      enum E10442
 31401 ;; Registers used:
 31402 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 31403 ;; Tracked objects:
 31404 ;;		On entry : 3F/2
 31405 ;;		On exit  : 0/0
 31406 ;;		Unchanged: 0/0
 31407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31408 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31409 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31410 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31411 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31412 ;;Total ram usage:        2 bytes
 31413 ;; Hardware stack levels used: 1
 31414 ;; Hardware stack levels required when called: 7
 31415 ;; This function calls:
 31416 ;;		Absolute function
 31417 ;;		_I2C1_CallbackReturnReset
 31418 ;;		_I2C1_CallbackReturnStop
 31419 ;;		_I2C1_DO_SEND_RESTART
 31420 ;;		_I2C1_DO_SEND_STOP
 31421 ;;		_rd1RegCompleteHandler
 31422 ;;		_rd1RegCompleteHandler@i2c1_master_example$F500
 31423 ;;		_rd2RegCompleteHandler
 31424 ;;		_rd2RegCompleteHandler@i2c1_master_example$F511
 31425 ;;		_rdBlkRegCompleteHandler
 31426 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F535
 31427 ;;		_wr1RegCompleteHandler
 31428 ;;		_wr1RegCompleteHandler@i2c1_master_example$F517
 31429 ;;		_wr2RegCompleteHandler
 31430 ;;		_wr2RegCompleteHandler@i2c1_master_example$F523
 31431 ;; This function is called by:
 31432 ;;		_I2C1_MasterFsm
 31433 ;; This function uses a non-reentrant model
 31434 ;;
 31435                           
 31436                           	psect	text141
 31437  009060                     __ptext141:
 31438                           	callstack 0
 31439  009060                     _I2C1_DO_ADDRESS_NACK:
 31440                           	callstack 14
 31441                           
 31442                           ; BSR set to: 2
 31443                           ;mcc_generated_files/i2c1_master.c: 502:     I2C1_Status.addressNackCheck = 0;
 31444                           
 31445                           ; BSR set to: 2
 31446                           ;incstack = 0
 31447  009060  915F               	bcf	(_I2C1_Status+35)& (0+255),0,b
 31448                           
 31449                           ; BSR set to: 2
 31450                           ;mcc_generated_files/i2c1_master.c: 503:     I2C1_Status.error = I2C1_FAIL;
 31451  009062  0E02               	movlw	2
 31452  009064  6F5E               	movwf	(_I2C1_Status+34)& (0+255),b
 31453                           
 31454                           ;mcc_generated_files/i2c1_master.c: 504:     switch(I2C1_Status.callbackTable[I2C1_ADDR_
      +                          NACK](I2C1_Status.callbackPayload[I2C1_ADDR_NACK]))
 31455  009066  D006               	goto	l20221
 31456  009068                     l20211:
 31457                           
 31458                           ;mcc_generated_files/i2c1_master.c: 508:             return I2C1_DO_SEND_RESTART();
 31459  009068  EC10  F04E         	call	_I2C1_DO_SEND_RESTART	;wreg free
 31460  00906C  0012               	return	
 31461  00906E                     l20215:
 31462                           
 31463                           ;mcc_generated_files/i2c1_master.c: 510:             return I2C1_DO_SEND_STOP();
 31464  00906E  EC0C  F04E         	call	_I2C1_DO_SEND_STOP	;wreg free
 31465  009072  0012               	return	
 31466  009074                     l20221:
 31467                           
 31468                           ; BSR set to: 2
 31469  009074  C24C  F019         	movff	_I2C1_Status+16,I2C1_CallbackReturnReset@funPtr
 31470  009078  C24D  F01A         	movff	_I2C1_Status+17,I2C1_CallbackReturnReset@funPtr+1
 31471  00907C  D801               	call	u23128
 31472  00907E  D009               	goto	u23129
 31473  009080                     u23128:
 31474  009080  0005               	push	
 31475  009082  6EFA               	movwf	pclath,c
 31476  009084  5140               	movf	(_I2C1_Status+4)& (0+255),w,b
 31477  009086  6EFD               	movwf	tosl,c
 31478  009088  5141               	movf	(_I2C1_Status+5)& (0+255),w,b
 31479  00908A  6EFE               	movwf	tosh,c
 31480  00908C  6AFF               	clrf	tosu,c
 31481  00908E  50FA               	movf	pclath,w,c
 31482  009090  0012               	return		;indir
 31483  009092                     u23129:
 31484  009092  6E1B               	movwf	??_I2C1_DO_ADDRESS_NACK^0,c
 31485  009094  6A1C               	clrf	(??_I2C1_DO_ADDRESS_NACK+1)^0,c
 31486                           
 31487                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 31488                           ; Switch size 1, requested type "simple"
 31489                           ; Number of cases is 1, Range of values is 0 to 0
 31490                           ; switch strategies available:
 31491                           ; Name         Instructions Cycles
 31492                           ; simple_byte            4     3 (average)
 31493                           ;	Chosen strategy is simple_byte
 31494  009096  501C               	movf	(??_I2C1_DO_ADDRESS_NACK+1)^0,w,c
 31495  009098  0A00               	xorlw	0	; case 0
 31496  00909A  A4D8               	btfss	status,2,c
 31497  00909C  D7E8               	goto	l20215
 31498                           
 31499                           ; Switch size 1, requested type "simple"
 31500                           ; Number of cases is 2, Range of values is 2 to 3
 31501                           ; switch strategies available:
 31502                           ; Name         Instructions Cycles
 31503                           ; simple_byte            7     4 (average)
 31504                           ;	Chosen strategy is simple_byte
 31505  00909E  501B               	movf	??_I2C1_DO_ADDRESS_NACK^0,w,c
 31506  0090A0  0A02               	xorlw	2	; case 2
 31507  0090A2  B4D8               	btfsc	status,2,c
 31508  0090A4  D7E1               	goto	l20211
 31509  0090A6  0A01               	xorlw	1	; case 3
 31510  0090A8  B4D8               	btfsc	status,2,c
 31511  0090AA  D7DE               	goto	l20211
 31512  0090AC  D7E0               	goto	l20215
 31513  0090AE                     __end_of_I2C1_DO_ADDRESS_NACK:
 31514                           	callstack 0
 31515                           
 31516 ;; *************** function _I2C1_DO_RESET *****************
 31517 ;; Defined at:
 31518 ;;		line 494 in file "mcc_generated_files/i2c1_master.c"
 31519 ;; Parameters:    Size  Location     Type
 31520 ;;		None
 31521 ;; Auto vars:     Size  Location     Type
 31522 ;;		None
 31523 ;; Return value:  Size  Location     Type
 31524 ;;                  1    wreg      enum E10442
 31525 ;; Registers used:
 31526 ;;		wreg, status,2
 31527 ;; Tracked objects:
 31528 ;;		On entry : 3F/2
 31529 ;;		On exit  : 3F/2
 31530 ;;		Unchanged: 0/0
 31531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31535 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31536 ;;Total ram usage:        0 bytes
 31537 ;; Hardware stack levels used: 1
 31538 ;; Hardware stack levels required when called: 4
 31539 ;; This function calls:
 31540 ;;		Nothing
 31541 ;; This function is called by:
 31542 ;;		_I2C1_MasterFsm
 31543 ;; This function uses a non-reentrant model
 31544 ;;
 31545                           
 31546                           	psect	text142
 31547  009BD2                     __ptext142:
 31548                           	callstack 0
 31549  009BD2                     _I2C1_DO_RESET:
 31550                           	callstack 17
 31551                           
 31552                           ; BSR set to: 2
 31553                           ;mcc_generated_files/i2c1_master.c: 496:     I2C1_Status.busy = 0;
 31554                           
 31555                           ;incstack = 0
 31556  009BD2  935F               	bcf	(_I2C1_Status+35)& (0+255),1,b
 31557                           
 31558                           ; BSR set to: 2
 31559                           ;mcc_generated_files/i2c1_master.c: 497:     I2C1_Status.error = I2C1_NOERR;
 31560  009BD4  0E00               	movlw	0
 31561  009BD6  6F5E               	movwf	(_I2C1_Status+34)& (0+255),b
 31562                           
 31563                           ; BSR set to: 2
 31564                           ;mcc_generated_files/i2c1_master.c: 498:     return I2C1_RESET;
 31565  009BD8  0E0E               	movlw	14
 31566                           
 31567                           ; BSR set to: 2
 31568  009BDA  0012               	return		;funcret
 31569  009BDC                     __end_of_I2C1_DO_RESET:
 31570                           	callstack 0
 31571                           
 31572 ;; *************** function _I2C1_DO_RX_NACK_RESTART *****************
 31573 ;; Defined at:
 31574 ;;		line 488 in file "mcc_generated_files/i2c1_master.c"
 31575 ;; Parameters:    Size  Location     Type
 31576 ;;		None
 31577 ;; Auto vars:     Size  Location     Type
 31578 ;;		None
 31579 ;; Return value:  Size  Location     Type
 31580 ;;                  1    wreg      enum E10442
 31581 ;; Registers used:
 31582 ;;		wreg, cstack
 31583 ;; Tracked objects:
 31584 ;;		On entry : 0/2
 31585 ;;		On exit  : 0/0
 31586 ;;		Unchanged: 0/0
 31587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31591 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31592 ;;Total ram usage:        0 bytes
 31593 ;; Hardware stack levels used: 1
 31594 ;; Hardware stack levels required when called: 5
 31595 ;; This function calls:
 31596 ;;		_I2C1_MasterSendNack
 31597 ;; This function is called by:
 31598 ;;		_I2C1_DO_RX
 31599 ;;		_I2C1_MasterFsm
 31600 ;; This function uses a non-reentrant model
 31601 ;;
 31602                           
 31603                           	psect	text143
 31604  009C00                     __ptext143:
 31605                           	callstack 0
 31606  009C00                     _I2C1_DO_RX_NACK_RESTART:
 31607                           	callstack 16
 31608                           
 31609                           ;mcc_generated_files/i2c1_master.c: 490:     I2C1_MasterSendNack();
 31610                           
 31611                           ; BSR set to: 2
 31612                           ;incstack = 0
 31613  009C00  EC2F  F04E         	call	_I2C1_MasterSendNack	;wreg free
 31614                           
 31615                           ;mcc_generated_files/i2c1_master.c: 491:     return I2C1_SEND_RESTART;
 31616  009C04  0E09               	movlw	9
 31617  009C06  0012               	return		;funcret
 31618  009C08                     __end_of_I2C1_DO_RX_NACK_RESTART:
 31619                           	callstack 0
 31620                           
 31621 ;; *************** function _I2C1_DO_RX_NACK_STOP *****************
 31622 ;; Defined at:
 31623 ;;		line 482 in file "mcc_generated_files/i2c1_master.c"
 31624 ;; Parameters:    Size  Location     Type
 31625 ;;		None
 31626 ;; Auto vars:     Size  Location     Type
 31627 ;;		None
 31628 ;; Return value:  Size  Location     Type
 31629 ;;                  1    wreg      enum E10442
 31630 ;; Registers used:
 31631 ;;		wreg, cstack
 31632 ;; Tracked objects:
 31633 ;;		On entry : 0/2
 31634 ;;		On exit  : 0/0
 31635 ;;		Unchanged: 0/0
 31636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31640 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31641 ;;Total ram usage:        0 bytes
 31642 ;; Hardware stack levels used: 1
 31643 ;; Hardware stack levels required when called: 5
 31644 ;; This function calls:
 31645 ;;		_I2C1_MasterSendNack
 31646 ;; This function is called by:
 31647 ;;		_I2C1_DO_RX
 31648 ;;		_I2C1_MasterFsm
 31649 ;; This function uses a non-reentrant model
 31650 ;;
 31651                           
 31652                           	psect	text144
 31653  009C08                     __ptext144:
 31654                           	callstack 0
 31655  009C08                     _I2C1_DO_RX_NACK_STOP:
 31656                           	callstack 16
 31657                           
 31658                           ;mcc_generated_files/i2c1_master.c: 484:     I2C1_MasterSendNack();
 31659                           
 31660                           ;incstack = 0
 31661  009C08  EC2F  F04E         	call	_I2C1_MasterSendNack	;wreg free
 31662                           
 31663                           ;mcc_generated_files/i2c1_master.c: 485:     return I2C1_SEND_STOP;
 31664  009C0C  0E0A               	movlw	10
 31665  009C0E  0012               	return		;funcret
 31666  009C10                     __end_of_I2C1_DO_RX_NACK_STOP:
 31667                           	callstack 0
 31668                           
 31669 ;; *************** function _I2C1_DO_RX_ACK *****************
 31670 ;; Defined at:
 31671 ;;		line 475 in file "mcc_generated_files/i2c1_master.c"
 31672 ;; Parameters:    Size  Location     Type
 31673 ;;		None
 31674 ;; Auto vars:     Size  Location     Type
 31675 ;;		None
 31676 ;; Return value:  Size  Location     Type
 31677 ;;                  1    wreg      enum E10442
 31678 ;; Registers used:
 31679 ;;		wreg, cstack
 31680 ;; Tracked objects:
 31681 ;;		On entry : 3F/2
 31682 ;;		On exit  : 3F/2
 31683 ;;		Unchanged: 3F/0
 31684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31688 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31689 ;;Total ram usage:        0 bytes
 31690 ;; Hardware stack levels used: 1
 31691 ;; Hardware stack levels required when called: 5
 31692 ;; This function calls:
 31693 ;;		_I2C1_MasterSendAck
 31694 ;; This function is called by:
 31695 ;;		_I2C1_MasterFsm
 31696 ;; This function uses a non-reentrant model
 31697 ;;
 31698                           
 31699                           	psect	text145
 31700  009C10                     __ptext145:
 31701                           	callstack 0
 31702  009C10                     _I2C1_DO_RX_ACK:
 31703                           	callstack 16
 31704                           
 31705                           ; BSR set to: 2
 31706                           ;mcc_generated_files/i2c1_master.c: 477:     I2C1_MasterSendAck();
 31707                           
 31708                           ;incstack = 0
 31709  009C10  EC2C  F04E         	call	_I2C1_MasterSendAck	;wreg free
 31710                           
 31711                           ; BSR set to: 2
 31712                           ;mcc_generated_files/i2c1_master.c: 478:     return I2C1_RCEN;
 31713  009C14  0E05               	movlw	5
 31714                           
 31715                           ; BSR set to: 2
 31716  009C16  0012               	return		;funcret
 31717  009C18                     __end_of_I2C1_DO_RX_ACK:
 31718                           	callstack 0
 31719                           
 31720 ;; *************** function _I2C1_DO_SEND_STOP *****************
 31721 ;; Defined at:
 31722 ;;		line 469 in file "mcc_generated_files/i2c1_master.c"
 31723 ;; Parameters:    Size  Location     Type
 31724 ;;		None
 31725 ;; Auto vars:     Size  Location     Type
 31726 ;;		None
 31727 ;; Return value:  Size  Location     Type
 31728 ;;                  1    wreg      enum E10442
 31729 ;; Registers used:
 31730 ;;		wreg, cstack
 31731 ;; Tracked objects:
 31732 ;;		On entry : 0/2
 31733 ;;		On exit  : 0/0
 31734 ;;		Unchanged: 0/0
 31735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31739 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31740 ;;Total ram usage:        0 bytes
 31741 ;; Hardware stack levels used: 1
 31742 ;; Hardware stack levels required when called: 5
 31743 ;; This function calls:
 31744 ;;		_I2C1_MasterStop
 31745 ;; This function is called by:
 31746 ;;		_I2C1_DO_TX
 31747 ;;		_I2C1_DO_TX_EMPTY
 31748 ;;		_I2C1_DO_ADDRESS_NACK
 31749 ;;		_I2C1_MasterFsm
 31750 ;; This function uses a non-reentrant model
 31751 ;;
 31752                           
 31753                           	psect	text146
 31754  009C18                     __ptext146:
 31755                           	callstack 0
 31756  009C18                     _I2C1_DO_SEND_STOP:
 31757                           	callstack 15
 31758                           
 31759                           ;mcc_generated_files/i2c1_master.c: 471:     I2C1_MasterStop();
 31760                           
 31761                           ; BSR set to: 2
 31762                           ;incstack = 0
 31763  009C18  EC47  F04E         	call	_I2C1_MasterStop	;wreg free
 31764                           
 31765                           ;mcc_generated_files/i2c1_master.c: 472:     return I2C1_IDLE;
 31766  009C1C  0E00               	movlw	0
 31767  009C1E  0012               	return		;funcret
 31768  009C20                     __end_of_I2C1_DO_SEND_STOP:
 31769                           	callstack 0
 31770                           
 31771 ;; *************** function _I2C1_DO_SEND_RESTART *****************
 31772 ;; Defined at:
 31773 ;;		line 463 in file "mcc_generated_files/i2c1_master.c"
 31774 ;; Parameters:    Size  Location     Type
 31775 ;;		None
 31776 ;; Auto vars:     Size  Location     Type
 31777 ;;		None
 31778 ;; Return value:  Size  Location     Type
 31779 ;;                  1    wreg      enum E10442
 31780 ;; Registers used:
 31781 ;;		wreg, cstack
 31782 ;; Tracked objects:
 31783 ;;		On entry : 0/2
 31784 ;;		On exit  : 0/0
 31785 ;;		Unchanged: 0/0
 31786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31790 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31791 ;;Total ram usage:        0 bytes
 31792 ;; Hardware stack levels used: 1
 31793 ;; Hardware stack levels required when called: 5
 31794 ;; This function calls:
 31795 ;;		_I2C1_MasterEnableRestart
 31796 ;; This function is called by:
 31797 ;;		_I2C1_DO_TX_EMPTY
 31798 ;;		_I2C1_DO_ADDRESS_NACK
 31799 ;;		_I2C1_MasterFsm
 31800 ;; This function uses a non-reentrant model
 31801 ;;
 31802                           
 31803                           	psect	text147
 31804  009C20                     __ptext147:
 31805                           	callstack 0
 31806  009C20                     _I2C1_DO_SEND_RESTART:
 31807                           	callstack 15
 31808                           
 31809                           ;mcc_generated_files/i2c1_master.c: 465:     I2C1_MasterEnableRestart();
 31810                           
 31811                           ;incstack = 0
 31812  009C20  EC49  F04E         	call	_I2C1_MasterEnableRestart	;wreg free
 31813                           
 31814                           ;mcc_generated_files/i2c1_master.c: 466:     return I2C1_SEND_ADR_READ;
 31815  009C24  0E01               	movlw	1
 31816  009C26  0012               	return		;funcret
 31817  009C28                     __end_of_I2C1_DO_SEND_RESTART:
 31818                           	callstack 0
 31819                           
 31820 ;; *************** function _I2C1_DO_SEND_RESTART_WRITE *****************
 31821 ;; Defined at:
 31822 ;;		line 456 in file "mcc_generated_files/i2c1_master.c"
 31823 ;; Parameters:    Size  Location     Type
 31824 ;;		None
 31825 ;; Auto vars:     Size  Location     Type
 31826 ;;		None
 31827 ;; Return value:  Size  Location     Type
 31828 ;;                  1    wreg      enum E10442
 31829 ;; Registers used:
 31830 ;;		wreg, cstack
 31831 ;; Tracked objects:
 31832 ;;		On entry : 0/2
 31833 ;;		On exit  : 0/0
 31834 ;;		Unchanged: 0/0
 31835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31837 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31839 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31840 ;;Total ram usage:        0 bytes
 31841 ;; Hardware stack levels used: 1
 31842 ;; Hardware stack levels required when called: 5
 31843 ;; This function calls:
 31844 ;;		_I2C1_MasterEnableRestart
 31845 ;; This function is called by:
 31846 ;;		_I2C1_DO_TX
 31847 ;;		_I2C1_MasterFsm
 31848 ;; This function uses a non-reentrant model
 31849 ;;
 31850                           
 31851                           	psect	text148
 31852  009C28                     __ptext148:
 31853                           	callstack 0
 31854  009C28                     _I2C1_DO_SEND_RESTART_WRITE:
 31855                           	callstack 15
 31856                           
 31857                           ;mcc_generated_files/i2c1_master.c: 458:     I2C1_MasterEnableRestart();
 31858                           
 31859                           ;incstack = 0
 31860  009C28  EC49  F04E         	call	_I2C1_MasterEnableRestart	;wreg free
 31861                           
 31862                           ;mcc_generated_files/i2c1_master.c: 459:     return I2C1_SEND_ADR_WRITE;
 31863  009C2C  0E02               	movlw	2
 31864  009C2E  0012               	return		;funcret
 31865  009C30                     __end_of_I2C1_DO_SEND_RESTART_WRITE:
 31866                           	callstack 0
 31867                           
 31868 ;; *************** function _I2C1_DO_SEND_RESTART_READ *****************
 31869 ;; Defined at:
 31870 ;;		line 450 in file "mcc_generated_files/i2c1_master.c"
 31871 ;; Parameters:    Size  Location     Type
 31872 ;;		None
 31873 ;; Auto vars:     Size  Location     Type
 31874 ;;		None
 31875 ;; Return value:  Size  Location     Type
 31876 ;;                  1    wreg      enum E10442
 31877 ;; Registers used:
 31878 ;;		wreg, cstack
 31879 ;; Tracked objects:
 31880 ;;		On entry : 0/2
 31881 ;;		On exit  : 0/0
 31882 ;;		Unchanged: 0/0
 31883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31887 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31888 ;;Total ram usage:        0 bytes
 31889 ;; Hardware stack levels used: 1
 31890 ;; Hardware stack levels required when called: 5
 31891 ;; This function calls:
 31892 ;;		_I2C1_MasterEnableRestart
 31893 ;; This function is called by:
 31894 ;;		_I2C1_DO_TX
 31895 ;;		_I2C1_MasterFsm
 31896 ;; This function uses a non-reentrant model
 31897 ;;
 31898                           
 31899                           	psect	text149
 31900  009C30                     __ptext149:
 31901                           	callstack 0
 31902  009C30                     _I2C1_DO_SEND_RESTART_READ:
 31903                           	callstack 15
 31904                           
 31905                           ;mcc_generated_files/i2c1_master.c: 452:     I2C1_MasterEnableRestart();
 31906                           
 31907                           ;incstack = 0
 31908  009C30  EC49  F04E         	call	_I2C1_MasterEnableRestart	;wreg free
 31909                           
 31910                           ;mcc_generated_files/i2c1_master.c: 453:     return I2C1_SEND_ADR_READ;
 31911  009C34  0E01               	movlw	1
 31912  009C36  0012               	return		;funcret
 31913  009C38                     __end_of_I2C1_DO_SEND_RESTART_READ:
 31914                           	callstack 0
 31915                           
 31916 ;; *************** function _I2C1_DO_RCEN *****************
 31917 ;; Defined at:
 31918 ;;		line 402 in file "mcc_generated_files/i2c1_master.c"
 31919 ;; Parameters:    Size  Location     Type
 31920 ;;		None
 31921 ;; Auto vars:     Size  Location     Type
 31922 ;;		None
 31923 ;; Return value:  Size  Location     Type
 31924 ;;                  1    wreg      enum E10442
 31925 ;; Registers used:
 31926 ;;		wreg, cstack
 31927 ;; Tracked objects:
 31928 ;;		On entry : 3F/2
 31929 ;;		On exit  : 3F/2
 31930 ;;		Unchanged: 0/0
 31931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31935 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31936 ;;Total ram usage:        0 bytes
 31937 ;; Hardware stack levels used: 1
 31938 ;; Hardware stack levels required when called: 5
 31939 ;; This function calls:
 31940 ;;		_I2C1_MasterStartRx
 31941 ;; This function is called by:
 31942 ;;		_I2C1_MasterFsm
 31943 ;; This function uses a non-reentrant model
 31944 ;;
 31945                           
 31946                           	psect	text150
 31947  009BDC                     __ptext150:
 31948                           	callstack 0
 31949  009BDC                     _I2C1_DO_RCEN:
 31950                           	callstack 16
 31951                           
 31952                           ; BSR set to: 2
 31953                           ;mcc_generated_files/i2c1_master.c: 404:     I2C1_Status.addressNackCheck = 0;
 31954                           
 31955                           ;incstack = 0
 31956  009BDC  915F               	bcf	(_I2C1_Status+35)& (0+255),0,b
 31957                           
 31958                           ; BSR set to: 2
 31959                           ;mcc_generated_files/i2c1_master.c: 405:     I2C1_MasterStartRx();
 31960  009BDE  EC41  F04E         	call	_I2C1_MasterStartRx	;wreg free
 31961                           
 31962                           ; BSR set to: 2
 31963                           ;mcc_generated_files/i2c1_master.c: 406:     return I2C1_RX;
 31964  009BE2  0E04               	movlw	4
 31965                           
 31966                           ; BSR set to: 2
 31967  009BE4  0012               	return		;funcret
 31968  009BE6                     __end_of_I2C1_DO_RCEN:
 31969                           	callstack 0
 31970                           
 31971 ;; *************** function _I2C1_DO_RX *****************
 31972 ;; Defined at:
 31973 ;;		line 378 in file "mcc_generated_files/i2c1_master.c"
 31974 ;; Parameters:    Size  Location     Type
 31975 ;;		None
 31976 ;; Auto vars:     Size  Location     Type
 31977 ;;		None
 31978 ;; Return value:  Size  Location     Type
 31979 ;;                  1    wreg      enum E10442
 31980 ;; Registers used:
 31981 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 31982 ;; Tracked objects:
 31983 ;;		On entry : 3F/2
 31984 ;;		On exit  : 0/0
 31985 ;;		Unchanged: 0/0
 31986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31989 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31990 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31991 ;;Total ram usage:        2 bytes
 31992 ;; Hardware stack levels used: 1
 31993 ;; Hardware stack levels required when called: 7
 31994 ;; This function calls:
 31995 ;;		Absolute function
 31996 ;;		_I2C1_CallbackReturnReset
 31997 ;;		_I2C1_CallbackReturnStop
 31998 ;;		_I2C1_DO_RX_NACK_RESTART
 31999 ;;		_I2C1_DO_RX_NACK_STOP
 32000 ;;		_I2C1_MasterGetRxData
 32001 ;;		_I2C1_MasterSendAck
 32002 ;;		_rd1RegCompleteHandler
 32003 ;;		_rd1RegCompleteHandler@i2c1_master_example$F500
 32004 ;;		_rd2RegCompleteHandler
 32005 ;;		_rd2RegCompleteHandler@i2c1_master_example$F511
 32006 ;;		_rdBlkRegCompleteHandler
 32007 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F535
 32008 ;;		_wr1RegCompleteHandler
 32009 ;;		_wr1RegCompleteHandler@i2c1_master_example$F517
 32010 ;;		_wr2RegCompleteHandler
 32011 ;;		_wr2RegCompleteHandler@i2c1_master_example$F523
 32012 ;; This function is called by:
 32013 ;;		_I2C1_MasterFsm
 32014 ;; This function uses a non-reentrant model
 32015 ;;
 32016                           
 32017                           	psect	text151
 32018  008530                     __ptext151:
 32019                           	callstack 0
 32020  008530                     _I2C1_DO_RX:
 32021                           	callstack 14
 32022                           
 32023                           ; BSR set to: 2
 32024                           ;mcc_generated_files/i2c1_master.c: 380:     *I2C1_Status.data_ptr++ = I2C1_MasterGetRxD
      +                          ata();
 32025                           
 32026                           ; BSR set to: 2
 32027                           ;incstack = 0
 32028  008530  EC3F  F04E         	call	_I2C1_MasterGetRxData	;wreg free
 32029  008534  C259  FFD9         	movff	_I2C1_Status+29,fsr2l
 32030  008538  C25A  FFDA         	movff	_I2C1_Status+30,fsr2h
 32031  00853C  6EDF               	movwf	indf2,c
 32032                           
 32033                           ; BSR set to: 2
 32034  00853E  4B59               	infsnz	(_I2C1_Status+29)& (0+255),f,b
 32035  008540  2B5A               	incf	(_I2C1_Status+30)& (0+255),f,b
 32036                           
 32037                           ; BSR set to: 2
 32038                           ;mcc_generated_files/i2c1_master.c: 381:     if(--I2C1_Status.data_length)
 32039  008542  075B               	decf	(_I2C1_Status+31)& (0+255),f,b
 32040  008544  A0D8               	btfss	status,0,c
 32041  008546  075C               	decf	(_I2C1_Status+32)& (0+255),f,b
 32042  008548  515B               	movf	(_I2C1_Status+31)& (0+255),w,b
 32043  00854A  115C               	iorwf	(_I2C1_Status+32)& (0+255),w,b
 32044  00854C  B4D8               	btfsc	status,2,c
 32045  00854E  D004               	goto	l690
 32046                           
 32047                           ; BSR set to: 2
 32048                           ;mcc_generated_files/i2c1_master.c: 382:     {;mcc_generated_files/i2c1_master.c: 383:  
      +                                 I2C1_MasterSendAck();
 32049  008550  EC2C  F04E         	call	_I2C1_MasterSendAck	;wreg free
 32050                           
 32051                           ; BSR set to: 2
 32052                           ;mcc_generated_files/i2c1_master.c: 384:         return I2C1_RCEN;
 32053  008554  0E05               	movlw	5
 32054  008556  0012               	return	
 32055  008558                     l690:
 32056                           
 32057                           ; BSR set to: 2
 32058                           ;mcc_generated_files/i2c1_master.c: 387:     {;mcc_generated_files/i2c1_master.c: 388:  
      +                                 I2C1_Status.bufferFree = 1;
 32059  008558  875F               	bsf	(_I2C1_Status+35)& (0+255),3,b
 32060                           
 32061                           ;mcc_generated_files/i2c1_master.c: 389:         switch(I2C1_Status.callbackTable[I2C1_D
      +                          ATA_COMPLETE](I2C1_Status.callbackPayload[I2C1_DATA_COMPLETE]))
 32062  00855A  D006               	goto	l20155
 32063  00855C                     l20145:
 32064                           
 32065                           ;mcc_generated_files/i2c1_master.c: 393:                 return I2C1_DO_RX_NACK_RESTART(
      +                          );
 32066  00855C  EC00  F04E         	call	_I2C1_DO_RX_NACK_RESTART	;wreg free
 32067  008560  0012               	return	
 32068  008562                     l20149:
 32069                           
 32070                           ;mcc_generated_files/i2c1_master.c: 397:                 return I2C1_DO_RX_NACK_STOP();
 32071  008562  EC04  F04E         	call	_I2C1_DO_RX_NACK_STOP	;wreg free
 32072  008566  0012               	return	
 32073  008568                     l20155:
 32074                           
 32075                           ; BSR set to: 2
 32076  008568  C248  F019         	movff	_I2C1_Status+12,I2C1_CallbackReturnReset@funPtr
 32077  00856C  C249  F01A         	movff	_I2C1_Status+13,I2C1_CallbackReturnReset@funPtr+1
 32078  008570  D801               	call	u23108
 32079  008572  D009               	goto	u23109
 32080  008574                     u23108:
 32081  008574  0005               	push	
 32082  008576  6EFA               	movwf	pclath,c
 32083  008578  513C               	movf	_I2C1_Status& (0+255),w,b
 32084  00857A  6EFD               	movwf	tosl,c
 32085  00857C  513D               	movf	(_I2C1_Status+1)& (0+255),w,b
 32086  00857E  6EFE               	movwf	tosh,c
 32087  008580  6AFF               	clrf	tosu,c
 32088  008582  50FA               	movf	pclath,w,c
 32089  008584  0012               	return		;indir
 32090  008586                     u23109:
 32091  008586  6E1B               	movwf	??_I2C1_DO_RX^0,c
 32092  008588  6A1C               	clrf	(??_I2C1_DO_RX+1)^0,c
 32093                           
 32094                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 32095                           ; Switch size 1, requested type "simple"
 32096                           ; Number of cases is 1, Range of values is 0 to 0
 32097                           ; switch strategies available:
 32098                           ; Name         Instructions Cycles
 32099                           ; simple_byte            4     3 (average)
 32100                           ;	Chosen strategy is simple_byte
 32101  00858A  501C               	movf	(??_I2C1_DO_RX+1)^0,w,c
 32102  00858C  0A00               	xorlw	0	; case 0
 32103  00858E  A4D8               	btfss	status,2,c
 32104  008590  D7E8               	goto	l20149
 32105                           
 32106                           ; Switch size 1, requested type "simple"
 32107                           ; Number of cases is 4, Range of values is 1 to 4
 32108                           ; switch strategies available:
 32109                           ; Name         Instructions Cycles
 32110                           ; simple_byte           13     7 (average)
 32111                           ;	Chosen strategy is simple_byte
 32112  008592  501B               	movf	??_I2C1_DO_RX^0,w,c
 32113  008594  0A01               	xorlw	1	; case 1
 32114  008596  B4D8               	btfsc	status,2,c
 32115  008598  D7E4               	goto	l20149
 32116  00859A  0A03               	xorlw	3	; case 2
 32117  00859C  B4D8               	btfsc	status,2,c
 32118  00859E  D7DE               	goto	l20145
 32119  0085A0  0A01               	xorlw	1	; case 3
 32120  0085A2  B4D8               	btfsc	status,2,c
 32121  0085A4  D7DB               	goto	l20145
 32122  0085A6  0A07               	xorlw	7	; case 4
 32123  0085A8  D7DC               	goto	l20149
 32124  0085AA                     __end_of_I2C1_DO_RX:
 32125                           	callstack 0
 32126                           
 32127 ;; *************** function _I2C1_DO_TX *****************
 32128 ;; Defined at:
 32129 ;;		line 354 in file "mcc_generated_files/i2c1_master.c"
 32130 ;; Parameters:    Size  Location     Type
 32131 ;;		None
 32132 ;; Auto vars:     Size  Location     Type
 32133 ;;		None
 32134 ;; Return value:  Size  Location     Type
 32135 ;;                  1    wreg      enum E10442
 32136 ;; Registers used:
 32137 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 32138 ;; Tracked objects:
 32139 ;;		On entry : 3F/2
 32140 ;;		On exit  : 0/0
 32141 ;;		Unchanged: 0/0
 32142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32145 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32146 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32147 ;;Total ram usage:        2 bytes
 32148 ;; Hardware stack levels used: 1
 32149 ;; Hardware stack levels required when called: 7
 32150 ;; This function calls:
 32151 ;;		Absolute function
 32152 ;;		_I2C1_CallbackReturnReset
 32153 ;;		_I2C1_CallbackReturnStop
 32154 ;;		_I2C1_DO_SEND_RESTART_READ
 32155 ;;		_I2C1_DO_SEND_RESTART_WRITE
 32156 ;;		_I2C1_DO_SEND_STOP
 32157 ;;		_I2C1_MasterIsNack
 32158 ;;		_I2C1_MasterSendTxData
 32159 ;;		_rd1RegCompleteHandler
 32160 ;;		_rd1RegCompleteHandler@i2c1_master_example$F500
 32161 ;;		_rd2RegCompleteHandler
 32162 ;;		_rd2RegCompleteHandler@i2c1_master_example$F511
 32163 ;;		_rdBlkRegCompleteHandler
 32164 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F535
 32165 ;;		_wr1RegCompleteHandler
 32166 ;;		_wr1RegCompleteHandler@i2c1_master_example$F517
 32167 ;;		_wr2RegCompleteHandler
 32168 ;;		_wr2RegCompleteHandler@i2c1_master_example$F523
 32169 ;; This function is called by:
 32170 ;;		_I2C1_MasterFsm
 32171 ;; This function uses a non-reentrant model
 32172 ;;
 32173                           
 32174                           	psect	text152
 32175  008092                     __ptext152:
 32176                           	callstack 0
 32177  008092                     _I2C1_DO_TX:
 32178                           	callstack 14
 32179                           
 32180                           ; BSR set to: 2
 32181                           ;mcc_generated_files/i2c1_master.c: 356:     if(I2C1_MasterIsNack())
 32182                           
 32183                           ;incstack = 0
 32184  008092  ECB0  F04D         	call	_I2C1_MasterIsNack	;wreg free
 32185  008096  0900               	iorlw	0
 32186  008098  A4D8               	btfss	status,2,c
 32187  00809A  D00A               	goto	l20115
 32188  00809C  D02A               	goto	l674
 32189  00809E                     l20101:
 32190                           
 32191                           ;mcc_generated_files/i2c1_master.c: 361:                 return I2C1_DO_SEND_RESTART_REA
      +                          D();
 32192  00809E  EC18  F04E         	call	_I2C1_DO_SEND_RESTART_READ	;wreg free
 32193  0080A2  0012               	return	
 32194  0080A4                     l20105:
 32195                           
 32196                           ;mcc_generated_files/i2c1_master.c: 363:                   return I2C1_DO_SEND_RESTART_W
      +                          RITE();
 32197  0080A4  EC14  F04E         	call	_I2C1_DO_SEND_RESTART_WRITE	;wreg free
 32198  0080A8  0012               	return	
 32199  0080AA                     l20109:
 32200                           
 32201                           ;mcc_generated_files/i2c1_master.c: 367:                 return I2C1_DO_SEND_STOP();
 32202  0080AA  EC0C  F04E         	call	_I2C1_DO_SEND_STOP	;wreg free
 32203  0080AE  0012               	return	
 32204  0080B0                     l20115:
 32205                           
 32206                           ; BSR set to: 2
 32207  0080B0  C24E  F019         	movff	_I2C1_Status+18,I2C1_CallbackReturnReset@funPtr
 32208  0080B4  C24F  F01A         	movff	_I2C1_Status+19,I2C1_CallbackReturnReset@funPtr+1
 32209  0080B8  D801               	call	u23078
 32210  0080BA  D009               	goto	u23079
 32211  0080BC                     u23078:
 32212  0080BC  0005               	push	
 32213  0080BE  6EFA               	movwf	pclath,c
 32214  0080C0  5142               	movf	(_I2C1_Status+6)& (0+255),w,b
 32215  0080C2  6EFD               	movwf	tosl,c
 32216  0080C4  5143               	movf	(_I2C1_Status+7)& (0+255),w,b
 32217  0080C6  6EFE               	movwf	tosh,c
 32218  0080C8  6AFF               	clrf	tosu,c
 32219  0080CA  50FA               	movf	pclath,w,c
 32220  0080CC  0012               	return		;indir
 32221  0080CE                     u23079:
 32222  0080CE  6E1B               	movwf	??_I2C1_DO_TX^0,c
 32223  0080D0  6A1C               	clrf	(??_I2C1_DO_TX+1)^0,c
 32224                           
 32225                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 32226                           ; Switch size 1, requested type "simple"
 32227                           ; Number of cases is 1, Range of values is 0 to 0
 32228                           ; switch strategies available:
 32229                           ; Name         Instructions Cycles
 32230                           ; simple_byte            4     3 (average)
 32231                           ;	Chosen strategy is simple_byte
 32232  0080D2  501C               	movf	(??_I2C1_DO_TX+1)^0,w,c
 32233  0080D4  0A00               	xorlw	0	; case 0
 32234  0080D6  A4D8               	btfss	status,2,c
 32235  0080D8  D7E8               	goto	l20109
 32236                           
 32237                           ; Switch size 1, requested type "simple"
 32238                           ; Number of cases is 4, Range of values is 1 to 4
 32239                           ; switch strategies available:
 32240                           ; Name         Instructions Cycles
 32241                           ; simple_byte           13     7 (average)
 32242                           ;	Chosen strategy is simple_byte
 32243  0080DA  501B               	movf	??_I2C1_DO_TX^0,w,c
 32244  0080DC  0A01               	xorlw	1	; case 1
 32245  0080DE  B4D8               	btfsc	status,2,c
 32246  0080E0  D7E4               	goto	l20109
 32247  0080E2  0A03               	xorlw	3	; case 2
 32248  0080E4  B4D8               	btfsc	status,2,c
 32249  0080E6  D7DB               	goto	l20101
 32250  0080E8  0A01               	xorlw	1	; case 3
 32251  0080EA  B4D8               	btfsc	status,2,c
 32252  0080EC  D7DB               	goto	l20105
 32253  0080EE  0A07               	xorlw	7	; case 4
 32254  0080F0  D7DC               	goto	l20109
 32255  0080F2                     l674:
 32256                           
 32257                           ; BSR set to: 2
 32258                           ;mcc_generated_files/i2c1_master.c: 371:     {;mcc_generated_files/i2c1_master.c: 372:  
      +                                 I2C1_Status.addressNackCheck = 0;
 32259  0080F2  915F               	bcf	(_I2C1_Status+35)& (0+255),0,b
 32260                           
 32261                           ; BSR set to: 2
 32262                           ;mcc_generated_files/i2c1_master.c: 373:         I2C1_MasterSendTxData(*I2C1_Status.data
      +                          _ptr++);
 32263  0080F4  C259  FFD9         	movff	_I2C1_Status+29,fsr2l
 32264  0080F8  C25A  FFDA         	movff	_I2C1_Status+30,fsr2h
 32265  0080FC  4B59               	infsnz	(_I2C1_Status+29)& (0+255),f,b
 32266  0080FE  2B5A               	incf	(_I2C1_Status+30)& (0+255),f,b
 32267  008100  50DF               	movf	indf2,w,c
 32268  008102  EC1C  F04E         	call	_I2C1_MasterSendTxData
 32269                           
 32270                           ;mcc_generated_files/i2c1_master.c: 374:         return (--I2C1_Status.data_length)?I2C1
      +                          _TX:I2C1_TX_EMPTY;
 32271  008106  0102               	movlb	2	; () banked
 32272  008108  075B               	decf	(_I2C1_Status+31)& (0+255),f,b
 32273  00810A  A0D8               	btfss	status,0,c
 32274  00810C  075C               	decf	(_I2C1_Status+32)& (0+255),f,b
 32275  00810E  515B               	movf	(_I2C1_Status+31)& (0+255),w,b
 32276  008110  115C               	iorwf	(_I2C1_Status+32)& (0+255),w,b
 32277  008112  A4D8               	btfss	status,2,c
 32278  008114  D002               	goto	l20123
 32279                           
 32280                           ; BSR set to: 2
 32281  008116  0E06               	movlw	6
 32282  008118  0012               	return	
 32283  00811A                     l20123:
 32284                           
 32285                           ; BSR set to: 2
 32286  00811A  0E03               	movlw	3
 32287  00811C  0012               	return		;funcret
 32288  00811E                     __end_of_I2C1_DO_TX:
 32289                           	callstack 0
 32290                           
 32291 ;; *************** function _I2C1_DO_SEND_ADR_WRITE *****************
 32292 ;; Defined at:
 32293 ;;		line 347 in file "mcc_generated_files/i2c1_master.c"
 32294 ;; Parameters:    Size  Location     Type
 32295 ;;		None
 32296 ;; Auto vars:     Size  Location     Type
 32297 ;;		None
 32298 ;; Return value:  Size  Location     Type
 32299 ;;                  1    wreg      enum E10442
 32300 ;; Registers used:
 32301 ;;		wreg, status,2, status,0, cstack
 32302 ;; Tracked objects:
 32303 ;;		On entry : 3F/2
 32304 ;;		On exit  : 0/0
 32305 ;;		Unchanged: 0/0
 32306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32310 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32311 ;;Total ram usage:        0 bytes
 32312 ;; Hardware stack levels used: 1
 32313 ;; Hardware stack levels required when called: 5
 32314 ;; This function calls:
 32315 ;;		_I2C1_MasterSendTxData
 32316 ;; This function is called by:
 32317 ;;		_I2C1_MasterFsm
 32318 ;; This function uses a non-reentrant model
 32319 ;;
 32320                           
 32321                           	psect	text153
 32322  009B44                     __ptext153:
 32323                           	callstack 0
 32324  009B44                     _I2C1_DO_SEND_ADR_WRITE:
 32325                           	callstack 16
 32326                           
 32327                           ; BSR set to: 2
 32328                           ;mcc_generated_files/i2c1_master.c: 349:     I2C1_Status.addressNackCheck = 1;
 32329                           
 32330                           ;incstack = 0
 32331  009B44  815F               	bsf	(_I2C1_Status+35)& (0+255),0,b
 32332                           
 32333                           ; BSR set to: 2
 32334                           ;mcc_generated_files/i2c1_master.c: 350:     I2C1_MasterSendTxData((uint8_t) (I2C1_Statu
      +                          s.address << 1));
 32335  009B46  5158               	movf	(_I2C1_Status+28)& (0+255),w,b
 32336  009B48  2558               	addwf	(_I2C1_Status+28)& (0+255),w,b
 32337  009B4A  EC1C  F04E         	call	_I2C1_MasterSendTxData
 32338                           
 32339                           ;mcc_generated_files/i2c1_master.c: 351:     return I2C1_TX;
 32340  009B4E  0E03               	movlw	3
 32341  009B50  0012               	return		;funcret
 32342  009B52                     __end_of_I2C1_DO_SEND_ADR_WRITE:
 32343                           	callstack 0
 32344                           
 32345 ;; *************** function _I2C1_DO_SEND_ADR_READ *****************
 32346 ;; Defined at:
 32347 ;;		line 340 in file "mcc_generated_files/i2c1_master.c"
 32348 ;; Parameters:    Size  Location     Type
 32349 ;;		None
 32350 ;; Auto vars:     Size  Location     Type
 32351 ;;		None
 32352 ;; Return value:  Size  Location     Type
 32353 ;;                  1    wreg      enum E10442
 32354 ;; Registers used:
 32355 ;;		wreg, status,0, cstack
 32356 ;; Tracked objects:
 32357 ;;		On entry : 3F/2
 32358 ;;		On exit  : 0/0
 32359 ;;		Unchanged: 0/0
 32360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32364 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32365 ;;Total ram usage:        0 bytes
 32366 ;; Hardware stack levels used: 1
 32367 ;; Hardware stack levels required when called: 5
 32368 ;; This function calls:
 32369 ;;		_I2C1_MasterSendTxData
 32370 ;; This function is called by:
 32371 ;;		_I2C1_MasterFsm
 32372 ;; This function uses a non-reentrant model
 32373 ;;
 32374                           
 32375                           	psect	text154
 32376  009B52                     __ptext154:
 32377                           	callstack 0
 32378  009B52                     _I2C1_DO_SEND_ADR_READ:
 32379                           	callstack 16
 32380                           
 32381                           ; BSR set to: 2
 32382                           ;mcc_generated_files/i2c1_master.c: 342:     I2C1_Status.addressNackCheck = 1;
 32383                           
 32384                           ;incstack = 0
 32385  009B52  815F               	bsf	(_I2C1_Status+35)& (0+255),0,b
 32386                           
 32387                           ; BSR set to: 2
 32388                           ;mcc_generated_files/i2c1_master.c: 343:     I2C1_MasterSendTxData((uint8_t) (I2C1_Statu
      +                          s.address << 1 | 1));
 32389  009B54  80D8               	bsf	status,0,c
 32390  009B56  3558               	rlcf	(_I2C1_Status+28)& (0+255),w,b
 32391  009B58  EC1C  F04E         	call	_I2C1_MasterSendTxData
 32392                           
 32393                           ;mcc_generated_files/i2c1_master.c: 344:     return I2C1_RCEN;
 32394  009B5C  0E05               	movlw	5
 32395  009B5E  0012               	return		;funcret
 32396  009B60                     __end_of_I2C1_DO_SEND_ADR_READ:
 32397                           	callstack 0
 32398                           
 32399 ;; *************** function _I2C1_DO_IDLE *****************
 32400 ;; Defined at:
 32401 ;;		line 333 in file "mcc_generated_files/i2c1_master.c"
 32402 ;; Parameters:    Size  Location     Type
 32403 ;;		None
 32404 ;; Auto vars:     Size  Location     Type
 32405 ;;		None
 32406 ;; Return value:  Size  Location     Type
 32407 ;;                  1    wreg      enum E10442
 32408 ;; Registers used:
 32409 ;;		wreg, status,2
 32410 ;; Tracked objects:
 32411 ;;		On entry : 3F/2
 32412 ;;		On exit  : 3F/2
 32413 ;;		Unchanged: 0/0
 32414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32418 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32419 ;;Total ram usage:        0 bytes
 32420 ;; Hardware stack levels used: 1
 32421 ;; Hardware stack levels required when called: 4
 32422 ;; This function calls:
 32423 ;;		Nothing
 32424 ;; This function is called by:
 32425 ;;		_I2C1_MasterFsm
 32426 ;; This function uses a non-reentrant model
 32427 ;;
 32428                           
 32429                           	psect	text155
 32430  009BE6                     __ptext155:
 32431                           	callstack 0
 32432  009BE6                     _I2C1_DO_IDLE:
 32433                           	callstack 17
 32434                           
 32435                           ; BSR set to: 2
 32436                           ;mcc_generated_files/i2c1_master.c: 335:     I2C1_Status.busy = 0;
 32437                           
 32438                           ;incstack = 0
 32439  009BE6  935F               	bcf	(_I2C1_Status+35)& (0+255),1,b
 32440                           
 32441                           ; BSR set to: 2
 32442                           ;mcc_generated_files/i2c1_master.c: 336:     I2C1_Status.error = I2C1_NOERR;
 32443  009BE8  0E00               	movlw	0
 32444  009BEA  6F5E               	movwf	(_I2C1_Status+34)& (0+255),b
 32445                           
 32446                           ; BSR set to: 2
 32447                           ;mcc_generated_files/i2c1_master.c: 337:     return I2C1_RESET;
 32448  009BEC  0E0E               	movlw	14
 32449                           
 32450                           ; BSR set to: 2
 32451  009BEE  0012               	return		;funcret
 32452  009BF0                     __end_of_I2C1_DO_IDLE:
 32453                           	callstack 0
 32454                           
 32455 ;; *************** function _I2C1_DO_TX_EMPTY *****************
 32456 ;; Defined at:
 32457 ;;		line 409 in file "mcc_generated_files/i2c1_master.c"
 32458 ;; Parameters:    Size  Location     Type
 32459 ;;		None
 32460 ;; Auto vars:     Size  Location     Type
 32461 ;;		None
 32462 ;; Return value:  Size  Location     Type
 32463 ;;                  1    wreg      enum E10442
 32464 ;; Registers used:
 32465 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 32466 ;; Tracked objects:
 32467 ;;		On entry : 3F/2
 32468 ;;		On exit  : 0/0
 32469 ;;		Unchanged: 0/0
 32470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32473 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32474 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32475 ;;Total ram usage:        2 bytes
 32476 ;; Hardware stack levels used: 1
 32477 ;; Hardware stack levels required when called: 7
 32478 ;; This function calls:
 32479 ;;		Absolute function
 32480 ;;		_I2C1_CallbackReturnReset
 32481 ;;		_I2C1_CallbackReturnStop
 32482 ;;		_I2C1_DO_SEND_RESTART
 32483 ;;		_I2C1_DO_SEND_STOP
 32484 ;;		_I2C1_MasterSetIrq
 32485 ;;		_rd1RegCompleteHandler
 32486 ;;		_rd1RegCompleteHandler@i2c1_master_example$F500
 32487 ;;		_rd2RegCompleteHandler
 32488 ;;		_rd2RegCompleteHandler@i2c1_master_example$F511
 32489 ;;		_rdBlkRegCompleteHandler
 32490 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F535
 32491 ;;		_wr1RegCompleteHandler
 32492 ;;		_wr1RegCompleteHandler@i2c1_master_example$F517
 32493 ;;		_wr2RegCompleteHandler
 32494 ;;		_wr2RegCompleteHandler@i2c1_master_example$F523
 32495 ;; This function is called by:
 32496 ;;		_I2C1_MasterFsm
 32497 ;; This function uses a non-reentrant model
 32498 ;;
 32499                           
 32500                           	psect	text156
 32501  008B4C                     __ptext156:
 32502                           	callstack 0
 32503  008B4C                     _I2C1_DO_TX_EMPTY:
 32504                           	callstack 14
 32505                           
 32506                           ; BSR set to: 2
 32507                           ;mcc_generated_files/i2c1_master.c: 411:     I2C1_Status.bufferFree = 1;
 32508                           
 32509                           ; BSR set to: 2
 32510                           ;incstack = 0
 32511  008B4C  875F               	bsf	(_I2C1_Status+35)& (0+255),3,b
 32512                           
 32513                           ;mcc_generated_files/i2c1_master.c: 412:     switch(I2C1_Status.callbackTable[I2C1_DATA_
      +                          COMPLETE](I2C1_Status.callbackPayload[I2C1_DATA_COMPLETE]))
 32514  008B4E  D00A               	goto	l20187
 32515  008B50                     l20171:
 32516                           
 32517                           ;mcc_generated_files/i2c1_master.c: 416:             return I2C1_DO_SEND_RESTART();
 32518  008B50  EC10  F04E         	call	_I2C1_DO_SEND_RESTART	;wreg free
 32519  008B54  0012               	return	
 32520  008B56                     l20175:
 32521                           
 32522                           ;mcc_generated_files/i2c1_master.c: 418:             I2C1_MasterSetIrq();
 32523  008B56  EC29  F04E         	call	_I2C1_MasterSetIrq	;wreg free
 32524                           
 32525                           ; BSR set to: 14
 32526                           ;mcc_generated_files/i2c1_master.c: 419:             return I2C1_TX;
 32527  008B5A  0E03               	movlw	3
 32528  008B5C  0012               	return	
 32529  008B5E                     l20181:
 32530                           
 32531                           ;mcc_generated_files/i2c1_master.c: 422:             return I2C1_DO_SEND_STOP();
 32532  008B5E  EC0C  F04E         	call	_I2C1_DO_SEND_STOP	;wreg free
 32533  008B62  0012               	return	
 32534  008B64                     l20187:
 32535                           
 32536                           ; BSR set to: 2
 32537  008B64  C248  F019         	movff	_I2C1_Status+12,I2C1_CallbackReturnReset@funPtr
 32538  008B68  C249  F01A         	movff	_I2C1_Status+13,I2C1_CallbackReturnReset@funPtr+1
 32539  008B6C  D801               	call	u23118
 32540  008B6E  D009               	goto	u23119
 32541  008B70                     u23118:
 32542  008B70  0005               	push	
 32543  008B72  6EFA               	movwf	pclath,c
 32544  008B74  513C               	movf	_I2C1_Status& (0+255),w,b
 32545  008B76  6EFD               	movwf	tosl,c
 32546  008B78  513D               	movf	(_I2C1_Status+1)& (0+255),w,b
 32547  008B7A  6EFE               	movwf	tosh,c
 32548  008B7C  6AFF               	clrf	tosu,c
 32549  008B7E  50FA               	movf	pclath,w,c
 32550  008B80  0012               	return		;indir
 32551  008B82                     u23119:
 32552  008B82  6E1B               	movwf	??_I2C1_DO_TX_EMPTY^0,c
 32553  008B84  6A1C               	clrf	(??_I2C1_DO_TX_EMPTY+1)^0,c
 32554                           
 32555                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 32556                           ; Switch size 1, requested type "simple"
 32557                           ; Number of cases is 1, Range of values is 0 to 0
 32558                           ; switch strategies available:
 32559                           ; Name         Instructions Cycles
 32560                           ; simple_byte            4     3 (average)
 32561                           ;	Chosen strategy is simple_byte
 32562  008B86  501C               	movf	(??_I2C1_DO_TX_EMPTY+1)^0,w,c
 32563  008B88  0A00               	xorlw	0	; case 0
 32564  008B8A  A4D8               	btfss	status,2,c
 32565  008B8C  D7E8               	goto	l20181
 32566                           
 32567                           ; Switch size 1, requested type "simple"
 32568                           ; Number of cases is 4, Range of values is 1 to 4
 32569                           ; switch strategies available:
 32570                           ; Name         Instructions Cycles
 32571                           ; simple_byte           13     7 (average)
 32572                           ;	Chosen strategy is simple_byte
 32573  008B8E  501B               	movf	??_I2C1_DO_TX_EMPTY^0,w,c
 32574  008B90  0A01               	xorlw	1	; case 1
 32575  008B92  B4D8               	btfsc	status,2,c
 32576  008B94  D7E4               	goto	l20181
 32577  008B96  0A03               	xorlw	3	; case 2
 32578  008B98  B4D8               	btfsc	status,2,c
 32579  008B9A  D7DA               	goto	l20171
 32580  008B9C  0A01               	xorlw	1	; case 3
 32581  008B9E  B4D8               	btfsc	status,2,c
 32582  008BA0  D7D7               	goto	l20171
 32583  008BA2  0A07               	xorlw	7	; case 4
 32584  008BA4  B4D8               	btfsc	status,2,c
 32585  008BA6  D7D7               	goto	l20175
 32586  008BA8  D7DA               	goto	l20181
 32587  008BAA                     __end_of_I2C1_DO_TX_EMPTY:
 32588                           	callstack 0
 32589                           
 32590 ;; *************** function _I2C1_MasterSetIrq *****************
 32591 ;; Defined at:
 32592 ;;		line 645 in file "mcc_generated_files/i2c1_master.c"
 32593 ;; Parameters:    Size  Location     Type
 32594 ;;		None
 32595 ;; Auto vars:     Size  Location     Type
 32596 ;;		None
 32597 ;; Return value:  Size  Location     Type
 32598 ;;                  1    wreg      void 
 32599 ;; Registers used:
 32600 ;;		None
 32601 ;; Tracked objects:
 32602 ;;		On entry : 0/2
 32603 ;;		On exit  : 3F/E
 32604 ;;		Unchanged: 0/0
 32605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32606 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32607 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32609 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32610 ;;Total ram usage:        0 bytes
 32611 ;; Hardware stack levels used: 1
 32612 ;; Hardware stack levels required when called: 4
 32613 ;; This function calls:
 32614 ;;		Nothing
 32615 ;; This function is called by:
 32616 ;;		_I2C1_DO_TX_EMPTY
 32617 ;; This function uses a non-reentrant model
 32618 ;;
 32619                           
 32620                           	psect	text157
 32621  009C52                     __ptext157:
 32622                           	callstack 0
 32623  009C52                     _I2C1_MasterSetIrq:
 32624                           	callstack 16
 32625                           
 32626                           ;mcc_generated_files/i2c1_master.c: 647:     PIR3bits.SSP1IF = 1;
 32627                           
 32628                           ;incstack = 0
 32629  009C52  010E               	movlb	14	; () banked
 32630  009C54  81CD               	bsf	205,0,b	;volatile
 32631                           
 32632                           ; BSR set to: 14
 32633  009C56  0012               	return		;funcret
 32634  009C58                     __end_of_I2C1_MasterSetIrq:
 32635                           	callstack 0
 32636                           
 32637 ;; *************** function _I2C1_MasterIsNack *****************
 32638 ;; Defined at:
 32639 ;;		line 598 in file "mcc_generated_files/i2c1_master.c"
 32640 ;; Parameters:    Size  Location     Type
 32641 ;;		None
 32642 ;; Auto vars:     Size  Location     Type
 32643 ;;		None
 32644 ;; Return value:  Size  Location     Type
 32645 ;;                  1    wreg      _Bool 
 32646 ;; Registers used:
 32647 ;;		wreg
 32648 ;; Tracked objects:
 32649 ;;		On entry : 3F/2
 32650 ;;		On exit  : 3F/2
 32651 ;;		Unchanged: 3F/0
 32652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32656 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32657 ;;Total ram usage:        0 bytes
 32658 ;; Hardware stack levels used: 1
 32659 ;; Hardware stack levels required when called: 4
 32660 ;; This function calls:
 32661 ;;		Nothing
 32662 ;; This function is called by:
 32663 ;;		_I2C1_MasterFsm
 32664 ;;		_I2C1_DO_TX
 32665 ;; This function uses a non-reentrant model
 32666 ;;
 32667                           
 32668                           	psect	text158
 32669  009B60                     __ptext158:
 32670                           	callstack 0
 32671  009B60                     _I2C1_MasterIsNack:
 32672                           	callstack 17
 32673                           
 32674                           ; BSR set to: 2
 32675                           ;mcc_generated_files/i2c1_master.c: 600:     return SSP1CON2bits.ACKSTAT;
 32676                           
 32677                           ; BSR set to: 14
 32678                           ;incstack = 0
 32679  009B60  AC97               	btfss	151,6,c	;volatile
 32680  009B62  D002               	goto	u23050
 32681  009B64  0E01               	movlw	1
 32682  009B66  0012               	return	
 32683  009B68                     u23050:
 32684  009B68  0E00               	movlw	0
 32685                           
 32686                           ; BSR set to: 2
 32687  009B6A  0012               	return		;funcret
 32688  009B6C                     __end_of_I2C1_MasterIsNack:
 32689                           	callstack 0
 32690                           
 32691 ;; *************** function _I2C1_MasterSendTxData *****************
 32692 ;; Defined at:
 32693 ;;		line 568 in file "mcc_generated_files/i2c1_master.c"
 32694 ;; Parameters:    Size  Location     Type
 32695 ;;  data            1    wreg     unsigned char 
 32696 ;; Auto vars:     Size  Location     Type
 32697 ;;  data            1   15[COMRAM] unsigned char 
 32698 ;; Return value:  Size  Location     Type
 32699 ;;                  1    wreg      void 
 32700 ;; Registers used:
 32701 ;;		wreg
 32702 ;; Tracked objects:
 32703 ;;		On entry : 3F/2
 32704 ;;		On exit  : 0/0
 32705 ;;		Unchanged: 0/0
 32706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32708 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32710 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32711 ;;Total ram usage:        1 bytes
 32712 ;; Hardware stack levels used: 1
 32713 ;; Hardware stack levels required when called: 4
 32714 ;; This function calls:
 32715 ;;		Nothing
 32716 ;; This function is called by:
 32717 ;;		_I2C1_DO_SEND_ADR_READ
 32718 ;;		_I2C1_DO_SEND_ADR_WRITE
 32719 ;;		_I2C1_DO_TX
 32720 ;; This function uses a non-reentrant model
 32721 ;;
 32722                           
 32723                           	psect	text159
 32724  009C38                     __ptext159:
 32725                           	callstack 0
 32726  009C38                     _I2C1_MasterSendTxData:
 32727                           	callstack 16
 32728                           
 32729                           ; BSR set to: 2
 32730                           ;incstack = 0
 32731                           ;I2C1_MasterSendTxData@data stored from wreg
 32732  009C38  6E10               	movwf	I2C1_MasterSendTxData@data^0,c
 32733                           
 32734                           ;mcc_generated_files/i2c1_master.c: 568: static __attribute__((inline)) void I2C1_Master
      +                          SendTxData(uint8_t data);mcc_generated_files/i2c1_master.c: 569: {;mcc_generated_files/i
      +                          2c1_master.c: 570:     SSP1BUF = data;
 32735  009C3A  C010  FF92         	movff	I2C1_MasterSendTxData@data,3986	;volatile
 32736  009C3E  0012               	return		;funcret
 32737  009C40                     __end_of_I2C1_MasterSendTxData:
 32738                           	callstack 0
 32739                           
 32740 ;; *************** function _I2C1_MasterSendAck *****************
 32741 ;; Defined at:
 32742 ;;		line 603 in file "mcc_generated_files/i2c1_master.c"
 32743 ;; Parameters:    Size  Location     Type
 32744 ;;		None
 32745 ;; Auto vars:     Size  Location     Type
 32746 ;;		None
 32747 ;; Return value:  Size  Location     Type
 32748 ;;                  1    wreg      void 
 32749 ;; Registers used:
 32750 ;;		None
 32751 ;; Tracked objects:
 32752 ;;		On entry : 3F/2
 32753 ;;		On exit  : 3F/2
 32754 ;;		Unchanged: 3F/0
 32755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32759 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32760 ;;Total ram usage:        0 bytes
 32761 ;; Hardware stack levels used: 1
 32762 ;; Hardware stack levels required when called: 4
 32763 ;; This function calls:
 32764 ;;		Nothing
 32765 ;; This function is called by:
 32766 ;;		_I2C1_DO_RX
 32767 ;;		_I2C1_DO_RX_ACK
 32768 ;; This function uses a non-reentrant model
 32769 ;;
 32770                           
 32771                           	psect	text160
 32772  009C58                     __ptext160:
 32773                           	callstack 0
 32774  009C58                     _I2C1_MasterSendAck:
 32775                           	callstack 16
 32776                           
 32777                           ; BSR set to: 2
 32778                           ;mcc_generated_files/i2c1_master.c: 605:     SSP1CON2bits.ACKDT = 0;
 32779                           
 32780                           ;incstack = 0
 32781  009C58  9A97               	bcf	151,5,c	;volatile
 32782                           
 32783                           ;mcc_generated_files/i2c1_master.c: 606:     SSP1CON2bits.ACKEN = 1;
 32784  009C5A  8897               	bsf	151,4,c	;volatile
 32785                           
 32786                           ; BSR set to: 2
 32787  009C5C  0012               	return		;funcret
 32788  009C5E                     __end_of_I2C1_MasterSendAck:
 32789                           	callstack 0
 32790                           
 32791 ;; *************** function _I2C1_MasterGetRxData *****************
 32792 ;; Defined at:
 32793 ;;		line 563 in file "mcc_generated_files/i2c1_master.c"
 32794 ;; Parameters:    Size  Location     Type
 32795 ;;		None
 32796 ;; Auto vars:     Size  Location     Type
 32797 ;;		None
 32798 ;; Return value:  Size  Location     Type
 32799 ;;                  1    wreg      unsigned char 
 32800 ;; Registers used:
 32801 ;;		wreg, status,2
 32802 ;; Tracked objects:
 32803 ;;		On entry : 3F/2
 32804 ;;		On exit  : 3F/2
 32805 ;;		Unchanged: 3F/0
 32806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32810 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32811 ;;Total ram usage:        0 bytes
 32812 ;; Hardware stack levels used: 1
 32813 ;; Hardware stack levels required when called: 4
 32814 ;; This function calls:
 32815 ;;		Nothing
 32816 ;; This function is called by:
 32817 ;;		_I2C1_DO_RX
 32818 ;; This function uses a non-reentrant model
 32819 ;;
 32820                           
 32821                           	psect	text161
 32822  009C7E                     __ptext161:
 32823                           	callstack 0
 32824  009C7E                     _I2C1_MasterGetRxData:
 32825                           	callstack 16
 32826                           
 32827                           ; BSR set to: 2
 32828                           ;mcc_generated_files/i2c1_master.c: 565:     return SSP1BUF;
 32829                           
 32830                           ; BSR set to: 2
 32831                           ;incstack = 0
 32832  009C7E  5092               	movf	146,w,c	;volatile
 32833                           
 32834                           ; BSR set to: 2
 32835  009C80  0012               	return		;funcret
 32836  009C82                     __end_of_I2C1_MasterGetRxData:
 32837                           	callstack 0
 32838                           
 32839 ;; *************** function _I2C1_MasterSendNack *****************
 32840 ;; Defined at:
 32841 ;;		line 609 in file "mcc_generated_files/i2c1_master.c"
 32842 ;; Parameters:    Size  Location     Type
 32843 ;;		None
 32844 ;; Auto vars:     Size  Location     Type
 32845 ;;		None
 32846 ;; Return value:  Size  Location     Type
 32847 ;;                  1    wreg      void 
 32848 ;; Registers used:
 32849 ;;		None
 32850 ;; Tracked objects:
 32851 ;;		On entry : 0/2
 32852 ;;		On exit  : 0/0
 32853 ;;		Unchanged: 0/0
 32854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32858 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32859 ;;Total ram usage:        0 bytes
 32860 ;; Hardware stack levels used: 1
 32861 ;; Hardware stack levels required when called: 4
 32862 ;; This function calls:
 32863 ;;		Nothing
 32864 ;; This function is called by:
 32865 ;;		_I2C1_DO_RX_NACK_STOP
 32866 ;;		_I2C1_DO_RX_NACK_RESTART
 32867 ;; This function uses a non-reentrant model
 32868 ;;
 32869                           
 32870                           	psect	text162
 32871  009C5E                     __ptext162:
 32872                           	callstack 0
 32873  009C5E                     _I2C1_MasterSendNack:
 32874                           	callstack 16
 32875                           
 32876                           ;mcc_generated_files/i2c1_master.c: 611:     SSP1CON2bits.ACKDT = 1;
 32877                           
 32878                           ; BSR set to: 2
 32879                           ;incstack = 0
 32880  009C5E  8A97               	bsf	151,5,c	;volatile
 32881                           
 32882                           ;mcc_generated_files/i2c1_master.c: 612:     SSP1CON2bits.ACKEN = 1;
 32883  009C60  8897               	bsf	151,4,c	;volatile
 32884  009C62  0012               	return		;funcret
 32885  009C64                     __end_of_I2C1_MasterSendNack:
 32886                           	callstack 0
 32887                           
 32888 ;; *************** function _I2C1_MasterStartRx *****************
 32889 ;; Defined at:
 32890 ;;		line 583 in file "mcc_generated_files/i2c1_master.c"
 32891 ;; Parameters:    Size  Location     Type
 32892 ;;		None
 32893 ;; Auto vars:     Size  Location     Type
 32894 ;;		None
 32895 ;; Return value:  Size  Location     Type
 32896 ;;                  1    wreg      void 
 32897 ;; Registers used:
 32898 ;;		None
 32899 ;; Tracked objects:
 32900 ;;		On entry : 3F/2
 32901 ;;		On exit  : 3F/2
 32902 ;;		Unchanged: 3F/0
 32903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32907 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32908 ;;Total ram usage:        0 bytes
 32909 ;; Hardware stack levels used: 1
 32910 ;; Hardware stack levels required when called: 4
 32911 ;; This function calls:
 32912 ;;		Nothing
 32913 ;; This function is called by:
 32914 ;;		_I2C1_DO_RCEN
 32915 ;; This function uses a non-reentrant model
 32916 ;;
 32917                           
 32918                           	psect	text163
 32919  009C82                     __ptext163:
 32920                           	callstack 0
 32921  009C82                     _I2C1_MasterStartRx:
 32922                           	callstack 16
 32923                           
 32924                           ; BSR set to: 2
 32925                           ;mcc_generated_files/i2c1_master.c: 585:     SSP1CON2bits.RCEN = 1;
 32926                           
 32927                           ;incstack = 0
 32928  009C82  8697               	bsf	151,3,c	;volatile
 32929                           
 32930                           ; BSR set to: 2
 32931  009C84  0012               	return		;funcret
 32932  009C86                     __end_of_I2C1_MasterStartRx:
 32933                           	callstack 0
 32934                           
 32935 ;; *************** function _I2C1_CallbackReturnReset *****************
 32936 ;; Defined at:
 32937 ;;		line 525 in file "mcc_generated_files/i2c1_master.c"
 32938 ;; Parameters:    Size  Location     Type
 32939 ;;  funPtr          2   24[COMRAM] PTR void 
 32940 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 32941 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 32942 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 32943 ;; Auto vars:     Size  Location     Type
 32944 ;;		None
 32945 ;; Return value:  Size  Location     Type
 32946 ;;                  1    wreg      enum E360
 32947 ;; Registers used:
 32948 ;;		wreg
 32949 ;; Tracked objects:
 32950 ;;		On entry : 3F/2
 32951 ;;		On exit  : 3F/2
 32952 ;;		Unchanged: 3F/0
 32953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32954 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32955 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32957 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32958 ;;Total ram usage:        2 bytes
 32959 ;; Hardware stack levels used: 1
 32960 ;; Hardware stack levels required when called: 4
 32961 ;; This function calls:
 32962 ;;		Nothing
 32963 ;; This function is called by:
 32964 ;;		_I2C1_Open
 32965 ;;		_I2C1_DO_TX
 32966 ;;		_I2C1_DO_RX
 32967 ;;		_I2C1_DO_TX_EMPTY
 32968 ;;		_I2C1_DO_ADDRESS_NACK
 32969 ;; This function uses a non-reentrant model
 32970 ;;
 32971                           
 32972                           	psect	text164
 32973  009C86                     __ptext164:
 32974                           	callstack 0
 32975  009C86                     _I2C1_CallbackReturnReset:
 32976                           	callstack 16
 32977                           
 32978                           ; BSR set to: 2
 32979                           ;mcc_generated_files/i2c1_master.c: 525: i2c1_operations_t I2C1_CallbackReturnReset(void
      +                           *funPtr);mcc_generated_files/i2c1_master.c: 526: {;mcc_generated_files/i2c1_master.c: 5
      +                          27:     return I2C1_RESET_LINK;
 32980                           
 32981                           ; BSR set to: 2
 32982                           ;incstack = 0
 32983  009C86  0E05               	movlw	5
 32984                           
 32985                           ; BSR set to: 2
 32986  009C88  0012               	return		;funcret
 32987  009C8A                     __end_of_I2C1_CallbackReturnReset:
 32988                           	callstack 0
 32989                           
 32990 ;; *************** function _I2C1_CallbackReturnStop *****************
 32991 ;; Defined at:
 32992 ;;		line 520 in file "mcc_generated_files/i2c1_master.c"
 32993 ;; Parameters:    Size  Location     Type
 32994 ;;  funPtr          2   24[COMRAM] PTR void 
 32995 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 32996 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 32997 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 32998 ;; Auto vars:     Size  Location     Type
 32999 ;;		None
 33000 ;; Return value:  Size  Location     Type
 33001 ;;                  1    wreg      enum E360
 33002 ;; Registers used:
 33003 ;;		wreg
 33004 ;; Tracked objects:
 33005 ;;		On entry : 3F/2
 33006 ;;		On exit  : 3F/2
 33007 ;;		Unchanged: 3F/0
 33008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33009 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33010 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33012 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33013 ;;Total ram usage:        2 bytes
 33014 ;; Hardware stack levels used: 1
 33015 ;; Hardware stack levels required when called: 4
 33016 ;; This function calls:
 33017 ;;		Nothing
 33018 ;; This function is called by:
 33019 ;;		_I2C1_Open
 33020 ;;		_I2C1_SetCallback
 33021 ;;		_I2C1_DO_TX
 33022 ;;		_I2C1_DO_RX
 33023 ;;		_I2C1_DO_TX_EMPTY
 33024 ;;		_I2C1_DO_ADDRESS_NACK
 33025 ;; This function uses a non-reentrant model
 33026 ;;
 33027                           
 33028                           	psect	text165
 33029  009C8A                     __ptext165:
 33030                           	callstack 0
 33031  009C8A                     _I2C1_CallbackReturnStop:
 33032                           	callstack 16
 33033                           
 33034                           ; BSR set to: 2
 33035                           ;mcc_generated_files/i2c1_master.c: 520: i2c1_operations_t I2C1_CallbackReturnStop(void 
      +                          *funPtr);mcc_generated_files/i2c1_master.c: 521: {;mcc_generated_files/i2c1_master.c: 52
      +                          2:     return I2C1_STOP;
 33036                           
 33037                           ; BSR set to: 2
 33038                           ;incstack = 0
 33039  009C8A  0E01               	movlw	1
 33040                           
 33041                           ; BSR set to: 2
 33042  009C8C  0012               	return		;funcret
 33043  009C8E                     __end_of_I2C1_CallbackReturnStop:
 33044                           	callstack 0
 33045                           
 33046 ;; *************** function _rdBlkRegCompleteHandler@i2c1_master_example$F535 *****************
 33047 ;; Defined at:
 33048 ;;		line 176 in file "mcc_generated_files/examples/i2c1_master_example.c"
 33049 ;; Parameters:    Size  Location     Type
 33050 ;;  ptr             2   24[COMRAM] PTR void 
 33051 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 33052 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 33053 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 33054 ;; Auto vars:     Size  Location     Type
 33055 ;;		None
 33056 ;; Return value:  Size  Location     Type
 33057 ;;                  1    wreg      enum E527
 33058 ;; Registers used:
 33059 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33060 ;; Tracked objects:
 33061 ;;		On entry : 3F/2
 33062 ;;		On exit  : 0/0
 33063 ;;		Unchanged: 0/0
 33064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33065 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33066 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33068 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33069 ;;Total ram usage:        2 bytes
 33070 ;; Hardware stack levels used: 1
 33071 ;; Hardware stack levels required when called: 6
 33072 ;; This function calls:
 33073 ;;		_I2C1_SetBuffer
 33074 ;;		_I2C1_SetDataCompleteCallback
 33075 ;; This function is called by:
 33076 ;;		_I2C1_DO_TX
 33077 ;;		_I2C1_DO_RX
 33078 ;;		_I2C1_DO_TX_EMPTY
 33079 ;;		_I2C1_DO_ADDRESS_NACK
 33080 ;; This function uses a non-reentrant model
 33081 ;;
 33082                           
 33083                           	psect	text166
 33084  009290                     __ptext166:
 33085                           	callstack 0
 33086  009290                     _rdBlkRegCompleteHandler@i2c1_master_example$F535:
 33087                           	callstack 14
 33088                           
 33089                           ; BSR set to: 2
 33090                           ;mcc_generated_files/examples/i2c1_master_example.c: 176: static i2c1_operations_t rdBlk
      +                          RegCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 177: {
      +                          ;mcc_generated_files/examples/i2c1_master_example.c: 178:     I2C1_SetBuffer(((i2c1_buff
      +                          er_t *)ptr)->data,((i2c1_buffer_t*)ptr)->len);
 33091                           
 33092                           ; BSR set to: 2
 33093                           ;incstack = 0
 33094  009290  EE20 F002          	lfsr	2,2
 33095  009294  5019               	movf	rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr^0,w,c
 33096  009296  26D9               	addwf	fsr2l,f,c
 33097  009298  501A               	movf	(rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr+1)^0,w,c
 33098  00929A  22DA               	addwfc	fsr2h,f,c
 33099  00929C  CFDE F010          	movff	postinc2,I2C1_SetBuffer@buffer
 33100  0092A0  CFDD F011          	movff	postdec2,I2C1_SetBuffer@buffer+1
 33101  0092A4  C019  FFD9         	movff	rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr,fsr2l
 33102  0092A8  C01A  FFDA         	movff	rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr+1,fsr2h
 33103  0092AC  CFDE F012          	movff	postinc2,I2C1_SetBuffer@bufferSize
 33104  0092B0  CFDD F013          	movff	postdec2,I2C1_SetBuffer@bufferSize+1
 33105  0092B4  ECFA  F04C         	call	_I2C1_SetBuffer	;wreg free
 33106                           
 33107                           ; BSR set to: 2
 33108                           ;mcc_generated_files/examples/i2c1_master_example.c: 179:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 33109  0092B8  0E00               	movlw	0
 33110  0092BA  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 33111  0092BC  0E00               	movlw	0
 33112  0092BE  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 33113  0092C0  0E00               	movlw	0
 33114  0092C2  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 33115  0092C4  0E00               	movlw	0
 33116  0092C6  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 33117  0092C8  EC37  F04D         	call	_I2C1_SetDataCompleteCallback	;wreg free
 33118                           
 33119                           ;mcc_generated_files/examples/i2c1_master_example.c: 180:     return I2C1_RESTART_READ;
 33120  0092CC  0E02               	movlw	2
 33121  0092CE  0012               	return		;funcret
 33122  0092D0                     __end_of_rdBlkRegCompleteHandler@i2c1_master_example$F535:
 33123                           	callstack 0
 33124                           
 33125 ;; *************** function _wr1RegCompleteHandler@i2c1_master_example$F517 *****************
 33126 ;; Defined at:
 33127 ;;		line 162 in file "mcc_generated_files/examples/i2c1_master_example.c"
 33128 ;; Parameters:    Size  Location     Type
 33129 ;;  ptr             2   24[COMRAM] PTR void 
 33130 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 33131 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 33132 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 33133 ;; Auto vars:     Size  Location     Type
 33134 ;;		None
 33135 ;; Return value:  Size  Location     Type
 33136 ;;                  1    wreg      enum E527
 33137 ;; Registers used:
 33138 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33139 ;; Tracked objects:
 33140 ;;		On entry : 3F/2
 33141 ;;		On exit  : 0/0
 33142 ;;		Unchanged: 0/0
 33143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33144 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33147 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33148 ;;Total ram usage:        2 bytes
 33149 ;; Hardware stack levels used: 1
 33150 ;; Hardware stack levels required when called: 6
 33151 ;; This function calls:
 33152 ;;		_I2C1_SetBuffer
 33153 ;;		_I2C1_SetDataCompleteCallback
 33154 ;; This function is called by:
 33155 ;;		_I2C1_DO_TX
 33156 ;;		_I2C1_DO_RX
 33157 ;;		_I2C1_DO_TX_EMPTY
 33158 ;;		_I2C1_DO_ADDRESS_NACK
 33159 ;; This function uses a non-reentrant model
 33160 ;;
 33161                           
 33162                           	psect	text167
 33163  0095D6                     __ptext167:
 33164                           	callstack 0
 33165  0095D6                     _wr1RegCompleteHandler@i2c1_master_example$F517:
 33166                           	callstack 14
 33167                           
 33168                           ; BSR set to: 2
 33169                           ;mcc_generated_files/examples/i2c1_master_example.c: 162: static i2c1_operations_t wr1Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 163: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 164:     I2C1_SetBuffer(ptr,1);
 33170                           
 33171                           ;incstack = 0
 33172  0095D6  C019  F010         	movff	wr1RegCompleteHandler@i2c1_master_example$F517@ptr,I2C1_SetBuffer@buffer
 33173  0095DA  C01A  F011         	movff	wr1RegCompleteHandler@i2c1_master_example$F517@ptr+1,I2C1_SetBuffer@buffer+1
 33174  0095DE  0E00               	movlw	0
 33175  0095E0  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 33176  0095E2  0E01               	movlw	1
 33177  0095E4  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 33178  0095E6  ECFA  F04C         	call	_I2C1_SetBuffer	;wreg free
 33179                           
 33180                           ; BSR set to: 2
 33181                           ;mcc_generated_files/examples/i2c1_master_example.c: 165:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 33182  0095EA  0E00               	movlw	0
 33183  0095EC  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 33184  0095EE  0E00               	movlw	0
 33185  0095F0  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 33186  0095F2  0E00               	movlw	0
 33187  0095F4  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 33188  0095F6  0E00               	movlw	0
 33189  0095F8  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 33190  0095FA  EC37  F04D         	call	_I2C1_SetDataCompleteCallback	;wreg free
 33191                           
 33192                           ;mcc_generated_files/examples/i2c1_master_example.c: 166:     return I2C1_CONTINUE;
 33193  0095FE  0E04               	movlw	4
 33194  009600  0012               	return		;funcret
 33195  009602                     __end_of_wr1RegCompleteHandler@i2c1_master_example$F517:
 33196                           	callstack 0
 33197                           
 33198 ;; *************** function _rd2RegCompleteHandler@i2c1_master_example$F511 *****************
 33199 ;; Defined at:
 33200 ;;		line 155 in file "mcc_generated_files/examples/i2c1_master_example.c"
 33201 ;; Parameters:    Size  Location     Type
 33202 ;;  ptr             2   24[COMRAM] PTR void 
 33203 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 33204 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 33205 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 33206 ;; Auto vars:     Size  Location     Type
 33207 ;;		None
 33208 ;; Return value:  Size  Location     Type
 33209 ;;                  1    wreg      enum E527
 33210 ;; Registers used:
 33211 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33212 ;; Tracked objects:
 33213 ;;		On entry : 3F/2
 33214 ;;		On exit  : 0/0
 33215 ;;		Unchanged: 0/0
 33216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33217 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33220 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33221 ;;Total ram usage:        2 bytes
 33222 ;; Hardware stack levels used: 1
 33223 ;; Hardware stack levels required when called: 6
 33224 ;; This function calls:
 33225 ;;		_I2C1_SetBuffer
 33226 ;;		_I2C1_SetDataCompleteCallback
 33227 ;; This function is called by:
 33228 ;;		_I2C1_DO_TX
 33229 ;;		_I2C1_DO_RX
 33230 ;;		_I2C1_DO_TX_EMPTY
 33231 ;;		_I2C1_DO_ADDRESS_NACK
 33232 ;; This function uses a non-reentrant model
 33233 ;;
 33234                           
 33235                           	psect	text168
 33236  009602                     __ptext168:
 33237                           	callstack 0
 33238  009602                     _rd2RegCompleteHandler@i2c1_master_example$F511:
 33239                           	callstack 14
 33240                           
 33241                           ; BSR set to: 2
 33242                           ;mcc_generated_files/examples/i2c1_master_example.c: 155: static i2c1_operations_t rd2Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 156: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 157:     I2C1_SetBuffer(ptr,2);
 33243                           
 33244                           ;incstack = 0
 33245  009602  C019  F010         	movff	rd2RegCompleteHandler@i2c1_master_example$F511@ptr,I2C1_SetBuffer@buffer
 33246  009606  C01A  F011         	movff	rd2RegCompleteHandler@i2c1_master_example$F511@ptr+1,I2C1_SetBuffer@buffer+1
 33247  00960A  0E00               	movlw	0
 33248  00960C  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 33249  00960E  0E02               	movlw	2
 33250  009610  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 33251  009612  ECFA  F04C         	call	_I2C1_SetBuffer	;wreg free
 33252                           
 33253                           ; BSR set to: 2
 33254                           ;mcc_generated_files/examples/i2c1_master_example.c: 158:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 33255  009616  0E00               	movlw	0
 33256  009618  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 33257  00961A  0E00               	movlw	0
 33258  00961C  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 33259  00961E  0E00               	movlw	0
 33260  009620  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 33261  009622  0E00               	movlw	0
 33262  009624  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 33263  009626  EC37  F04D         	call	_I2C1_SetDataCompleteCallback	;wreg free
 33264                           
 33265                           ;mcc_generated_files/examples/i2c1_master_example.c: 159:     return I2C1_RESTART_READ;
 33266  00962A  0E02               	movlw	2
 33267  00962C  0012               	return		;funcret
 33268  00962E                     __end_of_rd2RegCompleteHandler@i2c1_master_example$F511:
 33269                           	callstack 0
 33270                           
 33271 ;; *************** function _rd1RegCompleteHandler@i2c1_master_example$F500 *****************
 33272 ;; Defined at:
 33273 ;;		line 148 in file "mcc_generated_files/examples/i2c1_master_example.c"
 33274 ;; Parameters:    Size  Location     Type
 33275 ;;  ptr             2   24[COMRAM] PTR void 
 33276 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 33277 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 33278 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 33279 ;; Auto vars:     Size  Location     Type
 33280 ;;		None
 33281 ;; Return value:  Size  Location     Type
 33282 ;;                  1    wreg      enum E527
 33283 ;; Registers used:
 33284 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33285 ;; Tracked objects:
 33286 ;;		On entry : 3F/2
 33287 ;;		On exit  : 0/0
 33288 ;;		Unchanged: 0/0
 33289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33290 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33293 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33294 ;;Total ram usage:        2 bytes
 33295 ;; Hardware stack levels used: 1
 33296 ;; Hardware stack levels required when called: 6
 33297 ;; This function calls:
 33298 ;;		_I2C1_SetBuffer
 33299 ;;		_I2C1_SetDataCompleteCallback
 33300 ;; This function is called by:
 33301 ;;		_I2C1_Read1ByteRegister
 33302 ;;		_I2C1_DO_TX
 33303 ;;		_I2C1_DO_RX
 33304 ;;		_I2C1_DO_TX_EMPTY
 33305 ;;		_I2C1_DO_ADDRESS_NACK
 33306 ;; This function uses a non-reentrant model
 33307 ;;
 33308                           
 33309                           	psect	text169
 33310  00962E                     __ptext169:
 33311                           	callstack 0
 33312  00962E                     _rd1RegCompleteHandler@i2c1_master_example$F500:
 33313                           	callstack 14
 33314                           
 33315                           ; BSR set to: 2
 33316                           ;mcc_generated_files/examples/i2c1_master_example.c: 148: static i2c1_operations_t rd1Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 149: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 150:     I2C1_SetBuffer(ptr,1);
 33317                           
 33318                           ;incstack = 0
 33319  00962E  C019  F010         	movff	rd1RegCompleteHandler@i2c1_master_example$F500@ptr,I2C1_SetBuffer@buffer
 33320  009632  C01A  F011         	movff	rd1RegCompleteHandler@i2c1_master_example$F500@ptr+1,I2C1_SetBuffer@buffer+1
 33321  009636  0E00               	movlw	0
 33322  009638  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 33323  00963A  0E01               	movlw	1
 33324  00963C  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 33325  00963E  ECFA  F04C         	call	_I2C1_SetBuffer	;wreg free
 33326                           
 33327                           ; BSR set to: 2
 33328                           ;mcc_generated_files/examples/i2c1_master_example.c: 151:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 33329  009642  0E00               	movlw	0
 33330  009644  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 33331  009646  0E00               	movlw	0
 33332  009648  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 33333  00964A  0E00               	movlw	0
 33334  00964C  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 33335  00964E  0E00               	movlw	0
 33336  009650  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 33337  009652  EC37  F04D         	call	_I2C1_SetDataCompleteCallback	;wreg free
 33338                           
 33339                           ;mcc_generated_files/examples/i2c1_master_example.c: 152:     return I2C1_RESTART_READ;
 33340  009656  0E02               	movlw	2
 33341  009658  0012               	return		;funcret
 33342  00965A                     __end_of_rd1RegCompleteHandler@i2c1_master_example$F500:
 33343                           	callstack 0
 33344                           
 33345 ;; *************** function _rdBlkRegCompleteHandler *****************
 33346 ;; Defined at:
 33347 ;;		line 140 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 33348 ;; Parameters:    Size  Location     Type
 33349 ;;  p               2   24[COMRAM] PTR void 
 33350 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 33351 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 33352 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 33353 ;; Auto vars:     Size  Location     Type
 33354 ;;		None
 33355 ;; Return value:  Size  Location     Type
 33356 ;;                  1    wreg      enum E360
 33357 ;; Registers used:
 33358 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33359 ;; Tracked objects:
 33360 ;;		On entry : 3F/2
 33361 ;;		On exit  : 0/0
 33362 ;;		Unchanged: 0/0
 33363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33364 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33367 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33368 ;;Total ram usage:        2 bytes
 33369 ;; Hardware stack levels used: 1
 33370 ;; Hardware stack levels required when called: 6
 33371 ;; This function calls:
 33372 ;;		_I2C1_SetBuffer
 33373 ;;		_I2C1_SetDataCompleteCallback
 33374 ;; This function is called by:
 33375 ;;		_i2c_readDataBlock
 33376 ;;		_I2C1_DO_TX
 33377 ;;		_I2C1_DO_RX
 33378 ;;		_I2C1_DO_TX_EMPTY
 33379 ;;		_I2C1_DO_ADDRESS_NACK
 33380 ;; This function uses a non-reentrant model
 33381 ;;
 33382                           
 33383                           	psect	text170
 33384  0092D0                     __ptext170:
 33385                           	callstack 0
 33386  0092D0                     _rdBlkRegCompleteHandler:
 33387                           	callstack 14
 33388                           
 33389                           ; BSR set to: 2
 33390                           ;mcc_generated_files/drivers/i2c_simple_master.c: 140: static i2c1_operations_t rdBlkReg
      +                          CompleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 141: {;mcc_gen
      +                          erated_files/drivers/i2c_simple_master.c: 142:     I2C1_SetBuffer(((buf_t *)p)->data,((b
      +                          uf_t*)p)->len);
 33391                           
 33392                           ;incstack = 0
 33393  0092D0  EE20 F002          	lfsr	2,2
 33394  0092D4  5019               	movf	rdBlkRegCompleteHandler@p^0,w,c
 33395  0092D6  26D9               	addwf	fsr2l,f,c
 33396  0092D8  501A               	movf	(rdBlkRegCompleteHandler@p+1)^0,w,c
 33397  0092DA  22DA               	addwfc	fsr2h,f,c
 33398  0092DC  CFDE F010          	movff	postinc2,I2C1_SetBuffer@buffer
 33399  0092E0  CFDD F011          	movff	postdec2,I2C1_SetBuffer@buffer+1
 33400  0092E4  C019  FFD9         	movff	rdBlkRegCompleteHandler@p,fsr2l
 33401  0092E8  C01A  FFDA         	movff	rdBlkRegCompleteHandler@p+1,fsr2h
 33402  0092EC  CFDE F012          	movff	postinc2,I2C1_SetBuffer@bufferSize
 33403  0092F0  CFDD F013          	movff	postdec2,I2C1_SetBuffer@bufferSize+1
 33404  0092F4  ECFA  F04C         	call	_I2C1_SetBuffer	;wreg free
 33405                           
 33406                           ; BSR set to: 2
 33407                           ;mcc_generated_files/drivers/i2c_simple_master.c: 143:     I2C1_SetDataCompleteCallback(
      +                          ((void*)0),((void*)0));
 33408  0092F8  0E00               	movlw	0
 33409  0092FA  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 33410  0092FC  0E00               	movlw	0
 33411  0092FE  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 33412  009300  0E00               	movlw	0
 33413  009302  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 33414  009304  0E00               	movlw	0
 33415  009306  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 33416  009308  EC37  F04D         	call	_I2C1_SetDataCompleteCallback	;wreg free
 33417                           
 33418                           ;mcc_generated_files/drivers/i2c_simple_master.c: 144:     return I2C1_RESTART_READ;
 33419  00930C  0E02               	movlw	2
 33420  00930E  0012               	return		;funcret
 33421  009310                     __end_of_rdBlkRegCompleteHandler:
 33422                           	callstack 0
 33423                           
 33424 ;; *************** function _wr2RegCompleteHandler *****************
 33425 ;; Defined at:
 33426 ;;		line 116 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 33427 ;; Parameters:    Size  Location     Type
 33428 ;;  p               2   24[COMRAM] PTR void 
 33429 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 33430 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 33431 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 33432 ;; Auto vars:     Size  Location     Type
 33433 ;;		None
 33434 ;; Return value:  Size  Location     Type
 33435 ;;                  1    wreg      enum E360
 33436 ;; Registers used:
 33437 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33438 ;; Tracked objects:
 33439 ;;		On entry : 3F/2
 33440 ;;		On exit  : 0/0
 33441 ;;		Unchanged: 0/0
 33442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33443 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33446 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33447 ;;Total ram usage:        2 bytes
 33448 ;; Hardware stack levels used: 1
 33449 ;; Hardware stack levels required when called: 6
 33450 ;; This function calls:
 33451 ;;		_I2C1_SetBuffer
 33452 ;;		_I2C1_SetDataCompleteCallback
 33453 ;; This function is called by:
 33454 ;;		_I2C1_DO_TX
 33455 ;;		_I2C1_DO_RX
 33456 ;;		_I2C1_DO_TX_EMPTY
 33457 ;;		_I2C1_DO_ADDRESS_NACK
 33458 ;; This function uses a non-reentrant model
 33459 ;;
 33460                           
 33461                           	psect	text171
 33462  00965A                     __ptext171:
 33463                           	callstack 0
 33464  00965A                     _wr2RegCompleteHandler:
 33465                           	callstack 14
 33466                           
 33467                           ; BSR set to: 2
 33468                           ;mcc_generated_files/drivers/i2c_simple_master.c: 116: static i2c1_operations_t wr2RegCo
      +                          mpleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 117: {;mcc_gener
      +                          ated_files/drivers/i2c_simple_master.c: 118:     I2C1_SetBuffer(p,2);
 33469                           
 33470                           ;incstack = 0
 33471  00965A  C019  F010         	movff	wr2RegCompleteHandler@p,I2C1_SetBuffer@buffer
 33472  00965E  C01A  F011         	movff	wr2RegCompleteHandler@p+1,I2C1_SetBuffer@buffer+1
 33473  009662  0E00               	movlw	0
 33474  009664  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 33475  009666  0E02               	movlw	2
 33476  009668  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 33477  00966A  ECFA  F04C         	call	_I2C1_SetBuffer	;wreg free
 33478                           
 33479                           ; BSR set to: 2
 33480                           ;mcc_generated_files/drivers/i2c_simple_master.c: 119:     I2C1_SetDataCompleteCallback(
      +                          ((void*)0),((void*)0));
 33481  00966E  0E00               	movlw	0
 33482  009670  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 33483  009672  0E00               	movlw	0
 33484  009674  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 33485  009676  0E00               	movlw	0
 33486  009678  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 33487  00967A  0E00               	movlw	0
 33488  00967C  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 33489  00967E  EC37  F04D         	call	_I2C1_SetDataCompleteCallback	;wreg free
 33490                           
 33491                           ;mcc_generated_files/drivers/i2c_simple_master.c: 120:     return I2C1_CONTINUE;
 33492  009682  0E04               	movlw	4
 33493  009684  0012               	return		;funcret
 33494  009686                     __end_of_wr2RegCompleteHandler:
 33495                           	callstack 0
 33496                           
 33497 ;; *************** function _rd2RegCompleteHandler *****************
 33498 ;; Defined at:
 33499 ;;		line 93 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 33500 ;; Parameters:    Size  Location     Type
 33501 ;;  p               2   24[COMRAM] PTR void 
 33502 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 33503 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 33504 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 33505 ;; Auto vars:     Size  Location     Type
 33506 ;;		None
 33507 ;; Return value:  Size  Location     Type
 33508 ;;                  1    wreg      enum E360
 33509 ;; Registers used:
 33510 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33511 ;; Tracked objects:
 33512 ;;		On entry : 3F/2
 33513 ;;		On exit  : 0/0
 33514 ;;		Unchanged: 0/0
 33515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33516 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33517 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33519 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33520 ;;Total ram usage:        2 bytes
 33521 ;; Hardware stack levels used: 1
 33522 ;; Hardware stack levels required when called: 6
 33523 ;; This function calls:
 33524 ;;		_I2C1_SetBuffer
 33525 ;;		_I2C1_SetDataCompleteCallback
 33526 ;; This function is called by:
 33527 ;;		_I2C1_DO_TX
 33528 ;;		_I2C1_DO_RX
 33529 ;;		_I2C1_DO_TX_EMPTY
 33530 ;;		_I2C1_DO_ADDRESS_NACK
 33531 ;; This function uses a non-reentrant model
 33532 ;;
 33533                           
 33534                           	psect	text172
 33535  009686                     __ptext172:
 33536                           	callstack 0
 33537  009686                     _rd2RegCompleteHandler:
 33538                           	callstack 14
 33539                           
 33540                           ; BSR set to: 2
 33541                           ;mcc_generated_files/drivers/i2c_simple_master.c: 93: static i2c1_operations_t rd2RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 94: {;mcc_generat
      +                          ed_files/drivers/i2c_simple_master.c: 95:     I2C1_SetBuffer(p,2);
 33542                           
 33543                           ;incstack = 0
 33544  009686  C019  F010         	movff	rd2RegCompleteHandler@p,I2C1_SetBuffer@buffer
 33545  00968A  C01A  F011         	movff	rd2RegCompleteHandler@p+1,I2C1_SetBuffer@buffer+1
 33546  00968E  0E00               	movlw	0
 33547  009690  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 33548  009692  0E02               	movlw	2
 33549  009694  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 33550  009696  ECFA  F04C         	call	_I2C1_SetBuffer	;wreg free
 33551                           
 33552                           ; BSR set to: 2
 33553                           ;mcc_generated_files/drivers/i2c_simple_master.c: 96:     I2C1_SetDataCompleteCallback((
      +                          (void*)0),((void*)0));
 33554  00969A  0E00               	movlw	0
 33555  00969C  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 33556  00969E  0E00               	movlw	0
 33557  0096A0  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 33558  0096A2  0E00               	movlw	0
 33559  0096A4  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 33560  0096A6  0E00               	movlw	0
 33561  0096A8  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 33562  0096AA  EC37  F04D         	call	_I2C1_SetDataCompleteCallback	;wreg free
 33563                           
 33564                           ;mcc_generated_files/drivers/i2c_simple_master.c: 97:     return I2C1_RESTART_READ;
 33565  0096AE  0E02               	movlw	2
 33566  0096B0  0012               	return		;funcret
 33567  0096B2                     __end_of_rd2RegCompleteHandler:
 33568                           	callstack 0
 33569                           
 33570 ;; *************** function _rd1RegCompleteHandler *****************
 33571 ;; Defined at:
 33572 ;;		line 64 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 33573 ;; Parameters:    Size  Location     Type
 33574 ;;  p               2   24[COMRAM] PTR void 
 33575 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 33576 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 33577 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 33578 ;; Auto vars:     Size  Location     Type
 33579 ;;		None
 33580 ;; Return value:  Size  Location     Type
 33581 ;;                  1    wreg      enum E360
 33582 ;; Registers used:
 33583 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33584 ;; Tracked objects:
 33585 ;;		On entry : 3F/2
 33586 ;;		On exit  : 0/0
 33587 ;;		Unchanged: 0/0
 33588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33589 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33592 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33593 ;;Total ram usage:        2 bytes
 33594 ;; Hardware stack levels used: 1
 33595 ;; Hardware stack levels required when called: 6
 33596 ;; This function calls:
 33597 ;;		_I2C1_SetBuffer
 33598 ;;		_I2C1_SetDataCompleteCallback
 33599 ;; This function is called by:
 33600 ;;		_I2C1_DO_TX
 33601 ;;		_I2C1_DO_RX
 33602 ;;		_I2C1_DO_TX_EMPTY
 33603 ;;		_I2C1_DO_ADDRESS_NACK
 33604 ;; This function uses a non-reentrant model
 33605 ;;
 33606                           
 33607                           	psect	text173
 33608  0096B2                     __ptext173:
 33609                           	callstack 0
 33610  0096B2                     _rd1RegCompleteHandler:
 33611                           	callstack 14
 33612                           
 33613                           ; BSR set to: 2
 33614                           ;mcc_generated_files/drivers/i2c_simple_master.c: 64: static i2c1_operations_t rd1RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 65: {;mcc_generat
      +                          ed_files/drivers/i2c_simple_master.c: 66:     I2C1_SetBuffer(p,1);
 33615                           
 33616                           ;incstack = 0
 33617  0096B2  C019  F010         	movff	rd1RegCompleteHandler@p,I2C1_SetBuffer@buffer
 33618  0096B6  C01A  F011         	movff	rd1RegCompleteHandler@p+1,I2C1_SetBuffer@buffer+1
 33619  0096BA  0E00               	movlw	0
 33620  0096BC  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 33621  0096BE  0E01               	movlw	1
 33622  0096C0  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 33623  0096C2  ECFA  F04C         	call	_I2C1_SetBuffer	;wreg free
 33624                           
 33625                           ; BSR set to: 2
 33626                           ;mcc_generated_files/drivers/i2c_simple_master.c: 67:     I2C1_SetDataCompleteCallback((
      +                          (void*)0),((void*)0));
 33627  0096C6  0E00               	movlw	0
 33628  0096C8  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 33629  0096CA  0E00               	movlw	0
 33630  0096CC  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 33631  0096CE  0E00               	movlw	0
 33632  0096D0  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 33633  0096D2  0E00               	movlw	0
 33634  0096D4  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 33635  0096D6  EC37  F04D         	call	_I2C1_SetDataCompleteCallback	;wreg free
 33636                           
 33637                           ;mcc_generated_files/drivers/i2c_simple_master.c: 68:     return I2C1_RESTART_READ;
 33638  0096DA  0E02               	movlw	2
 33639  0096DC  0012               	return		;funcret
 33640  0096DE                     __end_of_rd1RegCompleteHandler:
 33641                           	callstack 0
 33642                           
 33643 ;; *************** function _wr1RegCompleteHandler *****************
 33644 ;; Defined at:
 33645 ;;		line 33 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 33646 ;; Parameters:    Size  Location     Type
 33647 ;;  p               2   24[COMRAM] PTR void 
 33648 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 33649 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 33650 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 33651 ;; Auto vars:     Size  Location     Type
 33652 ;;		None
 33653 ;; Return value:  Size  Location     Type
 33654 ;;                  1    wreg      enum E360
 33655 ;; Registers used:
 33656 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33657 ;; Tracked objects:
 33658 ;;		On entry : 3F/2
 33659 ;;		On exit  : 0/0
 33660 ;;		Unchanged: 0/0
 33661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33662 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33665 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33666 ;;Total ram usage:        2 bytes
 33667 ;; Hardware stack levels used: 1
 33668 ;; Hardware stack levels required when called: 6
 33669 ;; This function calls:
 33670 ;;		_I2C1_SetBuffer
 33671 ;;		_I2C1_SetDataCompleteCallback
 33672 ;; This function is called by:
 33673 ;;		_I2C1_DO_TX
 33674 ;;		_I2C1_DO_RX
 33675 ;;		_I2C1_DO_TX_EMPTY
 33676 ;;		_I2C1_DO_ADDRESS_NACK
 33677 ;; This function uses a non-reentrant model
 33678 ;;
 33679                           
 33680                           	psect	text174
 33681  0096DE                     __ptext174:
 33682                           	callstack 0
 33683  0096DE                     _wr1RegCompleteHandler:
 33684                           	callstack 14
 33685                           
 33686                           ; BSR set to: 2
 33687                           ;mcc_generated_files/drivers/i2c_simple_master.c: 33: static i2c1_operations_t wr1RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 34: {;mcc_generat
      +                          ed_files/drivers/i2c_simple_master.c: 35:     I2C1_SetBuffer(p,1);
 33688                           
 33689                           ;incstack = 0
 33690  0096DE  C019  F010         	movff	wr1RegCompleteHandler@p,I2C1_SetBuffer@buffer
 33691  0096E2  C01A  F011         	movff	wr1RegCompleteHandler@p+1,I2C1_SetBuffer@buffer+1
 33692  0096E6  0E00               	movlw	0
 33693  0096E8  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 33694  0096EA  0E01               	movlw	1
 33695  0096EC  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 33696  0096EE  ECFA  F04C         	call	_I2C1_SetBuffer	;wreg free
 33697                           
 33698                           ; BSR set to: 2
 33699                           ;mcc_generated_files/drivers/i2c_simple_master.c: 36:     I2C1_SetDataCompleteCallback((
      +                          (void*)0),((void*)0));
 33700  0096F2  0E00               	movlw	0
 33701  0096F4  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 33702  0096F6  0E00               	movlw	0
 33703  0096F8  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 33704  0096FA  0E00               	movlw	0
 33705  0096FC  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 33706  0096FE  0E00               	movlw	0
 33707  009700  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 33708  009702  EC37  F04D         	call	_I2C1_SetDataCompleteCallback	;wreg free
 33709                           
 33710                           ;mcc_generated_files/drivers/i2c_simple_master.c: 37:     return I2C1_CONTINUE;
 33711  009706  0E04               	movlw	4
 33712  009708  0012               	return		;funcret
 33713  00970A                     __end_of_wr1RegCompleteHandler:
 33714                           	callstack 0
 33715                           
 33716 ;; *************** function _wr2RegCompleteHandler@i2c1_master_example$F523 *****************
 33717 ;; Defined at:
 33718 ;;		line 169 in file "mcc_generated_files/examples/i2c1_master_example.c"
 33719 ;; Parameters:    Size  Location     Type
 33720 ;;  ptr             2   24[COMRAM] PTR void 
 33721 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 33722 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 33723 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 33724 ;; Auto vars:     Size  Location     Type
 33725 ;;		None
 33726 ;; Return value:  Size  Location     Type
 33727 ;;                  1    wreg      enum E527
 33728 ;; Registers used:
 33729 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33730 ;; Tracked objects:
 33731 ;;		On entry : 3F/2
 33732 ;;		On exit  : 0/0
 33733 ;;		Unchanged: 0/0
 33734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33735 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33738 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33739 ;;Total ram usage:        2 bytes
 33740 ;; Hardware stack levels used: 1
 33741 ;; Hardware stack levels required when called: 6
 33742 ;; This function calls:
 33743 ;;		_I2C1_SetBuffer
 33744 ;;		_I2C1_SetDataCompleteCallback
 33745 ;; This function is called by:
 33746 ;;		_I2C1_DO_TX
 33747 ;;		_I2C1_DO_RX
 33748 ;;		_I2C1_DO_TX_EMPTY
 33749 ;;		_I2C1_DO_ADDRESS_NACK
 33750 ;; This function uses a non-reentrant model
 33751 ;;
 33752                           
 33753                           	psect	text175
 33754  00970A                     __ptext175:
 33755                           	callstack 0
 33756  00970A                     _wr2RegCompleteHandler@i2c1_master_example$F523:
 33757                           	callstack 14
 33758                           
 33759                           ; BSR set to: 2
 33760                           ;mcc_generated_files/examples/i2c1_master_example.c: 169: static i2c1_operations_t wr2Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 170: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 171:     I2C1_SetBuffer(ptr,2);
 33761                           
 33762                           ;incstack = 0
 33763  00970A  C019  F010         	movff	wr2RegCompleteHandler@i2c1_master_example$F523@ptr,I2C1_SetBuffer@buffer
 33764  00970E  C01A  F011         	movff	wr2RegCompleteHandler@i2c1_master_example$F523@ptr+1,I2C1_SetBuffer@buffer+1
 33765  009712  0E00               	movlw	0
 33766  009714  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 33767  009716  0E02               	movlw	2
 33768  009718  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 33769  00971A  ECFA  F04C         	call	_I2C1_SetBuffer	;wreg free
 33770                           
 33771                           ; BSR set to: 2
 33772                           ;mcc_generated_files/examples/i2c1_master_example.c: 172:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 33773  00971E  0E00               	movlw	0
 33774  009720  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 33775  009722  0E00               	movlw	0
 33776  009724  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 33777  009726  0E00               	movlw	0
 33778  009728  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 33779  00972A  0E00               	movlw	0
 33780  00972C  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 33781  00972E  EC37  F04D         	call	_I2C1_SetDataCompleteCallback	;wreg free
 33782                           
 33783                           ;mcc_generated_files/examples/i2c1_master_example.c: 173:     return I2C1_CONTINUE;
 33784  009732  0E04               	movlw	4
 33785  009734  0012               	return		;funcret
 33786  009736                     __end_of_wr2RegCompleteHandler@i2c1_master_example$F523:
 33787                           	callstack 0
 33788                           
 33789 ;; *************** function _I2C1_SetDataCompleteCallback *****************
 33790 ;; Defined at:
 33791 ;;		line 273 in file "mcc_generated_files/i2c1_master.c"
 33792 ;; Parameters:    Size  Location     Type
 33793 ;;  cb              2   20[COMRAM] PTR FTN(PTR void ,)enum 
 33794 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler@i2c1_master_example$F535(1), wr2RegCompleteHandler@i2c1_master_exa
      +mple$F523(1), wr1RegCompleteHandler@i2c1_master_example$F517(1), 
 33795 ;;		 -> rd2RegCompleteHandler@i2c1_master_example$F511(1), rd1RegCompleteHandler@i2c1_master_example$F500(1), rdBlkRegCo
      +mpleteHandler(1), wr2RegCompleteHandler(1), 
 33796 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 33797 ;;  ptr             2   22[COMRAM] PTR void 
 33798 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 33799 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 33800 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 33801 ;; Auto vars:     Size  Location     Type
 33802 ;;		None
 33803 ;; Return value:  Size  Location     Type
 33804 ;;                  1    wreg      void 
 33805 ;; Registers used:
 33806 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33807 ;; Tracked objects:
 33808 ;;		On entry : 33/2
 33809 ;;		On exit  : 0/0
 33810 ;;		Unchanged: 0/0
 33811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33812 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33815 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33816 ;;Total ram usage:        4 bytes
 33817 ;; Hardware stack levels used: 1
 33818 ;; Hardware stack levels required when called: 5
 33819 ;; This function calls:
 33820 ;;		_I2C1_SetCallback
 33821 ;; This function is called by:
 33822 ;;		_wr1RegCompleteHandler
 33823 ;;		_rd1RegCompleteHandler
 33824 ;;		_rd2RegCompleteHandler
 33825 ;;		_wr2RegCompleteHandler
 33826 ;;		_rdBlkRegCompleteHandler
 33827 ;;		_i2c_readDataBlock
 33828 ;;		_I2C1_Read1ByteRegister
 33829 ;;		_rd1RegCompleteHandler@i2c1_master_example$F500
 33830 ;;		_rd2RegCompleteHandler@i2c1_master_example$F511
 33831 ;;		_wr1RegCompleteHandler@i2c1_master_example$F517
 33832 ;;		_wr2RegCompleteHandler@i2c1_master_example$F523
 33833 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F535
 33834 ;; This function uses a non-reentrant model
 33835 ;;
 33836                           
 33837                           	psect	text176
 33838  009A6E                     __ptext176:
 33839                           	callstack 0
 33840  009A6E                     _I2C1_SetDataCompleteCallback:
 33841                           	callstack 20
 33842                           
 33843                           ;mcc_generated_files/i2c1_master.c: 273: void I2C1_SetDataCompleteCallback(i2c1_callback
      +                          _t cb, void *ptr);mcc_generated_files/i2c1_master.c: 274: {;mcc_generated_files/i2c1_mas
      +                          ter.c: 275:     I2C1_SetCallback(I2C1_DATA_COMPLETE, cb, ptr);
 33844                           
 33845                           ;incstack = 0
 33846  009A6E  C015  F010         	movff	I2C1_SetDataCompleteCallback@cb,I2C1_SetCallback@cb
 33847  009A72  C016  F011         	movff	I2C1_SetDataCompleteCallback@cb+1,I2C1_SetCallback@cb+1
 33848  009A76  C017  F012         	movff	I2C1_SetDataCompleteCallback@ptr,I2C1_SetCallback@ptr
 33849  009A7A  C018  F013         	movff	I2C1_SetDataCompleteCallback@ptr+1,I2C1_SetCallback@ptr+1
 33850  009A7E  0E00               	movlw	0
 33851  009A80  ECA1  F044         	call	_I2C1_SetCallback
 33852  009A84  0012               	return		;funcret
 33853  009A86                     __end_of_I2C1_SetDataCompleteCallback:
 33854                           	callstack 0
 33855                           
 33856 ;; *************** function _I2C1_SetCallback *****************
 33857 ;; Defined at:
 33858 ;;		line 298 in file "mcc_generated_files/i2c1_master.c"
 33859 ;; Parameters:    Size  Location     Type
 33860 ;;  idx             1    wreg     enum E10460
 33861 ;;  cb              2   15[COMRAM] PTR FTN(PTR void ,)enum 
 33862 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler@i2c1_master_example$F535(1), wr2RegCompleteHandler@i2c1_master_exa
      +mple$F523(1), wr1RegCompleteHandler@i2c1_master_example$F517(1), 
 33863 ;;		 -> rd2RegCompleteHandler@i2c1_master_example$F511(1), rd1RegCompleteHandler@i2c1_master_example$F500(1), rdBlkRegCo
      +mpleteHandler(1), wr2RegCompleteHandler(1), 
 33864 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 33865 ;;  ptr             2   17[COMRAM] PTR void 
 33866 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 33867 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 33868 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 33869 ;; Auto vars:     Size  Location     Type
 33870 ;;  idx             1   19[COMRAM] enum E10460
 33871 ;; Return value:  Size  Location     Type
 33872 ;;                  1    wreg      void 
 33873 ;; Registers used:
 33874 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 33875 ;; Tracked objects:
 33876 ;;		On entry : 33/2
 33877 ;;		On exit  : 0/0
 33878 ;;		Unchanged: 0/0
 33879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33880 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33881 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33883 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33884 ;;Total ram usage:        5 bytes
 33885 ;; Hardware stack levels used: 1
 33886 ;; Hardware stack levels required when called: 4
 33887 ;; This function calls:
 33888 ;;		Nothing
 33889 ;; This function is called by:
 33890 ;;		_I2C1_SetDataCompleteCallback
 33891 ;;		_I2C1_SetAddressNackCallback
 33892 ;; This function uses a non-reentrant model
 33893 ;;
 33894                           
 33895                           	psect	text177
 33896  008942                     __ptext177:
 33897                           	callstack 0
 33898  008942                     _I2C1_SetCallback:
 33899                           	callstack 20
 33900                           
 33901                           ;incstack = 0
 33902                           ;I2C1_SetCallback@idx stored from wreg
 33903  008942  6E14               	movwf	I2C1_SetCallback@idx^0,c
 33904                           
 33905                           ;mcc_generated_files/i2c1_master.c: 298: static void I2C1_SetCallback(i2c1_callbackIndex
      +                          _t idx, i2c1_callback_t cb, void *ptr);mcc_generated_files/i2c1_master.c: 299: {;mcc_gen
      +                          erated_files/i2c1_master.c: 300:     if(cb)
 33906  008944  5010               	movf	I2C1_SetCallback@cb^0,w,c
 33907  008946  1011               	iorwf	(I2C1_SetCallback@cb+1)^0,w,c
 33908  008948  B4D8               	btfsc	status,2,c
 33909  00894A  D019               	goto	l19913
 33910                           
 33911                           ;mcc_generated_files/i2c1_master.c: 301:     {;mcc_generated_files/i2c1_master.c: 302:  
      +                                 I2C1_Status.callbackTable[idx] = cb;
 33912  00894C  5014               	movf	I2C1_SetCallback@idx^0,w,c
 33913  00894E  0D02               	mullw	2
 33914  008950  0E3C               	movlw	low _I2C1_Status
 33915  008952  24F3               	addwf	243,w,c
 33916  008954  6ED9               	movwf	fsr2l,c
 33917  008956  0E02               	movlw	high _I2C1_Status
 33918  008958  20F4               	addwfc	prodh,w,c
 33919  00895A  6EDA               	movwf	fsr2h,c
 33920  00895C  C010  FFDE         	movff	I2C1_SetCallback@cb,postinc2
 33921  008960  C011  FFDD         	movff	I2C1_SetCallback@cb+1,postdec2
 33922                           
 33923                           ;mcc_generated_files/i2c1_master.c: 303:         I2C1_Status.callbackPayload[idx] = ptr;
 33924  008964  5014               	movf	I2C1_SetCallback@idx^0,w,c
 33925  008966  0D02               	mullw	2
 33926  008968  0E48               	movlw	low (_I2C1_Status+12)
 33927  00896A  24F3               	addwf	243,w,c
 33928  00896C  6ED9               	movwf	fsr2l,c
 33929  00896E  0E02               	movlw	high (_I2C1_Status+12)
 33930  008970  20F4               	addwfc	prodh,w,c
 33931  008972  6EDA               	movwf	fsr2h,c
 33932  008974  C012  FFDE         	movff	I2C1_SetCallback@ptr,postinc2
 33933  008978  C013  FFDD         	movff	I2C1_SetCallback@ptr+1,postdec2
 33934                           
 33935                           ;mcc_generated_files/i2c1_master.c: 304:     }
 33936  00897C  0012               	return	
 33937  00897E                     l19913:
 33938                           
 33939                           ;mcc_generated_files/i2c1_master.c: 306:     {;mcc_generated_files/i2c1_master.c: 307:  
      +                                 I2C1_Status.callbackTable[idx] = I2C1_CallbackReturnStop;
 33940  00897E  5014               	movf	I2C1_SetCallback@idx^0,w,c
 33941  008980  0D02               	mullw	2
 33942  008982  0E3C               	movlw	low _I2C1_Status
 33943  008984  24F3               	addwf	243,w,c
 33944  008986  6ED9               	movwf	fsr2l,c
 33945  008988  0E02               	movlw	high _I2C1_Status
 33946  00898A  20F4               	addwfc	prodh,w,c
 33947  00898C  6EDA               	movwf	fsr2h,c
 33948  00898E  0E8A               	movlw	low _I2C1_CallbackReturnStop
 33949  008990  6EDE               	movwf	postinc2,c
 33950  008992  0E9C               	movlw	high _I2C1_CallbackReturnStop
 33951  008994  6EDD               	movwf	postdec2,c
 33952                           
 33953                           ;mcc_generated_files/i2c1_master.c: 308:         I2C1_Status.callbackPayload[idx] = ((vo
      +                          id*)0);
 33954  008996  5014               	movf	I2C1_SetCallback@idx^0,w,c
 33955  008998  0D02               	mullw	2
 33956  00899A  0E48               	movlw	low (_I2C1_Status+12)
 33957  00899C  24F3               	addwf	243,w,c
 33958  00899E  6ED9               	movwf	fsr2l,c
 33959  0089A0  0E02               	movlw	high (_I2C1_Status+12)
 33960  0089A2  20F4               	addwfc	prodh,w,c
 33961  0089A4  6EDA               	movwf	fsr2h,c
 33962  0089A6  0E00               	movlw	0
 33963  0089A8  6EDE               	movwf	postinc2,c
 33964  0089AA  0E00               	movlw	0
 33965  0089AC  6EDD               	movwf	postdec2,c
 33966  0089AE  0012               	return		;funcret
 33967  0089B0                     __end_of_I2C1_SetCallback:
 33968                           	callstack 0
 33969                           
 33970 ;; *************** function _I2C1_SetBuffer *****************
 33971 ;; Defined at:
 33972 ;;		line 263 in file "mcc_generated_files/i2c1_master.c"
 33973 ;; Parameters:    Size  Location     Type
 33974 ;;  buffer          2   15[COMRAM] PTR void 
 33975 ;;		 -> eusartparser@serial(4), cmdMemoryIsEmpty@tempSerial(4), memoryTEMP(16), var_sys_NVM(64), 
 33976 ;;		 -> I2C1_ReadDataBlock@reg(1), I2C1_ReadDataBlock@bufferBlock(4), I2C1_WriteNBytes@dat(17), I2C1_Write2ByteRegister@
      +reg(1), 
 33977 ;;		 -> I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@reg(1), I2C1_Write1ByteRegister@data(1), I2C1_Read2Byte
      +Register@reg(1), 
 33978 ;;		 -> I2C1_Read2ByteRegister@returnValue(2), I2C1_Read1ByteRegister@reg(1), I2C1_Read1ByteRegister@returnValue(1), i2c
      +_readDataBlock@reg(2), 
 33979 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@reg
      +(1), 
 33980 ;;		 -> i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@reg(1), i2c_read1ByteRegister@d2(1), i2c_writeNBytes@dat(
      +17), 
 33981 ;;		 -> i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister@data(1), NULL(0), 
 33982 ;;  bufferSize      2   17[COMRAM] unsigned int 
 33983 ;; Auto vars:     Size  Location     Type
 33984 ;;		None
 33985 ;; Return value:  Size  Location     Type
 33986 ;;                  1    wreg      void 
 33987 ;; Registers used:
 33988 ;;		wreg, status,2, status,0
 33989 ;; Tracked objects:
 33990 ;;		On entry : 0/2
 33991 ;;		On exit  : 3F/2
 33992 ;;		Unchanged: 0/0
 33993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33994 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33997 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33998 ;;Total ram usage:        4 bytes
 33999 ;; Hardware stack levels used: 1
 34000 ;; Hardware stack levels required when called: 4
 34001 ;; This function calls:
 34002 ;;		Nothing
 34003 ;; This function is called by:
 34004 ;;		_wr1RegCompleteHandler
 34005 ;;		_i2c_writeNBytes
 34006 ;;		_rd1RegCompleteHandler
 34007 ;;		_rd2RegCompleteHandler
 34008 ;;		_wr2RegCompleteHandler
 34009 ;;		_rdBlkRegCompleteHandler
 34010 ;;		_i2c_readDataBlock
 34011 ;;		_I2C1_Read1ByteRegister
 34012 ;;		_rd1RegCompleteHandler@i2c1_master_example$F500
 34013 ;;		_rd2RegCompleteHandler@i2c1_master_example$F511
 34014 ;;		_wr1RegCompleteHandler@i2c1_master_example$F517
 34015 ;;		_wr2RegCompleteHandler@i2c1_master_example$F523
 34016 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F535
 34017 ;; This function uses a non-reentrant model
 34018 ;;
 34019                           
 34020                           	psect	text178
 34021  0099F4                     __ptext178:
 34022                           	callstack 0
 34023  0099F4                     _I2C1_SetBuffer:
 34024                           	callstack 21
 34025                           
 34026                           ;mcc_generated_files/i2c1_master.c: 263: void I2C1_SetBuffer(void *buffer, size_t buffer
      +                          Size);mcc_generated_files/i2c1_master.c: 264: {;mcc_generated_files/i2c1_master.c: 265: 
      +                              if(I2C1_Status.bufferFree)
 34027                           
 34028                           ;incstack = 0
 34029  0099F4  0102               	movlb	2	; () banked
 34030  0099F6  A75F               	btfss	(_I2C1_Status+35)& (0+255),3,b
 34031  0099F8  0012               	return	
 34032                           
 34033                           ; BSR set to: 2
 34034                           ;mcc_generated_files/i2c1_master.c: 266:     {;mcc_generated_files/i2c1_master.c: 267:  
      +                                 I2C1_Status.data_ptr = buffer;
 34035  0099FA  C010  F259         	movff	I2C1_SetBuffer@buffer,_I2C1_Status+29
 34036  0099FE  C011  F25A         	movff	I2C1_SetBuffer@buffer+1,_I2C1_Status+30
 34037                           
 34038                           ; BSR set to: 2
 34039                           ;mcc_generated_files/i2c1_master.c: 268:         I2C1_Status.data_length = bufferSize;
 34040  009A02  C012  F25B         	movff	I2C1_SetBuffer@bufferSize,_I2C1_Status+31
 34041  009A06  C013  F25C         	movff	I2C1_SetBuffer@bufferSize+1,_I2C1_Status+32
 34042                           
 34043                           ; BSR set to: 2
 34044                           ;mcc_generated_files/i2c1_master.c: 269:         I2C1_Status.bufferFree = 0;
 34045  009A0A  975F               	bcf	(_I2C1_Status+35)& (0+255),3,b
 34046                           
 34047                           ; BSR set to: 2
 34048  009A0C  0012               	return		;funcret
 34049  009A0E                     __end_of_I2C1_SetBuffer:
 34050                           	callstack 0
 34051                           
 34052 ;; *************** function _I2C1_MasterStop *****************
 34053 ;; Defined at:
 34054 ;;		line 593 in file "mcc_generated_files/i2c1_master.c"
 34055 ;; Parameters:    Size  Location     Type
 34056 ;;		None
 34057 ;; Auto vars:     Size  Location     Type
 34058 ;;		None
 34059 ;; Return value:  Size  Location     Type
 34060 ;;                  1    wreg      void 
 34061 ;; Registers used:
 34062 ;;		None
 34063 ;; Tracked objects:
 34064 ;;		On entry : 0/2
 34065 ;;		On exit  : 0/0
 34066 ;;		Unchanged: 0/0
 34067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34071 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34072 ;;Total ram usage:        0 bytes
 34073 ;; Hardware stack levels used: 1
 34074 ;; Hardware stack levels required when called: 4
 34075 ;; This function calls:
 34076 ;;		Nothing
 34077 ;; This function is called by:
 34078 ;;		_I2C1_DO_SEND_STOP
 34079 ;; This function uses a non-reentrant model
 34080 ;;
 34081                           
 34082                           	psect	text179
 34083  009C8E                     __ptext179:
 34084                           	callstack 0
 34085  009C8E                     _I2C1_MasterStop:
 34086                           	callstack 15
 34087                           
 34088                           ;mcc_generated_files/i2c1_master.c: 595:     SSP1CON2bits.PEN = 1;
 34089                           
 34090                           ; BSR set to: 2
 34091                           ;incstack = 0
 34092  009C8E  8497               	bsf	151,2,c	;volatile
 34093  009C90  0012               	return		;funcret
 34094  009C92                     __end_of_I2C1_MasterStop:
 34095                           	callstack 0
 34096                           
 34097 ;; *************** function _I2C1_MasterEnableRestart *****************
 34098 ;; Defined at:
 34099 ;;		line 573 in file "mcc_generated_files/i2c1_master.c"
 34100 ;; Parameters:    Size  Location     Type
 34101 ;;		None
 34102 ;; Auto vars:     Size  Location     Type
 34103 ;;		None
 34104 ;; Return value:  Size  Location     Type
 34105 ;;                  1    wreg      void 
 34106 ;; Registers used:
 34107 ;;		None
 34108 ;; Tracked objects:
 34109 ;;		On entry : 0/2
 34110 ;;		On exit  : 0/0
 34111 ;;		Unchanged: 0/0
 34112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34116 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34117 ;;Total ram usage:        0 bytes
 34118 ;; Hardware stack levels used: 1
 34119 ;; Hardware stack levels required when called: 4
 34120 ;; This function calls:
 34121 ;;		Nothing
 34122 ;; This function is called by:
 34123 ;;		_I2C1_DO_SEND_RESTART_READ
 34124 ;;		_I2C1_DO_SEND_RESTART_WRITE
 34125 ;;		_I2C1_DO_SEND_RESTART
 34126 ;; This function uses a non-reentrant model
 34127 ;;
 34128                           
 34129                           	psect	text180
 34130  009C92                     __ptext180:
 34131                           	callstack 0
 34132  009C92                     _I2C1_MasterEnableRestart:
 34133                           	callstack 15
 34134                           
 34135                           ;mcc_generated_files/i2c1_master.c: 575:     SSP1CON2bits.RSEN = 1;
 34136                           
 34137                           ;incstack = 0
 34138  009C92  8297               	bsf	151,1,c	;volatile
 34139  009C94  0012               	return		;funcret
 34140  009C96                     __end_of_I2C1_MasterEnableRestart:
 34141                           	callstack 0
 34142                           
 34143 ;; *************** function _I2C1_MasterStart *****************
 34144 ;; Defined at:
 34145 ;;		line 588 in file "mcc_generated_files/i2c1_master.c"
 34146 ;; Parameters:    Size  Location     Type
 34147 ;;		None
 34148 ;; Auto vars:     Size  Location     Type
 34149 ;;		None
 34150 ;; Return value:  Size  Location     Type
 34151 ;;                  1    wreg      void 
 34152 ;; Registers used:
 34153 ;;		None
 34154 ;; Tracked objects:
 34155 ;;		On entry : 3F/2
 34156 ;;		On exit  : 3F/2
 34157 ;;		Unchanged: 3F/0
 34158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34162 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34163 ;;Total ram usage:        0 bytes
 34164 ;; Hardware stack levels used: 1
 34165 ;; Hardware stack levels required when called: 4
 34166 ;; This function calls:
 34167 ;;		Nothing
 34168 ;; This function is called by:
 34169 ;;		_I2C1_MasterOperation
 34170 ;; This function uses a non-reentrant model
 34171 ;;
 34172                           
 34173                           	psect	text181
 34174  009C96                     __ptext181:
 34175                           	callstack 0
 34176  009C96                     _I2C1_MasterStart:
 34177                           	callstack 19
 34178                           
 34179                           ; BSR set to: 2
 34180                           ;mcc_generated_files/i2c1_master.c: 590:     SSP1CON2bits.SEN = 1;
 34181                           
 34182                           ;incstack = 0
 34183  009C96  8097               	bsf	151,0,c	;volatile
 34184                           
 34185                           ; BSR set to: 2
 34186  009C98  0012               	return		;funcret
 34187  009C9A                     __end_of_I2C1_MasterStart:
 34188                           	callstack 0
 34189                           
 34190 ;; *************** function _I2C1_Close *****************
 34191 ;; Defined at:
 34192 ;;		line 209 in file "mcc_generated_files/i2c1_master.c"
 34193 ;; Parameters:    Size  Location     Type
 34194 ;;		None
 34195 ;; Auto vars:     Size  Location     Type
 34196 ;;  returnValue     1   15[COMRAM] enum E355
 34197 ;; Return value:  Size  Location     Type
 34198 ;;                  1    wreg      enum E355
 34199 ;; Registers used:
 34200 ;;		wreg, status,2, cstack
 34201 ;; Tracked objects:
 34202 ;;		On entry : 0/2
 34203 ;;		On exit  : 33/2
 34204 ;;		Unchanged: 0/0
 34205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34207 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34209 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34210 ;;Total ram usage:        1 bytes
 34211 ;; Hardware stack levels used: 1
 34212 ;; Hardware stack levels required when called: 5
 34213 ;; This function calls:
 34214 ;;		_I2C1_MasterClearIrq
 34215 ;;		_I2C1_MasterClose
 34216 ;;		_I2C1_MasterDisableIrq
 34217 ;; This function is called by:
 34218 ;;		_i2c_writeNBytes
 34219 ;;		_i2c_readDataBlock
 34220 ;;		_I2C1_Read1ByteRegister
 34221 ;; This function uses a non-reentrant model
 34222 ;;
 34223                           
 34224                           	psect	text182
 34225  0098D8                     __ptext182:
 34226                           	callstack 0
 34227  0098D8                     _I2C1_Close:
 34228                           	callstack 20
 34229                           
 34230                           ;mcc_generated_files/i2c1_master.c: 211:     i2c1_error_t returnValue = I2C1_BUSY;
 34231                           
 34232                           ; BSR set to: 2
 34233                           ;incstack = 0
 34234  0098D8  0E01               	movlw	1
 34235  0098DA  6E10               	movwf	I2C1_Close@returnValue^0,c
 34236                           
 34237                           ;mcc_generated_files/i2c1_master.c: 212:     if(!I2C1_Status.busy)
 34238  0098DC  0102               	movlb	2	; () banked
 34239  0098DE  B35F               	btfsc	(_I2C1_Status+35)& (0+255),1,b
 34240  0098E0  D00A               	goto	l20347
 34241                           
 34242                           ; BSR set to: 2
 34243                           ;mcc_generated_files/i2c1_master.c: 213:     {;mcc_generated_files/i2c1_master.c: 214:  
      +                                 I2C1_Status.inUse = 0;
 34244  0098E2  955F               	bcf	(_I2C1_Status+35)& (0+255),2,b
 34245                           
 34246                           ;mcc_generated_files/i2c1_master.c: 215:         I2C1_Status.address = 0xff;
 34247  0098E4  6958               	setf	(_I2C1_Status+28)& (0+255),b
 34248                           
 34249                           ; BSR set to: 2
 34250                           ;mcc_generated_files/i2c1_master.c: 216:         I2C1_MasterClearIrq();
 34251  0098E6  EC32  F04E         	call	_I2C1_MasterClearIrq	;wreg free
 34252                           
 34253                           ;mcc_generated_files/i2c1_master.c: 217:         I2C1_MasterDisableIrq();
 34254  0098EA  EC4D  F04E         	call	_I2C1_MasterDisableIrq	;wreg free
 34255                           
 34256                           ;mcc_generated_files/i2c1_master.c: 218:         I2C1_MasterClose();
 34257  0098EE  EC4F  F04E         	call	_I2C1_MasterClose	;wreg free
 34258                           
 34259                           ; BSR set to: 14
 34260                           ;mcc_generated_files/i2c1_master.c: 219:         returnValue = I2C1_Status.error;
 34261  0098F2  C25E  F010         	movff	_I2C1_Status+34,I2C1_Close@returnValue
 34262  0098F6                     l20347:
 34263                           
 34264                           ;mcc_generated_files/i2c1_master.c: 221:     return returnValue;
 34265  0098F6  5010               	movf	I2C1_Close@returnValue^0,w,c
 34266  0098F8  0012               	return		;funcret
 34267  0098FA                     __end_of_I2C1_Close:
 34268                           	callstack 0
 34269                           
 34270 ;; *************** function _I2C1_MasterDisableIrq *****************
 34271 ;; Defined at:
 34272 ;;		line 635 in file "mcc_generated_files/i2c1_master.c"
 34273 ;; Parameters:    Size  Location     Type
 34274 ;;		None
 34275 ;; Auto vars:     Size  Location     Type
 34276 ;;		None
 34277 ;; Return value:  Size  Location     Type
 34278 ;;                  1    wreg      void 
 34279 ;; Registers used:
 34280 ;;		None
 34281 ;; Tracked objects:
 34282 ;;		On entry : 3F/E
 34283 ;;		On exit  : 3F/E
 34284 ;;		Unchanged: 0/0
 34285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34289 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34290 ;;Total ram usage:        0 bytes
 34291 ;; Hardware stack levels used: 1
 34292 ;; Hardware stack levels required when called: 4
 34293 ;; This function calls:
 34294 ;;		Nothing
 34295 ;; This function is called by:
 34296 ;;		_I2C1_Close
 34297 ;; This function uses a non-reentrant model
 34298 ;;
 34299                           
 34300                           	psect	text183
 34301  009C9A                     __ptext183:
 34302                           	callstack 0
 34303  009C9A                     _I2C1_MasterDisableIrq:
 34304                           	callstack 20
 34305                           
 34306                           ; BSR set to: 14
 34307                           ;mcc_generated_files/i2c1_master.c: 637:     PIE3bits.SSP1IE = 0;
 34308                           
 34309                           ;incstack = 0
 34310  009C9A  91C5               	bcf	197,0,b	;volatile
 34311                           
 34312                           ; BSR set to: 14
 34313  009C9C  0012               	return		;funcret
 34314  009C9E                     __end_of_I2C1_MasterDisableIrq:
 34315                           	callstack 0
 34316                           
 34317 ;; *************** function _I2C1_MasterClose *****************
 34318 ;; Defined at:
 34319 ;;		line 557 in file "mcc_generated_files/i2c1_master.c"
 34320 ;; Parameters:    Size  Location     Type
 34321 ;;		None
 34322 ;; Auto vars:     Size  Location     Type
 34323 ;;		None
 34324 ;; Return value:  Size  Location     Type
 34325 ;;                  1    wreg      void 
 34326 ;; Registers used:
 34327 ;;		None
 34328 ;; Tracked objects:
 34329 ;;		On entry : 3F/E
 34330 ;;		On exit  : 3F/E
 34331 ;;		Unchanged: 3F/0
 34332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34336 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34337 ;;Total ram usage:        0 bytes
 34338 ;; Hardware stack levels used: 1
 34339 ;; Hardware stack levels required when called: 4
 34340 ;; This function calls:
 34341 ;;		Nothing
 34342 ;; This function is called by:
 34343 ;;		_I2C1_Close
 34344 ;; This function uses a non-reentrant model
 34345 ;;
 34346                           
 34347                           	psect	text184
 34348  009C9E                     __ptext184:
 34349                           	callstack 0
 34350  009C9E                     _I2C1_MasterClose:
 34351                           	callstack 20
 34352                           
 34353                           ; BSR set to: 14
 34354                           ;mcc_generated_files/i2c1_master.c: 560:     SSP1CON1bits.SSPEN = 0;
 34355                           
 34356                           ; BSR set to: 14
 34357                           ;incstack = 0
 34358  009C9E  9A96               	bcf	150,5,c	;volatile
 34359                           
 34360                           ; BSR set to: 14
 34361  009CA0  0012               	return		;funcret
 34362  009CA2                     __end_of_I2C1_MasterClose:
 34363                           	callstack 0
 34364                           
 34365 ;; *************** function _I2C1_MasterClearIrq *****************
 34366 ;; Defined at:
 34367 ;;		line 640 in file "mcc_generated_files/i2c1_master.c"
 34368 ;; Parameters:    Size  Location     Type
 34369 ;;		None
 34370 ;; Auto vars:     Size  Location     Type
 34371 ;;		None
 34372 ;; Return value:  Size  Location     Type
 34373 ;;                  1    wreg      void 
 34374 ;; Registers used:
 34375 ;;		None
 34376 ;; Tracked objects:
 34377 ;;		On entry : 33/2
 34378 ;;		On exit  : 3F/E
 34379 ;;		Unchanged: 0/0
 34380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34384 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34385 ;;Total ram usage:        0 bytes
 34386 ;; Hardware stack levels used: 1
 34387 ;; Hardware stack levels required when called: 4
 34388 ;; This function calls:
 34389 ;;		Nothing
 34390 ;; This function is called by:
 34391 ;;		_I2C1_Open
 34392 ;;		_I2C1_Close
 34393 ;;		_I2C1_MasterFsm
 34394 ;; This function uses a non-reentrant model
 34395 ;;
 34396                           
 34397                           	psect	text185
 34398  009C64                     __ptext185:
 34399                           	callstack 0
 34400  009C64                     _I2C1_MasterClearIrq:
 34401                           	callstack 20
 34402                           
 34403                           ;mcc_generated_files/i2c1_master.c: 642:     PIR3bits.SSP1IF = 0;
 34404                           
 34405                           ; BSR set to: 14
 34406                           ;incstack = 0
 34407  009C64  010E               	movlb	14	; () banked
 34408  009C66  91CD               	bcf	205,0,b	;volatile
 34409                           
 34410                           ; BSR set to: 14
 34411  009C68  0012               	return		;funcret
 34412  009C6A                     __end_of_I2C1_MasterClearIrq:
 34413                           	callstack 0
 34414                           
 34415 ;; *************** function _INTERRUPT_InterruptManager *****************
 34416 ;; Defined at:
 34417 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
 34418 ;; Parameters:    Size  Location     Type
 34419 ;;		None
 34420 ;; Auto vars:     Size  Location     Type
 34421 ;;		None
 34422 ;; Return value:  Size  Location     Type
 34423 ;;                  1    wreg      void 
 34424 ;; Registers used:
 34425 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 34426 ;; Tracked objects:
 34427 ;;		On entry : 0/0
 34428 ;;		On exit  : 0/0
 34429 ;;		Unchanged: 0/0
 34430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34432 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34433 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34434 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34435 ;;Total ram usage:        6 bytes
 34436 ;; Hardware stack levels used: 1
 34437 ;; Hardware stack levels required when called: 3
 34438 ;; This function calls:
 34439 ;;		Absolute function
 34440 ;;		_EUSART1_Receive_ISR
 34441 ;;		_EUSART1_Transmit_ISR
 34442 ;;		_TMR0_ISR
 34443 ;;		_TMR1_ISR
 34444 ;;		_TMR2_ISR
 34445 ;; This function is called by:
 34446 ;;		Interrupt level 2
 34447 ;; This function uses a non-reentrant model
 34448 ;;
 34449                           
 34450                           	psect	intcode
 34451  000008                     __pintcode:
 34452                           	callstack 0
 34453  000008                     _INTERRUPT_InterruptManager:
 34454                           	callstack 14
 34455                           
 34456                           ; BSR set to: 14
 34457                           ;incstack = 0
 34458  000008  8250               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 34459  00000A  CFFA F00A          	movff	pclath,??_INTERRUPT_InterruptManager
 34460  00000E  CFFB F00B          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 34461  000012  CFD9 F00C          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
 34462  000016  CFDA F00D          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
 34463  00001A  CFF3 F00E          	movff	prodl,??_INTERRUPT_InterruptManager+4
 34464  00001E  CFF4 F00F          	movff	prodh,??_INTERRUPT_InterruptManager+5
 34465                           
 34466                           ;mcc_generated_files/interrupt_manager.c: 61:     if(PIE0bits.TMR0IE == 1 && PIR0bits.TM
      +                          R0IF == 1)
 34467  000022  010E               	movlb	14	; () banked
 34468  000024  BBC2               	btfsc	194,5,b	;volatile
 34469                           
 34470                           ; BSR set to: 14
 34471  000026  ABCA               	btfss	202,5,b	;volatile
 34472  000028  D003               	goto	i2l867
 34473                           
 34474                           ; BSR set to: 14
 34475                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         TMR0_ISR();
 34476  00002A  EC12  F04C         	call	_TMR0_ISR	;wreg free
 34477                           
 34478                           ;mcc_generated_files/interrupt_manager.c: 64:     }
 34479  00002E  D028               	goto	i2l873
 34480  000030                     i2l867:
 34481                           
 34482                           ; BSR set to: 14
 34483  000030  ACF2               	btfss	242,6,c	;volatile
 34484  000032  D026               	goto	i2l873
 34485                           
 34486                           ; BSR set to: 14
 34487                           ;mcc_generated_files/interrupt_manager.c: 66:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 67:         if(PIE3bits.TX1IE == 1 && PIR3bits.TX1IF == 1)
 34488  000034  B9C5               	btfsc	197,4,b	;volatile
 34489                           
 34490                           ; BSR set to: 14
 34491  000036  A9CD               	btfss	205,4,b	;volatile
 34492  000038  D009               	goto	i2l870
 34493                           
 34494                           ; BSR set to: 14
 34495                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             EUSART1_TxDefaultInterruptHandler();
 34496  00003A  D801               	call	i2u2288_48
 34497  00003C  D021               	goto	i2l873
 34498  00003E                     i2u2288_48:
 34499  00003E  0005               	push	
 34500  000040  6EFA               	movwf	pclath,c
 34501  000042  0102               	movlb	2	; () banked
 34502  000044  51EB               	movf	_EUSART1_TxDefaultInterruptHandler& (0+255),w,b
 34503  000046  6EFD               	movwf	tosl,c
 34504  000048  51EC               	movf	(_EUSART1_TxDefaultInterruptHandler+1)& (0+255),w,b
 34505  00004A  D00B               	goto	L112
 34506  00004C                     i2l870:
 34507                           
 34508                           ; BSR set to: 14
 34509  00004C  BBC5               	btfsc	197,5,b	;volatile
 34510                           
 34511                           ; BSR set to: 14
 34512  00004E  ABCD               	btfss	205,5,b	;volatile
 34513  000050  D00C               	goto	i2l872
 34514                           
 34515                           ; BSR set to: 14
 34516                           ;mcc_generated_files/interrupt_manager.c: 72:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 73:             EUSART1_RxDefaultInterruptHandler();
 34517  000052  D801               	call	i2u2291_48
 34518  000054  D015               	goto	i2l873
 34519  000056                     i2u2291_48:
 34520  000056  0005               	push	
 34521  000058  6EFA               	movwf	pclath,c
 34522  00005A  0102               	movlb	2	; () banked
 34523  00005C  51E9               	movf	_EUSART1_RxDefaultInterruptHandler& (0+255),w,b
 34524  00005E  6EFD               	movwf	tosl,c
 34525  000060  51EA               	movf	(_EUSART1_RxDefaultInterruptHandler+1)& (0+255),w,b
 34526  000062                     L112:
 34527  000062  6EFE               	movwf	tosh,c
 34528  000064  6AFF               	clrf	tosu,c
 34529  000066  50FA               	movf	pclath,w,c
 34530  000068  0012               	return		;indir
 34531  00006A                     i2l872:
 34532                           
 34533                           ; BSR set to: 14
 34534  00006A  B1C6               	btfsc	198,0,b	;volatile
 34535                           
 34536                           ; BSR set to: 14
 34537  00006C  A1CE               	btfss	206,0,b	;volatile
 34538  00006E  D003               	goto	i2l874
 34539                           
 34540                           ; BSR set to: 14
 34541                           ;mcc_generated_files/interrupt_manager.c: 76:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 77:             TMR1_ISR();
 34542  000070  EC88  F049         	call	_TMR1_ISR	;wreg free
 34543                           
 34544                           ;mcc_generated_files/interrupt_manager.c: 78:         }
 34545  000074  D005               	goto	i2l873
 34546  000076                     i2l874:
 34547                           
 34548                           ; BSR set to: 14
 34549  000076  B3C6               	btfsc	198,1,b	;volatile
 34550                           
 34551                           ; BSR set to: 14
 34552  000078  A3CE               	btfss	206,1,b	;volatile
 34553  00007A  D002               	goto	i2l873
 34554                           
 34555                           ; BSR set to: 14
 34556                           ;mcc_generated_files/interrupt_manager.c: 80:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 81:             TMR2_ISR();
 34557  00007C  ECD0  F034         	call	_TMR2_ISR	;wreg free
 34558  000080                     i2l873:
 34559                           
 34560                           ; BSR set to: 14
 34561  000080  C00F  FFF4         	movff	??_INTERRUPT_InterruptManager+5,prodh
 34562  000084  C00E  FFF3         	movff	??_INTERRUPT_InterruptManager+4,prodl
 34563  000088  C00D  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
 34564  00008C  C00C  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
 34565  000090  C00B  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 34566  000094  C00A  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 34567  000098  9250               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 34568  00009A  0011               	retfie		f
 34569  00009C                     __end_of_INTERRUPT_InterruptManager:
 34570                           	callstack 0
 34571                           
 34572 ;; *************** function _TMR2_ISR *****************
 34573 ;; Defined at:
 34574 ;;		line 180 in file "mcc_generated_files/tmr2.c"
 34575 ;; Parameters:    Size  Location     Type
 34576 ;;		None
 34577 ;; Auto vars:     Size  Location     Type
 34578 ;;		None
 34579 ;; Return value:  Size  Location     Type
 34580 ;;                  1    wreg      void 
 34581 ;; Registers used:
 34582 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 34583 ;; Tracked objects:
 34584 ;;		On entry : 3F/E
 34585 ;;		On exit  : 0/0
 34586 ;;		Unchanged: 0/0
 34587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34591 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34592 ;;Total ram usage:        0 bytes
 34593 ;; Hardware stack levels used: 1
 34594 ;; Hardware stack levels required when called: 2
 34595 ;; This function calls:
 34596 ;;		Absolute function
 34597 ;;		_ReadADC
 34598 ;;		_TMR2_DefaultInterruptHandler
 34599 ;;		_controlTimeslots
 34600 ;;		_refreshSegment
 34601 ;; This function is called by:
 34602 ;;		_INTERRUPT_InterruptManager
 34603 ;; This function uses a non-reentrant model
 34604 ;;
 34605                           
 34606                           	psect	text187
 34607  0069A0                     __ptext187:
 34608                           	callstack 0
 34609  0069A0                     _TMR2_ISR:
 34610                           	callstack 14
 34611                           
 34612                           ; BSR set to: 14
 34613                           ;mcc_generated_files/tmr2.c: 184:     PIR4bits.TMR2IF = 0;
 34614                           
 34615                           ;incstack = 0
 34616  0069A0  93CE               	bcf	206,1,b	;volatile
 34617                           
 34618                           ; BSR set to: 14
 34619                           ;mcc_generated_files/tmr2.c: 188:                 ReadADC();
 34620  0069A2  EC3B  F047         	call	_ReadADC	;wreg free
 34621                           
 34622                           ;mcc_generated_files/tmr2.c: 191:             refreshSegment();
 34623  0069A6  ECD3  F040         	call	_refreshSegment	;wreg free
 34624                           
 34625                           ;mcc_generated_files/tmr2.c: 193:             if(ts_system.ts_TimeSlotMain>0)
 34626  0069AA  0101               	movlb	1	; () banked
 34627  0069AC  51A2               	movf	(_ts_system+3)& (0+255),w,b	;volatile
 34628  0069AE  A4D8               	btfss	status,2,c
 34629                           
 34630                           ; BSR set to: 1
 34631                           ;mcc_generated_files/tmr2.c: 194:                 {;mcc_generated_files/tmr2.c: 195:    
      +                                       ts_system.ts_TimeSlotMain--;
 34632  0069B0  07A2               	decf	(_ts_system+3)& (0+255),f,b	;volatile
 34633                           
 34634                           ; BSR set to: 1
 34635                           ;mcc_generated_files/tmr2.c: 198:             if (ts_system.ts_TimeSlot50ms > 0)
 34636  0069B2  51A0               	movf	(_ts_system+1)& (0+255),w,b	;volatile
 34637  0069B4  B4D8               	btfsc	status,2,c
 34638  0069B6  D002               	goto	i2l16865
 34639                           
 34640                           ; BSR set to: 1
 34641                           ;mcc_generated_files/tmr2.c: 199:                 {;mcc_generated_files/tmr2.c: 200:    
      +                                       ts_system.ts_TimeSlot50ms--;
 34642  0069B8  07A0               	decf	(_ts_system+1)& (0+255),f,b	;volatile
 34643                           
 34644                           ;mcc_generated_files/tmr2.c: 201:                 }
 34645  0069BA  D089               	goto	i2l16937
 34646  0069BC                     i2l16865:
 34647                           
 34648                           ; BSR set to: 1
 34649                           ;mcc_generated_files/tmr2.c: 203:                 {;mcc_generated_files/tmr2.c: 204:    
      +                                       ts_system.ts_TimeSlot50ms = 50;
 34650  0069BC  0E32               	movlw	50
 34651  0069BE  6FA0               	movwf	(_ts_system+1)& (0+255),b	;volatile
 34652                           
 34653                           ; BSR set to: 1
 34654                           ;mcc_generated_files/tmr2.c: 208:                     controlTimeslots();
 34655  0069C0  ECF5  F030         	call	_controlTimeslots	;wreg free
 34656                           
 34657                           ; BSR set to: 1
 34658                           ;mcc_generated_files/tmr2.c: 210:                       if (Counterchoose == 0)
 34659  0069C4  0100               	movlb	0	; () banked
 34660  0069C6  5192               	movf	_Counterchoose& (0+255),w,b
 34661  0069C8  A4D8               	btfss	status,2,c
 34662  0069CA  D002               	goto	i2l16873
 34663                           
 34664                           ; BSR set to: 0
 34665                           ;mcc_generated_files/tmr2.c: 211:                                {;mcc_generated_files/t
      +                          mr2.c: 212:                                    Counterchoose = 1;
 34666  0069CC  0E01               	movlw	1
 34667  0069CE  D001               	goto	L113
 34668  0069D0                     i2l16873:
 34669                           
 34670                           ; BSR set to: 0
 34671                           ;mcc_generated_files/tmr2.c: 215:                                {;mcc_generated_files/t
      +                          mr2.c: 216:                                    Counterchoose = 0;
 34672  0069D0  0E00               	movlw	0
 34673  0069D2                     L113:
 34674  0069D2  6F92               	movwf	_Counterchoose& (0+255),b
 34675                           
 34676                           ; BSR set to: 0
 34677                           ;mcc_generated_files/tmr2.c: 218:                            if (var_sys.LearningIsEnabl
      +                          ed==NO)
 34678                           
 34679                           ;mcc_generated_files/tmr2.c: 217:                                }
 34680  0069D4  0101               	movlb	1	; () banked
 34681  0069D6  5126               	movf	(_var_sys+38)& (0+255),w,b	;volatile
 34682  0069D8  A4D8               	btfss	status,2,c
 34683  0069DA  D034               	goto	i2l16899
 34684                           
 34685                           ; BSR set to: 1
 34686                           ;mcc_generated_files/tmr2.c: 219:                            {;mcc_generated_files/tmr2.
      +                          c: 222:                                if (var_sys.TimeMaxMotorIsON > 0 && var_sys.Activ
      +                          atecounter != stoped)
 34687  0069DC  5118               	movf	(_var_sys+24)& (0+255),w,b	;volatile
 34688  0069DE  1119               	iorwf	(_var_sys+25)& (0+255),w,b	;volatile
 34689  0069E0  111A               	iorwf	(_var_sys+26)& (0+255),w,b	;volatile
 34690  0069E2  111B               	iorwf	(_var_sys+27)& (0+255),w,b	;volatile
 34691  0069E4  B4D8               	btfsc	status,2,c
 34692  0069E6  D008               	goto	i2l1266
 34693                           
 34694                           ; BSR set to: 1
 34695  0069E8  5116               	movf	(_var_sys+22)& (0+255),w,b	;volatile
 34696  0069EA  B4D8               	btfsc	status,2,c
 34697  0069EC  D005               	goto	i2l1266
 34698                           
 34699                           ; BSR set to: 1
 34700                           ;mcc_generated_files/tmr2.c: 223:                                {;mcc_generated_files/t
      +                          mr2.c: 225:                                     var_sys.TimeMaxMotorIsON--;
 34701  0069EE  0718               	decf	(_var_sys+24)& (0+255),f,b	;volatile
 34702  0069F0  0E00               	movlw	0
 34703  0069F2  5B19               	subwfb	(_var_sys+25)& (0+255),f,b	;volatile
 34704  0069F4  5B1A               	subwfb	(_var_sys+26)& (0+255),f,b	;volatile
 34705  0069F6  5B1B               	subwfb	(_var_sys+27)& (0+255),f,b	;volatile
 34706  0069F8                     i2l1266:
 34707                           
 34708                           ; BSR set to: 1
 34709                           ;mcc_generated_files/tmr2.c: 230:                                if (var_sys.Activatecou
      +                          nter == open)
 34710  0069F8  0516               	decf	(_var_sys+22)& (0+255),w,b	;volatile
 34711  0069FA  A4D8               	btfss	status,2,c
 34712  0069FC  D00E               	goto	i2l16889
 34713                           
 34714                           ; BSR set to: 1
 34715                           ;mcc_generated_files/tmr2.c: 231:                                {;mcc_generated_files/t
      +                          mr2.c: 232:                                    {;mcc_generated_files/tmr2.c: 234:       
      +                                                            if (powerControl_st.decelarationActive==YES)
 34716  0069FE  057B               	decf	_powerControl_st& (0+255),w,b
 34717  006A00  A4D8               	btfss	status,2,c
 34718  006A02  D004               	goto	i2u1905_40
 34719                           
 34720                           ; BSR set to: 1
 34721                           ;mcc_generated_files/tmr2.c: 235:                                         {;mcc_generate
      +                          d_files/tmr2.c: 236:                                             if(Counterchoose ==1){
 34722  006A04  0100               	movlb	0	; () banked
 34723  006A06  0592               	decf	_Counterchoose& (0+255),w,b
 34724  006A08  A4D8               	btfss	status,2,c
 34725  006A0A  D061               	goto	i2l16937
 34726  006A0C                     i2u1905_40:
 34727                           
 34728                           ;mcc_generated_files/tmr2.c: 237:                                               var_sys.
      +                          PositionActual++;
 34729  006A0C  0E01               	movlw	1
 34730  006A0E  0101               	movlb	1	; () banked
 34731  006A10  271E               	addwf	(_var_sys+30)& (0+255),f,b	;volatile
 34732  006A12  0E00               	movlw	0
 34733  006A14  231F               	addwfc	(_var_sys+31)& (0+255),f,b	;volatile
 34734  006A16  2320               	addwfc	(_var_sys+32)& (0+255),f,b	;volatile
 34735  006A18  D013               	goto	L114
 34736  006A1A                     i2l16889:
 34737                           
 34738                           ; BSR set to: 1
 34739  006A1A  0E02               	movlw	2
 34740  006A1C  1916               	xorwf	(_var_sys+22)& (0+255),w,b	;volatile
 34741  006A1E  A4D8               	btfss	status,2,c
 34742  006A20  D056               	goto	i2l16937
 34743                           
 34744                           ; BSR set to: 1
 34745                           ;mcc_generated_files/tmr2.c: 250:                                {;mcc_generated_files/t
      +                          mr2.c: 251:                                        if (powerControl_st.decelarationActiv
      +                          e==YES)
 34746  006A22  057B               	decf	_powerControl_st& (0+255),w,b
 34747  006A24  A4D8               	btfss	status,2,c
 34748  006A26  D004               	goto	i2u1908_40
 34749                           
 34750                           ; BSR set to: 1
 34751                           ;mcc_generated_files/tmr2.c: 252:                                         {;mcc_generate
      +                          d_files/tmr2.c: 253:                                             if(Counterchoose ==1){
 34752  006A28  0100               	movlb	0	; () banked
 34753  006A2A  0592               	decf	_Counterchoose& (0+255),w,b
 34754  006A2C  A4D8               	btfss	status,2,c
 34755  006A2E  D04F               	goto	i2l16937
 34756  006A30                     i2u1908_40:
 34757                           
 34758                           ;mcc_generated_files/tmr2.c: 254:                                               var_sys.
      +                          PositionActual--;
 34759  006A30  0EFF               	movlw	255
 34760  006A32  0101               	movlb	1	; () banked
 34761  006A34  271E               	addwf	(_var_sys+30)& (0+255),f,b	;volatile
 34762  006A36  0EFF               	movlw	255
 34763  006A38  231F               	addwfc	(_var_sys+31)& (0+255),f,b	;volatile
 34764  006A3A  0EFF               	movlw	255
 34765  006A3C  2320               	addwfc	(_var_sys+32)& (0+255),f,b	;volatile
 34766  006A3E  0EFF               	movlw	255
 34767  006A40                     L114:
 34768  006A40  2321               	addwfc	(_var_sys+33)& (0+255),f,b	;volatile
 34769                           
 34770                           ;mcc_generated_files/tmr2.c: 263:                            }
 34771  006A42  D045               	goto	i2l16937
 34772  006A44                     i2l16899:
 34773                           
 34774                           ; BSR set to: 1
 34775                           ;mcc_generated_files/tmr2.c: 266:                            {;mcc_generated_files/tmr2.
      +                          c: 267:                                if (var_sys.Counter_Learning ==1)
 34776  006A44  0517               	decf	(_var_sys+23)& (0+255),w,b	;volatile
 34777  006A46  A4D8               	btfss	status,2,c
 34778  006A48  D01C               	goto	i2l1277
 34779                           
 34780                           ; BSR set to: 1
 34781                           ;mcc_generated_files/tmr2.c: 268:                                {;mcc_generated_files/t
      +                          mr2.c: 270:                                     if (var_sys.Activatecounter == open)
 34782  006A4A  0516               	decf	(_var_sys+22)& (0+255),w,b	;volatile
 34783  006A4C  A4D8               	btfss	status,2,c
 34784  006A4E  D00B               	goto	i2l16909
 34785                           
 34786                           ; BSR set to: 1
 34787                           ;mcc_generated_files/tmr2.c: 271:                                     {;mcc_generated_fi
      +                          les/tmr2.c: 273:                                         if (var_sys.LearningDecelaratio
      +                          n ==1)
 34788  006A50  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 34789  006A52  B4D8               	btfsc	status,2,c
 34790  006A54  D016               	goto	i2l1277
 34791                           
 34792                           ; BSR set to: 1
 34793                           ;mcc_generated_files/tmr2.c: 282:                                            {;mcc_gener
      +                          ated_files/tmr2.c: 283:                                              learn_st.timeOpen++
      +                          ;
 34794  006A56  0E01               	movlw	1
 34795  006A58  0100               	movlb	0	; () banked
 34796  006A5A  2764               	addwf	(_learn_st+4)& (0+255),f,b	;volatile
 34797  006A5C  0E00               	movlw	0
 34798  006A5E  2365               	addwfc	(_learn_st+5)& (0+255),f,b	;volatile
 34799  006A60  2366               	addwfc	(_learn_st+6)& (0+255),f,b	;volatile
 34800  006A62  2367               	addwfc	(_learn_st+7)& (0+255),f,b	;volatile
 34801  006A64  D00E               	goto	i2l1277
 34802  006A66                     i2l16909:
 34803                           
 34804                           ; BSR set to: 1
 34805  006A66  0E02               	movlw	2
 34806  006A68  1916               	xorwf	(_var_sys+22)& (0+255),w,b	;volatile
 34807  006A6A  A4D8               	btfss	status,2,c
 34808  006A6C  D00A               	goto	i2l1277
 34809                           
 34810                           ; BSR set to: 1
 34811                           ;mcc_generated_files/tmr2.c: 287:                                     {;mcc_generated_fi
      +                          les/tmr2.c: 289:                                         if (var_sys.LearningDecelaratio
      +                          n ==1)
 34812  006A6E  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 34813  006A70  B4D8               	btfsc	status,2,c
 34814  006A72  D007               	goto	i2l1277
 34815                           
 34816                           ; BSR set to: 1
 34817                           ;mcc_generated_files/tmr2.c: 297:                                             {;mcc_gene
      +                          rated_files/tmr2.c: 298:                                                learn_st.timeClo
      +                          se++;
 34818  006A74  0E01               	movlw	1
 34819  006A76  0100               	movlb	0	; () banked
 34820  006A78  2760               	addwf	_learn_st& (0+255),f,b	;volatile
 34821  006A7A  0E00               	movlw	0
 34822  006A7C  2361               	addwfc	(_learn_st+1)& (0+255),f,b	;volatile
 34823  006A7E  2362               	addwfc	(_learn_st+2)& (0+255),f,b	;volatile
 34824  006A80  2363               	addwfc	(_learn_st+3)& (0+255),f,b	;volatile
 34825  006A82                     i2l1277:
 34826                           
 34827                           ;mcc_generated_files/tmr2.c: 304:                                 if (var_sys.LearningDe
      +                          celaration ==1 && var_sys.programinAutomatic == 1)
 34828  006A82  0101               	movlb	1	; () banked
 34829  006A84  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 34830  006A86  A4D8               	btfss	status,2,c
 34831  006A88  D022               	goto	i2l16937
 34832                           
 34833                           ; BSR set to: 1
 34834  006A8A  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 34835  006A8C  A4D8               	btfss	status,2,c
 34836  006A8E  D01F               	goto	i2l16937
 34837                           
 34838                           ; BSR set to: 1
 34839                           ;mcc_generated_files/tmr2.c: 305:                                 {;mcc_generated_files/
      +                          tmr2.c: 308:                                        if ( ts_system.ts_TimeSlot500ms > 0)
 34840  006A90  519F               	movf	_ts_system& (0+255),w,b	;volatile
 34841  006A92  B4D8               	btfsc	status,2,c
 34842  006A94  D002               	goto	i2l16923
 34843                           
 34844                           ; BSR set to: 1
 34845                           ;mcc_generated_files/tmr2.c: 309:                                            {;mcc_gener
      +                          ated_files/tmr2.c: 310:                                                ts_system.ts_Time
      +                          Slot500ms--;
 34846  006A96  079F               	decf	_ts_system& (0+255),f,b	;volatile
 34847                           
 34848                           ;mcc_generated_files/tmr2.c: 311:                                            }
 34849  006A98  D01A               	goto	i2l16937
 34850  006A9A                     i2l16923:
 34851                           
 34852                           ; BSR set to: 1
 34853                           ;mcc_generated_files/tmr2.c: 314:                                          {;mcc_generat
      +                          ed_files/tmr2.c: 315:                                             ts_system.ts_TimeSlot5
      +                          00ms = 10;
 34854  006A9A  0E0A               	movlw	10
 34855  006A9C  6F9F               	movwf	_ts_system& (0+255),b	;volatile
 34856                           
 34857                           ; BSR set to: 1
 34858                           ;mcc_generated_files/tmr2.c: 317:                                             if ( var_s
      +                          ys.Activatecounter ==open )
 34859  006A9E  0516               	decf	(_var_sys+22)& (0+255),w,b	;volatile
 34860  006AA0  A4D8               	btfss	status,2,c
 34861  006AA2  D009               	goto	i2l16931
 34862                           
 34863                           ; BSR set to: 1
 34864                           ;mcc_generated_files/tmr2.c: 318:                                                {;mcc_g
      +                          enerated_files/tmr2.c: 319:                                                  learn_st.ti
      +                          meDecelerationOpen++;
 34865  006AA4  0100               	movlb	0	; () banked
 34866  006AA6  2B69               	incf	(_learn_st+9)& (0+255),f,b	;volatile
 34867                           
 34868                           ; BSR set to: 0
 34869                           ;mcc_generated_files/tmr2.c: 320:                                                  learn
      +                          _st.timeOpen++;
 34870  006AA8  0E01               	movlw	1
 34871  006AAA  2764               	addwf	(_learn_st+4)& (0+255),f,b	;volatile
 34872  006AAC  0E00               	movlw	0
 34873  006AAE  2365               	addwfc	(_learn_st+5)& (0+255),f,b	;volatile
 34874  006AB0  2366               	addwfc	(_learn_st+6)& (0+255),f,b	;volatile
 34875  006AB2  2367               	addwfc	(_learn_st+7)& (0+255),f,b	;volatile
 34876                           
 34877                           ;mcc_generated_files/tmr2.c: 322:                                                }
 34878  006AB4  D00C               	goto	i2l16937
 34879  006AB6                     i2l16931:
 34880                           
 34881                           ; BSR set to: 1
 34882  006AB6  0E02               	movlw	2
 34883  006AB8  1916               	xorwf	(_var_sys+22)& (0+255),w,b	;volatile
 34884  006ABA  A4D8               	btfss	status,2,c
 34885  006ABC  D008               	goto	i2l16937
 34886                           
 34887                           ; BSR set to: 1
 34888                           ;mcc_generated_files/tmr2.c: 325:                                                {;mcc_g
      +                          enerated_files/tmr2.c: 326:                                                  learn_st.ti
      +                          meDecelerationClose++;
 34889  006ABE  0100               	movlb	0	; () banked
 34890  006AC0  2B68               	incf	(_learn_st+8)& (0+255),f,b	;volatile
 34891                           
 34892                           ; BSR set to: 0
 34893                           ;mcc_generated_files/tmr2.c: 327:                                                  learn
      +                          _st.timeClose++;
 34894  006AC2  0E01               	movlw	1
 34895  006AC4  2760               	addwf	_learn_st& (0+255),f,b	;volatile
 34896  006AC6  0E00               	movlw	0
 34897  006AC8  2361               	addwfc	(_learn_st+1)& (0+255),f,b	;volatile
 34898  006ACA  2362               	addwfc	(_learn_st+2)& (0+255),f,b	;volatile
 34899  006ACC  2363               	addwfc	(_learn_st+3)& (0+255),f,b	;volatile
 34900  006ACE                     i2l16937:
 34901                           
 34902                           ;mcc_generated_files/tmr2.c: 335:     if(TMR2_InterruptHandler)
 34903  006ACE  0102               	movlb	2	; () banked
 34904  006AD0  51DB               	movf	_TMR2_InterruptHandler& (0+255),w,b
 34905  006AD2  11DC               	iorwf	(_TMR2_InterruptHandler+1)& (0+255),w,b
 34906  006AD4  B4D8               	btfsc	status,2,c
 34907  006AD6  0012               	return	
 34908                           
 34909                           ; BSR set to: 2
 34910                           ;mcc_generated_files/tmr2.c: 336:     {;mcc_generated_files/tmr2.c: 337:         TMR2_In
      +                          terruptHandler();
 34911  006AD8  D801               	call	i2u1920_48
 34912  006ADA  0012               	return	
 34913  006ADC                     i2u1920_48:
 34914  006ADC  0005               	push	
 34915  006ADE  6EFA               	movwf	pclath,c
 34916  006AE0  51DB               	movf	_TMR2_InterruptHandler& (0+255),w,b
 34917  006AE2  6EFD               	movwf	tosl,c
 34918  006AE4  51DC               	movf	(_TMR2_InterruptHandler+1)& (0+255),w,b
 34919  006AE6  6EFE               	movwf	tosh,c
 34920  006AE8  6AFF               	clrf	tosu,c
 34921  006AEA  50FA               	movf	pclath,w,c
 34922  006AEC  0012               	return		;indir
 34923  006AEE                     __end_of_TMR2_ISR:
 34924                           	callstack 0
 34925                           
 34926 ;; *************** function _refreshSegment *****************
 34927 ;; Defined at:
 34928 ;;		line 50 in file "outputs_MC50.c"
 34929 ;; Parameters:    Size  Location     Type
 34930 ;;		None
 34931 ;; Auto vars:     Size  Location     Type
 34932 ;;		None
 34933 ;; Return value:  Size  Location     Type
 34934 ;;                  1    wreg      void 
 34935 ;; Registers used:
 34936 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 34937 ;; Tracked objects:
 34938 ;;		On entry : 31/E
 34939 ;;		On exit  : 3E/0
 34940 ;;		Unchanged: 0/0
 34941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34945 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34946 ;;Total ram usage:        0 bytes
 34947 ;; Hardware stack levels used: 1
 34948 ;; Hardware stack levels required when called: 1
 34949 ;; This function calls:
 34950 ;;		_Segments_Set
 34951 ;; This function is called by:
 34952 ;;		_TMR2_ISR
 34953 ;; This function uses a non-reentrant model
 34954 ;;
 34955                           
 34956                           	psect	text188
 34957  0081A6                     __ptext188:
 34958                           	callstack 0
 34959  0081A6                     _refreshSegment:
 34960                           	callstack 14
 34961                           
 34962                           ;outputs_MC50.c: 54:     if (dispStruct.intermitentFreq==0||dispStruct.upFase==1)
 34963                           
 34964                           ;incstack = 0
 34965  0081A6  0100               	movlb	0	; () banked
 34966  0081A8  5175               	movf	(_dispStruct+3)& (0+255),w,b	;volatile
 34967  0081AA  1176               	iorwf	(_dispStruct+4)& (0+255),w,b	;volatile
 34968  0081AC  B4D8               	btfsc	status,2,c
 34969  0081AE  D003               	goto	i2u1520_40
 34970                           
 34971                           ; BSR set to: 0
 34972  0081B0  0577               	decf	(_dispStruct+5)& (0+255),w,b	;volatile
 34973  0081B2  A4D8               	btfss	status,2,c
 34974  0081B4  D01F               	goto	i2l2133
 34975  0081B6                     i2u1520_40:
 34976                           
 34977                           ; BSR set to: 0
 34978                           ;outputs_MC50.c: 55:     {;outputs_MC50.c: 56:         if (dispStruct.lastDisplay==disp2
      +                          _e)
 34979  0081B6  0574               	decf	(_dispStruct+2)& (0+255),w,b	;volatile
 34980  0081B8  A4D8               	btfss	status,2,c
 34981  0081BA  D00D               	goto	i2l2128
 34982                           
 34983                           ; BSR set to: 0
 34984                           
 34985                           ;outputs_MC50.c: 57:         {;outputs_MC50.c: 58:             do { LATCbits.LATC0 = 0; 
      +                          } while(0);
 34986  0081BC  9085               	bcf	133,0,c	;volatile
 34987                           
 34988                           ; BSR set to: 0
 34989                           ;outputs_MC50.c: 59:             Segments_Set(DispTable[dispStruct.display_grp.value_dis
      +                          play1]);
 34990  0081BE  0ED2               	movlw	low _DispTable
 34991  0081C0  2572               	addwf	_dispStruct& (0+255),w,b	;volatile
 34992  0081C2  6ED9               	movwf	fsr2l,c
 34993  0081C4  6ADA               	clrf	fsr2h,c
 34994  0081C6  0E03               	movlw	high _DispTable
 34995  0081C8  22DA               	addwfc	fsr2h,f,c
 34996  0081CA  50DF               	movf	indf2,w,c
 34997  0081CC  ECB6  F04D         	call	_Segments_Set
 34998  0081D0  8285               	bsf	133,1,c	;volatile
 34999                           
 35000                           ;outputs_MC50.c: 61:             dispStruct.lastDisplay=disp1_e;
 35001  0081D2  0E00               	movlw	0
 35002  0081D4  D00C               	goto	L115
 35003  0081D6                     i2l2128:
 35004                           
 35005                           ; BSR set to: 0
 35006  0081D6  9285               	bcf	133,1,c	;volatile
 35007                           
 35008                           ; BSR set to: 0
 35009                           ;outputs_MC50.c: 66:             Segments_Set(DispTable[dispStruct.display_grp.value_dis
      +                          play2]);
 35010  0081D8  0ED2               	movlw	low _DispTable
 35011  0081DA  2573               	addwf	(_dispStruct+1)& (0+255),w,b	;volatile
 35012  0081DC  6ED9               	movwf	fsr2l,c
 35013  0081DE  6ADA               	clrf	fsr2h,c
 35014  0081E0  0E03               	movlw	high _DispTable
 35015  0081E2  22DA               	addwfc	fsr2h,f,c
 35016  0081E4  50DF               	movf	indf2,w,c
 35017  0081E6  ECB6  F04D         	call	_Segments_Set
 35018  0081EA  8085               	bsf	133,0,c	;volatile
 35019                           
 35020                           ;outputs_MC50.c: 68:             dispStruct.lastDisplay=disp2_e;
 35021  0081EC  0E01               	movlw	1
 35022  0081EE                     L115:
 35023  0081EE  0100               	movlb	0	; () banked
 35024  0081F0  6F74               	movwf	(_dispStruct+2)& (0+255),b	;volatile
 35025  0081F2  D002               	goto	i2l14935
 35026  0081F4                     i2l2133:
 35027                           
 35028                           ; BSR set to: 0
 35029  0081F4  9085               	bcf	133,0,c	;volatile
 35030                           
 35031                           ; BSR set to: 0
 35032                           
 35033                           ;outputs_MC50.c: 75:         do { LATCbits.LATC1 = 0; } while(0);
 35034  0081F6  9285               	bcf	133,1,c	;volatile
 35035  0081F8                     i2l14935:
 35036                           
 35037                           ; BSR set to: 0
 35038                           ;outputs_MC50.c: 79:     if(ts_system.timeFreqDigit<=0 && dispStruct.intermitentFreq!=0)
 35039  0081F8  0101               	movlb	1	; () banked
 35040  0081FA  BFAA               	btfsc	(_ts_system+11)& (0+255),7,b	;volatile
 35041  0081FC  D005               	goto	i2u1522_40
 35042  0081FE  51AA               	movf	(_ts_system+11)& (0+255),w,b	;volatile
 35043  008200  E114               	bnz	i2l2140
 35044  008202  05A9               	decf	(_ts_system+10)& (0+255),w,b	;volatile
 35045  008204  B0D8               	btfsc	status,0,c
 35046  008206  0012               	return	
 35047  008208                     i2u1522_40:
 35048                           
 35049                           ; BSR set to: 1
 35050  008208  0100               	movlb	0	; () banked
 35051  00820A  5175               	movf	(_dispStruct+3)& (0+255),w,b	;volatile
 35052  00820C  1176               	iorwf	(_dispStruct+4)& (0+255),w,b	;volatile
 35053  00820E  B4D8               	btfsc	status,2,c
 35054  008210  0012               	return	
 35055                           
 35056                           ; BSR set to: 0
 35057                           ;outputs_MC50.c: 80:     {;outputs_MC50.c: 81:         ts_system.timeFreqDigit=dispStruc
      +                          t.intermitentFreq;
 35058  008212  C075  F1A9         	movff	_dispStruct+3,_ts_system+10	;volatile
 35059  008216  C076  F1AA         	movff	_dispStruct+4,_ts_system+11	;volatile
 35060                           
 35061                           ; BSR set to: 0
 35062                           ;outputs_MC50.c: 82:         if(dispStruct.upFase==1)
 35063  00821A  0577               	decf	(_dispStruct+5)& (0+255),w,b	;volatile
 35064  00821C  A4D8               	btfss	status,2,c
 35065  00821E  D003               	goto	i2l14945
 35066                           
 35067                           ; BSR set to: 0
 35068                           ;outputs_MC50.c: 83:         {;outputs_MC50.c: 84:             dispStruct.upFase = 0;
 35069  008220  0E00               	movlw	0
 35070  008222  6F77               	movwf	(_dispStruct+5)& (0+255),b	;volatile
 35071                           
 35072                           ;outputs_MC50.c: 85:         }
 35073  008224  0012               	return	
 35074  008226                     i2l14945:
 35075                           
 35076                           ; BSR set to: 0
 35077                           ;outputs_MC50.c: 87:         {;outputs_MC50.c: 88:             dispStruct.upFase = 1;
 35078  008226  0E01               	movlw	1
 35079  008228  6F77               	movwf	(_dispStruct+5)& (0+255),b	;volatile
 35080  00822A                     i2l2140:
 35081  00822A  0012               	return		;funcret
 35082  00822C                     __end_of_refreshSegment:
 35083                           	callstack 0
 35084                           
 35085 ;; *************** function _Segments_Set *****************
 35086 ;; Defined at:
 35087 ;;		line 93 in file "outputs_MC50.c"
 35088 ;; Parameters:    Size  Location     Type
 35089 ;;  value           1    wreg     unsigned char 
 35090 ;; Auto vars:     Size  Location     Type
 35091 ;;  value           1    0[COMRAM] unsigned char 
 35092 ;; Return value:  Size  Location     Type
 35093 ;;                  1    wreg      void 
 35094 ;; Registers used:
 35095 ;;		wreg, status,2, status,0
 35096 ;; Tracked objects:
 35097 ;;		On entry : 3F/0
 35098 ;;		On exit  : 0/0
 35099 ;;		Unchanged: 0/0
 35100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35102 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35104 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35105 ;;Total ram usage:        1 bytes
 35106 ;; Hardware stack levels used: 1
 35107 ;; This function calls:
 35108 ;;		Nothing
 35109 ;; This function is called by:
 35110 ;;		_refreshSegment
 35111 ;; This function uses a non-reentrant model
 35112 ;;
 35113                           
 35114                           	psect	text189
 35115  009B6C                     __ptext189:
 35116                           	callstack 0
 35117  009B6C                     _Segments_Set:
 35118                           	callstack 14
 35119                           
 35120                           ;incstack = 0
 35121                           ;Segments_Set@value stored from wreg
 35122  009B6C  6E01               	movwf	Segments_Set@value^0,c
 35123                           
 35124                           ;outputs_MC50.c: 93: void Segments_Set(char value);outputs_MC50.c: 94: {;outputs_MC50.c:
      +                           95:    LATD &= 0x80;
 35125  009B6E  0E80               	movlw	128
 35126  009B70  1686               	andwf	134,f,c	;volatile
 35127                           
 35128                           ;outputs_MC50.c: 96:    LATD |= value;
 35129  009B72  5001               	movf	Segments_Set@value^0,w,c	;volatile
 35130  009B74  1286               	iorwf	134,f,c	;volatile
 35131  009B76  0012               	return		;funcret
 35132  009B78                     __end_of_Segments_Set:
 35133                           	callstack 0
 35134                           
 35135 ;; *************** function _controlTimeslots *****************
 35136 ;; Defined at:
 35137 ;;		line 190 in file "main_MC50.c"
 35138 ;; Parameters:    Size  Location     Type
 35139 ;;		None
 35140 ;; Auto vars:     Size  Location     Type
 35141 ;;		None
 35142 ;; Return value:  Size  Location     Type
 35143 ;;                  1    wreg      void 
 35144 ;; Registers used:
 35145 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 35146 ;; Tracked objects:
 35147 ;;		On entry : 3F/1
 35148 ;;		On exit  : 3F/1
 35149 ;;		Unchanged: 0/0
 35150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35154 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35155 ;;Total ram usage:        0 bytes
 35156 ;; Hardware stack levels used: 1
 35157 ;; Hardware stack levels required when called: 1
 35158 ;; This function calls:
 35159 ;;		_decrementTimeslot
 35160 ;; This function is called by:
 35161 ;;		_TMR2_ISR
 35162 ;; This function uses a non-reentrant model
 35163 ;;
 35164                           
 35165                           	psect	text190
 35166  0061EA                     __ptext190:
 35167                           	callstack 0
 35168  0061EA                     _controlTimeslots:
 35169                           	callstack 14
 35170                           
 35171                           ; BSR set to: 1
 35172                           ;main_MC50.c: 192:  decrementTimeslot((int*)&ts_system.Debug_TS);
 35173                           
 35174                           ;incstack = 0
 35175  0061EA  0EA7               	movlw	low (_ts_system+8)
 35176  0061EC  6E01               	movwf	decrementTimeslot@ts^0,c
 35177  0061EE  0E01               	movlw	high (_ts_system+8)
 35178  0061F0  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35179  0061F2  ECB0  F04B         	call	_decrementTimeslot	;wreg free
 35180                           
 35181                           ;main_MC50.c: 193:     decrementTimeslot((int*)&ts_system.timewaitFlashRGB);
 35182  0061F6  0EE5               	movlw	low (_ts_system+70)
 35183  0061F8  6E01               	movwf	decrementTimeslot@ts^0,c
 35184  0061FA  0E01               	movlw	high (_ts_system+70)
 35185  0061FC  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35186  0061FE  ECB0  F04B         	call	_decrementTimeslot	;wreg free
 35187                           
 35188                           ;main_MC50.c: 194:     decrementTimeslot((int*)&ts_system.timeFreqDigit);
 35189  006202  0EA9               	movlw	low (_ts_system+10)
 35190  006204  6E01               	movwf	decrementTimeslot@ts^0,c
 35191  006206  0E01               	movlw	high (_ts_system+10)
 35192  006208  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35193  00620A  ECB0  F04B         	call	_decrementTimeslot	;wreg free
 35194                           
 35195                           ;main_MC50.c: 195:     decrementTimeslot((int*)&ts_system.timeSinalizationDigit);
 35196  00620E  0EAB               	movlw	low (_ts_system+12)
 35197  006210  6E01               	movwf	decrementTimeslot@ts^0,c
 35198  006212  0E01               	movlw	high (_ts_system+12)
 35199  006214  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35200  006216  ECB0  F04B         	call	_decrementTimeslot	;wreg free
 35201                           
 35202                           ;main_MC50.c: 196:     decrementTimeslot((int*)&ts_system.timeoutMenu);
 35203  00621A  0EAD               	movlw	low (_ts_system+14)
 35204  00621C  6E01               	movwf	decrementTimeslot@ts^0,c
 35205  00621E  0E01               	movlw	high (_ts_system+14)
 35206  006220  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35207  006222  ECB0  F04B         	call	_decrementTimeslot	;wreg free
 35208                           
 35209                           ;main_MC50.c: 197:     decrementTimeslot((int*)&ts_system.timeOpenWalk);
 35210  006226  0EAF               	movlw	low (_ts_system+16)
 35211  006228  6E01               	movwf	decrementTimeslot@ts^0,c
 35212  00622A  0E01               	movlw	high (_ts_system+16)
 35213  00622C  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35214  00622E  ECB0  F04B         	call	_decrementTimeslot	;wreg free
 35215                           
 35216                           ;main_MC50.c: 198:     decrementTimeslot((int*)&ts_system.timeWaitToClose);
 35217  006232  0EB1               	movlw	low (_ts_system+18)
 35218  006234  6E01               	movwf	decrementTimeslot@ts^0,c
 35219  006236  0E01               	movlw	high (_ts_system+18)
 35220  006238  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35221  00623A  ECB0  F04B         	call	_decrementTimeslot	;wreg free
 35222                           
 35223                           ;main_MC50.c: 199:     decrementTimeslot((int*)&ts_system.TimeLastCommand);
 35224  00623E  0EB3               	movlw	low (_ts_system+20)
 35225  006240  6E01               	movwf	decrementTimeslot@ts^0,c
 35226  006242  0E01               	movlw	high (_ts_system+20)
 35227  006244  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35228  006246  ECB0  F04B         	call	_decrementTimeslot	;wreg free
 35229                           
 35230                           ;main_MC50.c: 200:     decrementTimeslot((int*)&ts_system.timeSoftStart);
 35231  00624A  0EB5               	movlw	low (_ts_system+22)
 35232  00624C  6E01               	movwf	decrementTimeslot@ts^0,c
 35233  00624E  0E01               	movlw	high (_ts_system+22)
 35234  006250  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35235  006252  ECB0  F04B         	call	_decrementTimeslot	;wreg free
 35236                           
 35237                           ;main_MC50.c: 201:     decrementTimeslot((int*)&ts_system.TimeChargeCondesador);
 35238  006256  0EB9               	movlw	low (_ts_system+26)
 35239  006258  6E01               	movwf	decrementTimeslot@ts^0,c
 35240  00625A  0E01               	movlw	high (_ts_system+26)
 35241  00625C  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35242  00625E  ECB0  F04B         	call	_decrementTimeslot	;wreg free
 35243                           
 35244                           ;main_MC50.c: 203:     decrementTimeslot((int*)&ts_system.timeFreqRGB);
 35245  006262  0EBB               	movlw	low (_ts_system+28)
 35246  006264  6E01               	movwf	decrementTimeslot@ts^0,c
 35247  006266  0E01               	movlw	high (_ts_system+28)
 35248  006268  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35249  00626A  ECB0  F04B         	call	_decrementTimeslot	;wreg free
 35250                           
 35251                           ;main_MC50.c: 204:     decrementTimeslot((int*)&ts_system.timeFreqFlashligth);
 35252  00626E  0EBD               	movlw	low (_ts_system+30)
 35253  006270  6E01               	movwf	decrementTimeslot@ts^0,c
 35254  006272  0E01               	movlw	high (_ts_system+30)
 35255  006274  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35256  006276  ECB0  F04B         	call	_decrementTimeslot	;wreg free
 35257                           
 35258                           ;main_MC50.c: 206:     decrementTimeslot((int*)&ts_system.TimeWaitToNextState);
 35259  00627A  0EC3               	movlw	low (_ts_system+36)
 35260  00627C  6E01               	movwf	decrementTimeslot@ts^0,c
 35261  00627E  0E01               	movlw	high (_ts_system+36)
 35262  006280  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35263  006282  ECB0  F04B         	call	_decrementTimeslot	;wreg free
 35264                           
 35265                           ;main_MC50.c: 208:     decrementTimeslot((int*)&ts_system.timeBetweenSaveCounters);
 35266  006286  0EC5               	movlw	low (_ts_system+38)
 35267  006288  6E01               	movwf	decrementTimeslot@ts^0,c
 35268  00628A  0E01               	movlw	high (_ts_system+38)
 35269  00628C  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35270  00628E  ECB0  F04B         	call	_decrementTimeslot	;wreg free
 35271                           
 35272                           ;main_MC50.c: 209:     decrementTimeslot((int*)&ts_system.TimeElectricBrake);
 35273  006292  0EC7               	movlw	low (_ts_system+40)
 35274  006294  6E01               	movwf	decrementTimeslot@ts^0,c
 35275  006296  0E01               	movlw	high (_ts_system+40)
 35276  006298  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35277  00629A  ECB0  F04B         	call	_decrementTimeslot	;wreg free
 35278                           
 35279                           ;main_MC50.c: 210:     decrementTimeslot((int*)&ts_system.TimeCurrentAlarm);
 35280  00629E  0EC9               	movlw	low (_ts_system+42)
 35281  0062A0  6E01               	movwf	decrementTimeslot@ts^0,c
 35282  0062A2  0E01               	movlw	high (_ts_system+42)
 35283  0062A4  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35284  0062A6  ECB0  F04B         	call	_decrementTimeslot	;wreg free
 35285                           
 35286                           ;main_MC50.c: 212:     decrementTimeslot((int*)&ts_system.TimeStopedBeforeDecelaration);
 35287  0062AA  0ECB               	movlw	low (_ts_system+44)
 35288  0062AC  6E01               	movwf	decrementTimeslot@ts^0,c
 35289  0062AE  0E01               	movlw	high (_ts_system+44)
 35290  0062B0  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35291  0062B2  ECB0  F04B         	call	_decrementTimeslot	;wreg free
 35292                           
 35293                           ;main_MC50.c: 213:     decrementTimeslot((int*)&ts_system.TimeCurrentWaitForAlarm);
 35294  0062B6  0ECD               	movlw	low (_ts_system+46)
 35295  0062B8  6E01               	movwf	decrementTimeslot@ts^0,c
 35296  0062BA  0E01               	movlw	high (_ts_system+46)
 35297  0062BC  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35298  0062BE  ECB0  F04B         	call	_decrementTimeslot	;wreg free
 35299                           
 35300                           ;main_MC50.c: 214:     decrementTimeslot((int*)&ts_system.TimeInversionStart);
 35301  0062C2  0ECF               	movlw	low (_ts_system+48)
 35302  0062C4  6E01               	movwf	decrementTimeslot@ts^0,c
 35303  0062C6  0E01               	movlw	high (_ts_system+48)
 35304  0062C8  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35305  0062CA  ECB0  F04B         	call	_decrementTimeslot	;wreg free
 35306                           
 35307                           ;main_MC50.c: 215:     decrementTimeslot((int*)&ts_system.TimeReleCapacitor);
 35308  0062CE  0EE1               	movlw	low (_ts_system+66)
 35309  0062D0  6E01               	movwf	decrementTimeslot@ts^0,c
 35310  0062D2  0E01               	movlw	high (_ts_system+66)
 35311  0062D4  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35312  0062D6  ECB0  F04B         	call	_decrementTimeslot	;wreg free
 35313                           
 35314                           ;main_MC50.c: 216:     decrementTimeslot((int*)&ts_system.TimeWaitReleCapacitor);
 35315  0062DA  0EE3               	movlw	low (_ts_system+68)
 35316  0062DC  6E01               	movwf	decrementTimeslot@ts^0,c
 35317  0062DE  0E01               	movlw	high (_ts_system+68)
 35318  0062E0  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35319  0062E2  ECB0  F04B         	call	_decrementTimeslot	;wreg free
 35320                           
 35321                           ;main_MC50.c: 221:     if ( ( var_sys_NVM.electricBrake==0 ) || ( ts_system.TimeElectric
      +                          Brake<=0 ) )
 35322  0062E6  0100               	movlb	0	; () banked
 35323  0062E8  51AF               	movf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 35324  0062EA  B4D8               	btfsc	status,2,c
 35325  0062EC  D008               	goto	i2u1526_40
 35326                           
 35327                           ; BSR set to: 0
 35328  0062EE  0101               	movlb	1	; () banked
 35329  0062F0  BFC8               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 35330  0062F2  D005               	goto	i2u1526_40
 35331  0062F4  51C8               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 35332  0062F6  E109               	bnz	i2l2024
 35333  0062F8  05C7               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 35334  0062FA  B0D8               	btfsc	status,0,c
 35335  0062FC  D006               	goto	i2l2024
 35336  0062FE                     i2u1526_40:
 35337                           
 35338                           ;main_MC50.c: 222:     {;main_MC50.c: 225:         decrementTimeslot((int*)&ts_system.In
      +                          vertionTimeClosingFromOpen);
 35339  0062FE  0ED1               	movlw	low (_ts_system+50)
 35340  006300  6E01               	movwf	decrementTimeslot@ts^0,c
 35341  006302  0E01               	movlw	high (_ts_system+50)
 35342  006304  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35343  006306  ECB0  F04B         	call	_decrementTimeslot	;wreg free
 35344  00630A                     i2l2024:
 35345                           
 35346                           ;main_MC50.c: 228:     decrementTimeslot((int*)&ts_system.TimeWaitToGetCurrent);
 35347  00630A  0ED3               	movlw	low (_ts_system+52)
 35348  00630C  6E01               	movwf	decrementTimeslot@ts^0,c
 35349  00630E  0E01               	movlw	high (_ts_system+52)
 35350  006310  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35351  006312  ECB0  F04B         	call	_decrementTimeslot	;wreg free
 35352                           
 35353                           ;main_MC50.c: 229:     decrementTimeslot((int*)&ts_system.TimeLearningDecelaration);
 35354  006316  0ED5               	movlw	low (_ts_system+54)
 35355  006318  6E01               	movwf	decrementTimeslot@ts^0,c
 35356  00631A  0E01               	movlw	high (_ts_system+54)
 35357  00631C  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35358  00631E  ECB0  F04B         	call	_decrementTimeslot	;wreg free
 35359                           
 35360                           ;main_MC50.c: 230:     decrementTimeslot((int*)&ts_system.TimeTransitionDecelaration);
 35361  006322  0ED7               	movlw	low (_ts_system+56)
 35362  006324  6E01               	movwf	decrementTimeslot@ts^0,c
 35363  006326  0E01               	movlw	high (_ts_system+56)
 35364  006328  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35365  00632A  ECB0  F04B         	call	_decrementTimeslot	;wreg free
 35366                           
 35367                           ;main_MC50.c: 232:     decrementTimeslot((int*)&ts_system.timewaitBeforeSoftStart);
 35368  00632E  0ED9               	movlw	low (_ts_system+58)
 35369  006330  6E01               	movwf	decrementTimeslot@ts^0,c
 35370  006332  0E01               	movlw	high (_ts_system+58)
 35371  006334  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35372  006336  ECB0  F04B         	call	_decrementTimeslot	;wreg free
 35373                           
 35374                           ;main_MC50.c: 233:     decrementTimeslot((int*)&ts_system.TimeShowVersion);
 35375  00633A  0EDB               	movlw	low (_ts_system+60)
 35376  00633C  6E01               	movwf	decrementTimeslot@ts^0,c
 35377  00633E  0E01               	movlw	high (_ts_system+60)
 35378  006340  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35379  006342  ECB0  F04B         	call	_decrementTimeslot	;wreg free
 35380                           
 35381                           ;main_MC50.c: 235:     decrementTimeslot((int*)&ts_system.TimeStopADCZeroOffsetCalc);
 35382  006346  0EDD               	movlw	low (_ts_system+62)
 35383  006348  6E01               	movwf	decrementTimeslot@ts^0,c
 35384  00634A  0E01               	movlw	high (_ts_system+62)
 35385  00634C  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35386  00634E  ECB0  F04B         	call	_decrementTimeslot	;wreg free
 35387                           
 35388                           ;main_MC50.c: 237:     decrementTimeslot((int*)&ts_system.TimeStopElectricBrake);
 35389  006352  0EDF               	movlw	low (_ts_system+64)
 35390  006354  6E01               	movwf	decrementTimeslot@ts^0,c
 35391  006356  0E01               	movlw	high (_ts_system+64)
 35392  006358  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35393  00635A  ECB0  F04B         	call	_decrementTimeslot	;wreg free
 35394                           
 35395                           ;main_MC50.c: 240:     if (ts_system.TimeOnFlashLigth>0)
 35396  00635E  0101               	movlb	1	; () banked
 35397  006360  BFC2               	btfsc	(_ts_system+35)& (0+255),7,b	;volatile
 35398  006362  0012               	return	
 35399  006364  51C2               	movf	(_ts_system+35)& (0+255),w,b	;volatile
 35400  006366  11C1               	iorwf	(_ts_system+34)& (0+255),w,b	;volatile
 35401  006368  11C0               	iorwf	(_ts_system+33)& (0+255),w,b	;volatile
 35402  00636A  E103               	bnz	i2u1527_40
 35403  00636C  05BF               	decf	(_ts_system+32)& (0+255),w,b	;volatile
 35404  00636E  A0D8               	btfss	status,0,c
 35405  006370  0012               	return	
 35406  006372                     i2u1527_40:
 35407                           
 35408                           ; BSR set to: 1
 35409                           ;main_MC50.c: 241:     {;main_MC50.c: 242:         ts_system.TimeOnFlashLigth--;
 35410  006372  0EFF               	movlw	255
 35411  006374  27BF               	addwf	(_ts_system+32)& (0+255),f,b	;volatile
 35412  006376  0EFF               	movlw	255
 35413  006378  23C0               	addwfc	(_ts_system+33)& (0+255),f,b	;volatile
 35414  00637A  0EFF               	movlw	255
 35415  00637C  23C1               	addwfc	(_ts_system+34)& (0+255),f,b	;volatile
 35416  00637E  0EFF               	movlw	255
 35417  006380  23C2               	addwfc	(_ts_system+35)& (0+255),f,b	;volatile
 35418                           
 35419                           ; BSR set to: 1
 35420  006382  0012               	return		;funcret
 35421  006384                     __end_of_controlTimeslots:
 35422                           	callstack 0
 35423                           
 35424 ;; *************** function _decrementTimeslot *****************
 35425 ;; Defined at:
 35426 ;;		line 246 in file "main_MC50.c"
 35427 ;; Parameters:    Size  Location     Type
 35428 ;;  ts              2    0[COMRAM] PTR int 
 35429 ;;		 -> ts_system.TimeShowVersion(2), ts_system.TimeLearningDecelaration(2), ts_system.TimeWaitToGetCurrent(2), ts_syste
      +m.InvertionTimeClosingFromOpen(2), 
 35430 ;;		 -> ts_system.TimeWaitReleCapacitor(2), ts_system.TimeInversionStart(2), ts_system.TimeStopedBeforeDecelaration(2), 
      +ts_system.TimeWaitToNextState(2), 
 35431 ;;		 -> ts_system.timeFreqFlashligth(2), ts_system.timeFreqRGB(2), ts_system.timeWaitToClose(2), ts_system.timeOpenWalk(
      +2), 
 35432 ;;		 -> ts_system.timeoutMenu(2), ts_system.timeFreqDigit(2), ts_system.timewaitFlashRGB(2), ts_system.TimeStopElectricB
      +rake(2), 
 35433 ;;		 -> ts_system.Debug_TS(2), ts_system.timeSinalizationDigit(2), ts_system.TimeLastCommand(2), ts_system.timeBetweenSa
      +veCounters(2), 
 35434 ;;		 -> ts_system.TimeCurrentAlarm(2), ts_system.TimeCurrentWaitForAlarm(2), ts_system.TimeReleCapacitor(2), ts_system.T
      +imeChargeCondesador(2), 
 35435 ;;		 -> ts_system.TimeTransitionDecelaration(2), ts_system.timewaitBeforeSoftStart(2), ts_system.timeSoftStart(2), ts_sy
      +stem.TimeElectricBrake(2), 
 35436 ;;		 -> ts_system.TimeStopADCZeroOffsetCalc(2), ts_system(72), 
 35437 ;; Auto vars:     Size  Location     Type
 35438 ;;		None
 35439 ;; Return value:  Size  Location     Type
 35440 ;;                  1    wreg      void 
 35441 ;; Registers used:
 35442 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 35443 ;; Tracked objects:
 35444 ;;		On entry : 0/1
 35445 ;;		On exit  : 0/0
 35446 ;;		Unchanged: 0/0
 35447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35448 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35450 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35451 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35452 ;;Total ram usage:        4 bytes
 35453 ;; Hardware stack levels used: 1
 35454 ;; This function calls:
 35455 ;;		Nothing
 35456 ;; This function is called by:
 35457 ;;		_controlTimeslots
 35458 ;; This function uses a non-reentrant model
 35459 ;;
 35460                           
 35461                           	psect	text191
 35462  009760                     __ptext191:
 35463                           	callstack 0
 35464  009760                     _decrementTimeslot:
 35465                           	callstack 14
 35466                           
 35467                           ;main_MC50.c: 246: void decrementTimeslot(int * ts);main_MC50.c: 247: {;main_MC50.c: 248
      +                          :     if (ts[0]>0)
 35468                           
 35469                           ; BSR set to: 1
 35470                           ;incstack = 0
 35471  009760  C001  FFD9         	movff	decrementTimeslot@ts,fsr2l
 35472  009764  C002  FFDA         	movff	decrementTimeslot@ts+1,fsr2h
 35473  009768  0E01               	movlw	1
 35474  00976A  BEDB               	btfsc	plusw2,7,c
 35475  00976C  0012               	return	
 35476  00976E  0E01               	movlw	1
 35477  009770  50DB               	movf	plusw2,w,c
 35478  009772  E103               	bnz	i2u1363_40
 35479  009774  04DE               	decf	postinc2,w,c
 35480  009776  A0D8               	btfss	status,0,c
 35481  009778  0012               	return	
 35482  00977A                     i2u1363_40:
 35483                           
 35484                           ;main_MC50.c: 249:     {;main_MC50.c: 250:         ts[0]--;
 35485  00977A  C001  FFD9         	movff	decrementTimeslot@ts,fsr2l
 35486  00977E  C002  FFDA         	movff	decrementTimeslot@ts+1,fsr2h
 35487  009782  06DE               	decf	postinc2,f,c
 35488  009784  0E00               	movlw	0
 35489  009786  5ADD               	subwfb	postdec2,f,c
 35490  009788  0012               	return		;funcret
 35491  00978A                     __end_of_decrementTimeslot:
 35492                           	callstack 0
 35493                           
 35494 ;; *************** function _TMR2_DefaultInterruptHandler *****************
 35495 ;; Defined at:
 35496 ;;		line 346 in file "mcc_generated_files/tmr2.c"
 35497 ;; Parameters:    Size  Location     Type
 35498 ;;		None
 35499 ;; Auto vars:     Size  Location     Type
 35500 ;;		None
 35501 ;; Return value:  Size  Location     Type
 35502 ;;                  1    wreg      void 
 35503 ;; Registers used:
 35504 ;;		None
 35505 ;; Tracked objects:
 35506 ;;		On entry : 3F/2
 35507 ;;		On exit  : 3F/2
 35508 ;;		Unchanged: 3F/0
 35509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35513 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35514 ;;Total ram usage:        0 bytes
 35515 ;; Hardware stack levels used: 1
 35516 ;; This function calls:
 35517 ;;		Nothing
 35518 ;; This function is called by:
 35519 ;;		_TMR2_Initialize
 35520 ;;		_TMR2_ISR
 35521 ;; This function uses a non-reentrant model
 35522 ;;
 35523                           
 35524                           	psect	text192
 35525  009CA4                     __ptext192:
 35526                           	callstack 0
 35527  009CA4                     _TMR2_DefaultInterruptHandler:
 35528                           	callstack 15
 35529                           
 35530                           ; BSR set to: 2
 35531                           
 35532                           ;incstack = 0
 35533  009CA4  0012               	return		;funcret
 35534  009CA6                     __end_of_TMR2_DefaultInterruptHandler:
 35535                           	callstack 0
 35536                           
 35537 ;; *************** function _ReadADC *****************
 35538 ;; Defined at:
 35539 ;;		line 38 in file "controlCurrent_MC50.c"
 35540 ;; Parameters:    Size  Location     Type
 35541 ;;		None
 35542 ;; Auto vars:     Size  Location     Type
 35543 ;;		None
 35544 ;; Return value:  Size  Location     Type
 35545 ;;                  1    wreg      void 
 35546 ;; Registers used:
 35547 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35548 ;; Tracked objects:
 35549 ;;		On entry : 3F/E
 35550 ;;		On exit  : 31/0
 35551 ;;		Unchanged: 0/0
 35552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35555 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35556 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35557 ;;Total ram usage:        3 bytes
 35558 ;; Hardware stack levels used: 1
 35559 ;; Hardware stack levels required when called: 1
 35560 ;; This function calls:
 35561 ;;		_ADCC_GetSingleConversion
 35562 ;; This function is called by:
 35563 ;;		_TMR2_ISR
 35564 ;; This function uses a non-reentrant model
 35565 ;;
 35566                           
 35567                           	psect	text193
 35568  008E76                     __ptext193:
 35569                           	callstack 0
 35570  008E76                     _ReadADC:
 35571                           	callstack 14
 35572                           
 35573                           ; BSR set to: 14
 35574                           ;controlCurrent_MC50.c: 40:      if (!ADCON0bits.GO_nDONE)
 35575                           
 35576                           ; BSR set to: 2
 35577                           ;incstack = 0
 35578  008E76  B060               	btfsc	96,0,c	;volatile
 35579  008E78  0012               	return	
 35580                           
 35581                           ; BSR set to: 14
 35582                           ;controlCurrent_MC50.c: 41:      {;controlCurrent_MC50.c: 42:         if ( idxAdcAquisit
      +                          ion >= 30 )
 35583  008E7A  0E1D               	movlw	29
 35584  008E7C  0100               	movlb	0	; () banked
 35585  008E7E  6591               	cpfsgt	_idxAdcAquisition& (0+255),b	;volatile
 35586  008E80  D002               	goto	i2l14911
 35587                           
 35588                           ; BSR set to: 0
 35589                           ;controlCurrent_MC50.c: 43:         {;controlCurrent_MC50.c: 44:             idxAdcAquis
      +                          ition=0;
 35590  008E82  0E00               	movlw	0
 35591  008E84  6F91               	movwf	_idxAdcAquisition& (0+255),b	;volatile
 35592  008E86                     i2l14911:
 35593                           
 35594                           ; BSR set to: 0
 35595                           ;controlCurrent_MC50.c: 47:         ADC_array[idxAdcAquisition] = ((unsigned int)((ADRES
      +                          H << 8) + ADRESL)>>6);
 35596  008E86  5063               	movf	99,w,c	;volatile
 35597  008E88  CF64 F002          	movff	3940,??_ReadADC	;volatile
 35598  008E8C  6A03               	clrf	(??_ReadADC+1)^0,c
 35599  008E8E  C002  F003         	movff	??_ReadADC,??_ReadADC+1
 35600  008E92  6A02               	clrf	??_ReadADC^0,c
 35601  008E94  2602               	addwf	??_ReadADC^0,f,c
 35602  008E96  0E00               	movlw	0
 35603  008E98  2203               	addwfc	(??_ReadADC+1)^0,f,c
 35604  008E9A  0E06               	movlw	6
 35605  008E9C  6E04               	movwf	(??_ReadADC+2)^0,c
 35606  008E9E                     i2u1518_45:
 35607  008E9E  90D8               	bcf	status,0,c
 35608  008EA0  3203               	rrcf	(??_ReadADC+1)^0,f,c
 35609  008EA2  3202               	rrcf	??_ReadADC^0,f,c
 35610  008EA4  2E04               	decfsz	(??_ReadADC+2)^0,f,c
 35611  008EA6  D7FB               	goto	i2u1518_45
 35612  008EA8  5191               	movf	_idxAdcAquisition& (0+255),w,b	;volatile
 35613  008EAA  0D02               	mullw	2
 35614  008EAC  0E00               	movlw	low _ADC_array
 35615  008EAE  24F3               	addwf	243,w,c
 35616  008EB0  6ED9               	movwf	fsr2l,c
 35617  008EB2  0E02               	movlw	high _ADC_array
 35618  008EB4  20F4               	addwfc	prodh,w,c
 35619  008EB6  6EDA               	movwf	fsr2h,c
 35620  008EB8  C002  FFDE         	movff	??_ReadADC,postinc2
 35621  008EBC  C003  FFDD         	movff	??_ReadADC+1,postdec2
 35622                           
 35623                           ; BSR set to: 0
 35624                           ;controlCurrent_MC50.c: 48:         ADCC_GetSingleConversion(0x00);
 35625  008EC0  0E00               	movlw	0
 35626  008EC2  EC59  F04D         	call	_ADCC_GetSingleConversion
 35627                           
 35628                           ;controlCurrent_MC50.c: 49:         idxAdcAquisition++;
 35629  008EC6  0100               	movlb	0	; () banked
 35630  008EC8  2B91               	incf	_idxAdcAquisition& (0+255),f,b	;volatile
 35631  008ECA  0012               	return		;funcret
 35632  008ECC                     __end_of_ReadADC:
 35633                           	callstack 0
 35634                           
 35635 ;; *************** function _ADCC_GetSingleConversion *****************
 35636 ;; Defined at:
 35637 ;;		line 131 in file "mcc_generated_files/adcc.c"
 35638 ;; Parameters:    Size  Location     Type
 35639 ;;  channel         1    wreg     enum E10053
 35640 ;; Auto vars:     Size  Location     Type
 35641 ;;  channel         1    0[COMRAM] enum E10053
 35642 ;; Return value:  Size  Location     Type
 35643 ;;                  2  433[None  ] int 
 35644 ;; Registers used:
 35645 ;;		wreg, status,2, cstack
 35646 ;; Tracked objects:
 35647 ;;		On entry : 3F/0
 35648 ;;		On exit  : 0/0
 35649 ;;		Unchanged: 0/0
 35650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35652 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35654 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35655 ;;Total ram usage:        1 bytes
 35656 ;; Hardware stack levels used: 1
 35657 ;; This function calls:
 35658 ;;		Nothing
 35659 ;; This function is called by:
 35660 ;;		_ReadADC
 35661 ;; This function uses a non-reentrant model
 35662 ;;
 35663                           
 35664                           	psect	text194
 35665  009AB2                     __ptext194:
 35666                           	callstack 0
 35667  009AB2                     _ADCC_GetSingleConversion:
 35668                           	callstack 14
 35669                           
 35670                           ;incstack = 0
 35671                           ;ADCC_GetSingleConversion@channel stored from wreg
 35672  009AB2  6E01               	movwf	ADCC_GetSingleConversion@channel^0,c
 35673                           
 35674                           ;mcc_generated_files/adcc.c: 131: ADCC_GetSingleConversion(adcc_channel_t channel);mcc_g
      +                          enerated_files/adcc.c: 132: {;mcc_generated_files/adcc.c: 134:     ADPCH = channel;
 35675  009AB4  C001  FF5F         	movff	ADCC_GetSingleConversion@channel,3935	;volatile
 35676                           
 35677                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADON = 1;
 35678  009AB8  8E60               	bsf	96,7,c	;volatile
 35679                           
 35680                           ;mcc_generated_files/adcc.c: 139:       _delay((unsigned long)((5)*(64000000/4000000.0))
      +                          );
 35681  009ABA  0E1A               	movlw	26
 35682  009ABC                     i2u3393_47:
 35683  009ABC  2EE8               	decfsz	wreg,f,c
 35684  009ABE  D7FE               	bra	i2u3393_47
 35685  009AC0  D000               	nop2	
 35686                           
 35687                           ;mcc_generated_files/adcc.c: 142:     ADCON0bits.ADCONT = 0;
 35688  009AC2  9C60               	bcf	96,6,c	;volatile
 35689                           
 35690                           ;mcc_generated_files/adcc.c: 145:     ADCON0bits.ADGO = 1;
 35691  009AC4  8060               	bsf	96,0,c	;volatile
 35692  009AC6  0012               	return		;funcret
 35693  009AC8                     __end_of_ADCC_GetSingleConversion:
 35694                           	callstack 0
 35695                           
 35696 ;; *************** function _TMR1_ISR *****************
 35697 ;; Defined at:
 35698 ;;		line 166 in file "mcc_generated_files/tmr1.c"
 35699 ;; Parameters:    Size  Location     Type
 35700 ;;		None
 35701 ;; Auto vars:     Size  Location     Type
 35702 ;;		None
 35703 ;; Return value:  Size  Location     Type
 35704 ;;                  1    wreg      void 
 35705 ;; Registers used:
 35706 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 35707 ;; Tracked objects:
 35708 ;;		On entry : 3F/E
 35709 ;;		On exit  : 0/0
 35710 ;;		Unchanged: 0/0
 35711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35715 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35716 ;;Total ram usage:        0 bytes
 35717 ;; Hardware stack levels used: 1
 35718 ;; Hardware stack levels required when called: 2
 35719 ;; This function calls:
 35720 ;;		Absolute function
 35721 ;;		_TMR1_DefaultInterruptHandler
 35722 ;;		_TMR1_WriteTimer
 35723 ;;		_controlMotorForce
 35724 ;; This function is called by:
 35725 ;;		_INTERRUPT_InterruptManager
 35726 ;; This function uses a non-reentrant model
 35727 ;;
 35728                           
 35729                           	psect	text195
 35730  009310                     __ptext195:
 35731                           	callstack 0
 35732  009310                     _TMR1_ISR:
 35733                           	callstack 14
 35734                           
 35735                           ; BSR set to: 14
 35736                           ;mcc_generated_files/tmr1.c: 170:     PIR4bits.TMR1IF = 0;
 35737                           
 35738                           ;incstack = 0
 35739  009310  91CE               	bcf	206,0,b	;volatile
 35740                           
 35741                           ; BSR set to: 14
 35742                           ;mcc_generated_files/tmr1.c: 172:             controlMotorForce();
 35743  009312  ECA6  F029         	call	_controlMotorForce	;wreg free
 35744                           
 35745                           ;mcc_generated_files/tmr1.c: 173:             if(ts_system.ts_TimeSlotTRIAC>0)
 35746  009316  0101               	movlb	1	; () banked
 35747  009318  51A4               	movf	(_ts_system+5)& (0+255),w,b	;volatile
 35748  00931A  A4D8               	btfss	status,2,c
 35749                           
 35750                           ; BSR set to: 1
 35751                           ;mcc_generated_files/tmr1.c: 174:             {;mcc_generated_files/tmr1.c: 176:        
      +                                   ts_system.ts_TimeSlotTRIAC--;
 35752  00931C  07A4               	decf	(_ts_system+5)& (0+255),f,b	;volatile
 35753                           
 35754                           ; BSR set to: 1
 35755                           ;mcc_generated_files/tmr1.c: 178:             if (ts_system.ts_TimeSlot1ms > 0 )
 35756  00931E  51A1               	movf	(_ts_system+2)& (0+255),w,b	;volatile
 35757  009320  A4D8               	btfss	status,2,c
 35758                           
 35759                           ; BSR set to: 1
 35760                           ;mcc_generated_files/tmr1.c: 179:             {;mcc_generated_files/tmr1.c: 180:        
      +                               ts_system.ts_TimeSlot1ms--;
 35761  009322  07A1               	decf	(_ts_system+2)& (0+255),f,b	;volatile
 35762                           
 35763                           ; BSR set to: 1
 35764                           ;mcc_generated_files/tmr1.c: 183:     TMR1_WriteTimer(timer1ReloadVal);
 35765  009324  C2DF  F001         	movff	_timer1ReloadVal,TMR1_WriteTimer@timerVal	;volatile
 35766  009328  C2E0  F002         	movff	_timer1ReloadVal+1,TMR1_WriteTimer@timerVal+1	;volatile
 35767  00932C  ECB8  F04C         	call	_TMR1_WriteTimer	;wreg free
 35768                           
 35769                           ; BSR set to: 1
 35770                           ;mcc_generated_files/tmr1.c: 185:     if(TMR1_InterruptHandler)
 35771  009330  0102               	movlb	2	; () banked
 35772  009332  51DD               	movf	_TMR1_InterruptHandler& (0+255),w,b
 35773  009334  11DE               	iorwf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 35774  009336  B4D8               	btfsc	status,2,c
 35775  009338  0012               	return	
 35776                           
 35777                           ; BSR set to: 2
 35778                           ;mcc_generated_files/tmr1.c: 186:     {;mcc_generated_files/tmr1.c: 187:         TMR1_In
      +                          terruptHandler();
 35779  00933A  D801               	call	i2u1896_48
 35780  00933C  0012               	return	
 35781  00933E                     i2u1896_48:
 35782  00933E  0005               	push	
 35783  009340  6EFA               	movwf	pclath,c
 35784  009342  51DD               	movf	_TMR1_InterruptHandler& (0+255),w,b
 35785  009344  6EFD               	movwf	tosl,c
 35786  009346  51DE               	movf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 35787  009348  6EFE               	movwf	tosh,c
 35788  00934A  6AFF               	clrf	tosu,c
 35789  00934C  50FA               	movf	pclath,w,c
 35790  00934E  0012               	return		;indir
 35791  009350                     __end_of_TMR1_ISR:
 35792                           	callstack 0
 35793                           
 35794 ;; *************** function _controlMotorForce *****************
 35795 ;; Defined at:
 35796 ;;		line 213 in file "outputs_MC50.c"
 35797 ;; Parameters:    Size  Location     Type
 35798 ;;		None
 35799 ;; Auto vars:     Size  Location     Type
 35800 ;;		None
 35801 ;; Return value:  Size  Location     Type
 35802 ;;                  1    wreg      void 
 35803 ;; Registers used:
 35804 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35805 ;; Tracked objects:
 35806 ;;		On entry : 3F/E
 35807 ;;		On exit  : 3E/0
 35808 ;;		Unchanged: 0/0
 35809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35812 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35813 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35814 ;;Total ram usage:        5 bytes
 35815 ;; Hardware stack levels used: 1
 35816 ;; Hardware stack levels required when called: 1
 35817 ;; This function calls:
 35818 ;;		i2_GetMotorPower
 35819 ;;		i2_VerifyElectricalBrake
 35820 ;; This function is called by:
 35821 ;;		_TMR1_ISR
 35822 ;; This function uses a non-reentrant model
 35823 ;;
 35824                           
 35825                           	psect	text196
 35826  00534C                     __ptext196:
 35827                           	callstack 0
 35828  00534C                     _controlMotorForce:
 35829                           	callstack 14
 35830                           
 35831                           ; BSR set to: 14
 35832                           ;outputs_MC50.c: 217:     difTime=GetMotorPower();
 35833                           
 35834                           ;incstack = 0
 35835  00534C  EC83  F03C         	call	i2_GetMotorPower	;wreg free
 35836  005350  6F94               	movwf	_difTime& (0+255),b
 35837                           
 35838                           ; BSR set to: 1
 35839                           ;outputs_MC50.c: 218:     if(powerControl_st.decelarationActive==YES)
 35840  005352  057B               	decf	_powerControl_st& (0+255),w,b
 35841  005354  A4D8               	btfss	status,2,c
 35842  005356  D00F               	goto	i2l2191
 35843                           
 35844                           ; BSR set to: 1
 35845                           ;outputs_MC50.c: 219:     {;outputs_MC50.c: 220:         if(ts_system.TimeStopedBeforeDe
      +                          celaration>0)
 35846  005358  BFCC               	btfsc	(_ts_system+45)& (0+255),7,b	;volatile
 35847  00535A  D008               	goto	i2l14799
 35848  00535C  51CC               	movf	(_ts_system+45)& (0+255),w,b	;volatile
 35849  00535E  E103               	bnz	i2u1478_40
 35850  005360  05CB               	decf	(_ts_system+44)& (0+255),w,b	;volatile
 35851  005362  A0D8               	btfss	status,0,c
 35852  005364  D003               	goto	i2l14799
 35853  005366                     i2u1478_40:
 35854                           
 35855                           ; BSR set to: 1
 35856                           ;outputs_MC50.c: 221:         {;outputs_MC50.c: 222:             StateTRIAC=0;
 35857  005366  0E00               	movlw	0
 35858  005368  6F95               	movwf	_StateTRIAC& (0+255),b
 35859                           
 35860                           ;outputs_MC50.c: 223:         }
 35861  00536A  D005               	goto	i2l2191
 35862  00536C                     i2l14799:
 35863                           
 35864                           ; BSR set to: 1
 35865  00536C  517D               	movf	(_powerControl_st+2)& (0+255),w,b
 35866  00536E  5D7F               	subwf	(_powerControl_st+4)& (0+255),w,b
 35867  005370  A0D8               	btfss	status,0,c
 35868                           
 35869                           ; BSR set to: 1
 35870                           ;outputs_MC50.c: 225:         {;outputs_MC50.c: 227:             difTime=powerControl_st
      +                          .decelarationPower;
 35871  005372  C17E  F194         	movff	_powerControl_st+3,_difTime
 35872  005376                     i2l2191:
 35873                           
 35874                           ; BSR set to: 1
 35875                           ;outputs_MC50.c: 242:     if(PORTAbits.RA3==1 && zeroCrossing==0)
 35876  005376  A68D               	btfss	141,3,c	;volatile
 35877  005378  D071               	goto	i2l2195
 35878                           
 35879                           ; BSR set to: 1
 35880  00537A  5197               	movf	_zeroCrossing& (0+255),w,b
 35881  00537C  A4D8               	btfss	status,2,c
 35882  00537E  D06E               	goto	i2l2195
 35883                           
 35884                           ; BSR set to: 1
 35885                           ;outputs_MC50.c: 243:     {;outputs_MC50.c: 257:         if ( waitZeroPeak == 0 )
 35886  005380  5196               	movf	_waitZeroPeak& (0+255),w,b
 35887  005382  A4D8               	btfss	status,2,c
 35888  005384  D016               	goto	i2l14815
 35889                           
 35890                           ; BSR set to: 1
 35891                           ;outputs_MC50.c: 258:         {;outputs_MC50.c: 260:             zeroCrossingWaitTime[ze
      +                          roCrossingWaitTimeIdx] = (zeroCrossingLength>>1);
 35892  005386  0EF8               	movlw	low _zeroCrossingWaitTime
 35893  005388  0100               	movlb	0	; () banked
 35894  00538A  2584               	addwf	_zeroCrossingWaitTimeIdx& (0+255),w,b
 35895  00538C  6ED9               	movwf	fsr2l,c
 35896  00538E  6ADA               	clrf	fsr2h,c
 35897  005390  0E02               	movlw	high _zeroCrossingWaitTime
 35898  005392  22DA               	addwfc	fsr2h,f,c
 35899  005394  0101               	movlb	1	; () banked
 35900  005396  90D8               	bcf	status,0,c
 35901  005398  3198               	rrcf	_zeroCrossingLength& (0+255),w,b
 35902  00539A  6EDF               	movwf	indf2,c
 35903                           
 35904                           ; BSR set to: 1
 35905                           ;outputs_MC50.c: 261:             if ( zeroCrossingWaitTimeIdx == 0 )
 35906  00539C  0100               	movlb	0	; () banked
 35907  00539E  5184               	movf	_zeroCrossingWaitTimeIdx& (0+255),w,b
 35908  0053A0  A4D8               	btfss	status,2,c
 35909  0053A2  D002               	goto	i2l14813
 35910                           
 35911                           ; BSR set to: 0
 35912                           ;outputs_MC50.c: 262:             {;outputs_MC50.c: 263:                 zeroCrossingWai
      +                          tTimeIdx = 1;
 35913  0053A4  0E01               	movlw	1
 35914  0053A6  D001               	goto	L116
 35915  0053A8                     i2l14813:
 35916                           
 35917                           ; BSR set to: 0
 35918                           ;outputs_MC50.c: 266:             {;outputs_MC50.c: 267:                 zeroCrossingWai
      +                          tTimeIdx = 0;
 35919  0053A8  0E00               	movlw	0
 35920  0053AA                     L116:
 35921  0053AA  6F84               	movwf	_zeroCrossingWaitTimeIdx& (0+255),b
 35922                           
 35923                           ; BSR set to: 0
 35924                           ;outputs_MC50.c: 270:             zeroCrossingLength = 0;
 35925                           
 35926                           ;outputs_MC50.c: 268:             }
 35927  0053AC  0E00               	movlw	0
 35928  0053AE  0101               	movlb	1	; () banked
 35929  0053B0  6F98               	movwf	_zeroCrossingLength& (0+255),b
 35930  0053B2                     i2l14815:
 35931                           
 35932                           ; BSR set to: 1
 35933                           ;outputs_MC50.c: 273:         if ( (difTime<=80) || (ts_system.TimeElectricBrake>0) )
 35934  0053B2  0E50               	movlw	80
 35935  0053B4  6594               	cpfsgt	_difTime& (0+255),b
 35936  0053B6  D007               	goto	i2u1485_40
 35937                           
 35938                           ; BSR set to: 1
 35939  0053B8  BFC8               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 35940  0053BA  D008               	goto	i2l14821
 35941  0053BC  51C8               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 35942  0053BE  E103               	bnz	i2u1485_40
 35943  0053C0  05C7               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 35944  0053C2  A0D8               	btfss	status,0,c
 35945  0053C4  D003               	goto	i2l14821
 35946  0053C6                     i2u1485_40:
 35947                           
 35948                           ; BSR set to: 1
 35949                           
 35950                           ;outputs_MC50.c: 274:         {;outputs_MC50.c: 275:             do { LATDbits.LATD7 = 0
      +                          ; } while(0);
 35951  0053C6  9E86               	bcf	134,7,c	;volatile
 35952                           
 35953                           ; BSR set to: 1
 35954                           ;outputs_MC50.c: 276:             var_sys.TriacON=NO;
 35955  0053C8  0E00               	movlw	0
 35956  0053CA  6F0C               	movwf	(_var_sys+12)& (0+255),b	;volatile
 35957  0053CC                     i2l14821:
 35958                           
 35959                           ; BSR set to: 1
 35960                           ;outputs_MC50.c: 280:         waitZeroPeak++;
 35961  0053CC  2B96               	incf	_waitZeroPeak& (0+255),f,b
 35962                           
 35963                           ; BSR set to: 1
 35964                           ;outputs_MC50.c: 282:         if ( waitZeroPeak > zeroCrossingWaitTime[zeroCrossingWaitT
      +                          imeIdx] )
 35965  0053CE  0EF8               	movlw	low _zeroCrossingWaitTime
 35966  0053D0  0100               	movlb	0	; () banked
 35967  0053D2  2584               	addwf	_zeroCrossingWaitTimeIdx& (0+255),w,b
 35968  0053D4  6ED9               	movwf	fsr2l,c
 35969  0053D6  6ADA               	clrf	fsr2h,c
 35970  0053D8  0E02               	movlw	high _zeroCrossingWaitTime
 35971  0053DA  22DA               	addwfc	fsr2h,f,c
 35972  0053DC  0101               	movlb	1	; () banked
 35973  0053DE  5196               	movf	_waitZeroPeak& (0+255),w,b
 35974  0053E0  5CDE               	subwf	postinc2,w,c
 35975  0053E2  B0D8               	btfsc	status,0,c
 35976  0053E4  D044               	goto	i2l14851
 35977                           
 35978                           ; BSR set to: 1
 35979                           ;outputs_MC50.c: 284:         {;outputs_MC50.c: 286:             if ((var_sys.Control50o
      +                          r60hz >= 90)&&(var_sys.Control50or60hz <= 105)){
 35980  0053E6  0E59               	movlw	89
 35981  0053E8  654D               	cpfsgt	(_var_sys+77)& (0+255),b	;volatile
 35982  0053EA  D005               	goto	i2l14831
 35983                           
 35984                           ; BSR set to: 1
 35985  0053EC  0E6A               	movlw	106
 35986  0053EE  614D               	cpfslt	(_var_sys+77)& (0+255),b	;volatile
 35987  0053F0  D002               	goto	i2l14831
 35988                           
 35989                           ; BSR set to: 1
 35990                           ;outputs_MC50.c: 287:                 var_sys.Torquerelanty = 1;
 35991  0053F2  0E01               	movlw	1
 35992  0053F4  D001               	goto	L117
 35993  0053F6                     i2l14831:
 35994                           
 35995                           ; BSR set to: 1
 35996                           ;outputs_MC50.c: 290:             {;outputs_MC50.c: 291:                var_sys.Torquere
      +                          lanty = 0;
 35997  0053F6  0E00               	movlw	0
 35998  0053F8                     L117:
 35999  0053F8  6F15               	movwf	(_var_sys+21)& (0+255),b	;volatile
 36000                           
 36001                           ; BSR set to: 1
 36002                           ;outputs_MC50.c: 294:             ts_system.ts_TimeSlotTRIAC=80;
 36003                           
 36004                           ;outputs_MC50.c: 292:             }
 36005  0053FA  0E50               	movlw	80
 36006  0053FC  6FA4               	movwf	(_ts_system+5)& (0+255),b	;volatile
 36007                           
 36008                           ;outputs_MC50.c: 295:             var_sys.Control50or60hz = 0;
 36009  0053FE  0E00               	movlw	0
 36010  005400  6F4D               	movwf	(_var_sys+77)& (0+255),b	;volatile
 36011                           
 36012                           ;outputs_MC50.c: 296:             StateTRIAC=1;
 36013  005402  0E01               	movlw	1
 36014  005404  6F95               	movwf	_StateTRIAC& (0+255),b
 36015                           
 36016                           ;outputs_MC50.c: 297:             zeroCrossing=1;
 36017  005406  0E01               	movlw	1
 36018  005408  6F97               	movwf	_zeroCrossing& (0+255),b
 36019                           
 36020                           ; BSR set to: 1
 36021                           ;outputs_MC50.c: 298:             powerControl_st.actualCycle++;
 36022  00540A  2B7F               	incf	(_powerControl_st+4)& (0+255),f,b
 36023                           
 36024                           ; BSR set to: 1
 36025                           ;outputs_MC50.c: 304:             if ( var_sys_NVM.electricBrake==1 && ts_system.TimeEle
      +                          ctricBrake>0 )
 36026  00540C  0100               	movlb	0	; () banked
 36027  00540E  05AF               	decf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 36028  005410  A4D8               	btfss	status,2,c
 36029  005412  D00E               	goto	i2l14843
 36030                           
 36031                           ; BSR set to: 0
 36032  005414  0101               	movlb	1	; () banked
 36033  005416  BFC8               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 36034  005418  D00B               	goto	i2l14843
 36035  00541A  51C8               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 36036  00541C  E103               	bnz	i2u1490_40
 36037  00541E  05C7               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 36038  005420  A0D8               	btfss	status,0,c
 36039  005422  D006               	goto	i2l14843
 36040  005424                     i2u1490_40:
 36041                           
 36042                           ; BSR set to: 1
 36043                           ;outputs_MC50.c: 305:             {;outputs_MC50.c: 307:                 if ( powerContr
      +                          ol_st.actualCycle>=2 )
 36044  005424  0E01               	movlw	1
 36045  005426  657F               	cpfsgt	(_powerControl_st+4)& (0+255),b
 36046  005428  D022               	goto	i2l14851
 36047  00542A                     i2u1491_40:
 36048                           
 36049                           ; BSR set to: 1
 36050                           ;outputs_MC50.c: 308:                 {;outputs_MC50.c: 309:                     powerCo
      +                          ntrol_st.actualCycle=0;
 36051  00542A  0E00               	movlw	0
 36052  00542C  6F7F               	movwf	(_powerControl_st+4)& (0+255),b
 36053  00542E  D01F               	goto	i2l14851
 36054  005430                     i2l14843:
 36055                           
 36056                           ;outputs_MC50.c: 313:             {;outputs_MC50.c: 314:                 if ( powerContr
      +                          ol_st.actualCycle>=(powerControl_st.decelarationCyclesOff+powerControl_st.decelarationCy
      +                          clesOn) )
 36057  005430  0101               	movlb	1	; () banked
 36058  005432  517C               	movf	(_powerControl_st+1)& (0+255),w,b
 36059  005434  C17D  F005         	movff	_powerControl_st+2,??_controlMotorForce
 36060  005438  6A06               	clrf	(??_controlMotorForce+1)^0,c
 36061  00543A  2605               	addwf	??_controlMotorForce^0,f,c
 36062  00543C  0E00               	movlw	0
 36063  00543E  2206               	addwfc	(??_controlMotorForce+1)^0,f,c
 36064  005440  517F               	movf	(_powerControl_st+4)& (0+255),w,b
 36065  005442  6E07               	movwf	(??_controlMotorForce+2)^0,c
 36066  005444  6A08               	clrf	(??_controlMotorForce+3)^0,c
 36067  005446  5005               	movf	??_controlMotorForce^0,w,c
 36068  005448  5C07               	subwf	(??_controlMotorForce+2)^0,w,c
 36069  00544A  5008               	movf	(??_controlMotorForce+3)^0,w,c
 36070  00544C  0A80               	xorlw	128
 36071  00544E  6E09               	movwf	(??_controlMotorForce+4)^0,c
 36072  005450  5006               	movf	(??_controlMotorForce+1)^0,w,c
 36073  005452  0A80               	xorlw	128
 36074  005454  5809               	subwfb	(??_controlMotorForce+4)^0,w,c
 36075  005456  B0D8               	btfsc	status,0,c
 36076  005458  D7E8               	goto	i2u1491_40
 36077  00545A  D009               	goto	i2l14851
 36078  00545C                     i2l2195:
 36079                           
 36080                           ; BSR set to: 1
 36081  00545C  B68D               	btfsc	141,3,c	;volatile
 36082  00545E  D007               	goto	i2l14851
 36083                           
 36084                           ; BSR set to: 1
 36085  005460  5197               	movf	_zeroCrossing& (0+255),w,b
 36086  005462  B4D8               	btfsc	status,2,c
 36087  005464  D004               	goto	i2l14851
 36088                           
 36089                           ; BSR set to: 1
 36090                           ;outputs_MC50.c: 328:     {;outputs_MC50.c: 330:         zeroCrossing=0;
 36091  005466  0E00               	movlw	0
 36092  005468  6F97               	movwf	_zeroCrossing& (0+255),b
 36093                           
 36094                           ;outputs_MC50.c: 331:         waitZeroPeak=0;
 36095  00546A  0E00               	movlw	0
 36096  00546C  6F96               	movwf	_waitZeroPeak& (0+255),b
 36097  00546E                     i2l14851:
 36098                           
 36099                           ; BSR set to: 1
 36100                           ;outputs_MC50.c: 336:     if ( PORTAbits.RA3!=0 )
 36101  00546E  B68D               	btfsc	141,3,c	;volatile
 36102                           
 36103                           ; BSR set to: 1
 36104                           ;outputs_MC50.c: 337:     {;outputs_MC50.c: 339:         zeroCrossingLength++;
 36105  005470  2B98               	incf	_zeroCrossingLength& (0+255),f,b
 36106                           
 36107                           ; BSR set to: 1
 36108                           ;outputs_MC50.c: 342:    var_sys.Control50or60hz ++;
 36109                           
 36110                           ;outputs_MC50.c: 340:     }
 36111  005472  2B4D               	incf	(_var_sys+77)& (0+255),f,b	;volatile
 36112                           
 36113                           ; BSR set to: 1
 36114                           ;outputs_MC50.c: 352:     stateMotor = VerifyElectricalBrake(var_sys.StateMotor);
 36115  005474  5100               	movf	_var_sys& (0+255),w,b	;volatile
 36116  005476  EC11  F043         	call	i2_VerifyElectricalBrake
 36117  00547A  0100               	movlb	0	; () banked
 36118  00547C  6F83               	movwf	_stateMotor& (0+255),b
 36119                           
 36120                           ; BSR set to: 0
 36121                           ;outputs_MC50.c: 354:     if ( var_sys_NVM.electricBrake==1 && ts_system.TimeElectricBra
      +                          ke>0 && ts_system.TimeStopElectricBrake<=0 )
 36122  00547E  05AF               	decf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 36123  005480  A4D8               	btfss	status,2,c
 36124  005482  D02E               	goto	i2l14875
 36125                           
 36126                           ; BSR set to: 0
 36127  005484  0101               	movlb	1	; () banked
 36128  005486  BFC8               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 36129  005488  D02B               	goto	i2l14875
 36130  00548A  51C8               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 36131  00548C  E103               	bnz	i2u1497_40
 36132  00548E  05C7               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 36133  005490  A0D8               	btfss	status,0,c
 36134  005492  D026               	goto	i2l14875
 36135  005494                     i2u1497_40:
 36136                           
 36137                           ; BSR set to: 1
 36138  005494  BFE0               	btfsc	(_ts_system+65)& (0+255),7,b	;volatile
 36139  005496  D005               	goto	i2u1498_40
 36140  005498  51E0               	movf	(_ts_system+65)& (0+255),w,b	;volatile
 36141  00549A  E122               	bnz	i2l14875
 36142  00549C  05DF               	decf	(_ts_system+64)& (0+255),w,b	;volatile
 36143  00549E  B0D8               	btfsc	status,0,c
 36144  0054A0  D01F               	goto	i2l14875
 36145  0054A2                     i2u1498_40:
 36146                           
 36147                           ; BSR set to: 1
 36148                           ;outputs_MC50.c: 355:     {;outputs_MC50.c: 357:         if(stateMotor !=0 && StateTRIAC
      +                          ==1 && ts_system.ts_TRIACWait<=0 && powerControl_st.actualCycle==0 && ts_system.TimeElec
      +                          tricBrake<(((5+6)*( 100/50))-(5*( 100/50))) )
 36149  0054A2  0100               	movlb	0	; () banked
 36150  0054A4  5183               	movf	_stateMotor& (0+255),w,b
 36151  0054A6  B4D8               	btfsc	status,2,c
 36152  0054A8  D03A               	goto	i2l14887
 36153                           
 36154                           ; BSR set to: 0
 36155  0054AA  0101               	movlb	1	; () banked
 36156  0054AC  0595               	decf	_StateTRIAC& (0+255),w,b
 36157  0054AE  A4D8               	btfss	status,2,c
 36158  0054B0  D036               	goto	i2l14887
 36159                           
 36160                           ; BSR set to: 1
 36161  0054B2  BFA6               	btfsc	(_ts_system+7)& (0+255),7,b	;volatile
 36162  0054B4  D005               	goto	i2u1501_40
 36163  0054B6  51A6               	movf	(_ts_system+7)& (0+255),w,b	;volatile
 36164  0054B8  E132               	bnz	i2l14887
 36165  0054BA  05A5               	decf	(_ts_system+6)& (0+255),w,b	;volatile
 36166  0054BC  B0D8               	btfsc	status,0,c
 36167  0054BE  D02F               	goto	i2l14887
 36168  0054C0                     i2u1501_40:
 36169                           
 36170                           ; BSR set to: 1
 36171  0054C0  517F               	movf	(_powerControl_st+4)& (0+255),w,b
 36172  0054C2  A4D8               	btfss	status,2,c
 36173  0054C4  D02C               	goto	i2l14887
 36174                           
 36175                           ; BSR set to: 1
 36176  0054C6  BFC8               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 36177  0054C8  D006               	goto	i2u1503_40
 36178  0054CA  51C8               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 36179  0054CC  E128               	bnz	i2l14887
 36180  0054CE  0E0C               	movlw	12
 36181  0054D0  5DC7               	subwf	(_ts_system+40)& (0+255),w,b	;volatile
 36182  0054D2  B0D8               	btfsc	status,0,c
 36183  0054D4  D024               	goto	i2l14887
 36184  0054D6                     i2u1503_40:
 36185                           
 36186                           ; BSR set to: 1
 36187                           
 36188                           ;outputs_MC50.c: 358:         {;outputs_MC50.c: 359:            do { LATDbits.LATD7 = 1;
      +                           } while(0);
 36189  0054D6  8E86               	bsf	134,7,c	;volatile
 36190                           
 36191                           ; BSR set to: 1
 36192                           ;outputs_MC50.c: 360:            ts_system.ts_TRIACWait=-(25*200);
 36193  0054D8  0EEC               	movlw	236
 36194  0054DA  6FA6               	movwf	(_ts_system+7)& (0+255),b	;volatile
 36195  0054DC  0E78               	movlw	120
 36196  0054DE  D01A               	goto	L118
 36197  0054E0                     i2l14875:
 36198                           
 36199                           ;outputs_MC50.c: 366:     {;outputs_MC50.c: 368:         if(stateMotor !=0 && ts_system.
      +                          ts_TimeSlotTRIAC<difTime && StateTRIAC==1 && ts_system.ts_TRIACWait<=0 && var_sys.InStop
      +                          ing==NO)
 36200  0054E0  0100               	movlb	0	; () banked
 36201  0054E2  5183               	movf	_stateMotor& (0+255),w,b
 36202  0054E4  B4D8               	btfsc	status,2,c
 36203  0054E6  D01B               	goto	i2l14887
 36204                           
 36205                           ; BSR set to: 0
 36206  0054E8  0101               	movlb	1	; () banked
 36207  0054EA  5194               	movf	_difTime& (0+255),w,b
 36208  0054EC  5DA4               	subwf	(_ts_system+5)& (0+255),w,b	;volatile
 36209  0054EE  B0D8               	btfsc	status,0,c
 36210  0054F0  D016               	goto	i2l14887
 36211                           
 36212                           ; BSR set to: 1
 36213  0054F2  0595               	decf	_StateTRIAC& (0+255),w,b
 36214  0054F4  A4D8               	btfss	status,2,c
 36215  0054F6  D013               	goto	i2l14887
 36216                           
 36217                           ; BSR set to: 1
 36218  0054F8  BFA6               	btfsc	(_ts_system+7)& (0+255),7,b	;volatile
 36219  0054FA  D005               	goto	i2u1507_40
 36220  0054FC  51A6               	movf	(_ts_system+7)& (0+255),w,b	;volatile
 36221  0054FE  E10F               	bnz	i2l14887
 36222  005500  05A5               	decf	(_ts_system+6)& (0+255),w,b	;volatile
 36223  005502  B0D8               	btfsc	status,0,c
 36224  005504  D00C               	goto	i2l14887
 36225  005506                     i2u1507_40:
 36226                           
 36227                           ; BSR set to: 1
 36228  005506  510D               	movf	(_var_sys+13)& (0+255),w,b	;volatile
 36229  005508  A4D8               	btfss	status,2,c
 36230  00550A  D009               	goto	i2l14887
 36231                           
 36232                           ; BSR set to: 1
 36233                           
 36234                           ;outputs_MC50.c: 369:         {;outputs_MC50.c: 370:            do { LATDbits.LATD7 = 1;
      +                           } while(0);
 36235  00550C  8E86               	bsf	134,7,c	;volatile
 36236                           
 36237                           ; BSR set to: 1
 36238                           ;outputs_MC50.c: 371:            ts_system.ts_TRIACWait=-200;
 36239  00550E  0EFF               	movlw	255
 36240  005510  6FA6               	movwf	(_ts_system+7)& (0+255),b	;volatile
 36241  005512  0E38               	movlw	56
 36242  005514                     L118:
 36243  005514  6FA5               	movwf	(_ts_system+6)& (0+255),b	;volatile
 36244                           
 36245                           ;outputs_MC50.c: 372:            var_sys.TriacON=YES;
 36246  005516  0E01               	movlw	1
 36247  005518  6F0C               	movwf	(_var_sys+12)& (0+255),b	;volatile
 36248                           
 36249                           ;outputs_MC50.c: 373:            StateTRIAC=0;
 36250  00551A  0E00               	movlw	0
 36251  00551C  6F95               	movwf	_StateTRIAC& (0+255),b
 36252  00551E                     i2l14887:
 36253                           
 36254                           ;outputs_MC50.c: 377:     if (((ts_system.ts_TimeSlotTRIAC <= 20 )&& ts_system.TimeElect
      +                          ricBrake<0) || (stateMotor==0))
 36255  00551E  0E15               	movlw	21
 36256  005520  0101               	movlb	1	; () banked
 36257  005522  61A4               	cpfslt	(_ts_system+5)& (0+255),b	;volatile
 36258  005524  D002               	goto	i2u1510_40
 36259                           
 36260                           ; BSR set to: 1
 36261  005526  BFC8               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 36262  005528  D004               	goto	i2u1511_40
 36263  00552A                     i2u1510_40:
 36264                           
 36265                           ; BSR set to: 1
 36266  00552A  0100               	movlb	0	; () banked
 36267  00552C  5183               	movf	_stateMotor& (0+255),w,b
 36268  00552E  A4D8               	btfss	status,2,c
 36269  005530  D004               	goto	i2l2222
 36270  005532                     i2u1511_40:
 36271                           
 36272                           ;outputs_MC50.c: 378:     {;outputs_MC50.c: 384:             do { LATDbits.LATD7 = 0; } 
      +                          while(0);
 36273  005532  9E86               	bcf	134,7,c	;volatile
 36274                           
 36275                           ;outputs_MC50.c: 385:             var_sys.TriacON=NO;
 36276  005534  0E00               	movlw	0
 36277  005536  0101               	movlb	1	; () banked
 36278  005538  6F0C               	movwf	(_var_sys+12)& (0+255),b	;volatile
 36279  00553A                     i2l2222:
 36280                           
 36281                           ;outputs_MC50.c: 396:     if(stateMotor !=0 && ts_system.ts_TRIACWait>0)
 36282  00553A  0100               	movlb	0	; () banked
 36283  00553C  5183               	movf	_stateMotor& (0+255),w,b
 36284  00553E  B4D8               	btfsc	status,2,c
 36285  005540  D00C               	goto	i2l14899
 36286                           
 36287                           ; BSR set to: 0
 36288  005542  0101               	movlb	1	; () banked
 36289  005544  BFA6               	btfsc	(_ts_system+7)& (0+255),7,b	;volatile
 36290  005546  D009               	goto	i2l14899
 36291  005548  51A6               	movf	(_ts_system+7)& (0+255),w,b	;volatile
 36292  00554A  E103               	bnz	i2u1513_40
 36293  00554C  05A5               	decf	(_ts_system+6)& (0+255),w,b	;volatile
 36294  00554E  A0D8               	btfss	status,0,c
 36295  005550  D004               	goto	i2l14899
 36296  005552                     i2u1513_40:
 36297                           
 36298                           ; BSR set to: 1
 36299                           ;outputs_MC50.c: 397:     {;outputs_MC50.c: 398:         ts_system.ts_TRIACWait--;
 36300  005552  07A5               	decf	(_ts_system+6)& (0+255),f,b	;volatile
 36301  005554  A0D8               	btfss	status,0,c
 36302  005556  07A6               	decf	(_ts_system+7)& (0+255),f,b	;volatile
 36303                           
 36304                           ;outputs_MC50.c: 399:     }
 36305  005558  0012               	return	
 36306  00555A                     i2l14899:
 36307  00555A  0100               	movlb	0	; () banked
 36308  00555C  5183               	movf	_stateMotor& (0+255),w,b
 36309  00555E  A4D8               	btfss	status,2,c
 36310  005560  0012               	return	
 36311                           
 36312                           ; BSR set to: 0
 36313  005562  0101               	movlb	1	; () banked
 36314  005564  AFA6               	btfss	(_ts_system+7)& (0+255),7,b	;volatile
 36315  005566  0012               	return	
 36316                           
 36317                           ; BSR set to: 1
 36318                           ;outputs_MC50.c: 401:     {;outputs_MC50.c: 402:         ts_system.ts_TRIACWait++;
 36319  005568  4BA5               	infsnz	(_ts_system+6)& (0+255),f,b	;volatile
 36320  00556A  2BA6               	incf	(_ts_system+7)& (0+255),f,b	;volatile
 36321  00556C  0012               	return		;funcret
 36322  00556E                     __end_of_controlMotorForce:
 36323                           	callstack 0
 36324                           
 36325 ;; *************** function i2_VerifyElectricalBrake *****************
 36326 ;; Defined at:
 36327 ;;		line 658 in file "outputs_MC50.c"
 36328 ;; Parameters:    Size  Location     Type
 36329 ;;  actualState     1    wreg     enum E10381
 36330 ;; Auto vars:     Size  Location     Type
 36331 ;;  actualState     1    1[COMRAM] enum E10381
 36332 ;;  tempState       1    0[COMRAM] enum E10381
 36333 ;; Return value:  Size  Location     Type
 36334 ;;                  1    wreg      enum E10381
 36335 ;; Registers used:
 36336 ;;		wreg, status,2, status,0
 36337 ;; Tracked objects:
 36338 ;;		On entry : 3F/1
 36339 ;;		On exit  : 3E/0
 36340 ;;		Unchanged: 0/0
 36341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36343 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36345 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36346 ;;Total ram usage:        2 bytes
 36347 ;; Hardware stack levels used: 1
 36348 ;; This function calls:
 36349 ;;		Nothing
 36350 ;; This function is called by:
 36351 ;;		_controlMotorForce
 36352 ;; This function uses a non-reentrant model
 36353 ;;
 36354                           
 36355                           	psect	text197
 36356  008622                     __ptext197:
 36357                           	callstack 0
 36358  008622                     i2_VerifyElectricalBrake:
 36359                           	callstack 14
 36360                           
 36361                           ;incstack = 0
 36362                           ;i2VerifyElectricalBrake@actualState stored from wreg
 36363  008622  6E02               	movwf	i2VerifyElectricalBrake@actualState^0,c
 36364                           
 36365                           ;outputs_MC50.c: 658: stateMotor_enum VerifyElectricalBrake(stateMotor_enum actualState)
      +                          ;outputs_MC50.c: 659: {;outputs_MC50.c: 660:     stateMotor_enum tempState;;outputs_MC50
      +                          .c: 661:     tempState=actualState;
 36366  008624  C002  F001         	movff	i2VerifyElectricalBrake@actualState,i2VerifyElectricalBrake@tempState
 36367                           
 36368                           ;outputs_MC50.c: 662:     if(var_sys_NVM.electricBrake==1 && actualState==Stopped && ts_
      +                          system.TimeStopElectricBrake<=0)
 36369  008628  0100               	movlb	0	; () banked
 36370  00862A  05AF               	decf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 36371  00862C  A4D8               	btfss	status,2,c
 36372  00862E  D02E               	goto	i2l2323
 36373                           
 36374                           ; BSR set to: 0
 36375  008630  5002               	movf	i2VerifyElectricalBrake@actualState^0,w,c
 36376  008632  A4D8               	btfss	status,2,c
 36377  008634  D02B               	goto	i2l2323
 36378                           
 36379                           ; BSR set to: 0
 36380  008636  0101               	movlb	1	; () banked
 36381  008638  BFE0               	btfsc	(_ts_system+65)& (0+255),7,b	;volatile
 36382  00863A  D005               	goto	i2u1444_40
 36383  00863C  51E0               	movf	(_ts_system+65)& (0+255),w,b	;volatile
 36384  00863E  E126               	bnz	i2l2323
 36385  008640  05DF               	decf	(_ts_system+64)& (0+255),w,b	;volatile
 36386  008642  B0D8               	btfsc	status,0,c
 36387  008644  D023               	goto	i2l2323
 36388  008646                     i2u1444_40:
 36389                           
 36390                           ; BSR set to: 1
 36391                           ;outputs_MC50.c: 663:     {;outputs_MC50.c: 664:         if(actualState!=brakeElectric_s
      +                          t.lastState && brakeElectric_st.ElectricBrakeIsActive==NO )
 36392  008646  5002               	movf	i2VerifyElectricalBrake@actualState^0,w,c
 36393  008648  0100               	movlb	0	; () banked
 36394  00864A  1978               	xorwf	_brakeElectric_st& (0+255),w,b
 36395  00864C  B4D8               	btfsc	status,2,c
 36396  00864E  D00B               	goto	i2l14517
 36397                           
 36398                           ; BSR set to: 0
 36399  008650  5179               	movf	(_brakeElectric_st+1)& (0+255),w,b
 36400  008652  A4D8               	btfss	status,2,c
 36401  008654  D008               	goto	i2l14517
 36402                           
 36403                           ; BSR set to: 0
 36404                           ;outputs_MC50.c: 665:         {;outputs_MC50.c: 666:             brakeElectric_st.Electr
      +                          icBrakeIsActive=YES;
 36405  008656  0E01               	movlw	1
 36406  008658  6F79               	movwf	(_brakeElectric_st+1)& (0+255),b
 36407                           
 36408                           ;outputs_MC50.c: 668:             ts_system.TimeElectricBrake=((5+6)*( 100/50));
 36409  00865A  0E00               	movlw	0
 36410  00865C  0101               	movlb	1	; () banked
 36411  00865E  6FC8               	movwf	(_ts_system+41)& (0+255),b	;volatile
 36412  008660  0E16               	movlw	22
 36413  008662  6FC7               	movwf	(_ts_system+40)& (0+255),b	;volatile
 36414                           
 36415                           ;outputs_MC50.c: 670:         }
 36416  008664  D018               	goto	i2l2328
 36417  008666                     i2l14517:
 36418                           
 36419                           ; BSR set to: 0
 36420  008666  0579               	decf	(_brakeElectric_st+1)& (0+255),w,b
 36421  008668  A4D8               	btfss	status,2,c
 36422  00866A  D00B               	goto	i2l14523
 36423                           
 36424                           ; BSR set to: 0
 36425  00866C  0101               	movlb	1	; () banked
 36426  00866E  BFC8               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 36427  008670  D008               	goto	i2l14523
 36428  008672  51C8               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 36429  008674  E103               	bnz	i2u1448_40
 36430  008676  05C7               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 36431  008678  A0D8               	btfss	status,0,c
 36432  00867A  D003               	goto	i2l14523
 36433  00867C                     i2u1448_40:
 36434                           
 36435                           ; BSR set to: 1
 36436                           ;outputs_MC50.c: 672:         {;outputs_MC50.c: 673:             tempState=InOpenFull;
 36437  00867C  0E01               	movlw	1
 36438  00867E  6E01               	movwf	i2VerifyElectricalBrake@tempState^0,c
 36439                           
 36440                           ;outputs_MC50.c: 686:         }
 36441  008680  D00A               	goto	i2l2328
 36442  008682                     i2l14523:
 36443                           
 36444                           ;outputs_MC50.c: 688:         {;outputs_MC50.c: 689:             brakeElectric_st.lastSt
      +                          ate=Stopped;
 36445  008682  0E00               	movlw	0
 36446  008684  0100               	movlb	0	; () banked
 36447  008686  6F78               	movwf	_brakeElectric_st& (0+255),b
 36448                           
 36449                           ;outputs_MC50.c: 690:             brakeElectric_st.ElectricBrakeIsActive=NO;
 36450  008688  0E00               	movlw	0
 36451  00868A  D004               	goto	L119
 36452  00868C                     i2l2323:
 36453                           
 36454                           ;outputs_MC50.c: 695:     {;outputs_MC50.c: 696:         brakeElectric_st.lastState=actu
      +                          alState;
 36455  00868C  C002  F078         	movff	i2VerifyElectricalBrake@actualState,_brakeElectric_st
 36456                           
 36457                           ;outputs_MC50.c: 697:         brakeElectric_st.ElectricBrakeIsActive=NO;
 36458  008690  0E00               	movlw	0
 36459  008692  0100               	movlb	0	; () banked
 36460  008694                     L119:
 36461  008694  6F79               	movwf	(_brakeElectric_st+1)& (0+255),b
 36462  008696                     i2l2328:
 36463                           
 36464                           ;outputs_MC50.c: 700:     return tempState;
 36465  008696  5001               	movf	i2VerifyElectricalBrake@tempState^0,w,c
 36466  008698  0012               	return		;funcret
 36467  00869A                     __end_ofi2_VerifyElectricalBrake:
 36468                           	callstack 0
 36469                           
 36470 ;; *************** function i2_GetMotorPower *****************
 36471 ;; Defined at:
 36472 ;;		line 405 in file "outputs_MC50.c"
 36473 ;; Parameters:    Size  Location     Type
 36474 ;;		None
 36475 ;; Auto vars:     Size  Location     Type
 36476 ;;  defineatraso    1    3[COMRAM] unsigned char 
 36477 ;; Return value:  Size  Location     Type
 36478 ;;                  1    wreg      unsigned char 
 36479 ;; Registers used:
 36480 ;;		wreg, status,2, status,0, prodl, prodh
 36481 ;; Tracked objects:
 36482 ;;		On entry : 3F/E
 36483 ;;		On exit  : 3F/1
 36484 ;;		Unchanged: 0/0
 36485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36487 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36488 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36489 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36490 ;;Total ram usage:        4 bytes
 36491 ;; Hardware stack levels used: 1
 36492 ;; This function calls:
 36493 ;;		Nothing
 36494 ;; This function is called by:
 36495 ;;		_controlMotorForce
 36496 ;; This function uses a non-reentrant model
 36497 ;;
 36498                           
 36499                           	psect	text198
 36500  007906                     __ptext198:
 36501                           	callstack 0
 36502  007906                     i2_GetMotorPower:
 36503                           	callstack 14
 36504                           
 36505                           ; BSR set to: 14
 36506                           ;outputs_MC50.c: 408:     unsigned char defineatraso;;outputs_MC50.c: 413:     if(powerC
      +                          ontrol_st.decelarationActive==YES)
 36507                           
 36508                           ;incstack = 0
 36509  007906  0101               	movlb	1	; () banked
 36510  007908  057B               	decf	_powerControl_st& (0+255),w,b
 36511  00790A  A4D8               	btfss	status,2,c
 36512  00790C  D006               	goto	i2l14467
 36513                           
 36514                           ; BSR set to: 1
 36515                           ;outputs_MC50.c: 414:     {;outputs_MC50.c: 415:        temppower=(var_sys_NVM.motorPowe
      +                          r*6);
 36516  00790E  0100               	movlb	0	; () banked
 36517  007910  519A               	movf	(_var_sys_NVM+2)& (0+255),w,b	;volatile
 36518  007912  0D06               	mullw	6
 36519  007914  CFF3 F193          	movff	prodl,_temppower
 36520                           
 36521                           ;outputs_MC50.c: 416:     }
 36522  007918  D043               	goto	i2l2240
 36523  00791A                     i2l14467:
 36524                           
 36525                           ; BSR set to: 1
 36526                           ;outputs_MC50.c: 418:     {;outputs_MC50.c: 419:         fullmotorPower=(var_sys_NVM.mot
      +                          orPower*6);
 36527  00791A  0100               	movlb	0	; () banked
 36528  00791C  519A               	movf	(_var_sys_NVM+2)& (0+255),w,b	;volatile
 36529  00791E  0D06               	mullw	6
 36530  007920  CFF3 F082          	movff	prodl,_fullmotorPower
 36531                           
 36532                           ; BSR set to: 0
 36533                           ;outputs_MC50.c: 421:         if(var_sys.velocityFactor>0)
 36534  007924  0101               	movlb	1	; () banked
 36535  007926  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 36536  007928  D01C               	goto	i2l14477
 36537  00792A  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 36538  00792C  E103               	bnz	i2u1434_40
 36539  00792E  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 36540  007930  A0D8               	btfss	status,0,c
 36541  007932  D017               	goto	i2l14477
 36542  007934                     i2u1434_40:
 36543                           
 36544                           ; BSR set to: 1
 36545                           ;outputs_MC50.c: 422:         {;outputs_MC50.c: 423:             if(var_sys.velocityFact
      +                          or>fullmotorPower)
 36546  007934  0100               	movlb	0	; () banked
 36547  007936  5182               	movf	_fullmotorPower& (0+255),w,b
 36548  007938  6E01               	movwf	??i2_GetMotorPower^0,c
 36549  00793A  6A02               	clrf	(??i2_GetMotorPower+1)^0,c
 36550  00793C  0101               	movlb	1	; () banked
 36551  00793E  510E               	movf	(_var_sys+14)& (0+255),w,b	;volatile
 36552  007940  5C01               	subwf	??i2_GetMotorPower^0,w,c
 36553  007942  5002               	movf	(??i2_GetMotorPower+1)^0,w,c
 36554  007944  0A80               	xorlw	128
 36555  007946  6E03               	movwf	(??i2_GetMotorPower+2)^0,c
 36556  007948  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 36557  00794A  0A80               	xorlw	128
 36558  00794C  5803               	subwfb	(??i2_GetMotorPower+2)^0,w,c
 36559  00794E  B0D8               	btfsc	status,0,c
 36560  007950  D002               	goto	i2l14475
 36561                           
 36562                           ; BSR set to: 1
 36563                           ;outputs_MC50.c: 424:             {;outputs_MC50.c: 425:                 temppower=1;
 36564  007952  0E01               	movlw	1
 36565  007954  D004               	goto	L121
 36566  007956                     i2l14475:
 36567                           
 36568                           ; BSR set to: 1
 36569                           ;outputs_MC50.c: 428:             {;outputs_MC50.c: 430:                 temppower =full
      +                          motorPower-var_sys.velocityFactor;
 36570  007956  510E               	movf	(_var_sys+14)& (0+255),w,b	;volatile
 36571  007958  0100               	movlb	0	; () banked
 36572  00795A  5D82               	subwf	_fullmotorPower& (0+255),w,b
 36573  00795C  D017               	goto	L122
 36574  00795E                     L121:
 36575  00795E  6F93               	movwf	_temppower& (0+255),b
 36576  007960  D01F               	goto	i2l2240
 36577  007962                     i2l14477:
 36578                           
 36579                           ; BSR set to: 1
 36580  007962  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 36581  007964  D005               	goto	i2u1436_40
 36582  007966  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 36583  007968  E113               	bnz	i2l14487
 36584  00796A  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 36585  00796C  B0D8               	btfsc	status,0,c
 36586  00796E  D010               	goto	i2l14487
 36587  007970                     i2u1436_40:
 36588                           
 36589                           ; BSR set to: 1
 36590  007970  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 36591  007972  D005               	goto	i2u1437_40
 36592  007974  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 36593  007976  E10C               	bnz	i2l14487
 36594  007978  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 36595  00797A  B0D8               	btfsc	status,0,c
 36596  00797C  D009               	goto	i2l14487
 36597  00797E                     i2u1437_40:
 36598                           
 36599                           ; BSR set to: 1
 36600                           ;outputs_MC50.c: 434:         {;outputs_MC50.c: 435:             temppower =fullmotorPow
      +                          er;
 36601  00797E  C082  F193         	movff	_fullmotorPower,_temppower
 36602                           
 36603                           ; BSR set to: 1
 36604                           ;outputs_MC50.c: 438:             if ( var_sys_NVM.motorPower>8 )
 36605  007982  0E08               	movlw	8
 36606  007984  0100               	movlb	0	; () banked
 36607  007986  659A               	cpfsgt	(_var_sys_NVM+2)& (0+255),b	;volatile
 36608  007988  D00B               	goto	i2l2240
 36609                           
 36610                           ; BSR set to: 0
 36611                           ;outputs_MC50.c: 439:             {;outputs_MC50.c: 440:                 temppower = 80 
      +                          -23 +1;
 36612  00798A  0E3A               	movlw	58
 36613  00798C                     L122:
 36614  00798C  0101               	movlb	1	; () banked
 36615  00798E  D7E7               	goto	L121
 36616  007990                     i2l14487:
 36617                           
 36618                           ; BSR set to: 1
 36619  007990  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 36620  007992  D006               	goto	i2l2240
 36621  007994  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 36622  007996  E102               	bnz	i2u1439_40
 36623  007998  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 36624  00799A  B0D8               	btfsc	status,0,c
 36625  00799C                     i2u1439_40:
 36626                           
 36627                           ; BSR set to: 1
 36628                           ;outputs_MC50.c: 447:                 temppower = var_sys.velocityFactorstop;
 36629  00799C  C110  F193         	movff	_var_sys+16,_temppower	;volatile
 36630  0079A0                     i2l2240:
 36631                           
 36632                           ;outputs_MC50.c: 451:     if ((var_sys.velocityFactorstop > 0)&&(var_sys.velocityFactor 
      +                          <= 0 )){
 36633  0079A0  0101               	movlb	1	; () banked
 36634  0079A2  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 36635  0079A4  D00E               	goto	i2l14497
 36636  0079A6  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 36637  0079A8  E103               	bnz	i2u1440_40
 36638  0079AA  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 36639  0079AC  A0D8               	btfss	status,0,c
 36640  0079AE  D009               	goto	i2l14497
 36641  0079B0                     i2u1440_40:
 36642                           
 36643                           ; BSR set to: 1
 36644  0079B0  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 36645  0079B2  D005               	goto	i2u1441_40
 36646  0079B4  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 36647  0079B6  E105               	bnz	i2l14497
 36648  0079B8  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 36649  0079BA  B0D8               	btfsc	status,0,c
 36650  0079BC  D002               	goto	i2l14497
 36651  0079BE                     i2u1441_40:
 36652                           
 36653                           ; BSR set to: 1
 36654                           ;outputs_MC50.c: 452:     defineatraso = 5;
 36655  0079BE  0E05               	movlw	5
 36656  0079C0  D001               	goto	L120
 36657  0079C2                     i2l14497:
 36658                           
 36659                           ; BSR set to: 1
 36660                           ;outputs_MC50.c: 455:     {;outputs_MC50.c: 456:     defineatraso = 23;
 36661  0079C2  0E17               	movlw	23
 36662  0079C4                     L120:
 36663  0079C4  6E04               	movwf	i2GetMotorPower@defineatraso^0,c
 36664                           
 36665                           ; BSR set to: 1
 36666                           ;outputs_MC50.c: 459:     return temppower+defineatraso;
 36667  0079C6  5193               	movf	_temppower& (0+255),w,b
 36668  0079C8  2404               	addwf	i2GetMotorPower@defineatraso^0,w,c
 36669                           
 36670                           ; BSR set to: 1
 36671  0079CA  0012               	return		;funcret
 36672  0079CC                     __end_ofi2_GetMotorPower:
 36673                           	callstack 0
 36674                           
 36675 ;; *************** function _TMR1_WriteTimer *****************
 36676 ;; Defined at:
 36677 ;;		line 129 in file "mcc_generated_files/tmr1.c"
 36678 ;; Parameters:    Size  Location     Type
 36679 ;;  timerVal        2    0[COMRAM] unsigned short 
 36680 ;; Auto vars:     Size  Location     Type
 36681 ;;		None
 36682 ;; Return value:  Size  Location     Type
 36683 ;;                  1    wreg      void 
 36684 ;; Registers used:
 36685 ;;		None
 36686 ;; Tracked objects:
 36687 ;;		On entry : 3F/1
 36688 ;;		On exit  : 3F/1
 36689 ;;		Unchanged: 3F/0
 36690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36691 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36694 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36695 ;;Total ram usage:        2 bytes
 36696 ;; Hardware stack levels used: 1
 36697 ;; This function calls:
 36698 ;;		Nothing
 36699 ;; This function is called by:
 36700 ;;		_TMR1_ISR
 36701 ;; This function uses a non-reentrant model
 36702 ;;
 36703                           
 36704                           	psect	text199
 36705  009970                     __ptext199:
 36706                           	callstack 0
 36707  009970                     _TMR1_WriteTimer:
 36708                           	callstack 15
 36709                           
 36710                           ; BSR set to: 1
 36711                           ;mcc_generated_files/tmr1.c: 129: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 130: {;mcc_generated_files/tmr1.c: 131:     if (T1CONbits.nT1SYNC == 1)
 36712                           
 36713                           ; BSR set to: 1
 36714                           ;incstack = 0
 36715  009970  A4CF               	btfss	207,2,c	;volatile
 36716  009972  D007               	goto	i2l1147
 36717                           
 36718                           ; BSR set to: 1
 36719                           ;mcc_generated_files/tmr1.c: 132:     {;mcc_generated_files/tmr1.c: 134:         T1CONbi
      +                          ts.TMR1ON = 0;
 36720  009974  90CF               	bcf	207,0,c	;volatile
 36721                           
 36722                           ;mcc_generated_files/tmr1.c: 137:         TMR1H = (uint8_t)(timerVal >> 8);
 36723  009976  C002  FFCE         	movff	TMR1_WriteTimer@timerVal+1,4046	;volatile
 36724                           
 36725                           ;mcc_generated_files/tmr1.c: 138:         TMR1L = (uint8_t)timerVal;
 36726  00997A  C001  FFCD         	movff	TMR1_WriteTimer@timerVal,4045	;volatile
 36727                           
 36728                           ;mcc_generated_files/tmr1.c: 141:         T1CONbits.TMR1ON =1;
 36729  00997E  80CF               	bsf	207,0,c	;volatile
 36730                           
 36731                           ;mcc_generated_files/tmr1.c: 142:     }
 36732  009980  0012               	return	
 36733  009982                     i2l1147:
 36734                           
 36735                           ; BSR set to: 1
 36736                           ;mcc_generated_files/tmr1.c: 144:     {;mcc_generated_files/tmr1.c: 146:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
 36737  009982  C002  FFCE         	movff	TMR1_WriteTimer@timerVal+1,4046	;volatile
 36738                           
 36739                           ;mcc_generated_files/tmr1.c: 147:         TMR1L = (uint8_t)timerVal;
 36740  009986  C001  FFCD         	movff	TMR1_WriteTimer@timerVal,4045	;volatile
 36741                           
 36742                           ; BSR set to: 1
 36743  00998A  0012               	return		;funcret
 36744  00998C                     __end_of_TMR1_WriteTimer:
 36745                           	callstack 0
 36746                           
 36747 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 36748 ;; Defined at:
 36749 ;;		line 196 in file "mcc_generated_files/tmr1.c"
 36750 ;; Parameters:    Size  Location     Type
 36751 ;;		None
 36752 ;; Auto vars:     Size  Location     Type
 36753 ;;		None
 36754 ;; Return value:  Size  Location     Type
 36755 ;;                  1    wreg      void 
 36756 ;; Registers used:
 36757 ;;		None
 36758 ;; Tracked objects:
 36759 ;;		On entry : 3F/2
 36760 ;;		On exit  : 3F/2
 36761 ;;		Unchanged: 3F/0
 36762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36766 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36767 ;;Total ram usage:        0 bytes
 36768 ;; Hardware stack levels used: 1
 36769 ;; This function calls:
 36770 ;;		Nothing
 36771 ;; This function is called by:
 36772 ;;		_TMR1_Initialize
 36773 ;;		_TMR1_ISR
 36774 ;; This function uses a non-reentrant model
 36775 ;;
 36776                           
 36777                           	psect	text200
 36778  009CA6                     __ptext200:
 36779                           	callstack 0
 36780  009CA6                     _TMR1_DefaultInterruptHandler:
 36781                           	callstack 15
 36782                           
 36783                           ; BSR set to: 2
 36784                           
 36785                           ; BSR set to: 1
 36786                           ;incstack = 0
 36787  009CA6  0012               	return		;funcret
 36788  009CA8                     __end_of_TMR1_DefaultInterruptHandler:
 36789                           	callstack 0
 36790                           
 36791 ;; *************** function _TMR0_ISR *****************
 36792 ;; Defined at:
 36793 ;;		line 127 in file "mcc_generated_files/tmr0.c"
 36794 ;; Parameters:    Size  Location     Type
 36795 ;;		None
 36796 ;; Auto vars:     Size  Location     Type
 36797 ;;		None
 36798 ;; Return value:  Size  Location     Type
 36799 ;;                  1    wreg      void 
 36800 ;; Registers used:
 36801 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 36802 ;; Tracked objects:
 36803 ;;		On entry : 3F/E
 36804 ;;		On exit  : 0/0
 36805 ;;		Unchanged: 0/0
 36806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36810 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36811 ;;Total ram usage:        0 bytes
 36812 ;; Hardware stack levels used: 1
 36813 ;; Hardware stack levels required when called: 1
 36814 ;; This function calls:
 36815 ;;		Absolute function
 36816 ;;		_TMR0_DefaultInterruptHandler
 36817 ;;		_rxi
 36818 ;; This function is called by:
 36819 ;;		_INTERRUPT_InterruptManager
 36820 ;; This function uses a non-reentrant model
 36821 ;;
 36822                           
 36823                           	psect	text201
 36824  009824                     __ptext201:
 36825                           	callstack 0
 36826  009824                     _TMR0_ISR:
 36827                           	callstack 15
 36828                           
 36829                           ; BSR set to: 14
 36830                           ;mcc_generated_files/tmr0.c: 130:     PIR0bits.TMR0IF = 0;
 36831                           
 36832                           ; BSR set to: 2
 36833                           ;incstack = 0
 36834  009824  9BCA               	bcf	202,5,b	;volatile
 36835                           
 36836                           ; BSR set to: 14
 36837                           ;mcc_generated_files/tmr0.c: 132:     rxi();
 36838  009826  EC1C  F026         	call	_rxi	;wreg free
 36839                           
 36840                           ;mcc_generated_files/tmr0.c: 134:     if(TMR0_InterruptHandler)
 36841  00982A  0102               	movlb	2	; () banked
 36842  00982C  51E1               	movf	_TMR0_InterruptHandler& (0+255),w,b
 36843  00982E  11E2               	iorwf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 36844  009830  B4D8               	btfsc	status,2,c
 36845  009832  0012               	return	
 36846                           
 36847                           ; BSR set to: 2
 36848                           ;mcc_generated_files/tmr0.c: 135:     {;mcc_generated_files/tmr0.c: 136:         TMR0_In
      +                          terruptHandler();
 36849  009834  D801               	call	i2u1892_48
 36850  009836  0012               	return	
 36851  009838                     i2u1892_48:
 36852  009838  0005               	push	
 36853  00983A  6EFA               	movwf	pclath,c
 36854  00983C  51E1               	movf	_TMR0_InterruptHandler& (0+255),w,b
 36855  00983E  6EFD               	movwf	tosl,c
 36856  009840  51E2               	movf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 36857  009842  6EFE               	movwf	tosh,c
 36858  009844  6AFF               	clrf	tosu,c
 36859  009846  50FA               	movf	pclath,w,c
 36860  009848  0012               	return		;indir
 36861  00984A                     __end_of_TMR0_ISR:
 36862                           	callstack 0
 36863                           
 36864 ;; *************** function _rxi *****************
 36865 ;; Defined at:
 36866 ;;		line 41 in file "inputs_MC50.c"
 36867 ;; Parameters:    Size  Location     Type
 36868 ;;		None
 36869 ;; Auto vars:     Size  Location     Type
 36870 ;;		None
 36871 ;; Return value:  Size  Location     Type
 36872 ;;                  1    wreg      void 
 36873 ;; Registers used:
 36874 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 36875 ;; Tracked objects:
 36876 ;;		On entry : 3F/E
 36877 ;;		On exit  : 3C/0
 36878 ;;		Unchanged: 0/0
 36879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36880 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36881 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36882 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36883 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36884 ;;Total ram usage:        2 bytes
 36885 ;; Hardware stack levels used: 1
 36886 ;; This function calls:
 36887 ;;		Nothing
 36888 ;; This function is called by:
 36889 ;;		_TMR0_ISR
 36890 ;; This function uses a non-reentrant model
 36891 ;;
 36892                           
 36893                           	psect	text202
 36894  004C38                     __ptext202:
 36895                           	callstack 0
 36896  004C38                     _rxi:
 36897                           	callstack 15
 36898                           
 36899                           ; BSR set to: 14
 36900                           ;inputs_MC50.c: 43:     RFBit = PORTBbits.RB3;
 36901                           
 36902                           ;incstack = 0
 36903  004C38  0E00               	movlw	0
 36904  004C3A  B68E               	btfsc	142,3,c	;volatile
 36905  004C3C  0E01               	movlw	1
 36906  004C3E  0100               	movlb	0	; () banked
 36907  004C40  6F89               	movwf	_RFBit& (0+255),b	;volatile
 36908                           
 36909                           ; BSR set to: 0
 36910                           ;inputs_MC50.c: 47:     if (RFFull)
 36911  004C42  518B               	movf	_RFFull& (0+255),w,b	;volatile
 36912  004C44  A4D8               	btfss	status,2,c
 36913  004C46  0012               	return	
 36914  004C48  D116               	goto	i2l14781
 36915  004C4A                     i2l14671:
 36916                           
 36917                           ; BSR set to: 1
 36918                           ;inputs_MC50.c: 53:             if (RFBit == 0) {
 36919  004C4A  0100               	movlb	0	; () banked
 36920  004C4C  5189               	movf	_RFBit& (0+255),w,b	;volatile
 36921  004C4E  A4D8               	btfss	status,2,c
 36922  004C50  D004               	goto	i2l14675
 36923                           
 36924                           ; BSR set to: 0
 36925                           ;inputs_MC50.c: 56:                 RFstate = 3;
 36926  004C52  0E03               	movlw	3
 36927  004C54  0101               	movlb	1	; () banked
 36928  004C56  6F9D               	movwf	_RFstate& (0+255),b
 36929                           
 36930                           ;inputs_MC50.c: 57:             } else {
 36931  004C58  0012               	return	
 36932  004C5A                     i2l14675:
 36933                           
 36934                           ; BSR set to: 0
 36935                           ;inputs_MC50.c: 58:                 RFcount--;
 36936  004C5A  077E               	decf	_RFcount& (0+255),f,b
 36937  004C5C  A0D8               	btfss	status,0,c
 36938  004C5E  077F               	decf	(_RFcount+1)& (0+255),f,b
 36939                           
 36940                           ; BSR set to: 0
 36941                           ;inputs_MC50.c: 59:                 if (RFcount < -10)
 36942  004C60  AF7F               	btfss	(_RFcount+1)& (0+255),7,b
 36943  004C62  0012               	return	
 36944  004C64  0EF6               	movlw	246
 36945  004C66  5D7E               	subwf	_RFcount& (0+255),w,b
 36946  004C68  0EFF               	movlw	255
 36947  004C6A  597F               	subwfb	(_RFcount+1)& (0+255),w,b
 36948  004C6C  B0D8               	btfsc	status,0,c
 36949  004C6E  0012               	return	
 36950  004C70                     i2u1455_40:
 36951  004C70                     i2l14679:
 36952                           
 36953                           ; BSR set to: 0
 36954                           ;inputs_MC50.c: 60:                 {;inputs_MC50.c: 62:                     RFstate = 0
      +                          ;
 36955  004C70  0E00               	movlw	0
 36956  004C72  0101               	movlb	1	; () banked
 36957  004C74  6F9D               	movwf	_RFstate& (0+255),b
 36958  004C76  0012               	return	
 36959  004C78                     i2l14681:
 36960                           
 36961                           ; BSR set to: 1
 36962                           ;inputs_MC50.c: 67:             if (RFBit) {
 36963  004C78  0100               	movlb	0	; () banked
 36964  004C7A  5189               	movf	_RFBit& (0+255),w,b	;volatile
 36965  004C7C  B4D8               	btfsc	status,2,c
 36966  004C7E  D02C               	goto	i2l14701
 36967                           
 36968                           ; BSR set to: 0
 36969                           ;inputs_MC50.c: 71:                 RFstate = 2;
 36970  004C80  0E02               	movlw	2
 36971  004C82  0101               	movlb	1	; () banked
 36972  004C84  6F9D               	movwf	_RFstate& (0+255),b
 36973                           
 36974                           ; BSR set to: 1
 36975                           ;inputs_MC50.c: 72:                 BufferRF[Bptr] >>= 1;
 36976  004C86  0EC6               	movlw	low _BufferRF
 36977  004C88  0100               	movlb	0	; () banked
 36978  004C8A  258D               	addwf	_Bptr& (0+255),w,b
 36979  004C8C  6ED9               	movwf	fsr2l,c
 36980  004C8E  6ADA               	clrf	fsr2h,c
 36981  004C90  0E02               	movlw	high _BufferRF
 36982  004C92  22DA               	addwfc	fsr2h,f,c
 36983  004C94  90D8               	bcf	status,0,c
 36984  004C96  32DF               	rrcf	indf2,f,c
 36985                           
 36986                           ; BSR set to: 0
 36987                           ;inputs_MC50.c: 73:                 if (RFcount >= 0) {
 36988  004C98  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 36989  004C9A  D008               	goto	i2l14691
 36990                           
 36991                           ; BSR set to: 0
 36992                           ;inputs_MC50.c: 74:                     BufferRF[Bptr] += 0x80;
 36993  004C9C  0EC6               	movlw	low _BufferRF
 36994  004C9E  258D               	addwf	_Bptr& (0+255),w,b
 36995  004CA0  6ED9               	movwf	fsr2l,c
 36996  004CA2  6ADA               	clrf	fsr2h,c
 36997  004CA4  0E02               	movlw	high _BufferRF
 36998  004CA6  22DA               	addwfc	fsr2h,f,c
 36999  004CA8  0E80               	movlw	128
 37000  004CAA  26DF               	addwf	indf2,f,c
 37001  004CAC                     i2l14691:
 37002                           
 37003                           ; BSR set to: 0
 37004                           ;inputs_MC50.c: 81:                 RFcount = 0;
 37005  004CAC  0E00               	movlw	0
 37006  004CAE  6F7F               	movwf	(_RFcount+1)& (0+255),b
 37007  004CB0  0E00               	movlw	0
 37008  004CB2  6F7E               	movwf	_RFcount& (0+255),b
 37009                           
 37010                           ; BSR set to: 0
 37011                           ;inputs_MC50.c: 83:                 if ((++BitCount & 7) == 0)
 37012  004CB4  2B8C               	incf	_BitCount& (0+255),f,b
 37013  004CB6  C08C  F001         	movff	_BitCount,??_rxi
 37014  004CBA  0E07               	movlw	7
 37015  004CBC  1601               	andwf	??_rxi^0,f,c
 37016  004CBE  B4D8               	btfsc	status,2,c
 37017                           
 37018                           ; BSR set to: 0
 37019                           ;inputs_MC50.c: 84:                     Bptr++;
 37020  004CC0  2B8D               	incf	_Bptr& (0+255),f,b
 37021                           
 37022                           ; BSR set to: 0
 37023                           ;inputs_MC50.c: 85:                 if (BitCount == 65) {
 37024  004CC2  0E41               	movlw	65
 37025  004CC4  198C               	xorwf	_BitCount& (0+255),w,b
 37026  004CC6  A4D8               	btfss	status,2,c
 37027  004CC8  0012               	return	
 37028                           
 37029                           ; BSR set to: 0
 37030                           ;inputs_MC50.c: 86:                     RFstate = 0;
 37031  004CCA  0E00               	movlw	0
 37032  004CCC  0101               	movlb	1	; () banked
 37033  004CCE  6F9D               	movwf	_RFstate& (0+255),b
 37034                           
 37035                           ;inputs_MC50.c: 87:                     RFFull = 1;
 37036  004CD0  0E01               	movlw	1
 37037  004CD2  0100               	movlb	0	; () banked
 37038  004CD4  6F8B               	movwf	_RFFull& (0+255),b	;volatile
 37039  004CD6  0012               	return	
 37040  004CD8                     i2l14701:
 37041                           
 37042                           ; BSR set to: 0
 37043                           ;inputs_MC50.c: 92:                 RFcount++;
 37044  004CD8  4B7E               	infsnz	_RFcount& (0+255),f,b
 37045  004CDA  2B7F               	incf	(_RFcount+1)& (0+255),f,b
 37046                           
 37047                           ; BSR set to: 0
 37048                           ;inputs_MC50.c: 93:                 if (RFcount >= 10)
 37049  004CDC  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 37050  004CDE  0012               	return	
 37051  004CE0  517F               	movf	(_RFcount+1)& (0+255),w,b
 37052  004CE2  E104               	bnz	i2u1460_40
 37053  004CE4  0E0A               	movlw	10
 37054  004CE6  5D7E               	subwf	_RFcount& (0+255),w,b
 37055  004CE8  A0D8               	btfss	status,0,c
 37056  004CEA  0012               	return	
 37057  004CEC                     i2u1460_40:
 37058                           
 37059                           ; BSR set to: 0
 37060                           ;inputs_MC50.c: 94:                 {;inputs_MC50.c: 96:                     RFstate = 1
      +                          ;
 37061  004CEC  0E01               	movlw	1
 37062  004CEE  0101               	movlb	1	; () banked
 37063  004CF0  6F9D               	movwf	_RFstate& (0+255),b
 37064                           
 37065                           ;inputs_MC50.c: 97:                     Bptr = 0;
 37066  004CF2  0E00               	movlw	0
 37067  004CF4  0100               	movlb	0	; () banked
 37068  004CF6  6F8D               	movwf	_Bptr& (0+255),b
 37069                           
 37070                           ;inputs_MC50.c: 98:                     BitCount = 0;
 37071  004CF8  0E00               	movlw	0
 37072  004CFA  6F8C               	movwf	_BitCount& (0+255),b
 37073  004CFC  0012               	return	
 37074  004CFE                     i2l14707:
 37075                           
 37076                           ; BSR set to: 1
 37077                           ;inputs_MC50.c: 103:             if (RFBit) {
 37078  004CFE  0100               	movlb	0	; () banked
 37079  004D00  5189               	movf	_RFBit& (0+255),w,b	;volatile
 37080  004D02  B4D8               	btfsc	status,2,c
 37081  004D04  D030               	goto	i2l14723
 37082                           
 37083                           ; BSR set to: 0
 37084                           ;inputs_MC50.c: 106:                 if ((RFcount < 20) || (RFcount >= 45)) {
 37085  004D06  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 37086  004D08  D00E               	goto	i2u1463_40
 37087  004D0A  517F               	movf	(_RFcount+1)& (0+255),w,b
 37088  004D0C  E104               	bnz	i2u1462_40
 37089  004D0E  0E14               	movlw	20
 37090  004D10  5D7E               	subwf	_RFcount& (0+255),w,b
 37091  004D12  A0D8               	btfss	status,0,c
 37092  004D14  D008               	goto	i2u1463_40
 37093  004D16                     i2u1462_40:
 37094                           
 37095                           ; BSR set to: 0
 37096  004D16  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 37097  004D18  D01E               	goto	i2l14721
 37098  004D1A  517F               	movf	(_RFcount+1)& (0+255),w,b
 37099  004D1C  E104               	bnz	i2u1463_40
 37100  004D1E  0E2D               	movlw	45
 37101  004D20  5D7E               	subwf	_RFcount& (0+255),w,b
 37102  004D22  A0D8               	btfss	status,0,c
 37103  004D24  D018               	goto	i2l14721
 37104  004D26                     i2u1463_40:
 37105                           
 37106                           ; BSR set to: 0
 37107                           ;inputs_MC50.c: 107:                     if((RFcount < 80) || RFcount>=100)
 37108  004D26  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 37109  004D28  D7A3               	goto	i2u1455_40
 37110  004D2A  517F               	movf	(_RFcount+1)& (0+255),w,b
 37111  004D2C  E104               	bnz	i2u1464_40
 37112  004D2E  0E50               	movlw	80
 37113  004D30  5D7E               	subwf	_RFcount& (0+255),w,b
 37114  004D32  A0D8               	btfss	status,0,c
 37115  004D34  D79D               	goto	i2u1455_40
 37116  004D36                     i2u1464_40:
 37117                           
 37118                           ; BSR set to: 0
 37119  004D36  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 37120  004D38  D006               	goto	i2l14719
 37121  004D3A  517F               	movf	(_RFcount+1)& (0+255),w,b
 37122  004D3C  E199               	bnz	i2l14679
 37123  004D3E  0E64               	movlw	100
 37124  004D40  5D7E               	subwf	_RFcount& (0+255),w,b
 37125  004D42  B0D8               	btfsc	status,0,c
 37126  004D44  D795               	goto	i2u1455_40
 37127  004D46                     i2l14719:
 37128                           
 37129                           ; BSR set to: 0
 37130                           ;inputs_MC50.c: 112:                     {;inputs_MC50.c: 113:                         R
      +                          Fcount = -10;
 37131  004D46  0EFF               	movlw	255
 37132  004D48  6F7F               	movwf	(_RFcount+1)& (0+255),b
 37133  004D4A  0EF6               	movlw	246
 37134  004D4C  6F7E               	movwf	_RFcount& (0+255),b
 37135                           
 37136                           ;inputs_MC50.c: 114:                         RFstate = 4;
 37137  004D4E  0E04               	movlw	4
 37138  004D50  0101               	movlb	1	; () banked
 37139  004D52  6F9D               	movwf	_RFstate& (0+255),b
 37140  004D54  0012               	return	
 37141  004D56                     i2l14721:
 37142                           
 37143                           ; BSR set to: 0
 37144                           ;inputs_MC50.c: 118:                     RFcount = 0;
 37145  004D56  0E00               	movlw	0
 37146  004D58  6F7F               	movwf	(_RFcount+1)& (0+255),b
 37147  004D5A  0E00               	movlw	0
 37148  004D5C  6F7E               	movwf	_RFcount& (0+255),b
 37149                           
 37150                           ;inputs_MC50.c: 119:                     RFstate = 2;
 37151  004D5E  0E02               	movlw	2
 37152  004D60  0101               	movlb	1	; () banked
 37153  004D62  6F9D               	movwf	_RFstate& (0+255),b
 37154  004D64  0012               	return	
 37155  004D66                     i2l14723:
 37156                           
 37157                           ; BSR set to: 0
 37158                           ;inputs_MC50.c: 122:                 RFcount++;
 37159  004D66  4B7E               	infsnz	_RFcount& (0+255),f,b
 37160  004D68  2B7F               	incf	(_RFcount+1)& (0+255),f,b
 37161  004D6A  0012               	return	
 37162  004D6C                     i2l14725:
 37163                           
 37164                           ; BSR set to: 1
 37165                           ;inputs_MC50.c: 127:             if (RFBit == 0) {
 37166  004D6C  0100               	movlb	0	; () banked
 37167  004D6E  5189               	movf	_RFBit& (0+255),w,b	;volatile
 37168  004D70  A4D8               	btfss	status,2,c
 37169  004D72  D056               	goto	i2l14761
 37170                           
 37171                           ; BSR set to: 0
 37172                           ;inputs_MC50.c: 130:                 RFstate = 5;
 37173  004D74  0E05               	movlw	5
 37174  004D76  0101               	movlb	1	; () banked
 37175  004D78  6F9D               	movwf	_RFstate& (0+255),b
 37176                           
 37177                           ; BSR set to: 1
 37178                           ;inputs_MC50.c: 131:                 BufferRF[Bptr] >>= 1;
 37179  004D7A  0EC6               	movlw	low _BufferRF
 37180  004D7C  0100               	movlb	0	; () banked
 37181  004D7E  258D               	addwf	_Bptr& (0+255),w,b
 37182  004D80  6ED9               	movwf	fsr2l,c
 37183  004D82  6ADA               	clrf	fsr2h,c
 37184  004D84  0E02               	movlw	high _BufferRF
 37185  004D86  22DA               	addwfc	fsr2h,f,c
 37186  004D88  90D8               	bcf	status,0,c
 37187  004D8A  32DF               	rrcf	indf2,f,c
 37188                           
 37189                           ; BSR set to: 0
 37190                           ;inputs_MC50.c: 132:                 if (RFcount >= 0) {
 37191  004D8C  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 37192  004D8E  D008               	goto	i2l14735
 37193                           
 37194                           ; BSR set to: 0
 37195                           ;inputs_MC50.c: 133:                     BufferRF[Bptr] += 0x80;
 37196  004D90  0EC6               	movlw	low _BufferRF
 37197  004D92  258D               	addwf	_Bptr& (0+255),w,b
 37198  004D94  6ED9               	movwf	fsr2l,c
 37199  004D96  6ADA               	clrf	fsr2h,c
 37200  004D98  0E02               	movlw	high _BufferRF
 37201  004D9A  22DA               	addwfc	fsr2h,f,c
 37202  004D9C  0E80               	movlw	128
 37203  004D9E  26DF               	addwf	indf2,f,c
 37204  004DA0                     i2l14735:
 37205                           
 37206                           ; BSR set to: 0
 37207                           ;inputs_MC50.c: 136:                 RFcount = 0;
 37208  004DA0  0E00               	movlw	0
 37209  004DA2  6F7F               	movwf	(_RFcount+1)& (0+255),b
 37210  004DA4  0E00               	movlw	0
 37211  004DA6  6F7E               	movwf	_RFcount& (0+255),b
 37212                           
 37213                           ; BSR set to: 0
 37214                           ;inputs_MC50.c: 138:                 if ((++BitCount & 7) == 0)
 37215  004DA8  2B8C               	incf	_BitCount& (0+255),f,b
 37216  004DAA  C08C  F001         	movff	_BitCount,??_rxi
 37217  004DAE  0E07               	movlw	7
 37218  004DB0  1601               	andwf	??_rxi^0,f,c
 37219  004DB2  A4D8               	btfss	status,2,c
 37220  004DB4  D009               	goto	i2l14743
 37221                           
 37222                           ; BSR set to: 0
 37223                           ;inputs_MC50.c: 139:                 {;inputs_MC50.c: 140:                     Bptr++;
 37224  004DB6  2B8D               	incf	_Bptr& (0+255),f,b
 37225                           
 37226                           ; BSR set to: 0
 37227                           ;inputs_MC50.c: 141:                     BufferRF[Bptr]=0;
 37228  004DB8  0EC6               	movlw	low _BufferRF
 37229  004DBA  258D               	addwf	_Bptr& (0+255),w,b
 37230  004DBC  6ED9               	movwf	fsr2l,c
 37231  004DBE  6ADA               	clrf	fsr2h,c
 37232  004DC0  0E02               	movlw	high _BufferRF
 37233  004DC2  22DA               	addwfc	fsr2h,f,c
 37234  004DC4  0E00               	movlw	0
 37235  004DC6  6EDF               	movwf	indf2,c
 37236  004DC8                     i2l14743:
 37237                           
 37238                           ; BSR set to: 0
 37239                           ;inputs_MC50.c: 143:                 if (BitCount == 13) {
 37240  004DC8  0E0D               	movlw	13
 37241  004DCA  198C               	xorwf	_BitCount& (0+255),w,b
 37242  004DCC  A4D8               	btfss	status,2,c
 37243  004DCE  0012               	return	
 37244                           
 37245                           ; BSR set to: 0
 37246                           ;inputs_MC50.c: 144:                     RFstate = 0;
 37247  004DD0  0E00               	movlw	0
 37248  004DD2  0101               	movlb	1	; () banked
 37249  004DD4  6F9D               	movwf	_RFstate& (0+255),b
 37250                           
 37251                           ; BSR set to: 1
 37252                           ;inputs_MC50.c: 145:                     if(RFFull_12BIT==1)
 37253  004DD6  0100               	movlb	0	; () banked
 37254  004DD8  058A               	decf	_RFFull_12BIT& (0+255),w,b	;volatile
 37255  004DDA  A4D8               	btfss	status,2,c
 37256  004DDC  D01A               	goto	i2l14755
 37257                           
 37258                           ; BSR set to: 0
 37259                           ;inputs_MC50.c: 146:                     {;inputs_MC50.c: 147:                         i
      +                          f(BufferRF_12BIT[0]==BufferRF[0] && BufferRF_12BIT[1]==BufferRF[1])
 37260  004DDE  0102               	movlb	2	; () banked
 37261  004DE0  51C6               	movf	_BufferRF& (0+255),w,b
 37262  004DE2  0101               	movlb	1	; () banked
 37263  004DE4  198B               	xorwf	_BufferRF_12BIT& (0+255),w,b
 37264  004DE6  A4D8               	btfss	status,2,c
 37265  004DE8  D00F               	goto	i2l1620
 37266                           
 37267                           ; BSR set to: 1
 37268  004DEA  0102               	movlb	2	; () banked
 37269  004DEC  51C7               	movf	(_BufferRF+1)& (0+255),w,b
 37270  004DEE  0101               	movlb	1	; () banked
 37271  004DF0  198C               	xorwf	(_BufferRF_12BIT+1)& (0+255),w,b
 37272  004DF2  A4D8               	btfss	status,2,c
 37273  004DF4  D009               	goto	i2l1620
 37274                           
 37275                           ; BSR set to: 1
 37276                           ;inputs_MC50.c: 148:                         {;inputs_MC50.c: 149:                      
      +                                 RFFull = 1;
 37277  004DF6  0E01               	movlw	1
 37278  004DF8  0100               	movlb	0	; () banked
 37279  004DFA  6F8B               	movwf	_RFFull& (0+255),b	;volatile
 37280                           
 37281                           ;inputs_MC50.c: 150:                             BufferRF[2]=0;
 37282  004DFC  0E00               	movlw	0
 37283  004DFE  0102               	movlb	2	; () banked
 37284  004E00  6FC8               	movwf	(_BufferRF+2)& (0+255),b
 37285                           
 37286                           ;inputs_MC50.c: 151:                             BufferRF[3]=0;
 37287  004E02  0E00               	movlw	0
 37288  004E04  6FC9               	movwf	(_BufferRF+3)& (0+255),b
 37289                           
 37290                           ;inputs_MC50.c: 152:                         }
 37291  004E06  0012               	return	
 37292  004E08                     i2l1620:
 37293                           
 37294                           ; BSR set to: 1
 37295                           ;inputs_MC50.c: 154:                         {;inputs_MC50.c: 155:                      
      +                                 BufferRF_12BIT[0]=BufferRF[0];
 37296  004E08  C2C6  F18B         	movff	_BufferRF,_BufferRF_12BIT
 37297                           
 37298                           ;inputs_MC50.c: 156:                             BufferRF_12BIT[1]=BufferRF[1];
 37299  004E0C  C2C7  F18C         	movff	_BufferRF+1,_BufferRF_12BIT+1
 37300  004E10  0012               	return	
 37301  004E12                     i2l14755:
 37302                           
 37303                           ; BSR set to: 0
 37304                           ;inputs_MC50.c: 161:                     {;inputs_MC50.c: 162:                         R
      +                          FFull_12BIT=1;
 37305  004E12  0E01               	movlw	1
 37306  004E14  6F8A               	movwf	_RFFull_12BIT& (0+255),b	;volatile
 37307                           
 37308                           ; BSR set to: 0
 37309                           ;inputs_MC50.c: 163:                         BufferRF_12BIT[0]=BufferRF[0];
 37310  004E16  C2C6  F18B         	movff	_BufferRF,_BufferRF_12BIT
 37311                           
 37312                           ; BSR set to: 0
 37313                           ;inputs_MC50.c: 164:                         BufferRF_12BIT[1]=BufferRF[1];
 37314  004E1A  C2C7  F18C         	movff	_BufferRF+1,_BufferRF_12BIT+1
 37315  004E1E  0012               	return	
 37316  004E20                     i2l14761:
 37317                           
 37318                           ; BSR set to: 0
 37319                           ;inputs_MC50.c: 168:                 RFcount++;
 37320  004E20  4B7E               	infsnz	_RFcount& (0+255),f,b
 37321  004E22  2B7F               	incf	(_RFcount+1)& (0+255),f,b
 37322                           
 37323                           ; BSR set to: 0
 37324                           ;inputs_MC50.c: 169:                 if (RFcount >= 10)
 37325  004E24  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 37326  004E26  0012               	return	
 37327  004E28  517F               	movf	(_RFcount+1)& (0+255),w,b
 37328  004E2A  E104               	bnz	i2u1473_40
 37329  004E2C  0E0A               	movlw	10
 37330  004E2E  5D7E               	subwf	_RFcount& (0+255),w,b
 37331  004E30  A0D8               	btfss	status,0,c
 37332  004E32  0012               	return	
 37333  004E34                     i2u1473_40:
 37334  004E34  D71D               	goto	i2u1455_40
 37335  004E36                     i2l14767:
 37336                           
 37337                           ; BSR set to: 1
 37338                           ;inputs_MC50.c: 177:             if (RFBit) {
 37339  004E36  0100               	movlb	0	; () banked
 37340  004E38  5189               	movf	_RFBit& (0+255),w,b	;volatile
 37341  004E3A  B4D8               	btfsc	status,2,c
 37342  004E3C  D004               	goto	i2l14771
 37343                           
 37344                           ; BSR set to: 0
 37345                           ;inputs_MC50.c: 181:                 RFstate = 4;
 37346  004E3E  0E04               	movlw	4
 37347  004E40  0101               	movlb	1	; () banked
 37348  004E42  6F9D               	movwf	_RFstate& (0+255),b
 37349                           
 37350                           ;inputs_MC50.c: 183:             } else {
 37351  004E44  0012               	return	
 37352  004E46                     i2l14771:
 37353                           
 37354                           ; BSR set to: 0
 37355                           ;inputs_MC50.c: 184:                 RFcount--;
 37356  004E46  077E               	decf	_RFcount& (0+255),f,b
 37357  004E48  A0D8               	btfss	status,0,c
 37358  004E4A  077F               	decf	(_RFcount+1)& (0+255),f,b
 37359                           
 37360                           ; BSR set to: 0
 37361                           ;inputs_MC50.c: 185:                 if (RFcount < -10)
 37362  004E4C  AF7F               	btfss	(_RFcount+1)& (0+255),7,b
 37363  004E4E  0012               	return	
 37364  004E50  0EF6               	movlw	246
 37365  004E52  5D7E               	subwf	_RFcount& (0+255),w,b
 37366  004E54  0EFF               	movlw	255
 37367  004E56  597F               	subwfb	(_RFcount+1)& (0+255),w,b
 37368  004E58  B0D8               	btfsc	status,0,c
 37369  004E5A  0012               	return	
 37370  004E5C  D747               	goto	i2u1460_40
 37371  004E5E                     i2l14777:
 37372                           
 37373                           ; BSR set to: 1
 37374                           ;inputs_MC50.c: 197:             RFstate = 1;
 37375  004E5E  0E01               	movlw	1
 37376  004E60  6F9D               	movwf	_RFstate& (0+255),b
 37377                           
 37378                           ;inputs_MC50.c: 198:             RFcount = 0;
 37379  004E62  0E00               	movlw	0
 37380  004E64  0100               	movlb	0	; () banked
 37381  004E66  6F7F               	movwf	(_RFcount+1)& (0+255),b
 37382  004E68  0E00               	movlw	0
 37383  004E6A  6F7E               	movwf	_RFcount& (0+255),b
 37384                           
 37385                           ;inputs_MC50.c: 199:             Bptr = 0;
 37386  004E6C  0E00               	movlw	0
 37387  004E6E  6F8D               	movwf	_Bptr& (0+255),b
 37388                           
 37389                           ;inputs_MC50.c: 200:             BitCount = 0;
 37390  004E70  0E00               	movlw	0
 37391  004E72  6F8C               	movwf	_BitCount& (0+255),b
 37392                           
 37393                           ;inputs_MC50.c: 201:             break;
 37394  004E74  0012               	return	
 37395  004E76                     i2l14781:
 37396                           
 37397                           ; BSR set to: 0
 37398  004E76  0101               	movlb	1	; () banked
 37399  004E78  519D               	movf	_RFstate& (0+255),w,b
 37400  004E7A  6E01               	movwf	??_rxi^0,c
 37401  004E7C  6A02               	clrf	(??_rxi+1)^0,c
 37402                           
 37403                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 37404                           ; Switch size 1, requested type "simple"
 37405                           ; Number of cases is 1, Range of values is 0 to 0
 37406                           ; switch strategies available:
 37407                           ; Name         Instructions Cycles
 37408                           ; simple_byte            4     3 (average)
 37409                           ;	Chosen strategy is simple_byte
 37410  004E7E  5002               	movf	(??_rxi+1)^0,w,c
 37411  004E80  0A00               	xorlw	0	; case 0
 37412  004E82  A4D8               	btfss	status,2,c
 37413  004E84  D7EC               	goto	i2l14777
 37414                           
 37415                           ; BSR set to: 1
 37416                           ; Switch size 1, requested type "simple"
 37417                           ; Number of cases is 6, Range of values is 0 to 5
 37418                           ; switch strategies available:
 37419                           ; Name         Instructions Cycles
 37420                           ; simple_byte           19    10 (average)
 37421                           ;	Chosen strategy is simple_byte
 37422  004E86  5001               	movf	??_rxi^0,w,c
 37423  004E88  0A00               	xorlw	0	; case 0
 37424  004E8A  B4D8               	btfsc	status,2,c
 37425  004E8C  D7E8               	goto	i2l14777
 37426  004E8E  0A01               	xorlw	1	; case 1
 37427  004E90  B4D8               	btfsc	status,2,c
 37428  004E92  D735               	goto	i2l14707
 37429  004E94  0A03               	xorlw	3	; case 2
 37430  004E96  B4D8               	btfsc	status,2,c
 37431  004E98  D6D8               	goto	i2l14671
 37432  004E9A  0A01               	xorlw	1	; case 3
 37433  004E9C  B4D8               	btfsc	status,2,c
 37434  004E9E  D6EC               	goto	i2l14681
 37435  004EA0  0A07               	xorlw	7	; case 4
 37436  004EA2  B4D8               	btfsc	status,2,c
 37437  004EA4  D763               	goto	i2l14725
 37438  004EA6  0A01               	xorlw	1	; case 5
 37439  004EA8  B4D8               	btfsc	status,2,c
 37440  004EAA  D7C5               	goto	i2l14767
 37441  004EAC  D7D8               	goto	i2l14777
 37442  004EAE                     __end_of_rxi:
 37443                           	callstack 0
 37444                           
 37445 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 37446 ;; Defined at:
 37447 ;;		line 147 in file "mcc_generated_files/tmr0.c"
 37448 ;; Parameters:    Size  Location     Type
 37449 ;;		None
 37450 ;; Auto vars:     Size  Location     Type
 37451 ;;		None
 37452 ;; Return value:  Size  Location     Type
 37453 ;;                  1    wreg      void 
 37454 ;; Registers used:
 37455 ;;		None
 37456 ;; Tracked objects:
 37457 ;;		On entry : 3F/2
 37458 ;;		On exit  : 3F/2
 37459 ;;		Unchanged: 3F/0
 37460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37464 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37465 ;;Total ram usage:        0 bytes
 37466 ;; Hardware stack levels used: 1
 37467 ;; This function calls:
 37468 ;;		Nothing
 37469 ;; This function is called by:
 37470 ;;		_TMR0_Initialize
 37471 ;;		_TMR0_ISR
 37472 ;; This function uses a non-reentrant model
 37473 ;;
 37474                           
 37475                           	psect	text203
 37476  009CA8                     __ptext203:
 37477                           	callstack 0
 37478  009CA8                     _TMR0_DefaultInterruptHandler:
 37479                           	callstack 15
 37480                           
 37481                           ; BSR set to: 2
 37482                           
 37483                           ;incstack = 0
 37484  009CA8  0012               	return		;funcret
 37485  009CAA                     __end_of_TMR0_DefaultInterruptHandler:
 37486                           	callstack 0
 37487                           
 37488 ;; *************** function _EUSART1_Transmit_ISR *****************
 37489 ;; Defined at:
 37490 ;;		line 197 in file "mcc_generated_files/eusart1.c"
 37491 ;; Parameters:    Size  Location     Type
 37492 ;;		None
 37493 ;; Auto vars:     Size  Location     Type
 37494 ;;		None
 37495 ;; Return value:  Size  Location     Type
 37496 ;;                  1    wreg      void 
 37497 ;; Registers used:
 37498 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 37499 ;; Tracked objects:
 37500 ;;		On entry : 3F/2
 37501 ;;		On exit  : 30/0
 37502 ;;		Unchanged: 0/0
 37503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37507 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37508 ;;Total ram usage:        0 bytes
 37509 ;; Hardware stack levels used: 1
 37510 ;; This function calls:
 37511 ;;		Nothing
 37512 ;; This function is called by:
 37513 ;;		_EUSART1_Initialize
 37514 ;;		_INTERRUPT_InterruptManager
 37515 ;; This function uses a non-reentrant model
 37516 ;;
 37517                           
 37518                           	psect	text204
 37519  009496                     __ptext204:
 37520                           	callstack 0
 37521  009496                     _EUSART1_Transmit_ISR:
 37522                           	callstack 16
 37523                           
 37524                           ; BSR set to: 2
 37525                           ;mcc_generated_files/eusart1.c: 201:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
 37526                           
 37527                           ; BSR set to: 2
 37528                           ;incstack = 0
 37529  009496  0E08               	movlw	8
 37530  009498  0101               	movlb	1	; () banked
 37531  00949A  61FE               	cpfslt	_eusart1TxBufferRemaining& (0+255),b
 37532  00949C  D012               	goto	i2l106
 37533                           
 37534                           ; BSR set to: 1
 37535                           ;mcc_generated_files/eusart1.c: 202:     {;mcc_generated_files/eusart1.c: 203:         T
      +                          X1REG = eusart1TxBuffer[eusart1TxTail++];
 37536  00949E  0E84               	movlw	low _eusart1TxBuffer
 37537  0094A0  0100               	movlb	0	; () banked
 37538  0094A2  2596               	addwf	_eusart1TxTail& (0+255),w,b	;volatile
 37539  0094A4  6ED9               	movwf	fsr2l,c
 37540  0094A6  6ADA               	clrf	fsr2h,c
 37541  0094A8  0E02               	movlw	high _eusart1TxBuffer
 37542  0094AA  22DA               	addwfc	fsr2h,f,c
 37543  0094AC  50DF               	movf	indf2,w,c
 37544  0094AE  6E9A               	movwf	154,c	;volatile
 37545                           
 37546                           ; BSR set to: 0
 37547  0094B0  2B96               	incf	_eusart1TxTail& (0+255),f,b	;volatile
 37548                           
 37549                           ; BSR set to: 0
 37550                           ;mcc_generated_files/eusart1.c: 204:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
 37551  0094B2  0E07               	movlw	7
 37552  0094B4  6596               	cpfsgt	_eusart1TxTail& (0+255),b
 37553  0094B6  D002               	goto	i2l16803
 37554                           
 37555                           ; BSR set to: 0
 37556                           ;mcc_generated_files/eusart1.c: 205:         {;mcc_generated_files/eusart1.c: 206:      
      +                                 eusart1TxTail = 0;
 37557  0094B8  0E00               	movlw	0
 37558  0094BA  6F96               	movwf	_eusart1TxTail& (0+255),b	;volatile
 37559  0094BC                     i2l16803:
 37560                           
 37561                           ; BSR set to: 0
 37562                           ;mcc_generated_files/eusart1.c: 208:         eusart1TxBufferRemaining++;
 37563  0094BC  0101               	movlb	1	; () banked
 37564  0094BE  2BFE               	incf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
 37565                           
 37566                           ;mcc_generated_files/eusart1.c: 209:     }
 37567  0094C0  0012               	return	
 37568  0094C2                     i2l106:
 37569                           
 37570                           ; BSR set to: 1
 37571                           ;mcc_generated_files/eusart1.c: 211:     {;mcc_generated_files/eusart1.c: 212:         P
      +                          IE3bits.TX1IE = 0;
 37572  0094C2  010E               	movlb	14	; () banked
 37573  0094C4  99C5               	bcf	197,4,b	;volatile
 37574  0094C6  0012               	return		;funcret
 37575  0094C8                     __end_of_EUSART1_Transmit_ISR:
 37576                           	callstack 0
 37577                           
 37578 ;; *************** function _EUSART1_Receive_ISR *****************
 37579 ;; Defined at:
 37580 ;;		line 216 in file "mcc_generated_files/eusart1.c"
 37581 ;; Parameters:    Size  Location     Type
 37582 ;;		None
 37583 ;; Auto vars:     Size  Location     Type
 37584 ;;		None
 37585 ;; Return value:  Size  Location     Type
 37586 ;;                  1    wreg      void 
 37587 ;; Registers used:
 37588 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 37589 ;; Tracked objects:
 37590 ;;		On entry : 3F/2
 37591 ;;		On exit  : 0/0
 37592 ;;		Unchanged: 0/0
 37593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37597 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37598 ;;Total ram usage:        0 bytes
 37599 ;; Hardware stack levels used: 1
 37600 ;; Hardware stack levels required when called: 2
 37601 ;; This function calls:
 37602 ;;		Absolute function
 37603 ;;		_EUSART1_DefaultErrorHandler
 37604 ;;		_EUSART1_DefaultFramingErrorHandler
 37605 ;;		_EUSART1_DefaultOverrunErrorHandler
 37606 ;;		_EUSART1_RxDataHandler
 37607 ;; This function is called by:
 37608 ;;		_EUSART1_Initialize
 37609 ;;		_INTERRUPT_InterruptManager
 37610 ;; This function uses a non-reentrant model
 37611 ;;
 37612                           
 37613                           	psect	text205
 37614  007D26                     __ptext205:
 37615                           	callstack 0
 37616  007D26                     _EUSART1_Receive_ISR:
 37617                           	callstack 14
 37618                           
 37619                           ; BSR set to: 2
 37620                           ;mcc_generated_files/eusart1.c: 219:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
 37621                           
 37622                           ;incstack = 0
 37623  007D26  0E74               	movlw	low _eusart1RxStatusBuffer
 37624  007D28  0100               	movlb	0	; () banked
 37625  007D2A  2595               	addwf	_eusart1RxHead& (0+255),w,b	;volatile
 37626  007D2C  6ED9               	movwf	fsr2l,c
 37627  007D2E  6ADA               	clrf	fsr2h,c
 37628  007D30  0E02               	movlw	high _eusart1RxStatusBuffer
 37629  007D32  22DA               	addwfc	fsr2h,f,c
 37630  007D34  0E00               	movlw	0
 37631  007D36  6EDF               	movwf	indf2,c
 37632                           
 37633                           ; BSR set to: 0
 37634                           ;mcc_generated_files/eusart1.c: 221:     if(RC1STAbits.FERR){
 37635  007D38  A49D               	btfss	157,2,c	;volatile
 37636  007D3A  D013               	goto	i2u1886_49
 37637                           
 37638                           ; BSR set to: 0
 37639                           ;mcc_generated_files/eusart1.c: 222:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
 37640  007D3C  0E74               	movlw	low _eusart1RxStatusBuffer
 37641  007D3E  2595               	addwf	_eusart1RxHead& (0+255),w,b	;volatile
 37642  007D40  6ED9               	movwf	fsr2l,c
 37643  007D42  6ADA               	clrf	fsr2h,c
 37644  007D44  0E02               	movlw	high _eusart1RxStatusBuffer
 37645  007D46  22DA               	addwfc	fsr2h,f,c
 37646  007D48  0102               	movlb	2	; () banked
 37647  007D4A  82DF               	bsf	indf2,1,c
 37648                           
 37649                           ; BSR set to: 2
 37650                           ;mcc_generated_files/eusart1.c: 223:         EUSART1_FramingErrorHandler();
 37651  007D4C  D801               	call	i2u1886_48
 37652  007D4E  D009               	goto	i2u1886_49
 37653  007D50                     i2u1886_48:
 37654  007D50  0005               	push	
 37655  007D52  6EFA               	movwf	pclath,c
 37656  007D54  51E7               	movf	_EUSART1_FramingErrorHandler& (0+255),w,b
 37657  007D56  6EFD               	movwf	tosl,c
 37658  007D58  51E8               	movf	(_EUSART1_FramingErrorHandler+1)& (0+255),w,b
 37659  007D5A  6EFE               	movwf	tosh,c
 37660  007D5C  6AFF               	clrf	tosu,c
 37661  007D5E  50FA               	movf	pclath,w,c
 37662  007D60  0012               	return		;indir
 37663  007D62                     i2u1886_49:
 37664                           
 37665                           ;mcc_generated_files/eusart1.c: 226:     if(RC1STAbits.OERR){
 37666  007D62  A29D               	btfss	157,1,c	;volatile
 37667  007D64  D014               	goto	i2u1888_49
 37668                           
 37669                           ;mcc_generated_files/eusart1.c: 227:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
 37670  007D66  0E74               	movlw	low _eusart1RxStatusBuffer
 37671  007D68  0100               	movlb	0	; () banked
 37672  007D6A  2595               	addwf	_eusart1RxHead& (0+255),w,b	;volatile
 37673  007D6C  6ED9               	movwf	fsr2l,c
 37674  007D6E  6ADA               	clrf	fsr2h,c
 37675  007D70  0E02               	movlw	high _eusart1RxStatusBuffer
 37676  007D72  22DA               	addwfc	fsr2h,f,c
 37677  007D74  0102               	movlb	2	; () banked
 37678  007D76  84DF               	bsf	indf2,2,c
 37679                           
 37680                           ; BSR set to: 2
 37681                           ;mcc_generated_files/eusart1.c: 228:         EUSART1_OverrunErrorHandler();
 37682  007D78  D801               	call	i2u1888_48
 37683  007D7A  D009               	goto	i2u1888_49
 37684  007D7C                     i2u1888_48:
 37685  007D7C  0005               	push	
 37686  007D7E  6EFA               	movwf	pclath,c
 37687  007D80  51E5               	movf	_EUSART1_OverrunErrorHandler& (0+255),w,b
 37688  007D82  6EFD               	movwf	tosl,c
 37689  007D84  51E6               	movf	(_EUSART1_OverrunErrorHandler+1)& (0+255),w,b
 37690  007D86  6EFE               	movwf	tosh,c
 37691  007D88  6AFF               	clrf	tosu,c
 37692  007D8A  50FA               	movf	pclath,w,c
 37693  007D8C  0012               	return		;indir
 37694  007D8E                     i2u1888_49:
 37695                           
 37696                           ;mcc_generated_files/eusart1.c: 231:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
 37697  007D8E  0E74               	movlw	low _eusart1RxStatusBuffer
 37698  007D90  0100               	movlb	0	; () banked
 37699  007D92  2595               	addwf	_eusart1RxHead& (0+255),w,b	;volatile
 37700  007D94  6ED9               	movwf	fsr2l,c
 37701  007D96  6ADA               	clrf	fsr2h,c
 37702  007D98  0E02               	movlw	high _eusart1RxStatusBuffer
 37703  007D9A  22DA               	addwfc	fsr2h,f,c
 37704  007D9C  50DF               	movf	indf2,w,c
 37705  007D9E  B4D8               	btfsc	status,2,c
 37706  007DA0  D00C               	goto	i2l16823
 37707                           
 37708                           ; BSR set to: 0
 37709                           ;mcc_generated_files/eusart1.c: 232:         EUSART1_ErrorHandler();
 37710  007DA2  D801               	call	i2u1890_48
 37711  007DA4  0012               	return	
 37712  007DA6                     i2u1890_48:
 37713  007DA6  0005               	push	
 37714  007DA8  6EFA               	movwf	pclath,c
 37715  007DAA  0102               	movlb	2	; () banked
 37716  007DAC  51E3               	movf	_EUSART1_ErrorHandler& (0+255),w,b
 37717  007DAE  6EFD               	movwf	tosl,c
 37718  007DB0  51E4               	movf	(_EUSART1_ErrorHandler+1)& (0+255),w,b
 37719  007DB2  6EFE               	movwf	tosh,c
 37720  007DB4  6AFF               	clrf	tosu,c
 37721  007DB6  50FA               	movf	pclath,w,c
 37722  007DB8  0012               	return		;indir
 37723  007DBA                     i2l16823:
 37724                           
 37725                           ; BSR set to: 0
 37726                           ;mcc_generated_files/eusart1.c: 234:         EUSART1_RxDataHandler();
 37727  007DBA  EC7D  F04C         	call	_EUSART1_RxDataHandler	;wreg free
 37728  007DBE  0012               	return		;funcret
 37729  007DC0                     __end_of_EUSART1_Receive_ISR:
 37730                           	callstack 0
 37731                           
 37732 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
 37733 ;; Defined at:
 37734 ;;		line 252 in file "mcc_generated_files/eusart1.c"
 37735 ;; Parameters:    Size  Location     Type
 37736 ;;		None
 37737 ;; Auto vars:     Size  Location     Type
 37738 ;;		None
 37739 ;; Return value:  Size  Location     Type
 37740 ;;                  1    wreg      void 
 37741 ;; Registers used:
 37742 ;;		None
 37743 ;; Tracked objects:
 37744 ;;		On entry : 3F/2
 37745 ;;		On exit  : 3F/2
 37746 ;;		Unchanged: 3F/0
 37747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37748 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37749 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37751 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37752 ;;Total ram usage:        0 bytes
 37753 ;; Hardware stack levels used: 1
 37754 ;; This function calls:
 37755 ;;		Nothing
 37756 ;; This function is called by:
 37757 ;;		_EUSART1_Initialize
 37758 ;;		_EUSART1_Receive_ISR
 37759 ;; This function uses a non-reentrant model
 37760 ;;
 37761                           
 37762                           	psect	text206
 37763  009C6A                     __ptext206:
 37764                           	callstack 0
 37765  009C6A                     _EUSART1_DefaultOverrunErrorHandler:
 37766                           	callstack 15
 37767                           
 37768                           ; BSR set to: 2
 37769                           ;mcc_generated_files/eusart1.c: 255:     RC1STAbits.CREN = 0;
 37770                           
 37771                           ;incstack = 0
 37772  009C6A  989D               	bcf	157,4,c	;volatile
 37773                           
 37774                           ;mcc_generated_files/eusart1.c: 256:     RC1STAbits.CREN = 1;
 37775  009C6C  889D               	bsf	157,4,c	;volatile
 37776                           
 37777                           ; BSR set to: 2
 37778  009C6E  0012               	return		;funcret
 37779  009C70                     __end_of_EUSART1_DefaultOverrunErrorHandler:
 37780                           	callstack 0
 37781                           
 37782 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
 37783 ;; Defined at:
 37784 ;;		line 250 in file "mcc_generated_files/eusart1.c"
 37785 ;; Parameters:    Size  Location     Type
 37786 ;;		None
 37787 ;; Auto vars:     Size  Location     Type
 37788 ;;		None
 37789 ;; Return value:  Size  Location     Type
 37790 ;;                  1    wreg      void 
 37791 ;; Registers used:
 37792 ;;		None
 37793 ;; Tracked objects:
 37794 ;;		On entry : 3F/2
 37795 ;;		On exit  : 3F/2
 37796 ;;		Unchanged: 3F/0
 37797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37801 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37802 ;;Total ram usage:        0 bytes
 37803 ;; Hardware stack levels used: 1
 37804 ;; This function calls:
 37805 ;;		Nothing
 37806 ;; This function is called by:
 37807 ;;		_EUSART1_Initialize
 37808 ;;		_EUSART1_Receive_ISR
 37809 ;; This function uses a non-reentrant model
 37810 ;;
 37811                           
 37812                           	psect	text207
 37813  009CAA                     __ptext207:
 37814                           	callstack 0
 37815  009CAA                     _EUSART1_DefaultFramingErrorHandler:
 37816                           	callstack 15
 37817                           
 37818                           ; BSR set to: 2
 37819                           
 37820                           ; BSR set to: 2
 37821                           ;incstack = 0
 37822  009CAA  0012               	return		;funcret
 37823  009CAC                     __end_of_EUSART1_DefaultFramingErrorHandler:
 37824                           	callstack 0
 37825                           
 37826 ;; *************** function _EUSART1_DefaultErrorHandler *****************
 37827 ;; Defined at:
 37828 ;;		line 260 in file "mcc_generated_files/eusart1.c"
 37829 ;; Parameters:    Size  Location     Type
 37830 ;;		None
 37831 ;; Auto vars:     Size  Location     Type
 37832 ;;		None
 37833 ;; Return value:  Size  Location     Type
 37834 ;;                  1    wreg      void 
 37835 ;; Registers used:
 37836 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 37837 ;; Tracked objects:
 37838 ;;		On entry : 3F/2
 37839 ;;		On exit  : 3F/0
 37840 ;;		Unchanged: 0/0
 37841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37845 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37846 ;;Total ram usage:        0 bytes
 37847 ;; Hardware stack levels used: 1
 37848 ;; Hardware stack levels required when called: 1
 37849 ;; This function calls:
 37850 ;;		_EUSART1_RxDataHandler
 37851 ;; This function is called by:
 37852 ;;		_EUSART1_Initialize
 37853 ;;		_EUSART1_Receive_ISR
 37854 ;; This function uses a non-reentrant model
 37855 ;;
 37856                           
 37857                           	psect	text208
 37858  009C70                     __ptext208:
 37859                           	callstack 0
 37860  009C70                     _EUSART1_DefaultErrorHandler:
 37861                           	callstack 14
 37862                           
 37863                           ; BSR set to: 2
 37864                           ;mcc_generated_files/eusart1.c: 261:     EUSART1_RxDataHandler();
 37865                           
 37866                           ; BSR set to: 2
 37867                           ;incstack = 0
 37868  009C70  EC7D  F04C         	call	_EUSART1_RxDataHandler	;wreg free
 37869                           
 37870                           ; BSR set to: 0
 37871  009C74  0012               	return		;funcret
 37872  009C76                     __end_of_EUSART1_DefaultErrorHandler:
 37873                           	callstack 0
 37874                           
 37875 ;; *************** function _EUSART1_RxDataHandler *****************
 37876 ;; Defined at:
 37877 ;;		line 240 in file "mcc_generated_files/eusart1.c"
 37878 ;; Parameters:    Size  Location     Type
 37879 ;;		None
 37880 ;; Auto vars:     Size  Location     Type
 37881 ;;		None
 37882 ;; Return value:  Size  Location     Type
 37883 ;;                  1    wreg      void 
 37884 ;; Registers used:
 37885 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 37886 ;; Tracked objects:
 37887 ;;		On entry : 3D/0
 37888 ;;		On exit  : 3F/0
 37889 ;;		Unchanged: 0/0
 37890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37894 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37895 ;;Total ram usage:        0 bytes
 37896 ;; Hardware stack levels used: 1
 37897 ;; This function calls:
 37898 ;;		Nothing
 37899 ;; This function is called by:
 37900 ;;		_EUSART1_Receive_ISR
 37901 ;;		_EUSART1_DefaultErrorHandler
 37902 ;; This function uses a non-reentrant model
 37903 ;;
 37904                           
 37905                           	psect	text209
 37906  0098FA                     __ptext209:
 37907                           	callstack 0
 37908  0098FA                     _EUSART1_RxDataHandler:
 37909                           	callstack 15
 37910                           
 37911                           ;mcc_generated_files/eusart1.c: 242:     eusart1RxBuffer[eusart1RxHead++] = RC1REG;
 37912                           
 37913                           ; BSR set to: 0
 37914                           ;incstack = 0
 37915  0098FA  0E7C               	movlw	low _eusart1RxBuffer
 37916  0098FC  0100               	movlb	0	; () banked
 37917  0098FE  2595               	addwf	_eusart1RxHead& (0+255),w,b	;volatile
 37918  009900  6ED9               	movwf	fsr2l,c
 37919  009902  6ADA               	clrf	fsr2h,c
 37920  009904  0E02               	movlw	high _eusart1RxBuffer
 37921  009906  22DA               	addwfc	fsr2h,f,c
 37922  009908  CF99 FFDF          	movff	3993,indf2	;volatile
 37923                           
 37924                           ; BSR set to: 0
 37925  00990C  2B95               	incf	_eusart1RxHead& (0+255),f,b	;volatile
 37926                           
 37927                           ; BSR set to: 0
 37928                           ;mcc_generated_files/eusart1.c: 243:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
 37929  00990E  0E07               	movlw	7
 37930  009910  6595               	cpfsgt	_eusart1RxHead& (0+255),b
 37931  009912  D002               	goto	i2l13117
 37932                           
 37933                           ; BSR set to: 0
 37934                           ;mcc_generated_files/eusart1.c: 244:     {;mcc_generated_files/eusart1.c: 245:         e
      +                          usart1RxHead = 0;
 37935  009914  0E00               	movlw	0
 37936  009916  6F95               	movwf	_eusart1RxHead& (0+255),b	;volatile
 37937  009918                     i2l13117:
 37938                           
 37939                           ; BSR set to: 0
 37940                           ;mcc_generated_files/eusart1.c: 247:     eusart1RxCount++;
 37941  009918  2B93               	incf	_eusart1RxCount& (0+255),f,b	;volatile
 37942                           
 37943                           ; BSR set to: 0
 37944  00991A  0012               	return		;funcret
 37945  00991C                     __end_of_EUSART1_RxDataHandler:
 37946                           	callstack 0
 37947                           
 37948                           	psect	text210
 37949  000000                     __ptext210:
 37950                           	callstack 0
 37951                           
 37952                           	psect	rparam
 37953  0000                     
 37954                           	psect	temp
 37955  000050                     btemp:
 37956                           	callstack 0
 37957  000050                     	ds	1
 37958  0000                     int$flags	set	btemp
 37959  0000                     wtemp8	set	btemp+1
 37960  0000                     ttemp5	set	btemp+1
 37961  0000                     ttemp6	set	btemp+4
 37962  0000                     ttemp7	set	btemp+8
 37963                           
 37964                           	psect	idloc
 37965                           
 37966                           ;Config register IDLOC0 @ 0x200000
 37967                           ;	unspecified, using default values
 37968  200000                     	org	2097152
 37969  200000  0FFF               	dw	4095
 37970                           
 37971                           ;Config register IDLOC1 @ 0x200002
 37972                           ;	unspecified, using default values
 37973  200002                     	org	2097154
 37974  200002  0FFF               	dw	4095
 37975                           
 37976                           ;Config register IDLOC2 @ 0x200004
 37977                           ;	unspecified, using default values
 37978  200004                     	org	2097156
 37979  200004  0FFF               	dw	4095
 37980                           
 37981                           ;Config register IDLOC3 @ 0x200006
 37982                           ;	unspecified, using default values
 37983  200006                     	org	2097158
 37984  200006  0FFF               	dw	4095
 37985                           
 37986                           ;Config register IDLOC4 @ 0x200008
 37987                           ;	unspecified, using default values
 37988  200008                     	org	2097160
 37989  200008  0FFF               	dw	4095
 37990                           
 37991                           ;Config register IDLOC5 @ 0x20000A
 37992                           ;	unspecified, using default values
 37993  20000A                     	org	2097162
 37994  20000A  0FFF               	dw	4095
 37995                           
 37996                           ;Config register IDLOC6 @ 0x20000C
 37997                           ;	unspecified, using default values
 37998  20000C                     	org	2097164
 37999  20000C  0FFF               	dw	4095
 38000                           
 38001                           ;Config register IDLOC7 @ 0x20000E
 38002                           ;	unspecified, using default values
 38003  20000E                     	org	2097166
 38004  20000E  0FFF               	dw	4095
 38005                           
 38006                           	psect	config
 38007                           
 38008                           ;Config register CONFIG1L @ 0x300000
 38009                           ;	External Oscillator mode Selection bits
 38010                           ;	FEXTOSC = OFF, Oscillator not enabled
 38011                           ;	Power-up default value for COSC bits
 38012                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
 38013  300000                     	org	3145728
 38014  300000  8C                 	db	140
 38015                           
 38016                           ;Config register CONFIG1H @ 0x300001
 38017                           ;	Clock Out Enable bit
 38018                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
 38019                           ;	Clock Switch Enable bit
 38020                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 38021                           ;	Fail-Safe Clock Monitor Enable bit
 38022                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 38023  300001                     	org	3145729
 38024  300001  FF                 	db	255
 38025                           
 38026                           ;Config register CONFIG2L @ 0x300002
 38027                           ;	Master Clear Enable bit
 38028                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
 38029                           ;	Power-up Timer Enable bit
 38030                           ;	PWRTE = ON, Power up timer enabled
 38031                           ;	Low-power BOR enable bit
 38032                           ;	LPBOREN = OFF, ULPBOR disabled
 38033                           ;	Brown-out Reset Enable bits
 38034                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 38035  300002                     	org	3145730
 38036  300002  FD                 	db	253
 38037                           
 38038                           ;Config register CONFIG2H @ 0x300003
 38039                           ;	Brown Out Reset Voltage selection bits
 38040                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
 38041                           ;	ZCD Disable bit
 38042                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
 38043                           ;	PPSLOCK bit One-Way Set Enable bit
 38044                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
 38045                           ;	Stack Full/Underflow Reset Enable bit
 38046                           ;	STVREN = ON, Stack full/underflow will cause Reset
 38047                           ;	Debugger Enable bit
 38048                           ;	DEBUG = OFF, Background debugger disabled
 38049                           ;	Extended Instruction Set Enable bit
 38050                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 38051  300003                     	org	3145731
 38052  300003  FF                 	db	255
 38053                           
 38054                           ;Config register CONFIG3L @ 0x300004
 38055                           ;	WDT Period Select bits
 38056                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 38057                           ;	WDT operating mode
 38058                           ;	WDTE = SWDTEN, WDT enabled/disabled by SWDTEN bit
 38059  300004                     	org	3145732
 38060  300004  BF                 	db	191
 38061                           
 38062                           ;Config register CONFIG3H @ 0x300005
 38063                           ;	WDT Window Select bits
 38064                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 38065                           ;	WDT input clock selector
 38066                           ;	WDTCCS = SC, Software Control
 38067  300005                     	org	3145733
 38068  300005  FF                 	db	255
 38069                           
 38070                           ;Config register CONFIG4L @ 0x300006
 38071                           ;	Write Protection Block 0
 38072                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
 38073                           ;	Write Protection Block 1
 38074                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
 38075                           ;	Write Protection Block 2
 38076                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
 38077                           ;	Write Protection Block 3
 38078                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
 38079  300006                     	org	3145734
 38080  300006  FF                 	db	255
 38081                           
 38082                           ;Config register CONFIG4H @ 0x300007
 38083                           ;	Configuration Register Write Protection bit
 38084                           ;	WRTC = OFF, Configuration registers (300000-30000Bh) not write-protected
 38085                           ;	Boot Block Write Protection bit
 38086                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 38087                           ;	Data EEPROM Write Protection bit
 38088                           ;	WRTD = OFF, Data EEPROM not write-protected
 38089                           ;	Scanner Enable bit
 38090                           ;	SCANE = ON, Scanner module is available for use, SCANMD bit can control the module
 38091                           ;	Low Voltage Programming Enable bit
 38092                           ;	LVP = OFF, HV on MCLR/VPP must be used for programming
 38093  300007                     	org	3145735
 38094  300007  DF                 	db	223
 38095                           
 38096                           ;Config register CONFIG5L @ 0x300008
 38097                           ;	UserNVM Program Memory Code Protection bit
 38098                           ;	CP = ON, UserNVM code protection enabled
 38099                           ;	DataNVM Memory Code Protection bit
 38100                           ;	CPD = ON, DataNVM code protection enabled
 38101  300008                     	org	3145736
 38102  300008  FC                 	db	252
 38103                           
 38104                           ;Config register CONFIG5H @ 0x300009
 38105                           ;	unspecified, using default values
 38106  300009                     	org	3145737
 38107  300009  FF                 	db	255
 38108                           
 38109                           ;Config register CONFIG6L @ 0x30000A
 38110                           ;	Table Read Protection Block 0
 38111                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
 38112                           ;	Table Read Protection Block 1
 38113                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
 38114                           ;	Table Read Protection Block 2
 38115                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
 38116                           ;	Table Read Protection Block 3
 38117                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
 38118  30000A                     	org	3145738
 38119  30000A  FF                 	db	255
 38120                           
 38121                           ;Config register CONFIG6H @ 0x30000B
 38122                           ;	Boot Block Table Read Protection bit
 38123                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 38124  30000B                     	org	3145739
 38125  30000B  FF                 	db	255
 38126                           tosu	equ	0xFFF
 38127                           tosh	equ	0xFFE
 38128                           tosl	equ	0xFFD
 38129                           stkptr	equ	0xFFC
 38130                           pclatu	equ	0xFFB
 38131                           pclath	equ	0xFFA
 38132                           pcl	equ	0xFF9
 38133                           tblptru	equ	0xFF8
 38134                           tblptrh	equ	0xFF7
 38135                           tblptrl	equ	0xFF6
 38136                           tablat	equ	0xFF5
 38137                           prodh	equ	0xFF4
 38138                           prodl	equ	0xFF3
 38139                           indf0	equ	0xFEF
 38140                           postinc0	equ	0xFEE
 38141                           postdec0	equ	0xFED
 38142                           preinc0	equ	0xFEC
 38143                           plusw0	equ	0xFEB
 38144                           fsr0h	equ	0xFEA
 38145                           fsr0l	equ	0xFE9
 38146                           wreg	equ	0xFE8
 38147                           indf1	equ	0xFE7
 38148                           postinc1	equ	0xFE6
 38149                           postdec1	equ	0xFE5
 38150                           preinc1	equ	0xFE4
 38151                           plusw1	equ	0xFE3
 38152                           fsr1h	equ	0xFE2
 38153                           fsr1l	equ	0xFE1
 38154                           bsr	equ	0xFE0
 38155                           indf2	equ	0xFDF
 38156                           postinc2	equ	0xFDE
 38157                           postdec2	equ	0xFDD
 38158                           preinc2	equ	0xFDC
 38159                           plusw2	equ	0xFDB
 38160                           fsr2h	equ	0xFDA
 38161                           fsr2l	equ	0xFD9
 38162                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    32
    Data        46
    BSS         824
    Persistent  19
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     58      79
    BANK0           160     36     158
    BANK1           256      0     256
    BANK2           256      7     250
    BANK3           256      0     247
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          136      0       0

Pointer List with Targets:

    i2c_write1ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    i2c_read1ByteRegister@d2.data	PTR unsigned char  size(2) Largest target is 0
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    i2c_read2ByteRegister@result.data	PTR unsigned char  size(2) Largest target is 0
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    i2c_write2ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    I2C1_Read1ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    I2C1_Read2ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    I2C1_Write1ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    I2C1_Write2ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    I2C1_DO_TX$8318$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_RX$8324$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_TX_EMPTY$8330$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_RX_EMPTY$8336$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_TX_EMPTY$8335	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_TX_EMPTY$8330	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), 
		 -> wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    I2C1_DO_RX$8329	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_RX$8324	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), 
		 -> wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    I2C1_DO_TX$8323	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_TX$8318	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), 
		 -> wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    I2C1_MasterFsm$8317	const PTR FTN()enum E10442 size(2) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_RESET(), I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), 
		 -> I2C1_DO_RX_ACK(), I2C1_DO_SEND_STOP(), I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_WRITE(), 
		 -> I2C1_DO_SEND_RESTART_READ(), I2C1_DO_TX_EMPTY(), I2C1_DO_RCEN(), I2C1_DO_RX(), 
		 -> I2C1_DO_TX(), I2C1_DO_SEND_ADR_WRITE(), I2C1_DO_SEND_ADR_READ(), I2C1_DO_IDLE(), 

    I2C1_CallbackReturnStop@funPtr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_CallbackReturnReset@funPtr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    Absolute function$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    S935$0$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    memcpy@d1	PTR void  size(2) Largest target is 17
		 -> controlSelectRemote@tempSerial(BANK0[4]), Decrypt@Buffer(COMRAM[4]), SecureKeyGen@SKEYtemp(COMRAM[8]), SecureKeyGen@HOPtemp(COMRAM[4]), 
		 -> SecureKeyGen@Buffer(COMRAM[8]), NormalKeyGen@SKEYtemp(COMRAM[4]), NormalKeyGen@SEED(BANK2[4]), NormalKeyGen@HOPtemp(COMRAM[4]), 
		 -> NormalKeyGen@Buffer(COMRAM[8]), DKEY(BANK2[8]), classic_data(BANK2[16]), I2C1_WriteNBytes@dat(COMRAM[17]), 
		 -> i2c_writeNBytes@dat(COMRAM[17]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 17
		 -> controlSelectRemote@tempSerial(BANK0[4]), Decrypt@Buffer(COMRAM[4]), SecureKeyGen@SKEYtemp(COMRAM[8]), SecureKeyGen@HOPtemp(COMRAM[4]), 
		 -> SecureKeyGen@Buffer(COMRAM[8]), NormalKeyGen@SKEYtemp(COMRAM[4]), NormalKeyGen@SEED(BANK2[4]), NormalKeyGen@HOPtemp(COMRAM[4]), 
		 -> NormalKeyGen@Buffer(COMRAM[8]), DKEY(BANK2[8]), classic_data(BANK2[16]), I2C1_WriteNBytes@dat(COMRAM[17]), 
		 -> i2c_writeNBytes@dat(COMRAM[17]), 

    memcpy@s1	PTR const void  size(2) Largest target is 64
		 -> classic_data.raw_data(BANK2[4]), Decrypt@Buffer(COMRAM[4]), SecureKeyGen@SKEYtemp(COMRAM[8]), SecureKeyGen@HOPtemp(COMRAM[4]), 
		 -> SecureKeyGen@Buffer(COMRAM[8]), NormalKeyGen@SKEYtemp(COMRAM[4]), NormalKeyGen@SEED(BANK2[4]), NormalKeyGen@HOPtemp(COMRAM[4]), 
		 -> NormalKeyGen@Buffer(COMRAM[8]), classic_data.serialnumber(BANK2[4]), classic_data(BANK2[16]), BufferRF(BANK2[9]), 
		 -> RemoveSerial@tempSerial(BANK0[4]), saveNewSerial@tempSerial(BANK0[4]), var_sys_NVM(BANK0[64]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 64
		 -> classic_data.raw_data(BANK2[4]), Decrypt@Buffer(COMRAM[4]), SecureKeyGen@SKEYtemp(COMRAM[8]), SecureKeyGen@HOPtemp(COMRAM[4]), 
		 -> SecureKeyGen@Buffer(COMRAM[8]), NormalKeyGen@SKEYtemp(COMRAM[4]), NormalKeyGen@SEED(BANK2[4]), NormalKeyGen@HOPtemp(COMRAM[4]), 
		 -> NormalKeyGen@Buffer(COMRAM[8]), classic_data.serialnumber(BANK2[4]), classic_data(BANK2[16]), BufferRF(BANK2[9]), 
		 -> RemoveSerial@tempSerial(BANK0[4]), saveNewSerial@tempSerial(BANK0[4]), var_sys_NVM(BANK0[64]), 

    eusartparser@package	PTR struct package_t size(2) Largest target is 7
		 -> main@package(BANK2[7]), 

    confirmpackage@package	PTR struct package_t size(2) Largest target is 7
		 -> main@package(BANK2[7]), 

    read_eusartparser@package	PTR struct package_t size(2) Largest target is 7
		 -> main@package(BANK2[7]), 

    init_package@package	PTR struct package_t size(2) Largest target is 7
		 -> main@package(BANK2[7]), 

    sm_send_event@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_send_event@psm	PTR struct . size(2) Largest target is 12
		 -> controlLearning_stateMachine(BANK2[11]), controlGate_stateMachine(BANK1[11]), main_stateMachine(BANK1[11]), menuConfiguration_stateMachine(BANK2[11]), 

    sm_get_current_state@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_get_current_state@psm	PTR struct . size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_restart@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_restart@psm	PTR struct . size(2) Largest target is 12
		 -> controlLearning_stateMachine(BANK2[11]), controlGate_stateMachine(BANK1[11]), main_stateMachine(BANK1[11]), menuConfiguration_stateMachine(BANK2[11]), 

    sm_init@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_init@psm	PTR struct . size(2) Largest target is 12
		 -> controlLearning_stateMachine(BANK2[11]), controlGate_stateMachine(BANK1[11]), main_stateMachine(BANK1[11]), menuConfiguration_stateMachine(BANK2[11]), 

    sm_execute_menuConfiguration@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_execute_menuConfiguration@psm	PTR struct . size(2) Largest target is 12
		 -> menuConfiguration_stateMachine(BANK2[11]), 

    S6624$Value	PTR unsigned char  size(2) Largest target is 64
		 -> setValueToEdit@value(BANK1[1]), var_sys_NVM(BANK0[64]), NULL(NULL[0]), 

    edit_Param.Value	PTR unsigned char  size(2) Largest target is 64
		 -> setValueToEdit@value(BANK1[1]), var_sys_NVM.walkTime(BANK0[1]), var_sys_NVM.softStart(BANK0[1]), var_sys_NVM.softstop(BANK0[1]), 
		 -> var_sys_NVM.flashRGBMode(BANK0[1]), var_sys_NVM.velocityDecelaration(BANK0[1]), var_sys_NVM.operationMode(BANK0[1]), var_sys_NVM.autoTimeFullClose(BANK0[1]), 
		 -> var_sys_NVM.Stopboton(BANK0[1]), var_sys_NVM.logicDigital(BANK0[1]), var_sys_NVM.Direction_motor(BANK0[1]), var_sys_NVM.folow_me(BANK0[1]), 
		 -> var_sys_NVM.ligthTime(BANK0[1]), var_sys_NVM.autoTimeWalkClose(BANK0[1]), var_sys_NVM.programmingDistance(BANK0[1]), var_sys_NVM.flashLightMode(BANK0[1]), 
		 -> var_sys_NVM.securityBandInOpen(BANK0[1]), var_sys_NVM.securityBandType(BANK0[1]), var_sys_NVM.securityBandIsON(BANK0[1]), var_sys_NVM.photoCellInOpen(BANK0[1]), 
		 -> var_sys_NVM.photoCellIsON(BANK0[1]), var_sys_NVM.decelarationClose(BANK0[1]), var_sys_NVM.motorPower(BANK0[1]), var_sys_NVM.decelarationOpen(BANK0[1]), 
		 -> var_sys_NVM.homemPresente(BANK0[1]), var_sys_NVM.TypeofMotor(BANK0[1]), var_sys_NVM.positionRemotesWalk(BANK0[1]), var_sys_NVM.decelarationSensivity(BANK0[1]), 
		 -> var_sys_NVM.motorSensitivity(BANK0[1]), var_sys_NVM.electricBrake(BANK0[1]), var_sys_NVM(BANK0[64]), NULL(NULL[0]), 

    sm_execute_main@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_execute_main@psm	PTR struct . size(2) Largest target is 12
		 -> main_stateMachine(BANK1[11]), 

    sm_execute_ControlLearning@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_execute_ControlLearning@psm	PTR struct . size(2) Largest target is 12
		 -> controlLearning_stateMachine(BANK2[11]), 

    sm_execute_ControlGate@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_execute_ControlGate@psm	PTR struct . size(2) Largest target is 12
		 -> controlGate_stateMachine(BANK1[11]), 

    decrementTimeslot@ts	PTR int  size(2) Largest target is 72
		 -> ts_system.TimeShowVersion(BANK1[2]), ts_system.TimeLearningDecelaration(BANK1[2]), ts_system.TimeWaitToGetCurrent(BANK1[2]), ts_system.InvertionTimeClosingFromOpen(BANK1[2]), 
		 -> ts_system.TimeWaitReleCapacitor(BANK1[2]), ts_system.TimeInversionStart(BANK1[2]), ts_system.TimeStopedBeforeDecelaration(BANK1[2]), ts_system.TimeWaitToNextState(BANK1[2]), 
		 -> ts_system.timeFreqFlashligth(BANK1[2]), ts_system.timeFreqRGB(BANK1[2]), ts_system.timeWaitToClose(BANK1[2]), ts_system.timeOpenWalk(BANK1[2]), 
		 -> ts_system.timeoutMenu(BANK1[2]), ts_system.timeFreqDigit(BANK1[2]), ts_system.timewaitFlashRGB(BANK1[2]), ts_system.TimeStopElectricBrake(BANK1[2]), 
		 -> ts_system.Debug_TS(BANK1[2]), ts_system.timeSinalizationDigit(BANK1[2]), ts_system.TimeLastCommand(BANK1[2]), ts_system.timeBetweenSaveCounters(BANK1[2]), 
		 -> ts_system.TimeCurrentAlarm(BANK1[2]), ts_system.TimeCurrentWaitForAlarm(BANK1[2]), ts_system.TimeReleCapacitor(BANK1[2]), ts_system.TimeChargeCondesador(BANK1[2]), 
		 -> ts_system.TimeTransitionDecelaration(BANK1[2]), ts_system.timewaitBeforeSoftStart(BANK1[2]), ts_system.timeSoftStart(BANK1[2]), ts_system.TimeElectricBrake(BANK1[2]), 
		 -> ts_system.TimeStopADCZeroOffsetCalc(BANK1[2]), ts_system(BANK1[72]), 

    controlLearning_stateMachine.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    controlGate_stateMachine.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    main_stateMachine.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S4647$parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    menuConfiguration_stateMachine.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    verifyProgramingMode@classic_data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    keeloq_classic_decrypt_packet@data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    DecryptPacket_12BIT@data	PTR unsigned char  size(2) Largest target is 9
		 -> BufferRF(BANK2[9]), 

    DecryptPacket_12BIT@classic_data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    keeloqDecryptPacket@data	PTR unsigned char  size(2) Largest target is 9
		 -> BufferRF(BANK2[9]), 

    keeloqDecryptPacket@classic_data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    getHopCode@data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    HopCHK@data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    DecCHK@data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    Decrypt@packet	PTR unsigned char  size(2) Largest target is 16
		 -> SecureKeyGen@HOPtemp(COMRAM[4]), NormalKeyGen@Buffer(COMRAM[8]), classic_data(BANK2[16]), 

    NormalKeyGen@serial	PTR unsigned long  size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    sp__getClassicManufCode	PTR void  size(2) Largest target is 8
		 -> DKEY(BANK2[8]), 

    getSerialCmd@serial	PTR unsigned long  size(1) Largest target is 4
		 -> controlSelectRemote@tempSerial(BANK0[4]), 

    SaveNVM_VarSystem@point	PTR unsigned char  size(1) Largest target is 64
		 -> var_sys_NVM(BANK0[64]), 

    ReadSerial@tempSerial	PTR unsigned long  size(1) Largest target is 4
		 -> eusartparser@serial(BANK0[4]), 

    validateRemoteSerialNumber@position	PTR unsigned char  size(2) Largest target is 16
		 -> eusartparser@pos(BANK0[1]), controlSelectRemote@pos(BANK0[1]), classic_data(BANK2[16]), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), Absolute function(), 

    I2C1_SetCallback@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_SetCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), 
		 -> rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), wr1RegCompleteHandler(), 

    I2C1_SetAddressNackCallback@ptr	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C1_SetAddressNackCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), 

    I2C1_SetDataCompleteCallback@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_SetDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), 
		 -> rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), wr1RegCompleteHandler(), 

    I2C1_SetBuffer@buffer	PTR void  size(2) Largest target is 64
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 
		 -> I2C1_ReadDataBlock@reg(COMRAM[1]), I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_WriteNBytes@dat(COMRAM[17]), I2C1_Write2ByteRegister@reg(COMRAM[1]), 
		 -> I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@reg(COMRAM[1]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@reg(COMRAM[1]), 
		 -> I2C1_Read2ByteRegister@returnValue(COMRAM[2]), I2C1_Read1ByteRegister@reg(COMRAM[1]), I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@reg(COMRAM[2]), 
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@reg(COMRAM[1]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@reg(COMRAM[1]), 
		 -> i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@reg(COMRAM[1]), i2c_read1ByteRegister@d2(COMRAM[1]), i2c_writeNBytes@dat(COMRAM[17]), 
		 -> i2c_write1ByteRegister@reg(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    S935$data_ptr	PTR unsigned char  size(2) Largest target is 64
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 
		 -> I2C1_ReadDataBlock@reg(COMRAM[1]), I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_WriteNBytes@dat(COMRAM[17]), I2C1_Write2ByteRegister@reg(COMRAM[1]), 
		 -> I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@reg(COMRAM[1]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@reg(COMRAM[1]), 
		 -> I2C1_Read2ByteRegister@returnValue(COMRAM[2]), I2C1_Read1ByteRegister@reg(COMRAM[1]), I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@reg(COMRAM[2]), 
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@reg(COMRAM[1]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@reg(COMRAM[1]), 
		 -> i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@reg(COMRAM[1]), i2c_read1ByteRegister@d2(COMRAM[1]), i2c_writeNBytes@dat(COMRAM[17]), 
		 -> i2c_write1ByteRegister@reg(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_Status.data_ptr	PTR unsigned char  size(2) Largest target is 64
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 
		 -> I2C1_ReadDataBlock@reg(COMRAM[1]), I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_WriteNBytes@dat(COMRAM[17]), I2C1_Write2ByteRegister@reg(COMRAM[1]), 
		 -> I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@reg(COMRAM[1]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@reg(COMRAM[1]), 
		 -> I2C1_Read2ByteRegister@returnValue(COMRAM[2]), I2C1_Read1ByteRegister@reg(COMRAM[1]), I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@reg(COMRAM[2]), 
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@reg(COMRAM[1]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@reg(COMRAM[1]), 
		 -> i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@reg(COMRAM[1]), i2c_read1ByteRegister@d2(COMRAM[1]), i2c_writeNBytes@dat(COMRAM[17]), 
		 -> i2c_write1ByteRegister@reg(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    S935$callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_Status.callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    S935$callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), 
		 -> wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    I2C1_Status.callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), 
		 -> wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    i2c1_fsmStateTable	const PTR FTN()enum E10442[16] size(2) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_RESET(), I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), 
		 -> I2C1_DO_RX_ACK(), I2C1_DO_SEND_STOP(), I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_WRITE(), 
		 -> I2C1_DO_SEND_RESTART_READ(), I2C1_DO_TX_EMPTY(), I2C1_DO_RCEN(), I2C1_DO_RX(), 
		 -> I2C1_DO_TX(), I2C1_DO_SEND_ADR_WRITE(), I2C1_DO_SEND_ADR_READ(), I2C1_DO_IDLE(), 

    rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr.data	PTR unsigned char  size(2) Largest target is 64
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    wr2RegCompleteHandler@i2c1_master_example$F523@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    wr1RegCompleteHandler@i2c1_master_example$F517@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    rd2RegCompleteHandler@i2c1_master_example$F511@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    rd1RegCompleteHandler@i2c1_master_example$F500@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    bufferBlock.data	PTR unsigned char  size(2) Largest target is 64
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    i2c_readDataBlock@data	PTR void  size(2) Largest target is 64
		 -> eusartparser@serial(BANK0[4]), var_sys_NVM.homemPresente(BANK0[1]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), var_sys_NVM.positionRemotesFull(BANK0[1]), 
		 -> memoryTEMP(BANK2[16]), var_sys_NVM.learningCurrentNormalClose(BANK0[2]), var_sys_NVM(BANK0[64]), 

    d.data	PTR unsigned char  size(2) Largest target is 64
		 -> eusartparser@serial(BANK0[4]), var_sys_NVM.homemPresente(BANK0[1]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), var_sys_NVM.positionRemotesFull(BANK0[1]), 
		 -> memoryTEMP(BANK2[16]), var_sys_NVM.learningCurrentNormalClose(BANK0[2]), var_sys_NVM(BANK0[64]), 

    S429$data	PTR unsigned char  size(2) Largest target is 64
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    rdBlkRegCompleteHandler@p.data	PTR unsigned char  size(2) Largest target is 64
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    rdBlkRegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    wr2RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    rd2RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    rd1RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    sp__memcpy	PTR void  size(2) Largest target is 17
		 -> controlSelectRemote@tempSerial(BANK0[4]), Decrypt@Buffer(COMRAM[4]), SecureKeyGen@SKEYtemp(COMRAM[8]), SecureKeyGen@HOPtemp(COMRAM[4]), 
		 -> SecureKeyGen@Buffer(COMRAM[8]), NormalKeyGen@SKEYtemp(COMRAM[4]), NormalKeyGen@SEED(BANK2[4]), NormalKeyGen@HOPtemp(COMRAM[4]), 
		 -> NormalKeyGen@Buffer(COMRAM[8]), DKEY(BANK2[8]), classic_data(BANK2[16]), I2C1_WriteNBytes@dat(COMRAM[17]), 
		 -> i2c_writeNBytes@dat(COMRAM[17]), 

    i2c_writeNBytes@data	PTR void  size(1) Largest target is 64
		 -> RemoveSerial@tempSerial(BANK0[4]), saveNewSerial@tempSerial(BANK0[4]), var_sys_NVM(BANK0[64]), 

    wr1RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Transmit_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMRAM

    _sm_execute_menuConfiguration->_ResetDefaultMemory
    _sm_execute_menuConfiguration->_setValueToEdit
    _load_New_Menu->_SetSegmentValueIntermitentMain
    _controlSelectRemote->_RemoveSerial
    _controlSelectRemote->_saveNewSerial
    _controlSelectRemote->_validateRemoteSerialNumber
    _getSerialCmd->_memcpy
    _controlSaveRemote->_SetSegmentValueIntermitentMain
    ___awdiv->___lbmod
    _SetSegmentValueMain->___awdiv
    _controlLearnDigit->_SetSegmentValueLearn
    _sm_execute_ControlGate->_sm_execute_ControlLearning
    _generateErrorLearnig->_sm_init
    _sm_init->_sm_restart
    _setPositionInvertionInOpening->_getTimeDecelaration
    _controlVelocity->_getStateOpenPosition
    _getStateOpenPosition->_getTimeDecelaration
    _InitSoftStop->_GetMotorPower
    _CloseOrder->_sm_send_event
    _setPositionInvertionInClosing->_getTimeDecelaration
    _getTimeDecelaration->___lmul
    ___lmul->___lldiv
    _StopOrder->_sm_send_event
    _GetSecurityStateInClosing->_SetSegmentValueIntermitent
    _WaitPreFlash->_sm_send_event
    _OpenFullOrder->_sm_send_event
    _OpenWalkOrder->_sm_send_event
    _sm_send_event->_sm_get_current_state
    _InitSoftStart->_GetMotorPower
    _GetSecurityStateInOpening->_SetSegmentValueIntermitent
    _GetOpenOrder->_SetSegmentValueIntermitentMain
    _SetSegmentValueIntermitentMain->___awdiv
    _read_package->_EUSART1_Read
    _keeloqDecryptPacket->_validateRemoteSerialNumber
    _keeloq_classic_decrypt_packet->_NormalKeyGen
    _NormalKeyGen->_Decrypt
    _Decrypt->_memcpy
    _HopCHK->_getHopCode
    _getHopCode->___wmul
    _DecryptPacket_12BIT->_validateRemoteSerialNumber
    _loadNVM_VarSystem->_ResetDefaultMemory
    _loadNVM_VarSystem->_checkNVM_VarSystem
    _eusartparser->_RemoveSerial
    _eusartparser->_saveNewSerial
    _eusartparser->_validateRemoteSerialNumber
    _validateRemoteSerialNumber->_i2c_readDataBlock
    _saveNewSerial->_i2c_writeNBytes
    _read_eusartparser->_write_package
    _write_package->_EUSART1_Write
    _confirmpackage->_init_package
    _cmdMemoryIsEmpty->_i2c_readDataBlock
    _RemoveSerial->_i2c_writeNBytes
    _ReadSerial->_i2c_readDataBlock
    _ShowVersion->_SetSegmentValue
    _SetSegmentValue->___awdiv
    _SYSTEM_Initialize->_TMR1_Initialize
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler
    _ControlMotor->_VerifyElectricalBrake
    _ControlLights->_setRGB_ON
    _setRGB_ON->_RGB_Set
    _ControlCurrent->_getCurrentComparator
    _refreshCurrent->_sumHIST
    _refreshADCZeroOffset->___lwdiv
    _getCurrentComparator->___wmul
    _SaveNVM_VarSystem->_i2c_writeNBytes
    _I2C1_SetAddressNackCallback->_I2C1_SetCallback
    _I2C1_MasterWrite->_I2C1_MasterOperation
    _I2C1_Poller->_I2C1_MasterFsm
    _I2C1_MasterFsm->_I2C1_DO_ADDRESS_NACK
    _I2C1_MasterFsm->_I2C1_DO_RX
    _I2C1_MasterFsm->_I2C1_DO_TX
    _I2C1_MasterFsm->_I2C1_DO_TX_EMPTY
    _I2C1_DO_TX_EMPTY->_I2C1_CallbackReturnReset
    _I2C1_DO_TX_EMPTY->_I2C1_CallbackReturnStop
    _I2C1_DO_TX_EMPTY->_rd1RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rd1RegCompleteHandler@i2c1_master_example$F500
    _I2C1_DO_TX_EMPTY->_rd2RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rd2RegCompleteHandler@i2c1_master_example$F511
    _I2C1_DO_TX_EMPTY->_rdBlkRegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rdBlkRegCompleteHandler@i2c1_master_example$F535
    _I2C1_DO_TX_EMPTY->_wr1RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_wr1RegCompleteHandler@i2c1_master_example$F517
    _I2C1_DO_TX_EMPTY->_wr2RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_wr2RegCompleteHandler@i2c1_master_example$F523
    _I2C1_DO_TX->_I2C1_CallbackReturnReset
    _I2C1_DO_TX->_I2C1_CallbackReturnStop
    _I2C1_DO_TX->_rd1RegCompleteHandler
    _I2C1_DO_TX->_rd1RegCompleteHandler@i2c1_master_example$F500
    _I2C1_DO_TX->_rd2RegCompleteHandler
    _I2C1_DO_TX->_rd2RegCompleteHandler@i2c1_master_example$F511
    _I2C1_DO_TX->_rdBlkRegCompleteHandler
    _I2C1_DO_TX->_rdBlkRegCompleteHandler@i2c1_master_example$F535
    _I2C1_DO_TX->_wr1RegCompleteHandler
    _I2C1_DO_TX->_wr1RegCompleteHandler@i2c1_master_example$F517
    _I2C1_DO_TX->_wr2RegCompleteHandler
    _I2C1_DO_TX->_wr2RegCompleteHandler@i2c1_master_example$F523
    _I2C1_DO_SEND_ADR_WRITE->_I2C1_MasterSendTxData
    _I2C1_DO_RX->_I2C1_CallbackReturnReset
    _I2C1_DO_RX->_I2C1_CallbackReturnStop
    _I2C1_DO_RX->_rd1RegCompleteHandler
    _I2C1_DO_RX->_rd1RegCompleteHandler@i2c1_master_example$F500
    _I2C1_DO_RX->_rd2RegCompleteHandler
    _I2C1_DO_RX->_rd2RegCompleteHandler@i2c1_master_example$F511
    _I2C1_DO_RX->_rdBlkRegCompleteHandler
    _I2C1_DO_RX->_rdBlkRegCompleteHandler@i2c1_master_example$F535
    _I2C1_DO_RX->_wr1RegCompleteHandler
    _I2C1_DO_RX->_wr1RegCompleteHandler@i2c1_master_example$F517
    _I2C1_DO_RX->_wr2RegCompleteHandler
    _I2C1_DO_RX->_wr2RegCompleteHandler@i2c1_master_example$F523
    _I2C1_DO_ADDRESS_NACK->_I2C1_CallbackReturnReset
    _I2C1_DO_ADDRESS_NACK->_I2C1_CallbackReturnStop
    _I2C1_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rd1RegCompleteHandler@i2c1_master_example$F500
    _I2C1_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rd2RegCompleteHandler@i2c1_master_example$F511
    _I2C1_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler@i2c1_master_example$F535
    _I2C1_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_wr1RegCompleteHandler@i2c1_master_example$F517
    _I2C1_DO_ADDRESS_NACK->_wr2RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_wr2RegCompleteHandler@i2c1_master_example$F523
    _wr2RegCompleteHandler@i2c1_master_example$F523->_I2C1_SetDataCompleteCallback
    _wr2RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _wr1RegCompleteHandler@i2c1_master_example$F517->_I2C1_SetDataCompleteCallback
    _wr1RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rdBlkRegCompleteHandler@i2c1_master_example$F535->_I2C1_SetDataCompleteCallback
    _rdBlkRegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rd2RegCompleteHandler@i2c1_master_example$F511->_I2C1_SetDataCompleteCallback
    _rd2RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rd1RegCompleteHandler@i2c1_master_example$F500->_I2C1_SetDataCompleteCallback
    _rd1RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _I2C1_SetDataCompleteCallback->_I2C1_SetCallback

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR2_ISR->_ReadADC
    _refreshSegment->_Segments_Set
    _controlTimeslots->_decrementTimeslot
    _ReadADC->_ADCC_GetSingleConversion
    _TMR1_ISR->_controlMotorForce
    _controlMotorForce->i2_GetMotorPower
    _TMR0_ISR->_rxi

Critical Paths under _main in BANK0

    _main->_eusartparser
    _sm_execute_main->_sm_execute_menuConfiguration
    _sm_execute_menuConfiguration->_controlSelectRemote
    _setValueToEdit->_SaveNVM_VarSystem
    _controlSelectRemote->_validateRemoteSerialNumber
    _sm_execute_ControlGate->_actionZone_Opening
    _sm_execute_ControlLearning->_SaveNVM_VarSystem
    _actionZone_Opening->_setPositionInvertionInClosing
    _controlVelocity->_getStateOpenPosition
    _actionZone_Closing->_setPositionInvertionInClosing
    _readRFButtons->_keeloqDecryptPacket
    _keeloqDecryptPacket->_validateRemoteSerialNumber
    _DecryptPacket_12BIT->_validateRemoteSerialNumber
    _loadNVM_VarSystem->_SaveNVM_VarSystem
    _checkNVM_VarSystem->_SaveNVM_VarSystem
    _ResetDefaultMemory->_SaveNVM_VarSystem
    _eusartparser->_validateRemoteSerialNumber
    _ControlCounterMoves->_SaveNVM_VarSystem

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0 8899039
                                              0 BANK2      7     7      0
                _ControlCounterMoves
                     _ControlCurrent
                      _ControlInputs
                      _ControlLights
                       _ControlMotor
                _EUSART1_is_rx_ready
                       _InitReceiver
                  _SYSTEM_Initialize
                    _SetSegmentValue
                        _ShowVersion
                    _WWDT_SoftEnable
                    _WWDT_TimerClear
                    _controlVelocity
                       _eusartparser
                      _getKeyPressed
                  _loadNVM_VarSystem
                         _readInputs
                      _readRFButtons
                       _read_package
                         _readbutton
             _sm_execute_ControlGate
                    _sm_execute_main
                            _sm_init
 ---------------------------------------------------------------------------------
 (1) _sm_execute_main                                      4     2      2 3275843
                                             21 BANK0      4     2      2
     _SetSegmentValueIntermitentMain
                _SetSegmentValueMain
                      _load_New_Menu
       _sm_execute_menuConfiguration
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (2) _sm_execute_menuConfiguration                         4     2      2 3249655
                                             17 BANK0      4     2      2
                    _ClearFlag_rfCMD
                 _ResetDefaultMemory
                  _SaveNVM_VarSystem
     _SetSegmentValueIntermitentMain
                _SetSegmentValueMain
                            ___lbdiv
                            ___lldiv
                             ___lmul
                            ___lwdiv
                  _controlLearnDigit
                  _controlSaveRemote
                _controlSelectRemote
                      _load_New_Menu
                     _setValueToEdit
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _setValueToEdit                                       6     5      1  719513
                                             57 COMRAM     1     0      1
                                              4 BANK0      5     5      0
                       _InitReceiver
                  _SaveNVM_VarSystem
                   _cmdMemoryIsEmpty
                      _load_New_Menu
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (4) _load_New_Menu                                        4     4      0    7475
                                             31 COMRAM     4     4      0
     _SetSegmentValueIntermitentMain
                _SetSegmentValueMain
 ---------------------------------------------------------------------------------
 (4) _InitReceiver                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _controlSelectRemote                                  9     9      0 1778853
                                              8 BANK0      9     9      0
                    _ClearFlag_rfCMD
                       _RemoveSerial
                  _SaveNVM_VarSystem
                    _SetSegmentValue
     _SetSegmentValueIntermitentMain
                _SetSegmentValueMain
                            ___awdiv
                            ___lbmod
                   _cmdMemoryIsEmpty
                       _getSerialCmd
                      _getTypeRemote
                      _saveNewSerial
                      _sm_send_event
         _validateRemoteSerialNumber
 ---------------------------------------------------------------------------------
 (4) _getTypeRemote                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _getSerialCmd                                         2     1      1    6667
                                             26 COMRAM     2     1      1
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _controlSaveRemote                                    1     1      0   21448
                                             31 COMRAM     1     1      0
                    _ClearFlag_rfCMD
     _SetSegmentValueIntermitentMain
                _SetSegmentValueMain
                            ___awdiv
                            ___lbmod
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (4) ___lbmod                                              4     3      1    1492
                                             15 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    1705
                                             19 COMRAM     8     4      4
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (5) _SetSegmentValueMain                                  2     1      1    2402
                                             27 COMRAM     2     1      1
                            ___awdiv (ARG)
                            ___lbdiv (ARG)
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (4) _ClearFlag_rfCMD                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _controlLearnDigit                                    0     0      0      31
               _SetSegmentValueLearn
 ---------------------------------------------------------------------------------
 (4) _SetSegmentValueLearn                                 3     3      0      31
                                             15 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     601
                                             15 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _sm_execute_ControlGate                               5     3      2  633789
                                             15 BANK0      5     3      2
                       _GetOpenOrder
         _SetSegmentValueIntermitent
                       _WaitPreFlash
                  _actionZone_Closed
                 _actionZone_Closing
                  _actionZone_Opened
                 _actionZone_Opening
         _sm_execute_ControlLearning
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (2) _sm_execute_ControlLearning                           5     3      2  372027
                                             57 COMRAM     1     1      0
                                              4 BANK0      4     2      2
                       _GetOpenOrder
                  _SaveNVM_VarSystem
                      _calculateMean
                 _clearLearningValue
               _generateErrorLearnig
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _generateErrorLearnig                                 0     0      0    2622
                            _sm_init
 ---------------------------------------------------------------------------------
 (1) _sm_init                                              5     0      5    2622
                                             17 COMRAM     5     0      5
                         _sm_restart
 ---------------------------------------------------------------------------------
 (2) _sm_restart                                           2     0      2     214
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _clearLearningValue                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _calculateMean                                       12     4      8    1241
                                             15 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) _actionZone_Opening                                   3     3      0   52477
                                             12 BANK0      3     3      0
                         _CloseOrder
                       _GetOpenOrder
          _GetSecurityStateInClosing
          _GetSecurityStateInOpening
                   _InitFullAutoTime
                   _InitWalkAutoTime
         _SetSegmentValueIntermitent
                          _StopOrder
                     _VerifyFollowMe
                    _controlVelocity
      _setPositionInvertionInClosing
      _setPositionInvertionInOpening
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _setPositionInvertionInOpening                        8     8      0    1207
                                             49 COMRAM     8     8      0
                _getTimeDecelaration
 ---------------------------------------------------------------------------------
 (3) _controlVelocity                                      1     1      0    3806
                                              2 BANK0      1     1      0
          _ControlDecelarationFactor
                       _InitSoftStop
               _getStateOpenPosition
                _getTimeDecelaration
 ---------------------------------------------------------------------------------
 (4) _getStateOpenPosition                                11    11      0    2562
                                             49 COMRAM     9     9      0
                                              0 BANK0      2     2      0
                             ___lmul
                _getTimeDecelaration
 ---------------------------------------------------------------------------------
 (4) _InitSoftStop                                         1     1      0      37
                                             19 COMRAM     1     1      0
                      _GetMotorPower
 ---------------------------------------------------------------------------------
 (4) _ControlDecelarationFactor                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _actionZone_Opened                                    2     2      0   42796
                                             31 COMRAM     2     2      0
                         _CloseOrder
                       _GetOpenOrder
          _GetSecurityStateInClosing
                   _InitFullAutoTime
                   _InitWalkAutoTime
                      _OpenFullOrder
                      _OpenWalkOrder
                     _VerifyFollowMe
 ---------------------------------------------------------------------------------
 (3) _VerifyFollowMe                                       1     1      0      31
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _CloseOrder                                           0     0      0   11293
                      _InitSoftStart
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (2) _actionZone_Closing                                   2     2      0   58040
                                             49 COMRAM     2     2      0
                       _GetOpenOrder
          _GetSecurityStateInClosing
                   _InitFullAutoTime
                   _InitWalkAutoTime
                      _OpenFullOrder
                      _OpenWalkOrder
         _SetSegmentValueIntermitent
                          _StopOrder
                             ___lmul
      _setPositionInvertionInClosing
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _setPositionInvertionInClosing                       12    12      0    1207
                                              0 BANK0     12    12      0
                _getTimeDecelaration
 ---------------------------------------------------------------------------------
 (4) _getTimeDecelaration                                  9     5      4    1207
                                             40 COMRAM     9     5      4
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8    1176
                                             28 COMRAM    12     4      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) _StopOrder                                            0     0      0   11256
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _GetSecurityStateInClosing                            0     0      0    1893
         _SetSegmentValueIntermitent
 ---------------------------------------------------------------------------------
 (2) _actionZone_Closed                                    2     2      0   65057
                                             31 COMRAM     2     2      0
                       _GetOpenOrder
          _GetSecurityStateInOpening
                   _InitFullAutoTime
                   _InitWalkAutoTime
                      _OpenFullOrder
                      _OpenWalkOrder
                       _WaitPreFlash
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _WaitPreFlash                                         0     0      0   22549
                   _InitFullAutoTime
                      _OpenFullOrder
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _OpenFullOrder                                        0     0      0   11293
                      _InitSoftStart
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _InitFullAutoTime                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _OpenWalkOrder                                        4     4      0   11389
                                             23 COMRAM     4     4      0
                      _InitSoftStart
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (2) _sm_send_event                                        6     2      4   11256
                                             17 COMRAM     6     2      4
               _sm_get_current_state
 ---------------------------------------------------------------------------------
 (3) _sm_get_current_state                                 2     0      2     121
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _InitSoftStart                                        1     1      0      37
                                             19 COMRAM     1     1      0
                      _GetMotorPower
 ---------------------------------------------------------------------------------
 (3) _InitWalkAutoTime                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _GetSecurityStateInOpening                            0     0      0    1893
         _SetSegmentValueIntermitent
 ---------------------------------------------------------------------------------
 (3) _SetSegmentValueIntermitent                           4     1      3    1893
                                             15 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (3) _GetOpenOrder                                         0     0      0    6454
     _SetSegmentValueIntermitentMain
                            ___lbdiv
 ---------------------------------------------------------------------------------
 (3) ___lbdiv                                              4     3      1    1861
                                             15 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (5) _SetSegmentValueIntermitentMain                       4     1      3    4593
                                             27 COMRAM     4     1      3
                            ___awdiv (ARG)
                            ___lbdiv (ARG)
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _readbutton                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _read_package                                        14     7      7     429
                                             16 COMRAM    14     7      7
                       _EUSART1_Read
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Read                                         1     1      0      37
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _readRFButtons                                        0     0      0  743020
                _DecryptPacket_12BIT
                _keeloqDecryptPacket
 ---------------------------------------------------------------------------------
 (2) _keeloqDecryptPacket                                 10     6      4  385615
                                              8 BANK0     10     6      4
                             _DecCHK
                             _HopCHK
      _keeloq_classic_decrypt_packet
                             _memcpy
         _validateRemoteSerialNumber
               _verifyProgramingMode
 ---------------------------------------------------------------------------------
 (3) _verifyProgramingMode                                 3     1      2     152
                                             15 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _keeloq_classic_decrypt_packet                        5     3      2   23218
                                             55 COMRAM     2     0      2
                                              0 BANK0      3     3      0
                            _Decrypt
                       _NormalKeyGen
 ---------------------------------------------------------------------------------
 (4) _NormalKeyGen                                        18    16      2   15069
                                             37 COMRAM    18    16      2
                            _Decrypt
                      _LoadManufCode
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _LoadManufCode                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _Decrypt                                             11     9      2    7935
                                             26 COMRAM    11     9      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _HopCHK                                               4     2      2    3969
                                             35 COMRAM     4     2      2
                          _ReqResync
                         _getHopCode
 ---------------------------------------------------------------------------------
 (4) _getHopCode                                          14    12      2    3541
                                             21 COMRAM    14    12      2
                          _ReqResync
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) _ReqResync                                            2     0      2     211
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _DecCHK                                               4     2      2     242
                                             15 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _DecryptPacket_12BIT                                  5     1      4  357405
                                              8 BANK0      5     1      4
                             _memcpy
         _validateRemoteSerialNumber
 ---------------------------------------------------------------------------------
 (1) _readInputs                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _loadNVM_VarSystem                                    0     0      0 1742040
             _I2C1_Read1ByteRegister
                 _ResetDefaultMemory
                  _SaveNVM_VarSystem
                 _checkNVM_VarSystem
                  _i2c_readDataBlock
 ---------------------------------------------------------------------------------
 (2) _checkNVM_VarSystem                                   1     1      0  349391
                                             57 COMRAM     1     1      0
                  _SaveNVM_VarSystem
 ---------------------------------------------------------------------------------
 (3) _ResetDefaultMemory                                   1     1      0  349369
                                             57 COMRAM     1     1      0
                  _SaveNVM_VarSystem
 ---------------------------------------------------------------------------------
 (2) _I2C1_Read1ByteRegister                               3     2      1  345691
                                             33 COMRAM     3     2      1
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (1) _getKeyPressed                                        1     1      0      37
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _eusartparser                                        35    33      2 2136804
                                              8 BANK0     28    26      2
                         _ReadSerial
                       _RemoveSerial
                  _SaveNVM_VarSystem
                   _cmdMemoryIsEmpty
                     _confirmpackage
                  _read_eusartparser
                      _saveNewSerial
         _validateRemoteSerialNumber
                 _write_eusartparser
                      _write_package
 ---------------------------------------------------------------------------------
 (2) _write_eusartparser                                  19    12      7    1966
                                             15 COMRAM    19    12      7
 ---------------------------------------------------------------------------------
 (4) _validateRemoteSerialNumber                          21    14      7  350496
                                             45 COMRAM    13     6      7
                                              0 BANK0      8     8      0
                  _i2c_readDataBlock
 ---------------------------------------------------------------------------------
 (4) _saveNewSerial                                        8     3      5  349810
                                             57 COMRAM     1     1      0
                                              0 BANK0      7     2      5
                    _i2c_writeNBytes
 ---------------------------------------------------------------------------------
 (2) _read_eusartparser                                    4     2      2   12127
                                             23 COMRAM     4     2      2
                      _write_package
 ---------------------------------------------------------------------------------
 (2) _write_package                                        7     0      7    7947
                                             16 COMRAM     7     0      7
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART1_Write                                        1     1      0      62
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _confirmpackage                                       3     0      3    7904
                                             17 COMRAM     3     0      3
                       _init_package
 ---------------------------------------------------------------------------------
 (3) _init_package                                         2     0      2     232
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _cmdMemoryIsEmpty                                     8     7      1  350581
                                             45 COMRAM     8     7      1
                  _i2c_readDataBlock
 ---------------------------------------------------------------------------------
 (4) _RemoveSerial                                         8     7      1  349543
                                             57 COMRAM     1     0      1
                                              0 BANK0      7     7      0
                    _i2c_writeNBytes
 ---------------------------------------------------------------------------------
 (2) _ReadSerial                                           5     3      2  348828
                                             45 COMRAM     5     3      2
                  _i2c_readDataBlock
 ---------------------------------------------------------------------------------
 (5) _i2c_readDataBlock                                   12     6      6  348313
                                             33 COMRAM    12     6      6
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (1) _WWDT_TimerClear                                      2     2      0      40
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _WWDT_SoftEnable                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ShowVersion                                          0     0      0     602
                    _SetSegmentValue
 ---------------------------------------------------------------------------------
 (4) _SetSegmentValue                                      2     1      1     602
                                             27 COMRAM     2     1      1
                            ___awdiv (ARG)
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     968
                    _ADCC_Initialize
                 _EUSART1_Initialize
                    _I2C1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _WWDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WWDT_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0     121
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR2_SetInterruptHandler                             2     0      2     121
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0     121
                                             17 COMRAM     2     2      0
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             2     0      2     121
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     121
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2     121
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     605
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2     121
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2     121
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2     121
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2     121
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2     121
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ControlMotor                                         7     7      0     319
                                             17 COMRAM     7     7      0
              _VerifyElectricalBrake
 ---------------------------------------------------------------------------------
 (2) _VerifyElectricalBrake                                2     2      0     161
                                             15 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ControlLights                                        0     0      0    1958
                   _setFlashLigth_ON
                          _setRGB_ON
 ---------------------------------------------------------------------------------
 (2) _setRGB_ON                                            5     3      2    1235
                                             16 COMRAM     5     3      2
                            _RGB_Set
 ---------------------------------------------------------------------------------
 (3) _RGB_Set                                              1     1      0      31
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _setFlashLigth_ON                                     2     0      2     723
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _ControlInputs                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ControlCurrent                                       4     4      0    5060
                                             34 COMRAM     4     4      0
                      _GetMotorPower
               _getCurrentComparator
               _refreshADCZeroOffset
                     _refreshCurrent
 ---------------------------------------------------------------------------------
 (2) _refreshCurrent                                       0     0      0     820
                  _saveEnergyADCHist
                       _sumEnergyADC
                            _sumHIST
 ---------------------------------------------------------------------------------
 (3) _sumHIST                                             17    13      4     461
                                             15 COMRAM    17    13      4
 ---------------------------------------------------------------------------------
 (3) _sumEnergyADC                                         9     7      2     238
                                             15 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (3) _saveEnergyADCHist                                    2     0      2     121
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _refreshADCZeroOffset                                 3     3      0    1186
                                             22 COMRAM     3     3      0
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     781
                                             15 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _getCurrentComparator                                13     9      4    3017
                                             21 COMRAM    13     9      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    2878
                                             15 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _GetMotorPower                                        4     4      0      37
                                             15 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (1) _ControlCounterMoves                                  0     0      0  349276
                  _SaveNVM_VarSystem
 ---------------------------------------------------------------------------------
 (4) _SaveNVM_VarSystem                                    4     4      0  349276
                                              0 BANK0      4     4      0
                    _i2c_writeNBytes
 ---------------------------------------------------------------------------------
 (5) _i2c_writeNBytes                                     24    19      5  349112
                                             33 COMRAM    24    19      5
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
                             _memcpy
 ---------------------------------------------------------------------------------
 (6) _memcpy                                              11     5      6    6478
                                             15 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _I2C1_SetAddressNackCallback                          4     0      4    2859
                                             20 COMRAM     4     0      4
                   _I2C1_SetCallback
 ---------------------------------------------------------------------------------
 (6) _I2C1_Open                                            2     2      0      68
                                             15 COMRAM     2     2      0
                _I2C1_MasterClearIrq
                    _I2C1_MasterOpen
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterOpen                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterWrite                                     0     0      0  334109
               _I2C1_MasterOperation
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterOperation                                 2     2      0  334109
                                             31 COMRAM     2     2      0
                   _I2C1_MasterStart
                        _I2C1_Poller
 ---------------------------------------------------------------------------------
 (8) _I2C1_Poller                                          0     0      0  334041
                     _I2C1_MasterFsm
            _I2C1_MasterWaitForEvent
 ---------------------------------------------------------------------------------
 (9) _I2C1_MasterWaitForEvent                              0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_MasterFsm                                       3     3      0  334041
                                             28 COMRAM     3     3      0
               _I2C1_DO_ADDRESS_NACK *
                       _I2C1_DO_IDLE *
                       _I2C1_DO_RCEN *
                      _I2C1_DO_RESET *
                         _I2C1_DO_RX *
                     _I2C1_DO_RX_ACK *
            _I2C1_DO_RX_NACK_RESTART *
               _I2C1_DO_RX_NACK_STOP *
              _I2C1_DO_SEND_ADR_READ *
             _I2C1_DO_SEND_ADR_WRITE *
               _I2C1_DO_SEND_RESTART *
          _I2C1_DO_SEND_RESTART_READ *
         _I2C1_DO_SEND_RESTART_WRITE *
                  _I2C1_DO_SEND_STOP *
                         _I2C1_DO_TX *
                   _I2C1_DO_TX_EMPTY *
                _I2C1_MasterClearIrq
                  _I2C1_MasterIsNack
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_TX_EMPTY                                    2     2      0   83487
                                             26 COMRAM     2     2      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
               _I2C1_DO_SEND_RESTART
                  _I2C1_DO_SEND_STOP
                  _I2C1_MasterSetIrq
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterSetIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_TX                                          2     2      0   83518
                                             26 COMRAM     2     2      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
          _I2C1_DO_SEND_RESTART_READ
         _I2C1_DO_SEND_RESTART_WRITE
                  _I2C1_DO_SEND_STOP
                  _I2C1_MasterIsNack
              _I2C1_MasterSendTxData
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterIsNack                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_DO_SEND_RESTART_WRITE                          0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (11) _I2C1_DO_SEND_RESTART_READ                           0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_SEND_ADR_WRITE                              0     0      0      31
              _I2C1_MasterSendTxData
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_SEND_ADR_READ                               0     0      0      31
              _I2C1_MasterSendTxData
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterSendTxData                               1     1      0      31
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RX_ACK                                      0     0      0       0
                 _I2C1_MasterSendAck
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RX                                          2     2      0   83487
                                             26 COMRAM     2     2      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
            _I2C1_DO_RX_NACK_RESTART
               _I2C1_DO_RX_NACK_STOP
               _I2C1_MasterGetRxData
                 _I2C1_MasterSendAck
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterSendAck                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterGetRxData                                0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RX_NACK_STOP                                0     0      0       0
                _I2C1_MasterSendNack
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RX_NACK_RESTART                             0     0      0       0
                _I2C1_MasterSendNack
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterSendNack                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RESET                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RCEN                                        0     0      0       0
                 _I2C1_MasterStartRx
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterStartRx                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_IDLE                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_ADDRESS_NACK                                2     2      0   83487
                                             26 COMRAM     2     2      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
               _I2C1_DO_SEND_RESTART
                  _I2C1_DO_SEND_STOP
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (11) _wr2RegCompleteHandler@i2c1_master_example$F523      2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _wr2RegCompleteHandler                               2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _wr1RegCompleteHandler@i2c1_master_example$F517      2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _wr1RegCompleteHandler                               2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rdBlkRegCompleteHandler@i2c1_master_example$F535    2     0      2    8343
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rdBlkRegCompleteHandler                             2     0      2    8343
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rd2RegCompleteHandler@i2c1_master_example$F511      2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rd2RegCompleteHandler                               2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rd1RegCompleteHandler@i2c1_master_example$F500      2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rd1RegCompleteHandler                               2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (6) _I2C1_SetDataCompleteCallback                         4     0      4    4339
                                             20 COMRAM     4     0      4
                   _I2C1_SetCallback
 ---------------------------------------------------------------------------------
 (7) _I2C1_SetCallback                                     5     1      4     997
                                             15 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (6) _I2C1_SetBuffer                                       4     0      4    3942
                                             15 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (11) _I2C1_DO_SEND_STOP                                   0     0      0       0
                    _I2C1_MasterStop
 ---------------------------------------------------------------------------------
 (12) _I2C1_MasterStop                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_DO_SEND_RESTART                                0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (12) _I2C1_MasterEnableRestart                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_CallbackReturnStop                             2     0      2       0
                                             24 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (11) _I2C1_CallbackReturnReset                            2     0      2     305
                                             24 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              2     0      2       0
 ---------------------------------------------------------------------------------
 (8) _I2C1_MasterStart                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C1_Close                                           1     1      0      37
                                             15 COMRAM     1     1      0
                _I2C1_MasterClearIrq
                   _I2C1_MasterClose
              _I2C1_MasterDisableIrq
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterDisableIrq                                0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterClose                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterClearIrq                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INTERRUPT_InterruptManager                          6     6      0    2657
                                              9 COMRAM     6     6      0
                   Absolute function *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
                           _TMR0_ISR
                           _TMR1_ISR
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (15) _TMR2_ISR                                            0     0      0    2292
                   Absolute function *
                            _ReadADC
       _TMR2_DefaultInterruptHandler *
                   _controlTimeslots
                     _refreshSegment
 ---------------------------------------------------------------------------------
 (16) _refreshSegment                                      0     0      0      22
                       _Segments_Set
 ---------------------------------------------------------------------------------
 (17) _Segments_Set                                        1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (16) _controlTimeslots                                    0     0      0    2248
                  _decrementTimeslot
 ---------------------------------------------------------------------------------
 (17) _decrementTimeslot                                   4     2      2    2248
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (16) _TMR2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _ReadADC                                             3     3      0      22
                                              1 COMRAM     3     3      0
           _ADCC_GetSingleConversion
 ---------------------------------------------------------------------------------
 (17) _ADCC_GetSingleConversion                            1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (15) _TMR1_ISR                                            0     0      0     365
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
                  _controlMotorForce
 ---------------------------------------------------------------------------------
 (16) _controlMotorForce                                   5     5      0     136
                                              4 COMRAM     5     5      0
                    i2_GetMotorPower
            i2_VerifyElectricalBrake
 ---------------------------------------------------------------------------------
 (17) i2_VerifyElectricalBrake                             2     2      0     112
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (17) i2_GetMotorPower                                     4     4      0      24
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (16) _TMR1_WriteTimer                                     2     0      2     229
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (16) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _TMR0_ISR                                            0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                                _rxi
 ---------------------------------------------------------------------------------
 (16) _rxi                                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (16) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART1_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART1_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (16) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (16) _EUSART1_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              2     0      2       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ControlCounterMoves
     _SaveNVM_VarSystem
       _i2c_writeNBytes
         _I2C1_Close
           _I2C1_MasterClearIrq
           _I2C1_MasterClose
           _I2C1_MasterDisableIrq
         _I2C1_MasterWrite
           _I2C1_MasterOperation
             _I2C1_MasterStart
             _I2C1_Poller
               _I2C1_MasterFsm
                 _I2C1_DO_ADDRESS_NACK *
                   Absolute function(Fake) *
                   _I2C1_CallbackReturnReset *
                   _I2C1_CallbackReturnStop *
                   _I2C1_DO_SEND_RESTART *
                     _I2C1_MasterEnableRestart
                   _I2C1_DO_SEND_STOP *
                     _I2C1_MasterStop
                   _rd1RegCompleteHandler *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                       _I2C1_SetCallback
                   _rd1RegCompleteHandler@i2c1_master_example$F500 *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _rd2RegCompleteHandler *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _rd2RegCompleteHandler@i2c1_master_example$F511 *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _rdBlkRegCompleteHandler *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _rdBlkRegCompleteHandler@i2c1_master_example$F535 *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _wr1RegCompleteHandler *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _wr1RegCompleteHandler@i2c1_master_example$F517 *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _wr2RegCompleteHandler *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _wr2RegCompleteHandler@i2c1_master_example$F523 *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                 _I2C1_DO_IDLE *
                 _I2C1_DO_RCEN *
                   _I2C1_MasterStartRx
                 _I2C1_DO_RESET *
                 _I2C1_DO_RX *
                   Absolute function(Fake) *
                   _I2C1_CallbackReturnReset *
                   _I2C1_CallbackReturnStop *
                   _I2C1_DO_RX_NACK_RESTART *
                     _I2C1_MasterSendNack
                   _I2C1_DO_RX_NACK_STOP *
                     _I2C1_MasterSendNack
                   _I2C1_MasterGetRxData *
                   _I2C1_MasterSendAck *
                   _rd1RegCompleteHandler *
                   _rd1RegCompleteHandler@i2c1_master_example$F500 *
                   _rd2RegCompleteHandler *
                   _rd2RegCompleteHandler@i2c1_master_example$F511 *
                   _rdBlkRegCompleteHandler *
                   _rdBlkRegCompleteHandler@i2c1_master_example$F535 *
                   _wr1RegCompleteHandler *
                   _wr1RegCompleteHandler@i2c1_master_example$F517 *
                   _wr2RegCompleteHandler *
                   _wr2RegCompleteHandler@i2c1_master_example$F523 *
                 _I2C1_DO_RX_ACK *
                   _I2C1_MasterSendAck
                 _I2C1_DO_RX_NACK_RESTART *
                 _I2C1_DO_RX_NACK_STOP *
                 _I2C1_DO_SEND_ADR_READ *
                   _I2C1_MasterSendTxData
                 _I2C1_DO_SEND_ADR_WRITE *
                   _I2C1_MasterSendTxData
                 _I2C1_DO_SEND_RESTART *
                 _I2C1_DO_SEND_RESTART_READ *
                   _I2C1_MasterEnableRestart
                 _I2C1_DO_SEND_RESTART_WRITE *
                   _I2C1_MasterEnableRestart
                 _I2C1_DO_SEND_STOP *
                 _I2C1_DO_TX *
                   Absolute function(Fake) *
                   _I2C1_CallbackReturnReset *
                   _I2C1_CallbackReturnStop *
                   _I2C1_DO_SEND_RESTART_READ *
                   _I2C1_DO_SEND_RESTART_WRITE *
                   _I2C1_DO_SEND_STOP *
                   _I2C1_MasterIsNack *
                   _I2C1_MasterSendTxData *
                   _rd1RegCompleteHandler *
                   _rd1RegCompleteHandler@i2c1_master_example$F500 *
                   _rd2RegCompleteHandler *
                   _rd2RegCompleteHandler@i2c1_master_example$F511 *
                   _rdBlkRegCompleteHandler *
                   _rdBlkRegCompleteHandler@i2c1_master_example$F535 *
                   _wr1RegCompleteHandler *
                   _wr1RegCompleteHandler@i2c1_master_example$F517 *
                   _wr2RegCompleteHandler *
                   _wr2RegCompleteHandler@i2c1_master_example$F523 *
                 _I2C1_DO_TX_EMPTY *
                   Absolute function(Fake) *
                   _I2C1_CallbackReturnReset *
                   _I2C1_CallbackReturnStop *
                   _I2C1_DO_SEND_RESTART *
                   _I2C1_DO_SEND_STOP *
                   _I2C1_MasterSetIrq *
                   _rd1RegCompleteHandler *
                   _rd1RegCompleteHandler@i2c1_master_example$F500 *
                   _rd2RegCompleteHandler *
                   _rd2RegCompleteHandler@i2c1_master_example$F511 *
                   _rdBlkRegCompleteHandler *
                   _rdBlkRegCompleteHandler@i2c1_master_example$F535 *
                   _wr1RegCompleteHandler *
                   _wr1RegCompleteHandler@i2c1_master_example$F517 *
                   _wr2RegCompleteHandler *
                   _wr2RegCompleteHandler@i2c1_master_example$F523 *
                 _I2C1_MasterClearIrq *
                 _I2C1_MasterIsNack *
               _I2C1_MasterWaitForEvent
         _I2C1_Open
           _I2C1_MasterClearIrq
           _I2C1_MasterOpen
         _I2C1_SetAddressNackCallback
           _I2C1_SetCallback
         _I2C1_SetBuffer
         _memcpy
   _ControlCurrent
     _GetMotorPower
     _getCurrentComparator
       ___wmul
     _refreshADCZeroOffset
       ___lwdiv
     _refreshCurrent
       _saveEnergyADCHist
       _sumEnergyADC
       _sumHIST
   _ControlInputs
   _ControlLights
     _setFlashLigth_ON
     _setRGB_ON
       _RGB_Set
   _ControlMotor
     _VerifyElectricalBrake
   _EUSART1_is_rx_ready
   _InitReceiver
   _SYSTEM_Initialize
     _ADCC_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _I2C1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
     _WWDT_Initialize
   _SetSegmentValue
     ___awdiv (ARG)
       ___lbmod (ARG)
     ___lbmod (ARG)
   _ShowVersion
     _SetSegmentValue
   _WWDT_SoftEnable
   _WWDT_TimerClear
   _controlVelocity
     _ControlDecelarationFactor
     _InitSoftStop
       _GetMotorPower
     _getStateOpenPosition
       ___lmul
         ___lldiv (ARG)
       _getTimeDecelaration
         ___lmul
     _getTimeDecelaration
   _eusartparser
     _ReadSerial
       _i2c_readDataBlock
         _I2C1_Close
         _I2C1_MasterWrite
         _I2C1_Open
         _I2C1_SetAddressNackCallback
         _I2C1_SetBuffer
         _I2C1_SetDataCompleteCallback
     _RemoveSerial
       _i2c_writeNBytes
     _SaveNVM_VarSystem
     _cmdMemoryIsEmpty
       _i2c_readDataBlock
     _confirmpackage
       _init_package
     _read_eusartparser
       _write_package
         _EUSART1_Write
     _saveNewSerial
       _i2c_writeNBytes
     _validateRemoteSerialNumber
       _i2c_readDataBlock
     _write_eusartparser
     _write_package
   _getKeyPressed
   _loadNVM_VarSystem
     _I2C1_Read1ByteRegister
       _I2C1_Close
       _I2C1_MasterWrite
       _I2C1_Open
       _I2C1_SetAddressNackCallback
       _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
     _ResetDefaultMemory
       _SaveNVM_VarSystem
     _SaveNVM_VarSystem
     _checkNVM_VarSystem
       _SaveNVM_VarSystem
     _i2c_readDataBlock
   _readInputs
   _readRFButtons
     _DecryptPacket_12BIT
       _memcpy
       _validateRemoteSerialNumber
     _keeloqDecryptPacket
       _DecCHK
       _HopCHK
         _ReqResync
         _getHopCode
           _ReqResync
           ___wmul
       _keeloq_classic_decrypt_packet
         _Decrypt
           _memcpy
         _NormalKeyGen
           _Decrypt
           _LoadManufCode
           _memcpy
       _memcpy
       _validateRemoteSerialNumber
       _verifyProgramingMode
   _read_package
     _EUSART1_Read
   _readbutton
   _sm_execute_ControlGate
     _GetOpenOrder
       _SetSegmentValueIntermitentMain
         ___awdiv (ARG)
         ___lbdiv (ARG)
         ___lbmod (ARG)
       ___lbdiv
     _SetSegmentValueIntermitent
     _WaitPreFlash
       _InitFullAutoTime
       _OpenFullOrder
         _InitSoftStart
           _GetMotorPower
         _sm_send_event
           _sm_get_current_state
       _sm_send_event
     _actionZone_Closed
       _GetOpenOrder
       _GetSecurityStateInOpening
         _SetSegmentValueIntermitent
       _InitFullAutoTime
       _InitWalkAutoTime
       _OpenFullOrder
       _OpenWalkOrder
         _InitSoftStart
         _sm_send_event
       _WaitPreFlash
       _sm_send_event
     _actionZone_Closing
       _GetOpenOrder
       _GetSecurityStateInClosing
         _SetSegmentValueIntermitent
       _InitFullAutoTime
       _InitWalkAutoTime
       _OpenFullOrder
       _OpenWalkOrder
       _SetSegmentValueIntermitent
       _StopOrder
         _sm_send_event
       ___lmul
       _setPositionInvertionInClosing
         _getTimeDecelaration
       _sm_send_event
     _actionZone_Opened
       _CloseOrder
         _InitSoftStart
         _sm_send_event
       _GetOpenOrder
       _GetSecurityStateInClosing
       _InitFullAutoTime
       _InitWalkAutoTime
       _OpenFullOrder
       _OpenWalkOrder
       _VerifyFollowMe
     _actionZone_Opening
       _CloseOrder
       _GetOpenOrder
       _GetSecurityStateInClosing
       _GetSecurityStateInOpening
       _InitFullAutoTime
       _InitWalkAutoTime
       _SetSegmentValueIntermitent
       _StopOrder
       _VerifyFollowMe
       _controlVelocity
       _setPositionInvertionInClosing
       _setPositionInvertionInOpening
         _getTimeDecelaration
       _sm_send_event
     _sm_execute_ControlLearning
       _GetOpenOrder
       _SaveNVM_VarSystem
       _calculateMean
       _clearLearningValue
       _generateErrorLearnig
         _sm_init
           _sm_restart
       _sm_send_event
     _sm_send_event
   _sm_execute_main
     _SetSegmentValueIntermitentMain
     _SetSegmentValueMain
       ___awdiv (ARG)
       ___lbdiv (ARG)
       ___lbmod (ARG)
     _load_New_Menu
       _SetSegmentValueIntermitentMain
       _SetSegmentValueMain
     _sm_execute_menuConfiguration
       _ClearFlag_rfCMD
       _ResetDefaultMemory
       _SaveNVM_VarSystem
       _SetSegmentValueIntermitentMain
       _SetSegmentValueMain
       ___lbdiv
       ___lldiv
       ___lmul
       ___lwdiv
       _controlLearnDigit
         _SetSegmentValueLearn
       _controlSaveRemote
         _ClearFlag_rfCMD
         _SetSegmentValueIntermitentMain
         _SetSegmentValueMain
         ___awdiv
         ___lbmod
         _sm_send_event
       _controlSelectRemote
         _ClearFlag_rfCMD
         _RemoveSerial
         _SaveNVM_VarSystem
         _SetSegmentValue
         _SetSegmentValueIntermitentMain
         _SetSegmentValueMain
         ___awdiv
         ___lbmod
         _cmdMemoryIsEmpty
         _getSerialCmd
           _memcpy
         _getTypeRemote
         _saveNewSerial
         _sm_send_event
         _validateRemoteSerialNumber
       _load_New_Menu
       _setValueToEdit
         _InitReceiver
         _SaveNVM_VarSystem
         _cmdMemoryIsEmpty
         _load_New_Menu
         _sm_send_event
       _sm_send_event
     _sm_send_event
   _sm_init

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *
   _TMR0_ISR *
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _rxi *
   _TMR1_ISR *
     Absolute function(Fake) *
     _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer *
     _controlMotorForce *
       i2_GetMotorPower
       i2_VerifyElectricalBrake
   _TMR2_ISR *
     Absolute function(Fake) *
     _ReadADC *
       _ADCC_GetSingleConversion
     _TMR2_DefaultInterruptHandler *
     _controlTimeslots *
       _decrementTimeslot
     _refreshSegment *
       _Segments_Set

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E87      0       0      61        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      F7      11       96.5%
BITBANK2           100      0       0       8        0.0%
BANK2              100      7      FA       9       97.7%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0     100       7      100.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     24      9E       5       98.8%
BITBANK14           88      0       0      32        0.0%
BANK14              88      0       0      33        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3A      4F       1       84.0%
BITBIGSFRllll       28      0       0      59        0.0%
BITBIGSFRhlllll     27      0       0      42        0.0%
BITBIGSFRhhllll     1B      0       0      37        0.0%
BITBIGSFRhhlh       1A      0       0      35        0.0%
BITBIGSFRhlllll     13      0       0      48        0.0%
BITBIGSFRhlllhh      F      0       0      41        0.0%
BITBIGSFRhlllll      E      0       0      46        0.0%
BITBIGSFRhhh         D      0       0      34        0.0%
BITBIGSFRhhllll      C      0       0      36        0.0%
BITBIGSFRllh         9      0       0      57        0.0%
BITBIGSFRhlllll      4      0       0      52        0.0%
BITBIGSFRhlllll      3      0       0      44        0.0%
BITBIGSFRhlllll      3      0       0      43        0.0%
BITBIGSFRhlllll      3      0       0      53        0.0%
BITBIGSFRhlllll      3      0       0      55        0.0%
BITBIGSFRhlllll      2      0       0      47        0.0%
BITBIGSFRhlllhh      2      0       0      40        0.0%
BITBIGSFRhlllll      2      0       0      49        0.0%
BITBIGSFRhlllll      2      0       0      54        0.0%
BITBIGSFRlh          2      0       0      56        0.0%
BITBIGSFRlllh        1      0       0      58        0.0%
BITBIGSFRhlllll      1      0       0      45        0.0%
BITBIGSFRhlllll      1      0       0      50        0.0%
BITBIGSFRhlllll      1      0       0      51        0.0%
BITBIGSFRhlllhh      1      0       0      39        0.0%
BITBIGSFRhlllhh      1      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     3DE      60        0.0%
DATA                 0      0     3DE       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Mon Jul 18 17:28:50 2022

                                        ?_ClearFlag_rfCMD 0001  
                              cmdMemoryIsEmpty@tempSerial 0032  
                                           _Counterchoose 0092  
                        __end_of_TMR2_SetInterruptHandler 9B8C  
                                _eusart1TxBufferRemaining 01FE  
                            SetSegmentValueIntermitent@d1 0013  
                            SetSegmentValueIntermitent@d2 0010  
                                    ??_checkNVM_VarSystem 003A  
                                            ___awdiv@sign 0019  
                                     ___wmul@multiplicand 0012  
                           __end_of_VerifyElectricalBrake 8622  
                                           _LoadManufCode 9894  
                                        ?_SetSegmentValue 001C  
                                                     l100 9266  
                            ??_sm_execute_ControlLearning 00DE  
                                                     l674 80F2  
                                                     l690 8558  
                                                     _GIE 007F97  
                                                     _Hop 007C  
                                   ?_I2C1_MasterOperation 0001  
                                         _timer1ReloadVal 02DF  
                                 keeloqDecryptPacket@data 00E0  
                                                     _rxi 4C38  
                                  ControlMotor@stateMotor 0018  
                                         _TMR2_Initialize 957E  
                                                     prod 000FF3  
                                                     tosl 000FFD  
                                                     wreg 000FE8  
                                  ?_I2C1_MasterSendTxData 0001  
                                       load_New_Menu@Menu 0022  
                                    _I2C1_DO_RX_NACK_STOP 9C08  
                               ?_I2C1_MasterEnableRestart 0001  
                                       _SaveNVM_VarSystem 93C6  
                        validateRemoteSerialNumber@serial 002E  
                                    I2C1_SetBuffer@buffer 0010  
                                       getKeyPressed@temp 0010  
                                     eusartparser@package 00E0  
                                   getCurrentComparator@x 0022  
                                      ?_SaveNVM_VarSystem 0001  
                                 ??_rd2RegCompleteHandler 001B  
                                                    l2044 8AE8  
                                                    l1405 699E  
                                       readRFButtons@key1 0088  
                                                    l3102 36AE  
                                                    l2039 8ADC  
                                                    l2311 578A  
                                                    l2240 78DA  
                                                    l2323 8614  
                                                    l2403 5348  
                                                    l1372 9164  
                                                    l1436 5ED0  
                                                    l1524 5EA0  
                                                    l1357 73B8  
                                                    l1517 5E54  
                                                    l3053 3402  
                                                    l1366 753A  
                                                    l2254 70A2  
                                                    l1383 60D4  
                                                    l2415 43C6  
                                                    l2328 861E  
                                                    l2353 526C  
                                                    l3233 1066  
                                                    l3065 358E  
                                                    l2370 5264  
                                                    l1491 8D70  
                                                    l2507 7F78  
                                                    l2443 4538  
                                                    l1731 71DE  
                                                    l1388 615C  
                                                    l2516 9364  
                                                    l2380 533C  
                                                    l1740 7244  
                                                    l1732 71E6  
                                                    l1742 7260  
                                                    l1654 641C  
                                                    l2519 938A  
                                                    l1495 5D36  
                                                    l1743 7268  
                                                    l2376 5278  
                                                    l1736 7218  
                                                    l3512 8C04  
                                                    l3088 35D4  
                                                    l1745 7284  
                                                    l1737 7220  
                                                    l1657 6492  
                                                    l1746 728C  
                                                    l2810 4C36  
                                                    l2730 58AC  
                                                    l3611 3898  
                                                    l1739 723C  
                                                    l1667 64DA  
                                                    l2723 5100  
                                                    l3620 38D0  
                                                    l3612 38A2  
                                                    l3604 3874  
                                                    l1748 72B6  
                                                    l3380 2F56  
                                                    l3372 2F1C  
                                                    l2477 464E  
                                                    l2397 5334  
                                                    l3621 38D6  
                                                    l3613 38AC  
                                                    l1861 77C4  
                                                    l2653 4200  
                                                    l3630 38FE  
                                                    l3614 38B2  
                                                    l3606 387E  
                                                    l3438 3284  
                                                    l3390 309A  
                                                    l3358 2E5C  
                                                    l4271 8F68  
                                                    l3631 3904  
                                                    l3623 38E0  
                                                    l3615 38B8  
                                                    l3607 3888  
                                                    l2727 57B6  
                                                    l3391 30BA  
                                                    l3632 390A  
                                                    l3616 38BE  
                                                    l2912 2340  
                                                    l3641 3B60  
                                                    l3633 3910  
                                                    l3625 38E6  
                                                    l3617 38C4  
                                                    l3609 388E  
                                                    l2585 87F2  
                                                    l2729 57EC  
                                                    l3642 3B6A  
                                                    l3626 38EC  
                                                    l3618 38CA  
                                                    l3627 38F2  
                                                    l1859 77B4  
                                                    l3636 39DA  
                                                    l3628 38F8  
                                                    l1869 77E8  
                                                    l2773 4A52  
                                                    l3494 94F6  
                                                    l3807 83A4  
                                                    l3488 7A7E  
                                                    ?_rxi 0001  
                                                    _DKEY 02CF  
                                                    _LATA 000F83  
                                                    _LATB 000F84  
                                                    _LATC 000F85  
                                                    _LATD 000F86  
                                                    _LATE 000F87  
                                             main@package 02ED  
                                                    _T2PR 000FBC  
                                                    _PMD0 000EE1  
                                                    _PMD1 000EE2  
                                                    _PMD2 000EE3  
                                                    _PMD3 000EE4  
                                                    _PMD4 000EE5  
                                                    _PMD5 000EE6  
                                                    _EHop 028C  
                                           eusartparser@i 00E8  
                                                    _WPUA 000F10  
                                                    _WPUB 000F18  
                                                    _WPUC 000F20  
                                                    _WPUD 000F25  
                                                    _WPUE 000F2D  
                                         __end_of_RGB_Set 9B44  
                                 ??_wr2RegCompleteHandler 001B  
                                                    _Bptr 008D  
                                        ??_I2C1_MasterFsm 001D  
                                           _EUSART1_Write 9250  
                               ??_I2C1_CallbackReturnStop 001B  
                                __end_of_controlTimeslots 6384  
                                                    _main 66A4  
                                           ?_EUSART1_Read 0001  
                                         ?_confirmpackage 0012  
                                                    _temp 0080  
                                                    fsr1h 000FE2  
                                                    fsr2h 000FDA  
                                                    indf1 000FE7  
                                                    indf2 000FDF  
                                                    fsr1l 000FE1  
                                                    fsr2l 000FD9  
                                                    btemp 0050  
                                    saveNewSerial@cmdType 003A  
                                     ??_SaveNVM_VarSystem 003A  
                                                    prodh 000FF4  
                                                    prodl 000FF3  
                                                    start 009C  
                                        ??_I2C1_SetBuffer 0014  
                                          ??_ControlMotor 0012  
                                       ReadSerial@cmdType 0032  
                                         __end_of_Decrypt 7840  
                                ?i2_VerifyElectricalBrake 0001  
                                        getSerialCmd@temp 001C  
                                           ?_InitReceiver 0001  
                              ??_TMR1_SetInterruptHandler 0012  
                                            ___param_bank 000000  
                                         i2_GetMotorPower 7906  
                                         __end_of_ReadADC 8ECC  
                           I2C1_CallbackReturnStop@funPtr 0019  
                                         ??_getTypeRemote 0010  
                                                   ??_rxi 0001  
                                    __end_of_GetOpenOrder 5D14  
                                 __end_of_TMR0_Initialize 98D8  
                                          ?_LoadManufCode 0001  
                          ??_TMR0_DefaultInterruptHandler 0001  
                                           ?_InitSoftStop 0001  
                           sm_execute_ControlLearning@psm 00DC  
                           __end_of_OSCILLATOR_Initialize 9AB2  
                      SetSegmentValueIntermitentMain@time 001D  
                                                   l20101 809E  
                                                   l20105 80A4  
                                                   l21001 488C  
                                                   l20123 811A  
                                                   l20115 80B0  
                                                   l20211 9068  
                                                   l21003 48A6  
                                                   l21011 4936  
                                                   l20109 80AA  
                                                   l20221 9074  
                                                   l21005 48C0  
                                                   l20215 906E  
                                                   l21015 4944  
                                                   l20145 855C  
                                                   l21033 8240  
                                                   l21105 9758  
                                                   l21009 48D2  
                                                   l22001 3218  
                                                   l20171 8B50  
                                                   l20155 8568  
                                                   l20243 9B28  
                                                   l21019 4980  
                                                   l20181 8B5E  
                                                   l20149 8562  
                                                   l20237 8EE4  
                                                   l20421 872E  
                                                   l21133 8012  
                                                   l21205 6696  
                                                   l21221 5B86  
                                                   l20413 8E44  
                                                   l21045 8266  
                                                   l21061 8298  
                                                   l22021 324A  
                                                   l20175 8B56  
                                                   l20247 9B30  
                                                   l20327 8330  
                                                   l21047 826E  
                                                   l21039 8250  
                                                   l22015 322C  
                                                   l22007 3222  
                                                   l20273 95C6  
                                                   l20353 91DC  
                                                   l20361 91FC  
                                                   l21137 8054  
                                                   l21161 74D6  
                                                   l20601 9286  
                                                   l21305 5C5E  
                                                   l20409 8E30  
                                                   l23001 4EFE  
                                                   l21065 82A6  
                                                   l21057 828E  
                                                   l22041 3276  
                                                   l20347 98F6  
                                                   l20187 8B64  
                                                   l20435 86AC  
                                                   l20603 928A  
                                                   l20611 5ED8  
                                                   l21075 939E  
                                                   l21091 93C2  
                                                   l21331 5CD0  
                                                   l21251 5BEC  
                                                   l21227 5B8A  
                                                   l21411 7C14  
                                                   l22051 329E  
                                                   l22035 3258  
                                                   l22027 3254  
                                                   l20429 876A  
                                                   l21149 9796  
                                                   l20445 86F6  
                                                   l20613 5EDE  
                                                   l21245 5BC8  
                                                   l21261 5BF0  
                                                   l22061 32C0  
                                                   l20279 95D2  
                                                   l20375 7890  
                                                   l20367 7854  
                                                   l21167 756E  
                                                   l21191 6608  
                                                   l21183 6594  
                                                   l21511 942E  
                                                   l21503 9416  
                                                   l21087 93BA  
                                                   l21079 93A4  
                                                   l21343 5D10  
                                                   l21319 5C84  
                                                   l21239 5BC4  
                                                   l21335 5CD4  
                                                   l21431 7C46  
                                                   l20551 7664  
                                                   l20543 7620  
                                                   l23015 4F2C  
                                                   l20711 9058  
                                                   l22303 3F3A  
                                                   l22231 3D1E  
                                                   l22055 32B0  
                                                   l22063 32DC  
                                                   l20377 789C  
                                                   l20633 5F98  
                                                   l21417 7C18  
                                                   l23121 509C  
                                                   l23105 506C  
                                                   l21097 9740  
                                                   l20713 905C  
                                                   l22241 3DB6  
                                                   l22073 3304  
                                                   l20387 78CA  
                                                   l22411 8F3E  
                                                   l20627 5F86  
                                                   l20619 5F22  
                                                   l21187 65D0  
                                                   l20491 77CC  
                                                   l21283 5C24  
                                                   l20539 75F4  
                                                   l23203 5844  
                                                   l23123 50A2  
                                                   l23035 4F9C  
                                                   l22331 3FDC  
                                                   l22219 3CFA  
                                                   l22075 3356  
                                                   l24011 1416  
                                                   l20397 78FC  
                                                   l22421 8F5E  
                                                   l20629 5F8A  
                                                   l20477 77B0  
                                                   l20469 7796  
                                                   l21277 5C1C  
                                                   l21365 7CBE  
                                                   l20573 8C4A  
                                                   l23213 5862  
                                                   l20901 703E  
                                                   l21533 55A4  
                                                   l23141 50DE  
                                                   l20709 903E  
                                                   l22325 3FC6  
                                                   l22237 3D78  
                                                   l22229 3D1C  
                                                   l24013 1422  
                                                   l20647 6040  
                                                   l20639 5FDC  
                                                   l21471 8168  
                                                   l20487 77C0  
                                                   l21359 7CBA  
                                                   l21447 7C7C  
                                                   l23311 49E8  
                                                   l23223 5880  
                                                   l23215 586A  
                                                   l23207 584E  
                                                   l21607 56F8  
                                                   l21615 5716  
                                                   l21527 5592  
                                                   l23119 5098  
                                                   l23055 4FF4  
                                                   l20823 73E6  
                                                   l22271 3E92  
                                                   l22263 3E6C  
                                                   l22239 3DB0  
                                                   l22409 8F36  
                                                   l20649 6044  
                                                   l21457 9460  
                                                   l23233 5892  
                                                   l23161 57A6  
                                                   l23129 50B4  
                                                   l23049 4FDC  
                                                   l20841 742A  
                                                   l20833 7412  
                                                   l20817 73CC  
                                                   l22353 7A3E  
                                                   l22273 3EA6  
                                                   l21801 2EA2  
                                                   l24121 1688  
                                                   l24113 1666  
                                                   l24009 1412  
                                                   l20667 8404  
                                                   l20675 7EA4  
                                                   l20587 9252  
                                                   l20659 8830  
                                                   l21483 8188  
                                                   l21475 816C  
                                                   l20499 77E0  
                                                   l21299 5C56  
                                                   l21395 7D22  
                                                   l21379 7CEC  
                                                   l23403 4B88  
                                                   l23323 4A40  
                                                   l21635 574C  
                                                   l21563 564A  
                                                   l21539 55BE  
                                                   l21731 76EE  
                                                   l23083 504C  
                                                   l23067 5018  
                                                   l20579 91B4  
                                                   l20843 7434  
                                                   l22259 3E32  
                                                   l21811 2EB6  
                                                   l21803 2EAA  
                                                   l24107 164E  
                                                   l24043 14D0  
                                                   l24035 147C  
                                                   l24027 145E  
                                                   l20685 7EE6  
                                                   l20677 7ED6  
                                                   l22701 5D9E  
                                                   l20773 6B4E  
                                                   l22461 9130  
                                                   l21661 87B6  
                                                   l21741 6D62  
                                                   l23421 4BAA  
                                                   l23309 49D2  
                                                   l21645 5776  
                                                   l21637 5752  
                                                   l21629 5728  
                                                   l21573 5668  
                                                   l21725 76B4  
                                                   l23085 5052  
                                                   l20837 741E  
                                                   l20829 7400  
                                                   l24141 16CE  
                                                   l24125 1694  
                                                   l24037 147E  
                                                   l22623 6068  
                                                   l22615 9158  
                                                   l20767 6AFC  
                                                   l23423 4BAE  
                                                   l23407 4B90  
                                                   l23343 4AB8  
                                                   l23247 58C6  
                                                   l23239 58A8  
                                                   l21735 7728  
                                                   l23503 22A2  
                                                   l20863 7482  
                                                   l20855 7468  
                                                   l20871 7498  
                                                   l24143 16D6  
                                                   l24135 16BC  
                                                   l24063 1562  
                                                   l24047 14F2  
                                                   l22633 609E  
                                                   l22473 8C68  
                                                   l22721 5DE4  
                                                   l22713 5DC8  
                                                   l22705 5DAC  
                                                   l20793 6BFA  
                                                   l22801 5AB0  
                                                   l23425 4BB4  
                                                   l23409 4B98  
                                                   l23257 58EC  
                                                   l23193 5820  
                                                   l23601 24AE  
                                                   l20849 744E  
                                                   l22369 94F0  
                                                   l20953 46D6  
                                                   l21833 2F2A  
                                                   l24153 1710  
                                                   l22651 618E  
                                                   l22643 6142  
                                                   l22627 607E  
                                                   l22483 8CB0  
                                                   l20787 6BE4  
                                                   l21755 6DF2  
                                                   l23443 4BEC  
                                                   l23435 4BD2  
                                                   l23363 4B04  
                                                   l23283 594A  
                                                   l21587 5696  
                                                   l23603 24B8  
                                                   l23531 231E  
                                                   l23523 22F6  
                                                   l23515 22DE  
                                                   l23507 22BC  
                                                   l26003 433E  
                                                   l22387 8356  
                                                   l20867 748E  
                                                   l20859 7476  
                                                   l20971 4728  
                                                   l21835 2F32  
                                                   l21819 2EC2  
                                                   l24171 17FA  
                                                   l24163 17DE  
                                                   l24083 15D0  
                                                   l24067 1584  
                                                   l22581 733A  
                                                   l22661 88A0  
                                                   l22741 5E2A  
                                                   l22733 5E0E  
                                                   l22725 5DF2  
                                                   l22717 5DD6  
                                                   l22709 5DBA  
                                                   l21693 8924  
                                                   l21749 6DAE  
                                                   l23381 4B42  
                                                   l23269 591A  
                                                   l21773 8B08  
                                                   l23541 2342  
                                                   l26013 4352  
                                                   l22389 8362  
                                                   l20965 46F6  
                                                   l20957 46E0  
                                                   l21941 314A  
                                                   l21933 310A  
                                                   l21925 30D4  
                                                   l21845 2F46  
                                                   l21837 2F3A  
                                                   l21829 2ECE  
                                                   l22647 616C  
                                                   l22583 7342  
                                                   l22567 72E6  
                                                   l22903 7F00  
                                                   l24351 398C  
                                                   l22807 5AB4  
                                                   l21695 8930  
                                                   l23391 4B5E  
                                                   l23375 4B28  
                                                   l23287 5956  
                                                   l20895 6FEA  
                                                   l20887 6FAC  
                                                   l21775 8B3A  
                                                   l23543 2382  
                                                   l26007 4344  
                                                   l22399 8396  
                                                   l20991 47F2  
                                                   l20983 476A  
                                                   l20959 46E6  
                                                   l21951 3160  
                                                   l21935 3126  
                                                   l21927 30FE  
                                                   l21871 2FB6  
                                                   l21783 2E66  
                                                   l24167 17EE  
                                                   l24095 160A  
                                                   l22905 7F08  
                                                   l22913 7F20  
                                                   l25401 43A8  
                                                   l25321 5156  
                                                   l25313 513A  
                                                   l24353 39E0  
                                                   l22761 5E76  
                                                   l22745 5E38  
                                                   l22737 5E1C  
                                                   l22729 5E00  
                                                   l22681 5D58  
                                                   l22833 5B26  
                                                   l22817 5AFA  
                                                   l23385 4B4A  
                                                   l23393 4B64  
                                                   l23625 2528  
                                                   l23561 23F6  
                                                   l23545 2398  
                                                   l20993 480E  
                                                   l20985 4796  
                                                   l20977 4738  
                                                   l21961 318C  
                                                   l21945 3154  
                                                   l21929 3102  
                                                   l21865 2F6E  
                                                   l21857 2F5E  
                                                   l21785 2E6E  
                                                   l24169 17F4  
                                                   l22587 734E  
                                                   l24435 6878  
                                                   l22907 7F10  
                                                   l22915 7F48  
                                                   l25323 515C  
                                                   l25307 512A  
                                                   l24355 3A52  
                                                   l24371 3B74  
                                                   l24515 6CC4  
                                                   l24611 650A  
                                                   l21699 8938  
                                                   l23459 4C1E  
                                                   l23563 2414  
                                                   l23483 2234  
                                                   l23475 2202  
                                                   l23467 21D2  
                                                   l20995 483C  
                                                   l20987 47B2  
                                                   l21963 3190  
                                                   l21955 3168  
                                                   l21939 3140  
                                                   l21875 2FC8  
                                                   l21787 2E76  
                                                   l24187 1840  
                                                   l24453 68EA  
                                                   l22925 7F74  
                                                   l22909 7F18  
                                                   l25501 45B6  
                                                   l24357 3AA0  
                                                   l24349 391A  
                                                   l22765 5E84  
                                                   l22757 5E68  
                                                   l22749 5E46  
                                                   l22693 5D82  
                                                   l22685 5D66  
                                                   l22677 5D4A  
                                                   l22669 5D28  
                                                   l24605 64F6  
                                                   l24621 89D4  
                                                   l23725 2730  
                                                   l23717 26E2  
                                                   l23709 26C4  
                                                   l23637 257E  
                                                   l20997 4858  
                                                   l20989 47D6  
                                                   l21973 31B8  
                                                   l21949 315C  
                                                   l21885 2FD8  
                                                   l21797 2E92  
                                                   l21789 2E7E  
                                                   l22599 7374  
                                                   l24455 68EE  
                                                   l25511 45DA  
                                                   l25431 444C  
                                                   l25407 43C8  
                                                   l24359 3B12  
                                                   l24543 9A3A  
                                                   l24711 72B0  
                                                   l24607 64FE  
                                                   l24631 89F6  
                                                   l24623 89D8  
                                                   l22951 7B7E  
                                                   l23751 27C4  
                                                   l23495 227C  
                                                   l23487 2258  
                                                   l20999 4874  
                                                   l21991 31EA  
                                                   l21975 31BC  
                                                   l21967 3198  
                                                   l21895 3060  
                                                   l21887 3026  
                                                   l21799 2E9A  
                                                   l23903 11AA  
                                                   l23831 0FAA  
                                                   l23823 0F66  
                                                   l23815 0F24  
                                                   l25521 4610  
                                                   l25505 45CA  
                                                   l25441 4488  
                                                   l22881 860A  
                                                   l25281 8AA4  
                                                   l27201 2A1C  
                                                   l22769 5E92  
                                                   l22697 5D90  
                                                   l22689 5D74  
                                                   l22785 5A22  
                                                   l24553 63A8  
                                                   l24641 8A10  
                                                   l23657 25CE  
                                                   l23569 2434  
                                                   l21985 31DE  
                                                   l21969 31B4  
                                                   l23905 11AC  
                                                   l25601 3494  
                                                   l24467 6922  
                                                   l22891 9366  
                                                   l25443 4496  
                                                   l25435 4460  
                                                   l25419 4412  
                                                   l22875 85EE  
                                                   l25363 5254  
                                                   l25339 51A8  
                                                   l24651 71D2  
                                                   l22971 7BBA  
                                                   l23771 281C  
                                                   l21995 31EE  
                                                   l21987 31E2  
                                                   l21979 31C0  
                                                   l23923 1226  
                                                   l23907 11D6  
                                                   l23851 0FFC  
                                                   l23843 0FE4  
                                                   l23835 0FCC  
                                                   l23827 0F88  
                                                   l23819 0F44  
                                                   l25611 34A2  
                                                   l24469 6938  
                                                   l24725 6EA0  
                                                   l25533 4652  
                                                   l25517 45FC  
                                                   l25365 5258  
                                                   l25285 8AB6  
                                                   l27221 2A86  
                                                   l27213 2A62  
                                                   l27205 2A2E  
                                                   l22789 5A2C  
                                                   l22965 7BB0  
                                                   l22949 7B68  
                                                   l23749 27BA  
                                                   l23669 2624  
                                                   l23597 24A0  
                                                   l21989 31E6  
                                                   l23941 12B6  
                                                   l23909 11DC  
                                                   l25543 468E  
                                                   l25463 44F4  
                                                   l25447 44AC  
                                                   l25391 5324  
                                                   l25367 5266  
                                                   l27311 1896  
                                                   l24663 7202  
                                                   l22799 5AA0  
                                                   l24583 6450  
                                                   l24575 6422  
                                                   l24639 8A0C  
                                                   l23783 2834  
                                                   l23695 2694  
                                                   l23919 11FA  
                                                   l25631 34D6  
                                                   l25623 34B8  
                                                   l25537 466A  
                                                   l25465 4504  
                                                   l25449 44BA  
                                                   l25393 5328  
                                                   l25369 527C  
                                                   l25289 8ACA  
                                                   l27305 8D02  
                                                   l27241 2AE0  
                                                   l27233 2ABC  
                                                   l27225 2A98  
                                                   l27217 2A74  
                                                   l27209 2A50  
                                                   l27161 2938  
                                                   l27153 28DA  
                                                   l27313 18A6  
                                                   l24665 720C  
                                                   l24649 71C8  
                                                   l23945 12D8  
                                                   l23873 1068  
                                                   l25713 360E  
                                                   l25641 34E6  
                                                   l25553 335E  
                                                   l24755 6F0E  
                                                   l24739 6ED4  
                                                   l25539 4678  
                                                   l25395 5336  
                                                   l27251 2B68  
                                                   l27155 28FA  
                                                   l27411 1A98  
                                                   l27403 1A8A  
                                                   l27323 18E4  
                                                   l27315 18C2  
                                                   l24587 6476  
                                                   l23971 1344  
                                                   l23963 1328  
                                                   l23867 1044  
                                                   l23859 101E  
                                                   l23875 10AC  
                                                   l25803 373C  
                                                   l25571 33EA  
                                                   l25563 33A8  
                                                   l24765 6F3A  
                                                   l25549 46A8  
                                                   l25469 451A  
                                                   l25477 4544  
                                                   l27261 2BF0  
                                                   l27245 2B02  
                                                   l27237 2ACE  
                                                   l27229 2AAA  
                                                   l27181 29C2  
                                                   l27173 298E  
                                                   l27165 294A  
                                                   l27157 2916  
                                                   l27421 1AFA  
                                                   l27413 1AA2  
                                                   l27405 1A8E  
                                                   l27333 190C  
                                                   l27309 188A  
                                                   l24589 647C  
                                                   l23789 284A  
                                                   l23877 10C2  
                                                   l25741 366A  
                                                   l25653 3518  
                                                   l25581 3446  
                                                   l25495 4590  
                                                   l27271 2C6C  
                                                   l27255 2B8A  
                                                   l27511 1CEE  
                                                   l27503 1CE4  
                                                   l27423 1AFE  
                                                   l27327 18F6  
                                                   l22999 4EE8  
                                                   l23799 2898  
                                                   l23887 112A  
                                                   l25831 37BE  
                                                   l25727 3646  
                                                   l25719 362C  
                                                   l25671 3564  
                                                   l25647 34FE  
                                                   l25567 33C8  
                                                   l25559 3386  
                                                   l27281 2CE8  
                                                   l27193 29F8  
                                                   l27185 29D4  
                                                   l27177 29B0  
                                                   l27169 296C  
                                                   l27441 1B5E  
                                                   l27361 199A  
                                                   l27337 191C  
                                                   l27345 194E  
                                                   l25921 415E  
                                                   l25905 4100  
                                                   l23897 1190  
                                                   l25761 369E  
                                                   l25753 3680  
                                                   l25681 359E  
                                                   l25657 352A  
                                                   l25593 3478  
                                                   l25577 3404  
                                                   l24779 6F6E  
                                                   l25499 45A8  
                                                   l27275 2C82  
                                                   l27267 2C56  
                                                   l27339 1932  
                                                   l23995 13CC  
                                                   l23979 1360  
                                                   l25851 381E  
                                                   l25691 35C4  
                                                   l25587 3458  
                                                   l25579 3430  
                                    write_package@package 0011  
                                   _eusart1RxStatusBuffer 0274  
                                                   l27197 2A0A  
                                                   l27189 29E6  
                                                   l27605 1EB8  
                                                   l27517 1CF2  
                                                   l27453 1C12  
                                                   l27429 1B08  
                                                   l27365 19BE  
                                                   l27357 196A  
                                                   l25933 41A0  
                                                   l25909 4122  
                                                   l25829 37AA  
                                                   l25853 382A  
                                                   l25677 3584  
                                                   l27711 2086  
                                                   l27623 1F28  
                                                   l27615 1F1A  
                                                   l27607 1EC2  
                                                   l27551 1D8A  
                                                   l27543 1D7C  
                                                   l27519 1CF6  
                                                   l27463 1C60  
                                                   l27455 1C22  
                                                   l27447 1BD4  
                                                   l27383 1A1A  
                                                   l27375 19CC  
                                                   l27367 19C2  
                                                   l24799 8F94  
                                                   l25951 4258  
                                                   l25847 380A  
                                                   l25783 36E6  
                                                   l25679 3590  
                                                   l27289 2D4E  
                                                   l27713 208A  
                                                   l27705 2082  
                                                   l27641 1FAC  
                                                   l27617 1F1E  
                                                   l27561 1DE2  
                                                   l27481 1C88  
                                                   l27393 1A28  
                                                   l27385 1A1E  
                                                   l25937 41C2  
                                                   l25881 408E  
                                                   l25873 405E  
                                                   l25857 3836  
                                                   l27723 20EC  
                                                   l27555 1DBA  
                                                   l27539 1D5A  
                                                   l27475 1C80  
                                                   l27459 1C3E  
                                                   l27395 1A32  
                                                   l27379 19F6  
                                                   l25947 4202  
                                                   l25787 36F6  
                                                   l27803 678E  
                                                   l27733 2104  
                                                   l27653 1FEC  
                                                   l27573 1E16  
                                                   l27549 1D86  
                                                   l27485 1C92  
                                                   l27469 1C7C  
                                                   l25973 42C2  
                                                   l25893 40C8  
                                                   l25885 40A6  
                                                   l25949 4242  
                                                   l25877 406C  
                                                   l25797 3718  
                                                   l27743 2132  
                                                   l27663 2018  
                                                   l27559 1DDE  
                                                   l19913 897E  
                                                   l27737 2126  
                                                   l27657 200E  
                                                   l27577 1E3A  
                                                   l27569 1DEC  
                                                   l25993 4322  
                                                   l27809 67B8  
                                                   l27675 201C  
                                                   l27587 1E48  
                                                   l27579 1E3E  
                                                   l27499 1CC2  
                                                   l25995 4328  
                                                   l27819 67D6  
                                                   l27693 2056  
                                                   l27597 1EAA  
                                                   l27589 1E52  
                                                   l27749 2136  
                                                   l25997 432C  
                                                   l27679 2026  
                                                   l27599 1EAE  
                                                   l25999 4338  
                                                   l27697 2078  
                                                   l27779 66EA  
                                                   l27789 6700  
                                                   _ADACQ 000F5C  
                                       __end_of_I2C1_Open 8334  
                                                   _ADCAP 000F5D  
                                                   _ADACT 000F56  
                                   __end_of_saveNewSerial 8864  
                                                   ?_main 0001  
                                                   _ADCLK 000F57  
                                                   _ADCNT 000F67  
                                                   _ADPCH 000F5F  
                                                   _ADREF 000F58  
                                         __end_of___awdiv 82B0  
                          ?_keeloq_classic_decrypt_packet 0038  
                                         __end_of___lbdiv 93C6  
                                                   _ADPRE 000F5E  
                                                   _ADRPT 000F66  
                                         __end_of___lbmod 9760  
                                            _zeroCrossing 0197  
                                         __end_of___lldiv 83B6  
                                                   _T1CLK 000FD2  
                                         ___awdiv@divisor 0016  
                                                   _T1CON 000FCF  
                                                   u30110 6E94  
                                                   _T2CON 000FBD  
                                                   u30400 6F8E  
                                                   u30320 6F48  
                                                   u30160 6EBC  
                                                   u23050 9B68  
                                                   u30250 6F00  
                                                   u30090 6E88  
                                                   u30410 8F7C  
                                                   u23108 8574  
                                                   u23300 78D6  
                                                   u30180 6EC8  
                                                   u31300 51CA  
                                                   u31060 8A92  
                                                   u24020 704C  
                                                   u23109 8586  
                                                   u30421 8F8A  
                                                   u23118 8B70  
                                                   u23310 78EA  
                                                   u32030 469C  
                                                   u31230 5184  
                                                   u23119 8B82  
                                                   u23128 9080  
                                                   u23320 78F8  
                                                   u31320 51D6  
                                                   u31240 5192  
                                                   u25000 56B2  
                                                   u23129 9092  
                                                   u23250 786E  
                                                   u30290 6F30  
                                                   u31250 51A2  
                                                   u25010 56C2  
                                                   u31251 51A0  
                                                   u30380 6F7E  
                                                   u31500 52B8  
                                                   u31340 51E0  
                                                   u24060 90BA  
                                                   u25020 56CA  
                                                   u33020 42B2  
                                                   u32060 337A  
                                                   _T2HLT 000FBE  
                                                   u33101 2908  
                                                   u23078 80BC  
                                                   u23270 78AA  
                                                   u30390 6F86  
                                                   u31270 51B6  
                                                   u24230 93A8  
                                                   u25110 5760  
                                                   u23079 80CE  
                                                   u33111 2B28  
                                                   u23168 8F08  
                                                   u23280 78B8  
                                                   u26000 60CC  
                                                   u31600 43E8  
                                                   u31520 52DC  
                                                   u31440 5298  
                                                   u31360 51EA  
                                                   u24400 5B62  
                                                   u32400 35FC  
                                                   u23169 8F1A  
                                                   u33201 2D40  
                                                   u33121 2B5A  
                                                   u23505 7600  
                                                   u31610 43F8  
                                                   u32330 35BE  
                                                   u32090 33DE  
                                                   u33131 2BB0  
                                                   u31460 52A4  
                                                   u31380 520C  
                                                   u23540 8BF0  
                                                   u33141 2BE2  
                                                   u33221 18B4  
                                                   u23525 7670  
                                                   u24430 5BC0  
                                                   u25150 87A4  
                                                   u24190 8272  
                                                   u32510 36BE  
                                                   u32270 353A  
                                                   u33151 2C16  
                                                   u32511 36BC  
                                                   u31480 52AE  
                                                   u33161 2C48  
                                                   u33401 1B4A  
                                                   u33241 18D6  
                                                   u31810 455A  
                                                   u23810 6BDC  
                                                   u23570 8C42  
                                                   u25170 87C6  
                                                   u25090 5738  
                                                   u32290 3572  
                                                   u33171 2CA8  
                                                   u33331 1A7E  
                                                   u31660 445C  
                                                   u32380 35EC  
                                                   u33181 2CDA  
                                                   u31750 44E4  
                                                   u31590 43DA  
                                                   u26070 5D42  
                                                   u25190 88FE  
                                                   u27030 50F6  
                                                   u25430 3D36  
                                                   u33191 2D0E  
                                                   u33271 1940  
                                                   u31840 4572  
                                                   u31680 4478  
                                                   u32800 4082  
                                                   u25600 3F0C  
                                                   u25360 32AA  
                                                   u32720 37D6  
                                                   u32640 376A  
                                                   u32560 3704  
                                                   u33441 1C30  
                                                   u33361 1AEE  
                                                   u25370 3CA4  
                                                   u31940 460C  
                                                   u26500 8604  
                                                   u33460 1C6A  
                                                   u27220 583E  
                                                   u24900 5614  
                                                   u28100 2472  
                                                   u32820 40BC  
                                                   u25380 3CAA  
                                                   u33621 1E9E  
                                                   u33541 1D4C  
                                                   u28101 2470  
                                                   u33390 1B16  
                                                   u24910 561C  
                                                   u25710 79DC  
                                                   u32750 37EE  
                                                   u25800 8F42  
                                                   u26520 9360  
                                                   u26280 5E60  
                                                   u24760 8198  
                                                   u23960 6FA8  
                                                   u24840 55B0  
                                                   u28200 2554  
                                                   u28040 23D2  
                                                   u25640 3FAE  
                                                   u25480 3DF0  
                                                   u32680 3788  
                                                   u26530 9376  
                                                   u31890 45C6  
                                                   u27410 592A  
                                                   u27250 585E  
                                                   u28130 24A8  
                                                   u32850 40F4  
                                                   u25730 94D8  
                                                   u25570 3ED2  
                                         __end_of___lwdiv 8F72  
                                                   u33811 20E0  
                                                   u33651 1F0E  
                                                   u31980 4638  
                                                   u26460 85CE  
                                                   u27180 581A  
                                                   u28220 258E  
                                                   u29100 15E0  
                                                   u31990 4640  
                                                   u26390 5AC4  
                                                   u24950 5678  
                                                   u24870 55F4  
                                                   u28310 2648  
                                                   u28230 25A8  
                                                   u28150 24CC  
                                                   u32870 4116  
                                                   u29110 15E6  
                                                   u29030 14A4  
                                                   u24951 5676  
                                                   u28231 25A6  
                                                   u27600 4B12  
                                                   u27520 4A06  
                                                   u26800 4F52  
                                                   u28400 26E0  
                                                   u28320 264E  
                                                   u28160 24D4  
                                                   u28080 2450  
                                                   u29120 161A  
                                                   u29121 1618  
                                                   u29025 148E  
                                                   u26570 7F58  
                                                   u27370 58FA  
                                                   u24890 5604  
                                                   u28410 26FC  
                                                   u28330 2672  
                                                   u28250 25EC  
                                                   u28170 24EE  
                                                   u28090 2458  
                                                   u25770 8366  
                                                   u24795 8DB8  
                                                   u28411 26FA  
                                                   u28331 2670  
                                                   u28251 25EA  
                                                   u28171 24EC  
                                                   u29035 14A0  
                                                   u26660 7B8C  
                                                   u27700 4BC2  
                                                   u27620 4B1E  
                                                   u26900 5026  
                                                   u26820 4FB4  
                                                   u28420 270A  
                                                   u28260 25FA  
                                                   u32980 4274  
                                                   u29140 1630  
                                                   u33917 8706  
                                                   u25950 605E  
                                                   u25870 72DA  
                                                   u27630 4B36  
                                                   u27550 4ACC  
                                                   u27470 5974  
                                                   u26750 4F14  
                                                   u28510 282E  
                                                   u28190 2546  
                                                   u29230 16E6  
                                                   u29150 1644  
                                                   u29070 1536  
                                                   u33927 877A  
                                                   u27471 5972  
                                                   u28191 2544  
                                                   u29231 16E4  
                                                   u33871 67A2  
                                                   u25960 6076  
                                                   u26840 4FC8  
                                                   u28360 26A6  
                                                   u29065 1520  
                                                   u27730 4BE2  
                                                   u27570 4AE0  
                                                   u29170 165E  
                                                   u29155 1640  
                                                   u29075 1532  
                                                   u29500 6906  
                                                   u27660 4B7C  
                                                   u26940 5080  
                                                   u28540 2848  
                                                   u28460 274A  
                                                   u28380 26B2  
                                                   u27820 21F6  
                                                   u28700 105A  
                                                   _T2TMR 000FBB  
                                                   u25990 60BA  
                                                   u26870 5002  
                                                   u28550 2864  
                                                   u28470 2750  
                                                   u29415 9950  
                                                   u28551 2862  
                                                   u29600 8D28  
                                                   u29416 9952  
                                                   u28560 2872  
                                                   u29610 8D5A  
                                                   u29530 695A  
                                                   u29450 68B4  
                                                   u27850 2228  
                                                   _T2RST 000FC0  
                                                   u29540 6968  
                                                   u28900 1352  
                                                   u28901 1350  
                                                   u29470 68CC  
                                                   u29390 9B22  
                                                   u29560 6982  
                                                   u29720 6442  
                                                   u28840 128A  
                                                   i2l106 94C2  
                                                   u29810 64DA  
                                                   u29730 6450  
                                                   u28850 12E6  
                                                   u28835 1274  
                                                   u28860 12EC  
                                                   u28845 1286  
                                                   u29750 6476  
                                                   u29760 648A  
                                                   u28880 1336  
                                                   u28890 133C  
                                                   u28980 1430  
                                                   u28990 1436  
                                                   u29880 89EE  
                                                   i2l870 004C  
                                                   i2l872 006A  
                                                   i2l873 0080  
                                                   i2l874 0076  
                                                   i2l867 0030  
                                         ___awdiv@counter 0018  
                                              _CloseOrder 97B2  
                              __end_of_i2c1_fsmStateTable 0F21  
                                                   _OSCEN 000EDC  
                                                   _TMR0H 000FD4  
                                                   _TMR1H 000FCE  
                                                   _TMR0L 000FD3  
                                                   _TMR1L 000FCD  
                                                   _RFBit 0089  
                                                   _PORTB 000F8E  
                               __end_of_SaveNVM_VarSystem 93FE  
                          DecryptPacket_12BIT@commandType 00E4  
                                                   _TRISA 000F88  
                                                   _TRISB 000F89  
                                                   _TRISC 000F8A  
                                                   _TRISD 000F8B  
                                                   _TRISE 000F8C  
                                  ??_I2C1_MasterGetRxData 0010  
                                   ?_I2C1_DO_RX_NACK_STOP 0001  
                             validateRemoteSerialNumber@i 003A  
                             validateRemoteSerialNumber@j 0039  
                                     ___lmul@multiplicand 0021  
                               ?_TMR0_SetInterruptHandler 0010  
                                           _InitSoftStart 8C06  
                              ??_I2C1_CallbackReturnReset 001B  
                                       ??_I2C1_MasterOpen 0010  
                                        _idxAdcAquisition 0091  
                                    _EUSART1_Transmit_ISR 9496  
                                       ??_I2C1_MasterStop 0010  
                                       ??_I2C1_Initialize 0010  
                               GetMotorPower@defineatraso 0013  
                                        __end_of_TMR0_ISR 984A  
                                        __end_of_TMR1_ISR 9350  
                                        __end_of_TMR2_ISR 6AEE  
                                    _idxSaveEnergyADCHist 0090  
                                                   _rfCMD 003B  
                                                   _aux_i 0191  
                          actionZone_Closed@typeOpenOrder 0021  
                                        _setFlashLigth_ON 9350  
                                          ?_EUSART1_Write 0001  
                                          readbutton@key1 0086  
                                   SetSegmentValueMain@d1 001D  
                                          readbutton@key2 019B  
                                   SetSegmentValueMain@d2 001C  
                                 __end_of_TMR1_Initialize 9250  
                                    setFlashLigth_ON@Freq 0010  
                                                   pclath 000FFA  
       rd1RegCompleteHandler@i2c1_master_example$F500@ptr 0019  
                                                   pclatu 000FFB  
                                         __end_of_sumHIST 75B0  
                                         __end_of_sm_init 8E20  
                                                   tablat 000FF5  
       rd2RegCompleteHandler@i2c1_master_example$F511@ptr 0019  
       wr2RegCompleteHandler@i2c1_master_example$F523@ptr 0019  
       wr1RegCompleteHandler@i2c1_master_example$F517@ptr 0019  
     rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr 0019  
                                          ??_EUSART1_Read 0010  
                                                   plusw0 000FEB  
                                                   plusw2 000FDB  
                                 __end_of_sm_execute_main 3864  
                                                   ttemp5 0051  
                                                   ttemp6 0054  
                                                   ttemp7 0058  
                                                   status 000FD8  
                                         ??_ControlLights 0016  
                                                   wtemp8 0051  
                                            ??_I2C1_DO_RX 001B  
                                            ??_I2C1_DO_TX 001B  
                                         ??_ControlInputs 0010  
                                         ___lbdiv@divisor 0010  
              __end_of_EUSART1_DefaultFramingErrorHandler 9CAC  
                    ??_EUSART1_DefaultFramingErrorHandler 0001  
                     ?_EUSART1_DefaultFramingErrorHandler 0001  
                      _EUSART1_DefaultFramingErrorHandler 9CAA  
                                         _TMR1_WriteTimer 9970  
                                  ??_I2C1_DO_ADDRESS_NACK 001B  
                                         ___lbdiv@counter 0012  
                            __end_of_getStateOpenPosition 70A6  
                                            ??_I2C1_Close 0010  
                                          ??_InitReceiver 0010  
                        VerifyElectricalBrake@actualState 0011  
                      i2VerifyElectricalBrake@actualState 0002  
                                         __initialization 7A80  
                                 cmdMemoryIsEmpty@cmdType 0031  
                             ?_SetSegmentValueIntermitent 0010  
                              __end_of_EUSART1_Initialize 84B4  
                                            __end_of_main 682C  
                                              _ReadSerial 8864  
                         sm_execute_menuConfiguration@psm 00E9  
                             __end_of_DecryptPacket_12BIT 8006  
                                          _refreshCurrent 9140  
                                          ??_InitSoftStop 0014  
                      validateRemoteSerialNumber@position 0033  
                                 __end_of_TMR2_Initialize 95AA  
                             ?_INTERRUPT_InterruptManager 0001  
                                          _refreshSegment 81A6  
                                  ??_I2C1_MasterOperation 0020  
                                _TMR2_SetInterruptHandler 9B82  
                                                  ??_main 003B  
                                       ??_WWDT_Initialize 0010  
                                           __activetblptr 000003  
                                       Segments_Set@value 0001  
                                   saveNewSerial@position 00DC  
                      __end_of_validateRemoteSerialNumber 6050  
                              _validateRemoteSerialNumber 5EB4  
                                          ?_InitSoftStart 0001  
                                   ?_EUSART1_Transmit_ISR 0001  
                                           sumEnergyADC@i 0018  
                                      __end_of_I2C1_DO_RX 85AA  
                                      __end_of_I2C1_DO_TX 811E  
                                       ?_InitWalkAutoTime 0001  
                                       ??_controlVelocity 00DA  
                                               ??_RGB_Set 0010  
                              ?_ControlDecelarationFactor 0001  
                                    __end_of_getSerialCmd 9060  
                  __end_of_SetSegmentValueIntermitentMain 9AF0  
                          _SetSegmentValueIntermitentMain 9ADC  
                                      ReadSerial@position 002F  
                                      __end_of_I2C1_Close 98FA  
                                                  _ADACCH 000F71  
                                                  _ADACCL 000F70  
                                 ?_I2C1_Read1ByteRegister 0022  
                                      ??_InitWalkAutoTime 0010  
                                                  _ADCON0 000F60  
                                                  _ADCON1 000F59  
                                                  _ADCON2 000F5A  
                                                  _ADCON3 000F5B  
                                                  _ADERRH 000F6F  
                                                  _ADERRL 000F6E  
                                                  _ADLTHH 000F6B  
                                                  _ADLTHL 000F6A  
                                                  _ADRESH 000F64  
                                                  _ADRESL 000F63  
                                                  _ADSTAT 000F65  
                                                  _ADUTHH 000F6D  
                                        ___awdiv@dividend 0014  
                                                  _ADUTHL 000F6C  
                                                  _ANSELA 000F11  
                                                  _ANSELB 000F19  
                                                  _ANSELC 000F21  
                                                  _ANSELD 000F26  
                                                  _ANSELE 000F2E  
                                                  _T0CON0 000FD5  
                                                  _T0CON1 000FD6  
                                                  _T1GATE 000FD1  
                                                  _T1GCON 000FD0  
                                     readRFButtons@serial 0181  
                                                  _IOCBN3 00789B  
                                                  _IOCBP3 0078A3  
                                                  _RC1REG 000F99  
                                           _readRFButtons 6384  
                                                  _RC1STA 000F9D  
                                                  _RC3PPS 000EFA  
                                 TMR1_WriteTimer@timerVal 0001  
                                                  _RC4PPS 000EFB  
                                                  _ODCONA 000F0F  
                                                  _ODCONB 000F17  
                                                  _ODCONC 000F1F  
                                                  _ODCOND 000F24  
                                                  _ODCONE 000F2C  
                                                  _RC7PPS 000EFE  
                                   __end_of_GetMotorPower 7906  
                                                  i2l2024 630A  
                                                  i2l1147 9982  
                                                  i2l2140 822A  
                                                  i2l2133 81F4  
                                                  i2l2222 553A  
                                                  i2l2240 79A0  
                                                  i2l2128 81D6  
                                                  i2l1266 69F8  
                                                  i2l2323 868C  
                                                  i2l1620 4E08  
                                                  i2l1277 6A82  
                                                  i2l2191 5376  
                                                  i2l2328 8696  
                                                  i2l2195 545C  
                                                  _INLVLA 000F0D  
                                                  _INLVLB 000F15  
                                                  _INLVLC 000F1D  
                                                  _INLVLD 000F22  
                                                  _INLVLE 000F2A  
                                               ??_Decrypt 001D  
                                  calculateMean@meanValue 0010  
                                                  _OSCFRQ 000EDE  
                         __end_ofi2_VerifyElectricalBrake 869A  
                                                  _TMR0IE 007615  
                                                  _TMR0IF 007655  
                                                  _RX1PPS 000EB5  
                            __end_of_refreshADCZeroOffset 73BA  
                                           ?_init_package 0010  
                                                  _TX1REG 000F9A  
                                                  _TX1STA 000F9E  
                                __end_of_cmdMemoryIsEmpty 7EEA  
                                       ?_I2C1_MasterClose 0001  
                                                  _DecCHK 9432  
                                 __end_ofi2_GetMotorPower 79CC  
                                                  _RFFull 008B  
                                rdBlkRegCompleteHandler@p 0019  
                                               ??_ReadADC 0002  
                                 ??_I2C1_MasterDisableIrq 0010  
                                       ?_I2C1_MasterStart 0001  
                                         eusartparser@pos 00EC  
                    __end_of_sm_execute_menuConfiguration 1886  
                            _sm_execute_menuConfiguration 0F22  
                                       ?_I2C1_MasterWrite 0001  
                                                  _HopCHK 811E  
                                ?_I2C1_MasterWaitForEvent 0001  
                                      ??_I2C1_MasterClose 0010  
                                        _I2C1_DO_TX_EMPTY 8B4C  
                                 controlSelectRemote@temp 00E8  
                                  _SumEnergyADCHist_array 0260  
                                      ??_I2C1_MasterStart 0010  
                                      ??_I2C1_MasterWrite 0022  
                                       _decrementTimeslot 9760  
                    __end_of_TMR1_DefaultInterruptHandler 9CA8  
                            _TMR1_DefaultInterruptHandler 9CA6  
                                  __end_of_refreshCurrent 9186  
                                           ?_read_package 0011  
                                                  ___lmul 8E20  
                                         ??_LoadManufCode 0010  
                                                  ___wmul 97FE  
                                  __end_of_refreshSegment 822C  
                                               ??___awdiv 0018  
                                               ??___lbdiv 0011  
                                               ??___lbmod 0011  
                                               ??___lldiv 0018  
                                      ?_decrementTimeslot 0001  
                                               ??___lwdiv 0014  
                                       ??_i2c_writeNBytes 0027  
                                           _load_New_Menu 46B6  
                             __end_of_keeloqDecryptPacket 5B4C  
                                ?_EUSART1_SetErrorHandler 0010  
                                                  _memcpy 91CA  
                                        ?_TMR0_Initialize 0001  
                                                  clear_0 7AF0  
                                                  clear_1 7AFC  
                                                  clear_2 7B08  
                                                  clear_3 7B14  
                                                  clear_4 7B20  
                                        ___awdiv@quotient 001A  
                                       ??_WWDT_TimerClear 0010  
                      __end_of_sm_execute_ControlLearning 28D8  
                              _sm_execute_ControlLearning 21CA  
                                                  isa$std 000001  
                        ??_EUSART1_SetOverrunErrorHandler 0012  
                         ?_EUSART1_SetOverrunErrorHandler 0010  
                                       ??_WWDT_SoftEnable 0010  
                                ??_I2C1_DO_SEND_ADR_WRITE 0011  
                          SetSegmentValueIntermitent@time 0011  
                                  setValueToEdit@menuType 00DE  
                                       ?_I2C1_SetCallback 0010  
                                  ??_I2C1_DO_RX_NACK_STOP 0010  
                                           ??_ShowVersion 001E  
                                         _ADCC_Initialize 8FC2  
                                     ??_decrementTimeslot 0003  
                                             ?_CloseOrder 0001  
                                   _I2C1_DO_SEND_ADR_READ 9B52  
                                          _PMD_Initialize 9954  
                                              _StateTRIAC 0195  
                                           ?_eusartparser 00E0  
                           ?_I2C1_SetDataCompleteCallback 0015  
                                      ??_I2C1_SetCallback 0014  
                                            __mediumconst 0000  
                          __end_of_I2C1_Read1ByteRegister 8CBE  
                                    __end_of_ControlMotor 534C  
                                                  tblptrh 000FF7  
                                                  tblptrl 000FF6  
                                           Decrypt@Buffer 0022  
                                                  tblptru 000FF8  
                                               ??_sumHIST 0014  
                                               ??_sm_init 0017  
                                   SaveNVM_VarSystem@page 00D8  
                              __end_of_actionZone_Closing 4C38  
                               ?_ADCC_GetSingleConversion 0001  
                                         ??_EUSART1_Write 0010  
                       __end_of_ControlDecelarationFactor 9A26  
                TMR2_SetInterruptHandler@InterruptHandler 0010  
                TMR1_SetInterruptHandler@InterruptHandler 0010  
                TMR0_SetInterruptHandler@InterruptHandler 0010  
                                        ??_ControlCurrent 0023  
                                  setValueToEdit@posindex 00DF  
                                 __end_of_TMR1_WriteTimer 998C  
                                         _eusart1RxBuffer 027C  
                                          ?_readRFButtons 0001  
                                        ___lbdiv@dividend 0011  
                                 _I2C1_DO_RX_NACK_RESTART 9C00  
                                         _eusart1TxBuffer 0284  
                                     _SetSegmentValueMain 99A6  
                                        ?_TMR1_Initialize 0001  
                                          ??_init_package 0012  
                                       _SYSTEM_Initialize 94F8  
                              __end_of_actionZone_Opening 5102  
                          I2C1_SetDataCompleteCallback@cb 0015  
                                         ___lbmod@divisor 0010  
                                              __accesstop 0060  
                                 __end_of__initialization 7B26  
                                         ___lbmod@counter 0012  
                                           Decrypt@packet 001B  
                           setValueToEdit@haveValueToEdit 00E0  
                                        ?_sm_execute_main 00ED  
                                          _setValueToEdit 2E50  
                                      getSerialCmd@serial 001B  
                         I2C1_MasterOperation@returnValue 0021  
                                      ?_SYSTEM_Initialize 0001  
                                           ___rparam_used 000001  
                               __end_of_decrementTimeslot 978A  
                                           ??_I2C1_Poller 0020  
                                           ?_Segments_Set 0001  
                                          ??_read_package 0018  
                         ??_setPositionInvertionInClosing 00D8  
                           ?_sm_execute_menuConfiguration 00E9  
                           __end_of_EUSART1_RxDataHandler 991C  
                                 _rdBlkRegCompleteHandler 92D0  
                                          __pcstackCOMRAM 0001  
                                         ?_refreshCurrent 0001  
                                   __end_of_getKeyPressed 9A3E  
                                            __pidataBANK0 9CA2  
                                            __pidataBANK1 9CAC  
                                            __pidataBANK2 9C40  
                                            __pidataBANK3 984A  
                                     ??_SYSTEM_Initialize 0014  
                                             ?_ReadSerial 002E  
                        __end_of_I2C1_MasterEnableRestart 9C96  
                                          ?_load_New_Menu 0001  
                               sm_execute_ControlGate@psm 00E7  
                                               ?_TMR0_ISR 0001  
                                         ?_refreshSegment 0001  
                                               ?_TMR1_ISR 0001  
                                               ?_TMR2_ISR 0001  
                           ?_TMR1_DefaultInterruptHandler 0001  
                         ??_setPositionInvertionInOpening 0032  
                                    ?_SetSegmentValueMain 001C  
                                        ?_TMR2_Initialize 0001  
                                        ___lbdiv@quotient 0013  
                                  __end_of_PMD_Initialize 9970  
                            ??_I2C1_DO_SEND_RESTART_WRITE 0010  
                                 ??_I2C1_MasterSendTxData 0010  
                                         ??_InitSoftStart 0014  
                                    __end_of_EUSART1_Read 9140  
                                          ??_eusartparser 00E2  
                                  ??_EUSART1_Transmit_ISR 0001  
                                    _getStateOpenPosition 6F96  
                               write_eusartparser@package 0010  
                                           ?_RemoveSerial 003A  
                                    __end_of_InitReceiver 99A6  
                         actionZone_Closing@typeOpenOrder 0033  
                             __end_of_EUSART1_Receive_ISR 7DC0  
                                   __end_of_I2C1_DO_RESET 9BDC  
                          keeloqDecryptPacket@commandType 00E9  
                                        sumEnergyADC@sumE 0014  
                        verifyProgramingMode@classic_data 0010  
                                       __end_of_ReqResync 9A9C  
                             VerifyFollowMe@securityClose 0010  
                                        ??_confirmpackage 0015  
                               __end_of_SYSTEM_Initialize 9526  
                                     __end_of_ShowVersion 8AEA  
                                           _eusart1RxHead 0095  
                                           _eusart1TxHead 0097  
                                           _eusart1RxTail 0094  
                                              __pbssBANK0 0060  
                                              __pbssBANK1 0100  
                                              __pbssBANK2 0200  
                                              __pbssBANK3 0300  
                                  __end_of_setValueToEdit 335C  
                                           _eusart1TxTail 0096  
                         __end_of_I2C1_MasterWaitForEvent 9C00  
                       _EUSART1_TxDefaultInterruptHandler 02EB  
                                            _GetOpenOrder 5B4C  
                                    __end_of_InitSoftStop 90F8  
                         ??_EUSART1_SetRxInterruptHandler 0012  
                          validateRemoteSerialNumber@mask 0035  
                                cmdMemoryIsEmpty@position 002E  
                           __end_of_rd2RegCompleteHandler 96B2  
                                    I2C1_Open@returnValue 0011  
                                                 ?_DecCHK 0010  
                                           ?_WaitPreFlash 0001  
                                        ?i2_GetMotorPower 0001  
                            __end_of_SetSegmentValueLearn 74B6  
                                       ?_controlTimeslots 0001  
                           __end_of_wr2RegCompleteHandler 9686  
                                           ?_NormalKeyGen 0026  
                                   __end_of_sm_send_event 8C06  
                                   _rd1RegCompleteHandler 96B2  
                                                 ?_HopCHK 0024  
                                          ??_Segments_Set 0001  
              validateRemoteSerialNumber@VerifyOnlySerial 0032  
                                              _edit_Param 0046  
                                       _I2C1_DO_SEND_STOP 9C18  
                                      ??_controlTimeslots 0005  
                                           _button_struct 004C  
                                   _wr1RegCompleteHandler 96DE  
                         __end_of_EUSART1_SetErrorHandler 9BD2  
                                       getHopCode@tempHop 0020  
                                       getHopCode@tempPos 0022  
                        __end_of_TMR0_SetInterruptHandler 9BA0  
                                                 ?___lmul 001D  
                                      ?_I2C1_DO_SEND_STOP 0001  
                                                 ?___wmul 0010  
                                              ??_TMR0_ISR 0003  
                                              _getHopCode 6AEE  
                                              ??_TMR1_ISR 000A  
                                              ??_TMR2_ISR 0005  
                                 __end_of_ADCC_Initialize 9012  
                                         _I2C1_MasterOpen 9A56  
                                   ??_SetSegmentValueMain 001D  
                                         _I2C1_MasterStop 9C8E  
                                         _I2C1_Initialize 9AF0  
                                     __end_of_I2C1_Poller 9B36  
                                __end_of_setFlashLigth_ON 938C  
                                                 _ADFLTRH 000F73  
                                                 _ADFLTRL 000F72  
                                                 ?_memcpy 0010  
                                    readRFButtons@keyType 0087  
                                       __end_of_StopOrder 9938  
                                          ___lmul@product 0025  
                                                 _ADPREVH 000F62  
                                                 _ADPREVL 000F61  
                                write_eusartparser@debug2 0021  
                              __end_of_ResetDefaultMemory 66A4  
                                                 _ADSTPTH 000F69  
                                                 _ADSTPTL 000F68  
                          _menuConfiguration_stateMachine 02BB  
                                         ?_PMD_Initialize 0001  
                       keeloq_classic_decrypt_packet@data 0038  
                                  ?_I2C1_DO_SEND_ADR_READ 0001  
                                           _erroranterior 018D  
                                     ??_I2C1_DO_SEND_STOP 0010  
                  __end_of_EUSART1_SetFramingErrorHandler 9BC8  
                          _EUSART1_SetFramingErrorHandler 9BBE  
                                    _refreshADCZeroOffset 72BC  
                                ??_sm_execute_ControlGate 00E9  
                                   i2c_readDataBlock@data 0024  
                                   _VerifyElectricalBrake 85AA  
                                                 i2l13117 9918  
                                                 i2l14523 8682  
                                                 i2l14701 4CD8  
                                                 i2l14517 8666  
                                                 i2l14721 4D56  
                                                 i2l14723 4D66  
                                                 i2l14707 4CFE  
                                                 i2l14475 7956  
                                                 i2l14467 791A  
                                                 i2l14725 4D6C  
                                                 i2l14477 7962  
                                                 i2l14821 53CC  
                                                 i2l14813 53A8  
                                                 i2l14743 4DC8  
                                                 i2l14735 4DA0  
                                                 i2l14719 4D46  
                                                 i2l14671 4C4A  
                                                 i2l14487 7990  
                                                 i2l14831 53F6  
                                                 i2l14815 53B2  
                                                 i2l14911 8E86  
                                                 i2l14761 4E20  
                                                 i2l14681 4C78  
                                                 i2l14497 79C2  
                                                 i2l14771 4E46  
                                                 i2l14755 4E12  
                                                 i2l14691 4CAC  
                                                 i2l14675 4C5A  
                                                 i2l14843 5430  
                                                 i2l14851 546E  
                                                 i2l14781 4E76  
                                                 i2l14767 4E36  
                                                 i2l14679 4C70  
                                                 i2l14935 81F8  
                                                 i2l14777 4E5E  
                                                 i2l14945 8226  
                                                 i2l16803 94BC  
                                                 i2l14875 54E0  
                                                 i2l16823 7DBA  
                                                 i2l14887 551E  
                                                 i2l14799 536C  
                                                 i2l14899 555A  
                                                 i2l16931 6AB6  
                                                 i2l16923 6A9A  
                                                 i2l16909 6A66  
                                                 i2l16873 69D0  
                                                 i2l16937 6ACE  
                                                 i2l16865 69BC  
                                                 i2l16889 6A1A  
                                                 i2l16899 6A44  
                          actionZone_Opened@typeOpenOrder 0021  
                                   ?_getStateOpenPosition 0001  
                                          ??_RemoveSerial 00D8  
                                              _fimdecurso 0175  
                            ?_EUSART1_DefaultErrorHandler 0001  
                                       _I2C1_MasterIsNack 9B60  
                                                 _SP1BRGH 000F9C  
                                                 _SP1BRGL 000F9B  
                                              _dispStruct 0072  
                                                 _OSCCON1 000ED8  
                                                 _OSCCON3 000EDA  
                                               _I2C1_Open 82B0  
                               ??_I2C1_DO_RX_NACK_RESTART 0010  
                                                 _RGB_Set 9B36  
                                              _auxCounter 00FC  
                                         ??_readRFButtons 003B  
                                                 _OSCTUNE 000EDD  
                                       _I2C1_MasterSetIrq 9C52  
                                                 _SSP1ADD 000F93  
                                                 _SLRCONA 000F0E  
                                                 _SLRCONB 000F16  
                                                 _SLRCONC 000F1E  
                                                 _SLRCOND 000F23  
                                                 _SLRCONE 000F2B  
                                                 _WDTCON0 000ED2  
                                                 _SSP1BUF 000F92  
                                                 _WDTCON1 000ED3  
                                      ?_I2C1_MasterIsNack 0001  
                              ?_I2C1_DO_SEND_RESTART_READ 0001  
                          ??_I2C1_SetDataCompleteCallback 0019  
                                        ?_TMR1_WriteTimer 0001  
                                      ?_I2C1_MasterSetIrq 0001  
                            __end_of_generateErrorLearnig 8A84  
                                            _classic_data 0290  
                                          load_New_Menu@i 0023  
                                         ?_setValueToEdit 003A  
                                                 _RFcount 007E  
                         ??_keeloq_classic_decrypt_packet 00D8  
                                                 _Decrypt 7774  
                                  eusartparser@relcounter 00F7  
                                          ??_WaitPreFlash 0018  
                                                 _RFstate 019D  
                                      _i2c1_fsmStateTable 0F01  
                                          ??_NormalKeyGen 0028  
                                     ??_I2C1_MasterIsNack 0010  
  __end_of_rd1RegCompleteHandler@i2c1_master_example$F500 965A  
          _rd1RegCompleteHandler@i2c1_master_example$F500 962E  
  __end_of_rd2RegCompleteHandler@i2c1_master_example$F511 962E  
          _rd2RegCompleteHandler@i2c1_master_example$F511 9602  
  __end_of_wr2RegCompleteHandler@i2c1_master_example$F523 9736  
          _wr2RegCompleteHandler@i2c1_master_example$F523 970A  
  __end_of_wr1RegCompleteHandler@i2c1_master_example$F517 9602  
                               __end_of_I2C1_DO_SEND_STOP 9C20  
          _wr1RegCompleteHandler@i2c1_master_example$F517 95D6  
__end_of_rdBlkRegCompleteHandler@i2c1_master_example$F535 92D0  
        _rdBlkRegCompleteHandler@i2c1_master_example$F535 9290  
                               ??_rdBlkRegCompleteHandler 001B  
                          getCurrentComparator@tempOffset 0020  
                                                 _ReadADC 8E76  
                                      I2C1_SetCallback@cb 0010  
                                           _write_package 9552  
                                     ??_I2C1_MasterSetIrq 0010  
                                     _controlSelectRemote 3C88  
                              __end_of_clearLearningValue 8530  
                                                 _NextHop 0187  
                                                 __Hparam 0000  
                              __end_of_write_eusartparser 3C88  
                                                 __Lparam 0000  
                                         _WWDT_Initialize 9B78  
                                         ??_load_New_Menu 0020  
                              ??_TMR2_SetInterruptHandler 0012  
                                               _ADC_array 0200  
                                            _getSerialCmd 9012  
                                                 ___awdiv 822C  
                                                 ___lbdiv 938C  
                                                 ___lbmod 9736  
                                                 ___lldiv 8334  
                                              _readInputs 71B4  
                                         _controlVelocity 556E  
                                                 ___lwdiv 8F20  
                                           _OpenFullOrder 97D8  
                                            __psmallconst 0F00  
                                     RemoveSerial@cmdType 00DA  
                   __end_of_setPositionInvertionInClosing 6E72  
                           _setPositionInvertionInClosing 6D4A  
                          ??_sm_execute_menuConfiguration 00EB  
                                     _EUSART1_is_rx_ready 9B16  
                                          getHopCode@data 0016  
                                                 _difTime 0194  
                                                 __pcinit 7A80  
                                           ?_I2C1_DO_IDLE 0001  
                                           ?_I2C1_DO_RCEN 0001  
                                                 __ramtop 0F00  
                                  i2c_writeNBytes@address 0039  
                                   __end_of_getTypeRemote 9C4C  
                                    __end_of_init_package 9496  
                                                 __ptext0 66A4  
                                                 __ptext1 335C  
                                                 __ptext2 0F22  
                                                 __ptext3 2E50  
                                                 __ptext4 46B6  
                                                 __ptext5 998C  
                                                 __ptext6 3C88  
                                                 __ptext7 9C46  
                                                 __ptext8 9012  
                                                 __ptext9 79CC  
                                   ?_refreshADCZeroOffset 0001  
                                              _memoryTEMP 02A0  
                                      i2c_readDataBlock@d 002A  
                                _I2C1_MasterEnableRestart 9C92  
                          ??_TMR1_DefaultInterruptHandler 0001  
                               __end_of_I2C1_MasterIsNack 9B6C  
                            ?_I2C1_SetAddressNackCallback 0015  
                                               _T1CONbits 000FCF  
                   __end_of_setPositionInvertionInOpening 7774  
                           _setPositionInvertionInOpening 7698  
                                                 _lastKey 0199  
                                              _readbutton 89B0  
                                   _OSCILLATOR_Initialize 9A9C  
                                   OpenWalkOrder@diffTime 001A  
                                             _ShowVersion 8A84  
                                    ?_controlSelectRemote 0001  
                             ?_validateRemoteSerialNumber 002E  
                                        _InitFullAutoTime 99C0  
                               __end_of_I2C1_MasterSetIrq 9C58  
                             checkNVM_VarSystem@saveParam 003A  
                                                 _menu_st 0151  
                                __end_of_I2C1_DO_TX_EMPTY 8BAA  
                                  RemoveSerial@tempSerial 00DB  
                                       __end_of_setRGB_ON 7F7A  
                                      _EUSART1_Initialize 8436  
                                ??_PIN_MANAGER_Initialize 0010  
                               ?_TMR1_SetInterruptHandler 0010  
                                              ?_I2C1_Open 0001  
                                                 _sumHIST 74B6  
                                                 _sm_init 8DCA  
                                          _BufferRF_12BIT 018B  
                                             sumHIST@sumH 001C  
                                    __end_of_read_package 8FC2  
                                                 _var_sys 0100  
                           ??_EUSART1_DefaultErrorHandler 0001  
                             ??_ControlDecelarationFactor 0010  
                                ?_I2C1_CallbackReturnStop 0019  
                                     init_package@package 0010  
                                           _OpenWalkOrder 88D4  
                                    _zeroCrossingWaitTime 02F8  
                                       SetSegmentValue@d1 001D  
                                       SetSegmentValue@d2 001C  
                       __end_of_I2C1_DO_SEND_RESTART_READ 9C38  
                                    end_of_initialization 7B26  
                              __end_of_I2C1_MasterSendAck 9C5E  
                                    ?_EUSART1_is_rx_ready 0001  
                                     _I2C1_MasterClearIrq 9C64  
                                     ?_EUSART1_Initialize 0001  
                                               _PCON0bits 000FD7  
                                                 memcpy@d 0017  
                                                 memcpy@n 0014  
                                                 memcpy@s 0019  
                              __end_of_I2C1_MasterStartRx 9C86  
                             _EUSART1_OverrunErrorHandler 02E5  
                                  ?_rd1RegCompleteHandler 0019  
                                         _i2c_writeNBytes 8710  
                              ?_GetSecurityStateInClosing 0001  
                                  _I2C1_DO_SEND_ADR_WRITE 9B44  
                                       ?_cmdMemoryIsEmpty 002E  
                                          ?_write_package 0011  
                                           _calculateMean 8AEA  
                            __end_of_sm_get_current_state 9B16  
                                               i2u1501_40 54C0  
                                               i2u1510_40 552A  
                                               i2u1511_40 5532  
                                               i2u1503_40 54D6  
                                               i2u1440_40 79B0  
                                               i2u1520_40 81B6  
                                               i2u1441_40 79BE  
                                               i2u1513_40 5552  
                                               i2u1434_40 7934  
                                               i2u1522_40 8208  
                                               i2u1507_40 5506  
                                               i2u1363_40 977A  
                                               i2u1460_40 4CEC  
                                               i2u1436_40 7970  
                                               i2u1444_40 8646  
                                               i2u1437_40 797E  
                                               i2u1462_40 4D16  
                                               i2u1526_40 62FE  
                                               i2u1518_45 8E9E  
                                               i2u1463_40 4D26  
                                               i2u1455_40 4C70  
                                               i2u1439_40 799C  
                                               i2u1527_40 6372  
                            __end_of_I2C1_DO_SEND_RESTART 9C28  
                                               i2u1464_40 4D36  
                                               i2u1448_40 867C  
                                               i2u1473_40 4E34  
                                               i2u1490_40 5424  
                                               i2u1491_40 542A  
                                    __end_of_eusartparser 21CA  
                                               i2u2291_48 0056  
                                         _WWDT_TimerClear 9938  
                                               i2u1485_40 53C6  
                                 __end_of_I2C1_MasterOpen 9A6E  
                                  ?_wr1RegCompleteHandler 0019  
                                               i2u1478_40 5366  
                                               i2u1497_40 5494  
                                               i2u1920_48 6ADC  
                                               i2u1905_40 6A0C  
                                               i2u2288_48 003E  
                                   __end_of_ControlLights 46B6  
                                               i2u1498_40 54A2  
                                               i2u1908_40 6A30  
                                 __end_of_I2C1_MasterStop 9C92  
                                 __end_of_I2C1_Initialize 9B04  
                                               i2u3393_47 9ABC  
                                         ___lldiv@divisor 0014  
                                               i2u1890_48 7DA6  
                                               i2u1892_48 9838  
                                   __end_of_ControlInputs 6F96  
                   __end_of_EUSART1_SetRxInterruptHandler 9BB4  
                           _EUSART1_SetRxInterruptHandler 9BAA  
                                               i2u1886_48 7D50  
                                               i2u1886_49 7D62  
                                               i2u1888_48 7D7C  
                                               i2u1896_48 933E  
                                               i2u1888_49 7D8E  
                                             _I2C1_Poller 9B26  
                        ??_SetSegmentValueIntermitentMain 001F  
                         ?_SetSegmentValueIntermitentMain 001C  
                                         _WWDT_SoftEnable 9C76  
                                         ___lldiv@counter 001C  
                                      ??_cmdMemoryIsEmpty 002F  
                               ?_I2C1_CallbackReturnReset 0019  
                           __end_of_I2C1_MasterDisableIrq 9C9E  
                                             _I2C1_Status 023C  
                              ?_GetSecurityStateInOpening 0001  
                                            _ControlMotor 5102  
                                  SaveNVM_VarSystem@point 00DB  
                                                 postdec1 000FE5  
                                                 postdec2 000FDD  
                                                 postinc0 000FEE  
                                                 postinc1 000FE6  
                                                 postinc2 000FDE  
                                             ?_getHopCode 0016  
                                          ?_OpenFullOrder 0001  
                        SetSegmentValueIntermitentMain@d1 001F  
                        SetSegmentValueIntermitentMain@d2 001C  
                                     _I2C1_MasterSendNack 9C5E  
                                           HopCHK@hopDiff 0026  
                     __end_of_I2C1_SetAddressNackCallback 9A56  
                             _I2C1_SetAddressNackCallback 9A3E  
                                        ?_ADCC_Initialize 0001  
                                     _getTimeDecelaration 75B0  
                                              _sm_restart 9186  
                        __end_of_ADCC_GetSingleConversion 9AC8  
                                    ?_I2C1_MasterClearIrq 0001  
                                          ??_I2C1_DO_IDLE 0010  
                                    ??_EUSART1_Initialize 0012  
                                        NormalKeyGen@SEED 02D7  
                                          ??_I2C1_DO_RCEN 0010  
                      __end_of_I2C1_DO_SEND_RESTART_WRITE 9C30  
                              _I2C1_DO_SEND_RESTART_WRITE 9C28  
                       actionZone_Closing@securityClosing 0032  
                             ?_sm_execute_ControlLearning 00DC  
                                _TMR0_SetInterruptHandler 9B96  
                                               _PORTAbits 000F8D  
                                               _PORTBbits 000F8E  
                                  ?_VerifyElectricalBrake 0001  
                                               _PORTEbits 000F91  
                         __end_of_rdBlkRegCompleteHandler 9310  
                                  ??_getStateOpenPosition 0032  
                                            ??_CloseOrder 0018  
                                   ??_controlSelectRemote 00E0  
                                    _SetSegmentValueLearn 73BA  
                           ??_I2C1_SetAddressNackCallback 0019  
                               I2C1_Read1ByteRegister@reg 0022  
                                        ___lbmod@dividend 0011  
                                    __end_of_Segments_Set 9B78  
                                     _ControlCounterMoves 8D18  
                            _controlLearning_stateMachine 02B0  
                         I2C1_SetDataCompleteCallback@ptr 0017  
                                          ?_OpenWalkOrder 0001  
                                              _stateMotor 0083  
                                      eusartparser@i_7301 00E9  
                                      eusartparser@i_7310 00EF  
                                      eusartparser@i_7302 00ED  
                                      eusartparser@i_7311 00F0  
                                      eusartparser@i_7303 00EE  
                                      eusartparser@i_7312 00F4  
                                      eusartparser@i_7304 00F1  
                                      eusartparser@i_7313 00F5  
                                      eusartparser@i_7305 00F2  
                                      eusartparser@i_7314 00F6  
                                      eusartparser@i_7306 00F3  
                                      eusartparser@i_7308 00EA  
                                      eusartparser@i_7309 00EB  
                                           ?_sumEnergyADC 0010  
                          I2C1_CallbackReturnReset@funPtr 0019  
                       actionZone_Opening@securityClosing 00E4  
                                    ?_I2C1_MasterSendNack 0001  
                         keeloqDecryptPacket@classic_data 00E2  
                                     EUSART1_Write@txData 0010  
                                       ??_ClearFlag_rfCMD 0010  
                                    ?_getTimeDecelaration 0029  
                                   ??_EUSART1_is_rx_ready 0010  
                                       _saveEnergyADCHist 978A  
                                 __end_of_WWDT_Initialize 9B82  
                                             ___lbmod@rem 0013  
                       actionZone_Opening@securityOpening 00E5  
                                      eusartparser@buffer 0185  
                                          ?_calculateMean 0010  
                                        ??_refreshCurrent 0021  
                                       ??_SetSegmentValue 001D  
                                            _EUSART1_Read 90F8  
                                      ?_saveEnergyADCHist 0010  
                                      eusartparser@save_f 018F  
                       __end_of_GetSecurityStateInClosing 7C80  
                                      eusartparser@serial 00F8  
                                        ??_refreshSegment 0002  
                                          __end_of_DecCHK 9464  
                                       _controlLearnDigit 94C8  
                                 __end_of_controlVelocity 578C  
                                    ?_ControlCounterMoves 0001  
                                     setValueToEdit@value 01FD  
                                      _actionZone_Closing 49AC  
                                    __end_of_RemoveSerial 8436  
                                          __end_of_HopCHK 81A6  
                                      __end_of_CloseOrder 97D8  
                                 _zeroCrossingWaitTimeIdx 0084  
                                            _InitReceiver 998C  
                               _ControlDecelarationFactor 9A0E  
                                      ?_controlLearnDigit 0001  
                                    _timer0ReloadVal16bit 028E  
                       __end_of_GetSecurityStateInOpening 7D26  
                                       setRGB_ON@RGBLigth 0015  
                                            ??_ReadSerial 0030  
                                     ??_saveEnergyADCHist 0012  
                            __end_of_INTERRUPT_Initialize 9C7E  
                                      _actionZone_Opening 4EAE  
                                   ??_I2C1_MasterClearIrq 0010  
                    __end_of_TMR2_DefaultInterruptHandler 9CA6  
                            _TMR2_DefaultInterruptHandler 9CA4  
                                             ?_readInputs 0001  
                                               _DispTable 03D2  
                                          __end_of___lmul 8E76  
                                   __end_of_LoadManufCode 98B6  
                                     ?_actionZone_Closing 0001  
                                          __end_of___wmul 9824  
                                          _I2C1_DO_RX_ACK 9C10  
                                  ??_refreshADCZeroOffset 0017  
                                    _generateErrorLearnig 8A1C  
                                            _InitSoftStop 90AE  
                                     ??_controlLearnDigit 0013  
                                 i2_VerifyElectricalBrake 8622  
                                          __end_of_memcpy 920E  
                                  ?_OSCILLATOR_Initialize 0001  
                                    __end_of_WaitPreFlash 87F4  
                            __end_of_getCurrentComparator 61EA  
                                      sm_send_event@event 0014  
                                    __end_of_NormalKeyGen 71B4  
                                           _saveNewSerial 87F4  
                                             ?_readbutton 0001  
                                     ?_actionZone_Opening 0001  
                                   ?_SetSegmentValueLearn 0001  
                         __end_of_I2C1_CallbackReturnStop 9C8E  
                          ?_setPositionInvertionInClosing 0001  
                           __end_of_I2C1_MasterSendTxData 9C40  
                                       _read_eusartparser 28D8  
                                   refreshADCZeroOffset@i 0017  
                                     start_initialization 7A80  
                             i2GetMotorPower@defineatraso 0004  
                                             ??_I2C1_Open 0010  
                                          ??_sumEnergyADC 0012  
                                      ?_read_eusartparser 0018  
                                             __end_of_rxi 4EAE  
                                   ??_I2C1_MasterSendNack 0010  
                                 __end_of_i2c_writeNBytes 8784  
                          ?_setPositionInvertionInOpening 0001  
                                   ??_getTimeDecelaration 002D  
           EUSART1_SetRxInterruptHandler@interruptHandler 0010  
           EUSART1_SetTxInterruptHandler@interruptHandler 0010  
                               __end_of_saveEnergyADCHist 97B2  
                                 __end_of_WWDT_TimerClear 9954  
                                    ??_actionZone_Closing 0032  
                                   __end_of_EUSART1_Write 9290  
                                 __end_of_WWDT_SoftEnable 9C7A  
                                      __end_of_ReadSerial 88D4  
                                         ??_write_package 0018  
                                  rd1RegCompleteHandler@p 0019  
                            __end_of_verifyProgramingMode 9432  
                                               _ReqResync 9A86  
                               __end_of_controlLearnDigit 94F8  
                                     ??_read_eusartparser 001A  
                                                ??_DecCHK 0012  
                                       _programmer_enable 0085  
                                    ??_actionZone_Opening 003B  
                                  _sm_execute_ControlGate 4048  
                 sm_execute_ControlLearning@typeOpenOrder 003A  
                                                ??_HopCHK 0026  
                               refreshADCZeroOffset@media 0018  
                                I2C1_SetBuffer@bufferSize 0012  
                                   ??_ControlCounterMoves 003A  
                                       _controlSaveRemote 79CC  
                                        ?_I2C1_MasterOpen 0001  
                            keeloqDecryptPacket@hop_error 00E8  
                                        ?_I2C1_MasterStop 0001  
                                        ?_I2C1_Initialize 0001  
                                 saveNewSerial@tempSerial 00D8  
                                  controlSelectRemote@pos 00E2  
                                         ??_OpenFullOrder 0018  
                                   calculateMean@newValue 0014  
                                      ?_controlSaveRemote 0001  
                                 sm_get_current_state@psm 0010  
                                        ??_PMD_Initialize 0010  
                                                ??___lmul 0025  
                                  __end_of_I2C1_DO_RX_ACK 9C18  
                                                ??___wmul 0014  
                                      _zeroCrossingLength 0198  
                                          _VerifyFollowMe 9870  
                                  wr1RegCompleteHandler@p 0019  
                                   _EUSART1_RxDataHandler 98FA  
                                 ??_I2C1_DO_SEND_ADR_READ 0010  
                          ?_EUSART1_SetRxInterruptHandler 0010  
                                             ?_sm_restart 0010  
                                             __pdataBANK0 00FC  
                                             __pdataBANK1 01FF  
                                             __pdataBANK2 02F4  
                                             __pdataBANK3 03D2  
                                   ?_generateErrorLearnig 0001  
                                                ??_memcpy 0016  
                                       ?_setFlashLigth_ON 0010  
                           ?_TMR2_DefaultInterruptHandler 0001  
                                       _controlMotorForce 534C  
                                     ??_controlSaveRemote 0020  
                               __end_of_read_eusartparser 2E50  
                                          ?_saveNewSerial 00D8  
                                        I2C1_Open@address 0010  
                                          _eusart1RxCount 0093  
                                      ??_setFlashLigth_ON 0012  
                                _ADCC_GetSingleConversion 9AB2  
                                      ?_controlMotorForce 0001  
                                   __end_of_InitSoftStart 8C62  
                                               _StopOrder 991C  
                                    _sm_get_current_state 9B04  
                                             __pbssCOMRAM 003B  
                                         ??_OpenWalkOrder 0018  
                                    _I2C1_DO_SEND_RESTART 9C20  
                                getTimeDecelaration@state 0031  
                       _EUSART1_RxDefaultInterruptHandler 02E9  
                                           __pcstackBANK0 00D8  
                                        ??_setValueToEdit 00DC  
                                           __pcstackBANK2 02ED  
                                                ?_RGB_Set 0001  
                                        _brakeElectric_st 0078  
                             ??_I2C1_DO_SEND_RESTART_READ 0010  
                                     ??_controlMotorForce 0005  
                                      _ResetDefaultMemory 651A  
                                    ReadSerial@tempSerial 002E  
                                         ??_calculateMean 0018  
                         ??_EUSART1_SetTxInterruptHandler 0012  
                                    __end_of_I2C1_DO_IDLE 9BF0  
                        ??_EUSART1_SetFramingErrorHandler 0012  
                         ?_EUSART1_SetFramingErrorHandler 0010  
                                                ?_Decrypt 001B  
                                    __end_of_I2C1_DO_RCEN 9BE6  
                                           _GetMotorPower 7840  
                                        ?_WWDT_Initialize 0001  
                                              ?_ReqResync 0010  
                               __end_of_controlSaveRemote 7A80  
                                            _init_package 9464  
                           I2C1_SetAddressNackCallback@cb 0015  
                                      sm_execute_main@psm 00ED  
                                                ?_ReadADC 0001  
                                            RGB_Set@value 0010  
                                   _TMR0_InterruptHandler 02E1  
                                     ?_ResetDefaultMemory 0001  
                                               __pnvBANK1 01FE  
                                               __pnvBANK2 02DB  
                                   _rd2RegCompleteHandler 9686  
                                        _InitWalkAutoTime 9AC8  
                                        ?_controlVelocity 0001  
                                __end_of_InitFullAutoTime 99DA  
                             __end_of_SetSegmentValueMain 99C0  
                          VerifyElectricalBrake@tempState 0010  
                        i2VerifyElectricalBrake@tempState 0001  
                                        ___lwdiv@dividend 0010  
                                  _PIN_MANAGER_Initialize 7DC0  
                                  __end_of_VerifyFollowMe 9894  
                                   _wr2RegCompleteHandler 965A  
                              ??_I2C1_MasterEnableRestart 0010  
                                               __pintcode 0008  
                                            _read_package 8F72  
                                          _I2C1_MasterFsm 8ECC  
                              __end_of_checkNVM_VarSystem 5EB4  
                        __end_of_TMR1_SetInterruptHandler 9B96  
                         ADCC_GetSingleConversion@channel 0001  
                                         ?_I2C1_DO_RX_ACK 0001  
                                                ?___awdiv 0014  
                                               __ptext100 7DC0  
                                               __ptext101 9A9C  
                                                ?___lbdiv 0010  
                                               __ptext110 8FC2  
                                               __ptext102 9C7A  
                                               __ptext111 9B16  
                                               __ptext103 9AF0  
                                               __ptext200 9CA6  
                                               __ptext120 9140  
                                               __ptext112 5102  
                                               __ptext104 8436  
                                               __ptext201 9824  
                                               __ptext121 74B6  
                                               __ptext113 85AA  
                                               __ptext105 9BA0  
                                               __ptext210 0000  
                                               __ptext202 4C38  
                                               __ptext130 93C6  
                                               __ptext122 8006  
                                               __ptext114 4392  
                                               __ptext106 9BAA  
                                               __ptext203 9CA8  
                                               __ptext131 8710  
                                               __ptext123 978A  
                                               __ptext115 7EEA  
                                               __ptext107 9BB4  
                                               __ptext204 9496  
                                               __ptext140 8ECC  
                                               __ptext132 91CA  
                                               __ptext124 72BC  
                                               __ptext116 9B36  
                                               __ptext108 9BBE  
                                               __ptext205 7D26  
                                               __ptext141 9060  
                                               __ptext133 9A3E  
                                               __ptext125 8F20  
                                               __ptext117 9350  
                                               __ptext109 9BC8  
                                               __ptext206 9C6A  
                                               __ptext150 9BDC  
                                               __ptext142 9BD2  
                                               __ptext134 82B0  
                                               __ptext126 6050  
                                               __ptext118 6E72  
                                               __ptext207 9CAA  
                                               __ptext151 8530  
                                               __ptext143 9C00  
                                               __ptext135 9A56  
                                               __ptext127 97FE  
                                               __ptext119 682C  
                                               __ptext208 9C70  
                                               __ptext160 9C58  
                                               __ptext152 8092  
                                               __ptext144 9C08  
                                               __ptext136 9BF0  
                                               __ptext128 7840  
                                               __ptext209 98FA  
                                               __ptext161 9C7E  
                                               __ptext153 9B44  
                                               __ptext145 9C10  
                                               __ptext137 95AA  
                                               __ptext129 8D18  
                                               __ptext170 92D0  
                                               __ptext162 9C5E  
                                               __ptext154 9B52  
                                               __ptext146 9C18  
                                               __ptext138 9B26  
                                               __ptext171 965A  
                                               __ptext163 9C82  
                                               __ptext155 9BE6  
                                               __ptext147 9C20  
                                               __ptext139 9BF8  
                                               __ptext180 9C92  
                                               __ptext172 9686  
                                               __ptext164 9C86  
                                               __ptext156 8B4C  
                                               __ptext148 9C28  
                                               __ptext181 9C96  
                                               __ptext173 96B2  
                                               __ptext165 9C8A  
                                               __ptext157 9C52  
                                               __ptext149 9C30  
                                               __ptext190 61EA  
                                               __ptext182 98D8  
                                               __ptext174 96DE  
                                               __ptext166 9290  
                                               __ptext158 9B60  
                                               __ptext191 9760  
                                               __ptext183 9C9A  
                                               __ptext175 970A  
                                               __ptext167 95D6  
                                               __ptext159 9C38  
                                               __ptext192 9CA4  
                                               __ptext184 9C9E  
                                               __ptext176 9A6E  
                                               __ptext168 9602  
                                               __ptext193 8E76  
                                               __ptext185 9C64  
                                               __ptext177 8942  
                                               __ptext169 962E  
                                               __ptext194 9AB2  
                                               __ptext178 99F4  
                                               __ptext195 9310  
                                               __ptext187 69A0  
                                               __ptext179 9C8E  
                                               __ptext196 534C  
                                               __ptext188 81A6  
                                               __ptext197 8622  
                                               __ptext189 9B6C  
                                               __ptext198 7906  
                                               __ptext199 9970  
                                                ?___lbmod 0010  
                                 write_eusartparser@debug 001F  
                            ??_SetSegmentValueIntermitent 0013  
                                                ?___lldiv 0010  
                               ??i2_VerifyElectricalBrake 0001  
                               __end_of_controlMotorForce 556E  
                                                ?___lwdiv 0010  
                                   confirmpackage@confirm 0014  
                                    i2c_readDataBlock@len 0026  
                                    i2c_readDataBlock@reg 0022  
                                   confirmpackage@package 0012  
                                 _I2C1_MasterWaitForEvent 9BF8  
                                        _I2C1_MasterClose 9C9E  
                         DecryptPacket_12BIT@classic_data 00E2  
                                ??_I2C1_Read1ByteRegister 0023  
                                          _I2C1_SetBuffer 99F4  
                            ??_INTERRUPT_InterruptManager 000A  
                                  ??_SetSegmentValueLearn 0010  
                                        _I2C1_MasterStart 9C96  
                                    NormalKeyGen@SKEYtemp 002C  
                                        _I2C1_MasterWrite 9BF0  
                                      _clearLearningValue 84B4  
                                      _write_eusartparser 3864  
                                    ??_ResetDefaultMemory 003A  
                                                _BAUD1CON 000F9F  
                                             __smallconst 0F00  
                                   ?_sm_get_current_state 0010  
                                            ?_ShowVersion 0001  
                                                _F2Chance 019A  
                                              ?_StopOrder 0001  
              __end_of_EUSART1_DefaultOverrunErrorHandler 9C70  
                    ??_EUSART1_DefaultOverrunErrorHandler 0001  
                     ?_EUSART1_DefaultOverrunErrorHandler 0001  
                      _EUSART1_DefaultOverrunErrorHandler 9C6A  
                                   ?_I2C1_DO_SEND_RESTART 0001  
                                       _i2c_readDataBlock 869A  
                                            _eusartparser 1886  
                                    _EUSART1_ErrorHandler 02E3  
                                       ?_I2C1_DO_TX_EMPTY 0001  
                                                ?_sumHIST 0010  
                                                ?_sm_init 0012  
                                 _EUSART1_SetErrorHandler 9BC8  
                                      ?_i2c_readDataBlock 0022  
                                     ReqResync@CurrentHop 0010  
                        __end_of_I2C1_CallbackReturnReset 9C8A  
                                     ?_clearLearningValue 0001  
                                        ___lwdiv@quotient 0015  
                                     ?_write_eusartparser 0010  
                                        ?_i2c_writeNBytes 0022  
                                      ??_I2C1_DO_TX_EMPTY 001B  
                                                _T2CLKCON 000FBF  
                                   __end_of_readRFButtons 651A  
                                 ??_rd1RegCompleteHandler 001B  
                                 ?_I2C1_DO_SEND_ADR_WRITE 0001  
                                               _setRGB_ON 7EEA  
                               I2C1_MasterSendTxData@data 0010  
                                        ?_WWDT_TimerClear 0001  
                                    _INTERRUPT_Initialize 9C7A  
                                          ?_GetMotorPower 0001  
                                 ??_wr1RegCompleteHandler 001B  
                                        ?_WWDT_SoftEnable 0001  
                                              sumHIST@max 0018  
                                              sumHIST@min 001A  
                                       ??_TMR0_Initialize 0012  
                                     ??_i2c_readDataBlock 0028  
                                        _I2C1_SetCallback 8942  
                                              sm_init@psm 0012  
                                          ___wmul@product 0014  
                                                _LATAbits 000F83  
                 EUSART1_SetErrorHandler@interruptHandler 0010  
                                                _LATCbits 000F85  
                                read_eusartparser@package 0018  
                                                _LATDbits 000F86  
                                                _LATEbits 000F87  
                                              _I2C1_DO_RX 8530  
                                              _I2C1_DO_TX 8092  
                             ??_GetSecurityStateInClosing 0014  
                                                _PIE0bits 000EC2  
                                    _getCurrentComparator 6050  
                                                _PIE3bits 000EC5  
                                                _PIE4bits 000EC6  
                                              DecCHK@data 0010  
                                                Decrypt@i 001E  
                                                Decrypt@j 001F  
                                                Decrypt@p 0020  
                                         _firstselectflag 01FF  
                                     _DecryptPacket_12BIT 7F7A  
                                              _I2C1_Close 98D8  
                         setValueToEdit@ParameterSelected 003A  
                                            ?_I2C1_Poller 0001  
                                  __end_of_I2C1_MasterFsm 8F20  
                            __end_of_I2C1_MasterGetRxData 9C82  
                              ??_TMR0_SetInterruptHandler 0012  
                                                _PIR0bits 000ECA  
                                            _Segments_Set 9B6C  
                                                _PIR3bits 000ECD  
                                         ?_VerifyFollowMe 0001  
                                                _PIR4bits 000ECE  
                                readRFButtons@rollingCode 0189  
                             ??_GetSecurityStateInOpening 0014  
                                  ?_EUSART1_RxDataHandler 0001  
                                    ??_clearLearningValue 0010  
                                      _I2C1_MasterSendAck 9C58  
                                    ??_write_eusartparser 0017  
                                    __end_of_sumEnergyADC 8092  
                               _I2C1_DO_SEND_RESTART_READ 9C30  
                                            ??_getHopCode 0018  
                                               _pointSync 007A  
                                   __end_of_load_New_Menu 49AC  
                                                _SSP1CON1 000F96  
                                                _SSP1CON2 000F97  
                                  ??_generateErrorLearnig 0017  
                                                _TMR0_ISR 9824  
                                                _TMR1_ISR 9310  
                                                _TMR2_ISR 69A0  
                                           _getKeyPressed 9A26  
                                 ??_VerifyElectricalBrake 0010  
                                  __end_of_I2C1_SetBuffer 9A0E  
                                               _temppower 0193  
                                         _powerControl_st 017B  
                                                _SSP1STAT 000F95  
                    __end_of_I2C1_SetDataCompleteCallback 9A86  
                            _I2C1_SetDataCompleteCallback 9A6E  
                                      _I2C1_MasterStartRx 9C82  
                                         ??_saveNewSerial 00DD  
                             ?_I2C1_DO_SEND_RESTART_WRITE 0001  
                                       ??_TMR1_Initialize 0012  
                                         _ClearFlag_rfCMD 9C4C  
                                     ?_I2C1_MasterSendAck 0001  
                                              _ADCON0bits 000F60  
                               __end_of_i2c_readDataBlock 8710  
                                       ___wmul@multiplier 0010  
                                ?_I2C1_DO_RX_NACK_RESTART 0001  
                                    _verifyProgramingMode 93FE  
                                       ??_sm_execute_main 00EF  
                                    _numberOfErrorCurrent 008E  
                                    ?_DecryptPacket_12BIT 00E0  
                                               _ts_system 019F  
                                                _BitCount 008C  
                                     ?_I2C1_MasterStartRx 0001  
                            __end_of_I2C1_DO_ADDRESS_NACK 90AE  
                          controlSelectRemote@validSerial 00E1  
                          ??_TMR2_DefaultInterruptHandler 0001  
                                       _actionZone_Closed 7B30  
                               ?_TMR2_SetInterruptHandler 0010  
                                    _idxAdcZeroAquisition 008F  
                                         _SetSegmentValue 99DA  
                                            _RemoveSerial 83B6  
                          getStateOpenPosition@stateMotor 00D9  
                          __end_of_I2C1_DO_SEND_ADR_WRITE 9B52  
                                       _actionZone_Opened 578C  
                                           _I2C1_DO_RESET 9BD2  
                                      ?_actionZone_Closed 0001  
                                                _BufferRF 02C6  
                                     read_package@package 0018  
                                       ___lmul@multiplier 001D  
                                               copy_data0 7A94  
                                               copy_data1 7AB4  
                                   ?_INTERRUPT_Initialize 0001  
                                              ?_setRGB_ON 0011  
                                   I2C1_Close@returnValue 0010  
                                ?_rdBlkRegCompleteHandler 0019  
                                      ?_actionZone_Opened 0001  
                                        _Abertura_pedonal 0192  
                                     I2C1_SetCallback@idx 0014  
                                     I2C1_SetCallback@ptr 0012  
                                      __end_of_getHopCode 6C1C  
                                             ??_ReqResync 0012  
                                    ??_I2C1_MasterSendAck 0010  
                                       ??_TMR2_Initialize 0012  
                                   EUSART1_Read@readValue 0010  
                                  ?_rd2RegCompleteHandler 0019  
                                     ??_actionZone_Closed 0020  
                                            _WaitPreFlash 8784  
                                   ?_getCurrentComparator 0016  
                            __end_of_I2C1_MasterOperation 95D6  
                                            _NormalKeyGen 70A6  
                     sm_execute_ControlGate@typeOpenOrder 00EB  
                                  ?_wr2RegCompleteHandler 0019  
                                    ??_I2C1_MasterStartRx 0010  
                                     ??_actionZone_Opened 0020  
                            saveEnergyADCHist@valueToSave 0010  
                   __end_of_EUSART1_SetTxInterruptHandler 9BAA  
                           _EUSART1_SetTxInterruptHandler 9BA0  
                                           _sm_send_event 8BAA  
                                     _keeloqDecryptPacket 597A  
                                                __Hrparam 0000  
                                         ?_I2C1_MasterFsm 0001  
                                               memcpy@tmp 0016  
                                                __Lrparam 0000  
                                    sumEnergyADC@auxValue 0016  
                                     i2c_writeNBytes@data 0024  
                         actionZone_Opening@typeOpenOrder 00E6  
                                          ?_getKeyPressed 0001  
                               ??_I2C1_MasterWaitForEvent 0010  
                                       _main_stateMachine 01F2  
                                   _I2C1_MasterDisableIrq 9C9A  
                                            ??_readInputs 0010  
                                 ??_OSCILLATOR_Initialize 0010  
                             __end_of_controlSelectRemote 4048  
                                         ?_I2C1_SetBuffer 0010  
                                          _fullmotorPower 0082  
                                  ResetDefaultMemory@type 003A  
                                        _controlTimeslots 61EA  
                                _TMR1_SetInterruptHandler 9B8C  
                                  ??_sm_get_current_state 0012  
                                   ?_verifyProgramingMode 0010  
                               _GetSecurityStateInClosing 7BDA  
                       I2C1_Read1ByteRegister@returnValue 0024  
                                  ??_I2C1_DO_SEND_RESTART 0010  
                                            ??_readbutton 0010  
                               __end_of_actionZone_Closed 7BDA  
                                   ??_DecryptPacket_12BIT 003B  
                                   _TMR1_InterruptHandler 02DD  
                               ??_EUSART1_SetErrorHandler 0012  
                                       ??i2_GetMotorPower 0001  
                     __end_of_EUSART1_DefaultErrorHandler 9C76  
                             _EUSART1_DefaultErrorHandler 9C70  
                                             ??_StopOrder 0018  
                             __end_of_EUSART1_is_rx_ready 9B26  
                                    ?_keeloqDecryptPacket 00E0  
                               __end_of_actionZone_Opened 597A  
                               getStateOpenPosition@state 00D8  
                               _GetSecurityStateInOpening 7C80  
                                         ___lwdiv@divisor 0012  
                                          ?_I2C1_DO_RESET 0001  
                                         ___lwdiv@counter 0014  
                                                __ptext10 9736  
                                                __ptext11 822C  
                                                __ptext20 8DCA  
                                                __ptext12 99A6  
                                                __ptext21 9186  
                                                __ptext13 9C4C  
                                                __ptext30 578C  
                                                __ptext22 84B4  
                                                __ptext14 94C8  
                                                __ptext31 9870  
                                                __ptext23 8AEA  
                                                __ptext15 73BA  
                                                __ptext40 8784  
                                                __ptext32 97B2  
                                                __ptext24 4EAE  
                                                __ptext16 8334  
                                                __ptext41 97D8  
                                                __ptext33 49AC  
                                                __ptext25 7698  
                                                __ptext17 4048  
                                                __ptext50 5B4C  
                                                __ptext42 99C0  
                                                __ptext34 6D4A  
                                                __ptext26 556E  
                                                __ptext18 21CA  
                                                __ptext51 938C  
                                                __ptext43 88D4  
                                                __ptext35 75B0  
                                                __ptext27 6F96  
                                                __ptext19 8A1C  
                                                __ptext60 70A6  
                                                __ptext52 9ADC  
                                                __ptext44 8BAA  
                                                __ptext36 8E20  
                                                __ptext28 90AE  
                                                __ptext61 9894  
                                                __ptext53 89B0  
                                                __ptext45 9B04  
                                                __ptext37 991C  
                                                __ptext29 9A0E  
                                                __ptext70 5D14  
                                                __ptext62 7774  
                                                __ptext54 8F72  
                                                __ptext46 8C06  
                                                __ptext38 7BDA  
                                                __ptext71 651A  
                                                __ptext63 811E  
                                                __ptext55 90F8  
                                                __ptext47 9AC8  
                                                __ptext39 7B30  
                                                __ptext80 9250  
                                                __ptext72 8C62  
                                                __ptext64 6AEE  
                                                __ptext56 6384  
                                                __ptext48 7C80  
                                                __ptext81 8CBE  
                                                __ptext73 9A26  
                                                __ptext65 9A86  
                                                __ptext57 597A  
                                                __ptext49 9526  
                                                __ptext90 99DA  
                                                __ptext82 9464  
                                                __ptext74 1886  
                                                __ptext66 9432  
                                                __ptext58 93FE  
                                                __ptext91 94F8  
                                                __ptext83 7E58  
                                                __ptext75 3864  
                                                __ptext67 7F7A  
                                                __ptext59 8D72  
                                                __ptext92 9B78  
                                                __ptext84 83B6  
                                                __ptext76 5EB4  
                                                __ptext68 71B4  
                                                __ptext93 957E  
                                                __ptext85 8864  
                                                __ptext77 87F4  
                                                __ptext69 6C1C  
                                                __ptext94 9B82  
                                                __ptext86 869A  
                                                __ptext78 28D8  
                                                __ptext95 920E  
                                                __ptext87 9938  
                                                __ptext79 9552  
                                                __ptext96 9B8C  
                                                __ptext88 9C76  
                                                __ptext97 98B6  
                                                __ptext89 8A84  
                                                __ptext98 9B96  
                                                __ptext99 9954  
                                            _SSP1CON1bits 000F96  
                                            _SSP1CON2bits 000F97  
                                     NormalKeyGen@HOPtemp 0028  
                                         ??_GetMotorPower 0010  
                                _controlGate_stateMachine 01E7  
                                           ?_GetOpenOrder 0001  
                                 ?_sm_execute_ControlGate 00E7  
                                 DecryptPacket_12BIT@data 00E0  
              ?_rdBlkRegCompleteHandler@pic18f46k40$F7802 0019  
             ??_rdBlkRegCompleteHandler@pic18f46k40$F7804 001B  
                                                _learn_st 0060  
                ?_rd2RegCompleteHandler@pic18f46k40$F7790 0019  
               ??_rd2RegCompleteHandler@pic18f46k40$F7792 001B  
                ?_rd1RegCompleteHandler@pic18f46k40$F7784 0019  
                ?_wr1RegCompleteHandler@pic18f46k40$F7776 0019  
               ??_rd1RegCompleteHandler@pic18f46k40$F7786 001B  
               ??_wr1RegCompleteHandler@pic18f46k40$F7778 001B  
                ?_wr2RegCompleteHandler@pic18f46k40$F7796 0019  
               ??_wr2RegCompleteHandler@pic18f46k40$F7798 001B  
                                      __end_of_readInputs 72BC  
                                _I2C1_CallbackReturnReset 9C86  
                                             ?_I2C1_DO_RX 0001  
                                             ?_I2C1_DO_TX 0001  
                                          ?_sm_send_event 0012  
                    __end_of_TMR0_DefaultInterruptHandler 9CAA  
                            _TMR0_DefaultInterruptHandler 9CA8  
                                i2c_readDataBlock@address 0029  
                             __end_of_I2C1_MasterClearIrq 9C6A  
                            __end_of_I2C1_DO_RX_NACK_STOP 9C10  
                                             ?_I2C1_Close 0001  
                                          _ControlCurrent 682C  
                                                _security 016A  
                                    RemoveSerial@position 003A  
                                      __end_of_readbutton 8A1C  
                                              _RC1STAbits 000F9D  
          EUSART1_SetOverrunErrorHandler@interruptHandler 0010  
                                 __end_of_ClearFlag_rfCMD 9C52  
                                    sm_init@initial_state 0014  
                      __end_of_SetSegmentValueIntermitent 9552  
                              _SetSegmentValueIntermitent 9526  
                                                isa$xinst 000000  
                              ??_ADCC_GetSingleConversion 0001  
                                                int$flags 0050  
                         __end_of_I2C1_DO_RX_NACK_RESTART 9C08  
                           SetSegmentValueLearn@direction 0012  
                                            ??_sm_restart 0012  
                                I2C1_MasterOperation@read 0020  
                      __end_of_INTERRUPT_InterruptManager 009C  
                              _INTERRUPT_InterruptManager 0008  
                                       _loadNVM_VarSystem 6C1C  
                                SaveNVM_VarSystem@tempAdd 00D9  
                                       ??_TMR1_WriteTimer 0003  
                                 __end_of_SetSegmentValue 99F4  
                           __end_of_I2C1_DO_SEND_ADR_READ 9B60  
                             _EUSART1_FramingErrorHandler 02E7  
                                            _I2C1_DO_IDLE 9BE6  
                                     _EUSART1_Receive_ISR 7D26  
                                            _I2C1_DO_RCEN 9BDC  
                                     decrementTimeslot@ts 0001  
                                      ?_loadNVM_VarSystem 0001  
                           controlSelectRemote@tempSerial 00E4  
                                           _getTypeRemote 9C46  
                             __end_of_I2C1_MasterSendNack 9C64  
                                        sm_send_event@psm 0012  
                             __end_of_getTimeDecelaration 7698  
                                   ??_keeloqDecryptPacket 00E4  
                                            _waitZeroPeak 0196  
                                __end_of_InitWalkAutoTime 9ADC  
                                              _INTCONbits 000FF2  
                                       _aux_in_auto_close 0190  
                                                memcpy@d1 0010  
                                                memcpy@s1 0012  
                          I2C1_SetAddressNackCallback@ptr 0017  
                                      i2c_writeNBytes@dat 0028  
                                      i2c_writeNBytes@len 0025  
                                      i2c_writeNBytes@reg 0022  
                                    _I2C1_MasterGetRxData 9C7E  
                                   _I2C1_MasterSendTxData 9C38  
                                     ??_loadNVM_VarSystem 003B  
                                           sm_restart@psm 0010  
                                  ??_INTERRUPT_Initialize 0010  
                                            _RFFull_12BIT 008A  
                                    _control_limit_switch 0081  
                          __end_of_sm_execute_ControlGate 4392  
                                              Decrypt@aux 0021  
                                              Decrypt@key 001D  
                                          ??_GetOpenOrder 0020  
                                             ??_setRGB_ON 0013  
                             __end_of_ControlCounterMoves 8D72  
                                                intlevel2 0000  
                        actionZone_Opened@securityClosing 0020  
                        actionZone_Closed@securityOpening 0020  
                                __end_of_I2C1_MasterClose 9CA2  
                                    ?_EUSART1_Receive_ISR 0001  
                                  _I2C1_Read1ByteRegister 8C62  
                                 readRFButtons@typeRemote 019C  
                                  ??_getCurrentComparator 001A  
                                  rd2RegCompleteHandler@p 0019  
                                      __end_of_sm_restart 91CA  
                                        ___lldiv@dividend 0010  
                                 ?_PIN_MANAGER_Initialize 0001  
                                  __end_of_ControlCurrent 69A0  
                           I2C1_Read1ByteRegister@address 0023  
                                __end_of_I2C1_MasterStart 9C9A  
                                __end_of_I2C1_MasterWrite 9BF8  
                                   __end_of_write_package 957E  
                                             _tempCounter 02F4  
                  __end_of_EUSART1_SetOverrunErrorHandler 9BBE  
                          _EUSART1_SetOverrunErrorHandler 9BB4  
                                        ??_I2C1_DO_RX_ACK 0010  
                                             _WDTCON0bits 000ED2  
                                             getHopCode@i 0023  
                                 _I2C1_CallbackReturnStop 9C8A  
                            __end_of_EUSART1_Transmit_ISR 94C8  
                                          _confirmpackage 8CBE  
                                      NormalKeyGen@Buffer 0030  
                                                sumHIST@i 0020  
                                         ??_getKeyPressed 0010  
                                           _ControlLights 4392  
                                       ?_InitFullAutoTime 0001  
                                           _ControlInputs 6E72  
                           ?_TMR0_DefaultInterruptHandler 0001  
                                    _I2C1_DO_ADDRESS_NACK 9060  
                                              HopCHK@data 0024  
                                  ?_I2C1_MasterDisableIrq 0001  
                                           ?_getSerialCmd 001B  
                                          _ADC_zero_array 0396  
                               __end_of_loadNVM_VarSystem 6D4A  
                                      ??_InitFullAutoTime 0010  
                   __end_of_keeloq_classic_decrypt_packet 8DCA  
                           _keeloq_classic_decrypt_packet 8D72  
                                   __end_of_OpenFullOrder 97FE  
                                  wr2RegCompleteHandler@p 0019  
          EUSART1_SetFramingErrorHandler@interruptHandler 0010  
                          ?_EUSART1_SetTxInterruptHandler 0010  
                                  ??_verifyProgramingMode 0012  
                                      _eusart1RxLastError 019E  
                                          ?_getTypeRemote 0001  
                                        _cmdMemoryIsEmpty 7E58  
                                      NormalKeyGen@serial 0026  
                                __end_of_I2C1_SetCallback 89B0  
                                             _var_sys_NVM 0098  
                                              _SSP1DATPPS 000EB8  
                                              _SSP1CLKPPS 000EB7  
                                         ??_I2C1_DO_RESET 0010  
                                    WWDT_TimerClear@state 0010  
                                        ___lldiv@quotient 0018  
                                    _I2C1_MasterOperation 95AA  
                                         _TMR0_Initialize 98B6  
                            ??_validateRemoteSerialNumber 00D8  
                                      _checkNVM_VarSystem 5D14  
                                   ?_I2C1_MasterGetRxData 0001  
                           controlSelectRemote@typeRemote 00E3  
                                   __end_of_OpenWalkOrder 8942  
                                            _sumEnergyADC 8006  
                                          _listSyncValues 0300  
                                           setRGB_ON@Freq 0011  
                                     ?_checkNVM_VarSystem 0001  
                                   ??_EUSART1_Receive_ISR 0001  
                          __end_of_PIN_MANAGER_Initialize 7E58  
                                       ??_ADCC_Initialize 0010  
                           __end_of_rd1RegCompleteHandler 96DE  
                                         ??_sm_send_event 0016  
                                        ??_VerifyFollowMe 0010  
                                   __end_of_calculateMean 8B4C  
                                        sm_init@hist_mode 0016  
                                  __end_of_confirmpackage 8D18  
                                         ?_ControlCurrent 0001  
                           __end_of_wr1RegCompleteHandler 970A  
                                   _TMR2_InterruptHandler 02DB  
                                 ??_EUSART1_RxDataHandler 0001  
                                          ?_ControlLights 0001  
                                         _TMR1_Initialize 920E  
                                          ?_ControlInputs 0001  
                                   ?_I2C1_DO_ADDRESS_NACK 0001  
                                          ??_getSerialCmd 001C  
                                           ?_ControlMotor 0001  
                                         _sm_execute_main 335C  
